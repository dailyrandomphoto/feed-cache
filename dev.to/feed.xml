<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>ES6 Cheatsheet 🔥 - All You Need 🚀</title>
      <author>Garvit Motwani</author>
      <pubDate>Thu, 29 Apr 2021 13:30:55 +0000</pubDate>
      <link>https://dev.to/worldindev/es6-cheatsheet-all-you-need-1iaf</link>
      <guid>https://dev.to/worldindev/es6-cheatsheet-all-you-need-1iaf</guid>
      <description>&lt;p&gt;Hey Devs, This is an all you need ES6 cheatsheet for beginners and seasoned developers!&lt;/p&gt;

&lt;p&gt;So let's get started!!&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#giveaway"&gt;
  &lt;/a&gt;
  🎉 Giveaway
&lt;/h2&gt;

&lt;p&gt;We are giving away any course you need on Udemy. Any price any course.&lt;br&gt;
To enter you have to do the following:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;👍 React to this post&lt;/li&gt;
&lt;li&gt;✉️ Subscribe to our &lt;a href="https://worldindev.ck.page"&gt;newsletter&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;



&lt;p&gt;--&amp;gt; Grab the downloadable PDF version &lt;a href="https://worldindev.ck.page"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#block-scoping"&gt;
  &lt;/a&gt;
  Block scoping
&lt;/h3&gt;
&lt;h4&gt;
  &lt;a href="#let"&gt;
  &lt;/a&gt;
  Let
&lt;/h4&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;fn&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="c1"&gt;// only inside this `if`&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h4&gt;
  &lt;a href="#const"&gt;
  &lt;/a&gt;
  Const
&lt;/h4&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;code&gt;let&lt;/code&gt; is the new &lt;code&gt;var&lt;/code&gt;. Constants work just like &lt;code&gt;let&lt;/code&gt;, but can't be reassigned.&lt;br&gt;
Check: &lt;a href="https://babeljs.io/learn-es2015/#let--const"&gt;Let and const&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#backtick-strings"&gt;
  &lt;/a&gt;
  Backtick strings
&lt;/h3&gt;
&lt;h4&gt;
  &lt;a href="#interpolation"&gt;
  &lt;/a&gt;
  Interpolation
&lt;/h4&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`Hello &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h4&gt;
  &lt;a href="#multiline-strings"&gt;
  &lt;/a&gt;
  Multiline strings
&lt;/h4&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`
hello
world
`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Templates and multiline strings.&lt;br&gt;
Check: &lt;a href="https://babeljs.io/learn-es2015/#template-strings"&gt;Template strings&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#binary-and-octal-literals"&gt;
  &lt;/a&gt;
  Binary and octal literals
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;bin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mb"&gt;0b1010010&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;oct&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mo"&gt;0o755&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Check: &lt;a href="https://babeljs.io/learn-es2015/#binary-and-octal-literals"&gt;Binary and octal literals&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#new-methods"&gt;
  &lt;/a&gt;
  New methods
&lt;/h3&gt;
&lt;h4&gt;
  &lt;a href="#new-string-methods"&gt;
  &lt;/a&gt;
  New string methods
&lt;/h4&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hello&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;repeat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hello&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;includes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ll&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hello&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;startsWith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;he&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hello&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;padStart&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// "   hello"&lt;/span&gt;
&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hello&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;padEnd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// "hello   " &lt;/span&gt;
&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hello&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;padEnd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// hello!!!&lt;/span&gt;
&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;&lt;span class="s2"&gt;u1E9B&lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;&lt;span class="s2"&gt;u0323&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;normalize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;NFC&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Check: &lt;a href="https://babeljs.io/learn-es2015/#math--number--string--object-apis"&gt;New methods&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#classes"&gt;
  &lt;/a&gt;
  Classes
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Circle&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Shape&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h4&gt;
  &lt;a href="#constructor"&gt;
  &lt;/a&gt;
  Constructor
&lt;/h4&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="kd"&gt;constructor&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;radius&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;radius&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h4&gt;
  &lt;a href="#methods"&gt;
  &lt;/a&gt;
  Methods
&lt;/h4&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="nx"&gt;getArea&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PI&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;radius&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h4&gt;
  &lt;a href="#calling-superclass-methods"&gt;
  &lt;/a&gt;
  Calling superclass methods
&lt;/h4&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="nx"&gt;expand&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;expand&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PI&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h4&gt;
  &lt;a href="#static-methods"&gt;
  &lt;/a&gt;
  Static methods
&lt;/h4&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="nx"&gt;createFromDiameter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;diameter&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Circle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;diameter&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Syntactic sugar for prototypes.&lt;br&gt;
Check: &lt;a href="https://babeljs.io/learn-es2015/#classes"&gt;Classes&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#exponent-operator"&gt;
  &lt;/a&gt;
  Exponent operator
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;byte&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;
&lt;span class="c1"&gt;// Same as: Math.pow(2, 8)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#promises"&gt;
  &lt;/a&gt;
  Promises
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#making-promises"&gt;
  &lt;/a&gt;
  Making promises
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ok&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;For asynchronous programming.&lt;br&gt;
Check: &lt;a href="https://babeljs.io/learn-es2015/#promises"&gt;Promises&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#using-promises"&gt;
  &lt;/a&gt;
  Using promises
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;promise&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="err"&gt;···&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="err"&gt;···&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#using-promises-with-finally"&gt;
  &lt;/a&gt;
  Using promises with finally
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;promise&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="err"&gt;···&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="err"&gt;···&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;finally&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="c1"&gt;// logic independent of success/error })&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The handler is called when the promise is fulfilled or rejected.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#promise-functions"&gt;
  &lt;/a&gt;
  Promise functions
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;···&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;race&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;···&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;···&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;···&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#asyncawait"&gt;
  &lt;/a&gt;
  Async-await
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;run&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;getUser&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;tweets&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;getTweets&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;tweets&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;code&gt;async&lt;/code&gt; functions are another way of using functions.&lt;/p&gt;

&lt;p&gt;Check: &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function"&gt;async function&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#destructuring"&gt;
  &lt;/a&gt;
  Destructuring
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#destructuring-assignment"&gt;
  &lt;/a&gt;
  Destructuring assignment
&lt;/h3&gt;
&lt;h4&gt;
  &lt;a href="#arrays"&gt;
  &lt;/a&gt;
  Arrays
&lt;/h4&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;first&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;last&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Nikola&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Tesla&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h4&gt;
  &lt;a href="#objects"&gt;
  &lt;/a&gt;
  Objects
&lt;/h4&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;author&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;The Silkworm&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;author&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;R. Galbraith&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Supports for matching arrays and objects.&lt;br&gt;
Check: &lt;a href="https://babeljs.io/learn-es2015/#destructuring"&gt;Destructuring&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#default-values"&gt;
  &lt;/a&gt;
  Default values
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;scores&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;33&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;math&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;sci&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;arts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;scores&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Result:&lt;/span&gt;
&lt;span class="c1"&gt;// math === 22, sci === 33, arts === 50&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Default values can be assigned while destructuring arrays or objects.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#function-arguments"&gt;
  &lt;/a&gt;
  Function arguments
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;greet&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;greeting&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;greeting&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;!`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;greet&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Larry&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;greeting&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Ahoy&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Destructuring of objects and arrays can also be done in function arguments.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#default-values"&gt;
  &lt;/a&gt;
  Default values
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;greet&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Rauno&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{})&lt;/span&gt;&lt;span class="err"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Hi &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;!`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;greet&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;// Hi Rauno!&lt;/span&gt;
&lt;span class="nx"&gt;greet&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Larry&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="c1"&gt;// Hi Larry!&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#reassigning-keys"&gt;
  &lt;/a&gt;
  Reassigning keys
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;printCoordinates&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`x: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;, y: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;printCoordinates&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;90&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This example assigns &lt;code&gt;x&lt;/code&gt; to the value of the &lt;code&gt;left&lt;/code&gt; key.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#loops"&gt;
  &lt;/a&gt;
  Loops
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;artist&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;songs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="err"&gt;···&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The assignment expressions work in loops, too.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#object-destructuring"&gt;
  &lt;/a&gt;
  Object destructuring
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;detail&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;song&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Extract some keys individually and remaining keys in the object using rest (...) operator&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#spread"&gt;
  &lt;/a&gt;
  Spread
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#object-spread"&gt;
  &lt;/a&gt;
  Object spread
&lt;/h3&gt;
&lt;h4&gt;
  &lt;a href="#with-object-spread"&gt;
  &lt;/a&gt;
  with Object spread
&lt;/h4&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;options&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;defaults&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;visible&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h4&gt;
  &lt;a href="#without-object-spread"&gt;
  &lt;/a&gt;
  without Object spread
&lt;/h4&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;options&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;assign&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="p"&gt;{},&lt;/span&gt; &lt;span class="nx"&gt;defaults&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;visible&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The Object spread operator lets you build new objects from other objects.&lt;/p&gt;

&lt;p&gt;Check: &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator"&gt;Object spread&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#array-spread"&gt;
  &lt;/a&gt;
  Array spread
&lt;/h3&gt;
&lt;h4&gt;
  &lt;a href="#with-array-spread"&gt;
  &lt;/a&gt;
  with Array spread
&lt;/h4&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;users&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;admins&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;editors&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;rstacruz&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h4&gt;
  &lt;a href="#without-array-spread"&gt;
  &lt;/a&gt;
  without Array spread
&lt;/h4&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;users&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;admins&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;concat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;editors&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;concat&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;rstacruz&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The spread operator lets you build new arrays in the same way.&lt;/p&gt;

&lt;p&gt;Check: &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator"&gt;Spread operator&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#functions"&gt;
  &lt;/a&gt;
  Functions
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#function-arguments"&gt;
  &lt;/a&gt;
  Function arguments
&lt;/h3&gt;
&lt;h4&gt;
  &lt;a href="#default-arguments"&gt;
  &lt;/a&gt;
  Default arguments
&lt;/h4&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;greet&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Jerry&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`Hello &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h4&gt;
  &lt;a href="#rest-arguments"&gt;
  &lt;/a&gt;
  Rest arguments
&lt;/h4&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;fn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// y is an Array&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h4&gt;
  &lt;a href="#spread"&gt;
  &lt;/a&gt;
  Spread
&lt;/h4&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;fn&lt;/span&gt;&lt;span class="p"&gt;(...[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="c1"&gt;// same as fn(1, 2, 3)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Default, rest, spread.&lt;br&gt;
Check: &lt;a href="https://babeljs.io/learn-es2015/#default--rest--spread"&gt;Function arguments&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#fat-arrows"&gt;
  &lt;/a&gt;
  Fat arrows
&lt;/h3&gt;
&lt;h4&gt;
  &lt;a href="#fat-arrows"&gt;
  &lt;/a&gt;
  Fat arrows
&lt;/h4&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="err"&gt;···&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h4&gt;
  &lt;a href="#with-arguments"&gt;
  &lt;/a&gt;
  With arguments
&lt;/h4&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;readFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;text.txt&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h4&gt;
  &lt;a href="#implicit-return"&gt;
  &lt;/a&gt;
  Implicit return
&lt;/h4&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// No curly braces = implicit return&lt;/span&gt;
&lt;span class="c1"&gt;// Same as: numbers.map(function (n) { return n * 2 })&lt;/span&gt;
&lt;span class="nx"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;result&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="p"&gt;}))&lt;/span&gt;
&lt;span class="c1"&gt;// Implicitly returning objects requires parentheses around the object&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Like functions but with &lt;code&gt;this&lt;/code&gt; preserved.&lt;br&gt;
Check: &lt;a href="https://babeljs.io/learn-es2015/#arrows-and-lexical-this"&gt;Fat arrows&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#objects"&gt;
  &lt;/a&gt;
  Objects
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#shorthand-syntax"&gt;
  &lt;/a&gt;
  Shorthand syntax
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;hello&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;bye&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;// Same as: module.exports = { hello: hello, bye: bye }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Check: &lt;a href="https://babeljs.io/learn-es2015/#enhanced-object-literals"&gt;Object literal enhancements&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#methods"&gt;
  &lt;/a&gt;
  Methods
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;start&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;running&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;// Same as: App = { start: function () {···} }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Check: &lt;a href="https://babeljs.io/learn-es2015/#enhanced-object-literals"&gt;Object literal enhancements&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#getters-and-setters"&gt;
  &lt;/a&gt;
  Getters and setters
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;get&lt;/span&gt; &lt;span class="nx"&gt;closed&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;closed&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="kd"&gt;set&lt;/span&gt; &lt;span class="nx"&gt;closed&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;closed&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;open&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Check: &lt;a href="https://babeljs.io/learn-es2015/#enhanced-object-literals"&gt;Object literal enhancements&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#computed-property-names"&gt;
  &lt;/a&gt;
  Computed property names
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;handlers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;`on&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;// Same as: handlers = { 'onclick': true }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Check: &lt;a href="https://babeljs.io/learn-es2015/#enhanced-object-literals"&gt;Object literal enhancements&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#extract-values"&gt;
  &lt;/a&gt;
  Extract values
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fatherJS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;57&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Brendan Eich&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;values&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fatherJS&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// [57, "Brendan Eich"]&lt;/span&gt;
&lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;entries&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fatherJS&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// [["age", 57], ["name", "Brendan Eich"]]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#modules"&gt;
  &lt;/a&gt;
  Modules
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#imports"&gt;
  &lt;/a&gt;
  Imports
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;helpers&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="c1"&gt;// aka: require('···')&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Express&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="c1"&gt;// aka: const Express = require('···').default || require('···')&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;indent&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;helpers&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="c1"&gt;// aka: const indent = require('···').indent&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;Helpers&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;helpers&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="c1"&gt;// aka: const Helpers = require('···')&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;indentSpaces&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;indent&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;helpers&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="c1"&gt;// aka: const indent = require('···').indentSpaces&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;code&gt;import&lt;/code&gt; is the new &lt;code&gt;require()&lt;/code&gt;.&lt;br&gt;
Check: &lt;a href="https://babeljs.io/learn-es2015/#modules"&gt;Module imports&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#exports"&gt;
  &lt;/a&gt;
  Exports
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="err"&gt;···&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;// aka: module.exports.default = ···&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;mymethod&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="err"&gt;···&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;// aka: module.exports.mymethod = ···&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;pi&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;3.14159&lt;/span&gt;
&lt;span class="c1"&gt;// aka: module.exports.pi = ···&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;code&gt;export&lt;/code&gt; is the new &lt;code&gt;module.exports&lt;/code&gt;.&lt;br&gt;
Check: &lt;a href="https://babeljs.io/learn-es2015/#modules"&gt;Module exports&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#generators"&gt;
  &lt;/a&gt;
  Generators
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#generators"&gt;
  &lt;/a&gt;
  Generators
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;idMaker&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
  &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;gen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;idMaker&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="nx"&gt;gen&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;  &lt;span class="c1"&gt;// → 0&lt;/span&gt;
&lt;span class="nx"&gt;gen&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;  &lt;span class="c1"&gt;// → 1&lt;/span&gt;
&lt;span class="nx"&gt;gen&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;  &lt;span class="c1"&gt;// → 2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;It's complicated.&lt;br&gt;
Check: &lt;a href="https://babeljs.io/learn-es2015/#generators"&gt;Generators&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#forof-iteration"&gt;
  &lt;/a&gt;
  For..of iteration
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;iterable&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="err"&gt;···&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;For iterating through generators and arrays.&lt;br&gt;
Check: &lt;a href="https://babeljs.io/learn-es2015/#iterators--forof"&gt;For..of iteration&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/"&gt;MDN Web Docs&lt;/a&gt;&lt;br&gt;
&lt;a href="//https:/devhints.io/"&gt;DevHints&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.w3schools.com/"&gt;w3schools&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#%EF%B8%8F-giveaway-%EF%B8%8F"&gt;
  &lt;/a&gt;
  ⚡️ Giveaway ⚡️
&lt;/h2&gt;

&lt;p&gt;We are giving away any course you need on Udemy. Any price any course.&lt;br&gt;
Steps to enter the giveaway&lt;br&gt;
--&amp;gt; React to this post&lt;br&gt;
--&amp;gt; Subscribe to our &lt;a href="https://worldindev.ck.page/"&gt;Newsletter&lt;/a&gt; &amp;lt;-- Very important&lt;br&gt;
--&amp;gt; Follow me on &lt;a href="https://twitter.com/garvitmotwani"&gt;Twitter&lt;/a&gt; &amp;lt;-- x2 Chances of winning&lt;/p&gt;

&lt;p&gt;The winner will be announced on May 1, Via Twitter&lt;/p&gt;



&lt;p&gt;Thank you very much for reading this article.&lt;/p&gt;

&lt;p&gt;Comment any tricks &amp;amp; tips you know!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PLEASE LIKE, SHARE, AND COMMENT&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Follow me on &lt;a href="https://dev.to/garvitmotwani"&gt;Dev&lt;/a&gt; and &lt;a href="https://twitter.com/GarvitMotwani"&gt;Twitter&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;Read also:&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/garvitmotwani" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1xnkyVuI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--0F4scheH--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/370225/60416eff-f1ff-4a29-a5c9-2a13df7845c8.jpeg" alt="garvitmotwani image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/garvitmotwani/5-array-methods-you-should-know-22ff" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;5 Array Methods You Should Know 🚀&lt;/h2&gt;
      &lt;h3&gt;Garvit Motwani ・ Apr 27 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;div class="ltag__link"&gt;
  &lt;a href="/devlorenzo" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pCohWvfe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--8B-BJEvg--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_66%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/571015/e3d4ff5f-e11d-4538-bb83-9d3ce3e9dfb9.gif" alt="devlorenzo image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/worldindev/400-javascript-interview-questions-with-answers-2fcj" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;400+ JavaScript Interview Questions 🎓  With Answers 🌠&lt;/h2&gt;
      &lt;h3&gt;DevLorenzo ・ Apr 27 ・ 181 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#career&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#productivity&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;div class="ltag__link"&gt;
  &lt;a href="/daniel1404" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YKr9I-E---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--hBgYP-SM--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/547275/e6dab600-34b7-49e0-a884-eb975de66405.png" alt="daniel1404 image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/worldindev/6-python-tips-tricks-that-no-one-teaches-4j73" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;6 Python Tips &amp;amp; Tricks that no One Teaches 🚀🐍&lt;/h2&gt;
      &lt;h3&gt;Daniel Diaz ・ Apr 26 ・ 5 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#python&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;Subscribe to our &lt;a href="https://chipper-motivator-3112.ck.page/05710ea3d3"&gt;newsletter&lt;/a&gt; to receive our weekly recap directly on your email!&lt;/p&gt;

&lt;p&gt;Join us on &lt;a href="https://discord.gg/aWS2YKk6"&gt;Discord&lt;/a&gt; to participate in hackathons with us / participate in our giveaways!&lt;/p&gt;

&lt;p&gt;Thanks for reading!!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>webdev</category>
      <category>cheatsheet</category>
    </item>
    <item>
      <title>What Advice Would You Give to Your Younger Self? </title>
      <author>Anastasia 🏄🏻‍♀️</author>
      <pubDate>Thu, 29 Apr 2021 12:42:46 +0000</pubDate>
      <link>https://dev.to/coffeestasia/what-advice-would-you-give-to-your-younger-self-2obp</link>
      <guid>https://dev.to/coffeestasia/what-advice-would-you-give-to-your-younger-self-2obp</guid>
      <description>&lt;p&gt;Imagine that you traveled back in time and met your younger self, taking the first steps towards a dev career. What advice would you give to your younger self? &lt;/p&gt;

</description>
      <category>career</category>
      <category>productivity</category>
      <category>100daysofcode</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Using MongoDB with Pandas, NumPy, and Arrow</title>
      <author>rachelle palmer</author>
      <pubDate>Thu, 29 Apr 2021 12:41:23 +0000</pubDate>
      <link>https://dev.to/techbelle/using-mongodb-with-pandas-numpy-and-arrow-3h5o</link>
      <guid>https://dev.to/techbelle/using-mongodb-with-pandas-numpy-and-arrow-3h5o</guid>
      <description>&lt;p&gt;&lt;strong&gt;TLDR&lt;/strong&gt;: Today the Python devteam at MongoDB is thrilled (stoked!) to announce the beta release of PyMongoArrow, a PyPi package supporting CPython 3.6+. This release adds several new APIs that will be of interest to developers who use NumPy, Pandas or Apache Arrow-based frameworks to analyze data stored in MongoDB. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Review, contribute, or fork the &lt;a href="https://github.com/mongodb-labs/mongo-arrow"&gt;code&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;Read the &lt;a href="https://mongo-arrow.readthedocs.io/en/latest/index.html"&gt;docs&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;--&lt;/p&gt;

&lt;p&gt;As the name suggests, PyMongoArrow leverages Apache Arrow to offer fast and easy conversion of MongoDB query result sets to multiple numerical data formats popular among Python developers including NumPy ndarrays and Pandas DataFrames. &lt;/p&gt;

&lt;p&gt;As reference points for our implementation, we also took a look at &lt;a href="https://pandas-gbq.readthedocs.io/en/latest/api.html#pandas_gbq.read_gbq"&gt;BigQuery’s Pandas integration&lt;/a&gt;, pandas methods to handle JSON/semi-structured data, the &lt;a href="https://docs.snowflake.com/en/user-guide/python-connector-api.html"&gt;Snowflake Python connector&lt;/a&gt;, and &lt;a href="https://docs.dask.org/en/latest/dataframe.html"&gt;Dask.DataFrame&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#how-it-works"&gt;
  &lt;/a&gt;
  How it Works
&lt;/h1&gt;

&lt;p&gt;PyMongoArrow relies upon a user-specified data schema to marshall query result sets into tabular form. Users can define the schema by instantiating &lt;code&gt;pymongoarrow.api.Schema&lt;/code&gt; using a mapping of field names to type-specifiers, e.g.:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;from pymongoarrow.api import Schema
schema = Schema({'_id': int, 'amount': float, 'last_updated': datetime})
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There are multiple permissible type-identifiers for each supported BSON type. For a full-list of supported types and associated type-identifiers, see &lt;a href="https://mongo-arrow.readthedocs.io/en/latest/supported_types.html"&gt;here&lt;/a&gt;. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#give-it-a-try"&gt;
  &lt;/a&gt;
  Give it a Try
&lt;/h1&gt;

&lt;p&gt;You can install PyMongoArrow on your local machine using Pip: &lt;code&gt;$ python -m pip install pymongoarrow&lt;/code&gt; &lt;/p&gt;

&lt;p&gt;or utilize it with &lt;a href="https://www.mongodb.com/cloud"&gt;mongodb atlas&lt;/a&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ python -m pip install pymongoarrow
$ python -m pip install pymongo[srv]&amp;gt;=3.11,&amp;lt;4
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;(to use PyMongoArrow with MongoDB Atlas’ mongodb+srv:// URIs users must install PyMongo with the srv extra in addition to installing PyMongoArrow).&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#quick-examples-of-how-it-works"&gt;
  &lt;/a&gt;
  Quick Examples of How it Works
&lt;/h1&gt;

&lt;p&gt;to run a find operation to load all records with a non-zero amount as a:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;pandas.DataFrame&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;df = client.db.data.find_pandas_all({'amount': {'$gt': 0}}, schema=schema)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;numpy.ndarray&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;ndarrays = client.db.data.find_numpy_all({'amount': {'$gt': 0}}, schema=schema)&lt;/code&gt;&lt;br&gt;
in this case, the return value is a dictionary where the keys are filed names and values are the corresponding arrays.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;pyarrow.Table&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;arrow_table = client.db.data.find_arrow_all({'amount': {'$gt': 0}}, schema=schema)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Developers who create an Arrow table directly can then utilize some of Arrow’s other capabilities, for example, serializing data and sending it to workers (as in a Dask workflow), or use pyArrow’s APIs to write a queried dataset to Parquet format, csv, or many other PyPi packages that operate on Arrow formatted data. For example, to write the table referenced by the variable arrow_table to a Parquet file example.parquet, you'd run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import pyarrow.parquet as pq
pq.write_table(arrow_table, 'example.parquet')
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Other items of Note:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Originally, we intended to build a new API that worked exclusively with Pandas, however Pandas did not provide a stable C-API that we could use. Meanwhile, we sort of fell in love with &lt;a href="https://arrow.apache.org/"&gt;Apache Arrow&lt;/a&gt;. The Apache Arrow project has a set of standards to address long standing inefficiencies in the processing and transport of large datasets in high-performance applications. Conversion of arrow tables to varies formats was simple and fast. Since Arrow is a language independent standard, our Arrow integration will make it easier for developers to move data from Mongodb into a wide variety of OLAP systems. &lt;/li&gt;
&lt;li&gt;Currently we are only distributing pre-built binaries for x86_64 architectures, but we are planning to add more soon. Please feel free to express your preference on github!&lt;/li&gt;
&lt;li&gt;This library is in the early stages of development, and so it's possible the API may change in the future - we definitely want to continue expanding it.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Photo credit: &lt;a href="https://unsplash.com/@ltmonster?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;shiyang xu&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/panda?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

</description>
      <category>mongodb</category>
      <category>datascience</category>
      <category>pandas</category>
      <category>numpy</category>
    </item>
    <item>
      <title>3 Single-Tasking Tips to Improve Your Focus</title>
      <author>Kristi Anderson</author>
      <pubDate>Thu, 29 Apr 2021 12:41:03 +0000</pubDate>
      <link>https://dev.to/kristimke/3-single-tasking-tips-to-improve-your-focus-22k5</link>
      <guid>https://dev.to/kristimke/3-single-tasking-tips-to-improve-your-focus-22k5</guid>
      <description>&lt;p&gt;You sit down at your desk to compile a report and within a few minutes you have checked your email, scheduled a doctor's appointment, and have Netflix going in the background. Our environments and priorities are constantly pulling us in different directions. With so much to juggle, it feels as if the only way we can get everything done is to multitask.&lt;/p&gt;

&lt;p&gt;Right?&lt;/p&gt;

&lt;p&gt;Well, not exactly. While we may think that multitasking is a skill we can master, science says otherwise. The message is becoming more prevalent: &lt;a href="https://buffer.com/resources/single-tasking/"&gt;your brain performs best&lt;/a&gt; when it focuses on only one thing at a time. This practice is known as "&lt;a href="https://www.forbes.com/sites/nextavenue/2013/05/08/why-single-tasking-makes-you-smarter/?sh=6a3291175063"&gt;single-tasking&lt;/a&gt;", and it's a great way to work more efficiently.&lt;/p&gt;

&lt;p&gt;In this article, we'll share &lt;a href="https://reclaim.ai/blog/single-tasking?utm_source=devto&amp;amp;utm_medium=blog-published&amp;amp;utm_campaign=single-tasking"&gt;three powerful single-tasking methods&lt;/a&gt; to break away from your multitasking mentality and regain your focus.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#multitasking-comes-at-a-cost"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Multitasking comes at a cost&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;As many of us have shifted to working remotely in an era where the average home has &lt;a href="https://www.statista.com/statistics/1107206/average-number-of-connected-devices-us-house/"&gt;more than 10 connected devices&lt;/a&gt;, it's becoming increasingly difficult to stay focused on a single task while the digital world competes for our attention. We think that we can easily shift gears or multitask -- without realizing that this negatively impacts our ability to get things done.&lt;/p&gt;

&lt;p&gt;According to one report,&lt;a href="https://link.springer.com/article/10.3758/PBR.17.4.479"&gt; only 2.5% of people&lt;/a&gt; can multitask effectively. Everyone else faces some performance deficit when trying to multitask, where they're constantly switching from one thing to another. The result is that tasks actually take *longer *and are more prone to errors.&lt;/p&gt;

&lt;p&gt;Researchers call this performance deficit a "&lt;a href="https://www.apa.org/research/action/multitask"&gt;switch cost&lt;/a&gt;," and the results are typically unavoidable. Think of the brain as a computer with a certain amount of processing power. When we switch tasks, the brain requires extra processing power to bring forward the information needed for the new task. And, like a computer, the more you ask it to&lt;a href="https://www.psychologicalscience.org/observer/cognitive-crossroads-jonathan-d-cohen-tackles-the-mysteries-of-multitasking"&gt; process at one time&lt;/a&gt;, the worse its performance.&lt;/p&gt;

&lt;p&gt;Studies have&lt;a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC7075496/"&gt; further shown&lt;/a&gt; that multitasking in everyday life can affect sustained attention and long-term memory. We need to recognize that multitasking isn't only bad for the task at hand but also has lasting impacts on how well the brain can do its job.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#make-the-change-to-singletasking"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Make the change to single-tasking&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Single-tasking is, as you probably guessed, focusing only on one task at a time. If multitasking causes us to perform poorly, then, by contrast, we can improve our work's quality and efficiency by single-tasking.&lt;/p&gt;

&lt;p&gt;Even as we come to accept that multitasking is harmful to our brains, "un-learning" this behavior can be a challenge. Making the shift to single-tasking takes some effort and practice, but you can incorporate some simple things into your day to reframe your thinking toward single-tasking.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-set-due-dates-and-block-time-for-longer-tasks"&gt;
  &lt;/a&gt;
  &lt;strong&gt;1. Set due dates and block time for longer tasks&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Setting due dates for your tasks is as simple as taking your to-do list, prioritizing it, and clearly identifying when you will get the work done. Rather than having an endless to-do list that isn't reflected in your schedule, this practice forces you to commit to completing work by a certain date -- and has the added benefit of creating awareness around your week's capacity.&lt;/p&gt;

&lt;p&gt;For example, your to-do list may include longer, more intensive and strategic tasks like "writing a strategy doc" or "submitting Q4 financials". It may also include a ton of little tasks, like "respond to an email from Fred" or "review PRs in Github". In this example, you'd want to block time for your most important and time-consuming tasks -- the ones that will often take a lot of your energy and cognitive capacity -- so that your week doesn't end up being a scattered mess of activities.&lt;/p&gt;

&lt;p&gt;In order to avoid another frenzied day of multitasking, start by assigning a due date to the tasks that you know are going to take awhile. Anything longer than an hour would fall into this category. Then, &lt;a href="http://reclaim.ai/features/tasks"&gt;block time for those tasks&lt;/a&gt; on your calendar based on when they need to be completed. Don't confuse the due date with the date the task needs to be scheduled! If you need six hours to write an important document by Friday, it doesn't do you much good to have the time blocked on Friday afternoon.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Qr1SYUjb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://assets.website-files.com/5ed945986aedf80ff9c4bfd8/608995cdeada3a254a8c2a73_eRruLdtBF0J8ooXO_CXggFvj7CcGlAB8TUT9Ojnd_kLj1oG2nZbZAM0IixgGLs3pLCnpjw1fDwswsbDu4xqAmxuVI4ugJ779glvBqX2T3i8d25nNFBdUPLXiJUdnxHbmr61c0Gna.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Qr1SYUjb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://assets.website-files.com/5ed945986aedf80ff9c4bfd8/608995cdeada3a254a8c2a73_eRruLdtBF0J8ooXO_CXggFvj7CcGlAB8TUT9Ojnd_kLj1oG2nZbZAM0IixgGLs3pLCnpjw1fDwswsbDu4xqAmxuVI4ugJ779glvBqX2T3i8d25nNFBdUPLXiJUdnxHbmr61c0Gna.png" alt=""&gt;&lt;/a&gt;&lt;br&gt;
‍&lt;/p&gt;

&lt;p&gt;It's important to give yourself enough cushion to move tasks around as necessary as well as to take breaks and check off some of those smaller tasks we mentioned above. Something more important may come up that forces you to reprioritize your task's due date. Or, a task may take longer than you initially thought, which may mean you won't be able to get through all of your tasks due that day. Allow yourself the flexibility to&lt;a href="https://reclaim.ai/features/tasks"&gt; move things as needed&lt;/a&gt; on your calendar.&lt;/p&gt;

&lt;p&gt;Lastly, because longer tasks tend to be more cognitively demanding, it's important to set time aside for them during the periods of your day where you're most productive and "locked in". So if you're not a morning person, don't block time for writing that lengthy strategy document at 6am. Instead, use that time for the things that aren't going to demand as much of your energy.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-set-aside-dedicated-time-for-the-small-stuff"&gt;
  &lt;/a&gt;
  &lt;strong&gt;2. Set aside dedicated time for the small stuff&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Blocking time for specific tasks that you know are going to take awhile is a great way to stay focused on one big thing at a time. But what about all the other little things that you need to get done each day? How do you incorporate those into your week without losing focus on what matters?&lt;/p&gt;

&lt;p&gt;The answer is so simple, it might shock you: &lt;a href="http://reclaim.ai/features/habits"&gt;create a routine&lt;/a&gt; that you can stick to every day where you batch all of your "microtasks" into one time block. Instead of earmarking time for every little thing -- or distracting yourself from your core work as new pebbles come in -- you just set aside a single block of recurring time for it.&lt;/p&gt;

&lt;p&gt;This approach has two big advantages:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; It lets you stay focused on your lengthier, more strategic tasks because you know you've got dedicated time set aside to work on the small stuff.&lt;/li&gt;
&lt;li&gt; It lets you organize your small tasks into themes. For example, you could have a routine for "Emails + Slack" where you check your email and chat notifications, another routine called "Customer support" where you spend time responding to customer requests, and so on.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dR8u9kh6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://assets.website-files.com/5ed945986aedf80ff9c4bfd8/608995cd13ab4b57ad0adc12_ANiR4BmVGUe0m2pXC5F9g5MC0XHNNjo5Ns5EtbpuoiEMD-xpje75WrV2QjSqlWWSaysFimRgAt-iu8NEHT6ojlFF_cju-quGvbK4z_hMOX6O0WvgglUoF9CezWnRug8i8RB9UEGY.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dR8u9kh6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://assets.website-files.com/5ed945986aedf80ff9c4bfd8/608995cd13ab4b57ad0adc12_ANiR4BmVGUe0m2pXC5F9g5MC0XHNNjo5Ns5EtbpuoiEMD-xpje75WrV2QjSqlWWSaysFimRgAt-iu8NEHT6ojlFF_cju-quGvbK4z_hMOX6O0WvgglUoF9CezWnRug8i8RB9UEGY.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;‍&lt;/p&gt;

&lt;p&gt;The key here is to optimize your routines for smaller tasks around when you're &lt;em&gt;least&lt;/em&gt; productive and energized. It's a bit unintuitive, but essentially what you're doing is confining your low-cognition tasks to the period of the day where you feel least motivated, and reserving your energy for the more important and demanding to-dos. Not only does this allow you to focus your productivity around your most important tasks, but it also ensures that you get to feel a sense of accomplishment during your less energetic moments.&lt;/p&gt;

&lt;p&gt;Just as you need to keep your time blocks for important tasks flexible, you also need to do the same thing for your "microtask" routines. You should have a rough sense of when you want to have the routines happen each day, but with your schedule constantly changing it can be difficult to stick to exact times. Creating &lt;a href="http://reclaim.ai/features/habits"&gt;flexible routines on your calendar&lt;/a&gt; for your smaller task work enables you to get the time you need for the little things without having to feel boxed in by your schedule.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-stick-to-your-plan-if-possible"&gt;
  &lt;/a&gt;
  &lt;strong&gt;3. Stick to your plan (if possible)&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.prnewswire.com/news-releases/over-commitment-epidemic-3-out-of-5-people-say-they-cant-possibly-get-everything-done-on-their-to-do-list-300782549.html"&gt;A study found&lt;/a&gt; that 3 out of 5 people have more tasks on their to-do lists than they can possibly accomplish. Between wanting to be helpful or a tendency to jump in and fix problems, "yes" can often be the first response out of our mouths.&lt;/p&gt;

&lt;p&gt;It's understandable that we want to say Yes to everything that comes our way. We want to feel useful in our jobs, and it's our natural tendency to help others where we can. It's also sometimes simply not an option to say No. A meeting with your CEO, a Slack message from a valued team member who tells you they're thinking about leaving the company, or an email about a project that is going off the rails -- all of these kinds of things rightfully steal our focus.&lt;/p&gt;

&lt;p&gt;But those Yeses can add up quickly, and more often than not results in you straying from your core plan. A few meetings here and there start to eat away at your strategic single-task time, or rob you of the routines that you need in order to keep your head afloat. Suddenly you're doing the important work in the evenings and on weekends, or catching up on your email instead of spending time with your loved ones.&lt;/p&gt;

&lt;p&gt;It's imperative to find the balance between being flexible and being (politely) defensive of your time. Without that balance, everything quickly rises to the top of your priority list -- and if everything is a top priority, nothing is a top priority.&lt;/p&gt;

&lt;p&gt;Here are some questions to ask yourself any time you're finding yourself attracted to saying Yes to a distraction or shift in your ideal plan for the week:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Is this more important than the &lt;em&gt;most&lt;/em&gt; important thing I was planning to do today?&lt;/li&gt;
&lt;li&gt;  Am I the &lt;em&gt;only person&lt;/em&gt; who can help with this?&lt;/li&gt;
&lt;li&gt;  Is the cost of declining this distraction &lt;em&gt;higher or lower&lt;/em&gt; than the cost of accepting it?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And, remember that declining things doesn't make you a bad person. In fact, &lt;a href="https://reclaim.ai/blog/how-to-fix-your-calendar"&gt;if you do it right&lt;/a&gt;, declining things can actually have a positive effect on you and your organization: it lets you focus on the stuff that really matters, &lt;em&gt;and&lt;/em&gt; it illustrates to other people that it's OK to defend the time you need to get the important things done.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#retrain-your-brain-and-regain-your-focus"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Retrain your brain and regain your focus&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Maybe you're still skeptical about single-tasking after reading this article. Maybe you even checked your email several times in-between reading it!&lt;/p&gt;

&lt;p&gt;Let's try this for a week: go through your to-do list, find the 3-5 most important things that you want to get done, and &lt;a href="http://reclaim.ai/features/tasks"&gt;block time for them&lt;/a&gt;. Then create a couple &lt;a href="http://reclaim.ai/features/habits"&gt;flexible routines&lt;/a&gt; to fit in the smaller stuff. At the end of the week, see how you feel.&lt;/p&gt;

&lt;p&gt;We think you'll find that your workweeks are happier, more productive, and more evenly energized the less you engage in multitasking. By starting with these single-tasking tips to&lt;a href="https://reclaim.ai/"&gt; manage your calendar&lt;/a&gt;, you can build up your ability to single-task over time.&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>ai</category>
      <category>culture</category>
      <category>leadership</category>
    </item>
    <item>
      <title>The equivalent of componentWillMount using React hooks</title>
      <author>Martin Stark</author>
      <pubDate>Thu, 29 Apr 2021 12:29:48 +0000</pubDate>
      <link>https://dev.to/video/the-equivalent-of-componentwillmount-using-react-hooks-11em</link>
      <guid>https://dev.to/video/the-equivalent-of-componentwillmount-using-react-hooks-11em</guid>
      <description>&lt;h2&gt;
  &lt;a href="#given-that"&gt;
  &lt;/a&gt;
  Given that
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;the goal is to execute some code once, before the ui is updated&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;componentWillMount&lt;/code&gt; is deprecated (&lt;a href="https://reactjs.org/docs/react-component.html#unsafe_componentwillmount"&gt;1&lt;/a&gt;, &lt;a href="https://stackoverflow.com/questions/49206280/componentwillmount-is-deprecated-and-will-be-removed-in-the-next-major-version-0/49213753#49213753"&gt;2&lt;/a&gt;, &lt;a href="https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html"&gt;3&lt;/a&gt;), and that the suggested replacement is executing code in the &lt;code&gt;constructor&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;code executed before the return statement of a functional component is implicitly run before rendering it&lt;/li&gt;
&lt;li&gt;the rough equivalent of mounting a class component is the initial call of a functional component&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#the-solution-would-be"&gt;
  &lt;/a&gt;
  The solution would be
&lt;/h2&gt;

&lt;p&gt;Calling a function in the body of the functional component once. This can potentially be achieved with &lt;code&gt;useState&lt;/code&gt;, &lt;code&gt;useMemo&lt;/code&gt;, or &lt;code&gt;useEffect&lt;/code&gt;, depending on the timing required for the use case.&lt;/p&gt;

&lt;p&gt;Since the code needs to run before the initial render is committed to the screen, this disqualifies &lt;code&gt;useEffect&lt;/code&gt;, as “The function passed to useEffect will run after the render is committed to the screen.” &lt;a href="https://reactjs.org/docs/hooks-reference.html#useeffect"&gt;4&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Since we want to guarantee that the code will only run once, this disqualifies &lt;code&gt;useMemo&lt;/code&gt;, as "In the future, React may choose to “forget” some previously memoized values and recalculate them on next render" &lt;a href="https://reactjs.org/docs/hooks-reference.html#usememo"&gt;5&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;useState&lt;/code&gt; supports &lt;a href="https://reactjs.org/docs/hooks-reference.html#lazy-initial-state"&gt;lazy initial state&lt;/a&gt; calculations that are guaranteed to only run once during the initial render, which seems like a good candidate for the job.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#example-with-usestate"&gt;
  &lt;/a&gt;
  Example with useState:
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const runOnceBeforeRender = () =&amp;gt; {};

const Component = () =&amp;gt; {
  useState(runOnceBeforeRender);

  return (&amp;lt;&amp;gt;&amp;lt;/&amp;gt;);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#as-a-custom-hook"&gt;
  &lt;/a&gt;
  As a custom hook:
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const runOnceBeforeRender = () =&amp;gt; {};

const useOnInitialRender = (fn) =&amp;gt; {
  useState(fn);
}

const Component = () =&amp;gt; {
  useOnInitialRender(fn);

  return (&amp;lt;&amp;gt;&amp;lt;/&amp;gt;);
};
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;runOnceBeforeRender&lt;/code&gt; function can optionally return a state that will be available immediately upon the first render of the function, triggering no re-renders.&lt;/p&gt;

&lt;p&gt;See &lt;a href="https://www.npmjs.com/package/@martinstark/use-once"&gt;use-once&lt;/a&gt; on npm.&lt;/p&gt;

</description>
      <category>react</category>
      <category>hooks</category>
      <category>componentwillmount</category>
      <category>functional</category>
    </item>
    <item>
      <title>Migrating to Serverless and making it work post-transition</title>
      <author>Taavi Rehemägi</author>
      <pubDate>Thu, 29 Apr 2021 12:27:09 +0000</pubDate>
      <link>https://dev.to/dashbird/migrating-to-serverless-and-making-it-work-post-transition-1ail</link>
      <guid>https://dev.to/dashbird/migrating-to-serverless-and-making-it-work-post-transition-1ail</guid>
      <description>&lt;p&gt;&lt;em&gt;In this article, we'll be taking you through the steps and what to bear in mind in each stage of migrating to serverless -- from preparation to migration and post-transition.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-could-spectrum"&gt;
  &lt;/a&gt;
  The Could Spectrum
&lt;/h2&gt;

&lt;p&gt;To understand more easily the wider context of &lt;strong&gt;migrating legacy systems into a serverless form&lt;/strong&gt;, we should first understand the &lt;strong&gt;cloud spectrum&lt;/strong&gt;.This spectrum ranges from &lt;strong&gt;on-premises workloads&lt;/strong&gt; to &lt;strong&gt;virtual machines, containers,&lt;/strong&gt; and &lt;strong&gt;cloud functions&lt;/strong&gt;. Serverless typically falls within the cloud functions area, as &lt;a href="https://dashbird.io/blog/what-is-faas-function-as-a-service/"&gt;function as a service (FaaS)&lt;/a&gt;, but now it's an umbrella term growing to include &lt;strong&gt;back-end as a service&lt;/strong&gt; (BaaS), such as fully managed databases.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The first thing when looking at &lt;strong&gt;legacy transitions&lt;/strong&gt; is &lt;strong&gt;understanding where you are on the cloud spectrum&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Despite being four or five years old, we are starting to get into a cycle where &lt;strong&gt;even serverless apps are becoming legacy systems &lt;/strong&gt;as well. Anybody that writes &lt;strong&gt;Node.js&lt;/strong&gt; knows that if you make no updates for two years, &lt;strong&gt;you're going to have dependencies breaking all over the place&lt;/strong&gt;. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#your-serverless-experience"&gt;
  &lt;/a&gt;
  Your serverless experience
&lt;/h2&gt;

&lt;p&gt;The next question to ask is: &lt;strong&gt;does your team already have serverless experience?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;There are two different routes here:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; &lt;strong&gt;Yes&lt;/strong&gt; -- We already have serverless experience, we already have cloud experience. In this case, you &lt;strong&gt;need to identify the key team members&lt;/strong&gt; who can help &lt;strong&gt;drive and evangelize the serverless migration&lt;/strong&gt;, including training, pattern development, and so on. The engineering hours involved in the transition can all be streamlined by having the patterns, the documentation and the training.&lt;/li&gt;
&lt;li&gt; &lt;strong&gt;No&lt;/strong&gt; -- If you don't have that serverless or cloud experience internally, you would benefit from &lt;strong&gt;finding a consulting partner that specializes in serverless migrations&lt;/strong&gt; (such as &lt;a href="https://www.serverlessguru.com/"&gt;Serverless Guru&lt;/a&gt; or &lt;a href="https://www.theodo.co.uk/"&gt;Theodo&lt;/a&gt;) or serverless adoption to help retrain and retool existing employees and help them grow.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#the-serverless-acceleration-team"&gt;
  &lt;/a&gt;
  The serverless acceleration team
&lt;/h2&gt;

&lt;p&gt;Following this, you would &lt;strong&gt;need to develop the serverless acceleration team&lt;/strong&gt;. This would be a working group that will help accelerate the rest of your organization, which will focus on:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  building &lt;strong&gt;reusable infrastructure as code&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;  practices around &lt;strong&gt;building serverless apps&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;processes around development workflow&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#drawing-service-boundaries"&gt;
  &lt;/a&gt;
  Drawing service boundaries
&lt;/h2&gt;

&lt;p&gt;Next, you need to &lt;strong&gt;identify a &lt;a href="https://dashbird.io/blog/5-popular-use-cases-for-going-serverless/"&gt;common service or use case&lt;/a&gt;&lt;/strong&gt;. For that, you can ask the following question: &lt;strong&gt;what service represents 80% to 90% of how other services are built in the legacy system?&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;Let's take a &lt;strong&gt;monolithic API&lt;/strong&gt; as an example. If we have 100 endpoints and 10 of them are related to account and 10 of them are related to users and 10 of them are related to feeds, we can draw three service boundaries there. We could find that the APIs that are being done 100 times, one of them looks the same as the rest of the 100. With these service boundaries, we can &lt;strong&gt;start chunking this migration up into pieces&lt;/strong&gt;. That makes it easier to migrate!&lt;/p&gt;

&lt;p&gt;If we develop a pattern for one service boundary and it's composed of 10 endpoints and there's nine more of those services that all have 10 endpoints each, we know that if we can develop one, we can reuse it across the rest of them. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#documenting-the-migration-process"&gt;
  &lt;/a&gt;
  Documenting the migration process
&lt;/h2&gt;

&lt;p&gt;To &lt;strong&gt;ensure that the migration is not done in isolation&lt;/strong&gt; by the group of people responsible for the transition, we need to &lt;strong&gt;document the entire service migration process&lt;/strong&gt; and the &lt;strong&gt;nuances of how the teams build services&lt;/strong&gt;. Using that knowledge, you can*&lt;em&gt; improve&lt;/em&gt;&lt;em&gt; training material, and then use the service migration to &lt;/em&gt;&lt;em&gt;describe the benefits&lt;/em&gt;* for further leadership buy-in.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#training-and-retooling"&gt;
  &lt;/a&gt;
  Training and retooling
&lt;/h2&gt;

&lt;p&gt;Once 80% to 90% of the services get migrated, we need to look at &lt;strong&gt;training and retooling&lt;/strong&gt;. The rest of the developers on the team will need to go through training to be &lt;strong&gt;effective&lt;/strong&gt; in this new environment. The training can start simply with &lt;strong&gt;tool training&lt;/strong&gt;, which would entail &lt;strong&gt;infrastructure as code frameworks&lt;/strong&gt; or &lt;strong&gt;other serverless tools&lt;/strong&gt;, &lt;a href="https://dashbird.io/"&gt;Dashbird&lt;/a&gt; being one of them or &lt;a href="https://dashbird.io/blog/debug-test-ci-cd-pipeline/"&gt;CI/CD pipelines&lt;/a&gt;. Beyond tooling, we're going to &lt;strong&gt;familiarize developers with common commands&lt;/strong&gt;, demonstrate service &lt;strong&gt;development workflow&lt;/strong&gt;, &lt;strong&gt;testing&lt;/strong&gt; and &lt;strong&gt;&lt;a href="https://dashbird.io/serverless-observability/"&gt;monitoring&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dashbird.io/serverless-observability/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5iOvCkUw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mk0dashbirdioprthk8x.kinstacdn.com/wp-content/uploads/2020/09/general-1024x190.png" alt="Serverless monitoring"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For &lt;strong&gt;pattern training&lt;/strong&gt;, we will need to do a &lt;strong&gt;line-by-line review&lt;/strong&gt;. Having migrated that common service, developers can learn high-level, 'hello world' type of applications. For example, building an AppSync API, a GraphQL API, or a REST API with AWS with serverless. &lt;/p&gt;

&lt;p&gt;But that doesn't go deep enough. When we're &lt;strong&gt;migrating a legacy system to serverless&lt;/strong&gt; we must go as deep as possible to actually &lt;strong&gt;make the application work&lt;/strong&gt;. As it's not a completely greenfield application, we have to map things over. This line-by-line review would present &lt;strong&gt;how the pattern is built&lt;/strong&gt; with the &lt;strong&gt;infrastructure-as-code&lt;/strong&gt; plus &lt;strong&gt;other components&lt;/strong&gt;, and explaining why things were built in a specific way. &lt;/p&gt;

&lt;p&gt;At this point, it's important to establish a &lt;strong&gt;standard for the team to follow&lt;/strong&gt; in terms of naming conventions, organizational projects, mono, and multiple repositories so that the developers would be able to &lt;strong&gt;replicate the pattern themselves&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#templates"&gt;
  &lt;/a&gt;
  Templates
&lt;/h2&gt;

&lt;p&gt;Creating a new VPC environment from the ground up, and then maybe even the automation, would take 40 to 50 hours the first time you do it. But afterward, if you want to modify it and you want to spin up new VPCs, it only takes &lt;strong&gt;as long as the CI/CD takes to run&lt;/strong&gt;. This would end up &lt;strong&gt;saving that entire 49 hours a time&lt;/strong&gt; because you have those templates in place.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Templating is a very important piece of serverless.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://www.serverlessguru.com/"&gt;Serverless Guru&lt;/a&gt; have created some VPC templates that would save the initial 50 hours of work required to set up the environments yourself.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-selfsufficient-teams"&gt;
  &lt;/a&gt;
  Creating self-sufficient teams
&lt;/h2&gt;

&lt;p&gt;This migration approach we laid out is &lt;strong&gt;fairly slow&lt;/strong&gt;. Why did we propose this slower approach, focusing on assessments, documentation, training, all these things? So that once these are established, &lt;strong&gt;we can then move quickly&lt;/strong&gt;. The development teams will be able to &lt;strong&gt;pick up services in parallel to migrate them&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Although the developers got the &lt;strong&gt;basic pattern training&lt;/strong&gt;, we can start getting into details, such as 'How do I connect this queue to this Lambda to this DynamoDB stream and make sure that it's efficient, performant, and know all the different layers of that?'. That part is not going to be able to be covered with the basic training. So, we do our best to create a general training to map out 80%, 90% of the service, but that other 10% can be quite a large list. During this process, the development team will hit barriers and roadblocks. The serverless acceleration team will have to provide &lt;strong&gt;ongoing support&lt;/strong&gt; and also &lt;strong&gt;identify areas for improvement&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;For edge case pattern development and training, as the developers are working, migrating things, they identify opportunities such as , 'When we use this SQS FIFO queue, it's not processing fast enough because it only processes it one at a time based on how we set it.' The developers can decide to &lt;strong&gt;create a pattern&lt;/strong&gt; around how to use SQS FIFO properly so that later on they &lt;strong&gt;don't have additional production issues&lt;/strong&gt; happen that are causing delays. &lt;/p&gt;

&lt;p&gt;These patterns can be shared with the entire development team, ensuring &lt;strong&gt;optimal knowledge reuse&lt;/strong&gt; and even an &lt;strong&gt;internal serverless best practices playbook&lt;/strong&gt;. With that best practices playbook, the developers can start writing that stuff down, documenting it, and it can now be used for &lt;strong&gt;onboarding new developers&lt;/strong&gt; and also as an &lt;strong&gt;auditing tool&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;Upon successfully &lt;strong&gt;completing the migration from legacy to serverless&lt;/strong&gt;, we have a working service. However, we don't consider the project done until &lt;strong&gt;all the developers know what they're doing&lt;/strong&gt;. Even a consulting company, such as Serverless Guru, the transition process should always be about bringing the entire team along. Ultimately, we want the developers at the company to &lt;strong&gt;independently build new services&lt;/strong&gt; &lt;strong&gt;without having to rely on the consulting company at all&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#culture-shifts"&gt;
  &lt;/a&gt;
  Culture shifts
&lt;/h2&gt;

&lt;p&gt;To fully &lt;strong&gt;internalize serverless&lt;/strong&gt;, the team should &lt;strong&gt;adopt knowledge sharing&lt;/strong&gt; and &lt;strong&gt;finding new ways to further optimize&lt;/strong&gt;. When looking at how this affects your &lt;strong&gt;company culture&lt;/strong&gt;, it's not just about the serverless migration. It's about &lt;strong&gt;creating a culture&lt;/strong&gt; where people that are working at the company are talking to each other, feeling confident in sharing ideas, talking to leadership, getting feedback, helping improve the process from the internal point of view.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#continuous-improvement"&gt;
  &lt;/a&gt;
  Continuous Improvement
&lt;/h2&gt;

&lt;p&gt;What comes next? Well, we don't stop. &lt;strong&gt;There's no finish line&lt;/strong&gt;. You may have to tell that there's a finish line to leadership to get them to buy in, there's a start, there's a middle, there's an end. But ultimately, we're trying to &lt;strong&gt;create a cyclical system that is going to feed into itself&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;Developers will feed information, the team will consistently &lt;strong&gt;keep skilling up&lt;/strong&gt; as they're going, and we're going to get &lt;strong&gt;faster&lt;/strong&gt;, we're going to &lt;strong&gt;build better products for customers&lt;/strong&gt;, and we're going to just &lt;strong&gt;keep iterating&lt;/strong&gt; on that ad infinitum. It's never going to stop.&lt;/p&gt;

&lt;p&gt;Constantly, &lt;strong&gt;every day new companies are popping up&lt;/strong&gt;. They're working on new tools for CI/CD or for different aspects of the development workflow, like local testing or emulating AWS services. And we're going to be able to find those improvements with the serverless acceleration team and then be able to create a pattern for it, test it out, isolate, experiment with it. Once we do have something, we've got a &lt;strong&gt;concrete example of something that works&lt;/strong&gt;, we're then going to &lt;strong&gt;present that back out to the team&lt;/strong&gt;, we're going to do training on it, record videos about it, and make sure that the team starts moving towards that direction.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#importance-of-specialized-tooling"&gt;
  &lt;/a&gt;
  Importance of specialized tooling
&lt;/h2&gt;

&lt;p&gt;Rather than reinventing the wheel every time, &lt;strong&gt;specialized tools can help streamline your processes&lt;/strong&gt;. One example would be for &lt;strong&gt;centralizing and making the monitoring data available&lt;/strong&gt;. This means giving engineers the ability to &lt;strong&gt;interrogate monitoring data at scale really easily&lt;/strong&gt; and &lt;strong&gt;reducing the time &lt;/strong&gt;it takes to understand different aspects of the system, understanding the &lt;strong&gt;health of your system&lt;/strong&gt;, and overall just getting a feel of &lt;strong&gt;what's actually going on&lt;/strong&gt;. Another example would be for &lt;strong&gt;reducing the time to discovery&lt;/strong&gt;. This is also what can be abstracted and &lt;strong&gt;automated&lt;/strong&gt; away. &lt;strong&gt;Maintaining posture and enforcing best practices&lt;/strong&gt; also should be an automatic and abstracted process, rather than a manual one.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--n4H9Sy2B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mk0dashbirdioprthk8x.kinstacdn.com/wp-content/uploads/2021/04/Screenshot-2021-04-01-at-13.03.24-2-1024x613.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n4H9Sy2B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mk0dashbirdioprthk8x.kinstacdn.com/wp-content/uploads/2021/04/Screenshot-2021-04-01-at-13.03.24-2-1024x613.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Dashbird's centralized AWS metrics dashboard&lt;/p&gt;

&lt;p&gt;Tooling can help you &lt;strong&gt;enable learning&lt;/strong&gt; and &lt;strong&gt;understanding your system&lt;/strong&gt; and t*&lt;em&gt;he way it changes over time&lt;/em&gt;&lt;em&gt;, to help you make &lt;/em&gt;&lt;em&gt;informed decisions&lt;/em&gt;*. The approach we have at Dashbird is based on three core pillars that make up our platform and enable our customers to be successful:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; We provide a &lt;a href="https://dashbird.io/serverless-observability/"&gt;&lt;strong&gt;single pane of glass&lt;/strong&gt; and a &lt;strong&gt;central store&lt;/strong&gt;&lt;/a&gt; for all of your monitoring data. So there's always &lt;strong&gt;one place&lt;/strong&gt; you can go and look at anything about your system. You can build complex queries, you can look at dashboards of microservices -- all the way from an account level, a microservice level, into a single transaction level.&lt;/li&gt;
&lt;li&gt; We &lt;strong&gt;automate and abstract all of the &lt;/strong&gt;&lt;a href="https://dashbird.io/failure-detection"&gt;&lt;strong&gt;failure, threat&lt;/strong&gt; and &lt;strong&gt;risk detection&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt; across the stack&lt;/strong&gt;. So that means analyzing logs, metrics, and then figuring out what you should be paying attention to. &lt;/li&gt;
&lt;li&gt; We look at everything through the &lt;strong&gt;&lt;a href="https://dashbird.io/serverless-well-architected-reports"&gt;Well-Architected lens&lt;/a&gt;&lt;/strong&gt;. So we have an overview and all of the things we continuously check against the five pillars of the AWS Well-Architected Framework (cost optimization, performance, operational excellence, security, and reliability) and then make a report of what is the current state of your application infrastructure.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://sls.dashbird.io/aws-well-architected-framework-serverless"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rd-ccfN5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mk0dashbirdioprthk8x.kinstacdn.com/wp-content/uploads/2021/04/Ebook-well-architected-1024x190.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-stage-should-we-consider-operational-excellence"&gt;
  &lt;/a&gt;
  What stage should we consider operational excellence?
&lt;/h2&gt;

&lt;p&gt;In our experience, it's &lt;strong&gt;the sooner the better&lt;/strong&gt;. The challenge is that if you've built everything already, it takes a lot more to straighten the ship. And &lt;strong&gt;the quicker you get feedback&lt;/strong&gt; on your issues and the quicker you are able to &lt;strong&gt;learn what the best practices are&lt;/strong&gt; and how you should be building and where are inefficiencies, the sooner you can actually start implementing those changes.&lt;/p&gt;




&lt;p&gt;&lt;em&gt;This article is written based on &lt;a href="https://www.youtube.com/watch?v=E2pqFmQ17jM"&gt;Dashbird's webinar&lt;/a&gt; with &lt;a href="https://twitter.com/ryanjonesirl"&gt;Ryan Jones&lt;/a&gt;, CEO at Serverless Guru.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Ryan is the founder and CEO/CTO of Serverless Guru, cohost of the Talking Serverless podcast and Serverless Economics podcast, and author of the online course "Serverless Zero to Paid Professional." He started his serverless journey at Nike in the innovation engineering department in late 2018, and from there he's fully adopted the serverless lifestyle.&lt;/em&gt;&lt;/p&gt;




&lt;p&gt;Further reading:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dashbird.io/blog/5-popular-use-cases-for-going-serverless/"&gt;5 Popular Use Cases for Going Servelress&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dashbird.io/blog/saving-money-switching-serverless/"&gt;How Much Money Can You Save by Going Serverless?&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dashbird.io/blog/serverless-and-startups/"&gt;Serverless Benefits for Startups&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dashbird.io/blog/serverless-for-enterprises-large-scale-projects/"&gt;Serverless Benefits for Enterprises&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dashbird.io/blog/challenges-of-going-serverless-2020/"&gt;Biggest Challenges of Going Serverless&lt;/a&gt;&lt;/p&gt;

</description>
      <category>aws</category>
      <category>serverless</category>
      <category>devops</category>
      <category>cloud</category>
    </item>
    <item>
      <title>How to Prevent Burnout While Working as a Web Developer</title>
      <author>Creative Tim</author>
      <pubDate>Thu, 29 Apr 2021 12:25:20 +0000</pubDate>
      <link>https://dev.to/creativetim_official/how-to-prevent-burnout-while-working-as-a-web-developer-46oa</link>
      <guid>https://dev.to/creativetim_official/how-to-prevent-burnout-while-working-as-a-web-developer-46oa</guid>
      <description>&lt;p&gt;Most web developers start coding out of pure passion and later on turn it into a career. They usually learn to code on their own and then start working as a freelance web developer or as an employed web developer in a company. Whichever route they choose, they work hard and pull all-nighters or do overtime work to build the career they want.&lt;/p&gt;

&lt;p&gt;Even though they start with drive and motivation to learn more and become better at programming, there might come a time where the passion for coding fades, and programming becomes overwhelming and stressful. If these symptoms persist and affect work life and personal life, they may point to burnout.&lt;/p&gt;

&lt;p&gt;Developer or programmer burnout is a widespread phenomenon in the fast-paced IT industry. The web developer job comes with very high demands, so most programmers face it at least once in their career. If this sounds familiar to you, read our article to discover how to deal with burnout and prevent it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-developer-burnout"&gt;
  &lt;/a&gt;
  &lt;strong&gt;What Is Developer Burnout?&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Developer/programmer burnout is a state of mental and physical exhaustion caused by extreme work-related stress. It is characterized by symptoms such as losing motivation and interest in work, mental and physical fatigue, and a cynical or critical attitude towards work. &lt;a href="https://www.forbes.com/sites/maurathomas/2020/08/28/its-time-to-face-facts-burnout-is-rampant/?sh=7041e4713861"&gt;Burnout has become more common&lt;/a&gt; and exacerbated since the Coronavirus pandemic started, due to the fact that most people are working remotely.&lt;/p&gt;

&lt;p&gt;Even though it is work-related, burnout can affect various aspects of your life, such as your family life, your health, or your friendships. You should identify burnout as soon as possible and take all necessary measures to recover from it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0ZcvYxVp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativetimblog.com/blog/wp-content/uploads/2021/04/tim-gouw-1K9T5YiZ2WU-unsplash-1024x685.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0ZcvYxVp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativetimblog.com/blog/wp-content/uploads/2021/04/tim-gouw-1K9T5YiZ2WU-unsplash-1024x685.jpg" alt="Burnout"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-can-you-identify-developer-burnout"&gt;
  &lt;/a&gt;
  &lt;strong&gt;How Can You Identify Developer Burnout?&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;These are the most common symptoms associated with developer/programmer burnout. Keep in mind that you can get all of them, some of them or none at all. The burnout phenomenon manifests itself differently for each person. To qualify as burnout symptoms, these things need to happen for a longer period of time (like weeks, months, or even years), not just for a few days.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Loss of motivation and passion for coding.&lt;/strong&gt; This symptom is very common, and most times, it is the first sign of developer burnout. If you notice that you don’t have the same motivation and passion you did when you first started coding, you could be on the verge of burning out.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Mental and physical fatigue.&lt;/strong&gt; You feel constantly drained and have no energy to code or even do other everyday activities. Physical and emotional exhaustion might be a sign of burnout rearing its ugly head.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Feelings of isolation.&lt;/strong&gt; Because you feel overwhelmed and exhausted by your job, you start distancing yourself from other people. Social isolation translates into loneliness, which can aggravate burnout.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Feelings of depression and anxiety.&lt;/strong&gt; These feelings are usually related to coding and your job, but you can notice them around other aspects of your life as well. If you want to find out more about how developers can deal with anxiety, &lt;a href="https://www.creative-tim.com/blog/education/web-developers-can-beat-anxiety/"&gt;read our dedicated article on this&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Reduced work performance.&lt;/strong&gt; Burnout causes difficulty in concentrating, which can notably affect work performance. This can, in turn, lead to a lack of accomplishment and feelings of ineffectiveness.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Cynicism and Alienation from work.&lt;/strong&gt; This translates into indifference to work-related activities and emotionally distancing yourself from your job.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Physical symptoms.&lt;/strong&gt; Some developers may manifest physical burnout symptoms such as headaches or stomachaches. They are usually caused by the massive amount of stress they are dealing with.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#what-are-the-burnout-causes-for-developers"&gt;
  &lt;/a&gt;
  &lt;strong&gt;What Are the Burnout Causes for Developers?&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;These are the unhealthy habits and circumstances that can lead to developer burnout. If you catch yourself experiencing these things regularly, you might burnout soon. Try to keep an eye out for these causes and counter their effects on your mind and body.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Spending 8-10 hours per day in front of the computer&lt;/strong&gt;&lt;br&gt;
This is a very unhealthy habit, and it is a decisive factor in burning out. You could do this willingly to impress your superiors and advance in your career or take up as many freelancing development projects as possible to earn more money. No matter the reason, beware that overloading yourself with tasks and spending most of the day coding can eventually lead to burnout.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f2xPAK-R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativetimblog.com/blog/wp-content/uploads/2021/04/burnout02.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f2xPAK-R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativetimblog.com/blog/wp-content/uploads/2021/04/burnout02.jpg" alt="Spending hours in front of the computer"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Having a mundane coding job&lt;/strong&gt;&lt;br&gt;
If your job requires you to write the same code every day, use the same software and do the same activities, you’ll soon start feeling stuck. Your mind needs constant challenges so it can preserve its motivation and drive. Feeling like you’re never going to progress in your career is also directly linked to developer burnout.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Being isolated from other people&lt;/strong&gt;&lt;br&gt;
This is both a cause and a symptom. Being a web developer is a lonely career, even more so in the context of the coronavirus pandemic. As a developer, you usually have meetings to decide the course of action, but you do all the work by yourself in front of the computer. Coding together with someone at the same computer, also known as pair programming, can happen from time to time, but it’s not a technique used often.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pushing your mind every day&lt;/strong&gt;&lt;br&gt;
Web development is a mentally demanding job because it requires you to solve complex problems daily. Straining your mind for extended periods will drain your mind and lead to mental fatigue, which is a burnout symptom.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Lack of exercise and sleep&lt;/strong&gt;&lt;br&gt;
It’s as the Romans used to say, “mens sana in corpore sano” (which translates as “a healthy mind in a healthy body”). If you don’t get enough sleep and exercise regularly, you will not be in your best form, physically or mentally. Having an unhealthy body makes it much easier for burnout to appear.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-can-you-prevent-developer-burnout-and-recover-from-it"&gt;
  &lt;/a&gt;
  &lt;strong&gt;How Can You Prevent Developer Burnout and Recover From It?&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;You must be aware that burnout is a common phenomenon in the web development field. However, there are simple &lt;a href="https://thenextweb.com/growth-quarters/2020/09/05/how-to-manage-stress-as-a-developer-syndication/"&gt;things you can do to manage stress&lt;/a&gt;. Keep in mind there isn’t a one-size-fits-all recipe on how to avoid burnout or recover from it, but there are some guidelines that you can follow.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JqLYgVcK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativetimblog.com/blog/wp-content/uploads/2021/04/manny-pantoja-10bgCz0qkto-unsplash-768x1152.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JqLYgVcK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativetimblog.com/blog/wp-content/uploads/2021/04/manny-pantoja-10bgCz0qkto-unsplash-768x1152.jpg" alt="manage stress"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Take breaks throughout the day&lt;/strong&gt;&lt;br&gt;
Don’t sit in the same position for 8 to 10 hours straight. Make sure you take a 10 minutes break every hour to stretch and look away from the computer. Take an hour-long lunch break or even go for a quick. If your job does not allow this, it could be an indicator they don’t care about their programmers’ well-being, and you should consider looking for a different one.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Keep things fresh at work&lt;/strong&gt;&lt;br&gt;
This way, you can hold on to your motivation and drive. Don’t despair if you have a monotonous coding job that keeps you using the same technologies repeatedly. There are several things you can do. You could try talking to your superior and maybe switch projects or take on different responsibilities. If this is not an option, you can do coding projects that feed your motivation in your free time (e.g., try a new programming language, learn new tools, build an open-source project, and so on). Ultimately, you should consider changing jobs if this is something you can do.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Take a long break from time to time&lt;/strong&gt;&lt;br&gt;
Ideally, it would help if you went on a week-long vacation every few months. This way, you can relax and disconnect from coding. Start slow when you come back to coding. Don’t jump back into an 8 to 10 hours programming schedule.&lt;br&gt;
If you can’t go on vacation, find something else that you enjoy, like a hobby that takes up a considerable amount of time and helps you unwind. Whatever it is that interests you will help you. If you are trying to recover from burnout, maybe you should try stress-reducing activities such as yoga or meditation.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Be around other people&lt;/strong&gt;&lt;br&gt;
If you are married and have children, spend time with your significant other and your kids. Hang out with friends and other acquaintances. This way, you can balance the feelings of isolation you have at work with quality time spent with people you care about in your free time.&lt;br&gt;
Your life outside of work is important, and you should never neglect it. The support of your loved ones is precious, especially in &lt;a href="https://dev.to/pieohpah/dealing-with-programmers-burnout-40b"&gt;dealing with burnout&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Exercise and get enough sleep&lt;/strong&gt;&lt;br&gt;
Regular physical activity can help you better deal with stress. It is also a great way to keep your mind busy and off work. Getting enough sleep restores well-being is &lt;a href="https://journals.lww.com/joem/Abstract/2010/01000/The_Cost_of_Poor_Sleep__Workplace_Productivity.13.aspx"&gt;directly linked to productivity&lt;/a&gt;. A healthy mind and body won’t get burned out as easily.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#practical-advice-from-our-team"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Practical advice from our team&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Now that we’ve covered all the theoretical guidelines on dealing with burnout, it’s time for some practical advice. We talked with our team to get insights on how they prevent and manage burnout. Here’s what we found out:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Alexandru, Creative Tim Co-Founder&lt;/strong&gt;&lt;br&gt;
I’ve experienced burnout for multiple months in a row after having worked long periods. Now I usually stop working at 7-8 PM and move my attention to reading and listening to calm/Tibetan music (on apps like Headspace or Youtube). I also take 4-5 days of vacation every 1-2 months. Once a week, I smoke a cigar, which decreases my anxiety level for the next 2-3 days.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Beni, Full-Stack Developer at Creative Tim&lt;/strong&gt;&lt;br&gt;
What works for me is taking breaks throughout the day and listening to music. I also take short periods off work once in a while. During my days off, I enjoy traveling and discovering new places. Hiking is also a relaxing activity that I try to do as often as I can.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Dragoș, Front-End Developer at Creative Tim&lt;/strong&gt;&lt;br&gt;
Going to the gym is what helps me avoid developer burnout. I go daily and have been doing this for quite some time. Sometimes I go in the morning, so I am ready for a new day of coding, and sometimes I go in the evening to unwind after a full day at the office. Either way, sport relaxes me and keeps my mind off work. It also helps me focus and be present in the moment.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Rareș, Front-End Developer at Creative Tim&lt;/strong&gt;&lt;br&gt;
What helps me keep burnout at bay is working on my personal web development projects. I always have side projects and coding experiments because they are fun and a great way to gain new coding skills that I can also use at work.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Manu, React Developer at Creative Tim&lt;/strong&gt;&lt;br&gt;
“One of the small things I do to prevent burnout is to take a 5-minute break every hour, in which I do some physical exercises (abs, pushups, or squats). I also enjoy reading self-development books, so often after work, I pick up a book and dive into it for half an hour to an hour.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Ștefan, Front-End Developer at Creative Tim&lt;/strong&gt;&lt;br&gt;
I’m trying to find a balance between the work hours and my personal life. I usually spend time in nature as a proactive person or practicing swimming, cycling, or other activities like reading to avoid burnout. “Mens sana in corpore sano”.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Alexandra, Marketing Manager at Creative Tim&lt;/strong&gt;&lt;br&gt;
“Cooking is what gets my stress away. The launch break is my “Zen” time because I get to try new recipes almost daily, which makes me relaxed. I’ve forgotten about food delivery, especially since the pandemic started and I’m working from home.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Ana, Growth Marketer at Creative Tim&lt;/strong&gt;&lt;br&gt;
I use a Pomodoro timer to take short breaks throughout the day. After hours I like to relax by practicing yoga or meditating. I also try to take days off once in a while to unwind, maybe go on a city break or visit nearby sights.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#final-thoughts"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Final Thoughts&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;We hope now that you know more about developer burnout, you will be more mindful about your well-being at work, and keep an eye out for potential burnout symptoms. Since it’s better to prevent than to “treat”, make sure you follow our guidelines from the last part of the article to achieve a healthy work-life balance.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>burnout</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Why you should create a developer Instagram account</title>
      <author>Andrew Baisden</author>
      <pubDate>Thu, 29 Apr 2021 12:24:29 +0000</pubDate>
      <link>https://dev.to/andrewbaisden/why-you-should-create-a-developer-instagram-account-35m2</link>
      <guid>https://dev.to/andrewbaisden/why-you-should-create-a-developer-instagram-account-35m2</guid>
      <description>&lt;p&gt;Instagram needs no introduction everyone knows how big it is. It is one of the most popular and active social media platforms in the world. In fact it is even bigger than Twitter which is why it is so good for building your brand and growing followers. However many developers avoid it completely because Instagram is predominantly an image based social network whereas Twitter is text based which is more ideal for talking and sharing code. I think its a missed opportunity though because if you are working on building your network and growing your audience then obviously you should be on Instagram it is just too huge to ignore.&lt;/p&gt;

&lt;p&gt;For some people Instagram can feel a bit weird because lets face it the platform is mostly all visuals and you would go on there expecting to see pictures of people, locations, food etc... Having pictures of code is just not quite the same is it? But if you step back and take a look at the big picture you will realise that there are multiple ways for you to engage with people on Instagram. First let's break it down. This is my own opinion here but I think there are at least 7 types of developer related Instagram accounts.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Programming snippets&lt;/li&gt;
&lt;li&gt;Image links to blog articles&lt;/li&gt;
&lt;li&gt;Personal selfies and computer setups&lt;/li&gt;
&lt;li&gt;Joke/Meme Illustrations&lt;/li&gt;
&lt;li&gt;Web design&lt;/li&gt;
&lt;li&gt;Personal motivation&lt;/li&gt;
&lt;li&gt;CSS Art&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;So as you can see there are actually a lot of opportunities for growth there. Ideally you would want to create a new business account for your developer work so that you do not contaminate your main personal instagram with too much developer focused work that your friends and family might not understand. It is just easier to have a branded channel for that content. I recently created a tech focused Instagram account for myself this month and it seems to be doing well at the moment. I still need to work on being more active but I have plenty of ideas based on the type of developer related accounts out there. &lt;/p&gt;

&lt;p&gt;If you were to post even some of that content then you will grow an audience. So far I have had quite good engagements even though I have put little effort in so far. I have even gained more than 30 followers already at this rate it will surpass my personal Instagram which I should really be more active on. Coronavirus has not really helped much with so much indoor time due to having 2 years of lockdowns 😅&lt;/p&gt;

&lt;p&gt;Many developers and communities are already using Instagram. DEV, Hashnode and CodeNewbie already have a presence on there among others. Each of them have thousands of followers already so use that as motivation you are also capable of building an audience on Instagram.&lt;/p&gt;

&lt;p&gt;This is my developer Instagram account &lt;a href="https://www.instagram.com/andrewbaisden_tech/"&gt;andrewbaisden_tech&lt;/a&gt; I hope to see more of you on there.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-thoughts"&gt;
  &lt;/a&gt;
  Final Thoughts
&lt;/h2&gt;

&lt;p&gt;I really hope that you enjoyed reading this article and learned something from it. As a content creator and technical writer I am passionate about sharing my knowledge and helping other people reach their goals. Let's connect across social media you can find all of my social media profiles and blogs on &lt;a href="https://linktr.ee/andrewbaisden"&gt;linktree&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Peace ✌️&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>programming</category>
      <category>career</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Let's talk about impostor syndrome 😧</title>
      <author>Amelia Vieira Rosado</author>
      <pubDate>Thu, 29 Apr 2021 12:15:11 +0000</pubDate>
      <link>https://dev.to/technoglot/let-s-talk-about-impostor-syndrome-2f02</link>
      <guid>https://dev.to/technoglot/let-s-talk-about-impostor-syndrome-2f02</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Photo by &lt;a href="https://unsplash.com/@arash_payam?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;arash payam&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/sad?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Hello folks! Welcome back 👋🏻 I trust you are doing well.&lt;/p&gt;

&lt;p&gt;As you probably figured from the title, today I'd like to talk about impostor syndrome. I know what you're thinking: "Ah, another one of these posts... Bye 🙄". Just hear me out before you leave. I promise I won't make it too long (at least not 30 minutes long).&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;🚨 DISCLAIMER #1&lt;/strong&gt;: &lt;em&gt;Be warned; this one sounds like a rant. Not suitable for the faint at heart. Proceed at your own risk or hit the back button before you regret it&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#brief-intro"&gt;
  &lt;/a&gt;
  Brief intro ✍🏻
&lt;/h1&gt;

&lt;p&gt;I've been wanting to write about this topic for a while now, but I just couldn't find the words to approach this topic. After a conversation with &lt;a class="mentioned-user" href="https://dev.to/theowlsden"&gt;@theowlsden&lt;/a&gt;
 , I finally got the clarity I need it, and here I am, finally writing about it.&lt;/p&gt;

&lt;p&gt;Let's settle this topic once and for all, shall we?&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-is-impostor-syndrome"&gt;
  &lt;/a&gt;
  What is impostor syndrome? 🤔
&lt;/h1&gt;

&lt;p&gt;So sorry to reiterate this point here, but I need a baseline. For those unfamiliar with the term, here's a definition I found on &lt;a href="https://en.wikipedia.org/wiki/Impostor_syndrome"&gt;Wikipedia&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Impostor syndrome is a psychological pattern in which an individual doubts their skills, talents or accomplishments and has a persistent internalized fear of being exposed as a "fraud". Despite external evidence of their competence, those experiencing this phenomenon remain convinced that they are frauds, and do not deserve all they have achieved.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As you can see from the definition above, impostor syndrome is entirely mental and often fictitious. I personally believe that those experiencing it or those who have experienced it, are to blame for feeling this way (this includes me too). What I mean by this is that we effectively engage in self-sabotaging activities, therefore increasing the likelihood of falling victim to impostor syndrome. We literally bring this upon ourselves with our actions.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XPbxBfBP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://external-content.duckduckgo.com/iu/%3Fu%3Dhttps%253A%252F%252Fvignette.wikia.nocookie.net%252Famong-us%252Fimages%252Fd%252Fd7%252FAmong.png%252Frevision%252Flatest%253Fcb%253D20200603164334%2526path-prefix%253Dpt-br%26f%3D1%26nofb%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XPbxBfBP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://external-content.duckduckgo.com/iu/%3Fu%3Dhttps%253A%252F%252Fvignette.wikia.nocookie.net%252Famong-us%252Fimages%252Fd%252Fd7%252FAmong.png%252Frevision%252Flatest%253Fcb%253D20200603164334%2526path-prefix%253Dpt-br%26f%3D1%26nofb%3D1" alt="impostor: me"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, let me be very clear about one thing: impostor syndrome !== self-doubt! I've heard and seen some folks say that impostor syndrome is not real and that it is just a fancy term used to refer to self-doubt. I don't agree in the least with such statement. In fact, I am under the impression that the folks making such statement, have not experienced impostor syndrome. Everyone is entitled to their own opinions, but I personally believe that self-doubt is merely a part of what makes up impostor syndrome as a whole. &lt;/p&gt;

&lt;p&gt;In the next sections, I'll be sharing with you what I believe are key contributors to impostor syndrome. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;🚨 DISCLAIMER #2&lt;/strong&gt;: &lt;em&gt;The opinions and thoughts expressed below are my own. If you are struggling with mental health issues, please consider seeking help from a professional. This blog is not intended to serve as medical advice. Proceed at your own discretion.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#unrealistic-expectations"&gt;
  &lt;/a&gt;
  1️⃣ Unrealistic expectations 💭
&lt;/h1&gt;

&lt;p&gt;Expectations, we all have them, yet they are not inherently bad in nature. Having expectations is good to some extent, so long they are realistic. Unrealistic expectations are the key ingredient for disappointment and do far more harm than good. &lt;/p&gt;

&lt;p&gt;Say you just landed a great job and things are going great. However, on one good day, your inner impostor rises and takes control. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--J1S4t3Jx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://external-content.duckduckgo.com/iu/%3Fu%3Dhttp%253A%252F%252Fi.imgur.com%252FEUXxEy1.gif%26f%3D1%26nofb%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--J1S4t3Jx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://external-content.duckduckgo.com/iu/%3Fu%3Dhttp%253A%252F%252Fi.imgur.com%252FEUXxEy1.gif%26f%3D1%26nofb%3D1" alt="I'm the captain now"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Suddenly you expect yourself to know everything, to not have to ask anyone for help, to seem and be competent at all times. All you do is create expectations for yourself. You think (and want to believe) that these expectations are being forced on you by others, when in reality, it's all your doing. You played yourself! You set such unattainable expectations for yourself and consequently ended up getting disappointed the moment you couldn't meet them.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Here's my two cents&lt;/strong&gt;: &lt;em&gt;accept that you will never know it all. Accept that it is okay to ask for help, to not have the answer to all questions. Be okay with admitting that you don't know, with saying: "I'm stuck, I need help". There is nothing wrong with acknowledging your knowledge and/or skill gaps. You are here to learn. What you don't know today, you'll know someday not too far in the future. So, go easy on the expectations and set them straight, for good!&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#comparing-yourself-to-others"&gt;
  &lt;/a&gt;
  2️⃣ Comparing yourself to others 😢
&lt;/h1&gt;

&lt;p&gt;You know the drill: you hop on your social media of choice and scroll through your feed until you are almost brain dead. Awesome! While scrolling through your feed, you see all these awesome folks you look up to. You can't help but think one (or all) of the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;"Oh, X is so cool! I wish I could be like them..." &lt;/li&gt;
&lt;li&gt;"Man, how I wish I had that many followers..." &lt;/li&gt;
&lt;li&gt;"Damn, I'd love to work for Y; that's my dream company! X is so lucky to be working there... I hope I can make it to Y one day..." &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;GET YOUR ACT TOGETHER, WILL YOU?! 😡 Nothing infuriates me more than to see and hear people lament about how unsuccessful they are when COMPARED to others. Gee, focus on your damn self! Stop looking left and right for people to measure yourself up to! Nothing wrong with admiring someone, but never EVER compare yourself to them. You are two different people, with different qualities (strengths, weaknesses, skills etc.) and different life circumstances. Feeling sorry for yourself will get you NO WHERE. &lt;/p&gt;

&lt;p&gt;Let that sink in for a bit, okay? And don't blame social media for how YOU feel when using it. Sure, social media is pretty evilly engineered, but YOU choose how much time you spend on it and doing what. If it makes you feel so bad about yourself, why are you spending so much time on it? Are you a masochist by any chance? &lt;/p&gt;

&lt;p&gt;Focus on your journey and your journey alone. Notice how I say journey here. It's not a race by any means. It's not about how fast you go and how famous you get. Slow but steady is fine. Progress is progress. Stop getting distracted by other people's success and focus on YOURSELF. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Bk_9os4C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://external-content.duckduckgo.com/iu/%3Fu%3Dhttps%253A%252F%252Fi.pinimg.com%252Foriginals%252Fac%252Fa7%252F9a%252Faca79afcd13bdcecdd974f864d187211.jpg%26f%3D1%26nofb%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Bk_9os4C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://external-content.duckduckgo.com/iu/%3Fu%3Dhttps%253A%252F%252Fi.pinimg.com%252Foriginals%252Fac%252Fa7%252F9a%252Faca79afcd13bdcecdd974f864d187211.jpg%26f%3D1%26nofb%3D1" alt="nice quote"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Fun fact&lt;/strong&gt;: &lt;em&gt;most people don't share their failure stories on the net. They typically feed their audience the feel-good and badass content. You choose if you want to keep indulging and getting deluded by these one-sided fables. 🤷🏻‍♀️&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#not-accepting-that-you-are-a-beginner"&gt;
  &lt;/a&gt;
  3️⃣ Not accepting that you are a beginner 😕
&lt;/h1&gt;

&lt;p&gt;This one is closely related to setting unrealistic expectations. I see many skip the beginner phase. They never state a role they held with the word junior on their resume (they typically omit the word junior altogether). Why would they, right? Everyone's a senior dev straight out of college/uni/bootcamp, RIGHT? Obviously not! 🙄 &lt;/p&gt;

&lt;p&gt;By ignoring your humble beginnings, you don't help yourself. You just corner yourself further and make the encounter with your inner impostor more inevitable (just like Thanos 😉). At this point, you are already falling in the vicious circle that is setting unrealistic expectations. By not acknowledging where you are currently standing in your career you'll wind up expecting yourself to be at a level much higher than the one you are currently on. To top it all, you'll get in the way of your growth, both personal and professional.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;To all the newbies (or otherwise) out there&lt;/strong&gt;: &lt;em&gt;come to terms with the fact that you are just getting started. Stop trying to be a freaking senior dev since day one. Embrace the journey, welcome the struggle. Failing to accept where you are currently standing in your career will only get in your way. You have been warned...&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#you-dont-give-yourself-enough-credit"&gt;
  &lt;/a&gt;
  4️⃣ You don't give yourself enough credit 🏅
&lt;/h1&gt;

&lt;p&gt;You accomplish something? You don't acknowledge it. You hit a milestone? You don't celebrate that win. People compliment your work? You invalidate their compliment. See? I was right. All you do is self-sabotage! You get in your own way over and over and over again. Yet somehow, you hope you'll feel better about yourself by engaging in these destructive behaviors. Truly delusional...&lt;/p&gt;

&lt;p&gt;If all you do is keep yourself small, how do you expect to grow? Take pride in what you do and have accomplished and continue building on top of it. Change your mindset (especially how you see yourself and think about yourself) and notice how everything around you starts changing too.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;My message here is clear&lt;/strong&gt;: &lt;em&gt;GIVE 👏🏻 YOURSELF 👏🏻 MORE 👏🏻 CREDIT 👏🏻. Take that compliment. Celebrate that win. Know that what you have done up until now has value, no matter how small an achievement it is.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yg950r4R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://external-content.duckduckgo.com/iu/%3Fu%3Dhttps%253A%252F%252Fi.pinimg.com%252Foriginals%252F9e%252F28%252F6f%252F9e286f7d0fce9089446917e6664d0312.jpg%26f%3D1%26nofb%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yg950r4R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://external-content.duckduckgo.com/iu/%3Fu%3Dhttps%253A%252F%252Fi.pinimg.com%252Foriginals%252F9e%252F28%252F6f%252F9e286f7d0fce9089446917e6664d0312.jpg%26f%3D1%26nofb%3D1" alt="old ways won't open new doors"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#the-end"&gt;
  &lt;/a&gt;
  The end 🙌🏻
&lt;/h1&gt;

&lt;p&gt;Hooray, you made it this far down! 🎉 Thanks for tuning in for this one. Smash that 💖 or 🦄 if you believe this should have been a TEDx speech. Just kidding! &lt;/p&gt;

&lt;p&gt;I truly hope that you could take away something from this rant (if not you may want to read this again 🤭). I'd love to hear your thoughts on this topic, so don't hesitate to drop them below. Let's keep it civil and constructive, shall we?&lt;/p&gt;

&lt;p&gt;Now, say your goodbyes to your inner impostor!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--43EPPcAZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://external-content.duckduckgo.com/iu/%3Fu%3Dhttp%253A%252F%252Fmedia.giphy.com%252Fmedia%252F2oVfyRHk1EuRy%252Fgiphy.gif%26f%3D1%26nofb%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--43EPPcAZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://external-content.duckduckgo.com/iu/%3Fu%3Dhttp%253A%252F%252Fmedia.giphy.com%252Fmedia%252F2oVfyRHk1EuRy%252Fgiphy.gif%26f%3D1%26nofb%3D1" alt="hasta la vista, baby"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Take care and see you next time! 👩🏻‍💻👨🏻‍💻&lt;/p&gt;

&lt;p&gt;Sources&lt;br&gt;
&lt;a href="https://en.wikipedia.org/wiki/Impostor_syndrome"&gt;Good ol' Wikipedia&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.visualcapitalist.com/wp-content/uploads/2020/10/impostor-syndrome-infographic-2.png"&gt;A superb infographic on Impostor Syndrome&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.visualcapitalist.com/are-you-suffering-from-impostor-syndrome/"&gt;The source of the infographic&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.apa.org/gradpsych/2013/11/fraud"&gt;Tips on how to cope with Impostor Syndrome&lt;/a&gt;&lt;br&gt;
&lt;a href="https://cultivatedculture.com/imposter-syndrome/"&gt;Another good resource&lt;/a&gt;&lt;/p&gt;




&lt;br&gt;&lt;br&gt;
Still here? Catch me on &lt;a href="https://twitter.com/technoglot"&gt;Twitter&lt;/a&gt; or find me &lt;a href="https://linktr.ee/technoglot"&gt;elsewhere&lt;/a&gt;! If you like my blogs and are feeling generous, kindly consider to 👇🏻&lt;br&gt;&lt;br&gt;
&lt;a href="https://www.buymeacoffee.com/technoglot"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--N3AmDEOc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ir6d1lh7uo59jfi2d2v4.png"&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cftknAn3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8iwes672pxpljtq7z6oy.png" alt="technoglot footer banner"&gt;

</description>
      <category>mentalhealth</category>
      <category>watercooler</category>
      <category>discuss</category>
      <category>motivation</category>
    </item>
    <item>
      <title>The only thing you need is... reduce</title>
      <author>Alfredo Salzillo 🐺</author>
      <pubDate>Thu, 29 Apr 2021 11:59:35 +0000</pubDate>
      <link>https://dev.to/alfredosalzillo/the-only-thing-you-need-is-reduce-318a</link>
      <guid>https://dev.to/alfredosalzillo/the-only-thing-you-need-is-reduce-318a</guid>
      <description>&lt;p&gt;In this article, we will show that the only collection method you need is the &lt;code&gt;Array.prototype.reduce&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Note that this is only to demonstrate all the other methods are only a special case of the &lt;code&gt;reduce&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Only Array methods that don't change the original array will be demostrated.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-the-raw-arrayprototypereduce-endraw-"&gt;
  &lt;/a&gt;
  What is the &lt;code&gt;Array.prototype.reduce&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;reduce&lt;/code&gt; method is a function that transforms a collection (array) of elements into a &lt;strong&gt;single value&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;A single value can also be another collection.&lt;/p&gt;

&lt;p&gt;We can divide the application of the &lt;code&gt;reduce&lt;/code&gt; into 3 equivalent classes.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Type 1&lt;/strong&gt; reduce that returns a single Object/number/string, that reduce the collection to another type &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Type 2&lt;/strong&gt; reduce that returns another collection with the same number of elements&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Type 3&lt;/strong&gt; reduce that returns another collection with a different number of elements
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Type 1: the sum of the elements of an array&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;sum&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;reduce&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;acc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;acc&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;// Type 2: convert an array of number to an array of strings&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;strings&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;reduce&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;acc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[...&lt;/span&gt;&lt;span class="nx"&gt;acc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)],&lt;/span&gt; &lt;span class="p"&gt;[])&lt;/span&gt;

&lt;span class="c1"&gt;// Type 3: remove even elements&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;randoms&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;reduce&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;acc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;acc&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[...&lt;/span&gt;&lt;span class="nx"&gt;acc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; 
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#implemtations"&gt;
  &lt;/a&gt;
  Implemtations
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#-raw-arrayprototypemap-endraw-"&gt;map&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-raw-arrayprototypefilter-endraw-"&gt;filter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-raw-arrayprototypesome-endraw-"&gt;some&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-raw-arrayprototypeevery-endraw-"&gt;every&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-raw-arrayprototypejoin-endraw-"&gt;join&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-raw-arrayprototypeflat-endraw-"&gt;flat&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#-raw-arrayprototypemap-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;Array.prototype.map&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;map&lt;/code&gt; method creates a new array with the results of calling a function for every array element.&lt;br&gt;
It is useful to transform all the elements of an array.&lt;/p&gt;

&lt;p&gt;Example&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// calculate the spare root of all the elements of the array&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sqrt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;// =&amp;gt; [2, 3, 4]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It's a &lt;strong&gt;Type 2&lt;/strong&gt; reduce that return always the same number of elements.&lt;/p&gt;

&lt;p&gt;Implementation using reduce:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;map&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;array&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;callbackfn&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;array&lt;/span&gt;
   &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reduce&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;acc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;thisArg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[...&lt;/span&gt;&lt;span class="nx"&gt;acc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;callbackfn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;thisArg&lt;/span&gt;&lt;span class="p"&gt;)],&lt;/span&gt; &lt;span class="p"&gt;[])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#-raw-arrayprototypefilter-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;Array.prototype.filter&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;filter&lt;/code&gt; method creates an array filled with all array elements that pass a test (provided as a function).&lt;/p&gt;

&lt;p&gt;Example&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// return all the even elements&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// =&amp;gt; [2]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It's a &lt;strong&gt;Type 3&lt;/strong&gt; reduce that can return an array with a different number of elements.&lt;/p&gt;

&lt;p&gt;Implementation using reduce:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;map&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;array&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;predicate&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;array&lt;/span&gt;
   &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reduce&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;acc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;thisArg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;predicate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;thisArg&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[...&lt;/span&gt;&lt;span class="nx"&gt;acc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;acc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#-raw-arrayprototypesome-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;Array.prototype.some&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;some&lt;/code&gt; method checks if any of the elements in an array pass a test (provided as a function).&lt;/p&gt;

&lt;p&gt;Example&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// check if the array contains an even number&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;containsAnEven&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;some&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// =&amp;gt; true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It's a &lt;strong&gt;Type 1&lt;/strong&gt; reduce that returns a single value, in this case, a boolean.&lt;/p&gt;

&lt;p&gt;Implementation using reduce:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;some&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;array&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;predicate&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;array&lt;/span&gt;
   &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reduce&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;acc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;thisArg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;acc&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;predicate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;thisArg&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#-raw-arrayprototypeevery-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;Array.prototype.every&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;every&lt;/code&gt; method checks if all the elements in an array pass a test (provided as a function).&lt;/p&gt;

&lt;p&gt;Example&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// check if all the elementens of the array are even number&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;allEven&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;some&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// =&amp;gt; false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It's a &lt;strong&gt;Type 1&lt;/strong&gt; reduce that returns a single value, in this case, a boolean.&lt;/p&gt;

&lt;p&gt;Implementation using reduce:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;every&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;array&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;predicate&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;array&lt;/span&gt;
   &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reduce&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;acc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;thisArg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;acc&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;predicate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;thisArg&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#-raw-arrayprototypejoin-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;Array.prototype.join&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;join&lt;/code&gt; method returns an array as a string concatenating the elements using a separator.&lt;/p&gt;

&lt;p&gt;Example&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// join all strings using a space &lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;helloDevs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Devs&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt; &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// =&amp;gt; "Hello Devs"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It's a &lt;strong&gt;Type 1&lt;/strong&gt; reduce that returns a single value, in this case, a string.&lt;/p&gt;

&lt;p&gt;Implementation using reduce:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;join&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;array&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;separator&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;array&lt;/span&gt;
   &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reduce&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;acc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;thisArg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;acc&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;separator&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#-raw-arrayprototypeflat-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;Array.prototype.flat&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;flat&lt;/code&gt; method creates a new array with the elements of the subarrays concatenated into it.&lt;/p&gt;

&lt;p&gt;Example&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;results&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]].&lt;/span&gt;&lt;span class="nx"&gt;flat&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;// =&amp;gt; [1, 2, 3]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It's a &lt;strong&gt;Type 3&lt;/strong&gt; reduce that can return an array with more elements than the original.&lt;/p&gt;

&lt;p&gt;Implementation using reduce:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;flat&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;array&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;level&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;array&lt;/span&gt;
   &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reduce&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;acc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;thisArg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;level&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[...&lt;/span&gt;&lt;span class="nx"&gt;acc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isArray&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[...&lt;/span&gt;&lt;span class="nx"&gt;acc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;flat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;level&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[...&lt;/span&gt;&lt;span class="nx"&gt;acc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
   &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;🙏  Please give me some feedback in the comments 🙏 &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>showdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>5 communities you can join as a developer (+how to join them)</title>
      <author>Pasca Vlad</author>
      <pubDate>Thu, 29 Apr 2021 11:58:22 +0000</pubDate>
      <link>https://dev.to/pascavld/5-communities-you-can-join-as-a-developer-how-to-join-them-oj4</link>
      <guid>https://dev.to/pascavld/5-communities-you-can-join-as-a-developer-how-to-join-them-oj4</guid>
      <description>&lt;p&gt;&lt;em&gt;If you found value in this thread you will most likely enjoy my tweets too so make sure you follow me on &lt;a href="https://twitter.com/VladPasca5"&gt;Twitter&lt;/a&gt;  for more information about web development and how to improve as a developer. This article was first published on my &lt;a href="https://vladpasca.hashnode.dev/"&gt;Blog&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-tech-twitter"&gt;
  &lt;/a&gt;
  1. Tech Twitter
&lt;/h3&gt;

&lt;p&gt;This is the best community of developers out there in my opinion&lt;/p&gt;

&lt;p&gt;How to join it?&lt;/p&gt;

&lt;p&gt;Search for some big accounts in the niche you want to join (web, ml)&lt;/p&gt;

&lt;p&gt;Reply to their tweets&lt;/p&gt;

&lt;p&gt;Start writing your tweets&lt;/p&gt;

&lt;p&gt;Share your work&lt;/p&gt;

&lt;p&gt;Talk to people in the DMs&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-dev-to"&gt;
  &lt;/a&gt;
  2. Dev. to
&lt;/h3&gt;

&lt;p&gt;This community is a bit different because:&lt;/p&gt;

&lt;p&gt;You can both engage in the #DevDiscuss and post article/engage with people on their blogging platform&lt;/p&gt;

&lt;p&gt;I recommend starting with being active on their platform and then moving to Twitter&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-hashnode"&gt;
  &lt;/a&gt;
  3. Hashnode
&lt;/h3&gt;

&lt;p&gt;This is another amazing community of developers&lt;/p&gt;

&lt;p&gt;This is the one I'm part of too and I recommend every developer to do the same too&lt;/p&gt;

&lt;p&gt;How to join this?&lt;/p&gt;

&lt;p&gt;Write articles (lots of articles)&lt;/p&gt;

&lt;p&gt;Reply to other's articles&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-reddit"&gt;
  &lt;/a&gt;
  4. Reddit
&lt;/h3&gt;

&lt;p&gt;There are lots of subreddits for developers like r/learnprogramming, r/programming, and r/webdev&lt;/p&gt;

&lt;p&gt;How you join these?&lt;/p&gt;

&lt;p&gt;Help people that ask questions&lt;/p&gt;

&lt;p&gt;Share tips/advice&lt;/p&gt;

&lt;p&gt;Join conversations&lt;/p&gt;

&lt;p&gt;Share your work&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-facebook-groups"&gt;
  &lt;/a&gt;
  5. Facebook groups
&lt;/h3&gt;

&lt;p&gt;There are lots of groups for developers out there like: Learn Programming, Programming for Beginners and Web Developers&lt;/p&gt;

&lt;p&gt;You can pretty much find a group for any niche you are in&lt;/p&gt;

&lt;p&gt;How to join these?&lt;/p&gt;

&lt;p&gt;Help people with replies&lt;/p&gt;

&lt;p&gt;Share tips and advices&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#bonus"&gt;
  &lt;/a&gt;
  Bonus:
&lt;/h3&gt;

&lt;p&gt;Whatever community you decide to join you need to give VALUE&lt;/p&gt;

&lt;p&gt;Don't just ask questions and never give something&lt;/p&gt;

&lt;p&gt;Share your work and form connections (like you did in school😅)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-end"&gt;
  &lt;/a&gt;
  The end
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;I hope found this useful and if you did please let me know. If you have any question feel free to DM me on  &lt;a href="https://twitter.com/VladPasca5"&gt;Twitter&lt;/a&gt; .&lt;/em&gt;&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>webdev</category>
      <category>community</category>
      <category>newbie</category>
    </item>
    <item>
      <title>Yo! you want to get started with robotics but don't know the road map to follow</title>
      <author>ogunbiyi ibrahim</author>
      <pubDate>Thu, 29 Apr 2021 11:56:18 +0000</pubDate>
      <link>https://dev.to/comejoinfolks/yo-you-want-to-get-started-with-robotics-but-don-t-know-the-road-map-to-follow-4358</link>
      <guid>https://dev.to/comejoinfolks/yo-you-want-to-get-started-with-robotics-but-don-t-know-the-road-map-to-follow-4358</guid>
      <description>&lt;p&gt;&lt;strong&gt;&lt;em&gt;Get ready to roll up your sleeves because i got you covered .&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#firstly-what-is-robotics"&gt;
  &lt;/a&gt;
  Firstly: what is Robotics
&lt;/h3&gt;

&lt;p&gt;Robotics in lame man's term is using machine to perform  task that can be done by human being. Your phone is typically a robot because it can perform calculations  like adding , subtraction of two numbers which you can essentially do.&lt;/p&gt;

&lt;p&gt;Robotics is making  machine that thinks like you. Robots are widely used in industries to perform simple repetitive task. Tesla cars is typically an example of automobiles robots.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#do-you-think-robotics-is-worth-learning-in-2021"&gt;
  &lt;/a&gt;
  Do you think robotics is worth learning in 2021.
&lt;/h3&gt;

&lt;p&gt;If you want to dive in into robotics  because of the monetary aspect  well this if for you according to glassdoor the average salary is ..... Whao! That's a huge money there .&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--s98IXcT8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1619692628981/GARJRupKb.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s98IXcT8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1619692628981/GARJRupKb.jpeg" alt="20210429_113637.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#what-programming-should-i-learn-for-robotics"&gt;
  &lt;/a&gt;
  What programming should I learn for robotics.
&lt;/h4&gt;

&lt;p&gt;When I wanted to start my robotics software engineering career I was pondering  on what programming to learn because there were lots of them.&lt;/p&gt;

&lt;p&gt;*&lt;strong&gt;&lt;em&gt;But heads up! *&lt;/em&gt;&lt;/strong&gt;  I got you covered here are the 3 core programming languages you need to know&lt;/p&gt;

&lt;p&gt;*&lt;strong&gt;&lt;em&gt;python&lt;/em&gt;&lt;/strong&gt;*&lt;/p&gt;

&lt;p&gt;*&lt;strong&gt;&lt;em&gt;c language&lt;/em&gt;&lt;/strong&gt;*&lt;/p&gt;

&lt;p&gt;*&lt;strong&gt;&lt;em&gt;c++ language&lt;/em&gt;&lt;/strong&gt;*&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-python"&gt;
  &lt;/a&gt;
  1. python:
&lt;/h3&gt;

&lt;p&gt;Why Python!. python as far as I'm concerned is one of the simplest  language to learn. It as a lot of libraries  for robotics  with less coding  compared to c and c++. Python is intuitive and easy for newbies  starting their career in robotics. Python is used in raspberry pi and can also be used with ROS(robotics operating system)&lt;/p&gt;

&lt;p&gt;###2. C language:&lt;/p&gt;

&lt;p&gt;Why C!. A lot of hardware libraries are used in robotics are written in C this libraries allow  interaction  with low level hardware and real time performance. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-c"&gt;
  &lt;/a&gt;
  3. C++:
&lt;/h3&gt;

&lt;p&gt;Why C++! The main reason is &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Performance &lt;/li&gt;
&lt;li&gt;Scalability &lt;/li&gt;
&lt;li&gt;Memory management. &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I will drop  resources for these programming languages listed above  mostly free.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#do-i-need-to-get-stucked-with-mathematics"&gt;
  &lt;/a&gt;
  Do I need to get stucked with  Mathematics.
&lt;/h4&gt;

&lt;p&gt;Mathematics is one of the main reason people don't want to dive in into robotics. You don't need much mathematics to start with robotics. All you need is your high school or basic knowledge in algebra after that your advancement in robotics will require you to learn &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Calculus&lt;/li&gt;
&lt;li&gt;Linear algebra &lt;/li&gt;
&lt;li&gt;Statistics &lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#these-are-the-step-by-step-road-map-i-wished-i-had-followed-before-now-to-build-your-career-in-robotics"&gt;
  &lt;/a&gt;
  These are the step by step road map I wished I had followed before now to build your career in robotics
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#1-learn-3-core-programming-languages"&gt;
  &lt;/a&gt;
  1. Learn 3 core programming languages
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;Python &lt;/li&gt;
&lt;li&gt;C language &lt;/li&gt;
&lt;li&gt;C++ &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You can start with the first two so you will be able to do hands on project like arduino and raspberry pi &lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#2-learn-mechatronic"&gt;
  &lt;/a&gt;
  2. Learn  mechatronic
&lt;/h5&gt;

&lt;p&gt;Mechatronic is a cool stuff to start with as an hands on project I know you might be thinking well I don't know anything about mechatronic.  *&lt;strong&gt;&lt;em&gt;But folks! *&lt;/em&gt;&lt;/strong&gt; you better want to start with with something rather than nothing  and to make life easier for you start with *&lt;strong&gt;&lt;em&gt;Arduino and Raspberry pi&lt;/em&gt;&lt;/strong&gt;*&lt;/p&gt;

&lt;p&gt;*&lt;strong&gt;&lt;em&gt;1. Arduino&lt;/em&gt;&lt;/strong&gt;* is an open source electronic prototyping platform enabling user to create  interactive electronic projects.  You will need the basic knowledge of *&lt;strong&gt;&lt;em&gt;C language&lt;/em&gt;&lt;/strong&gt;* to start with arduino you can buy the arduino kit online at amazon or other ecommerce websites &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Jc4g9V2B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1619694950015/fuaqb7BQA.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Jc4g9V2B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1619694950015/fuaqb7BQA.jpeg" alt="20210429_121520.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;*&lt;strong&gt;&lt;em&gt;2. Raspberry pi&lt;/em&gt;&lt;/strong&gt;* is a tiny  and affordable computer that you can use to learn programming through practical projects. You will need *&lt;strong&gt;&lt;em&gt;python or c++&lt;/em&gt;&lt;/strong&gt;* to start with raspberry pi &lt;/p&gt;

&lt;p&gt;*&lt;strong&gt;&lt;em&gt;This article will be continued *&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
If you found it useful don't forget to like and share across all platforms. &lt;br&gt;
You can reach  at my handle &lt;/p&gt;

&lt;p&gt;&lt;a href="http://twitter.com/%5B@Comejoinfolks%5D"&gt;Twitter&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://t.me/Ibrahimogunbiyi"&gt;Telegram&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Thanks🥳🥳&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>python</category>
      <category>career</category>
      <category>programming</category>
    </item>
  </channel>
</rss>
