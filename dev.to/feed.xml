<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Assign value to multiple variables at once in Javascript</title>
      <author>Beginner Developer</author>
      <pubDate>Tue, 24 Aug 2021 16:50:52 +0000</pubDate>
      <link>https://dev.to/beginnerdeveloper/assign-value-to-multiple-variables-at-once-in-javascript-3ah7</link>
      <guid>https://dev.to/beginnerdeveloper/assign-value-to-multiple-variables-at-once-in-javascript-3ah7</guid>
      <description>&lt;p&gt;The &lt;strong&gt;destructuring assignment&lt;/strong&gt; syntax is a JavaScript expression that makes it possible to unpack values from arrays, or properties from objects, into distinct variables.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    let [a,b,c] = [1,2,3];

    console.log(a,b,c);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cuVKCvS1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3b8yxsbyhx8e3c9634r9.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cuVKCvS1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3b8yxsbyhx8e3c9634r9.PNG" alt="Output"&gt;&lt;/a&gt;&lt;br&gt;
My Blog:- &lt;a href="https://beginners-developer.blogspot.com/"&gt;https://beginners-developer.blogspot.com/&lt;/a&gt;&lt;br&gt;
Reference: &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment"&gt;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>tips</category>
      <category>html</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>What is Firebase?</title>
      <author>Aswin Barath</author>
      <pubDate>Tue, 24 Aug 2021 16:38:13 +0000</pubDate>
      <link>https://dev.to/aswin2001barath/what-is-firebase-3f35</link>
      <guid>https://dev.to/aswin2001barath/what-is-firebase-3f35</guid>
      <description>&lt;p&gt;&lt;a href="https://aswinbarath.github.io/What-is-Firebase/"&gt;Originally posted here!&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let us first understand how is a full-stack application built.&lt;br&gt;
A full-stack application consists of a front-end component and a back-end component.&lt;br&gt;
A front-end component is what we see, a user interface(UI).&lt;br&gt;
A back-end component communicates with the UI to send, receive, store and/or delete data.&lt;/p&gt;

&lt;p&gt;Firebase is &lt;strong&gt;Back-End as a Service (BaaS)&lt;/strong&gt;.&lt;br&gt;
Firebase gives you all the benefits of a back-end without the complexities of creating one up from scratch.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#benefits-of-firebase"&gt;
  &lt;/a&gt;
  Benefits of Firebase
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#reduce-development-time"&gt;
  &lt;/a&gt;
  Reduce Development Time
&lt;/h3&gt;

&lt;p&gt;Let's face it. We can get impatient when we want a full-stack application as soon as possible. With Firebase, you can cut down development time.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#security"&gt;
  &lt;/a&gt;
  Security
&lt;/h3&gt;

&lt;p&gt;Firebase provides built-in security. If you configure it in the right way, your app will be a solid fortress.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#highspeed-caching"&gt;
  &lt;/a&gt;
  High-Speed Caching
&lt;/h3&gt;

&lt;p&gt;Your app deployed using Firebase hosting gets cached on solid-state drives (SSD) throughout the world. Your app loading time will become extremely fast that also helps with SEO.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#realtime-data"&gt;
  &lt;/a&gt;
  Realtime Data
&lt;/h3&gt;

&lt;p&gt;Cloud Firestore database updates all connected clients in real-time. The ability to get real-time updates makes applications a lot easier to implement.&lt;/p&gt;

&lt;p&gt;Feel free to share if you found this useful 😃.&lt;/p&gt;

</description>
      <category>firebase</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>15 Useful VSCode shortcuts to improve productivity</title>
      <author>Shubham Khatri</author>
      <pubDate>Tue, 24 Aug 2021 16:20:43 +0000</pubDate>
      <link>https://dev.to/shubhamreacts/15-useful-vscode-shortcuts-to-improve-productivity-4akc</link>
      <guid>https://dev.to/shubhamreacts/15-useful-vscode-shortcuts-to-improve-productivity-4akc</guid>
      <description>&lt;p&gt;VSCode is one of the most popular editors for web development. When writing code, we often require certain formatting actions, and a lot of them are supported by VSCode itself. While most actions can be found from Menu options, having hands-on keyboard shortcuts can help improve your coding speed by a lot.&lt;/p&gt;

&lt;p&gt;Here is a list of some shortcuts that I have been using for a while and found to be really useful. &lt;/p&gt;

&lt;p&gt;Default shortcuts are for Mac, while shortcuts for Windows and Linux are mentioned below for each command &lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#1-cmd-p-opens-the-palette-to-search-for-a-file"&gt;
  &lt;/a&gt;
  1. CMD + P: Opens the palette to search for a file
&lt;/h3&gt;

&lt;p&gt;(Windows/Linux: CTRL + P)&lt;/p&gt;

&lt;p&gt;Navigating through files is one of the most common options and this command can come in pretty handy. You can type the name of the file in the search box and select the file by clicking or by pressing enter on the search result to open the file&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cTCOXgfa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hxo3d2am76propqw6vl4.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cTCOXgfa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hxo3d2am76propqw6vl4.gif" alt="CMD+P"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-cmd-shift-l-add-cursors-to-all-matching-selections"&gt;
  &lt;/a&gt;
  2. CMD + SHIFT + L: Add cursors to all matching selections
&lt;/h3&gt;

&lt;p&gt;(Windows/Linux: CTRL + SHIFT + L)&lt;/p&gt;

&lt;p&gt;One of my favorite features of VSCode is multi cursors. They allow you to replace text or append more text without copy-pasting or requiring you to change it one at a time. &lt;/p&gt;

&lt;p&gt;Using this command, you can add cursors to all matching selections in the document&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m9KDF5lp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hvaju2yhi84vprpnsytl.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m9KDF5lp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hvaju2yhi84vprpnsytl.gif" alt="CMD+SHIFT+L"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-cmd-d-add-cursor-to-next-matching-selection"&gt;
  &lt;/a&gt;
  3. CMD + D: Add cursor to next matching selection
&lt;/h3&gt;

&lt;p&gt;(Windows/Linux: CTRL + D)&lt;/p&gt;

&lt;p&gt;Like the above command, this is also used to add cursors but with this, you can add the cursor to the next matching selection. This is especially helpful when you don't want to select all occurrences together&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--diGL3ajV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/btp319vo48whuryb21k9.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--diGL3ajV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/btp319vo48whuryb21k9.gif" alt="CMD+D"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-cmd-u-undo-last-cursor-operation"&gt;
  &lt;/a&gt;
  4.  CMD + U: Undo last cursor operation
&lt;/h3&gt;

&lt;p&gt;(Windows/Linux: CTRL + U)&lt;/p&gt;

&lt;p&gt;If you need to undo cursor selection in a case where you selected more cursors than required or reset the cursor to a previous position, you can use this command to undo the last cursor action&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0OI5Zdp3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l57879ascz6drk6rhsrl.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0OI5Zdp3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l57879ascz6drk6rhsrl.gif" alt="CMD+U"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-cmd-l-select-current-line"&gt;
  &lt;/a&gt;
  5. CMD + L: Select current line.
&lt;/h3&gt;

&lt;p&gt;(Windows/Linux: CTRL + L)&lt;/p&gt;

&lt;p&gt;Often we use mouse drag to select the text, but if we want to select entire lines, we can use this command &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0e5cfa_p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9z09oof6f5oupytbnx18.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0e5cfa_p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9z09oof6f5oupytbnx18.gif" alt="CMD+L"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-ctrl-g-go-to-a-specific-line"&gt;
  &lt;/a&gt;
  6. CTRL + G: Go to a specific line
&lt;/h3&gt;

&lt;p&gt;(Windows/Linux: CTRL + G)&lt;/p&gt;

&lt;p&gt;We can navigate to a specific line of the document by using this simple command and typing the line number. &lt;/p&gt;

&lt;p&gt;This is especially helpful in situations when error stack traces provide us the line number of the file and our file is large.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CFbXfmRo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/673j1pskcne0zc7sgp5g.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CFbXfmRo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/673j1pskcne0zc7sgp5g.gif" alt="CTRL+G"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#7-cmd-k-w-close-all-open-editor-tabs"&gt;
  &lt;/a&gt;
  7. CMD + K + W: Close all open editor tabs
&lt;/h3&gt;

&lt;p&gt;(Windows/Linux: CTRL + K + W)&lt;/p&gt;

&lt;p&gt;This command is useful when we want to clear all tabs. &lt;/p&gt;

&lt;p&gt;Often while debugging or developing, I have opened many tabs and when I want to change the context or start fresh, this command comes in very handy&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SbrLzFHk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mtdwxtdan9ik48jrkrk2.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SbrLzFHk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mtdwxtdan9ik48jrkrk2.gif" alt="CMD+K+W"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#8-shift-option-a-toggle-block-comment"&gt;
  &lt;/a&gt;
  8. SHIFT + OPTION + A : Toggle  block comment
&lt;/h3&gt;

&lt;p&gt;(Windows: SHIFT + ALT + A, Linux: CTRL+SHIFT+A)&lt;/p&gt;

&lt;p&gt;This shortcut also allows us to add a new block comment or toggle existing ones.&lt;/p&gt;

&lt;p&gt;We enclose a piece of Javascript code with &lt;code&gt;/* */&lt;/code&gt;  to add a block comment. However, with this shortcut, we can add or remove a block comment for the selected code block or add new ones.  &lt;/p&gt;

&lt;p&gt;Line comments can be toggled with &lt;code&gt;CMD + / (Windows/Linux: CTRL + /)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--klhXakvg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1d0o7o7bd56dub5cf25s.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--klhXakvg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1d0o7o7bd56dub5cf25s.gif" alt="SHIFT+ALT+A"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#9-cmd-option-fold-code-block"&gt;
  &lt;/a&gt;
  9. CMD + OPTION + [ : Fold code block
&lt;/h3&gt;

&lt;p&gt;(Windows/Linux: CTRL + SHIFT + [ )&lt;/p&gt;

&lt;p&gt;This command is especially useful when we want to focus on a specific area of the code and hence ignore some code blocks. This folds the block closest to the cursor. &lt;/p&gt;

&lt;p&gt;You can unfold the code block with &lt;code&gt;CMD + OPTION + ] (Windows/Linux: CTRL + SHIFT + ] )&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wjlZCUyI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h7l30kgftqjwmhhyo735.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wjlZCUyI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h7l30kgftqjwmhhyo735.gif" alt="CMD+OPTION+Bracket"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#10-option-updown-move-line-up-or-down"&gt;
  &lt;/a&gt;
  10. OPTION + UP/DOWN : Move line up or down
&lt;/h3&gt;

&lt;p&gt;(Windows/Linux: ALT + UP/DOWN)&lt;/p&gt;

&lt;p&gt;When you want to move a piece of code, for example, a variable declaration either up or down, you cut and paste it to the appropriate place but if the readjustment is for a few lines you can use this command to move the current line/selection up or down&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RwcwivLM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g2he2n3sv0u2fp03kwx5.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RwcwivLM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g2he2n3sv0u2fp03kwx5.gif" alt="ALT+UP"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#11-ctrl-raw-open-integrated-terminal"&gt;
  &lt;/a&gt;
  11. CTRL + ` : Open integrated terminal
&lt;/h3&gt;

&lt;p&gt;(Windows/Linux: CTRL+ `)&lt;/p&gt;

&lt;p&gt;One of the most amazing features of VSCode is that it supports an integrated terminal which you can use just like a normal terminal and to run code or perform other operations. This command helps you open the terminal when you need it&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uNZ_lWgy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iftjbtlqz8wec862078p.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uNZ_lWgy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iftjbtlqz8wec862078p.gif" alt="CTRL+BackTick"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#12-cmd-split-editor-view"&gt;
  &lt;/a&gt;
  12. CMD + \ : Split editor view
&lt;/h3&gt;

&lt;p&gt;(Windows/Linux: CTRL+)&lt;/p&gt;

&lt;p&gt;You can split your editor view to open multiple files together. &lt;/p&gt;

&lt;p&gt;This is especially helpful when you want to refer to content from a file while coding in another.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BL26CsYe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0ztr68zghaqmih1siaal.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BL26CsYe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0ztr68zghaqmih1siaal.gif" alt="CMD+backslash"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#13-shift-option-f-format-document"&gt;
  &lt;/a&gt;
  13. SHIFT + OPTION + F : Format document
&lt;/h3&gt;

&lt;p&gt;(Windows: SHIFT+ALT+F, Linux: CTRL+SHIFT+I)&lt;/p&gt;

&lt;p&gt;Often we have extensions enabled or settings configured to format documents on save but sometimes we like to control when we want to format the document. This is where this command comes in. &lt;/p&gt;

&lt;p&gt;It allows us to format the current document according to the configured settings. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--v9_91UCU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dwmne9b9dlprk36l3suc.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--v9_91UCU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dwmne9b9dlprk36l3suc.gif" alt="SHIFT+ALT+F"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#14-option-shift-up-down-duplicate-selection-up-or-down"&gt;
  &lt;/a&gt;
  14. OPTION + SHIFT + UP / DOWN : Duplicate selection up or down
&lt;/h3&gt;

&lt;p&gt;(Windows/Linux: SHIFT+ALT+UP/DOWN)&lt;/p&gt;

&lt;p&gt;Using this command you can duplicate the selected code either above or below the current code.&lt;/p&gt;

&lt;p&gt;I love to use this when some functions are almost identical except for some small changes which I make after duplicating the previous implementation&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hnqjZZA4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3j692xc8232oqm77b32c.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hnqjZZA4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3j692xc8232oqm77b32c.gif" alt="SHIFT+ALT+UP"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#15-cmd-b-toggle-sidebar"&gt;
  &lt;/a&gt;
  15. CMD + B: Toggle Sidebar
&lt;/h3&gt;

&lt;p&gt;(Windows/Linux: CTRL+B)&lt;/p&gt;

&lt;p&gt;You can use this command to toggle the sidebar to make more space for your file view as and when needed. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DwGHsLv6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9iicj04v50q5joc2dx8o.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DwGHsLv6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9iicj04v50q5joc2dx8o.gif" alt="CMD+B"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#cherry-on-the-cake"&gt;
  &lt;/a&gt;
  Cherry on the cake
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;code .&lt;/code&gt; :  Open VSCode from the terminal&lt;/p&gt;

&lt;p&gt;Although this isn't a keyboard shortcut, it is extremely useful when you are working with the terminal and want to open a directory in VSCode&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uugoiilV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l4n4wdhaex44s2j6qjop.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uugoiilV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l4n4wdhaex44s2j6qjop.gif" alt="CMD+D"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;P.S. If this isn't configured yet, you can do so from VSCode by open command palette with &lt;code&gt;CMD+SHIFT+P&lt;/code&gt; and type in &lt;code&gt;shell&lt;/code&gt; and then select &lt;code&gt;Shell Command: Install 'code' command in PATH&lt;/code&gt; from the options.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h3&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h3&gt;

&lt;p&gt;In this article, I covered some of the common, uncommon, and useful shortcuts. &lt;/p&gt;

&lt;p&gt;There are other shortcuts too which are useful like &lt;code&gt;CMD+SHIFT+F&lt;/code&gt; for search, &lt;code&gt;CMD+SHIFT+P&lt;/code&gt; for showing command palette, &lt;code&gt;CMD+/&lt;/code&gt; for toggling line comment, etc.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Thank you for reading&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you found this article helpful, do like and share this with your colleagues and friends. If you have any suggestions, please feel free to add them in the comments.&lt;/p&gt;

&lt;p&gt;I also share tips and tricks related to web development with Javascript and React on &lt;a href="https://twitter.com/ShubhamReacts"&gt;Twitter&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Come say hi 👋 . Let us connect 😁&lt;/p&gt;

</description>
      <category>vscode</category>
      <category>beginners</category>
      <category>programming</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Laravel for Beginners : a Quick Guide - 8</title>
      <author>Kartik Bhat</author>
      <pubDate>Tue, 24 Aug 2021 15:55:42 +0000</pubDate>
      <link>https://dev.to/kartikbhat/laravel-for-beginners-a-quick-guide-8-2na1</link>
      <guid>https://dev.to/kartikbhat/laravel-for-beginners-a-quick-guide-8-2na1</guid>
      <description>&lt;h3&gt;
  &lt;a href="#laravel-routes"&gt;
  &lt;/a&gt;
  Laravel Routes
&lt;/h3&gt;

&lt;p&gt;I hope you understood the concept of adding data from user interface and receiving it response back to user interface,&lt;/p&gt;

&lt;p&gt;Let's revisit concept of 'routes'...&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;what is 'route' ?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;simply, route is a key word that connects user interface to the backend - Controller;  :)&lt;/p&gt;

&lt;p&gt;Ok in my previous articles you saw these kinds of routes ;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Route::get('addData', [DataController::class,'addData']);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;right ?&lt;/p&gt;

&lt;p&gt;(revisit web.php file and verify it once)&lt;/p&gt;

&lt;p&gt;this will connect to addData() function present under DataController Class, correct ?&lt;/p&gt;

&lt;p&gt;Hope you observed that you are using &lt;strong&gt;Route&lt;/strong&gt; Object to define new route ;&lt;/p&gt;

&lt;p&gt;this &lt;strong&gt;Route&lt;/strong&gt; object is actually defined under this class (you can notice this at the top section of the file align with &lt;em&gt;use&lt;/em&gt; keyword)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Illuminate\Support\Facades\Route;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;then after that you observe key word &lt;strong&gt;get&lt;/strong&gt;; it is nothing but HTTP method; yes exactly,&lt;/p&gt;

&lt;p&gt;it will catch a type of request using a HTTP method that you used while calling that route,&lt;/p&gt;

&lt;p&gt;HTTP method is a way request rises to the application's backend ;&lt;/p&gt;

&lt;p&gt;What are different types of HTTP methods ?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;GET&lt;/li&gt;
&lt;li&gt;POST&lt;/li&gt;
&lt;li&gt;PUT&lt;/li&gt;
&lt;li&gt;PATCH&lt;/li&gt;
&lt;li&gt;DELETE &lt;/li&gt;
&lt;li&gt;OPTIONS&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;for a time being lets concentrate on GET and POST methods only, and these are the methods we frequently use in our laravel applications.&lt;/p&gt;

&lt;p&gt;Laravel support all these kinds of methods; like&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Route::get('addData', [DataController::class,'addData']);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Route::post('addData', [DataController::class,'addData']);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Route::put('addData', [DataController::class,'addData']);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Route::patch('addData', [DataController::class,'addData']);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Route::delete('addData', [DataController::class,'addData']);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Route::options('addData', [DataController::class,'addData']);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;along with above mentioned HTTP method routes laravel also provides another route type, it is &lt;strong&gt;any&lt;/strong&gt; , it catches any kind of HTTP method&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Route::any('addData', [DataController::class,'addData']);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#mistyped-routesrequests"&gt;
  &lt;/a&gt;
  Mistyped routes/requests
&lt;/h3&gt;

&lt;p&gt;laravel matches incoming requests HTTP method first, then it finds suitable route in web.php file, if it found then control moves to controller's method; else you can observe 404 page&lt;/p&gt;

&lt;p&gt;let try this,&lt;br&gt;
You know we have a route called,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Route::get('addData', [DataController::class,'addData']);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;hit this route from browser; (hope you are running laravel app)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="http://127.0.0.1:8000/addData"&gt;http://127.0.0.1:8000/addData&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;you can observe this &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--x0LH9XG6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bp0o6g7hjc8m4evwrobd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--x0LH9XG6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bp0o6g7hjc8m4evwrobd.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;right ? &lt;/p&gt;

&lt;p&gt;now just alter keyword &lt;strong&gt;addData&lt;/strong&gt; to &lt;strong&gt;addData--1&lt;/strong&gt; present in the url; Ok&lt;/p&gt;

&lt;p&gt;now hit that url again;&lt;br&gt;
(Do verify that we don't have any route defined called &lt;strong&gt;addData--1&lt;/strong&gt; in our web.php file)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="http://127.0.0.1:8000/addData--1"&gt;http://127.0.0.1:8000/addData--1&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;since we don't have any such route; laravel manages to load 404 page;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XujLWspo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cjdmwqbro2z5hlww7mv1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XujLWspo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cjdmwqbro2z5hlww7mv1.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So, no need to worry about mistyped routes/requests from browser, laravel manages it by itself, seems interesting right ? :)&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#routes-and-form-submit"&gt;
  &lt;/a&gt;
  Routes and Form submit
&lt;/h3&gt;

&lt;p&gt;whenever the form submit happens, some that will be passed to the backend from our user interface(say frontend), right ?&lt;/p&gt;

&lt;p&gt;Open &lt;strong&gt;addData.blade.php&lt;/strong&gt; file located under resources-&amp;gt;views folder&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;html&amp;gt;
    &amp;lt;body&amp;gt;
        &amp;lt;div&amp;gt;
            &amp;lt;h3&amp;gt;Add Data&amp;lt;/h3&amp;gt;
            &amp;lt;form method="GET" action="{{ url('saveFormData') }}"&amp;gt;
                &amp;lt;label&amp;gt;Name&amp;lt;/label&amp;gt;
                &amp;lt;input type="text" name="name" /&amp;gt;
                &amp;lt;label&amp;gt;Age&amp;lt;/label&amp;gt;
                &amp;lt;input type="number" name="age" /&amp;gt;
                &amp;lt;button type="submit"&amp;gt;Save&amp;lt;/button&amp;gt;
            &amp;lt;/form&amp;gt;
        &amp;lt;/div&amp;gt;
    &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;you can observe &lt;strong&gt;method&lt;/strong&gt; and &lt;strong&gt;action&lt;/strong&gt; mentioned with form element&lt;/p&gt;

&lt;p&gt;method - GET&lt;br&gt;
action - route saveFormData&lt;/p&gt;

&lt;p&gt;here form is submitting data to the route &lt;strong&gt;saveFormData&lt;/strong&gt; via GET http method; you know it I suppose :)&lt;/p&gt;

&lt;p&gt;Now open &lt;strong&gt;DataController&lt;/strong&gt; class and go to the function returned by 'saveFormData' route; it is &lt;strong&gt;saveForm()&lt;/strong&gt;, add dd() of $request after entering the function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;public function saveForm(Request $request) {
        dd($request);
        $data = [
            'name' =&amp;gt; $request-&amp;gt;name,
            'age' =&amp;gt; $request-&amp;gt;age
        ];
        $insertData = Data::create($data);

        if(isset($insertData['id'])) {
            $message = "Success";
        } else {
            $message = "Failed";
        }

        $response = [
            'message'=&amp;gt;$message
        ];

        return view('response',$response);
 }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Ok, then hit the route 'addData' from your browser;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#http1270018000adddata"&gt;
  &lt;/a&gt;
  &lt;a href="http://127.0.0.1:8000/addData"&gt;http://127.0.0.1:8000/addData&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;then fill the form and submit;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--X6wFA0m6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cvzvn2fvfrxz5t6m7c33.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X6wFA0m6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cvzvn2fvfrxz5t6m7c33.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can see this window right ?&lt;br&gt;
Now,, just observe URL bar;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sji6YK6O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/78ypv8rz7gdzhbxql658.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sji6YK6O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/78ypv8rz7gdzhbxql658.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;you can see those form input data; those are passing as a url parameters to the backend(Controller); right ?&lt;/p&gt;

&lt;p&gt;now, lets change form method from &lt;strong&gt;GET&lt;/strong&gt; to &lt;strong&gt;POST&lt;/strong&gt; present in the file addData.blade.php&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;form method="POST" action="{{ url('saveFormData') }}"&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Again, hit the &lt;strong&gt;addData&lt;/strong&gt; route and fill the form ; then submit.&lt;/p&gt;

&lt;p&gt;What you are seeing ?&lt;/p&gt;

&lt;p&gt;this error right ?&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--c1Ykoz3U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jdpd34x82pftvydoscak.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c1Ykoz3U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jdpd34x82pftvydoscak.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Why ?&lt;/p&gt;

&lt;p&gt;Observe web.php file; there is no route with a method post having keyword 'saveFormData' ; Observed ?&lt;/p&gt;

&lt;p&gt;what you got ?&lt;br&gt;
route catches an http method that request is coming from; through form you are sending data through POST method for 'saveFormData'  route; it actually doesn't exist;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Route::get('saveFormData', [DataController::class,'saveForm']);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;it is a &lt;strong&gt;get&lt;/strong&gt; route with a key word 'saveFormData' , it doesn't catches request with POST method; then how to catch it ?&lt;/p&gt;

&lt;p&gt;Simple, create a similar route with &lt;strong&gt;post&lt;/strong&gt; method; like&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Route::post('saveFormData', [DataController::class,'saveForm']);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;that too returning same controller's same method; no issues.&lt;/p&gt;

&lt;p&gt;now again hit the url : ####&lt;a href="http://127.0.0.1:8000/addData####"&gt;http://127.0.0.1:8000/addData####&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;and fill the form and submit again;&lt;/p&gt;

&lt;p&gt;what you are seeing now ?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SAn-nJEm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sq4fh54gsrxm64m9quv9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SAn-nJEm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sq4fh54gsrxm64m9quv9.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;you are seeing dd() response of $request; right ?&lt;/p&gt;

&lt;p&gt;Observe URL bar now; there is no url parameters exist but still Controller is receiving form data; right ?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xYNTKKsF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1cjlfmbzj13ihfuzf50o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xYNTKKsF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1cjlfmbzj13ihfuzf50o.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is what the main difference between GET and POST http methods :)&lt;/p&gt;

&lt;p&gt;POST method doesn't shows form submitted data as an URL parameters where as GET method clearly shows;&lt;/p&gt;

&lt;p&gt;There is a limitation of data length that can be passed through GET method, where POST method hasn't any such;&lt;/p&gt;

&lt;p&gt;Even though both the method has there own features; primarily we can prefer form data should be submitted through POST method, a secure approach we believe;&lt;/p&gt;

&lt;p&gt;While sending FORM data through POST we need add another constraint to the form i.e CSRF token (Cross-Site Request Forgery)&lt;br&gt;
is a way our application identifies that request is coming / data is submitting from known/authenticated source, Laravel automatically generates this CSRF token and just we need to add it within our form element&lt;/p&gt;

&lt;p&gt;within form element of the addData blade file we just need to mention&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;@csrf
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;html&amp;gt;
    &amp;lt;body&amp;gt;
        &amp;lt;div&amp;gt;
            &amp;lt;h3&amp;gt;Add Data&amp;lt;/h3&amp;gt;
            &amp;lt;form method="POST" action="{{ url('saveFormData') }}"&amp;gt;
                @csrf
                &amp;lt;label&amp;gt;Name&amp;lt;/label&amp;gt;
                &amp;lt;input type="text" name="name" /&amp;gt;
                &amp;lt;label&amp;gt;Age&amp;lt;/label&amp;gt;
                &amp;lt;input type="number" name="age" /&amp;gt;
                &amp;lt;button type="submit"&amp;gt;Save&amp;lt;/button&amp;gt;
            &amp;lt;/form&amp;gt;
        &amp;lt;/div&amp;gt;
    &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;it will be automatically verified by laravel while receiving the request at backend;&lt;/p&gt;

&lt;p&gt;this is all about brief explanation on Laravel Routes; Hope you understood about it;&lt;/p&gt;

&lt;p&gt;Bye ;)&lt;/p&gt;

</description>
      <category>laravel</category>
      <category>php</category>
      <category>mvc</category>
    </item>
    <item>
      <title>How To Create Login Page With HTML And CSS Only</title>
      <author>frontendtrick</author>
      <pubDate>Tue, 24 Aug 2021 15:30:06 +0000</pubDate>
      <link>https://dev.to/frontendtrick/how-to-create-login-page-with-html-and-css-only-5d2i</link>
      <guid>https://dev.to/frontendtrick/how-to-create-login-page-with-html-and-css-only-5d2i</guid>
      <description>&lt;p&gt;Html Code:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
  &amp;lt;head&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
    &amp;lt;div class="container"&amp;gt;
      &amp;lt;form action="#"&amp;gt;
        &amp;lt;div class="title"&amp;gt;Login&amp;lt;/div&amp;gt;
        &amp;lt;div class="input-box underline"&amp;gt;
          &amp;lt;input type="text" placeholder="Enter Your Email" required&amp;gt;
          &amp;lt;div class="underline"&amp;gt;&amp;lt;/div&amp;gt;
        &amp;lt;/div&amp;gt;
        &amp;lt;div class="input-box"&amp;gt;
          &amp;lt;input type="password" placeholder="Enter Your Password" required&amp;gt;
          &amp;lt;div class="underline"&amp;gt;&amp;lt;/div&amp;gt;
        &amp;lt;/div&amp;gt;
        &amp;lt;div class="input-box button"&amp;gt;
          &amp;lt;input type="submit" name="" value="Login"&amp;gt;&amp;lt;br&amp;gt;
          
        &amp;lt;/div&amp;gt;
      &amp;lt;/form&amp;gt;
    &amp;lt;/div&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;CSS Code:&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;@import url('https://fonts.googleapis.com/css2?family=Baloo+Bhai+2:wght@500&amp;amp;display=swap');
*{
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: 'Baloo Bhai 2',sans-serif;
  background: #FAF7FF;
}
html, body{
  display: grid;
  height: 100vh;
  width: 100%;
  place-items: center;
  background: linear-gradient(to right, #540099 0%,100%);
}
::selection{
  background: #ff80bf;

}
.container{
  background: #FAF7FF;
  max-width: 350px;
  width: 100%;
  padding: 25px 30px;
  border-radius: 10px;
  box-shadow: 10px 20px 20px rgb(0 0 0 / 15%);
}
.container form .title{
  font-size: 30px;
  font-weight: 600;
  margin: 20px 0 10px 0;
  position: relative;
}
.container form .title:before{
  content: '';
  position: absolute;
  height: 4px;
  width: 33px;
  left: 0px;
  bottom: 3px;
  border-radius: 5px;
  background: linear-gradient(to right, #290099 0%, #ae00ff 100%);
}
.container form .input-box{
  width: 100%;
  height: 45px;
  margin-top: 25px;
  position: relative;
}
.container form .input-box input{
  width: 100%;
  height: 100%;
  outline: none;
  font-size: 18px;
  border: none;
}
.container form .underline::before{
  content: '';
  position: absolute;
  height: 2px;
  width: 100%;
  background: #ccc;
  left: 0;
  bottom: 0;
}

.container form .button{
  margin: 40px 0 20px 0;
}
.container .input-box input[type="submit"]{
  background: linear-gradient(to right, #290099 0%, #ae00ff 100%);
  font-size: 17px;
  color: #fff;
  border-radius: 5px;
  cursor: pointer;
  transition: all 0.3s ease;
}
.container .input-box input[type="submit"]:hover{
  
  background-color: rgb(224, 220, 245);
}
.container .option{
  font-size: 14px;
  text-align: center;
}
&lt;/code&gt;&lt;/pre&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Forem PR Walkthroughs - MLH Fellowship Demos Day</title>
      <author>Khadija Sidhpuri</author>
      <pubDate>Tue, 24 Aug 2021 15:28:36 +0000</pubDate>
      <link>https://dev.to/squarebat/forem-pr-walkthroughs-mlh-fellowship-demos-day-fep</link>
      <guid>https://dev.to/squarebat/forem-pr-walkthroughs-mlh-fellowship-demos-day-fep</guid>
      <description>&lt;p&gt;&lt;em&gt;Cover image by &lt;a href="https://unsplash.com/@gabrielvdz?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText%22%3E"&gt;Gabriel Valdez&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/roller-coaster?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText%22%3E"&gt;Unsplash&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The end is near! One week remains of the 12 week long MLH Fellowship - the best learning experience of my life so far. Over the last 3 months, I had the amazing opportunity to contribute to &lt;a href="https://www.forem.com"&gt;Forem&lt;/a&gt; - the very platform that DEV is built on. I thought about sharing my experience and work,  and what better platform to do it on than the one I contributed to. Here I present to you my beautiful Forem Adventures!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#my-first-pr"&gt;
  &lt;/a&gt;
  My First PR
&lt;/h2&gt;

&lt;p&gt;What does one do when they just begin contributing to a software? They look for good first issues of course! This issue seemed like it was the right fit!&lt;/p&gt;


&lt;div class="ltag_github-liquid-tag"&gt;
  &lt;h1&gt;
    &lt;a href="https://github.com/forem/forem/issues/13935"&gt;
      &lt;img class="github-logo" alt="GitHub logo" src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg"&gt;
      &lt;span class="issue-title"&gt;
        Strikethrough markdown within a link is not rendered in live comments (but works fine elsewhere)
      &lt;/span&gt;
      &lt;span class="issue-number"&gt;#13935&lt;/span&gt;
    &lt;/a&gt;
  &lt;/h1&gt;
  &lt;div class="github-thread"&gt;
    &lt;div class="timeline-comment-header"&gt;
      &lt;a href="https://github.com/andygeorge"&gt;
        &lt;img class="github-liquid-tag-img" src="https://res.cloudinary.com/practicaldev/image/fetch/s--hsW_nydi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars.githubusercontent.com/u/10601857%3Fv%3D4" alt="andygeorge avatar"&gt;
      &lt;/a&gt;
      &lt;div class="timeline-comment-header-text"&gt;
        &lt;strong&gt;
          &lt;a href="https://github.com/andygeorge"&gt;andygeorge&lt;/a&gt;
        &lt;/strong&gt; posted on &lt;a href="https://github.com/forem/forem/issues/13935"&gt;&lt;time&gt;Jun 07, 2021&lt;/time&gt;&lt;/a&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag-github-body"&gt;
      

&lt;p&gt;&lt;strong&gt;Describe the bug&lt;/strong&gt;
While using &lt;a href="https://github.com/adam-p/markdown-here/wiki/Markdown-Here-Cheatsheet#emphasis"&gt;Strikethrough markdown&lt;/a&gt; within &lt;a href="https://github.com/adam-p/markdown-here/wiki/Markdown-Here-Cheatsheet#links"&gt;link text&lt;/a&gt;, I discovered the strikethrough is not rendered &lt;strong&gt;in live comment views only&lt;/strong&gt;; this appears to work elsewhere (comment previews, posts, and post previews).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;To Reproduce&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Add strikethrough text within a link to a comment:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[~~strikethrough~~](https://www.example.com)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This looks fine in posts, post previews, and comment previews:
&lt;a href="https://user-images.githubusercontent.com/10601857/121033652-fe808700-c771-11eb-9471-1acd53275530.png" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ShpK4oDH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/10601857/121033652-fe808700-c771-11eb-9471-1acd53275530.png" alt="image"&gt;&lt;/a&gt;
&lt;a href="https://user-images.githubusercontent.com/10601857/121033703-08a28580-c772-11eb-9a5f-bbd6272c9f6a.png" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ztditMOW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/10601857/121033703-08a28580-c772-11eb-9a5f-bbd6272c9f6a.png" alt="image"&gt;&lt;/a&gt;
&lt;a href="https://user-images.githubusercontent.com/10601857/121033744-10622a00-c772-11eb-9205-50bf2a4f5608.png" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BvotVERY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/10601857/121033744-10622a00-c772-11eb-9205-50bf2a4f5608.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;...but not in a submitted comment:
&lt;a href="https://user-images.githubusercontent.com/10601857/121033804-1b1cbf00-c772-11eb-95c8-f66c94ae0eef.png" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gXHa-j7Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/10601857/121033804-1b1cbf00-c772-11eb-95c8-f66c94ae0eef.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Expected behavior&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Strikethrough markdown within link text is rendered correctly.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Desktop (please complete the following information):&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OS, version: Fedora Core 33&lt;/li&gt;
&lt;li&gt;Browser, version: Firefox 88.0.1 and Chromium 91.0.4472.77&lt;/li&gt;
&lt;/ul&gt;

    &lt;/div&gt;
    &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/forem/forem/issues/13935"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
 

&lt;p&gt;This issue reports a bug in how the markdown is processed in the comments, the strikethrough text wouldn't render correctly as per markdown rules - &lt;code&gt;~~text~~&lt;/code&gt; within a link. I looked into the code base to find where the problem was. This was really challenging, I had underestimated how huge Forem is and took time understanding the code base. That is why you must always pick up an easy issue as your first one, it's more about understanding the code base than writing code. This issue helped me a lot to explore a lot of corners and understand the Forem architecture. I eventually found out that a method that shortened URLs in the comments was causing html tags to be stripped out. I fixed that and raised &lt;a href="https://github.com/forem/forem/pull/14103"&gt;PR 14103&lt;/a&gt;, my first PR to a huge repo, and my first bug fix.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Except the bug wasn't solved&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Even after the PR got merged, it kept bugging me that my fix wouldn't resolve all edge cases, I tried it out in the production and indeed, I found more bugs. Which leads me to - &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#my-first-issue"&gt;
  &lt;/a&gt;
  My First Issue
&lt;/h2&gt;

&lt;p&gt;I raised an issue relating to the bug I found while working on the above PR. I found out that only the bug relating to strikethrough text was solved, but the comments were stripping out all sorts of text formatting, which leaves the user just plain text at disposal ;-; .&lt;/p&gt;


&lt;div class="ltag_github-liquid-tag"&gt;
  &lt;h1&gt;
    &lt;a href="https://github.com/forem/forem/issues/14114"&gt;
      &lt;img class="github-logo" alt="GitHub logo" src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg"&gt;
      &lt;span class="issue-title"&gt;
        shorten_urls causing link text in comments to not render correctly
      &lt;/span&gt;
      &lt;span class="issue-number"&gt;#14114&lt;/span&gt;
    &lt;/a&gt;
  &lt;/h1&gt;
  &lt;div class="github-thread"&gt;
    &lt;div class="timeline-comment-header"&gt;
      &lt;a href="https://github.com/squarebat"&gt;
        &lt;img class="github-liquid-tag-img" src="https://res.cloudinary.com/practicaldev/image/fetch/s--Wo8QZm3M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars.githubusercontent.com/u/59063821%3Fv%3D4" alt="squarebat avatar"&gt;
      &lt;/a&gt;
      &lt;div class="timeline-comment-header-text"&gt;
        &lt;strong&gt;
          &lt;a href="https://github.com/squarebat"&gt;squarebat&lt;/a&gt;
        &lt;/strong&gt; posted on &lt;a href="https://github.com/forem/forem/issues/14114"&gt;&lt;time&gt;Jul 01, 2021&lt;/time&gt;&lt;/a&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag-github-body"&gt;
      

&lt;p&gt;&lt;strong&gt;Describe the bug&lt;/strong&gt;
In issue #13935, &lt;a class="mentioned-user" href="https://dev.to/andygeorge"&gt;@andygeorge&lt;/a&gt;
 reported that strikethrough text within links was rendered as normal text in live comments. I found out that the method &lt;code&gt;shorten_urls&lt;/code&gt; in &lt;code&gt;models/comment.rb&lt;/code&gt; was causing the issue and raised PR #14103 fixing it. However, I later discovered that no text formatting (bold, italics etc) is rendered within &lt;a href="https://github.com/adam-p/markdown-here/wiki/Markdown-Here-Cheatsheet#links"&gt;link text&lt;/a&gt; in comments.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;To Reproduce&lt;/strong&gt;
Add text formatting within link text in comments:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[__bold-text__](https://www.example.com)
[~~strikethrough~~](https://www.example.com)
[_italic_](https://www.example.com)
[___bold-italic___](https://www.example.com)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This looks fine in posts and comment previews:
&lt;a href="https://user-images.githubusercontent.com/59063821/124055478-986de380-da41-11eb-868c-f2fad3f0bba5.png" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IOi7A48U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/59063821/124055478-986de380-da41-11eb-868c-f2fad3f0bba5.png" alt="preview"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;But isn't rendered in comments (Only strikethrough works because #14103 got merged):
&lt;a href="https://user-images.githubusercontent.com/59063821/124055512-ad4a7700-da41-11eb-89b7-f4fe5d4c9cc3.png" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EKXnlvP3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/59063821/124055512-ad4a7700-da41-11eb-89b7-f4fe5d4c9cc3.png" alt="live-comment"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Expected behavior&lt;/strong&gt;
Text within links should be formatted correctly in comments.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Desktop (please complete the following information):&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OS, version: POP_OS! 20.10&lt;/li&gt;
&lt;li&gt;Browser, version: Firefox&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Additional context&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The bug occurs because &lt;code&gt;shorten_urls&lt;/code&gt; in &lt;code&gt;models/comment.rb&lt;/code&gt; strips out all html tags within anchor tag in the html text processed from markdown. The method is used to truncate URLs longer than ~37 characters.&lt;/p&gt;
&lt;p&gt;In my opinion, the best way to fix this issue is to limit &lt;code&gt;shorten_urls&lt;/code&gt; to only truncate URLs and not custom link text. Doing so will also prevent any useful text from getting truncated.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;potential bug&lt;/strong&gt;: comment preview looks different from the final comment, because URLs aren't shortened in previews. This could be raised as another issue.&lt;/p&gt;

    &lt;/div&gt;
    &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/forem/forem/issues/14114"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
 

&lt;p&gt;Since I had already worked on it earlier and had an idea how to solve this, I worked on the fix for it and raised &lt;a href="https://github.com/forem/forem/pull/14240"&gt;PR 14240&lt;/a&gt; . I tested it out, maintainers reviewed it, it got pushed to prod and I called it a day. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Except it wasn't solved yet&lt;/strong&gt;, which leads me to - &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#the-bug-i-pushed-to-prod"&gt;
  &lt;/a&gt;
  The bug I pushed to Prod
&lt;/h2&gt;

&lt;p&gt;Yeah, this is embarrassing. Even though I thought I had thoroughly tested my code, both manually and automatically but I still had to try it out in Production, on DEV.to. I happened to come across a bug, which was produced due to the changes I made. Fortunately, I noticed it soon enough, and had the PR reverted - &lt;/p&gt;


&lt;div class="ltag_github-liquid-tag"&gt;
  &lt;h1&gt;
    &lt;a href="https://github.com/forem/forem/pull/14240#issuecomment-881130782"&gt;
      &lt;img class="github-logo" alt="GitHub logo" src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg"&gt;
      &lt;span class="issue-title"&gt;
        Comment for
      &lt;/span&gt;
      &lt;span class="issue-number"&gt;#14240&lt;/span&gt;
    &lt;/a&gt;
  &lt;/h1&gt;
  &lt;div class="github-thread"&gt;
    &lt;div class="timeline-comment-header"&gt;
      &lt;a href="https://github.com/squarebat"&gt;
        &lt;img class="github-liquid-tag-img" src="https://res.cloudinary.com/practicaldev/image/fetch/s--fI8VGo8f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars.githubusercontent.com/u/59063821%3Fu%3D56d3e4e2301848ec216d8b8aedd570c90737d573%26v%3D4" alt="squarebat avatar"&gt;
      &lt;/a&gt;
      &lt;div class="timeline-comment-header-text"&gt;
        &lt;strong&gt;
          &lt;a href="https://github.com/squarebat"&gt;squarebat&lt;/a&gt;
        &lt;/strong&gt; commented on &lt;a href="https://github.com/forem/forem/pull/14240#issuecomment-881130782"&gt;&lt;time&gt;Jul 16, 2021&lt;/time&gt;&lt;/a&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag-github-body"&gt;
      &lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/jgaskins"&gt;@jgaskins&lt;/a&gt;
 I was worried about the unexpected bugs, and it appears that a bug has occurred :( . Images in the comments don't get rendered as images but as plain links.
E.g
&lt;code&gt;![Alt-text](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q2czbn344eli58gs3ln6.png)&lt;/code&gt; gets rendered as -
&lt;a href="https://user-images.githubusercontent.com/59063821/125881913-cf72f4c3-4466-43ba-a9cd-1840e281bca8.png" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1iPmFGBJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/59063821/125881913-cf72f4c3-4466-43ba-a9cd-1840e281bca8.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Images were working fine when I tested it on local, but that would be because localhost urls are structured differently. I am extremely sorry about this, should've tested it thoroughly. I'll fix it as soon as possible. In the mean time, the changes should best be reverted.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; I have fixed the bug. Shall I revert the changes and create a new PR? Again, apologies for the inconvenience 😞&lt;/p&gt;

    &lt;/div&gt;
    &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/forem/forem/pull/14240#issuecomment-881130782"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
 

&lt;p&gt;Eventually, I had this fixed with &lt;a href="https://github.com/forem/forem/pull/14262"&gt;PR 14262&lt;/a&gt;. This time I was sure to test it thoroughly and finally closed the issue.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If you were to comment anywhere on DEV now, you can use all sorts of formatting within links and it'll work its magic!&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#my-second-bug-fix"&gt;
  &lt;/a&gt;
  My Second Bug Fix
&lt;/h2&gt;

&lt;p&gt;Oh boy, this was a tough one. And my favorite one to work on. I present to you the RSS Feed Dilemma -&lt;/p&gt;


&lt;div class="ltag_github-liquid-tag"&gt;
  &lt;h1&gt;
    &lt;a href="https://github.com/forem/forem/issues/13185"&gt;
      &lt;img class="github-logo" alt="GitHub logo" src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg"&gt;
      &lt;span class="issue-title"&gt;
        Dashboard not updated correctly if two people have the same RSS feed 
      &lt;/span&gt;
      &lt;span class="issue-number"&gt;#13185&lt;/span&gt;
    &lt;/a&gt;
  &lt;/h1&gt;
  &lt;div class="github-thread"&gt;
    &lt;div class="timeline-comment-header"&gt;
      &lt;a href="https://github.com/ftisiot"&gt;
        &lt;img class="github-liquid-tag-img" src="https://res.cloudinary.com/practicaldev/image/fetch/s--h94b23PM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars.githubusercontent.com/u/11272743%3Fv%3D4" alt="ftisiot avatar"&gt;
      &lt;/a&gt;
      &lt;div class="timeline-comment-header-text"&gt;
        &lt;strong&gt;
          &lt;a href="https://github.com/ftisiot"&gt;ftisiot&lt;/a&gt;
        &lt;/strong&gt; posted on &lt;a href="https://github.com/forem/forem/issues/13185"&gt;&lt;time&gt;Mar 30, 2021&lt;/time&gt;&lt;/a&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag-github-body"&gt;
      &lt;p&gt;If two people share the same &lt;code&gt;RSS Feed URL&lt;/code&gt; in &lt;code&gt;Settings&lt;/code&gt; -&amp;gt; &lt;code&gt;Publishing to DEV Community from RSS&lt;/code&gt;
Then new post will appear randomly only in 1 feed.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Have two separated dev.to accounts&lt;/li&gt;
&lt;li&gt;Go to &lt;code&gt;Settings&lt;/code&gt; -&amp;gt; &lt;code&gt;Publishing to DEV Community from RSS&lt;/code&gt; and setup the same &lt;code&gt;RSS Feed URL&lt;/code&gt; in both&lt;/li&gt;
&lt;li&gt;Create a new RSS entry&lt;/li&gt;
&lt;li&gt;The entry is show in one of the two dev.to account's (say account A) Dashboard and not in the other (account B)&lt;/li&gt;
&lt;li&gt;If the account who doesn't see the RSS feed (account B) tries creating a new post mentioning the new entry's canonical_url it gets a message
&lt;code&gt;canonical_url: has already been taken&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;If the account who does see the RSS entry (account A) deletes the draft, then Account B can publish successfully the content&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Expected behavior&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Both dev.to accounts should see the new RSS entry in the dashboard&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Screenshots&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Desktop (please complete the following information):&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OS, version: MacOS Big Sur 11.2.3&lt;/li&gt;
&lt;li&gt;Browser, version: tried with Safari, Chrome and Firefox&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Smartphone (please complete the following information):&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Device:&lt;/li&gt;
&lt;li&gt;OS, version:&lt;/li&gt;
&lt;li&gt;Browser, version:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Additional context&lt;/strong&gt;&lt;/p&gt;


    &lt;/div&gt;
    &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/forem/forem/issues/13185"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;If you are unaware about RSS Feeds - they are beautiful xml files that summarize your webpages which lets you import your data to other webapps. They are a simple solution to achieve cross app communication. &lt;/p&gt;

&lt;p&gt;Forem uses this feature to allow users to import their blogs from other blogging websites like medium, and other forem instances as well. This works by setting you Source RSS Feed URL in Settings -&amp;gt; Extensions. It works fine when only one user is accessing a certain feed, but since RSS feeds are public, it is entirely possible for other users on a Forem instance to import blogs from the same feed as well. In this case, an article from the feed would get imported only to one of those users randomly, because of how Forem's post settings work. It made sense too, since multiple imports will lead to duplication. But there was no way to verify the true owner of the RSS feed, and no apparent way for the owner to know why some articles won't get imported. A fix was required, or just a way to let the users know what was going on. However, it was hard to decide what to do, whilst preserving content uniqueness.&lt;/p&gt;

&lt;p&gt;I explained this issue to the mainatainers, and together we decided that the best approach would be to allow duplicate draft posts, but only one of them be allowed to publish. If the  post has already been published, another user who tries to do the same will get a useful error message and be suggested to contact the core team. Content uniqueness preserved, users not ghosted anymore, everyone happy. I closed this issue with &lt;a href="https://github.com/forem/forem/pull/14160"&gt;PR 14160&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To learn more about the dilemma - &lt;/p&gt;


&lt;div class="ltag_github-liquid-tag"&gt;
  &lt;h1&gt;
    &lt;a href="https://github.com/forem/forem/issues/13185#issuecomment-872681158"&gt;
      &lt;img class="github-logo" alt="GitHub logo" src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg"&gt;
      &lt;span class="issue-title"&gt;
        Comment for
      &lt;/span&gt;
      &lt;span class="issue-number"&gt;#13185&lt;/span&gt;
    &lt;/a&gt;
  &lt;/h1&gt;
  &lt;div class="github-thread"&gt;
    &lt;div class="timeline-comment-header"&gt;
      &lt;a href="https://github.com/squarebat"&gt;
        &lt;img class="github-liquid-tag-img" src="https://res.cloudinary.com/practicaldev/image/fetch/s--fI8VGo8f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars.githubusercontent.com/u/59063821%3Fu%3D56d3e4e2301848ec216d8b8aedd570c90737d573%26v%3D4" alt="squarebat avatar"&gt;
      &lt;/a&gt;
      &lt;div class="timeline-comment-header-text"&gt;
        &lt;strong&gt;
          &lt;a href="https://github.com/squarebat"&gt;squarebat&lt;/a&gt;
        &lt;/strong&gt; commented on &lt;a href="https://github.com/forem/forem/issues/13185#issuecomment-872681158"&gt;&lt;time&gt;Jul 02, 2021&lt;/time&gt;&lt;/a&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag-github-body"&gt;
      &lt;p&gt;&lt;strong&gt;tl;dr&lt;/strong&gt; : I played around with two dev accounts and based on my observations, some issues will occur regardless of whether we fix this issue or not. My observations might be incorrect, correct me if I'm wrong.&lt;/p&gt;
&lt;p&gt;Going through the PRs mentioned by &lt;a class="mentioned-user" href="https://dev.to/rhymes"&gt;@rhymes&lt;/a&gt;
 helped a lot. It's quite obvious now why canonical_url needs to be unique. I played around with importing from the same RSS feed from two dev accounts and this is what I observed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If an article from the feed was already imported in one account A, it won't be imported in account B regardless of whether the canonical_url was set or not, or if it was draft/published.&lt;/li&gt;
&lt;li&gt;If the article is deleted from account A, it can be fetched in account B.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note: These observations are from using the &lt;code&gt;Fetch feed now&lt;/code&gt; button, and not from periodic feed imports.
I can think of following issues that will occur:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;If we allow both accounts to fetch the same article:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;None of them gets to publish the post if the canonical_url is same. They can be published by changing it, but since there is no way to know which account is using it, the canonical_url might remain unused.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;If we allow only one account to fetch an article (as is the case right now):&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;There's a UX issue where user won't know why articles aren't being fetched from the feed.&lt;/li&gt;
&lt;li&gt;Articles are being fetched on first come first serve basis, which defeats the purpose of allowing 2 accounts to import from the same feed.&lt;/li&gt;
&lt;/ul&gt;

    &lt;/div&gt;
    &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/forem/forem/issues/13185#issuecomment-872681158"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;I'll definitely be writing a more detailed post on this one, but before then I will find myself using the feeds import feature to import this post over to other Forems, hopefully someone doesn't beat me to it 👀.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#other-super-cool-stuff"&gt;
  &lt;/a&gt;
  Other super cool stuff
&lt;/h2&gt;

&lt;p&gt;I wish to write detailed walk-throughs for all my PRs at Forem in the hopes that other contributors might find something of use from my adventures. But until then here are some honorable mentions -&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#automatic-image-deletion"&gt;
  &lt;/a&gt;
  Automatic Image Deletion
&lt;/h3&gt;

&lt;p&gt;Working on this issue made us discover a security issue that would arise by deleting images, and even though this could not get merged, I learned a lot about data storage by going through the code base. &lt;/p&gt;


&lt;div class="ltag_github-liquid-tag"&gt;
  &lt;h1&gt;
    &lt;a href="https://github.com/forem/forem/pull/14141"&gt;
      &lt;img class="github-logo" alt="GitHub logo" src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg"&gt;
      &lt;span class="issue-title"&gt;
        Automatically delete Cloudinary's user uploaded images in articles
      &lt;/span&gt;
      &lt;span class="issue-number"&gt;#14141&lt;/span&gt;
    &lt;/a&gt;
  &lt;/h1&gt;
  &lt;div class="github-thread"&gt;
    &lt;div class="timeline-comment-header"&gt;
      &lt;a href="https://github.com/squarebat"&gt;
        &lt;img class="github-liquid-tag-img" src="https://res.cloudinary.com/practicaldev/image/fetch/s--Wo8QZm3M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars.githubusercontent.com/u/59063821%3Fv%3D4" alt="squarebat avatar"&gt;
      &lt;/a&gt;
      &lt;div class="timeline-comment-header-text"&gt;
        &lt;strong&gt;
          &lt;a href="https://github.com/squarebat"&gt;squarebat&lt;/a&gt;
        &lt;/strong&gt; posted on &lt;a href="https://github.com/forem/forem/pull/14141"&gt;&lt;time&gt;Jul 06, 2021&lt;/time&gt;&lt;/a&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag-github-body"&gt;
      
&lt;h2&gt;
&lt;a id="user-content-what-type-of-pr-is-this-check-all-applicable" class="anchor" href="#what-type-of-pr-is-this-check-all-applicable"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;What type of PR is this? (check all applicable)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[x] Optimization&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
&lt;a id="user-content-description" class="anchor" href="#description"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;Description&lt;/h2&gt;
&lt;p&gt;Currently, for articles and collections, the user uploaded images persist in the database, even after the article/collection using that image is deleted. This PR adds the functions required to delete user uploaded images (to cloudinary) in the article if any.&lt;/p&gt;
&lt;h2&gt;
&lt;a id="user-content-related-tickets--documents" class="anchor" href="#related-tickets--documents"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;Related Tickets &amp;amp; Documents&lt;/h2&gt;
&lt;p&gt;Resolves #13936&lt;/p&gt;
&lt;h2&gt;
&lt;a id="user-content-addedupdated-tests" class="anchor" href="#addedupdated-tests"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;Added/updated tests?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[x] Yes&lt;/li&gt;
&lt;/ul&gt;

    &lt;/div&gt;
    &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/forem/forem/pull/14141"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#updating-tags-in-articles-on-tag-update"&gt;
  &lt;/a&gt;
  Updating tags in articles on tag update
&lt;/h3&gt;

&lt;p&gt;The issue was that if tag colors are updated by the admin, that change isn't reflected at other places because the colors are cached. I learned about how client side and server side caching works in Forem and was able to locate the bug. Easy peasy&lt;/p&gt;


&lt;div class="ltag_github-liquid-tag"&gt;
  &lt;h1&gt;
    &lt;a href="https://github.com/forem/forem/pull/14427"&gt;
      &lt;img class="github-logo" alt="GitHub logo" src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg"&gt;
      &lt;span class="issue-title"&gt;
        Delete tag colors cache on updating tags.
      &lt;/span&gt;
      &lt;span class="issue-number"&gt;#14427&lt;/span&gt;
    &lt;/a&gt;
  &lt;/h1&gt;
  &lt;div class="github-thread"&gt;
    &lt;div class="timeline-comment-header"&gt;
      &lt;a href="https://github.com/squarebat"&gt;
        &lt;img class="github-liquid-tag-img" src="https://res.cloudinary.com/practicaldev/image/fetch/s--Wo8QZm3M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars.githubusercontent.com/u/59063821%3Fv%3D4" alt="squarebat avatar"&gt;
      &lt;/a&gt;
      &lt;div class="timeline-comment-header-text"&gt;
        &lt;strong&gt;
          &lt;a href="https://github.com/squarebat"&gt;squarebat&lt;/a&gt;
        &lt;/strong&gt; posted on &lt;a href="https://github.com/forem/forem/pull/14427"&gt;&lt;time&gt;Aug 05, 2021&lt;/time&gt;&lt;/a&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag-github-body"&gt;
      
&lt;h2&gt;
&lt;a id="user-content-what-type-of-pr-is-this-check-all-applicable" class="anchor" href="#what-type-of-pr-is-this-check-all-applicable"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;What type of PR is this? (check all applicable)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[x] Bug Fix&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
&lt;a id="user-content-description" class="anchor" href="#description"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;Description&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;In reference to issue #12486, I raised a PR #14298 which focused on deleting article edge cache when tags are updated, so that the new tag colors maybe reflected. The issue however was not the client side cache, it was the server side cache key &lt;code&gt;view-helper-#{tag}&lt;/code&gt; that stores the colors of the tag. Deleting the cache at that key solves the issue.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
&lt;a id="user-content-related-tickets--documents" class="anchor" href="#related-tickets--documents"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;Related Tickets &amp;amp; Documents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Resolves #12486&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/forem/forem/blob/de852bd466ef418ac07a6317de4af6f8b892338d/app/helpers/application_helper.rb#L89"&gt;https://github.com/forem/forem/blob/de852bd466ef418ac07a6317de4af6f8b892338d/app/helpers/application_helper.rb#L89&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
&lt;a id="user-content-addedupdated-tests" class="anchor" href="#addedupdated-tests"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;Added/updated tests?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[x] No, and this is why: This was a one line fix and is already tested by &lt;code&gt;spec/models/tag_spec.rb:119&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
&lt;a id="user-content-what-gif-best-describes-this-pr-or-how-it-makes-you-feel" class="anchor" href="#what-gif-best-describes-this-pr-or-how-it-makes-you-feel"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;What gif best describes this PR or how it makes you feel?&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://camo.githubusercontent.com/f8743090a2a892a4149b22cfe1efd92bccf63658d4d0581c7c51edcb421d3b70/68747470733a2f2f6d656469612e74656e6f722e636f6d2f696d616765732f32636234323432353135326362346264316664306164336465393562616532612f74656e6f722e676966" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f8743090a2a892a4149b22cfe1efd92bccf63658d4d0581c7c51edcb421d3b70/68747470733a2f2f6d656469612e74656e6f722e636f6d2f696d616765732f32636234323432353135326362346264316664306164336465393562616532612f74656e6f722e676966" alt="alt_text"&gt;&lt;/a&gt;&lt;/p&gt;

    &lt;/div&gt;
    &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/forem/forem/pull/14427"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#the-sponsors-image-bug"&gt;
  &lt;/a&gt;
  The Sponsors Image bug
&lt;/h3&gt;


&lt;div class="ltag_github-liquid-tag"&gt;
  &lt;h1&gt;
    &lt;a href="https://github.com/forem/forem/pull/14494"&gt;
      &lt;img class="github-logo" alt="GitHub logo" src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg"&gt;
      &lt;span class="issue-title"&gt;
        Fix Sponsors Image display in homefeed and sponsors page.
      &lt;/span&gt;
      &lt;span class="issue-number"&gt;#14494&lt;/span&gt;
    &lt;/a&gt;
  &lt;/h1&gt;
  &lt;div class="github-thread"&gt;
    &lt;div class="timeline-comment-header"&gt;
      &lt;a href="https://github.com/squarebat"&gt;
        &lt;img class="github-liquid-tag-img" src="https://res.cloudinary.com/practicaldev/image/fetch/s--Wo8QZm3M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars.githubusercontent.com/u/59063821%3Fv%3D4" alt="squarebat avatar"&gt;
      &lt;/a&gt;
      &lt;div class="timeline-comment-header-text"&gt;
        &lt;strong&gt;
          &lt;a href="https://github.com/squarebat"&gt;squarebat&lt;/a&gt;
        &lt;/strong&gt; posted on &lt;a href="https://github.com/forem/forem/pull/14494"&gt;&lt;time&gt;Aug 13, 2021&lt;/time&gt;&lt;/a&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag-github-body"&gt;
      &lt;h2&gt;
&lt;a id="user-content-what-type-of-pr-is-this-check-all-applicable" class="anchor" href="#what-type-of-pr-is-this-check-all-applicable"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;What type of PR is this? (check all applicable)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[x] Bug Fix&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
&lt;a id="user-content-description" class="anchor" href="#description"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;Description&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;As discussed in #14291, there was an bug with rendering the organizations logo while featuring sponsors in the homefeed. While inspecting, I found that the same issue exists in &lt;code&gt;/sponsors&lt;/code&gt; page as well. This PR fixes the bug.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
&lt;a id="user-content-related-tickets--documents" class="anchor" href="#related-tickets--documents"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;Related Tickets &amp;amp; Documents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Resolves #14291&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
&lt;a id="user-content-qa-instructions-screenshots-recordings" class="anchor" href="#qa-instructions-screenshots-recordings"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;QA Instructions, Screenshots, Recordings&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://user-images.githubusercontent.com/59063821/129339688-d504029d-5598-4506-8f14-6f3fc0667315.png" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XpQnvDxi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/59063821/129339688-d504029d-5598-4506-8f14-6f3fc0667315.png" width="250"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://user-images.githubusercontent.com/59063821/129339695-a7781a1b-c873-4eef-b797-b72256f2ecd2.png" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5-XqOip9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/59063821/129339695-a7781a1b-c873-4eef-b797-b72256f2ecd2.png" width="350"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
&lt;a id="user-content-addedupdated-tests" class="anchor" href="#addedupdated-tests"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;Added/updated tests?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[x] No, and this is why: a fallback has been added (profile image of org is displayed if they haven't uploaded a logo) and tests for the same aren't needed. Thought I should add tests anyway but realized that I won't be able to because of how the image uploader works.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
&lt;a id="user-content-what-gif-best-describes-this-pr-or-how-it-makes-you-feel" class="anchor" href="#what-gif-best-describes-this-pr-or-how-it-makes-you-feel"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;What gif best describes this PR or how it makes you feel?&lt;/h2&gt;
&lt;p&gt;happy bug smashin everyone!
&lt;a href="https://camo.githubusercontent.com/f66002464b33c96e8b86d2dcbaf5cbf56a02e8a595d6b075f681ea87c178c5ec/68747470733a2f2f632e74656e6f722e636f6d2f4f4e30364a744c614f564d41414141432f73616d616e646d61782d6d61782e676966" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f66002464b33c96e8b86d2dcbaf5cbf56a02e8a595d6b075f681ea87c178c5ec/68747470733a2f2f632e74656e6f722e636f6d2f4f4e30364a744c614f564d41414141432f73616d616e646d61782d6d61782e676966" width="250"&gt;&lt;/a&gt;&lt;/p&gt;

    &lt;/div&gt;
    &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/forem/forem/pull/14494"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#refactoring-and-reorganizing-code"&gt;
  &lt;/a&gt;
  Refactoring and reorganizing code
&lt;/h3&gt;

&lt;p&gt;I worked on a part of refactoring for StoriesController and &lt;strong&gt;highly recommend&lt;/strong&gt; new contributors to try their hands on this issue. It's the best way to get familiarized with the code base and learn about what goes where and when a certain method is called.&lt;/p&gt;


&lt;div class="ltag_github-liquid-tag"&gt;
  &lt;h1&gt;
    &lt;a href="https://github.com/forem/forem/issues/2914"&gt;
      &lt;img class="github-logo" alt="GitHub logo" src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg"&gt;
      &lt;span class="issue-title"&gt;
        StoriesController refactoring
      &lt;/span&gt;
      &lt;span class="issue-number"&gt;#2914&lt;/span&gt;
    &lt;/a&gt;
  &lt;/h1&gt;
  &lt;div class="github-thread"&gt;
    &lt;div class="timeline-comment-header"&gt;
      &lt;a href="https://github.com/lightalloy"&gt;
        &lt;img class="github-liquid-tag-img" src="https://res.cloudinary.com/practicaldev/image/fetch/s--R-v3X4CX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars.githubusercontent.com/u/30115%3Fv%3D4" alt="lightalloy avatar"&gt;
      &lt;/a&gt;
      &lt;div class="timeline-comment-header-text"&gt;
        &lt;strong&gt;
          &lt;a href="https://github.com/lightalloy"&gt;lightalloy&lt;/a&gt;
        &lt;/strong&gt; posted on &lt;a href="https://github.com/forem/forem/issues/2914"&gt;&lt;time&gt;May 21, 2019&lt;/time&gt;&lt;/a&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag-github-body"&gt;
      &lt;p&gt;Currently, &lt;code&gt;StoriesController&lt;/code&gt; has a lot of responsibilities, such as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;rendering homepage&lt;/li&gt;
&lt;li&gt;rendering articles by tag&lt;/li&gt;
&lt;li&gt;articles by time&lt;/li&gt;
&lt;li&gt;articles search&lt;/li&gt;
&lt;li&gt;article page&lt;/li&gt;
&lt;li&gt;user profile&lt;/li&gt;
&lt;li&gt;user comments page&lt;/li&gt;
&lt;li&gt;organization page&lt;/li&gt;
&lt;li&gt;podcast episode page&lt;/li&gt;
&lt;li&gt;podcast episodes list&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These responsibilities should be &lt;strong&gt;separated and placed into their own controllers&lt;/strong&gt; because:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the code would be easier to understand&lt;/li&gt;
&lt;li&gt;easier to debug&lt;/li&gt;
&lt;li&gt;easier to reason about performance&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
&lt;a id="user-content-approach" class="anchor" href="#approach"&gt;&lt;span class="octicon octicon-link"&gt;&lt;/span&gt;&lt;/a&gt;Approach&lt;/h3&gt;
&lt;p&gt;Ideally we want to take each of the responsibilities this single controller has right now and break them off into their own controller with their own route. I would imagine the workflow would go something like&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Add new route for supporting new url (ie /users/:id/comments)&lt;/li&gt;
&lt;li&gt;Replace existing links all over the codebase&lt;/li&gt;
&lt;li&gt;Investigate: what happens with legacy url? should we remove or support it?&lt;/li&gt;
&lt;li&gt;Take into account that these urls could be bookmarked or shared through social media by many users. should we support legacy url and redirect to new url ??&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I've started doing some work on it, e.g. reorganized the views (#1584, #1317), but most of the work needs to be done.
It seems like a big non-urgent task to consider doing.
I suppose, that rails route constraints can be used to deal with the routes.&lt;/p&gt;

    &lt;/div&gt;
    &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/forem/forem/issues/2914"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#shoutouts"&gt;
  &lt;/a&gt;
  Shoutouts
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;To &lt;a class="mentioned-user" href="https://dev.to/coffeecraftcode"&gt;@coffeecraftcode&lt;/a&gt;
 for helping me with all my troubles throughout the fellowship and the great conversations over maintainer meets.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;To &lt;a class="mentioned-user" href="https://dev.to/khattakdev"&gt;@khattakdev&lt;/a&gt;
 2.0 for being an amazing pod lead. Our Standups and 1-on-1s will be missed 🥺.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;To all the maintainers at Forem that closely reviewed my code and made sure I was giving my best. I learned a lot about the ins and outs of Rails and best coding practices through the reviews.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>opensource</category>
      <category>forem</category>
    </item>
    <item>
      <title>Rust for Data Science: Tutorial 1</title>
      <author>Davide Del Papa</author>
      <pubDate>Tue, 24 Aug 2021 15:14:37 +0000</pubDate>
      <link>https://dev.to/davidedelpapa/rust-for-data-science-tutorial-1-4g5j</link>
      <guid>https://dev.to/davidedelpapa/rust-for-data-science-tutorial-1-4g5j</guid>
      <description>&lt;p&gt;[Photo by &lt;a href="https://unsplash.com/@jimgade?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;jim gade&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/sand?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;,&lt;br&gt;
  modified]&lt;br&gt;
Data Science: a branch of computer science that studies how to use, store, and analyze data in order to derive information from it.&lt;/p&gt;

&lt;p&gt;With this mini-series we are going to explore how to use some Rusty tools to accomplish the tasks that are the bread and butter of any Data Scientist.&lt;/p&gt;

&lt;p&gt;The final goal is to show that Rust can be employed in this field, and how so. Ultimately our goal is also to sparkle interest in this field of application: the author is persuaded that Rust should prove very useful in the field of Data Science (as well as Machine Learning and ultimately AI).&lt;/p&gt;

&lt;p&gt;You can find this article's code in the repo: &lt;a href="https://github.com/davidedelpapa/rdatascience-tut1"&gt;github.com/davidedelpapa/rdatascience-tut1&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#setting-the-stage-for-this-tutorial"&gt;
  &lt;/a&gt;
  Setting the stage for this tutorial
&lt;/h2&gt;

&lt;p&gt;There are few crates we are going to cover in this tutorial. However, we are going to introduce them as we go.&lt;/p&gt;

&lt;p&gt;Let's start our project the standard rusty way.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;cargo new rdatascience-tut1 &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;cd &lt;/span&gt;rdatascience-tut1
cargo add ndarray ndarray-rand ndarray-stats noisy_float poloto
code &lt;span class="nb"&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I am using currently &lt;code&gt;cargo add&lt;/code&gt; from the good &lt;a href="https://crates.io/crates/cargo-edit"&gt;cargo-edit&lt;/a&gt; (quick inst: &lt;code&gt;cargo install cargo-edit&lt;/code&gt;) to handle dependencies, and &lt;a href="https://code.visualstudio.com/"&gt;VisualStudio Code&lt;/a&gt; as dev IDE.&lt;/p&gt;

&lt;p&gt;Feel free to handle &lt;em&gt;Cargo.toml&lt;/em&gt; dependencies by hand, or use a different IDE.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ndarray-what-is-it-and-why-to-use-it"&gt;
  &lt;/a&gt;
  ndarray: what is it, and why to use it?
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://crates.io/crates/ndarray"&gt;ndarray&lt;/a&gt; is a Rust crate used to work with arrays. &lt;/p&gt;

&lt;p&gt;It covers all the classic uses of an array handling framework (such as &lt;code&gt;numpy&lt;/code&gt; for Python). Some use cases which are not covered by the main crate, are covered through some corollary crates, such as &lt;a href="https://crates.io/crates/ndarray-linalg"&gt;ndarray-linalg&lt;/a&gt; for linear algebra, &lt;a href="https://crates.io/crates/ndarray-rand"&gt;ndarray-rand&lt;/a&gt; to generate randomness, and &lt;a href="https://crates.io/crates/ndarray-stats"&gt;ndarray-stats&lt;/a&gt; for statistics.&lt;/p&gt;

&lt;p&gt;Additionally, &lt;code&gt;ndarray&lt;/code&gt; has got also some nice extra, such as support for &lt;a href="https://crates.io/crates/rayon"&gt;rayon&lt;/a&gt; for parallelization, or the popular &lt;a href="http://www.netlib.org/blas/"&gt;BLAS&lt;/a&gt; low-level specs, through one of the working back-ends (using &lt;a href="https://crates.io/crates/blas-src"&gt;blas-src&lt;/a&gt; ).&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#why-to-use-ndarray"&gt;
  &lt;/a&gt;
  Why to use ndarray?
&lt;/h4&gt;

&lt;p&gt;In Rust there are already arrays (or lists), and also vectors, and the language itself allows for many different types of manipulation through powerful iterators.&lt;/p&gt;

&lt;p&gt;What is more, what is offered by the bare Rust language (enhanced by the &lt;code&gt;std&lt;/code&gt;) is many times even faster than other more popular languages; still, &lt;code&gt;ndarray&lt;/code&gt; is specialized to handle n-dimensional arrays with a mathematical end in view. &lt;/p&gt;

&lt;p&gt;Thus &lt;code&gt;ndarray&lt;/code&gt; builds over the power already provided by the language; Rust power is one of the reasons why the author is persuaded that Rust will be the language of Data Science in the next few years.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ndarray-quickstart"&gt;
  &lt;/a&gt;
  ndarray Quick-Start
&lt;/h2&gt;

&lt;p&gt;At the top of our &lt;em&gt;src/main.rs&lt;/em&gt; we are going to import as usual:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight rust"&gt;&lt;code&gt;&lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="nn"&gt;ndarray&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nn"&gt;prelude&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We have almost everything we need in the prelude.&lt;/p&gt;

&lt;p&gt;We can start to put stuff inside the &lt;code&gt;fn main()&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#array-creation"&gt;
  &lt;/a&gt;
  Array creation
&lt;/h3&gt;

&lt;p&gt;Let's start to see how we can create arrays:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight rust"&gt;&lt;code&gt;&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;arr1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nd"&gt;array!&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;.&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;.&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;.&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;.&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;.&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;.&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="nd"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"1D array: {}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;arr1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;ndarray&lt;/code&gt; provides the &lt;code&gt;array!&lt;/code&gt; macro that detects which type of &lt;code&gt;ArrayBase&lt;/code&gt; is needed. In this case this is a 1-D, that is, a one dimensional array. Notice that the underlying &lt;code&gt;ArrayBase&lt;/code&gt; already implements a &lt;code&gt;std::fmt::Display&lt;/code&gt; function.&lt;/p&gt;

&lt;p&gt;Compare it to the standard Rust array (let's call them &lt;em&gt;lists&lt;/em&gt; in order not to confuse them with &lt;code&gt;ndarray&lt;/code&gt;'s arrays) and Vec:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight rust"&gt;&lt;code&gt;&lt;span class="c"&gt;// 1D array VS 1D array VS 1D Vec&lt;/span&gt;
&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;arr1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nd"&gt;array!&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;.&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;.&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;.&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;.&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;.&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;.&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="nd"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"1D array: &lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s"&gt;{}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;arr1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;ls1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="err"&gt;.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="err"&gt;.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="err"&gt;.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="err"&gt;.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="err"&gt;.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="err"&gt;.&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="nd"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"1D list: &lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s"&gt;{:?}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ls1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;vec1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nd"&gt;vec!&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;.&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;.&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;.&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;.&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;.&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;.&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="nd"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"1D vector: &lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s"&gt;{:?}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;vec1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And the result:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;1D array:       [1, 2, 3, 4, 5, 6]
1D list:        [1.0, 2.0, 3.0, 4.0, 5.0, 6.0]
1D vector:      [1.0, 2.0, 3.0, 4.0, 5.0, 6.0]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Notice too that &lt;code&gt;array!&lt;/code&gt; has written the floats as integers, since they are all &lt;code&gt;.0&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#array-sum"&gt;
  &lt;/a&gt;
  Array Sum
&lt;/h3&gt;

&lt;p&gt;Let's try to sum 2 arrays element by element:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight rust"&gt;&lt;code&gt;&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;arr2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nd"&gt;array!&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;.&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;2.2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;3.3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;.&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;.&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;.&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;arr3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;arr1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;arr2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nd"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"1D array: &lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s"&gt;{}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;arr3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let see how it compares with standard arrays(lists) and vectors:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight rust"&gt;&lt;code&gt;&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;arr2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nd"&gt;array!&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;.&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;2.2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;3.3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;.&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;.&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;.&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;arr3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;arr1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;arr2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nd"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"1D array: &lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s"&gt;{}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;arr3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;ls2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="err"&gt;.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;2.2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;3.3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="err"&gt;.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="err"&gt;.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="err"&gt;.&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;mut&lt;/span&gt; &lt;span class="n"&gt;ls3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ls1&lt;/span&gt;&lt;span class="nf"&gt;.clone&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;..&lt;/span&gt;&lt;span class="n"&gt;ls2&lt;/span&gt;&lt;span class="nf"&gt;.len&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="n"&gt;ls3&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ls1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;ls2&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nd"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"1D list: &lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s"&gt;{:?}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ls3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;vec2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nd"&gt;vec!&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;.&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;2.2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;3.3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;.&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;.&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;.&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;vec3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Vec&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nb"&gt;f64&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;vec1&lt;/span&gt;&lt;span class="nf"&gt;.iter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="nf"&gt;.zip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vec2&lt;/span&gt;&lt;span class="nf"&gt;.iter&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;&lt;span class="nf"&gt;.map&lt;/span&gt;&lt;span class="p"&gt;(|(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;e1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;e2&lt;/span&gt;&lt;span class="p"&gt;)|&lt;/span&gt; &lt;span class="n"&gt;e1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;e2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nf"&gt;.collect&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nd"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"1D vec: &lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s"&gt;{:?}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;vec3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The result is:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;1D array:       [2, 4.2, 6.3, 8, 10, 12]
1D list:        [1.0, 4.2, 6.3, 8.0, 10.0, 12.0]
1D vec:         [2.0, 4.2, 6.3, 8.0, 10.0, 12.0]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see, with Rust standard tools it became more complicated very soon. To perform an element by element sum we need a &lt;code&gt;for&lt;/code&gt; or (only for Vec) we need to use iterators, which are powerful, but very complicated to use in such a day-to-day Data Science scenario.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2d-arrays-amp-more"&gt;
  &lt;/a&gt;
  2D arrays &amp;amp; more
&lt;/h2&gt;

&lt;p&gt;let's just abandon quickly the examples using Rust's standard constructs, since as we have shown, they are more complex, and let us focus on &lt;code&gt;ndarray&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ndarray&lt;/code&gt; offers various methods to create and instantiate (and use) 2D arrays.&lt;/p&gt;

&lt;p&gt;Just look at this example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight rust"&gt;&lt;code&gt;&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;arr4&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nd"&gt;array!&lt;/span&gt;&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;.&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;.&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;.&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;.&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;.&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;.&lt;span class="p"&gt;]];&lt;/span&gt;
&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;arr5&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nn"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;from_elem&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="err"&gt;.&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;arr6&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;arr4&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;arr5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nd"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"2D array:&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;{}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;arr6&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;with its output:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;2D array:
[[2, 3, 4],
 [5, 6, 7]]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With the macro &lt;code&gt;array!&lt;/code&gt; we need to specify all elements, while with &lt;code&gt;Array::from_elem&lt;/code&gt; we need to offer a &lt;code&gt;Shape&lt;/code&gt;, in this case &lt;code&gt;(2,1)&lt;/code&gt; and an element to fill the array, in this case &lt;code&gt;1.0&lt;/code&gt;: it will fill for us the whole shape with the selected element.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight rust"&gt;&lt;code&gt;&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;arr7&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="nn"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nb"&gt;f64&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;_&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;zeros&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr6&lt;/span&gt;&lt;span class="nf"&gt;.raw_dim&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;arr8&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;arr6&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;arr7&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nd"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;{}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;arr8&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Which outputs:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[[0, 0, 0],
 [0, 0, 0]]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;Array::zeros(Shape)&lt;/code&gt; creates an array of &lt;code&gt;Shape&lt;/code&gt; filled with zero's. &lt;/p&gt;

&lt;p&gt;Notice that sometimes the compiler cannot infer the type of zero to feed in (you almost forgot Rust has got a &lt;em&gt;nice&lt;/em&gt; type system, didn't you?), so we help it with the annotation &lt;code&gt;Array::&amp;lt;f64, _&amp;gt;&lt;/code&gt;, which gives the type, letting the compiler infer the shape (&lt;code&gt;_&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;The function &lt;code&gt;.raw_dim()&lt;/code&gt;, as you can imagine, gives the shape of the matrix.&lt;/p&gt;

&lt;p&gt;Let's create an identity matrix now (a 2 dimensional array with all 0 but the diagonal)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight rust"&gt;&lt;code&gt;&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;identity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;Array2&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nb"&gt;f64&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nn"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;eye&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nd"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;{}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;identity&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Which outputs:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[[1, 0, 0],
 [0, 1, 0],
 [0, 0, 1]]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We helped the compiler providing the shape and type, but this time using a specialized form of &lt;code&gt;ArrayBase&lt;/code&gt;, that is, &lt;code&gt;Array2&lt;/code&gt; that represents 2-dimensional arrays. Notice that we created a reference so that we can re-use the variable without incurring in the ire of the borrow checker (yes, always working, did you forget that as well?)&lt;/p&gt;

&lt;p&gt;Let's explore now the use of an identity matrix:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight rust"&gt;&lt;code&gt;&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;arr9&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nd"&gt;array!&lt;/span&gt;&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;.&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;.&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;.&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;.&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;.&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;.&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;.&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;.&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;.&lt;span class="p"&gt;]];&lt;/span&gt;
&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;arr10&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;arr9&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;identity&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nd"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;{}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;arr10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Outputs:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[[1, 0, 0],
 [0, 5, 0],
 [0, 0, 9]]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;From my math classes I remember something like that the identity matrix should give back the same matrix when multiplied...&lt;/p&gt;

&lt;p&gt;Yes, of course, we are not doing &lt;em&gt;dot&lt;/em&gt; multiplications! With normal multiplication it does not work.&lt;/p&gt;

&lt;p&gt;In fact, when using matrices there is a element-wise multiplication, which is done by &lt;code&gt;arr9 * identity&lt;/code&gt;, but there's too a matrix multiplication, which is done by&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight rust"&gt;&lt;code&gt;&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;arr11&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;arr9&lt;/span&gt;&lt;span class="nf"&gt;.dot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;identity&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nd"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;{}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;arr11&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;which finally outputs:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[[1, 2, 3],
 [4, 5, 6],
 [7, 8, 9]]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Of course, &lt;code&gt;ndarray&lt;/code&gt; can handle also a 0-D array, with 0 meaning that it is just an element:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight rust"&gt;&lt;code&gt;&lt;span class="nd"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;{}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nd"&gt;array!&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;.&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;span class="nd"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Dimensions: {}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nd"&gt;array!&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;.&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="nf"&gt;.ndim&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;which correctly outputs:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[2]
Dimensions: 1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Likewise, we could go to 3D or more&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight rust"&gt;&lt;code&gt;&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;arr12&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nn"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nb"&gt;i8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;_&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;ones&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="nd"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;MULTIDIMENSIONAL&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;{}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;arr12&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Guessed its output?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;MULTIDIMENSIONAL
[[[[1, 1],
   [1, 1]],

  [[1, 1],
   [1, 1]],

  [[1, 1],
   [1, 1]]],


 [[[1, 1],
   [1, 1]],

  [[1, 1],
   [1, 1]],

  [[1, 1],
   [1, 1]]]]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It's a 2-elements 2 vectors, repeated 3 times, repeated 2 times; just go from right to left to unpack it from smaller to bigger (and vice-versa).&lt;/p&gt;

&lt;p&gt;If it is still unclear, don't worry: we are here for the programming more than for the math/stats behind it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lets-add-some-randomness-to-the-mess"&gt;
  &lt;/a&gt;
  Let's add some randomness to the mess!
&lt;/h2&gt;

&lt;p&gt;We also loaded &lt;code&gt;ndarray-rand&lt;/code&gt; into our &lt;em&gt;Cargo.toml&lt;/em&gt;, which we briefly described earlier.&lt;/p&gt;

&lt;p&gt;This package adds the power of the &lt;a href="https://crates.io/crates/rand"&gt;rand&lt;/a&gt; crate (which it re-exports as sub-module) to your &lt;em&gt;ndarray ecosystem&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;In order to see some examples, let's add the following in the &lt;code&gt;use&lt;/code&gt; section of our &lt;em&gt;src/main.rs&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight rust"&gt;&lt;code&gt;&lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="nn"&gt;ndarray_rand&lt;/span&gt;&lt;span class="p"&gt;::{&lt;/span&gt;&lt;span class="n"&gt;RandomExt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;SamplingStrategy&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="nn"&gt;ndarray_rand&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nn"&gt;rand_distr&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Uniform&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then we can get an array of shape &lt;code&gt;(5, 2)&lt;/code&gt;, for example, filled with a uniform distribution between 1 and 10 (floats, though):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight rust"&gt;&lt;code&gt;&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;arr13&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nn"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;random&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nn"&gt;Uniform&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="err"&gt;.&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="err"&gt;.&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="nd"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"{:5.2}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;arr13&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Which results, for example, in:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[[ 2.04,  0.15,  6.66,  3.06,  0.91],
 [ 8.18,  6.08,  6.99,  4.45,  5.27]]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Results should vary at each run, being the distribution (pseudo)random.&lt;/p&gt;

&lt;p&gt;We can also &lt;em&gt;"pick"&lt;/em&gt; data from an array (sampling) in the following way:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight rust"&gt;&lt;code&gt;&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;arr14&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nd"&gt;array!&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;.&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;.&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;.&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;.&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;.&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;.&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;arr15&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;arr14&lt;/span&gt;&lt;span class="nf"&gt;.sample_axis&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;Axis&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nn"&gt;SamplingStrategy&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;WithoutReplacement&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nd"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;Sampling from:&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s"&gt;{}&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;Two elements:&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s"&gt;{}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;arr14&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;arr15&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Which may result in:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Sampling from:  [1, 2, 3, 4, 5, 6]
Two elements:   [4, 2]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let me show another way of sampling, which involves the use of the &lt;code&gt;rand&lt;/code&gt; crate and the creation of an array from a vector:&lt;/p&gt;

&lt;p&gt;We first need the following added to the &lt;code&gt;use&lt;/code&gt; section:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight rust"&gt;&lt;code&gt;&lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="nn"&gt;ndarray_rand&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;rand&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;rand&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="nn"&gt;rand&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nn"&gt;seq&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;IteratorRandom&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So we use the &lt;code&gt;rand&lt;/code&gt; crate as re-exported by &lt;code&gt;ndarray-rand&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Then we can do the following (example in the &lt;a href="https://rust-random.github.io/rand/rand/seq/trait.IteratorRandom.html"&gt;rand docs&lt;/a&gt;, adapted):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight rust"&gt;&lt;code&gt;&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;mut&lt;/span&gt; &lt;span class="n"&gt;rng&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nn"&gt;rand&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;thread_rng&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;faces&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"😀😎😐😕😠😢"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;arr16&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nn"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;from_shape_vec&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;faces&lt;/span&gt;&lt;span class="nf"&gt;.chars&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="nf"&gt;.choose_multiple&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="k"&gt;mut&lt;/span&gt; &lt;span class="n"&gt;rng&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="nf"&gt;.unwrap&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nd"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;Sampling from:&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s"&gt;{}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;faces&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nd"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Elements:&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;{}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;arr16&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We define the &lt;code&gt;thread_rng&lt;/code&gt; to be used first, then we set a string containing the emoji we want to select.&lt;/p&gt;

&lt;p&gt;Then we create an array from a vector, giving a shape. The shape we chose is &lt;code&gt;(2, 2)&lt;/code&gt;, but the vector is created using a particular &lt;code&gt;IteratorRandom&lt;/code&gt;, i.e., &lt;code&gt;choose_multiple&lt;/code&gt;, extracting 4 elements (chars) at random from the string.&lt;/p&gt;

&lt;p&gt;The output is obvious:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Sampling from:  😀😎😐😕😠😢
Elements:
[[😀, 😎],
 [😢, 😠]]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Beware though not to over-sample, otherwise &lt;code&gt;choose_multiple&lt;/code&gt; will simply panic.&lt;br&gt;
Instead, &lt;code&gt;Array::from_shape_vec&lt;/code&gt; returns a &lt;code&gt;Result&lt;/code&gt; stating if it could create an array or not (Result which we simply unwrap).&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#lets-do-some-stats-and-visualize-something-shall-we"&gt;
  &lt;/a&gt;
  Let's do some stats and visualize something, shall we?
&lt;/h2&gt;

&lt;p&gt;Before introducing visualization, let's introduce the crate &lt;a href="https://crates.io/crates/ndarray-stats"&gt;ndarray-stats&lt;/a&gt;, actually, also the crate &lt;a href="https://crates.io/crates/noisy_float"&gt;noisy_float&lt;/a&gt; which is a must when using &lt;code&gt;ndarray-stats&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;First of all, we start with a Standard Normal Distribution, randomly created.&lt;/p&gt;

&lt;p&gt;First we add:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight rust"&gt;&lt;code&gt;&lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="nn"&gt;ndarray_rand&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nn"&gt;rand_distr&lt;/span&gt;&lt;span class="p"&gt;::{&lt;/span&gt;&lt;span class="n"&gt;Uniform&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;StandardNormal&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;in its proper place, then:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight rust"&gt;&lt;code&gt;&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;arr17&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nn"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nb"&gt;f64&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;_&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;random_using&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;StandardNormal&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="k"&gt;mut&lt;/span&gt; &lt;span class="nn"&gt;rand&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;thread_rng&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This way we have a 2D array with 300 couples of elements&lt;/p&gt;

&lt;p&gt;Then we add to the &lt;code&gt;use&lt;/code&gt; section also the imports we need to do statistics:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight rust"&gt;&lt;code&gt;&lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="nn"&gt;ndarray_stats&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;HistogramExt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="nn"&gt;ndarray_stats&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nn"&gt;histogram&lt;/span&gt;&lt;span class="p"&gt;::{&lt;/span&gt;&lt;span class="nn"&gt;strategies&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Sqrt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;GridBuilder&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="nn"&gt;noisy_float&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nn"&gt;types&lt;/span&gt;&lt;span class="p"&gt;::{&lt;/span&gt;&lt;span class="n"&gt;N64&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n64&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we need to transform each element from float into a noisy float; I will not go into explaining a noisy float, just consider it as a float that can't silently fail (be a &lt;code&gt;NaN&lt;/code&gt;); besides this way it is order-able, which is what is needed by &lt;code&gt;ndarray-stats&lt;/code&gt; to create an histogram.&lt;/p&gt;

&lt;p&gt;In order to perform by value an operation on each element of the ndarray, we will use the function &lt;code&gt;mapv()&lt;/code&gt; which is akin to the standard &lt;code&gt;map()&lt;/code&gt; for iterators.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight rust"&gt;&lt;code&gt;&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;arr17&lt;/span&gt;&lt;span class="nf"&gt;.mapv&lt;/span&gt;&lt;span class="p"&gt;(|&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nf"&gt;n64&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;At this point, we can create a grid for our histogram (a grid is needed to divide the data into bins); we try to infer the best way, using the &lt;code&gt;strategies::Sqrt&lt;/code&gt; (a strategy used by many programs, including MS Excel):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight rust"&gt;&lt;code&gt;&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nn"&gt;GridBuilder&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Sqrt&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;N64&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;from_array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nf"&gt;.unwrap&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="nf"&gt;.build&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now that we have a grid, that is, a way to divide our raw data to prepare our histogram, we can create such histogram:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight rust"&gt;&lt;code&gt;&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;histogram&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="nf"&gt;.histogram&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In order to get the underlying counts matrix, we can simply state:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight rust"&gt;&lt;code&gt;&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;histogram_matrix&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;histogram&lt;/span&gt;&lt;span class="nf"&gt;.counts&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The count matrix just states how many elements are present in each bin and each height, in the grid.&lt;/p&gt;

&lt;p&gt;Ok, now we have a histogram... but how could we visualize it?&lt;br&gt;
Well, before visualizing our data we should prepare it for visualization.&lt;/p&gt;

&lt;p&gt;The problem we face is that we have the counts of a grid, but to plot it we should really have a number of bin and all elements in that bin, meaning, we should sum vertically all elements.&lt;/p&gt;

&lt;p&gt;In order to do so, we need to sum on axis(0) of the ndarray:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight rust"&gt;&lt;code&gt;&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;histogram_matrix&lt;/span&gt;&lt;span class="nf"&gt;.sum_axis&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;Axis&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we have a 1D ndarray containing all the sums of the grid. At this point we can establish that each sum is a different bin, and enumerate them. We will transform it all to a vector of tuples, in order to prepare it for the visualization tool, where the first element of the tuple is the number of bin, and the second is the height of the bin.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight rust"&gt;&lt;code&gt;&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;his_data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Vec&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;f32&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;f32&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="nf"&gt;.iter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="nf"&gt;.enumerate&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="nf"&gt;.map&lt;/span&gt;&lt;span class="p"&gt;(|(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)|&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nb"&gt;f32&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nb"&gt;f32&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nf"&gt;.collect&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Remember: this is just a hoax dataset, based on a pseudorandom generator of a normal distribution (i.e., a Gaussian distribution centered in &lt;code&gt;0.0&lt;/code&gt;, with radius approx. &lt;code&gt;1&lt;/code&gt;). Still, we should see a rough Gaussian on a histogram.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dataviz"&gt;
  &lt;/a&gt;
  DataViz
&lt;/h3&gt;

&lt;p&gt;In order to visualize things we will use &lt;a href="https://crates.io/crates/poloto"&gt;poloto&lt;/a&gt;, which is one of many plotting crates for Rust. &lt;/p&gt;

&lt;p&gt;It is a simple one, meaning we do not need many lines of code to have something to see on our screen.&lt;/p&gt;

&lt;p&gt;We will not import it in the &lt;code&gt;use&lt;/code&gt; section, because it is very simple. Let me explain how to plot a histogram in three steps:&lt;/p&gt;

&lt;p&gt;Step one - create a file to store our graph:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight rust"&gt;&lt;code&gt;&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nn"&gt;std&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nn"&gt;fs&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nn"&gt;File&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"standard_normal_hist.svg"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nf"&gt;.unwrap&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Step two - create a histogram out of the data:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight rust"&gt;&lt;code&gt;&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;mut&lt;/span&gt; &lt;span class="n"&gt;graph&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nn"&gt;poloto&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Histogram"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"x"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"y"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;graph&lt;/span&gt;&lt;span class="nf"&gt;.histogram&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Stand.Norm.Dist."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;his_data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nf"&gt;.xmarker&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nf"&gt;.ymarker&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We create a &lt;code&gt;Plotter&lt;/code&gt; object, assigning it a title, and legend for each axis.&lt;br&gt;
Then, we plot our histogram on it, assigning the title in the legend (&lt;code&gt;"Stand.Norm.Dist."&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Step three - write the graph on disk:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight rust"&gt;&lt;code&gt;&lt;span class="n"&gt;graph&lt;/span&gt;&lt;span class="nf"&gt;.simple_theme&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nn"&gt;poloto&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;upgrade_write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As simple as that!&lt;/p&gt;

&lt;p&gt;Let's admire our work of (random) art:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lHBw1jMz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0a4e1lazjh80hy497cuc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lHBw1jMz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0a4e1lazjh80hy497cuc.png" alt="Histogram"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;OK, let's try something different: let's view our graph as a scatter plot. Since our hoax data is a Standard Normal Distribution, if we have N pairs of coordinates, the scatter plot should be like a cloud centered on the &lt;code&gt;0,0&lt;/code&gt; coordinates.&lt;/p&gt;

&lt;p&gt;Let's visualize it!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight rust"&gt;&lt;code&gt;&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;arr18&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nn"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nb"&gt;f64&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;_&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;random_using&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;StandardNormal&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="k"&gt;mut&lt;/span&gt; &lt;span class="nn"&gt;rand&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;thread_rng&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;

&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  &lt;span class="nb"&gt;Vec&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;f64&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;f64&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;arr18&lt;/span&gt;&lt;span class="nf"&gt;.axis_iter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;Axis&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="nf"&gt;.map&lt;/span&gt;&lt;span class="p"&gt;(|&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="nf"&gt;.to_vec&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;&lt;span class="nf"&gt;.collect&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We created 300 pairs of random numbered centered around &lt;code&gt;(0, 0)&lt;/code&gt;, according to a Standard Normal Distribution.&lt;/p&gt;

&lt;p&gt;Then we transformed that array to a &lt;code&gt;Vec&amp;lt;(f64, f64)&amp;gt;&lt;/code&gt;, because the &lt;code&gt;poloto&lt;/code&gt; library only graphs &lt;code&gt;[f64; 2]&lt;/code&gt; or whatever can be converted to a &lt;code&gt;AsF64&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;We will add also two lines to show the center of our graph:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight rust"&gt;&lt;code&gt;&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;x_line&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]];&lt;/span&gt;
&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;y_line&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next we create a file, plot, and save, just as we did for the histogram:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight rust"&gt;&lt;code&gt;&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nn"&gt;std&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nn"&gt;fs&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nn"&gt;File&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"standard_normal_scatter.svg"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nf"&gt;.unwrap&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c"&gt;// create file on disk&lt;/span&gt;

&lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;mut&lt;/span&gt; &lt;span class="n"&gt;graph&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nn"&gt;poloto&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Scatter Plot"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"x"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"y"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c"&gt;// create graph&lt;/span&gt;
&lt;span class="n"&gt;graph&lt;/span&gt;&lt;span class="nf"&gt;.line&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;x_line&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;graph&lt;/span&gt;&lt;span class="nf"&gt;.line&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;y_line&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;graph&lt;/span&gt;&lt;span class="nf"&gt;.scatter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Stand.Norm.Dist."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nf"&gt;.ymarker&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="n"&gt;graph&lt;/span&gt;&lt;span class="nf"&gt;.simple_theme&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nn"&gt;poloto&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;upgrade_write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's it! We can admire our random creation now:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0BmO0WN8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e0e1sxz8b5pkui59cck8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0BmO0WN8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e0e1sxz8b5pkui59cck8.png" alt="Scatter Plot"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;I think this should wrap it up for today.&lt;/p&gt;

&lt;p&gt;We saw how to use &lt;code&gt;ndarray&lt;/code&gt; (in a basic form), and how it differs from Rust arrays and vectors.&lt;/p&gt;

&lt;p&gt;We saw also some of its companion crates that complete the ecosystem, to provide randomness and some statistic feats.&lt;br&gt;
We saw also a way to plot graphs with data, showing how to plot a histogram, a scatter plot, and some lines.&lt;/p&gt;

&lt;p&gt;I hope this will be a good starting point to delve deeper into the use of Rust for Data Science.&lt;/p&gt;

&lt;p&gt;That's all folks for today, see you next time!&lt;/p&gt;

</description>
      <category>rust</category>
      <category>datascience</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Day 11 : Revision day, going through the topics I learnt in more detail</title>
      <author>Gaurav-Shekhawat</author>
      <pubDate>Tue, 24 Aug 2021 15:11:01 +0000</pubDate>
      <link>https://dev.to/gauravshekhawat/day-11-revision-day-going-through-the-topics-i-learnt-in-more-detail-40ae</link>
      <guid>https://dev.to/gauravshekhawat/day-11-revision-day-going-through-the-topics-i-learnt-in-more-detail-40ae</guid>
      <description>&lt;p&gt;After being overloaded by information in the past 10 days, I felt the need to stop and give myself time to absorb the material I have been through.&lt;/p&gt;

&lt;p&gt;So, no new content for today, enjoy.....&lt;/p&gt;

</description>
      <category>100daysofcode</category>
    </item>
    <item>
      <title>How To Install Debian 11 Bullseye Expert Mode Minimal Install</title>
      <author>brandon_wallace</author>
      <pubDate>Tue, 24 Aug 2021 15:10:43 +0000</pubDate>
      <link>https://dev.to/brandonwallace/how-to-install-debian-11-bullseye-expert-mode-minimal-install-10pd</link>
      <guid>https://dev.to/brandonwallace/how-to-install-debian-11-bullseye-expert-mode-minimal-install-10pd</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;In this article I will show you how to do a minimal installation of Debian 11 Bullseye in "Expert Install" mode. The Debian installer is very flexible. You can easily use the installation media to install Debian as a server or a desktop/laptop. I will go over a minimal installation step by step and include an option to install a desktop environment of your choice. Doing an "Expert Install" will provide you with a few advanced options which allow for better customization of the operating system.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#why-debian"&gt;
  &lt;/a&gt;
  Why Debian?
&lt;/h1&gt;

&lt;h3&gt;
  &lt;a href="#these-are-some-of-the-reasons-why-people-install-debian"&gt;
  &lt;/a&gt;
  These are some of the reasons why people install Debian.
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Very stable and secure&lt;/li&gt;
&lt;li&gt;Has wide hardware support&lt;/li&gt;
&lt;li&gt;Is a community project of volunteers around the world&lt;/li&gt;
&lt;li&gt;Has a flexible installer that allows for customization&lt;/li&gt;
&lt;li&gt;Upgrades smoothly from one release to the next release&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#here-are-the-requirements-for-debian-11-bullseye"&gt;
  &lt;/a&gt;
  Here are the requirements for Debian 11 Bullseye.
&lt;/h3&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Requirements&lt;/th&gt;
&lt;th&gt;Minimum&lt;/th&gt;
&lt;th&gt;Recommended&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;RAM:&lt;/td&gt;
&lt;td&gt;512MB&lt;/td&gt;
&lt;td&gt;2GB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Processor (CPU):&lt;/td&gt;
&lt;td&gt;1GHz&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Hard Drive:&lt;/td&gt;
&lt;td&gt;10GB&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;A minimal installation is great for a server set up. The benefit of setting up a server with a command line interface you will not use a lot of resources. &lt;/p&gt;

&lt;p&gt;Here is a server without a graphical user interface with &lt;strong&gt;2GB&lt;/strong&gt; of RAM.&lt;br&gt;
As you see this server is using is only using &lt;strong&gt;61MB&lt;/strong&gt; of RAM!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;brandon@debian &lt;span class="nv"&gt;$ &lt;/span&gt;free &lt;span class="nt"&gt;-m&lt;/span&gt;
              total        used        free
Mem:           1982          61        1920
Swap:           975           0         975
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After installing the full Xfce desktop the RAM usage increased to &lt;strong&gt;311MB&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Dw0qJ5pL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/nzG53f3n/74.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Dw0qJ5pL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/nzG53f3n/74.png" alt="74.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can use almost any computer for this. If you have some old hardware laying around such as a&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Desktop&lt;/li&gt;
&lt;li&gt;Laptop&lt;/li&gt;
&lt;li&gt;A Mac computer&lt;/li&gt;
&lt;li&gt;Used server hardware&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;What can you do with a Linux server? Here are some examples.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/brandonwallace/set-up-a-git-server-the-easy-way-jke"&gt;Private Git server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Web server&lt;/li&gt;
&lt;li&gt;File server with NFS or Samba&lt;/li&gt;
&lt;li&gt;Media server&lt;/li&gt;
&lt;li&gt;Database server&lt;/li&gt;
&lt;li&gt;DNS server&lt;/li&gt;
&lt;li&gt;NTP server&lt;/li&gt;
&lt;li&gt;Email server&lt;/li&gt;
&lt;li&gt;Ad blocker&lt;/li&gt;
&lt;li&gt;Set up RAID (Redundant Array of Independent Disks)&lt;/li&gt;
&lt;li&gt;Explore the GNU/Linux operating system&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h1&gt;

&lt;p&gt;Download the amd64 &lt;a href="https://www.debian.org/distrib/"&gt;Debian 11 Bullseye&lt;/a&gt; ISO file from the Debian.org website. If your computer is really old it might not support 64-bit. In that case, you will need the 32-bit ISO file.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;debian-11.0.0-amd64-netinst.iso&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Install the ISO file to a USB flash drive using one of these tools.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://rufus.ie/en/"&gt;Rufus&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.balena.io/etcher/"&gt;Etcher&lt;/a&gt;&lt;br&gt;
&lt;a href="https://unetbootin.github.io/"&gt;Unetbootin&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.pendrivelinux.com/universal-usb-installer-easy-as-1-2-3/"&gt;Pendrive Linux&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If have Linux installed already you can run the dd command to install the ISO to the USB flash drive.&lt;br&gt;
&lt;strong&gt;WARNING!!&lt;/strong&gt; Make sure you write to the correct /dev/sdX drive. &lt;/p&gt;

&lt;p&gt;I list my drives in the computer like this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;fdisk &lt;span class="nt"&gt;-l&lt;/span&gt; 2&amp;gt; /dev/null | egrep &lt;span class="s1"&gt;'Disk /dev/'&lt;/span&gt;

&lt;span class="c"&gt;# Output&lt;/span&gt;

Disk /dev/sdb: 254.8 GiB
Disk /dev/sda: 120.9 GiB 
Disk /dev/sdc: 15.9 GiB  &amp;lt;&lt;span class="o"&gt;==&lt;/span&gt; My USB flash drive

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;On my computer the flash drive is /dev/sdc so I run this command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;sudo dd &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;debian-11.0.0-amd64-netinst.iso &lt;span class="nv"&gt;of&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/dev/sdc &lt;span class="nv"&gt;bs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;4M &lt;span class="nv"&gt;status&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;progress&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nb"&gt;sync&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Find out how to boot off of the USB flash drive. Every manufacture has a different key to press to get to the boot menu. On my computer I press the &lt;code&gt;F12&lt;/code&gt; key to select the boot menu.&lt;/p&gt;

&lt;p&gt;Once you boot off of the USB flash drive the installation menu will come up.&lt;br&gt;
Select &lt;strong&gt;"Advanced options"&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--E7DOVU-Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/T1KxZszB/1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E7DOVU-Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/T1KxZszB/1.png" alt="1.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Select &lt;strong&gt;"Expert Install"&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QkROIZ6i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/g2FpTNNB/2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QkROIZ6i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/g2FpTNNB/2.png" alt="2.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Choose a language.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aBziJeZc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/SQHjmLgc/3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aBziJeZc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/SQHjmLgc/3.png" alt="3.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Au_Yi5LJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/W1v3kNL3/4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Au_Yi5LJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/W1v3kNL3/4.png" alt="4.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Select your location to set the correct time zone.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---v-a0YnP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/sXqfDy43/5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---v-a0YnP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/sXqfDy43/5.png" alt="5.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The locale sets character encoding, date and time formatting, currency, default paper size, etc. The default setting should be fine. For US English the default is &lt;strong&gt;"en_US.UTF-8"&lt;/strong&gt;. No need to change this setting.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3qwfv1Hd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/mgjb17yX/6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3qwfv1Hd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/mgjb17yX/6.png" alt="6.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You have the option to add additional locales here if you need them. I will use the default &lt;strong&gt;"en_US.UTF-8"&lt;/strong&gt; set on the previous page. Press "Continue".&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--y3frf0ko--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/4NbGjpqf/7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y3frf0ko--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/4NbGjpqf/7.png" alt="7.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here you can select the keyboard layout of your preference such as Dvorak. I will stick with the default &lt;strong&gt;"American English"&lt;/strong&gt; here.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KmGVSJOm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/bY1f2Qzx/8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KmGVSJOm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/bY1f2Qzx/8.png" alt="8.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wAW5Y3_h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/xdBBXdhp/9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wAW5Y3_h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/xdBBXdhp/9.png" alt="9.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Time to detect the installation media which is the USB flash drive that you booted off earlier.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---qv8tIFH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/kMQL5qcw/10.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---qv8tIFH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/kMQL5qcw/10.png" alt="10.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Press "Continue".&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2WIqVwWO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/nrpRm9k2/11.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2WIqVwWO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/nrpRm9k2/11.png" alt="11.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Press "Continue".&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TPsc7vEA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/brmT2CdY/12.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TPsc7vEA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/brmT2CdY/12.png" alt="12.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Installer components get loaded from the USB installation media. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--k-A9JCtz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/KzFrpSMv/13.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k-A9JCtz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/KzFrpSMv/13.png" alt="13.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Optional specialized components can be selected here if you need them. By default nothing is selected. Press "Continue".&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pMB_Hoqa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/G3XJKfhd/14.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pMB_Hoqa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/G3XJKfhd/14.png" alt="14.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Network hardware will be detected here.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9Pf7i-WR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/mrWQhfVN/15.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9Pf7i-WR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/mrWQhfVN/15.png" alt="15.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Configure the network connection.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1b1w6fao--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/K8BM6pFK/16.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1b1w6fao--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/K8BM6pFK/16.png" alt="16.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Select "Yes"&lt;/strong&gt; to set the IP address using DHCP (Dynamic Host Control Protocol). This is recommended for a desktop/laptop. If you select "Yes", skip the "For a static IP" section. The IP address will be configured via DHCP and you will move on to setting the hostname.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Select "No"&lt;/strong&gt; to set a static IP address. A static IP address is recommended for a server.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--R53vYiTH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/6qRNzZJv/17.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--R53vYiTH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/6qRNzZJv/17.png" alt="17.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;For a static IP&lt;/strong&gt; I set my IP address to &lt;code&gt;192.168.12.34&lt;/code&gt; since I know that will work on my network.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Q0lgjMyd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/R0F5yyx9/18.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q0lgjMyd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/R0F5yyx9/18.png" alt="18.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;For a static IP&lt;/strong&gt; I set the netmask to /24 which is &lt;code&gt;255.255.255.0&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--z07_6SXI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/X7cRJ4V4/19.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z07_6SXI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/X7cRJ4V4/19.png" alt="19.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;For a static IP&lt;/strong&gt; I set the gateway to &lt;code&gt;192.168.12.1&lt;/code&gt; because that is the gateway of my network.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CEWNDrP6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/t44M46SN/20.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CEWNDrP6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/t44M46SN/20.png" alt="20.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;For a static IP&lt;/strong&gt; I set three public DNS (Domain name servers) using a space as a delimiter.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;1.1.1.1&lt;/code&gt; &amp;lt;== Cloudflare DNS&lt;br&gt;
&lt;code&gt;208.67.222.222&lt;/code&gt; &amp;lt;== OpenDNS&lt;br&gt;
&lt;code&gt;8.8.8.8&lt;/code&gt; &amp;lt;== Google DNS&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iQixRtUl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/6pPY6mGB/21.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iQixRtUl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/6pPY6mGB/21.png" alt="21.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;For a static IP&lt;/strong&gt; Verify the networking information is correct. Click &lt;strong&gt;"Yes"&lt;/strong&gt; to accept the changes.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---z9jLv_4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/7hqNQvjn/22.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---z9jLv_4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/7hqNQvjn/22.png" alt="22.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Wait 3 seconds for the network link to be detected. Press "Continue".&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9QdpbZQn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/qMMLsTsk/23.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9QdpbZQn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/qMMLsTsk/23.png" alt="23.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Set the &lt;strong&gt;hostname&lt;/strong&gt; for the computer.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--c1msqb5F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/dVhjfjNp/24.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c1msqb5F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/dVhjfjNp/24.png" alt="24.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Set a &lt;strong&gt;domain name&lt;/strong&gt; for the system. It is better to make something up here. For more information see &lt;a href="https://datatracker.ietf.org/doc/html/rfc6762#appendix-G"&gt;RFC6762&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LVT92xOK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/wMtBz3Kq/25.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LVT92xOK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/wMtBz3Kq/25.png" alt="25.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Set up users and passwords for the system.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jBqzCgpJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/wB0xsDgx/26.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jBqzCgpJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/wB0xsDgx/26.png" alt="26.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Enable shadow passwords. Select &lt;strong&gt;"Yes"&lt;/strong&gt; here. This is for security. Shadow passwords will allow the hashed password to be stored in /etc/shadow, which is only readable by root.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vhX_kN0v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/HWJ5dk98/27.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vhX_kN0v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/HWJ5dk98/27.png" alt="27.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For added security, select &lt;strong&gt;"No"&lt;/strong&gt; for "Allow login as root". Users will be able to type sudo to run root commands.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4EI_tXZZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/fW6dLQ82/28.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4EI_tXZZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/fW6dLQ82/28.png" alt="28.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Type your full name here. Applications that display your &lt;strong&gt;full name&lt;/strong&gt; will use this.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Da3vYawc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/KvBM3pVZ/29.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Da3vYawc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/KvBM3pVZ/29.png" alt="29.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Type the user name which you will use to log into the computer.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OTwsdTJG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/zGNRCSZT/30.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OTwsdTJG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/zGNRCSZT/30.png" alt="30.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Set a strong password here.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fx4Xupvr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/SN6nx22R/31.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fx4Xupvr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/SN6nx22R/31.png" alt="31.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Re-type the password you selected to make sure it is correct.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XaYssfT_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/Bv6bpmhP/32.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XaYssfT_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/Bv6bpmhP/32.png" alt="32.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Set the system clock.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--t4ugoGhy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/FRkR57X9/33.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t4ugoGhy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/FRkR57X9/33.png" alt="33.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you wish to use NTP (Network Time Protocol) select &lt;strong&gt;"Yes"&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AqQuQT_r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/nzf8rzQV/34.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AqQuQT_r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/nzf8rzQV/34.png" alt="34.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Select a public NTP server close to where you live for the best outcome. I live in the United States so I set my NTP server to &lt;strong&gt;"0.us.pool.ntp.org"&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sjKP8HTj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/kMcrM7M9/35.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sjKP8HTj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/kMcrM7M9/35.png" alt="35.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Set the time zone you live in. I selected &lt;strong&gt;"Eastern"&lt;/strong&gt; since I live in the Eastern time zone.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_t-abV5m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/MKTLWRrb/36.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_t-abV5m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/MKTLWRrb/36.png" alt="36.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The installer will detect the disks connected to the system.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NGBVXlmo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/gkZvq2wb/37.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NGBVXlmo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/gkZvq2wb/37.png" alt="37.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Partitioning the disks will allow us to divide the hard disk into sections. I select &lt;strong&gt;"Guided - use entire disk"&lt;/strong&gt; here to install on my empty 500GB hard drive.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ry63crNm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/QtKp4867/39.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ry63crNm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/QtKp4867/39.png" alt="39.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KL8nPVvQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/Yq6xBStf/38.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KL8nPVvQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/Yq6xBStf/38.png" alt="38.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It displays I have one 500GB drive installed in the system.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VDijFBXY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/PfgkFSqv/40.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VDijFBXY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/PfgkFSqv/40.png" alt="40.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Select the partitioning scheme you wish to use here. I recommend separating /home, /var, and /tmp partitions to for the following reasons.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Separate data that needs backing up such as /home to make things easier.&lt;/li&gt;
&lt;li&gt;Isolate parts of the file system to increase security.&lt;/li&gt;
&lt;li&gt;Restrict the growth of a file system. If /var is filled it will not fill the whole disk.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Kw3OHZ5p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/bJGw1dm7/41.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Kw3OHZ5p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/bJGw1dm7/41.png" alt="41.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After the guided partitions are created select &lt;strong&gt;"Finish partitioning and write changes to disk"&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rwZF7BYS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/15yZQfpy/42.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rwZF7BYS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/15yZQfpy/42.png" alt="42.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The changes will be displayed to make sure that is how you want it. Select &lt;strong&gt;"Yes"&lt;/strong&gt; to write the changes to disk.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---Zbad_Xb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/rFg2FMJx/43.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---Zbad_Xb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/rFg2FMJx/43.png" alt="43.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Install the packages for the base system.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BISpUR0K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/bv7KFJyc/44.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BISpUR0K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/bv7KFJyc/44.png" alt="44.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Select a kernel to install in the system. &lt;code&gt;linux-image-amd64&lt;/code&gt; is the kernel generic package.&lt;br&gt;
&lt;code&gt;linux-image-5.10.0-8-amd64&lt;/code&gt; will just specify the exact version.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8_EGny2Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/nzq68Jrs/45.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8_EGny2Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/nzq68Jrs/45.png" alt="45.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Select &lt;strong&gt;"generic: include all available drivers"&lt;/strong&gt; to make sure you install the drivers you need.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tcXZ2oSC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/2ywM674r/46.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tcXZ2oSC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/2ywM674r/46.png" alt="46.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Configure the package manager.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--phE1aBmN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/BQSRzR06/47.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--phE1aBmN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/BQSRzR06/47.png" alt="47.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This option allows you to scan for extra installation media such as a DVD. We only have the USB we are using to install the operating system. Select "No" to scan extra installation media. Extra programs can be installed from a network mirror.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GN7KffK---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/vZDkY9Dw/48.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GN7KffK---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/vZDkY9Dw/48.png" alt="48.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Select "Yes" to use a network mirror. This will connect us to a online repository to access more software than what is on the installation USB.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hfVFcuOu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/50WRSRgf/49.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hfVFcuOu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/50WRSRgf/49.png" alt="49.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Select "http".&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DMbIqKv1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/D02pt4RD/50.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DMbIqKv1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/D02pt4RD/50.png" alt="50.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pick a network mirror that is closest to you for the fastest download.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RHOdUXgz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/sxwHyDr2/51.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RHOdUXgz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/sxwHyDr2/51.png" alt="51.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Yq6kxZz---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/sXvg5Kjf/52.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Yq6kxZz---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/sXvg5Kjf/52.png" alt="52.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Leave HTTP proxy information blank and select "Continue" unless you know you are using a proxy.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fG2vQpXW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/mDzTPDjt/53.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fG2vQpXW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/mDzTPDjt/53.png" alt="53.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Select use "non-free" software. Recommended for a desktop/laptop.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EKmK4uxP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/7hSDNWp4/54.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EKmK4uxP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/7hSDNWp4/54.png" alt="54.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Source repositiories in APT will allow you to download the source code for packages. You can select "No" here. This can be enabled easily in /etc/apt/sources.list later if you want.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sfIe3Gy3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/ZqgSzmmZ/55.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sfIe3Gy3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/ZqgSzmmZ/55.png" alt="55.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It is recommended to install security updates. Click "Continue".&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HLmIyeQJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/LsJcTW1W/56.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HLmIyeQJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/LsJcTW1W/56.png" alt="56.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Select and install software.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rpzVdYqI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/90YK056D/57.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rpzVdYqI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/90YK056D/57.png" alt="57.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It is your choice to have security updates installed automatically using the unattended-upgrades package. The default setting is to not run automatic security updates.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MQiB7D3V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/fT51hs7F/58.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MQiB7D3V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/fT51hs7F/58.png" alt="58.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can join the package survey if you wish here.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--R6LXkqoN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/jdqkc9Vh/59.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--R6LXkqoN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/jdqkc9Vh/59.png" alt="59.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For a minimal Debian install I have deselected everything here except for "standard system utilities". This will provide you with a lean system that is not resource hungry. Remember other packages can be installed later.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WmGK3EiK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/QNmfFbBK/60.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WmGK3EiK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/QNmfFbBK/60.png" alt="60.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Install GRUB to the boot loader of the hard disk.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EOLRMW8f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/ZqPr1bpv/61.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EOLRMW8f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/ZqPr1bpv/61.png" alt="61.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Select "Yes" to install GRUB to the primary drive.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yZgDlzVC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/xCtL16s0/62.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yZgDlzVC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/xCtL16s0/62.png" alt="62.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I have one drive in the computer, /dev/sda. I will select that option instead of entering it manually.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9yBRnce0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/KvLrnDj5/63.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9yBRnce0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/KvLrnDj5/63.png" alt="63.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Select "Yes" to force GRUB installation to the EFI removable media path to a fallback location just in case the EFI firmware does not meet the EFI specification.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fuiRXU9y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/sXq7WMR8/64.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fuiRXU9y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/sXq7WMR8/64.png" alt="64.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click "Enter" to finish the installation.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5JRVfISV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/SN0cNYdY/65.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5JRVfISV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/SN0cNYdY/65.png" alt="65.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click "Yes" to set the system clock to UTC.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0oWUyC_U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/0NNwHYkF/66.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0oWUyC_U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/0NNwHYkF/66.png" alt="66.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you wanted to set up a server, once you get to this point reboot the computer and your Debian installation is finished. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vXRNz-5A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/SxgX8n6r/67.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vXRNz-5A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/SxgX8n6r/67.png" alt="67.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you only wanted a minimal server you are done with the installation process. Click "Continue" to reboot. Remember to remove the USB flash drive installation media. Upon reboot you will be presented with this splash screen. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SbUsUhkk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/RV9qD7Gd/68.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SbUsUhkk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/RV9qD7Gd/68.png" alt="68.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#how-to-add-a-desktop-environment"&gt;
  &lt;/a&gt;
  How to add a desktop environment
&lt;/h1&gt;

&lt;p&gt;If you wanted a graphical user interface sign in and install the desktop of your choice. You have many desktop options such as Xfce, Gnome, KDE, Mate, LXDE. See &lt;code&gt;task-xfce-desktop&lt;/code&gt; &lt;code&gt;task-gnome-desktop&lt;/code&gt; &lt;code&gt;task-kde-desktop&lt;/code&gt; etc.&lt;/p&gt;

&lt;p&gt;To install the Xfce desktop run these commands.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;apt update

&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;apt upgrade

&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;apt &lt;span class="nb"&gt;install &lt;/span&gt;task-xfce-desktop 

&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;systemctl reboot

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After logging in you will be presented with the Xfce desktop.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mJqpcjGb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/2ypQL1Q6/71.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mJqpcjGb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/2ypQL1Q6/71.png" alt="71.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;I have shown you how to expert install of Debian 11 Bullseye step by step.&lt;br&gt;
You will be now able to use Debian's flexible installer to install a minimal server or a desktop/laptop.&lt;/p&gt;

&lt;p&gt;Follow me on &lt;a href="https://dev.to/brandonwallace"&gt;Dev.to&lt;/a&gt; and &lt;a href="https://github.com/brandon-wallace"&gt;Github&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Please feel free to leave comments, questions, and suggestions.&lt;/p&gt;

</description>
      <category>linux</category>
      <category>opensource</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Python challenges_2</title>
      <author>Mahmoud EL-kariouny</author>
      <pubDate>Tue, 24 Aug 2021 15:10:14 +0000</pubDate>
      <link>https://dev.to/mahmoudessa/python-challenges2-36j5</link>
      <guid>https://dev.to/mahmoudessa/python-challenges2-36j5</guid>
      <description>&lt;h2&gt;
  &lt;a href="#level-of-challenge-210"&gt;
  &lt;/a&gt;
  level of challenge = 2/10
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#middle-letter"&gt;
  &lt;/a&gt;
  Middle letter
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Write a function named mid that takes a string as its parameter. &lt;/li&gt;
&lt;li&gt;Your function should extract and return the middle letter. &lt;/li&gt;
&lt;li&gt;If there is no middle letter, your function should return the empty string.&lt;/li&gt;
&lt;li&gt;For example, mid("abc") should return "b" and mid("aaaa") should return "".&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Hint&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;First check if the string's length is even, and if so, return "". &lt;/li&gt;
&lt;li&gt;You can use the % (modulo) operator to check. &lt;/li&gt;
&lt;li&gt;An even string's length modulo 2 is 0, while an odd string's length modulo 2 is 1. &lt;/li&gt;
&lt;li&gt;You can google "python check if number is even or odd" for clarification.&lt;/li&gt;
&lt;li&gt;Also, note that in Python, an index must be an integer, not a floating-point number. So 2 is a valid index, but 2.0 is not. &lt;/li&gt;
&lt;li&gt;Therefore use integer division // to calculate the index, or cast the float to an integer with int().&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#my-solution"&gt;
  &lt;/a&gt;
  My solution
&lt;/h4&gt;

&lt;p&gt;def mid(my_string):&lt;br&gt;
    length = len(my_string) % 2&lt;br&gt;
    if length == 0:&lt;br&gt;
        return ""&lt;br&gt;
    elif length != 0:&lt;br&gt;
        middle = len(my_string) // 2&lt;br&gt;
        return my_string[middle]&lt;br&gt;
print(mid("cars"))&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#the-another-solution"&gt;
  &lt;/a&gt;
  The another solution
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;this approach uses // which is integer division in Python 3&lt;/li&gt;
&lt;li&gt;alternatively, use / and int() in combination.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;def middel(string):&lt;br&gt;
    if len(string) % 2 == 0:&lt;br&gt;
        return ""&lt;br&gt;
    return string[len(string)//2]&lt;br&gt;
print(middel("abc"))&lt;/p&gt;

</description>
      <category>python</category>
      <category>beginners</category>
      <category>webdev</category>
      <category>challenge</category>
    </item>
    <item>
      <title>Detectar campo modificado al guardar un modelo en Laravel</title>
      <author>Marc Garcia Torrent</author>
      <pubDate>Tue, 24 Aug 2021 15:07:32 +0000</pubDate>
      <link>https://dev.to/magarrent-org/detectar-campo-modificado-al-guardar-un-modelo-en-laravel-m22</link>
      <guid>https://dev.to/magarrent-org/detectar-campo-modificado-al-guardar-un-modelo-en-laravel-m22</guid>
      <description>&lt;p&gt;Bienvenido a a tod@s!&lt;/p&gt;

&lt;p&gt;Este es un post muy corto solo para dejaros este pequeño Snippet de Laravel.&lt;/p&gt;

&lt;p&gt;Se trata de detectar cuando el campo de un modelo de Laravel ha sido modificado, en este caso el campo &lt;em&gt;email&lt;/em&gt; de un usuario:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="c1"&gt;// El evento se disparará cuando se haya actualizado un registro del modelo&lt;/span&gt;
&lt;span class="k"&gt;static&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;updated&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$userModel&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="c1"&gt;// Vemos si el campo email ha sido modificado con getDirty()&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;isset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$userModel&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;getDirty&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="s1"&gt;'email'&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// el campo "email" ha sido modificado&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>laravel</category>
      <category>php</category>
    </item>
    <item>
      <title>Why you are not focused as a web developer</title>
      <author>Kars van Iersel</author>
      <pubDate>Tue, 24 Aug 2021 14:55:11 +0000</pubDate>
      <link>https://dev.to/karsvaniersel/why-you-are-not-focused-as-a-web-developer-2kno</link>
      <guid>https://dev.to/karsvaniersel/why-you-are-not-focused-as-a-web-developer-2kno</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;We web developers are always faced with distractions. It's not uncommon to see web developers on their computers with open tabs for Twitter, Facebook, and Reddit crowding the taskbar of your computer. Here are some tips on staying focused in order to be more productive as a web developer. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-turn-off-notifications-from-web-apps-that-are-distractions"&gt;
  &lt;/a&gt;
  1. Turn off notifications from web apps that are distractions
&lt;/h2&gt;

&lt;p&gt;One way to stay focused while web developing is to turn off notifications from web apps that are distractions. Whether it is Reddit or Facebook, these web applications will keep you checking for updates and inevitably bring you away from your work. Turning off those notifications can help keep web developers focused on their work. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-set-short-deadlines-for-yourself-throughout-the-day-and-work-on-one-task-at-a-time"&gt;
  &lt;/a&gt;
  2. Set short deadlines for yourself throughout the day and work on one task at a time
&lt;/h2&gt;

&lt;p&gt;Another thing web developers can do to help stay focused on their work is to set short deadlines for themselves. Set one 30-minute deadline for yourself and then focus on one task at a time. You will be more focused and can ensure that you will have a productive day. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4QIYeWfx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629816722960/aRxNbNZkX.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4QIYeWfx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629816722960/aRxNbNZkX.png" alt="pomodoro-technique.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-pomodoro-technique"&gt;
  &lt;/a&gt;
  The Pomodoro Technique
&lt;/h3&gt;

&lt;p&gt;The Pomodoro Technique is one of the most popular productivity techniques for web developers. A web developer can use this technique to focus on a single task and set short deadlines for themselves. This technique is based on time-boxing work in 25 minutes, with 5-minute breaks between them. The web developer will have to work for 25 minutes without any distractions and then take a break. There are also various applications that web developers can install that will help keep them on track by doing things such as blocking web sites like Reddit or Facebook from loading when web developers are working on their tasks.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-create-a-do-not-disturb-zone-in-your-home-or-office-with-headphones-earplugs-and-an-eye-mask-to-block-out-other-distractions"&gt;
  &lt;/a&gt;
  3. Create a "Do Not Disturb" zone in your home or office with headphones, earplugs, and an eye mask to block out other distractions
&lt;/h2&gt;

&lt;p&gt;The next thing web developers can do is to create a "do not disturb" zone in their home or office. This way web developers will have everything they need to stay focused on their work without any other distractions. This zone should include headphones, earplugs, and an eye mask. When web developers make this space for themselves, they are more likely to stay focused on their work and not be interrupted by anything else that might happen around them.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-give-yourself-rewards-when-you-complete-tasks-this-can-be-anything-from-taking-a-break-to-reading-something-interesting"&gt;
  &lt;/a&gt;
  4. Give yourself rewards when you complete tasks - this can be anything from taking a break to reading something interesting
&lt;/h2&gt;

&lt;p&gt;A web developer can use this technique when they are trying to work on a task. Maybe web developers might need some motivation to complete the task, so web developers can give themselves a reward at the end of it. Rewards are unlimited, web developers might want to take a break or read something interesting. This technique can motivate web developers to get through the rough parts of web development.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#take-breaks"&gt;
  &lt;/a&gt;
  Take Breaks
&lt;/h3&gt;

&lt;p&gt;An example of a reward can be taking breaks. Studies show that the most effective way to learn is with frequent breaks. For adults, it takes about 30 minutes of solid studying before you'll start losing your focus and forgetting what you've learned. A study from Cornell University found a sweet spot for retention in adults at around 45-90 minute intervals between learning sessions-- so if you have 3 hours worth of material to cover, take three short 10+minute break followed by 5 more minutes on each section just as long as they're not longer than 2 hours total time combined!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-get-rid-of-all-social-media-apps-from-your-phone-so-youre-not-tempted-to-check-them-constantly-while-working-on-projects-or-during-meeting"&gt;
  &lt;/a&gt;
  5. Get rid of all social media apps from your phone so you're not tempted to check them constantly while working on projects or during meeting
&lt;/h2&gt;

&lt;p&gt;The next thing web developers can do to help stay focused is to get rid of all social media apps from their phone. It's not uncommon for web developers to be tempted to check their social media apps while they are working on projects or during meetings. The temptation will be removed by getting rid of these web applications from web developer's phone. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-take-care-of-your-mental-health-by-exercising-regularly-eating-healthy-food-meditating-getting-enough-sleep-and-practicing-selfcare-techniques"&gt;
  &lt;/a&gt;
  6. Take care of your mental health by exercising regularly, eating healthy food, meditating, getting enough sleep, and practicing self-care techniques
&lt;/h2&gt;

&lt;p&gt;The web developer can also take care of their own mental health by exercising regularly, eating healthier food, meditating, getting enough sleep, and practicing self-care techniques. Web developers can use these techniques to help with their productivity and focus on web development. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Web developers are constantly inundated with distractions, and it can be difficult to stay on task when you have open tabs for Twitter, Facebook, and Reddit all crowding your taskbar. Here are some tips on how web developers can stay focused in order to get more done! Web developers may want to take advantage of time-boxing work in 25 minutes intervals followed by 5 minute breaks or try creating a "do not disturb" zone that includes headphones/earplugs/eye mask. Another great way web developer's can keep their focus is by giving themselves rewards every time they complete tasks like taking a break or reading something interesting. Finally web developers should make sure they're taking care of their mental health by exercising regularly, eating healthy food, meditating&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>webdev</category>
      <category>learning</category>
      <category>beginners</category>
    </item>
  </channel>
</rss>
