<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>5 Things I've Learned in 6 Weeks on the Job</title>
      <author>Ash</author>
      <pubDate>Sun, 19 Sep 2021 19:46:01 +0000</pubDate>
      <link>https://dev.to/ash_bergs/5-things-i-ve-learned-in-6-weeks-on-the-job-1dc8</link>
      <guid>https://dev.to/ash_bergs/5-things-i-ve-learned-in-6-weeks-on-the-job-1dc8</guid>
      <description>&lt;p&gt;It's been 6 weeks since my first day as a real-deal, steadily employed frontend engineer. In those 6 weeks, I've made mistakes, felt stupid, learned a lot about living, production-level code, and myself. I've also seen that becoming a developer, no matter the path you take to get there, can only teach you so much about actually entering the industry and stepping into large projects built by multiple teams of knowledgeable individuals over several years. &lt;/p&gt;

&lt;p&gt;If I could go back and give me from 6 weeks ago any advice, as a new engineer embarking on her first journey with an official title, I'd have a few things to tell her, aside from the reminder to pick up extra coffee. &lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#1-try-not-to-call-attention-to-or-apologize-for-your-lack-of-experience"&gt;
  &lt;/a&gt;
  1. Try not to call attention to, or apologize for, your lack of experience.
&lt;/h3&gt;

&lt;p&gt;On my second day, after completing the nails-on-a-chalkboard process of setting up a laptop, the associated SSO/SAML accounts, and configuring my IDE and VPN, I happily cloned down the first repo I was to work in. Opening it I was immediately intimidated by the number of directories and files, and a tech stack comprised of many packages and libraries that were new to me.&lt;/p&gt;

&lt;p&gt;For a time I let that intimidation get the best of me, apologizing about a half dozen times to one teammate or another for my lack of prior knowledge, and I hesitated to pick up tickets and jump into working. Then I remembered I'm human - I can't possibly know everything there is to know about every library that hits npm, and navigating living code you had no hand in writing is difficult.&lt;/p&gt;

&lt;p&gt;It's like reading a multi-volume series, with all the fan-fic, the canon side-stories, the limited release collaborations - and then trying to figure out how you can not only add to that but make it better. There's a lot, and there's definitely a learning curve. Give yourself understanding, and if you need to reach out for guidance, try to remove the extra noise from your messages. Leave out the explanations and just ask your question as directly as possible, chances are your coworkers already know you're a junior without you reminding them.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-your-coworkers-are-a-resource-but-a-limited-one"&gt;
  &lt;/a&gt;
  2. Your coworkers are a resource - but a limited one.
&lt;/h3&gt;

&lt;p&gt;This point stands no matter what level of developer you are - coworkers are there to give pointers, discuss sticking points, troubleshoot, and share the load, but there are only so many hours, and so much energy, in a day. Thankfully, Google doesn't rely on a squishy, gray, biological CPU - we can ask it questions, and endless variations of those questions, until the cows come home.&lt;/p&gt;

&lt;p&gt;In boot camp, I learned that it's almost always better to do your homework and brute force a solution that needs refinement than to implement nothing at all and ask someone else how to do it. Go forth and Google. Try things out, break stuff, figure out why it broke, and fix it - pull the problem apart.&lt;/p&gt;

&lt;p&gt;If you're still at an impasse, get in the habit of giving others context - a screenshot is only a &lt;code&gt;prt sc&lt;/code&gt; and &lt;code&gt;ctrl + v&lt;/code&gt; press away - and draft your questions. You'll be surprised how often this practice will lead you to an answer without ever pressing send. While you shouldn't be afraid to ask your coworkers questions and to learn from them, you should be respectful of their time and mindful of their mental energy.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-document-document-document"&gt;
  &lt;/a&gt;
  3. Document, document, document
&lt;/h3&gt;

&lt;p&gt;Developers know the value of good documentation, which is why it's ironic that so many of us struggle with it on a personal level. Being in the habit of documenting your process and your day, especially as a junior developer, will do loads for recall and concentration, and make it look like you have your stuff together.&lt;/p&gt;

&lt;p&gt;There are numerous ways to go about documenting the day, but keep in mind that the best documentation is shareable and &lt;em&gt;&lt;code&gt;ctrl + f&lt;/code&gt;-able&lt;/em&gt; - unlike the barrage of sticky notes collecting on your desk, or abbreviated, barely legible scribbles in the margins of a notebook. Using a planning app like Trello you can create cards and easily drop in screenshots, attach notes and checklists, and if needed, share all of it with a peer.&lt;/p&gt;

&lt;p&gt;This approach helps me keep track of what was discussed and decided in meetings throughout the week, and creates a running log of the tasks I've completed. Once done with a card, it can be archived, creating a very handy backlog in the case that another developer has questions on code you implemented, removed, or changed.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-dont-take-anything-personally"&gt;
  &lt;/a&gt;
  4. Don't take anything personally.
&lt;/h3&gt;

&lt;p&gt;Rarely in life is anything really about us as individuals, and this is doubly true come code review time. Your code will be scrutinized, and you shouldn't be surprised or upset when parts of it don't hold up to the magnifying glass. Chances are your coworkers didn't open your PR with the intent to destroy your self-esteem, so take these moments as a learning experience. Make suggested changes and try to understand why they were suggested in the first place. Keep your ego out of it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-dont-stop-learning"&gt;
  &lt;/a&gt;
  5. Don't stop learning.
&lt;/h3&gt;

&lt;p&gt;I identify as a completionist. There's something about checking things off a list that gives me a sense of accomplishment. But this personality trait is a double-edged sword that comes with a competitive streak, and a predisposition to tunnel vision. I wasn't on the job long before I caught myself logging several more hours than the expected 8 am to 5 pm in an attempt to get more done, but the effort wasn't yielding the expected result.&lt;/p&gt;

&lt;p&gt;For starters, I couldn't reach out for hints and pointers because my coworkers were logged off, attending to their mental well-being and personal lives. Furthermore, I was neglecting my own and wasting time spinning my tires trying to understand a tech stack from inside a legacy project, instead of building my own.&lt;/p&gt;

&lt;p&gt;Our coworkers simply don't have the time to teach us everything we have to know about the projects we're stepping into - no matter how intimately they might know themselves. If you're struggling to reason about your company's tech stack, try to find a Udemy or YouTube course that utilizes a similar one. When the working day is over, and your coworkers have called it a night, consider spending that hour or two of extra work there.&lt;/p&gt;

&lt;p&gt;Don't forget that part of being a developer is a commitment to being a lifelong student, and understand that nothing you learn is useless or single scope. So keep reading articles, stay up to date on what's making waves, support and utilize the community of remote educators this industry has built, and keep hacking on your passion projects.&lt;/p&gt;




&lt;p&gt;Breaking into a new industry is hard work. Once you succeed in landing a job it's easy to get swept up in the tide of new information, self-doubt, and confusion that comes with it. Keep in mind that all the things you did while job hunting, like building hobby projects, learning new frameworks and fundamentals, and updating your resume, all still apply - they've just shifted from the main burner.&lt;/p&gt;

&lt;p&gt;While you're at it, don't forget to enjoy the here-and-now. When you first started on this journey, perhaps struggling to write a for-loop or understand recursion, you probably imagined how great it would be once you got to where you are &lt;em&gt;right now&lt;/em&gt;, getting paid to code. So while you stress about the holes in your knowledge and how long it will take to get to the next benchmark, know that it's all a part of the process - and all you have to do is keep going.&lt;/p&gt;

</description>
      <category>career</category>
      <category>webdev</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Weekly Digest 37/2021</title>
      <author>Marco Biedermann</author>
      <pubDate>Sun, 19 Sep 2021 19:43:42 +0000</pubDate>
      <link>https://dev.to/marcobiedermann/weekly-digest-37-2021-3lam</link>
      <guid>https://dev.to/marcobiedermann/weekly-digest-37-2021-3lam</guid>
      <description>&lt;p&gt;Welcome to my Weekly Digest #37 of this year.&lt;/p&gt;

&lt;p&gt;This weekly digest contains a lot of interesting and inspiring articles, videos, tweets, podcasts, and designs I consumed during this week.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#interesting-articles-to-read"&gt;
  &lt;/a&gt;
  Interesting articles to read
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#designing-beautiful-shadows-in-css"&gt;
  &lt;/a&gt;
  Designing Beautiful Shadows in CSS
&lt;/h3&gt;

&lt;p&gt;Most of the shadows are fuzzy grey boxes. It doesn't have to be this way, though! CSS gives us the tools to create rich, lush, lifelike shadows. In this tutorial, Josh will show you how.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.joshwcomeau.com/css/designing-shadows/"&gt;Designing Beautiful Shadows in CSS&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-future-of-css-cascade-layers"&gt;
  &lt;/a&gt;
  The Future of CSS: Cascade Layers
&lt;/h3&gt;

&lt;p&gt;There’s a new CSS Language Feature coming to help us: Cascade Layers (CSS &lt;code&gt;@layer&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.bram.us/2021/09/15/the-future-of-css-cascade-layers-css-at-layer/"&gt;The Future of CSS: Cascade Layers (CSS @layer)&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#less-absolute-positioning-with-modern-css"&gt;
  &lt;/a&gt;
  Less Absolute Positioning with Modern CSS
&lt;/h3&gt;

&lt;p&gt;How to use use position:absolute less by leveraging modern CSS&lt;/p&gt;

&lt;p&gt;&lt;a href="https://ishadeed.com/article/less-absolute-positioning-modern-css/"&gt;Less Absolute Positioning With Modern CSS - Ahmad Shadeed&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#some-great-videos-i-watched-this-week"&gt;
  &lt;/a&gt;
  Some great videos I watched this week
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#react-storybook-crash-course"&gt;
  &lt;/a&gt;
  React Storybook Crash Course
&lt;/h3&gt;

&lt;p&gt;Designing and testing components are crucial to every application, but it can be difficult to view components in isolation. This makes it hard to design and test components, but with Storybook this is no longer an issue. Storybook makes developing, testing and working with a component library so much easier. You can test complex actions and ensure your components are always working as expected.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/FUKpWgRyPlU"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://twitter.com/DevSimplified"&gt;Web Dev Simplified&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#css-accentcolor"&gt;
  &lt;/a&gt;
  CSS accent-color
&lt;/h3&gt;

&lt;p&gt;It's a fun little thing. Or is it not really "little"? Dave says this is a massive improvement for design systems work where NOT having to re-create form components just for size and color changes is a big time saver.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/F17DzJYysWM"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://twitter.com/chriscoyier"&gt;Chris Coyier&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#stop-using-import-with-sass"&gt;
  &lt;/a&gt;
  Stop using @import with Sass
&lt;/h3&gt;

&lt;p&gt;The use of &lt;code&gt;@import&lt;/code&gt; has been deprecated in Sass for quite a while now, but a &lt;em&gt;lot&lt;/em&gt; of people still use it. In this video, I take a quick look at the replacements you should be using instead, &lt;code&gt;@use&lt;/code&gt; and &lt;code&gt;@forward&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/CR-a8upNjJ0"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://twitter.com/KevinJPowell"&gt;Kevin Powell&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#springy-animated-modals"&gt;
  &lt;/a&gt;
  Springy Animated Modals
&lt;/h3&gt;

&lt;p&gt;Create amazing animations in React with Framer Motion. In this tutorial, we build an interactive modal window from scratch and customize its spring animations&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/SuqU904ZHA4"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://twitter.com/fireship_dev"&gt;Fireship&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#chrome-94-whats-new-in-devtools"&gt;
  &lt;/a&gt;
  Chrome 94 - What’s New in DevTools
&lt;/h3&gt;

&lt;p&gt;Use DevTools in your preferred language, new Nest Hub devices, new CSS container queries badge and more.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/N9Jiou61WH4"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://twitter.com/ChromiumDev"&gt;Google Chrome Developers&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#useful-github-repositories"&gt;
  &lt;/a&gt;
  Useful GitHub repositories
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#spotify-tui"&gt;
  &lt;/a&gt;
  Spotify TUI
&lt;/h3&gt;

&lt;p&gt;A Spotify client for the terminal written in Rust.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/Rigellute"&gt;
        Rigellute
      &lt;/a&gt; / &lt;a href="https://github.com/Rigellute/spotify-tui"&gt;
        spotify-tui
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Spotify for the terminal written in Rust 🚀
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Spotify TUI&lt;/h1&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/Rigellute/spotify-tui/workflows/Continuous%20Integration/badge.svg?branch=master&amp;amp;event=push"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KaZbAirj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/Rigellute/spotify-tui/workflows/Continuous%2520Integration/badge.svg%3Fbranch%3Dmaster%26event%3Dpush" alt="Continuous Integration"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/0fb6d6fd68a7f1aaf3fef2395ab988e131dc9ab8ce362dc7495a995b9a7c9280/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d626c756576696f6c65742e737667"&gt;&lt;img src="https://camo.githubusercontent.com/0fb6d6fd68a7f1aaf3fef2395ab988e131dc9ab8ce362dc7495a995b9a7c9280/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d626c756576696f6c65742e737667" alt=""&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/4f2dd37b98864707f081135aa1f0a010c88298012de47079e5d62116332a9b77/68747470733a2f2f746f6b65692e72732f62312f6769746875622f526967656c6c7574652f73706f746966792d7475693f63617465676f72793d636f6465"&gt;&lt;img src="https://camo.githubusercontent.com/4f2dd37b98864707f081135aa1f0a010c88298012de47079e5d62116332a9b77/68747470733a2f2f746f6b65692e72732f62312f6769746875622f526967656c6c7574652f73706f746966792d7475693f63617465676f72793d636f6465" alt=""&gt;&lt;/a&gt;
&lt;a href="https://crates.io/crates/spotify-tui" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0726d393cbc6a66f607c59a6344e8f020056c5fb8c2506fa5adcdfc3a91d952f/68747470733a2f2f696d672e736869656c64732e696f2f6372617465732f762f73706f746966792d7475692e737667" alt="Crates.io"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/7ad65961355cafacd0ee544178e0b7bf8105ac0c8501fc53ae20033188da9aa5/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f762f72656c656173652f526967656c6c7574652f73706f746966792d7475693f636f6c6f723d253233633639346666"&gt;&lt;img src="https://camo.githubusercontent.com/7ad65961355cafacd0ee544178e0b7bf8105ac0c8501fc53ae20033188da9aa5/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f762f72656c656173652f526967656c6c7574652f73706f746966792d7475693f636f6c6f723d253233633639346666" alt=""&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/Rigellute/spotify-tui#contributors-"&gt;&lt;img src="https://camo.githubusercontent.com/5423e63b555735e528f7662c0f3ede6466802476a3decaeb6d840e5b3394e756/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f616c6c5f636f6e7472696275746f72732d39312d6f72616e67652e7376673f7374796c653d666c61742d737175617265" alt="All Contributors"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://twitter.com/intent/follow?screen_name=AlexKeliris" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6d0650b8cd6e32bd099d8135f0eb137ac2af81bc8e213fe4ebd96eb0db6a6afd/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f666f6c6c6f772f416c65784b656c697269733f6c6162656c3d466f6c6c6f77253230416c6578616e6465722532304b656c69726973253230253238526967656c6c757465253239267374796c653d736f6369616c" alt="Follow Alexander Keliris (Rigellute)"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A Spotify client for the terminal written in Rust.&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/12150276/75177190-91d4ab00-572d-11ea-80bd-c5e28c7b17ad.gif"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MwBoGaIK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/12150276/75177190-91d4ab00-572d-11ea-80bd-c5e28c7b17ad.gif" alt="Demo"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The terminal in the demo above is using the &lt;a href="https://rigel.netlify.com/" rel="nofollow"&gt;Rigel theme&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/Rigellute/spotify-tui#spotify-tui"&gt;Spotify TUI&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/Rigellute/spotify-tui#installation"&gt;Installation&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Rigellute/spotify-tui#homebrew"&gt;Homebrew&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Rigellute/spotify-tui#snap"&gt;Snap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Rigellute/spotify-tui#aur"&gt;AUR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Rigellute/spotify-tui#nix"&gt;Nix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Rigellute/spotify-tui#void-linux"&gt;Void Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Rigellute/spotify-tui#fedora-centos"&gt;Fedora/CentOS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/Rigellute/spotify-tui#cargo"&gt;Cargo&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Rigellute/spotify-tui#note-on-linux"&gt;Note on Linux&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/Rigellute/spotify-tui#windows-10"&gt;Windows&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Rigellute/spotify-tui#scoop-installer"&gt;Scoop installer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Rigellute/spotify-tui#manual"&gt;Manual&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Rigellute/spotify-tui#connecting-to-spotifys-api"&gt;Connecting to Spotify’s API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Rigellute/spotify-tui#usage"&gt;Usage&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/Rigellute/spotify-tui#configuration"&gt;Configuration&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Rigellute/spotify-tui#limitations"&gt;Limitations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Rigellute/spotify-tui#using-with-spotifyd"&gt;Using with spotifyd&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Rigellute/spotify-tui#libraries-used"&gt;Libraries used&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/Rigellute/spotify-tui#development"&gt;Development&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Rigellute/spotify-tui#windows-subsystem-for-linux"&gt;Windows Subsystem for Linux&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Rigellute/spotify-tui#contributors"&gt;Contributors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/Rigellute/spotify-tui#roadmap"&gt;Roadmap&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Rigellute/spotify-tui#high-level-requirements-yet-to-be-implemented"&gt;High-level requirements yet to be implemented&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Installation&lt;/h2&gt;
&lt;p&gt;The binary executable is &lt;code&gt;spt&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;
Homebrew&lt;/h3&gt;
&lt;p&gt;For both macOS and Linux&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;brew install spotify-tui&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;To update, run&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;brew upgrade spotify-tui&lt;/pre&gt;

&lt;/div&gt;
&lt;h3&gt;
Snap&lt;/h3&gt;
&lt;p&gt;For a system with Snap installed, run&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;snap install spt&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;The stable version will be installed for you automatically.&lt;/p&gt;
&lt;p&gt;If you want to install the nightly build, run&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;snap install spt --edge&lt;/pre&gt;

&lt;/div&gt;
&lt;h3&gt;
AUR&lt;/h3&gt;
&lt;p&gt;For those on Arch Linux you can find the package on AUR &lt;a href="https://aur.archlinux.org/packages/spotify-tui/" rel="nofollow"&gt;here&lt;/a&gt;. If however you're using an AUR helper you can install directly from that, for…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/Rigellute/spotify-tui"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#stargazer"&gt;
  &lt;/a&gt;
  Stargazer
&lt;/h3&gt;

&lt;p&gt;Your repo reached a stars milestone? Celebrate with a video of your stargazers!&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/pomber"&gt;
        pomber
      &lt;/a&gt; / &lt;a href="https://github.com/pomber/stargazer"&gt;
        stargazer
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Your repo reached a stars milestone? Celebrate with a video of your stargazers!
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;Your repo reached a stars milestone? Celebrate with a video of your stargazers!&lt;/p&gt;
&lt;h2&gt;
Example&lt;/h2&gt;

  
    
    

    &lt;span class="m-1"&gt;out.mp4&lt;/span&gt;
    
  

  

  


&lt;h2&gt;
Make your own video&lt;/h2&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/1911623/121809008-75fe5c80-cc31-11eb-8f44-5df6183deca5.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_D0AKgfG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/1911623/121809008-75fe5c80-cc31-11eb-8f44-5df6183deca5.png" width="720"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/1911623/121809050-ae059f80-cc31-11eb-9af9-2aa05a24bc7f.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D2BsZuIn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/1911623/121809050-ae059f80-cc31-11eb-9af9-2aa05a24bc7f.png" width="720"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/1911623/121809098-e1482e80-cc31-11eb-9ffc-e4d34f419fb1.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_ss9HSW4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/1911623/121809098-e1482e80-cc31-11eb-9ffc-e4d34f419fb1.png" width="720"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/1911623/121809174-1e142580-cc32-11eb-84cc-c5aa19698fc1.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4ojCkt7x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/1911623/121809174-1e142580-cc32-11eb-84cc-c5aa19698fc1.png" width="720"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/1911623/121809216-54ea3b80-cc32-11eb-8b22-7d74306adb9e.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kdT8qXZ1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/1911623/121809216-54ea3b80-cc32-11eb-8b22-7d74306adb9e.png" width="720"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/1911623/121809344-cf1ac000-cc32-11eb-93c3-cc6e58ff7988.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xZfkM20J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/1911623/121809344-cf1ac000-cc32-11eb-93c3-cc6e58ff7988.png" width="720"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/1911623/121809394-fb364100-cc32-11eb-8a82-e9a6d25f37cf.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lr17zAoV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/1911623/121809394-fb364100-cc32-11eb-8a82-e9a6d25f37cf.png" width="720"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Dev&lt;/h2&gt;
&lt;p&gt;To run it locally you need a &lt;code&gt;.env&lt;/code&gt; file with a github token var &lt;code&gt;REMOTION_GITHUB_TOKEN&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;
Credits&lt;/h2&gt;
&lt;p&gt;Made with &lt;a href="https://www.remotion.dev/" rel="nofollow"&gt;Remotion&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/pomber/stargazer"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


&lt;h3&gt;
  &lt;a href="#restyle"&gt;
  &lt;/a&gt;
  Restyle
&lt;/h3&gt;

&lt;p&gt;A type-enforced system for building UI components in React Native with TypeScript.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/Shopify"&gt;
        Shopify
      &lt;/a&gt; / &lt;a href="https://github.com/Shopify/restyle"&gt;
        restyle
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A type-enforced system for building UI components in React Native with TypeScript.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
&lt;code&gt;@shopify/restyle&lt;/code&gt;
&lt;/h1&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/688415/75268245-91084b80-57f7-11ea-905b-2a9046aa5ca3.gif"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b92QY_Zy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/688415/75268245-91084b80-57f7-11ea-905b-2a9046aa5ca3.gif" alt="RestyleTheme 2020-02-25 17_43_51"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The Restyle library provides a type-enforced system for building UI components in React Native with TypeScript. It's a library for building UI libraries, with themability as the core focus.&lt;/p&gt;
&lt;p&gt;This library assumes that the UI is built upon a design system that (at the very least) defines a set of colors and spacing constants that lays as a foundation. While the library acknowledges that there can be exceptions to the system by allowing any style to be overridden, it keeps the developer most productive when one-off values are kept to a minimum.&lt;/p&gt;
&lt;p&gt;Here's an example of how a view built with Restyle components could look:&lt;/p&gt;
&lt;div class="highlight highlight-source-tsx position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;
  &lt;span class="pl-smi"&gt;ThemeProvider&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-s1"&gt;createBox&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-s1"&gt;createText&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-s1"&gt;createRestyleComponent&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-s1"&gt;createVariant&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-smi"&gt;VariantProps&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
&lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'@shopify/restyle'&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-c"&gt;// See the "Defining Your Theme" readme section below&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s1"&gt;theme&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;&lt;span class="pl-smi"&gt;Theme&lt;/span&gt;&lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'./theme'&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;

&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-smi"&gt;Box&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;createBox&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-smi"&gt;Theme&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;/pre&gt;…
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/Shopify/restyle"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#swc"&gt;
  &lt;/a&gt;
  swc
&lt;/h3&gt;

&lt;p&gt;swc is a super-fast compiler written in rust; producing widely-supported javascript from modern standards and typescript.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/swc-project"&gt;
        swc-project
      &lt;/a&gt; / &lt;a href="https://github.com/swc-project/swc"&gt;
        swc
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      swc is a super-fast compiler written in rust; producing widely-supported javascript from modern standards and typescript.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
  &lt;a href="https://swc.rs/" rel="nofollow"&gt;
    &lt;img alt="babel" src="https://res.cloudinary.com/practicaldev/image/fetch/s--u5vNwLC0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/swc-project/logo/master/swc.png" width="546"&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
   Make the web (development) faster
&lt;/p&gt;

&lt;p&gt;
   &lt;a href="https://www.npmjs.com/package/@swc/core" rel="nofollow"&gt;
      &lt;img alt="npm Downloads" src="https://camo.githubusercontent.com/91e00ffa161fb5b8ec2e905fa0823bfa9136fa41f0f2dc9a13096bfb3214e307/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f64772f407377632f636f7265"&gt;
   &lt;/a&gt;
    &lt;a href="https://crates.io/crates/swc_ecma_parser" rel="nofollow"&gt;
      &lt;img alt="undefined" src="https://camo.githubusercontent.com/dc1728d68d6ac27362d5e0471b8561743aae9a5ed577531339f086bcf17b7594/68747470733a2f2f696d672e736869656c64732e696f2f6372617465732f642f7377635f65636d615f7061727365722e7376673f6c6162656c3d6372617465732e696f253230646f776e6c6f616473"&gt;
    &lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
   &lt;a href="https://github.com/swc-project/swc/actions/workflows/cargo.yml"&gt;
      &lt;img alt="CI Status" src="https://res.cloudinary.com/practicaldev/image/fetch/s--vP8X8_J6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/swc-project/swc/actions/workflows/cargo.yml/badge.svg%3Fevent%3Dpush"&gt;
   &lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;swc is a super-fast typescript / javascript compiler written in rust. It's a library for rust and javascript at the same time. If you are using swc from rust, see &lt;a href="https://rustdoc.swc.rs/swc/" rel="nofollow"&gt;rustdoc&lt;/a&gt; and for most users, your entrypoint for using library will be &lt;a href="https://rustdoc.swc.rs/swc_ecma_parser/" rel="nofollow"&gt;parser&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you are using swc from javascript, please refer to &lt;a href="https://swc.rs/docs/installation/" rel="nofollow"&gt;docs on the website&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;
Documentation&lt;/h1&gt;

&lt;p&gt;Check out the documentation &lt;a href="https://swc.rs/docs/installation/" rel="nofollow"&gt;in the website&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;
Features&lt;/h1&gt;

&lt;p&gt;Please see &lt;a href="https://swc.rs/docs/comparison-babel" rel="nofollow"&gt;comparison with babel&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;
Performance&lt;/h1&gt;

&lt;p&gt;Please see &lt;a href="https://swc.rs/docs/benchmark-transform" rel="nofollow"&gt;benchmark results&lt;/a&gt; on the website.&lt;/p&gt;

&lt;h2&gt;
Supporting swc&lt;/h2&gt;
&lt;p&gt;
   &lt;a href="https://github.com/swc-project/swc#backers"&gt;
      &lt;img alt="Backers on Open Collective" src="https://camo.githubusercontent.com/f240802efd7b4b4b50f088ae37b4a9d441a232292b3049e5cddcfbc5ee789e8e/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7377632f74696572732f6261636b65722f62616467652e7376673f6c6162656c3d6261636b657226636f6c6f723d627269676874677265656e"&gt;
   &lt;/a&gt;
   &lt;a href="https://github.com/swc-project/swc#gold-sponsors"&gt;
      &lt;img alt="Gold sponsors on Open Collective" src="https://camo.githubusercontent.com/1173651a01c306c016b5d2cb0cdaea2f8274d6aee441b410ac8b4d2dbbf9105c/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7377632f74696572732f676f6c642d73706f6e736f72732f62616467652e7376673f6c6162656c3d476f6c6425323073706f6e736f727326636f6c6f723d627269676874677265656e"&gt;
   &lt;/a&gt;
   &lt;a href="https://github.com/swc-project/swc#silver-sponsors"&gt;
      &lt;img alt="Silver sponsors on Open Collective" src="https://camo.githubusercontent.com/a283bd354137b20d8f7da82b4fe6208e40da700311a979a32cc328c4fdd6a8dd/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7377632f74696572732f73696c7665722d73706f6e736f72732f62616467652e7376673f6c6162656c3d53696c76657225323073706f6e736f727326636f6c6f723d627269676874677265656e"&gt;
   &lt;/a&gt;
   &lt;a href="https://github.com/swc-project/swc#bronze-sponsors"&gt;
      &lt;img alt="Bronze sponsors on Open Collective" src="https://camo.githubusercontent.com/5244f0b3200456c160f4968035681e93d7ab6382b073bec11ae48179d6c4287c/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7377632f74696572732f62726f6e7a652d73706f6e736f72732f62616467652e7376673f6c6162656c3d42726f6e7a6525323073706f6e736f727326636f6c6f723d627269676874677265656e"&gt;
   &lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;swc is a community-driven project, and is maintained by a group of &lt;a href="https://opencollective.com/swc#team" rel="nofollow"&gt;volunteers&lt;/a&gt;. If you'd like to help support the future of the project, please consider:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Giving developer time on the project. (Message us on &lt;a href="https://github.com/swc-project/swc/discussions"&gt;Github discussions&lt;/a&gt; (preferred) or &lt;a href="https://swc-org.slack.com/" rel="nofollow"&gt;Slack&lt;/a&gt; for guidance!)&lt;/li&gt;
&lt;li&gt;Giving funds by becoming a sponsor (see &lt;a href="https://opencollective.com/swc" rel="nofollow"&gt;https://opencollective.com/swc&lt;/a&gt;)!&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Contributing&lt;/h2&gt;
&lt;p&gt;See &lt;a href="https://github.com/swc-project/swcCONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt;. You may also find…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/swc-project/swc"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#dribbble-shots"&gt;
  &lt;/a&gt;
  dribbble shots
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#surfing-app-concept"&gt;
  &lt;/a&gt;
  Surfing app concept
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4WlQW6hI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.dribbble.com/users/6337227/screenshots/16476321/media/ead508e57919ee3a27a0786175820a6f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4WlQW6hI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.dribbble.com/users/6337227/screenshots/16476321/media/ead508e57919ee3a27a0786175820a6f.png" alt="https://cdn.dribbble.com/users/6337227/screenshots/16476321/media/ead508e57919ee3a27a0786175820a6f.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://dribbble.com/shots/16476321-Surfing-app-concept"&gt;Sadhin Saleem&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#bit-coin-crypto-currency-app"&gt;
  &lt;/a&gt;
  Bit Coin - Crypto Currency App
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cBD3v2er--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.dribbble.com/users/2969830/screenshots/16478674/media/27924e920befe7ae4ce37b48e6e7b20c.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cBD3v2er--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.dribbble.com/users/2969830/screenshots/16478674/media/27924e920befe7ae4ce37b48e6e7b20c.jpg" alt="https://cdn.dribbble.com/users/2969830/screenshots/16478674/media/27924e920befe7ae4ce37b48e6e7b20c.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://dribbble.com/shots/16478674-Bit-Coin-Crypto-Currency-App"&gt;Syful Islam&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#banking-app-mobile-design-concept"&gt;
  &lt;/a&gt;
  Banking App - Mobile Design Concept
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nNG2a7Bi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.dribbble.com/users/7514969/screenshots/16477023/media/3f6e3dc3a7158fbf29d4e3dc2a645243.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nNG2a7Bi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.dribbble.com/users/7514969/screenshots/16477023/media/3f6e3dc3a7158fbf29d4e3dc2a645243.png" alt="https://cdn.dribbble.com/users/7514969/screenshots/16477023/media/3f6e3dc3a7158fbf29d4e3dc2a645243.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://dribbble.com/shots/16477023-Banking-App-Mobile-Design-Concept"&gt;Julius Branding&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#tweets"&gt;
  &lt;/a&gt;
  Tweets
&lt;/h2&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--kkIzey0b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/619677584805208064/RwwbnNpi_normal.jpg" alt="David K. 🎹 profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        David K. 🎹
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/davidkpiano"&gt;@davidkpiano&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Some useful tricks I use to help me remember when to use certain TypeScript types:&lt;br&gt;&lt;br&gt;unknown = "don't know"&lt;br&gt;any = "don't care"&lt;br&gt;never = "don't want"&lt;br&gt;void = "don't return"
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      12:29 PM - 13 Sep 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1437393026180079621" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1437393026180079621" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1437393026180079621" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;



&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media ltag__twitter-tweet__media__video-wrapper"&gt;
        &lt;div class="ltag__twitter-tweet__media--video-preview"&gt;
          &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zER9VnOb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/tweet_video_thumb/E_W6Ba2XIAIFeRG.jpg" alt="unknown tweet media content"&gt;
          &lt;img src="/assets/play-butt.svg" class="ltag__twitter-tweet__play-butt" alt="Play butt"&gt;
        &lt;/div&gt;
        &lt;div class="ltag__twitter-tweet__video"&gt;
          
            
          
        &lt;/div&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--02vzbmjG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1260536812419809285/Kj2L2S4v_normal.jpg" alt="FrontEnd Dude | JavaScript profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        FrontEnd Dude | JavaScript
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/frontenddude"&gt;@frontenddude&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Working with CSS 😅 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      21:55 PM - 15 Sep 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1438260259471122436" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1438260259471122436" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1438260259471122436" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;



&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--HtAuZn5w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1188024416313196546/zGxQhsWI_normal.jpg" alt="Stefan Judis profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Stefan Judis
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/stefanjudis"&gt;@stefanjudis&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Oh wow, I didn't realize that the `rgb()` CSS color function accepts alpha values these days. 😲&lt;br&gt;&lt;br&gt;Comma-separated:&lt;br&gt;✅ rgb(200, 125, 50)&lt;br&gt;✅ rgb(200, 125, 50, 0.5) /* 50% opacity */&lt;br&gt;&lt;br&gt;Space-separated:&lt;br&gt;✅ rgb(200 125 50)&lt;br&gt;✅ rgb(200 125 50 / 0.5) /* 50% opacity */
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      08:19 AM - 16 Sep 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1438417319831777283" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1438417319831777283" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1438417319831777283" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;



&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media ltag__twitter-tweet__media__video-wrapper"&gt;
        &lt;div class="ltag__twitter-tweet__media--video-preview"&gt;
          &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XvgNjaaq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/ext_tw_video_thumb/1438204494156734467/pu/img/veOwfdvc_NZ8oDe0.jpg" alt="unknown tweet media content"&gt;
          &lt;img src="/assets/play-butt.svg" class="ltag__twitter-tweet__play-butt" alt="Play butt"&gt;
        &lt;/div&gt;
        &lt;div class="ltag__twitter-tweet__video"&gt;
          
            
          
        &lt;/div&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--TTZOvLCd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1332018227942019073/Jh666gw3_normal.jpg" alt="Adam Argyle profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Adam Argyle
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/argyleink"&gt;@argyleink&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      media-queries-4 making confusing queries much simpler  😍&lt;br&gt;&lt;br&gt;caniuse (Firefox only atm) &lt;a href="https://t.co/6JWGI4A9RQ"&gt;caniuse.com/mdn-css_at-rul…&lt;/a&gt;&lt;br&gt;CSS spec &lt;a href="https://t.co/YeKFLAjrCS"&gt;w3.org/TR/mediaquerie…&lt;/a&gt;&lt;br&gt;PostCSS plugin &lt;a href="https://t.co/m66y81ZO2S"&gt;github.com/postcss/postcs…&lt;/a&gt;&lt;br&gt;⭐️ to show Chromium you want it &lt;a href="https://t.co/vo2E04lTiS"&gt;bugs.chromium.org/p/chromium/iss…&lt;/a&gt; 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      13:21 PM - 16 Sep 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1438493119457103875" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1438493119457103875" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1438493119457103875" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;



&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CO9iIN9U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/E_d7XCJXsAQQ53c.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--SuK45xU8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/707504523678523392/Uasvv2C4_normal.jpg" alt="Manuel Matuzović profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Manuel Matuzović
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/mmatuzo"&gt;@mmatuzo&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      TIL that you can control how virtual keyboards capitalize characters and words by default.&lt;br&gt;&lt;br&gt;Learn more on &lt;a href="https://twitter.com/htm_hell"&gt;@htm_hell&lt;/a&gt;: &lt;a href="https://t.co/GhNTyUielS"&gt;htmhell.dev/tips/autocapit…&lt;/a&gt; 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      06:39 AM - 17 Sep 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1438754409979207685" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1438754409979207685" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1438754409979207685" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;



&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3OH6-Xd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/E_dmcF1XIAIeTUG.png" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--iIjdmdRR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1120618937253793793/xb6_9WMl_normal.jpg" alt="Ian Miell profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Ian Miell
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @ianmiell
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Source unknown... 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      05:07 AM - 17 Sep 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1438731403529703424" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1438731403529703424" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1438731403529703424" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;





&lt;h2&gt;
  &lt;a href="#picked-pens"&gt;
  &lt;/a&gt;
  Picked Pens
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#focusss"&gt;
  &lt;/a&gt;
  Focusss
&lt;/h3&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/hakimel/embed/zYzdJvK?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://twitter.com/hakimel"&gt;Hakim El Hattab&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#pok%C3%A9dex"&gt;
  &lt;/a&gt;
  Pokédex
&lt;/h3&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/marcobiedermann/embed/ZEyxRmb?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://twitter.com/BiedermannMarco"&gt;Marco Biedermann&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#podcasts-worth-listening"&gt;
  &lt;/a&gt;
  Podcasts worth listening
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#ladybug-getting-started-with-java"&gt;
  &lt;/a&gt;
  Ladybug – Getting Started With Java
&lt;/h3&gt;

&lt;p&gt;Java is a high-level, class-based, object-oriented programming language. It’s a general-purpose programming language designed to let app developers: write once, run anywhere. Today we’re diving into the world of Java.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="100%" height="232px" src="https://open.spotify.com/embed/episode/13r6mzN0gn0BGbwKZSgOB3"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-changelog-coding-in-the-cloud-with-codespaces"&gt;
  &lt;/a&gt;
  The Changelog – Coding in the cloud with Codespaces
&lt;/h3&gt;

&lt;p&gt;On this special edition of The Changelog, we’re talking with Cory Wilkerson, Senior Director of Engineering at GitHub, about GitHub Codespaces. For years now, the possibility of coding in the cloud seemed so close, yet so far away for a number of reasons. According to Cory, the raw ingredients to make coding in the cloud a reality has been there for years.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="100%" height="232px" src="https://open.spotify.com/embed/episode/5iuVLJ52VTPWnIQE0LY7E6"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#syntax-new-to-javascript-es2022"&gt;
  &lt;/a&gt;
  Syntax – New to JavaScript — ES2022
&lt;/h3&gt;

&lt;p&gt;In this episode of Syntax, Scott and Wes talk about all the new stuff in ES2022 — what it is, why you might need it, and how to use it.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="100%" height="232px" src="https://open.spotify.com/embed/episode/5D5AB0sANzSIHEWjk4gRi2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;Thank you for reading, talk to you next week, and stay safe! 👋&lt;/p&gt;

</description>
      <category>css</category>
      <category>javascript</category>
      <category>react</category>
      <category>webdev</category>
    </item>
    <item>
      <title>ES6 Handbook: Everything You Need to Know</title>
      <author>Shreya Purohit</author>
      <pubDate>Sun, 19 Sep 2021 19:32:46 +0000</pubDate>
      <link>https://dev.to/shreya/es6-handbook-everything-you-need-to-know-1ea7</link>
      <guid>https://dev.to/shreya/es6-handbook-everything-you-need-to-know-1ea7</guid>
      <description>&lt;p&gt;Hey readers! This blog is all about ES6. It includes all the topics related with examples. Before reading further, I want to specify that this was not a blog post initially, these are just my personal notes that I use as a reference guide, so I apologize for any misspells here :)&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table of Contents
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="#notes"&gt;let/const&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="#objects"&gt;objects&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="#this"&gt;this&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="#arrow-functions"&gt;arrow functions&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="#destructuring"&gt;destructuring&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="#spread"&gt;spread&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="#classes"&gt;classes&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="#modules"&gt;modules&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#notes"&gt;
  &lt;/a&gt;
  Notes
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#letconst"&gt;
  &lt;/a&gt;
  let/const
&lt;/h2&gt;

&lt;p&gt;Before moving to the point, let us understand two concepts here:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Global Scope&lt;/strong&gt; - Variable is declared outside the function. This variable is accessible inside every function present in the code.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Function Scope&lt;/strong&gt; - Variable is declared inside (within) a function, outside that it is not accessible anywhere.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Block Scope&lt;/strong&gt; - In short, block scope means variables which are declared in a { } block are not accessible outside it.
This block can be an &lt;code&gt;if&lt;/code&gt; statement, &lt;code&gt;for&lt;/code&gt;/&lt;code&gt;while&lt;/code&gt; loop, etc.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#-raw-var-endraw-function-global-scoped-eg"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;code&gt;var&lt;/code&gt;&lt;/strong&gt;: function/ global scoped. Eg:
&lt;/h3&gt;

&lt;p&gt;→ as you can see, var is both global and function scoped, which often creates a confusion. So avoid using it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var name = 'Jack';              // global scope

function message() {
    var msg = 'Hey Jack!'       //function scope
}

console.log(msg);               // ERROR

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above line of code will throw an error as there's no variable &lt;code&gt;msg&lt;/code&gt; outside the function &lt;code&gt;message&lt;/code&gt; (where we have logged the variable). So it will show as &lt;code&gt;undefined&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-let-endraw-block-scoped-eg"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;code&gt;let&lt;/code&gt;&lt;/strong&gt;: block scoped. Eg:
&lt;/h3&gt;

&lt;p&gt;→ &lt;code&gt;let&lt;/code&gt; keyword can't be redeclared:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let x = 1;
let x = 3;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;result: SyntaxError - redeclaration of let x&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;But when we use &lt;code&gt;let&lt;/code&gt; inside a function, it works like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let size = "big";

function box() {
    for (let x = 0; x &amp;lt; 7; x++) {
        console.log(size);

        //Output: ReferenceError - `size` is not defined

        let size = "small";
        console.log(size);
    }
}

box();                          // small
console.log(size);              //big


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Inside the function &lt;code&gt;box()&lt;/code&gt; when we log the value of size, it shows a reference error. That is because, &lt;code&gt;let&lt;/code&gt; is block scoped. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Anything inside curly braces { } is block scoped.&lt;/strong&gt; In the above scenario, the function &lt;code&gt;box()&lt;/code&gt; is a block.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-const-endraw-block-scoped-eg"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;code&gt;const&lt;/code&gt;&lt;/strong&gt;: block scoped. Eg:
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;const&lt;/code&gt; are very similar to &lt;code&gt;let&lt;/code&gt; except that they can't be changed and redeclared.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const m = 8;
console.log(m);             //m = 8

m = 5;                     // 🚫 this will throw an error 
console.log(m);

// Uncaught TypeError: invalid assignment to const 'm'.
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;→ therefore &lt;code&gt;let&lt;/code&gt; and &lt;code&gt;const&lt;/code&gt; are preferred over &lt;code&gt;var&lt;/code&gt; keyword for declaring variables.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#objects"&gt;
  &lt;/a&gt;
  Objects
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;objects are written within curly braces &lt;code&gt;{ }&lt;/code&gt; as collection of key:value pairs.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;key&lt;/code&gt;: property name&lt;/p&gt;

&lt;p&gt;&lt;code&gt;value&lt;/code&gt;: value of that property&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Creating an empty object:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const car = {
    model: 'Tesla',
    color: 'black',
    price: 800
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Talking specifically about ES6, before ES6 we had to specify both (key, value) even if both are of same names.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function Boy(name, age) {
    return(
        name: name,
        age: age
    );
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;ES6 help us to get rid of duplication when we have same key:value names. So now our code will look like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function Boy(name, age) {
    return(name, age);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#this"&gt;
  &lt;/a&gt;
  this
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;this&lt;/code&gt; is a keyword. It basically returns a reference to the object it is placed within&lt;/p&gt;

&lt;p&gt;💡 &lt;strong&gt;NOTE&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;When we call a function as a method in an object, the &lt;code&gt;this&lt;/code&gt; keyword returns a reference to that object. 👇
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const user = {
    name: 'Mike';
    call() {
        console.log(this);
    }
}
user.call();

// ⚙️ Output: {name: 'Mike, call: f} 

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;But when we call the function alone, outside the object &lt;code&gt;this&lt;/code&gt; returns the global object (browser window) and hence we get the result as &lt;strong&gt;&lt;em&gt;undefined&lt;/em&gt;&lt;/strong&gt; 👇
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const user = {
    name: 'Mike';
    call() {
        console.log(this);
    }
}

const myCall = user.call;

myCall();

// ⚙️ Output: undefined
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#arrow-functions"&gt;
  &lt;/a&gt;
  Arrow Functions
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;  Normally, before ES6:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const square = function(num) {
    return num * num;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;  In ES6:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const square = num =&amp;gt; num * num;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#arraymap"&gt;
  &lt;/a&gt;
  array.map()
&lt;/h3&gt;

&lt;p&gt;If we have an array -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const colors = ["red", "green", "blue"];
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We want to map the objects. Now there are two methods, &lt;code&gt;es6&lt;/code&gt; one is shorter and easier.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  normal case:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const items1 = colors.map(function (color) {
    return "&amp;lt;li&amp;gt;" + color + "&amp;lt;/li&amp;gt;";
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;  es6:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const items2 = colors.map((color) =&amp;gt; `&amp;lt;li&amp;gt; ${color}  &amp;lt;/li&amp;gt;`);

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#object-destructuring"&gt;
  &lt;/a&gt;
  Object Destructuring
&lt;/h2&gt;

&lt;p&gt;Let's say we have an object called &lt;code&gt;girl&lt;/code&gt; such that it has 3 keys as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const girl = {
    name: "",
    age: "",
    country: "",
};
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;  Normally, we would do something like this to get the values:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const name = girl.name;
const age = girl.age;
const country = girl.country;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;  here, as you can see we have to repeat the object name &lt;code&gt;girl&lt;/code&gt; everytime we want to get a value. This problem can be solved by object destructuring:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;const { name, age, country } = girl;&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;this one line code works same as the previous code. So destructuring made our code shorter and easier to understand.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;  In case you want to use an alias (a different variable name) for your work:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;const {country: ctry} = girl;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This above line of code means we've defined a new variable called &lt;code&gt;ctry&lt;/code&gt; and set that equals to &lt;code&gt;country&lt;/code&gt;.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#spread-operator"&gt;
  &lt;/a&gt;
  Spread Operator
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;CASE I - COMBINING ARRAYS&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;  If we want to combine these two arrays:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const one = [1, 2, 3];
const two = [4, 5, 6];
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;  without ES6:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;const combined = one.concat(two);&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  With ES6:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;const combined = [...one, ...two];&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  If we want to add things in-between:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;const combined = [...one, '9', '7', ...two ];&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  If we want to clone an array:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;const myDupli = [...two];&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;CASE II - COMBINING OBJECTS&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;  If we want to combine these two objects:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const alpha = { name: 'Shreya' };
const beta = { age: 19 };
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;  In ES6:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;const combined = {...alpha, ...beta};&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  If we want to add more properties in b/w:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;const gamma = { ...alpha, surName:'Purohit', ...beta, country: 'India'}&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  cloning an object:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;const betaV2 = {...beta};&lt;/code&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#classes"&gt;
  &lt;/a&gt;
  Classes
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;  Let us take an example of an object &lt;code&gt;boy&lt;/code&gt; here. We have a function called &lt;code&gt;run&lt;/code&gt; inside it. Now if we've some bug in the future or we've to modify our function for a different object, it would be a long way.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const boy = {
    name: "Sam",
    run() {
        console.log("running...");
    },
};
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;  To overcome this and make our work easier, we use classes:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;class Boy {
    constructor(name) {
        this.name = name;
    }

    run() {
        console.log("running...");
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;  Now that we've created a class, let's try building our object again -&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;const boy = new Boy("Samridh");&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;with this above class, we've implemented the run method in a single line of code. If someday we find a bug here, we've to modify it in just a single place {inside class Boy}. So this is the advantage of using classes in JS.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#inheritance"&gt;
  &lt;/a&gt;
  Inheritance
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;  If we have a class Boy such that -
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;class Boy {
    constructor(name) {
        this.name = name;
    }

    run() {
        console.log("running");
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;  and we want to create another class (having similar properties + some specific properties of its own). We can do this using the keyword &lt;code&gt;extends&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;class Girl extends Boy {
    eat() {
        console.log("eating");
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;  we just created the class &lt;code&gt;Girl&lt;/code&gt; here. Let us now create a const using this -&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;const myGirl = new Girl("Shreya");&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  and we're done. This code basically means that now the const &lt;code&gt;myGirl&lt;/code&gt; will have the functions &lt;code&gt;eat&lt;/code&gt; + &lt;code&gt;run&lt;/code&gt; + &lt;code&gt;constructor&lt;/code&gt; property of &lt;code&gt;Boy&lt;/code&gt; class. So we can use it like -
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;myGirl.eat();
myGirl.run();
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;  Now let's say we want to create another constructor inside the &lt;code&gt;Girl&lt;/code&gt; class {which is extended from &lt;code&gt;Boy&lt;/code&gt; class, So the constructor inside this &lt;code&gt;Girl&lt;/code&gt; class is called &lt;strong&gt;derived class constructor.&lt;/strong&gt;}.&lt;/li&gt;
&lt;li&gt;  We MUST HAVE TO call &lt;code&gt;super()&lt;/code&gt; constructor inside the new constructor, otherwise we'll get an error (as using &lt;code&gt;this&lt;/code&gt; in derived class constructor requires &lt;code&gt;super()&lt;/code&gt; class). Now this must be looking confusing, let's look at the example below -
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;class Girl extends Boy {
    constructor(age) {
        this.age = age;
    }
    eat() {
        console.log("eating");
    }
}

// *result - Uncaught ReferenceError: must call super constructor before using 'this' in derived class constructor*
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;  calling &lt;code&gt;super()&lt;/code&gt; constructor:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;class Girl extends Boy {
    constructor(name, age) {
        super(name);
        this.age = age;
    }
    eat() {
        console.log("eating");
    }
}
const myGirl = new Girl("Shreya");
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;  In a child class constructor, &lt;code&gt;this&lt;/code&gt; cannot be used until &lt;code&gt;super&lt;/code&gt; is called.&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#modules"&gt;
  &lt;/a&gt;
  Modules
&lt;/h2&gt;

&lt;p&gt;Sometimes we have many no. of classes declared in a single file. This makes the code long, confusing and messy. To avoid this, we separate these classes into different files and import them as a &lt;code&gt;module&lt;/code&gt; into the main file. This is called modularity.&lt;/p&gt;

&lt;p&gt;Let's look it in action. Here's what our folder &lt;code&gt;src&lt;/code&gt; will look like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
// src/boy.js

export class Boy {
    constructor(name) {
        this.name = name;
    }

    run() {
        console.log("running");
    }
}


// src/girl.js

import { Boy } from './src/boy';

export class Girl extends Boy {
    constructor(name, age) {
        super(name);
        this.age = age;
    }
    eat() {
        console.log("eating");
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;both Boy and Girl classes are private in the folder, in order to use them we made them public using the &lt;code&gt;export&lt;/code&gt; keyword.&lt;/p&gt;

&lt;p&gt;We use &lt;code&gt;import&lt;/code&gt; keyword in line 1 of girl.js as it is an extended version of the &lt;code&gt;Boy&lt;/code&gt; class.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now half of the work is done. For now, these classes are not accessible in our main &lt;code&gt;app.js&lt;/code&gt; file. For that we've to import them in our &lt;code&gt;app.js&lt;/code&gt; file. We can do that by using -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { Boy } from './src/boy';

import { Girl } from './src/girl';
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#default-and-named-exports"&gt;
  &lt;/a&gt;
  Default and Named Exports
&lt;/h2&gt;

&lt;h4&gt;
  &lt;a href="#named-exports"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Named Exports&lt;/strong&gt;
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;  We can export more than one objects from a specific module. This is called named export. Eg:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;export class Car {
    constructor(model) {
        this.model = model;
    }
}

export function add(a, b){
    return a + b;
}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;  Here we exported a class &lt;code&gt;Car&lt;/code&gt; and a function &lt;code&gt;add&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#default-exports"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Default Exports&lt;/strong&gt;
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;  It is basically the main object that is exported from the module. It is generally used in case we've only a single object to export. Let's see how it is -
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;export default class Car {
    constructor(model) {
        this.model = model;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;💡 Now we don't need the &lt;code&gt;import { Car } from "./car";&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Instead, we use &lt;code&gt;import Car from "./car";&lt;/code&gt; in case of default exports.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Default exports -&amp;gt; import Car from "./car";
Named exports -&amp;gt; import { Car } from "./car";
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;👋 Woosh! You've made it to the end. Hope I've helped you somehow. I write articles like this whenever I've some spare time. Besides this, I share content related to web development daily on Twitter. Let's connect there! &lt;a href="https://www.twitter.com/eyeshreya"&gt;@eyeshreya&lt;/a&gt;&lt;/p&gt;

</description>
      <category>es6</category>
      <category>javascript</category>
      <category>guide</category>
    </item>
    <item>
      <title>Making the most boring website ever with TypeScript, NestJs, React and others.</title>
      <author>NordicBeaver</author>
      <pubDate>Sun, 19 Sep 2021 19:28:35 +0000</pubDate>
      <link>https://dev.to/nordicbeaver/making-the-most-boring-website-ever-with-typescript-nestjs-react-and-others-17dg</link>
      <guid>https://dev.to/nordicbeaver/making-the-most-boring-website-ever-with-typescript-nestjs-react-and-others-17dg</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-this"&gt;
  &lt;/a&gt;
  What is this
&lt;/h2&gt;

&lt;p&gt;So I'm making a series of videos on how to build a very basic website for a local business. In my case it's a website for a barbershop with an admin panel and a reservation booking form. And today I released the first part.&lt;/p&gt;

&lt;p&gt;This video is a bit different from others, since it's not really a follow along tutorial with explanations for every single line. My goal was more to show how different technologies work together. And I only tried to explain stuff that I find interesting or things that are not usually in the docs or not that easy to google.&lt;/p&gt;

&lt;p&gt;The other reason for that is I'm myself is getting a bit tired of those 4000hrs videos of people making typos. So the main goal of this video was to be slightly more fun, even if it was at the cost of being less informative.&lt;/p&gt;

&lt;p&gt;Anyway, you can find the video here: &lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/b_QDY1UIT7Y"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;I hope some of you will enjoy it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#stack"&gt;
  &lt;/a&gt;
  Stack
&lt;/h2&gt;

&lt;p&gt;For people that are interested in particular technologies/libraries, here is the tech stack i used so far:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Typescript&lt;/li&gt;
&lt;li&gt;NodeJs&lt;/li&gt;
&lt;li&gt;NestJs&lt;/li&gt;
&lt;li&gt;Prisma&lt;/li&gt;
&lt;li&gt;PostgreSQL&lt;/li&gt;
&lt;li&gt;React&lt;/li&gt;
&lt;li&gt;Styled-components.&lt;/li&gt;
&lt;li&gt;React-query&lt;/li&gt;
&lt;li&gt;Formik&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#promo-tips"&gt;
  &lt;/a&gt;
  Promo tips
&lt;/h2&gt;

&lt;p&gt;A couple of tips from the video with a hope of making you curious enough to watch it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#debugging-nestjs-app-in-vs-code"&gt;
  &lt;/a&gt;
  Debugging NestJs app in VS Code
&lt;/h3&gt;

&lt;p&gt;If you try to debug a NestJs app in VS Code just by pressing the Debug button (or F5), you might run into some issues, since it may conflict with how the app is supposed to be built. &lt;/p&gt;

&lt;p&gt;There is much easier way. You just need to set the &lt;strong&gt;Auto Attach&lt;/strong&gt; option to &lt;strong&gt;Smart&lt;/strong&gt; (you can do this with the Command Palette), and then run the app with &lt;code&gt;yarn start:debug&lt;/code&gt; (&lt;code&gt;npm run start:debug&lt;/code&gt;). And that's it, when the application starts, the magic of VS Code will show itself and debugger will run and attach itself to the process.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thunder-client"&gt;
  &lt;/a&gt;
  Thunder Client
&lt;/h3&gt;

&lt;p&gt;If you're a bit tired of how bloated Postman may feel sometimes, there is a VS Code extension called &lt;a href="https://www.thunderclient.io/"&gt;Thunder Client&lt;/a&gt;. It supports pretty much all you need for testing your APIs.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#readable-class-names-with-styledcomponents"&gt;
  &lt;/a&gt;
  Readable class names with styled-components
&lt;/h3&gt;

&lt;p&gt;By default the class names generated by styled-components are gibberish like &lt;code&gt;.frh743-Wrapper&lt;/code&gt;. If you want them to be more meaningful, you can update your babel configuration according to the &lt;a href="https://styled-components.com/docs/tooling#better-debugging"&gt;docs&lt;/a&gt;. &lt;br&gt;
The problem is, you can't really do this if you use something like &lt;strong&gt;create-react-app&lt;/strong&gt;. Luckily, there is another solution. You just import the library a bit different and it should work.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import styled from 'styled-components/macro'
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>react</category>
      <category>typescript</category>
      <category>node</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Astro Command unlocks the world</title>
      <author>Stephen Solka</author>
      <pubDate>Sun, 19 Sep 2021 19:04:43 +0000</pubDate>
      <link>https://dev.to/trashhalo/astro-command-unlocks-the-world-5ehc</link>
      <guid>https://dev.to/trashhalo/astro-command-unlocks-the-world-5ehc</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;This weekend I built a new &lt;a href="https://astro.build/"&gt;Astro&lt;/a&gt; component that lets callers use external commands on their machine to generate html content.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/trashhalo"&gt;
        trashhalo
      &lt;/a&gt; / &lt;a href="https://github.com/trashhalo/astro-command"&gt;
        astro-command
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      run commands as astro components
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;In the repository there is a hello world demo that is shelling out to python.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="o"&gt;--------&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Command&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;astro-command&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;--------&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Command&lt;/span&gt; &lt;span class="nx"&gt;caller&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="k"&gt;import&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;meta&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;command&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./Component.py&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;from python!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;#!/usr/bin/env python 
&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;

&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdin&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;'&amp;lt;h1&amp;gt; Hello &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"message"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt; &amp;lt;/h1&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Props are passed in as a json blob to stdin. Html comes out stdout.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#taking-it-up-a-notch"&gt;
  &lt;/a&gt;
  Taking it up a notch
&lt;/h2&gt;

&lt;p&gt;Python has a very deep well of libraries that can be useful for astro page generation. One example is &lt;a href="https://matplotlib.org/"&gt;https://matplotlib.org/&lt;/a&gt; a plotting library that can generate beautiful graphs outputting SVG.&lt;/p&gt;

&lt;p&gt;As a quick example I rewrote the hello world py component to output a graph instead.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--42dGzghM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q4mc0exzrftcm2z9971o.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--42dGzghM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q4mc0exzrftcm2z9971o.jpg" alt="Screenshot 2021-09-19 144501"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#its-not-just-python"&gt;
  &lt;/a&gt;
  Its not just python
&lt;/h2&gt;

&lt;p&gt;Now that you have shell access from Astro you can use any command! The first one I created a custom component for is Pandoc to get access to all the types of content Pandoc can understand. With 12 lines of astro code I unlocked 30+ file formats!&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/trashhalo"&gt;
        trashhalo
      &lt;/a&gt; / &lt;a href="https://github.com/trashhalo/astro-pandoc"&gt;
        astro-pandoc
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Astro Pandoc&lt;/h1&gt;
&lt;p&gt;Astro component for using pandoc to convert content. This allows you to embed any format pandoc supports.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Supported formats &lt;a href="https://pandoc.org/MANUAL.html#general-options" rel="nofollow"&gt;https://pandoc.org/MANUAL.html#general-options&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/trashhalo/astro-pandoc/blob/main/src/components/Demo.astro"&gt;Demo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Requires you to have pandoc installed on your machine!&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Usage&lt;/h2&gt;
&lt;div class="highlight highlight-text-html-astro position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-c"&gt;---&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; { &lt;span class="pl-smi"&gt;Pandoc&lt;/span&gt; } &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;astro-pandoc&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;---&lt;/span&gt;
&amp;lt;&lt;span class="pl-ent"&gt;Pandoc&lt;/span&gt; &lt;span class="pl-e"&gt;caller&lt;/span&gt;={&lt;span class="pl-k"&gt;import&lt;/span&gt;.&lt;span class="pl-c1"&gt;meta&lt;/span&gt;.&lt;span class="pl-smi"&gt;url&lt;/span&gt;} &lt;span class="pl-e"&gt;file&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Component.tex&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-e"&gt;extraArgs&lt;/span&gt;={[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;--webtex&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]} /&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Component.tex&lt;/p&gt;
&lt;div class="highlight highlight-text-tex-latex position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;\documentclass&lt;/span&gt;{&lt;span class="pl-c1"&gt;article&lt;/span&gt;}
&lt;span class="pl-k"&gt;\usepackage&lt;/span&gt;{&lt;span class="pl-c1"&gt;amsmath&lt;/span&gt;} &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;%&lt;/span&gt; for the equation* environment&lt;/span&gt;
&lt;span class="pl-c1"&gt;\begin&lt;/span&gt;{&lt;span class="pl-smi"&gt;document&lt;/span&gt;}
This is a simple math expression &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;\(&lt;/span&gt;&lt;span class="pl-c1"&gt;\sqrt&lt;/span&gt;{x^2+1}&lt;span class="pl-pds"&gt;\)&lt;/span&gt;&lt;/span&gt; inside text. 
And this is also the same: 
&lt;span class="pl-c1"&gt;\begin&lt;/span&gt;{&lt;span class="pl-smi"&gt;math&lt;/span&gt;}
&lt;span class="pl-c1"&gt;\sqrt&lt;/span&gt;{x^2+1}
&lt;span class="pl-c1"&gt;\end&lt;/span&gt;{&lt;span class="pl-smi"&gt;math&lt;/span&gt;}
but by using another command.

This is a simple math expression without numbering
&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;\[&lt;/span&gt;&lt;span class="pl-c1"&gt;\sqrt&lt;/span&gt;{x^2+1}&lt;span class="pl-pds"&gt;\]&lt;/span&gt;&lt;/span&gt; 
separated from text.

This is also the same:
&lt;span class="pl-c1"&gt;\begin&lt;/span&gt;{&lt;span class="pl-smi"&gt;displaymath&lt;/span&gt;}
&lt;span class="pl-c1"&gt;\sqrt&lt;/span&gt;{x^2+1}
&lt;span class="pl-c1"&gt;\end&lt;/span&gt;{&lt;span class="pl-smi"&gt;displaymath&lt;/span&gt;}

&lt;span class="pl-c1"&gt;\ldots&lt;/span&gt; and this:
&lt;/pre&gt;…
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/trashhalo/astro-pandoc"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#whats-next"&gt;
  &lt;/a&gt;
  Whats next?
&lt;/h2&gt;

&lt;p&gt;There are lots of commands out there. Which one should I connect to astro next?&lt;/p&gt;

</description>
      <category>astro</category>
      <category>python</category>
    </item>
    <item>
      <title>Awesome Content Creation Tools</title>
      <author>Can Burak Sofyalioglu</author>
      <pubDate>Sun, 19 Sep 2021 19:00:13 +0000</pubDate>
      <link>https://dev.to/canburaks/awesome-content-creation-tools-2705</link>
      <guid>https://dev.to/canburaks/awesome-content-creation-tools-2705</guid>
      <description>&lt;p&gt;Creating quality content is a demanding process. Hence, having a wide range of applications can leverage your productivity and save time. Considering this, I will share my favorite &lt;strong&gt;content creation tools&lt;/strong&gt; in both written content and visual content.&lt;/p&gt;

&lt;p&gt;Because it is a growing-list of tools, you could also check the original post for updated tools: &lt;a href="https://www.cbsofyalioglu.com/en/content-creation-tools/"&gt;Awesome Content Creation Tools&lt;/a&gt;





&lt;/p&gt;
&lt;h2&gt;Useful Content Creation Tools&lt;/h2&gt;



&lt;p&gt;Using the appropriate tools can make &lt;strong&gt;content creation&lt;/strong&gt; so much easier and more successful.
    After the introduction, It is time for sharing the &lt;strong&gt;useful content creation tools&lt;/strong&gt;. I hope those
    tools will make you more productive during your content creation process. &lt;/p&gt;






&lt;h3&gt;Content Research Tools&lt;/h3&gt;



&lt;p&gt;Research plays a huge role in what your readers think of your business, products, services, and website. Content
    creation can be as easy as digging up information or digging around on the internet. &lt;/p&gt;



&lt;p&gt;In this section, I'll take you through some of the most useful tools out there so that you can get started on
    creating great content for your blog or website. &lt;/p&gt;



&lt;p&gt;&lt;em&gt;Content research tools&lt;/em&gt; are essential when creating content because The internet is vast, and there's hardly
    any limit to what you can find out about a subject matter.&lt;/p&gt;



&lt;p&gt;&lt;a href="https://www.researchrabbitapp.com/" rel="noreferrer noopener"&gt;Research Rabbit&lt;/a&gt;: This is
    one of my favorite research tools. A research and relationship visualization tool.&lt;/p&gt;



&lt;p&gt;&lt;a href="https://www.semanticscholar.org/" rel="noreferrer noopener nofollow"&gt;Semantic Scholar&lt;/a&gt;: A
    free, AI-powered research tool for scientific literature.&lt;/p&gt;



&lt;p&gt;&lt;a href="https://paperpanda.app/" rel="noreferrer noopener nofollow"&gt;Paper Panda&lt;/a&gt; and &lt;a href="https://unpaywall.org/" rel="noreferrer noopener nofollow"&gt;Unpaywall&lt;/a&gt;: They both allow
    you to access millions of academic papers and researches for free.&lt;/p&gt;



&lt;p&gt;&lt;a href="https://trends.google.com/trends/?geo=US" rel="noreferrer noopener nofollow"&gt;Google
        Trends&lt;/a&gt;: You probably know this tool. Google Trends shows the popularity of a term among Google Searchers.
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://answerthepublic.com/" rel="noopener nofollow"&gt;Answer The Public&lt;/a&gt;: Another useful tool to research people's questions.
&lt;/p&gt;




&lt;h3&gt;Content Saving Tools&lt;/h3&gt;

&lt;p&gt;You need comprehensive documents and knowledge management tools to get the most out of your content research. You can
    clip, capture and annotate the content with these content creation tools. There are a bunch of apps that you can use
    for this purpose. Generally, they have browser extensions.&lt;/p&gt;



&lt;p&gt;Annotating is an excellent way to get your creative juices flowing. It gives you the ability to take notes on what
    you're reading or thinking, making it easy to revise later. &lt;/p&gt;



&lt;p&gt;I love using various types of notes apps or knowledge-saving tools and would recommend them to anyone looking to
    improve their own writing skills.&lt;/p&gt;



&lt;p&gt;These content creation tools allow anyone to collect ideas, quotes, share knowledge and other content in an easy and
    intuitive way. These content saving/management tools save you a lot of time looking for relevant information while
    creating your blog posts and videos.&lt;/p&gt;


&lt;ul&gt;
    &lt;li&gt;
&lt;a href="https://getpolarized.io/" rel="noreferrer noopener nofollow"&gt;Polar&lt;/a&gt;: You can manage
        and save your content from PDFs, EPUBs, and web pages in one place. It allows tagging, shows reading progress,
        and shows detailed document information.&lt;/li&gt;



    &lt;li&gt;
&lt;a href="https://www.weavatools.com/" rel="noreferrer noopener nofollow"&gt;Weava&lt;/a&gt;: You can
        highlight, annotate and organize the content in one place.&lt;/li&gt;



    &lt;li&gt;
&lt;a href="https://getmemex.com/" rel="noreferrer noopener nofollow"&gt;Memex&lt;/a&gt;: It is actually a
        bookmark manager. It is an open-source tool that allows you to annotate, organize and share.&lt;/li&gt;



    &lt;li&gt;
&lt;a href="https://justclip.co/" rel="noreferrer noopener nofollow"&gt;JustClip&lt;/a&gt;: A tool for
        collecting content that is suitable for individuals and teams. You can capture information and annotate content.
        You can easily build your knowledge connections and stay organized.&lt;/li&gt;



    &lt;li&gt;
&lt;a href="https://wakelet.com/" rel="noreferrer noopener nofollow"&gt;Wakelet&lt;/a&gt;: Wakelet is a tool
        for collecting and curating content. It is particularly used by the education industry. It is one of my favorite
        tools. You can create a &lt;a href="https://wakelet.com/@webmeister" rel="noopener"&gt;Wakelet profile&lt;/a&gt; and publish your curated lists in various formats.&lt;/li&gt;



    &lt;li&gt;
&lt;a href="https://getliner.com/en" rel="noopener nofollow"&gt;Liner&lt;/a&gt;: Liner is another productivity tool that helps you find and
        learn reliable information faster. You can highlight web pages and PDF files. It suggests trusted content from
        other Liner users. &lt;/li&gt;



    &lt;li&gt;
&lt;a href="https://obsidian.md/" rel="noopener nofollow"&gt;Obsidian MD&lt;/a&gt;: It is also my
        favorite tool that I dumped every piece of note into it. It is offline-first meaning that your notes stay on
        your PC. It is a markdown editor and has a wiki-style backlink feature with built-in graph view options. There
        are other popular options for an alternative to Obsidian are &lt;a href="https://www.notion.so/" rel="noopener nofollow"&gt;Notion&lt;/a&gt;, &lt;a href="https://nimbusweb.me/" rel="noopener nofollow"&gt;Nimbus Note&lt;/a&gt;, and &lt;a href="https://roamresearch.com/" rel="noopener nofollow"&gt;Roam Research&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;









&lt;h3 id="readability-tools"&gt;Readability Score Tools&lt;/h3&gt;



&lt;p&gt;&lt;strong&gt;Readability&lt;/strong&gt; is the ease with which a reader can understand a written
    text. &lt;/p&gt;



&lt;p&gt;It is an essential parameter for the user as well as for SEO. &lt;/p&gt;



&lt;p&gt;It is also known that artificial intelligence, and thus the Google crawler, is better at distinguishing short
    sentences than long ones. &lt;/p&gt;



&lt;p&gt;As a result, short sentences are easier to understand for both the reader and the Googlebot. Of course, you have to
    consider your readers.&lt;/p&gt;



&lt;p&gt;There will be no problem for them in writing complex articles on relatively tricky subjects if your readers are
    experts on your case. &lt;/p&gt;



&lt;p&gt;The content creation software in this section are applications that measure at least which age group can understand
    your articles. It is called &lt;em&gt;the readability score&lt;/em&gt;. &lt;/p&gt;



&lt;p&gt;There are some popular formulas and metrics calculating the readability score of your text. &lt;/p&gt;



&lt;p&gt;However, creating short and concise content can be hard to create. With the tools below, you can make your copy more
    readable and quickly shorten sentences. Run your written copy through the web app and you'll see the opportunities
    to make it better for your readers in seconds. &lt;/p&gt;



&lt;p&gt;It should also be noted that most of them are either free or freemium with a generous plan.&lt;/p&gt;


&lt;ul&gt;
    &lt;li&gt;
&lt;a href="https://hemingwayapp.com/" rel="noopener nofollow"&gt;Hemingway Editor&lt;/a&gt;: It is one of the most well-known content
        readability
        improvers. This popular readability tool judges the “grade level” of your text using the &lt;a href="https://en.wikipedia.org/wiki/Automated_readability_index" rel="noopener"&gt;Automated Readability Index&lt;/a&gt;. &lt;/li&gt;



    &lt;li&gt;
&lt;a href="https://typewipe.com/app" rel="noopener nofollow"&gt;Typewipe&lt;/a&gt;: This helpful
        content creation program offers both readability analysis and helps you improve your content according to your
        keyword.&lt;/li&gt;



    &lt;li&gt;
&lt;a href="https://www.twinword.com/writer/" rel="noopener nofollow"&gt;Twinword
            Writer&lt;/a&gt;:
        Twinword Writer is a tool that analyzes the tone of your content. It highlights the words that have negative and
        positive impacts on the tone of your text.&lt;/li&gt;
&lt;/ul&gt;








&lt;h3 id="grammar-tools"&gt;Grammar and Punctuation Checker Tools&lt;/h3&gt;



&lt;p&gt;The content creation tools in this section are handy for creating content in English. Those can be classified as
    &lt;strong&gt;grammar correction and punctuation checker tools&lt;/strong&gt;. Using these tools will help you write better
    content about topics that matter to you.
&lt;/p&gt;

&lt;p&gt;The tools I recommend are these awesome &lt;em&gt;grammar and punctuation checker&lt;/em&gt; tools that will help you finish your
    sentences, spot typos, and get the words right no matter how much time you have.&lt;/p&gt;

&lt;p&gt;The most popular grammar tool in this list is Grammarly. It offers a good user experience along with rich
    suggestions. Here are Grammarly and its alternatives.&lt;/p&gt;

&lt;ul&gt;
    &lt;li&gt;
&lt;a href="https://app.grammarly.com/" rel="noopener nofollow"&gt;Grammarly&lt;/a&gt;: It is one
        of
        the most well-known grammar tools. Grammarly is the best tool for this task. It has a really intuitive interface
        and
        a lot of fun features. It has a desktop and mobile application. Those apps exist both for macOS and
        Windows.&lt;a href="https://linguix.com/" rel="noopener nofollow"&gt;Linguix&lt;/a&gt;:
        Another Grammarly
        alternative, this English content creation assistant also stands out with its paraphrase feature.&lt;a href="https://prowritingaid.com/" rel="noopener nofollow"&gt;ProWritingAid&lt;/a&gt;:
        Although
        this content creation software does not offer as good a user experience as Grammarly and Linguix, it has much
        more
        advanced features.&lt;/li&gt;



    &lt;li&gt;
&lt;a href="https://www.atomicreach.com/atomic-ai-editor" rel="noopener nofollow"&gt;Atomic
            Editor&lt;/a&gt;: It is an AI-assisted editor that boosts your writing productivity.&lt;/li&gt;



    &lt;li&gt;
&lt;a href="https://www.slickwrite.com/" rel="noopener nofollow"&gt;SlickWrite&lt;/a&gt;: A tool
        that
        shows grammatical corrections and useful statistics. &lt;/li&gt;



    &lt;li&gt;
&lt;a href="https://ludwig.guru/" rel="noopener nofollow"&gt;Ludwig&lt;/a&gt;: A search engine for
        sentences.
        You can find your sentence in the best contexts, get definitions, synonyms, and examples. Also, you
        can
        paraphrase your sentence.&lt;/li&gt;



    &lt;li&gt;
&lt;a href="https://www.gingersoftware.com/" rel="noreferrer noopener nofollow"&gt;Ginger&lt;/a&gt;: Another
        Grammarly alternative tool that helps you correct grammar and punctuation.&lt;/li&gt;

&lt;/ul&gt;

&lt;h3 id="seo-tools"&gt;Search Engine Optimized Content Creation Tools&lt;/h3&gt;

&lt;ul&gt;
    &lt;li&gt;It is not easy to find both budget-friendly and skilled tools. Of course, I'm speaking particularly about
        marketing
        tools. Anyway, I'll share my relatively budget-friendly and search-engine-optimized content creation tools.
    &lt;/li&gt;



    &lt;li&gt;
&lt;a href="https://copywritely.com/" rel="noopener nofollow"&gt;SEO Content Analyzer&lt;/a&gt;:
        It
        has a bunch of tools for copywriting.&lt;/li&gt;



    &lt;li&gt;
&lt;a href="https://www.frase.io/" rel="noreferrer noopener nofollow"&gt;Frase&lt;/a&gt;: This is one of my
        favorite tools. An AI-based content creation tool. Moreover, advanced paraphrasing and question-based features.
    &lt;/li&gt;



    &lt;li&gt;
&lt;a href="https://www.canirank.com/" rel="noopener nofollow"&gt;CanIRank&lt;/a&gt;: Another
        favorite
        content copywriting tool that optimizes your content for search engines.&lt;/li&gt;



    &lt;li&gt;
&lt;a href="https://inkforall.com/" rel="noopener nofollow"&gt;Ink&lt;/a&gt;: Another SEO web
        content
        writing editing tool that you can download.&lt;/li&gt;

&lt;/ul&gt;




&lt;h3&gt;Visual Content Creation Tools&lt;/h3&gt;

&lt;p&gt;I don't remember who said it but it is true: "If content is king, then design is queen". Whether you are creating
    visual content or written content, visually appealing content is preferable to the other. You can easily find the
    visual content creation tools you need such as:&lt;/p&gt;

&lt;ul&gt;
    &lt;li&gt;Image Creation Tools/ Social Media Tools&lt;/li&gt;
    &lt;li&gt;Video Creation Tools &lt;/li&gt;
    &lt;li&gt;Infographic Creation Tools &lt;/li&gt;
    &lt;li&gt;Presentation Creation Tools&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you are more interested in visual design resources, you can check my other curated list: &lt;a href="https://www.cbsofyalioglu.com/design/free-design-resources/"&gt;Free design
        resources and graphic design tools&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Let's start our list of digital content creation with some tools focused on creating and editing visual content
    elements. &lt;/p&gt;

&lt;h4&gt;Image creation/editing tools &lt;/h4&gt;

&lt;p&gt;There are a lot of free image editing tools out there. Some offer advanced editing features and others are more
    casual apps. But if you're looking for a basic set of image editing tools that can help you get your job done, then
    here are some of our favorites.&lt;/p&gt;

&lt;ul&gt;
    &lt;li&gt;
&lt;a href="https://figma.com/" rel="noopener nofollow"&gt;Figma&lt;/a&gt;: Oh great Figma. It is
        one
        of the greatest apps of the decade.&lt;/li&gt;



    &lt;li&gt;
&lt;a href="https://www.canva.com/" rel="noopener nofollow"&gt;Canva&lt;/a&gt;: Canva is the most popular and the most used image creation
        tool.
        It has both free and premium plans. If you need quick visual content for your social media marketing operations,
        Canva is one of the best design tools. &lt;/li&gt;



    &lt;li&gt;There are also many image tools similar to Canva. Those are &lt;a href="https://crello.com/" rel="noopener nofollow"&gt;Crello&lt;/a&gt;, &lt;a href="https://www.artify.co/" rel="noopener nofollow"&gt;Artify&lt;/a&gt;, &lt;a href="https://projector.com/" rel="noopener nofollow"&gt;Projector&lt;/a&gt;, &lt;a href="https://www.taler.app/" rel="noopener nofollow"&gt;Taler&lt;/a&gt;, &lt;a href="https://designs.ai/en" rel="noopener nofollow"&gt;Design AI&lt;/a&gt;, etc.&lt;/li&gt;



    &lt;li&gt;
&lt;a href="https://www.photopea.com/" rel="noopener nofollow"&gt;Photopea&lt;/a&gt; is one of my
        favorite tools. It is a minified version of photoshop and it is working on a browser. &lt;/li&gt;



    &lt;li&gt;
&lt;a href="https://www.remove.bg/" rel="noopener nofollow"&gt;Remove.bg&lt;/a&gt;: A well-known
        background remover. You can extract people from an image. &lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Presentation tools&lt;/h4&gt;

&lt;p&gt;Presentations are the core engine of any persuasive speaker. They establish credibility, inspire others and move
    audiences emotionally. That's why the first step in any persuasive presentation is to select the right tools.&lt;/p&gt;

&lt;p&gt;Presentations are a fundamental tool for any professional, whether they want to build a reputation or just sell
    products. Here are the advanced tools for presentation.&lt;/p&gt;

&lt;ul&gt;
    &lt;li&gt;
&lt;a href="https://pitch.com/" rel="noopener nofollow"&gt;Pitch&lt;/a&gt;: This presentation
        creation
        tool allows you to collaboratively create your design asset.&lt;/li&gt;



    &lt;li&gt;
&lt;a href="https://ludus.one/" rel="noopener nofollow"&gt;Ludus&lt;/a&gt;: It is a collaborative
        presentation tool for creative teams&lt;/li&gt;



    &lt;li&gt;
&lt;a href="https://ludus.one/" rel="noopener nofollow"&gt;Premast Plus&lt;/a&gt;: You can use
        its
        professional templates to design better presentations and with a faster way. Even if you don't have any design
        experience.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Infographic tools&lt;/h4&gt;

&lt;p&gt;A well-designed infographic can go a long way towards convincing people to click through from a website or social
    media channel. Infographics are powerful, flexible, and can be used to achieve a wide range of results. &lt;/p&gt;

&lt;p&gt;They’re an effective tool for getting immediate attention – without creating an overwhelming feeling. If it is done
    correctly, infographics can be a backlink magnet.&lt;/p&gt;

&lt;ul&gt;
    &lt;li&gt;
&lt;a href="https://www.visme.co/" rel="noopener nofollow"&gt;Visme&lt;/a&gt;: Visme is an online
        tool
        that allows you to easily create infographics. Those are very useful for visual explanations and building
        backlinks.
    &lt;/li&gt;



    &lt;li&gt;
&lt;a href="https://infogram.com/" rel="noopener nofollow"&gt;Infogram&lt;/a&gt;: Infogram is a visual creation tool that allows you to
        create
        infographics and visual stories with data.&lt;/li&gt;



    &lt;li&gt;
&lt;a href="https://piktochart.com/" rel="noopener nofollow"&gt;Piktochart&lt;/a&gt;: Piktochart
        is
        another super functional tool for the visual content creation process. It helps you to make gorgeous
        infographics,
        presentations, and reports. &lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Video creation tools&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://runwayml.com/sequel/" rel="noopener nofollow"&gt;Runway ML&lt;/a&gt;: This tool is
    literally amazing. However, it has a steep learning curve because Runway has many features that use machine
    learning.&lt;/p&gt;





&lt;h3&gt;Miscellaneous Tools&lt;/h3&gt;

&lt;ul&gt;
    &lt;li&gt;
&lt;a href="https://otter.ai/" rel="noopener nofollow"&gt;Otter&lt;/a&gt;: A tool for generating notes from audio records. &lt;/li&gt;



    &lt;li&gt;
&lt;a href="https://giphy.com/" rel="noreferrer noopener nofollow"&gt;Giphy&lt;/a&gt;: Who doesn't love
        GIFs. You
        can search and use millions of GIFs.&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>tooling</category>
      <category>design</category>
      <category>webdev</category>
      <category>productivity</category>
    </item>
    <item>
      <title>The frontend Landscape – Different Architectures</title>
      <author>Prashant Yadav</author>
      <pubDate>Sun, 19 Sep 2021 18:14:23 +0000</pubDate>
      <link>https://dev.to/learnersbucket/the-frontend-landscape-different-architectures-m2j</link>
      <guid>https://dev.to/learnersbucket/the-frontend-landscape-different-architectures-m2j</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Visit &lt;a href="https://learnersbucket.com"&gt;learnersbucket.com&lt;/a&gt; If you are preparing for your JavaScript interview. You will find DSA, System Design and JavaScript Questions.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;p&gt;Web development (Frontend) has come a long way from its inception. There was a time when static websites were designed using tables for layouts and some styles around it which were only built for desktops.&lt;/p&gt;

&lt;p&gt;But today web apps can be created with complex user interfaces and for cross devices. SAAS which are built as web applications allow us to stream movies and music on demand, order pizza, handle bank processes, even book a cab, and do more and more things which makes our life easier.&lt;/p&gt;

&lt;p&gt;Over time to create apps which provide so much capabilities, security, flexibility, and also are manageable and scalable, organizations experimented with multiple architectures.&lt;/p&gt;

&lt;p&gt;As a developer, architect, or tech lead, when we start a fresh project we need to decide which architecture we will be following. There are an array of options to choose from, but not all of them are fit for every job. We need to understand the challenges we will face along the way to make the right decision for our projects.&lt;/p&gt;

&lt;p&gt;Let us explore the current architectures which are available to us for the frontend development.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#server-side-application-or-multi-page-application"&gt;
  &lt;/a&gt;
  Server Side Application or Multi Page Application.
&lt;/h2&gt;

&lt;p&gt;Server side rendered websites were a thing back when they had not become the web apps. All they did was display text and images and very minimal interactivity.&lt;/p&gt;

&lt;p&gt;These websites were built with server-side rendering which means the HTML was generated on the server along with all the data and it is returned to the browser and then the browser used to render it.&lt;/p&gt;

&lt;p&gt;When a page refreshes or the user navigates to a different page, the servers used to send new HTML. This will be repeated every time if your browser does not have the cached version of that page.&lt;/p&gt;

&lt;p&gt;As each time when you make the request to the server, the server regenerates the whole HTML even if we are only expecting for minor changes, this hampers the speed of the website.&lt;/p&gt;

&lt;p&gt;Though the speed of the website varies on many factors like your internet speed, location of the server, number of users who are trying to access the site, etc.&lt;/p&gt;

&lt;p&gt;For small websites these issues are negligible but for modern websites which have more than thousands of lines of code as well as complex logics will take more time for processing. Now imagine when you browse through the website and you have to keep waiting for each web page which you visit.&lt;/p&gt;

&lt;p&gt;But the good thing about server-side rendering is that it is great for SEO. Your content is present before you get it, so search engines are able to index it and crawl it just fine.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#single-page-application-client-side-rendering"&gt;
  &lt;/a&gt;
  Single Page Application (Client – Side Rendering)
&lt;/h2&gt;

&lt;p&gt;In the current time, SPAs are the most used implementations. In single page applications client-side rendering is used. The browser loads the initial page from the server, along with the scripts (frameworks, libraries, app code) and stylesheets required for the whole app.&lt;/p&gt;

&lt;p&gt;When the user navigates to other pages, a page refresh is not triggered. The URL of the page is updated via the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/History_API"&gt;HTML5 History API&lt;/a&gt;. New data required for the new page, usually in JSON format, is retrieved by the browser via &lt;a href="https://developer.mozilla.org/en-US/docs/Web/Guide/AJAX/Getting_Started"&gt;AJAX&lt;/a&gt; requests to the server. The SPA then dynamically updates the page with the data via JavaScript, which it has already downloaded in the initial page load. This model is like how native mobile apps work.&lt;/p&gt;

&lt;p&gt;Using SPAs has many advantages like the whole application code is downloaded just once on initial load and then the entire application logic is available throughout the user session.&lt;/p&gt;

&lt;p&gt;As the SPAs only deal with the client side logic, it can be developed independently and to get the data it communicates with APIs by exchanging data with the persistent layer (backend or server side).&lt;/p&gt;

&lt;p&gt;The client side and server side are decoupled, which means that we can independently develop new clients for different platforms (e.g. mobile, chatbots, smart watches) without having to modify the server code. The client can also be developed using a new tech stack.&lt;/p&gt;

&lt;p&gt;As we don’t have to repeatedly fetch the same resources again and again, we have to make fewer HTTP requests, also the payloads size is smaller which is faster to process.&lt;/p&gt;

&lt;p&gt;Because both client and server side are decoupled which means they are smaller in size and faster to download, interpret and process.&lt;/p&gt;

&lt;p&gt;All these features enhance the user experience and give an expression of what we usually have when we interact with a native application for mobile devices or desktop.&lt;/p&gt;

&lt;p&gt;SPAs also allow us to decide how we are going to split the application logic between server and client. We can have either “thick-client” and “fat-server” or “fat-client” and “thick-server” depending upon which type of problem we are addressing.&lt;/p&gt;

&lt;p&gt;Majorly “thick-client” and “fat-server” is used as by keeping all the logic on the server we can use that across multiple clients, that way if we update the logic on one platform it will be available on each client.&lt;/p&gt;

&lt;p&gt;The bad thing about this is as the majority of the resources are fetched when the web app loads for the first time it can hamper the initial load time of the application majorly on devices with less processing power and slower networks.&lt;/p&gt;

&lt;p&gt;There’s an additional step to be done on your server which is to configure it to route all requests to a single entry point and allow client-side routing to take over from there. All the client side routing is managed internally using HTML5 history API.&lt;/p&gt;

&lt;p&gt;As the pages in the SPAs are dynamically generated on the run-time, another disadvantage of using SPAs relates to search engine optimization (SEO). When a crawler tries to index your website, it won’t have an easy job indexing all the contents served by an SPA unless we prepare alternative ways for fetching it.&lt;/p&gt;

&lt;p&gt;Another disadvantage of using SPAs is on the organizational side. When the SPA is a large application being developed and maintained by coalted teams working on the same codebase, could end up with a mix of approaches and decisions that could confuse team members. &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#isomorphic-applications-hybrid-approach"&gt;
  &lt;/a&gt;
  Isomorphic applications (Hybrid approach)
&lt;/h2&gt;

&lt;p&gt;With the above two approaches we learned that server-side rendering can be used to solve the SEO related issues and client-side rendering can be used for performance optimization. What if we could use both of them together and use the best of both to create faster web applications which are also very well SEO optimized.&lt;/p&gt;

&lt;p&gt;Isomorphic or universal applications are web applications where the code between server and client is shared and can run in both contexts.&lt;/p&gt;

&lt;p&gt;These web applications share code between server and client.When you visit the web app for the first time the application is rendered on the server side using server side rendering techniques with Nodejs and then it is sent to the browser and displayed to the user, here after whenever user navigates the web apps the pages are rendered on client-side with JavaScript using SPA techniques.The content is updated by consuming APIs and fetching data from them.&lt;/p&gt;

&lt;p&gt;The complexity of this approach is majorly among the state management. One way to solve this is to create and save the state on the server side and then provide this state to the browser. The browser uses this state to bootstrap the SPA, without this the user must wait for the server side page to render and wait more for the complete re-render process in the browser.&lt;/p&gt;

&lt;p&gt;To make the most out of this approach, we can render the page with bare minimum things which is required to create the skeleton of the page such as inline CSS and few HTML content and minimum JavaScript so that browser can load it extremely fast and there after update the content as per requirement on the client side using JavaScript.&lt;/p&gt;

&lt;p&gt;With these we can also solve the routing issue, you can either render the pages complete on the server-side or use the hybrid approach. Use the server-side rendering for initial view and then load an SPA, where the server will do the macro routing that serves different SPAs, each with its own routing system to navigate between views.&lt;/p&gt;

&lt;p&gt;Isomorphic applications can suffer from the scalability problems if the web app is visited by a large number of users. Having a right caching in place could solve this problem as pages are rendered on server-side.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#micro-frontend-architecture"&gt;
  &lt;/a&gt;
  Micro Frontend Architecture
&lt;/h2&gt;

&lt;p&gt;Micro-Frontend is a fairly new and emerging architecture which is inspired by the micro-services architecture of backend development.&lt;/p&gt;

&lt;p&gt;When multiple teams are involved in the development of a single application, it becomes difficult to manage the code base and applications itself as multiple people will be touching the same code base.&lt;/p&gt;

&lt;p&gt;This approach tends to solve this problem by splitting the application in different parts depending on the requirement and each of them would be developed independently which would be shipped as a single application. The main idea behind this is to break down a monolithic codebase into smaller parts, allowing to spread out the work among various teams, whether collocated or distributed.&lt;/p&gt;

&lt;p&gt;There are different approaches for architecturing a micro-frontends application. Certain architectural decisions have to be made upfront because they will cave the road for future decisions. The decision majorly covers four key areas.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Defining different micro-frontends.&lt;/li&gt;
&lt;li&gt;Composing micro-frontends.&lt;/li&gt;
&lt;li&gt;Routing micro-frontends.&lt;/li&gt;
&lt;li&gt;Communicating between micro-frontends.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can decide multiple micro-frontends for the same view or having one micro-frontend per view and based on this we can split the application.&lt;/p&gt;

&lt;p&gt;The application can be split horizontally or vertically.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ikw2U2zz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/learnersbucket.com/wp-content/uploads/2021/09/Microservices-Architecture1.png%3Fw%3D768%26ssl%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ikw2U2zz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/learnersbucket.com/wp-content/uploads/2021/09/Microservices-Architecture1.png%3Fw%3D768%26ssl%3D1" alt="Microservices Architecture"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the horizontal split we split the views of the pages into multiple micro-frontends and different teams will be responsible for the development of these views. This approach provides great flexibility as certain micro-frontends could be reused across different views, but it also needs more discipline and governance to make sure we don’t end up with large amounts of micro-frontends.&lt;/p&gt;

&lt;p&gt;In the vertical split we split the pages or module completely. For example different teams will be responsible for the development of different modules like authentication, streaming services, search, etc.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#jamstack"&gt;
  &lt;/a&gt;
  JAMSTack
&lt;/h2&gt;

&lt;p&gt;Nowadays there’s another new frontend architecture which is enjoying its success called JAMStack (JavaScript, APIs, Markup).&lt;/p&gt;

&lt;p&gt;Being a modern architecture JAMSTack helps to create fast and secure sites and dynamic apis with JavaScript/APIs and pre-rendered markup, served without web servers.&lt;/p&gt;

&lt;p&gt;In fact the final output is a static artifact composed of HTML, CSS and JavaScript, basically the holy trinity of frontend development which can be served directly using CDN as it doesn’t require any server side technology to work. The most simplest way of serving a JAMStack application is using &lt;a href="https://pages.github.com/"&gt;Github pages&lt;/a&gt; for hosting the final result.&lt;/p&gt;

&lt;p&gt;The primary advantages of these architectures are better performances, cheaper infrastructure and maintenance considering they can be served directly by a CDN, great scalability because static files are served, higher security due to decrease of attack surface and easy integration with headless CMS.&lt;/p&gt;

&lt;p&gt;JAMStack is a great companion for many websites we have to create especially considering the frictionless developer experience.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>react</category>
    </item>
    <item>
      <title>✅ Tell Me About A Time When The Project Was Ambiguous | Facebook Behavioral Interview (Jedi) Series 🔥</title>
      <author>The Interview Sage</author>
      <pubDate>Sun, 19 Sep 2021 18:00:13 +0000</pubDate>
      <link>https://dev.to/theinterviewsage/tell-me-about-a-time-when-the-project-was-ambiguous-facebook-behavioral-interview-jedi-series-bk1</link>
      <guid>https://dev.to/theinterviewsage/tell-me-about-a-time-when-the-project-was-ambiguous-facebook-behavioral-interview-jedi-series-bk1</guid>
      <description>&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/dh3dtK_FG1o"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Before we discuss this question, let us recap what the Behavioral Interview Round at Facebook is.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Behavioral Interview Round is also known as the Jedi Interview round at Facebook.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It is about you and your history, your résumé, and your motivation.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The purpose of this interview is to assess whether the candidate will thrive in Facebook's peer-to-peer, minimal process, and unstructured engineering organization.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For Software Engineers, the behavioral interview is actually part behavioral and part coding. The coding part is a shorter version of the usual coding interviews and is included to supplement the other two coding interviews to get an additional coding signal.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#tips-amp-tricks-to-effectively-prepare-for-behavioral-interviews"&gt;
  &lt;/a&gt;
  Tips &amp;amp; Tricks to effectively prepare for Behavioral Interviews
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_kgnGQmN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4y9t832s7yc0j58aycqb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_kgnGQmN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4y9t832s7yc0j58aycqb.png" alt="Tips &amp;amp; Tricks to effectively prepare for Behavioral Interviews" title="Behavioral Interview Tips &amp;amp; Tricks"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Know yourself! Take the time to review your résumé, as the interviewer will almost certainly ask about key events in your work history.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Have concrete examples or anecdotes to support each of the questions.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Familiarize yourself with Facebook's mission statement and its five core values:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Be Bold&lt;/li&gt;
&lt;li&gt;Focus on Impact&lt;/li&gt;
&lt;li&gt;Move Fast&lt;/li&gt;
&lt;li&gt;Be Open&lt;/li&gt;
&lt;li&gt;Build Social Value&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Be yourself! Be open and honest about your successes and failures.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Be humble and focus on teamwork, leadership, and mentorship qualities.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now, let us review how to effectively answer this question.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#question-tell-me-about-a-time-when-the-project-was-ambiguous"&gt;
  &lt;/a&gt;
  Question: Tell Me About A Time When The Project Was Ambiguous
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uKTQTY81--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wcrphex5gj8rjl7g9lcn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uKTQTY81--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wcrphex5gj8rjl7g9lcn.png" alt="Tell Me About A Time When The Project Was Ambiguous" title="Tell Me About A Time When The Project Was Ambiguous"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&lt;a href="https://www.youtube.com/watch?v=Hr5UJnKxwyg&amp;amp;t=874s"&gt;Video Explanation&lt;/a&gt; with Evaluation Criteria, Response Framework, Tips &amp;amp; Tricks, Sample Answer (Example), and a Special Case of "Never Worked On Ambiguous Projects".&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;"Tell me about a time when the project was ambiguous" is one of the tough questions asked in the behavioral interview.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#evaluation-criteria"&gt;
  &lt;/a&gt;
  Evaluation Criteria
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--srzZ4LbR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s2m25amm2tnkktu7dg6h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--srzZ4LbR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s2m25amm2tnkktu7dg6h.png" alt="Evaluation Criteria for Tell Me About A Time When The Project Was Ambiguous" title="Evaluation Criteria for 'Tell Me About A Time When The Project Was Ambiguous'"&gt;&lt;/a&gt; &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5kwzQ0S4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g60o0njhhtk2w9tv0gwg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5kwzQ0S4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g60o0njhhtk2w9tv0gwg.png" alt="Evaluation Criteria for Tell Me About A Time When The Project Was Ambiguous" title="Evaluation Criteria for 'Tell Me About A Time When The Project Was Ambiguous'"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In everyone's career journey, they face a challenging situation where they need to work on a task that is ambiguous, uncertain, and does not have a clear path forward. By this question, the interviewer's goal is not to trick you but to assess how well you can adapt and perform in challenging situations and unstructured environments.&lt;/p&gt;

&lt;p&gt;They are trying to understand your ability to be:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Proactive,&lt;/li&gt;
&lt;li&gt;Stay calm,&lt;/li&gt;
&lt;li&gt;Exercise judgment, and&lt;/li&gt;
&lt;li&gt;Act responsibly in such unexpected scenarios.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;They are assessing your perseverance to explore the ambiguity and learn new things, despite the challenges. They are also evaluating your:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Communication,&lt;/li&gt;
&lt;li&gt;Time management,&lt;/li&gt;
&lt;li&gt;Problem-solving, and&lt;/li&gt;
&lt;li&gt;Decision-making skills.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Employers want to know if you can handle competing priorities, shift gears when needed, and understand the implications of missing deadlines. They are looking to see if your coworkers can rely on you to get the work done.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#response-framework"&gt;
  &lt;/a&gt;
  Response Framework
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9IynzuGe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bamf8rata73x76phpst0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9IynzuGe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bamf8rata73x76phpst0.png" alt="Response Framework for Tell Me About A Time When The Project Was Ambiguous" title="Response Framework for 'Tell Me About A Time When The Project Was Ambiguous'"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Our advice is to pick a compelling and honest story that can articulate a real-life experience where you had to work on an ambiguous task at your workplace.&lt;/p&gt;

&lt;p&gt;Describe the situation, the events that occurred, and explain the ambiguity involved in the task at hand. For example, it may be one of the following scenarios:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Your manager or director may ask you to lead the development of a vague feature request.&lt;/li&gt;
&lt;li&gt;You may discover a potential area of improvement in the current architecture, which may be ambiguous, to begin with.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Explain your strategy to the interviewer on how you proactively gathered the requirements and use cases to bring more clarity to the project. For example:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Conducting customer interviews or user research to gather data to make an informed decision.&lt;/li&gt;
&lt;li&gt;Exploring open-source projects and reading research publications to understand the existing technologies and how you can leverage them to architect your new service.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Also, elaborate on the quick proof of concept or prototype that you implemented to validate your solution. Show that you proactively communicated your findings and key decisions to all the stakeholders.&lt;/p&gt;

&lt;p&gt;Finally, express how your strategy helped define a plan of action and complete the required deliverables within the deadline. Also, let the interviewer know how the outcome and the impact were beneficial to the company or team. Explain the learnings you took from this challenging situation and how they helped you become a better engineer.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tips-amp-tricks"&gt;
  &lt;/a&gt;
  Tips &amp;amp; Tricks
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xAnkqN-B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i0wdb9pnlzq2unrwarf5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xAnkqN-B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i0wdb9pnlzq2unrwarf5.png" alt="Tips and Tricks for Tell Me About A Time When The Project Was Ambiguous" title="Tips &amp;amp; Tricks for 'Tell Me About A Time When The Project Was Ambiguous'"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here are some tips and tricks that will help you effectively prepare this question for the behavioral interview.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Use a compelling story that is honest and believable.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It is most desirable to describe a real-life example to the interviewer to show that you have actually faced such a situation in your career and not just talk about a generic strategy.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Always remain calm, composed, and confident while answering this question.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Do not sugarcoat your answer with irrelevant details.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Spend more time talking about the actions you took to understand the ambiguity of the project.&lt;/li&gt;
&lt;li&gt;For example, focus on the strategy you used to gather the data to bring clarity to the project.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Show that you proactively communicated your findings and key decisions to all the stakeholders.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The biggest way to mess up answering this question is by simply saying that you have never faced a challenging situation at your workplace where the task at hand was ambiguous.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Instead, explain your strategies for dealing with such situations in your day-to-day life.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Focus on the business impact that you had on your company or team.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Prepare the response for this question beforehand, as it will be tough to structure your answer on the spot during the interview.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Do not memorize the answer as it should come naturally, and you should sound confident to the interviewer.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#sample-answer-example"&gt;
  &lt;/a&gt;
  Sample Answer (Example)
&lt;/h2&gt;

&lt;p&gt;Here is Ross. He is currently working as a Staff Software Engineer at a major technology company. He is interviewing for the role of Staff Software Engineer at Facebook.&lt;/p&gt;

&lt;p&gt;🎧 Listen to his response to this question in this &lt;a href="https://www.youtube.com/watch?v=Hr5UJnKxwyg&amp;amp;t=1127s"&gt;YouTube Video&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#special-case-never-worked-on-ambiguous-projects"&gt;
  &lt;/a&gt;
  Special Case: Never Worked On Ambiguous Projects
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--b5oFoqXD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hpaxkm70pqlss6ftd9rg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b5oFoqXD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hpaxkm70pqlss6ftd9rg.png" alt="Special Case: Never Worked On Ambiguous Projects" title="Special Case: Never Worked On Ambiguous Projects"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It may be the case that you have actually never faced a challenging situation at your workplace where the task at hand was ambiguous. New Grads and entry-level software engineers usually fall under this category.&lt;/p&gt;

&lt;p&gt;If you are in such a situation, do not end your answer by simply saying that you have never faced an ambiguous scenario. Instead, try to use a real-life experience from your college or everyday life. For example:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You may need to gather data or do a quick proof of concept to validate your idea for a course project or thesis.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This will help the interviewer evaluate you on the following attributes mentioned earlier:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;How well you adapt and perform in obscure situations,&lt;/li&gt;
&lt;li&gt;Ability to be proactive and resourceful,&lt;/li&gt;
&lt;li&gt;Exercise judgment and act responsibly under pressure,&lt;/li&gt;
&lt;li&gt;Perseverance to explore the ambiguity and learn new things,&lt;/li&gt;
&lt;li&gt;Communication skills, and&lt;/li&gt;
&lt;li&gt;Problem solving and decision-making skills.&lt;/li&gt;
&lt;/ol&gt;




&lt;h1&gt;
  &lt;a href="#preparation-material"&gt;
  &lt;/a&gt;
  Preparation Material
&lt;/h1&gt;

&lt;p&gt;Learn more about the Evaluation Criteria, Response Framework, Tips &amp;amp; Tricks, and Sample Answers (Examples) to effectively prepare and answer these top questions asked in the Behavioral Interviews at Facebook. Certain special cases are also discussed which are usually faced by the candidates during these interviews.&lt;/p&gt;

&lt;p&gt;⬇️ &lt;a href="https://www.buymeacoffee.com/interviewsage/e/40678"&gt;Detailed Notes on Top Facebook Behavioral Interview Questions - Part 2&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#cracking-the-facebook-behavioral-interview"&gt;
  &lt;/a&gt;
  Cracking the Facebook Behavioral Interview
&lt;/h1&gt;

&lt;p&gt;If you have not read our first article on Top Facebook Behavioral Interview Questions, we recommend reading it by clicking the below link:&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/theinterviewsage" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xMM4L2Ac--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--B2cc8AK0--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/553012/244b250a-5230-4388-84d4-0c1d1ff70fb9.png" alt="theinterviewsage"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/theinterviewsage/top-facebook-behavioral-interview-questions-part-1-2a0o" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;✅ Top Facebook Behavioral Interview Questions (Part 1) | Facebook Jedi Interview Round 🔥&lt;/h2&gt;
      &lt;h3&gt;The Interview Sage ・ May 15 ・ 9 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#career&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;





&lt;h1&gt;
  &lt;a href="#cracking-the-facebook-system-design-interview"&gt;
  &lt;/a&gt;
  Cracking the Facebook System Design Interview
&lt;/h1&gt;

&lt;p&gt;In case if you have not read our series on Cracking the Facebook System Design Interview, we recommend reading it by clicking the below link:&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/theinterviewsage" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xMM4L2Ac--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--B2cc8AK0--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/553012/244b250a-5230-4388-84d4-0c1d1ff70fb9.png" alt="theinterviewsage"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/theinterviewsage/top-facebook-system-design-interview-questions-31np" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Top Facebook System Design Interview Questions (Part 1) | Facebook Pirate Interview Round&lt;/h2&gt;
      &lt;h3&gt;The Interview Sage ・ Jan 4 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#career&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;





&lt;h1&gt;
  &lt;a href="#useful-links"&gt;
  &lt;/a&gt;
  Useful Links
&lt;/h1&gt;

&lt;p&gt;✅ &lt;a href="https://bit.ly/Educative-Unlimited"&gt;Educative.io Unlimited Plan [💰 10% off for first 100 users]&lt;/a&gt;&lt;br&gt;
✅ &lt;a href="https://bit.ly/Try-Exponent"&gt;TryExponent.com Membership [💰 Limited Time 10% offer]&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;👩‍💻 &lt;a href="https://www.educative.io/courses/grokking-the-system-design-interview?aff=KQZl"&gt;Best System Design Interview Course&lt;/a&gt;&lt;br&gt;
🚀 &lt;a href="https://bit.ly/SWE-Interview-Course"&gt;Complete SWE Interview Course [💰 Limited Time 10% offer]&lt;/a&gt;&lt;br&gt;
🙋‍♀️ &lt;a href="https://www.buymeacoffee.com/interviewsage/e/30176"&gt;Behavioral Interview Guide [💰 Special Discount]&lt;/a&gt;&lt;br&gt;
📚 &lt;a href="https://smarturl.it/InterviewPrepBook"&gt;Recommended Interview Preparation Book (on Amazon)&lt;/a&gt;&lt;/p&gt;




&lt;center&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/InterviewSage"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--121vjxPu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/o2l00b1bt3nl8fdfb0nn.png" alt="Buy Me a Coffee"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;☕️ Buy us a Coffee at &lt;a href="https://www.buymeacoffee.com/InterviewSage"&gt;BuyMeACoffee.com/InterviewSage&lt;/a&gt;&lt;/p&gt;


&lt;/center&gt;




&lt;center&gt;

&lt;p&gt;To stay updated about new posts, Subscribe &amp;amp; Follow Us!&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;a href="https://www.youtube.com/TheInterviewSage?sub_confirmation=1"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CRCmz2gQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3uqifmelnuenxiik8pwx.png" alt="Subscribe to our YouTube channel" title="Subscribe to our YouTube channel"&gt;&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href="https://www.instagram.com/TheInterviewSage"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OADCpudp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ovhcxjpg0v5z2tidtydk.png" alt="Follow us on Instagram" title="Follow us on Instagram"&gt;&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href="https://www.facebook.com/TheInterviewSage"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zohyoISu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xyy3kyo44tmv645vvrqw.png" alt="Like &amp;amp; Follow us on Facebook" title="Like &amp;amp; Follow us on Facebook"&gt;&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href="http://twitter.com/intent/follow?source=followbutton&amp;amp;variant=1.0&amp;amp;screen_name=InterviewSage"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UoV_1sI3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xwwcu44k00a0a8hpfbmf.png" alt="Follow us on Twitter" title="Follow us on Twitter"&gt;&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href="https://www.linkedin.com/in/TheInterviewSage"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5QaEiEG6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zcrwzwc9tnv0q3zmkih8.png" alt="Follow &amp;amp; Connect on LinkedIn" title="Follow &amp;amp; Connect on LinkedIn"&gt;&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;


&lt;/center&gt;



&lt;blockquote&gt;
&lt;p&gt;This article is part of the series on Behavioral Interviews at Facebook. So, follow us to get notified when our next article in this series is published. Thanks for reading! &lt;/p&gt;
&lt;div class="ltag__user ltag__user__id__553012"&gt;
  
    .ltag__user__id__553012 .follow-action-button {
      background-color: #3b49df !important;
      color: #f9fafa !important;
      border-color: #3b49df !important;
    }
  
    &lt;a href="/theinterviewsage" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xMM4L2Ac--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--B2cc8AK0--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/553012/244b250a-5230-4388-84d4-0c1d1ff70fb9.png" alt="theinterviewsage image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/theinterviewsage"&gt;The Interview Sage&lt;/a&gt;Follow
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/theinterviewsage"&gt;Our goal is to create Software Eng Interview tutorials to help you get a job at companies like Facebook, Google, Apple, &amp;amp; Amazon. We will deep-dive into System Design, Coding, &amp;amp; Behavioral interviews.&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;



&lt;/blockquote&gt;

&lt;p&gt;📸 Some images used are from free&lt;span&gt;pik&lt;/span&gt;.com: Freepik, pch.vector, vectorjuice, pikisuperstar, raw&lt;span&gt;pixel&lt;/span&gt;.com, slidesgo, stories, Upklyak, jcomp, macrovector_official, syarifahbrit, redgreystock&lt;/p&gt;

&lt;p&gt;&lt;a href="https://disclosureanddisclaimer.theinterviewsage.com/"&gt;Full Disclosure &amp;amp; Disclaimer&lt;/a&gt;&lt;/p&gt;

</description>
      <category>career</category>
      <category>tutorial</category>
      <category>beginners</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>The keyword "new" in JavaScript</title>
      <author>Swarnali Roy</author>
      <pubDate>Sun, 19 Sep 2021 17:44:58 +0000</pubDate>
      <link>https://dev.to/swarnaliroy94/the-keyword-new-in-javascript-fh6</link>
      <guid>https://dev.to/swarnaliroy94/the-keyword-new-in-javascript-fh6</guid>
      <description>&lt;p&gt;Hello Readers! &lt;br&gt;
Let me introduce you all with something new today! &lt;/p&gt;

&lt;p&gt;The topic today is the JavaScript Keyword &lt;em&gt;"new"&lt;/em&gt;! In JavaScript, the keyword &lt;em&gt;new&lt;/em&gt; is used to create &lt;em&gt;an instance of an object&lt;/em&gt; that has a &lt;em&gt;constructor function&lt;/em&gt;. &lt;/p&gt;

&lt;p&gt;Before diving into the details, we need to understand one thing, that is, in JavaScript almost everything is an &lt;em&gt;Object&lt;/em&gt; and the concept of Object is very important to understand the keyword "New". When we define any &lt;em&gt;Boolean&lt;/em&gt;, &lt;em&gt;Number&lt;/em&gt; or &lt;em&gt;String&lt;/em&gt; with the keyword New, it can be treated like an &lt;em&gt;object&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Let me show an example first!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HwoZEx06--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b23ubt0a858w4v28gnwt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HwoZEx06--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b23ubt0a858w4v28gnwt.png" alt="Construction Function"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;👉 This is a "&lt;em&gt;constructor function&lt;/em&gt;" , &lt;em&gt;Animal&lt;/em&gt; since it is responsible for &lt;em&gt;constructing&lt;/em&gt; a new object, &lt;em&gt;animal&lt;/em&gt;.&lt;br&gt;
👉 We had to add properties to the animal object with the dot notation and return it from the constructor function.&lt;br&gt;
👉 Let's assume that we need to create more than one Animal object in our application. So, we instantiated the constructor function twice.&lt;br&gt;
👉 We can see the output where two new animal objects are created with &lt;em&gt;name&lt;/em&gt; and &lt;em&gt;legs&lt;/em&gt; properties.&lt;/p&gt;

&lt;p&gt;Here is the interesting thing about the keyword &lt;em&gt;new&lt;/em&gt;. When we use the keyword, a property called &lt;em&gt;this&lt;/em&gt; is created which refers to the whole object and is returned automatically. So, we don't need to specify any additional object inside our constructor function. Basically, those two lines are done for us implicitly (&lt;em&gt;under the hood&lt;/em&gt;). &lt;/p&gt;

&lt;p&gt;Let's take a look what happens &lt;em&gt;under the hood&lt;/em&gt; , assuming the Animal constructor is called with the &lt;em&gt;new&lt;/em&gt; keyword. It can be re-written as following and it is equivalent to the previous example:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7S6hkxyo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6nhzmhznfdtwtuwffi6k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7S6hkxyo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6nhzmhznfdtwtuwffi6k.png" alt="With Comments"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here, a new object is automatically created and returned. (the commented out lines)&lt;/p&gt;

&lt;p&gt;We can compactly write the code without the &lt;em&gt;under the hood&lt;/em&gt; comments:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5jvcDs9x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8ux9qbqd1elu7u6ps19h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5jvcDs9x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8ux9qbqd1elu7u6ps19h.png" alt="Without Comments"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This concept is known as "&lt;strong&gt;Pseudoclassical Instantiation&lt;/strong&gt;". &lt;/p&gt;

&lt;p&gt;Similarly, we can define an &lt;em&gt;Object property&lt;/em&gt; which is itself another &lt;em&gt;Object&lt;/em&gt;! &lt;/p&gt;

&lt;p&gt;For &lt;em&gt;example&lt;/em&gt;, let's define an object called "&lt;em&gt;Human&lt;/em&gt;" And then instantiate two new &lt;em&gt;Human&lt;/em&gt; objects as follows:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kTUB11PV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s5wa2wzr2wwdelq8ff9k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kTUB11PV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s5wa2wzr2wwdelq8ff9k.png" alt="Human"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, suppose we want to create an object type for cars and name it "&lt;em&gt;Car&lt;/em&gt;". It should have properties named &lt;em&gt;owner&lt;/em&gt;, &lt;em&gt;model&lt;/em&gt; and &lt;em&gt;yearOfPurchase&lt;/em&gt;. Instead of passing a &lt;em&gt;literal string&lt;/em&gt; or &lt;em&gt;integer value&lt;/em&gt; while creating the new objects, the following statements pass the objects &lt;em&gt;man&lt;/em&gt; and &lt;em&gt;woman&lt;/em&gt; as the parameters for the owners. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--u-FvmF6X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qh0x2vc3gvjiphkitk73.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u-FvmF6X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qh0x2vc3gvjiphkitk73.png" alt="Car"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To find out the name of the owner of car2, we can access the property as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;car2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;owner&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//Swarnali&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h6&gt;
  &lt;a href="#hope-this-post-help-you-while-creating-a-lot-of-similar-objects-in-your-application-discussion-and-queries-are-always-welcomed-relaxedrelaxed"&gt;
  &lt;/a&gt;
  Hope this post help you while creating a lot of similar objects in your application. Discussion and queries are always welcomed! ☺️☺️
&lt;/h6&gt;

</description>
      <category>javascript</category>
      <category>codenewbie</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>What a Video Game for Kids can Teach you about Software Engineering and Infrastructure</title>
      <author>Robb Manes</author>
      <pubDate>Sun, 19 Sep 2021 17:39:25 +0000</pubDate>
      <link>https://dev.to/robbmanes/what-a-video-game-for-kids-can-teach-you-about-software-engineering-and-infrastructure-29i1</link>
      <guid>https://dev.to/robbmanes/what-a-video-game-for-kids-can-teach-you-about-software-engineering-and-infrastructure-29i1</guid>
      <description>&lt;p&gt;I'm an avid gamer.  I play almost everything, and most recently I've been getting in to automation games like &lt;a href="https://store.steampowered.com/app/526870/Satisfactory/"&gt;Satisfactory&lt;/a&gt; or &lt;a href="https://store.steampowered.com/app/427520/Factorio/"&gt;Factorio&lt;/a&gt;.  After hundreds of hours in building factories in these games my Steam recommendations decided to show me &lt;a href="https://store.steampowered.com/app/979120/Autonauts/"&gt;Autonauts&lt;/a&gt;, and at first glance I was a bit appalled at the recommendation.  It seemed very childish and the playground-toys theme turned me off of it for a while, until one day I decided to pick it up and, over the next one hundred hours of play, realized it was the absolute best simulation of &lt;em&gt;all&lt;/em&gt; of the facets of IT Infrastructure I've ever seen.&lt;/p&gt;

&lt;p&gt;Simulations of real-world engineering and software exist everywhere in video games these days.  I was shocked at how extensive you could make faux electronical devices in &lt;a href="https://www.minecraft.net/en-us"&gt;Minecraft&lt;/a&gt; when the Redstone update was introduced, and a quick search on your favorite web browser will show people have made entire in-game CPU'S and complex computational devices in massive feats of computer engineering - all within a game about surviving and crafting.&lt;/p&gt;

&lt;p&gt;There are quite a few &lt;em&gt;pure&lt;/em&gt; programming games out there; I love &lt;a href="https://www.zachtronics.com/"&gt;Zachtronics&lt;/a&gt; games, which between &lt;a href="https://store.steampowered.com/app/504210/SHENZHEN_IO/"&gt;Shenzen I/O&lt;/a&gt;, &lt;a href="https://store.steampowered.com/app/370360/TIS100/"&gt;TIS-100&lt;/a&gt;, and &lt;a href="https://store.steampowered.com/app/300570/Infinifactory/"&gt;Infinifactory&lt;/a&gt;, can satisfy my need for programming outside of work.  I'm a huge fan of pure logic games as well such as &lt;a href="https://store.steampowered.com/app/736260/Baba_Is_You/"&gt;Baba is You&lt;/a&gt;, which looks playful but carries a deep approach to puzzle solving utilizing rulesets.  This being said, the target audiences for these games are clearly those who enjoy logic puzzles and already have some experience in them, perhaps an older-than-teenager audience.&lt;/p&gt;

&lt;p&gt;Back to Autonauts.  I launched the game with the images I'd seen so far in mind; everything was blocky and cute, and everything had a smile on it in a preschool-wonderland sort of way.  Like any other "Survival Crafting" game, was put in an untamed area and had to scavenge for basic resources to begin the progression from humble vagrant to planetary tycoon as so many other games encourage the player to do.  I made a workbench with my own hands, made an axe, and started chopping down trees and refining logs into planks.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S30N0Ngi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fgpcfhrok6bz12tfhbmx.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S30N0Ngi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fgpcfhrok6bz12tfhbmx.jpg" alt="Welcome to the middle of nowhere, population you."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After the initial work, the tooltips encouraged me to craft a workbench specifically to make robots, or "Bots".  I did so, and then used it to craft my first Bot, and then the true genius of Autonauts began to shine.&lt;/p&gt;

&lt;p&gt;Using my new Bot, I was able to "Teach" it to chop trees for me by simply mirroring the action.  As I did so, the Bot translated this into a &lt;a href="https://scratch.mit.edu/"&gt;Scratch-like&lt;/a&gt; language on-the-fly with simple instructions that I could click and drag, including the addition of loops or if/else statements with drop-down qualifiers.  It was very simple, and then after a few more Bots and a few more sessions of teaching and rearranging codeblocks, I had a fully automated forestry operation going, complete with re-planting.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e26Rg3TO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/btubve7in9uemeqi8ish.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e26Rg3TO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/btubve7in9uemeqi8ish.jpg" alt="Look out new world, the gentle touch of automation is here."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;At this point, I realized I likely never had to chop down a tree by hand in this game again.&lt;/p&gt;

&lt;p&gt;Things began to quickly accelerate.  I had quarries of stone and clay worked by machine hands, courier networks delivering to a central warehouse, and teams of assemblers/crafters distributing tools such as axes, picks, and shovels to the various resource sites, each managed autonomously and independently in teams of Bots.  Bots need to be "recharged" by turning a crank, and while I did this by hand, after a hundred Bots were made I made a special team of Bots to turn the cranks on other Bots, removing all of the human intervention everywhere I could in a flurry of automation.&lt;/p&gt;

&lt;p&gt;Eventually, after certain milestones I received upgrades; I could now craft machines that made "Colonists" and with that came a lot of new technologies to dabble in such as Agriculture.&lt;/p&gt;

&lt;p&gt;I now had "Colonists" to take care of, babies spawned out of a machine that needed food, housing, and clothing.  I set up these teams quickly, creating Bot-tended fields of berries and lettuce, and setting up orchards of Apple trees.  I created a fishing team, catching and slicing up salmon, and fed everything to the colonist-babies I suddenly was responsible for.  My automatic empire grew to support these colonists, and in return colonists produce a resource called "Wuv" which really are just tokens you can put in a sort of Research Machine to advance your technological level, letting you build new machines and better Bots.  Eventually even the &lt;em&gt;colonists&lt;/em&gt; themselves leveled up, growing into having more and more needs, and I had to adapt previous teams of Bots and make entire new teams to hit the ever-shifting target of needs for these growing colonists.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--p4uuMlBH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/72vms807ee67xze7bcu5.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p4uuMlBH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/72vms807ee67xze7bcu5.jpg" alt="Birds eye view of the craziness."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It wasn't until I had to do my first very-real upgrade problem of infrastructure that all of the similarities of my experience in IT, Development, and Infrastructure began to figuratively bash my head in.  The problem was this: I had a large number of entry-level Bots which are slow and have multiple drawbacks, but were otherwise working just fine.  I had intermixed teams of Bots of varying levels and effectiveness, and it was creating intermittent poor performance for one of my teams as sometimes there would be a surplus of materials and other times a drought as the different-level worker Bots performed tasks at different rates.  I sought to consolidate skill levels by upgrading teams to the new &lt;code&gt;Mk 2&lt;/code&gt; level of Bot, and decommission the old ones, and went about doing so.  There were a few hiccups, but I had felt I had everything under control until I scrolled to a side of my base and saw this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yT8n-Do6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/emg4wb1wlgn9k64hels2.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yT8n-Do6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/emg4wb1wlgn9k64hels2.jpg" alt="Behold, the Salmon abomination."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That is a tower of stacked and still wriggling salmon that is reaching the stratosphere.&lt;/p&gt;

&lt;p&gt;I couldn't find the problem immediately.  I went to the fishing teams, and couldn't see which unit was responsible for the salmon; I had just replaced my older Bots.  So then I realized I had switched the duty to "fetching" the salmon to my Kitchen team, which led me to the culprit; the sole "Salmon Fetcher" Bot had a "If crate of salmon is full" instead of "If crate of salmon is NOT full" clause which caused it to run once and then ponder what to do ever after.  Therefore, the fisher Bot just kept fishing, and piling the salmon on top of each other, forever.  I thought I had directly copied this code to fetch salmon from an older Bot but clearly I had changed something incorrectly in the course of my upgrade, and really had no way to know what was different.&lt;/p&gt;

&lt;p&gt;This isn't the only example I could make of this being a direct allegory to positions in DevOps, Product Manager, Development, QA, Support, or any really software infrastructure position.  The Colonists are really just customers who have the very-real shifting expectations of delivery as their needs are being met in various ways.  Upgrading my infrastructure was always a hassle, and I had to make decisions on when and where to impact my production based on what was most important to me at the time.  I had to decide which Services mattered most, and observe multiple failures to ensure that all edge-cases were caught lest suddenly there be unexpected downtime in production until the issue was caught, rectified, and prevented for the future.&lt;/p&gt;

&lt;p&gt;One specific, important example I'd like to share is when I had to shift my "services" from a monolithic model to a microservice model.  As my requirements and physical areas to access expanded, it became better to have resources not all made in my central "factory", so I undertook an effort to move certain types of goods to be made in different locations; tools would be built in the "tool" factory, food and such would be processed in a specific location, etc.&lt;/p&gt;

&lt;p&gt;There are so many examples of how this game is the perfect, most real-world example of working in IT that I can't list them all.  It is a children's learn-to-programming game that I found to be an excellent (and intensely fun) description of what working in IT Infrastructure is like, from a myriad of positions and roles which you have to take upon yourself.  The game has no real consequence of failure; your colonists/customers can't leave you or "die" (yet, the game has a new "survival" mode coming out apparently) so it's very forgiving, especially when you forget to feed your customers for a week or so.&lt;/p&gt;

&lt;p&gt;All in all, I'm overjoyed at finding this game, and I encourage everyone who's interested in this sort of thing to pick it up.  It seems fairly age appropriate for all levels, and it truly is the best &lt;em&gt;real&lt;/em&gt; simulation of my experience working in IT so far.  Bravo to the developers.  By the end of my 100 hours, I'd advanced decently far (I am a slow perfectionist in these games) but still have plenty to unlock, but am quite happy with my operation thusfar.  Perhaps this isn't your thing, but I found this to be truly an exceptional example of "what do I do for a living" in a gamified, simplified way.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SjV5CuMO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2pv24881b1urflfayrlb.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SjV5CuMO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2pv24881b1urflfayrlb.jpg" alt="Bots making bots."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;May you catch your bugs early and often, lest they pile up in a tower of wriggling salmon that pierces the heavens.&lt;/p&gt;

</description>
      <category>automation</category>
      <category>games</category>
      <category>infrastructure</category>
      <category>engineering</category>
    </item>
    <item>
      <title>Consistent Git Commit Messages Using a Template</title>
      <author>Mohamed Saleh</author>
      <pubDate>Sun, 19 Sep 2021 17:26:37 +0000</pubDate>
      <link>https://dev.to/salehmdev/consistent-git-commit-messages-using-a-template-3ono</link>
      <guid>https://dev.to/salehmdev/consistent-git-commit-messages-using-a-template-3ono</guid>
      <description>&lt;p&gt;One way to improve the consistency of your commits is to use a git template.&lt;/p&gt;

&lt;p&gt;Any time you start a new commit, this template will be &lt;strong&gt;pre-loaded&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;That means you'll be able to use git commit &lt;em&gt;comments&lt;/em&gt; with some guidelines and reminders!&lt;/p&gt;

&lt;p&gt;This can be useful because it can help remind you of things you typically would include in a git commit message; it could even act as a line length guide!&lt;/p&gt;

&lt;p&gt;If you wanna learn more aboure git best practices, I think this article explains it well: &lt;a href="https://chris.beams.io/posts/git-commit/"&gt;https://chris.beams.io/posts/git-commit/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: You don't &lt;strong&gt;need&lt;/strong&gt; to comment out all the contents of your git commit template.&lt;/em&gt;&lt;br&gt;
&lt;em&gt;This is simply a common usage but not required... but why would you want all of your commits messages to have the same message?&lt;/em&gt; 🙂&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#usage"&gt;
  &lt;/a&gt;
  Usage
&lt;/h3&gt;

&lt;p&gt;First off, in your home directory, create a file with a commonly used name: &lt;code&gt;.gitmessage&lt;/code&gt;. &amp;lt;- This is where you'll store the contents of this template.&lt;/p&gt;

&lt;p&gt;Here's an example template that I personally use:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# Commit title - 50 characters ------------------|


# Commit body - Line Width 72 characters ------------------------------|


# References, issue #, ticket #, etc:


# Any co-authors:
# Co-authored-by: LastName, FirstName &amp;lt;email@email.com&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;Note: the line length guides only work for monospaced fonts, i.e., each character has the same width.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I prefer it short and to the point -- but you can include whatever you like in here.&lt;/p&gt;

&lt;p&gt;Now, the last step to make it automatically pre-populate your git commit messages is to set it in your git config.&lt;/p&gt;

&lt;p&gt;To do it through the command line, run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git config --global commit.template ~/.gitmessage
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;OR &lt;/p&gt;

&lt;p&gt;You can manually set the commit template through your global &lt;code&gt;.gitconfig&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;e.g.: &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cktIHhqg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631937446887/dJZTE65Lh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cktIHhqg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631937446887/dJZTE65Lh.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  Wrapping Up
&lt;/h3&gt;

&lt;p&gt;You should be all set!&lt;/p&gt;

&lt;p&gt;Now every time you &lt;code&gt;git commit&lt;/code&gt; in your project repo, you'll get a pre-loaded template that you can edit for your commit message.&lt;/p&gt;

&lt;p&gt;Hope this helps you write better git commits!&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;If you want a more in-depth guides about git commits, check out these amazing write-ups:

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://gist.github.com/lisawolderiksen/a7b99d94c92c6671181611be1641c733"&gt;https://gist.github.com/lisawolderiksen/a7b99d94c92c6671181611be1641c733&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://chris.beams.io/posts/git-commit/"&gt;https://chris.beams.io/posts/git-commit/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>git</category>
      <category>programming</category>
    </item>
    <item>
      <title>Benefits of Artificial intelligence bcoz AI is the future.</title>
      <author>XTEALTH</author>
      <pubDate>Sun, 19 Sep 2021 17:26:17 +0000</pubDate>
      <link>https://dev.to/xtealth/benefits-if-artificial-intelligence-bcoz-ai-is-the-future-129d</link>
      <guid>https://dev.to/xtealth/benefits-if-artificial-intelligence-bcoz-ai-is-the-future-129d</guid>
      <description>&lt;p&gt;Artificial intelligence this is the name which gives us goosebumps if we talk about the technologies for the future and AI will play the main role behind it.&lt;/p&gt;

&lt;p&gt;Below are some of biggest benefits of Artificial intelligence &lt;br&gt;
1.Smart Decision Making.&lt;br&gt;
2.Medical Advances.&lt;br&gt;
3.Enhanced Customer Experience.&lt;br&gt;
4.Solving Complex Problems.&lt;br&gt;
5.Research and Data Analysis.&lt;br&gt;
6.Business Continuity.&lt;br&gt;
7.Minimizing Errors.&lt;br&gt;
8.Managing Repetitive Tasks.&lt;br&gt;
9.Increased Business Efficiency.&lt;br&gt;
10.Automation.&lt;/p&gt;

&lt;p&gt;World is now more focusing on problems solving with the help of technology and research and in this Artificial intelligence is playing very important role.&lt;/p&gt;

&lt;p&gt;As an Technology company we focus on innovation and technology development. &lt;br&gt;
&lt;a href="https://www.xtealthglobal.com"&gt;XTEALTH &lt;/a&gt;&lt;/p&gt;

</description>
      <category>ai</category>
      <category>analytics</category>
      <category>programming</category>
      <category>python</category>
    </item>
  </channel>
</rss>
