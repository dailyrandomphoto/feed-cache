<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Displaying Real-Time Data in Your Web Application Without Hassle: IHP Auto Refresh ‚ú®</title>
      <author>digitallyinduced</author>
      <pubDate>Thu, 15 Jul 2021 06:42:59 +0000</pubDate>
      <link>https://dev.to/digitallyinduced/displaying-real-time-data-in-your-web-application-without-hassle-ihp-auto-refresh-4e7a</link>
      <guid>https://dev.to/digitallyinduced/displaying-real-time-data-in-your-web-application-without-hassle-ihp-auto-refresh-4e7a</guid>
      <description>&lt;p&gt;&lt;strong&gt;In the IHP framework we have one feature that typically looks like dark magic to people coming from other frameworks: Auto Refresh ‚ú®. Ever wanted to display real-time data in your web application, but found WebSockets too much of a hassle? Add a single keyword in your IHP controller, and you are all set.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Auto Refresh offers a way to re-render the HTML views of your application when the underlying data changes, as long as the page is still open inside the user‚Äôs browser window. Auto Refresh replaces manually polling for status updates or complicated Websocket code.&lt;/p&gt;

&lt;p&gt;Without any manual work we can have e.g. live updating dashboards, chat message views that automatically display new messages when they arrive, or news feeds that automatically display new activities.&lt;/p&gt;

&lt;p&gt;If you have a react.js background, you can think of an Auto Refresh view as a react component where the state is the actual backend PostgreSQL database. Whenever the database state changes, the view is re-rendered. Like a normal react component. The only major difference in our approach is that all the rendering is happening on the server side. So you have access to all your application code. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#realworld-example-ihp-cloud"&gt;
  &lt;/a&gt;
  Real-world example: IHP Cloud
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://ihpcloud.com/"&gt;IHP Cloud&lt;/a&gt; is a deployment platform for IHP applications. After clicking on the ‚ÄúDeploy now‚Äù button, the user is redirected to a deployment status page. Similar to GitHub actions you can see the current status of the deployment and all the logs. Once the deployment is finished, the status turns green.&lt;/p&gt;

&lt;p&gt;Before IHP Auto Refresh was invented, this page was implemented using a manual ajax polling every 1 second. This was very error prone and polling too fast sometimes caused the CPU coolers to turn on.&lt;/p&gt;

&lt;p&gt;Here‚Äôs how it looks now with Auto Refresh:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_Rty2Nyw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://ihp.digitallyinduced.com/blog/auto-refresh-how-does-it-work/ihp-cloud.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_Rty2Nyw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://ihp.digitallyinduced.com/blog/auto-refresh-how-does-it-work/ihp-cloud.gif" alt="Preview of auto refresh on the progress page of IHP cloud"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The progress bar, logs and the deployment status is automatically updated without any app-specific javascript. Whenever the deployment progresses, the IHP server pushes an updated view to the browser.&lt;/p&gt;

&lt;p&gt;Auto Refresh can be activated for any IHP controller action by adding a single &lt;code&gt;autoRefresh&lt;/code&gt; keyword in front of the action.&lt;/p&gt;

&lt;p&gt;Here‚Äôs the code of the above deployment status view: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XajIt3Kr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ihp.digitallyinduced.com/blog/auto-refresh-how-does-it-work/ihp-cloud-code.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XajIt3Kr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ihp.digitallyinduced.com/blog/auto-refresh-how-does-it-work/ihp-cloud-code.png" alt="Code editor with an arrow pointing to the use of the autoRefresh function to enable it for an action"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can see that there‚Äôs an &lt;code&gt;autoRefresh&lt;/code&gt; keyword in front of the ‚Äúdo‚Äù in the first line of the action. This enables auto refresh. This single keyword is all it needs for IHP auto refresh to get going.&lt;/p&gt;

&lt;p&gt;If we would remove the &lt;code&gt;autoRefresh&lt;/code&gt; keyword, we would need to manually refresh the page all the time to see the latest deployment status.&lt;/p&gt;

&lt;p&gt;Let‚Äôs take a look at what IHP‚Äôs &lt;code&gt;autoRefresh&lt;/code&gt; keyword does. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ihp-auto-refresh-technical-overview"&gt;
  &lt;/a&gt;
  IHP Auto Refresh: Technical Overview
&lt;/h2&gt;

&lt;p&gt;When we first load a page like the deployment status page above, the &lt;code&gt;autoRefresh&lt;/code&gt; keyword activates IHP Auto Refresh for this action. Once activated it starts tracking all SQL queries the controller action is running against the database. It inspects the &lt;code&gt;SELECT * FROM ‚Ä¶&lt;/code&gt; queries and keeps track of all the tables that have been used.&lt;/p&gt;

&lt;p&gt;After the page is initially rendered on the browser, a small JavaScript function provided by IHP will connect back to the Server using a WebSocket connection.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jPJcFI1W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ihp.digitallyinduced.com/blog/auto-refresh-how-does-it-work/auto-refresh-1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jPJcFI1W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ihp.digitallyinduced.com/blog/auto-refresh-how-does-it-work/auto-refresh-1.png" alt="Diagram showing how browser and server interact in the case of an autoRefresh action. First, the browser makes a GET request for the action, in this case /ShowDeployment. The server executes two SELECT statements, which are automatically recognized using by autoRefresh. The server sends the initial HTML to the browser, which initiates a new websocket connection to the server. The server then watches the tables used in the SELECT statements for changes."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When the WebSocket connection is established, IHP starts watching the tables your action has been using for changes.&lt;/p&gt;

&lt;p&gt;In our example view from above, it starts watching on the deployments and deployment_logs tables, as these have been used for rendering the initial deployment status page.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0GYLBGGr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ihp.digitallyinduced.com/blog/auto-refresh-how-does-it-work/auto-refresh-2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0GYLBGGr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ihp.digitallyinduced.com/blog/auto-refresh-how-does-it-work/auto-refresh-2.png" alt='A diagram showing how the server watches for data changes to send new data to the browser. First, the server tells the postgres database that it wants to "watch" the deployments and deployment_logs table. Then the database notifies the server for INSERT and UPDATE statements executed on those tables. As a result, the originally requested action is re-run with the new data, and the result is sent to the browser using the websocket connection that was previously established. The same happens for any later changes to the data in the database.'&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now a job worker starts working on the deployment. It will insert new log lines into the &lt;code&gt;deployment_logs&lt;/code&gt; table and at the end update the &lt;code&gt;deployments&lt;/code&gt; table to mark the deployment status as completed.&lt;/p&gt;

&lt;p&gt;Whenever IHP auto refresh is notified about a table change via &lt;code&gt;pg_notify&lt;/code&gt;, it will re-run the action on the server-side. When the generated HTML looks different than the HTML generated on the initial page load, it will send the new HTML to the browser using the WebSocket connection.&lt;/p&gt;

&lt;p&gt;Whenever the JavaScript on the browser-side receives new HTML, it will update the current page using a DOM-diff approach (using &lt;a href="https://github.com/patrick-steele-idem/morphdom"&gt;morphdom&lt;/a&gt;). So only DOM nodes that have actually changed between the initial page load and the updated HTML will be updated.&lt;/p&gt;

&lt;p&gt;All of this happens behind the scenes.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summing-things-up"&gt;
  &lt;/a&gt;
  Summing things up:
&lt;/h2&gt;

&lt;p&gt;Auto Refresh is a very handy tool to make ‚Äúlive‚Äù views that always display the latest data. It can replace most needs for manual ajax polling or complicated WebSocket update code. Because it‚Äôs so quick to set up, you typically end up using auto refresh in places where you otherwise wouldn‚Äôt add any auto-update logic, when you‚Äôd have to manually write it.&lt;/p&gt;

&lt;p&gt;If you're new to IHP, &lt;a href="https://youtu.be/UbDtS_mUMpI"&gt;check out the demo video üì∫&lt;/a&gt;.&lt;br&gt;
You can &lt;a href="https://ihp.digitallyinduced.com/Guide/auto-refresh.html"&gt;learn more about IHP Auto Refresh in the documentation üìö&lt;/a&gt;. &lt;/p&gt;

</description>
      <category>webdev</category>
      <category>haskell</category>
      <category>ihp</category>
      <category>functional</category>
    </item>
    <item>
      <title>Learning Go by examples: Introduction </title>
      <author>Aur√©lie Vache</author>
      <pubDate>Thu, 15 Jul 2021 06:17:11 +0000</pubDate>
      <link>https://dev.to/aurelievache/learning-go-by-examples-introduction-448n</link>
      <guid>https://dev.to/aurelievache/learning-go-by-examples-introduction-448n</guid>
      <description>&lt;h2&gt;
  &lt;a href="#why-golang"&gt;
  &lt;/a&gt;
  Why Golang?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QGoLinJ8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y4eq8zzjvrwbyj14x0lr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QGoLinJ8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y4eq8zzjvrwbyj14x0lr.png" alt="love gopher"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Former Java developer for 10 years, I discovered &lt;a href="https://golang.org/"&gt;Golang&lt;/a&gt; (aka Go) more than 4 years ago and fell in love with its simplicity and learning curve. It's easy to start creating an application in Go but you have to dig deeper so as not to fall into certain pitfalls ^^.&lt;/p&gt;

&lt;p&gt;I like the explanation by example, so in this new series of articles, I will try to introduce you to Go with concrete applications in each article.&lt;/p&gt;

&lt;p&gt;Let's start this serie with a prerequisite ;-).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h2&gt;

&lt;p&gt;The first thing to do is to install Golang in your local computer. You can follow the &lt;a href="https://golang.org/doc/install"&gt;installation procedure on the official website&lt;/a&gt; but I recommend to install and use &lt;a href="https://github.com/moovweb/gvm"&gt;GVM&lt;/a&gt;, a Go version manager, that will allow you to install and update the versions of Go by specifying which version you want.&lt;/p&gt;

&lt;p&gt;For bash:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;bash &amp;lt; &amp;lt;(curl -s-S-L https://raw.githubusercontent.com/moovweb/gvm/master/binscripts/gvm-installer)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For zsh:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;zsh &amp;lt; &amp;lt;(curl -s-S-L https://raw.githubusercontent.com/moovweb/gvm/master/binscripts/gvm-installer)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Usage:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ gvm
Usage: gvm [command]

Description:
  GVM is the Go Version Manager

Commands:
  version    - print the gvm version number
  get        - gets the latest code (for debugging)
  use        - select a go version to use (--default to set permanently)
  diff       - view changes to Go root
  help       - display this usage text
  implode    - completely remove gvm
  install    - install go versions
  uninstall  - uninstall go versions
  cross      - install go cross compilers
  linkthis   - link this directory into GOPATH
  list       - list installed go versions
  listall    - list available versions
  alias      - manage go version aliases
  pkgset     - manage go packages sets
  pkgenv     - edit the environment for a package set
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The GVM command that will interest us especially is the command &lt;code&gt;gvm install&lt;/code&gt;, which we can use like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ gvm install [version] [options]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Go installation:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ gvm install go1.16.5 -B
$ gvm use go1.16.5 --default
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In your &lt;code&gt;.zshrc&lt;/code&gt; or &lt;code&gt;.bashrc&lt;/code&gt; file, set your &lt;strong&gt;$GOROOT&lt;/strong&gt; and &lt;strong&gt;$GOPATH&lt;/strong&gt; environment variables.&lt;/p&gt;

&lt;p&gt;Here is an example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[[ -s "$HOME/.gvm/scripts/gvm" ]] &amp;amp;&amp;amp; source "$HOME/.gvm/scripts/gvm"
export GOPATH=$HOME/go
export GOBIN=$GOPATH/bin
export PATH=${PATH}:$GOBIN:$GOROOT/bin
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we can check our current Go version:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ go version
go version go1.16.5 darwin/amd64
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Cool!&lt;br&gt;
We now know how to install and switch between different versions of Go. We now can create our first applications!&lt;/p&gt;

</description>
      <category>go</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Maintainer AMA : Ajin Abraham of MobSF üôè</title>
      <author>Mathew J Padayatty</author>
      <pubDate>Thu, 15 Jul 2021 05:57:57 +0000</pubDate>
      <link>https://dev.to/aviyel/maintainer-ama-ajin-abraham-of-mobsf-42cf</link>
      <guid>https://dev.to/aviyel/maintainer-ama-ajin-abraham-of-mobsf-42cf</guid>
      <description>&lt;p&gt;'In God we trust, the rest we test.'&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aviyel.com/post/307/mobile-security-ama-with-maintainer-ajin-abraham-mobsf"&gt;*Post AMA Questions here *&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We are super excited to  host a Data security AMA for the &lt;a href="https://aviyel.com/projects/mobsf"&gt;Mobile Security Framework (MobSF)&lt;/a&gt; community with the Maintainer &lt;a href="https://twitter.com/ajinabraham"&gt;Ajin Abraham&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We can‚Äôt wait to engage with the community that makes this project what it is today.&lt;/p&gt;

&lt;p&gt;Building in the open. üö©&lt;/p&gt;

&lt;p&gt;The Mobile Application market is growing at breakneck speed, and so is the Mobile Security industry. With frequent application releases and updates happening, conducting the complete security analysis of mobile applications becomes challenging.&lt;/p&gt;

&lt;p&gt;Ajin Abraham, started MobSF mainly to counteract the time-consuming and cumbersome overheads in setting up and maintaining a mobile application testing environment.&lt;/p&gt;

&lt;p&gt;Why should you join?üöÄ&lt;/p&gt;

&lt;p&gt;MobSF is on a mission to make the best security assessment tool for Android and iOS applications and make Mobile application security accessible&lt;/p&gt;

&lt;p&gt;MobSF is hosted on local environments so that the sensitive data doesn't interact with the cloud environment. With MobSF, mobile app test environments could be set up easily on all three major platforms, i.e. Android, iOS, and Windows.&lt;/p&gt;

&lt;p&gt;MobSF is also recommended by OWASP MSTG for static analysis of security in mobile applications and is almost industry standard when it comes to Mobile security.&lt;/p&gt;

&lt;p&gt;Let‚Äôs talk about Mobile security, Open-Source and everything in between.&lt;/p&gt;

&lt;p&gt;Save the date: üìÜFriday, July 16th, 2021&lt;/p&gt;

&lt;p&gt;Part I: üö©Ajin Abraham, Maintainer, MobSF.&lt;/p&gt;

&lt;p&gt;Time-7 PM IST¬† (Asia)&lt;/p&gt;

&lt;p&gt;Part II: üö©Ajin Abraham, Maintainer, MobSF.&lt;/p&gt;

&lt;p&gt;7 PM PST (North America)&lt;/p&gt;

&lt;p&gt;Get ready with your questions! To know how you can keep yourself safe from the next hack and other queries on getting started on you Mobile app security project. Join the conversation.&lt;/p&gt;

&lt;p&gt;May the FOSS be with you,&lt;/p&gt;

&lt;p&gt;Team Aviyel&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>showdev</category>
      <category>webdev</category>
      <category>ama</category>
    </item>
    <item>
      <title>Understanding Flutter - a beginner's guide</title>
      <author>Praveen Varma</author>
      <pubDate>Thu, 15 Jul 2021 05:51:19 +0000</pubDate>
      <link>https://dev.to/geekyprawins/understanding-flutter-a-beginner-s-guide-2l6h</link>
      <guid>https://dev.to/geekyprawins/understanding-flutter-a-beginner-s-guide-2l6h</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-flutter"&gt;
  &lt;/a&gt;
  &lt;em&gt;What is Flutter?&lt;/em&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://flutter.dev"&gt;Flutter&lt;/a&gt;&lt;/strong&gt; is a tool that allows to build &lt;em&gt;native cross-platform apps&lt;/em&gt; and that means for &lt;em&gt;iOS&lt;/em&gt; and &lt;em&gt;Android&lt;/em&gt;, with the one programming language and codebase. So let's have a closer look at this nice sentence here. Important is that we build &lt;em&gt;native cross-platform apps&lt;/em&gt;, so we build both an &lt;em&gt;iOS&lt;/em&gt; app and an &lt;em&gt;Android&lt;/em&gt; app. We're not building a &lt;em&gt;web app&lt;/em&gt; that runs in the browser, we're not building an app that gets &lt;em&gt;wrapped&lt;/em&gt; by native apps, we build real apps, two different kinds of apps in the end for &lt;em&gt;iOS&lt;/em&gt; and &lt;em&gt;Android&lt;/em&gt;, which you then distribute through the different app stores, so through the &lt;strong&gt;Apple App Store&lt;/strong&gt; and the &lt;strong&gt;Google Play store&lt;/strong&gt;, that's what you get as a result.&lt;/p&gt;

&lt;p&gt;Now you get there by using &lt;em&gt;one&lt;/em&gt; programming language, so that you don't have to learn two different programming languages, one for &lt;em&gt;iOS&lt;/em&gt;, one for &lt;em&gt;Android&lt;/em&gt;, instead you have one programming language, &lt;strong&gt;&lt;a href="https://dart.dev"&gt;Dart&lt;/a&gt;&lt;/strong&gt; and also one &lt;em&gt;codebase&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;So you work in one project, you write your code once and you still get two different apps as a result and that's the cool thing about Flutter, you only learn one programming language, you only write your code once and you get two apps. Without Flutter, you would normally build an &lt;strong&gt;iOS&lt;/strong&gt; app by writing some &lt;em&gt;&lt;a href="https://developer.apple.com/swift/"&gt;Swift&lt;/a&gt;&lt;/em&gt; or &lt;em&gt;&lt;a href="https://developer.apple.com/library/archive/documentation/Cocoa/Conceptual/ProgrammingWithObjectiveC/Introduction/Introduction.html"&gt;Objective C&lt;/a&gt;&lt;/em&gt; code and using the iOS development environment and for &lt;strong&gt;Android&lt;/strong&gt;, you would be using &lt;em&gt;&lt;a href="//www.java.com"&gt;Java&lt;/a&gt;&lt;/em&gt; with the Android framework or you would be using &lt;em&gt;&lt;a href="https://kotlinlang.org"&gt;Kotlin&lt;/a&gt;&lt;/em&gt; and also the Android development environment and you would have to learn all these different languages and tools and you would have to write two totally different apps or work in two totally different projects and with Flutter, that's not the case, one programming language and one codebase!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ITFuSNW3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8ghtekgpp5iiogdmfa46.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ITFuSNW3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8ghtekgpp5iiogdmfa46.jpg" alt="Dart-Flutter"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-it-works"&gt;
  &lt;/a&gt;
  &lt;em&gt;How it works?&lt;/em&gt;
&lt;/h2&gt;

&lt;p&gt;The term &lt;em&gt;Flutter&lt;/em&gt; refers to two major things. One is an &lt;em&gt;&lt;a href="https://www.redhat.com/en/topics/cloud-native-apps/what-is-SDK"&gt;SDK&lt;/a&gt;&lt;/em&gt;, a &lt;em&gt;Software Development Kit&lt;/em&gt;, you could say a collection of tools that allows you to write one codebase with one programming language because it includes tools to then &lt;em&gt;compile&lt;/em&gt; this code, which normally would not run on &lt;em&gt;iOS&lt;/em&gt; and &lt;em&gt;Android&lt;/em&gt;, into &lt;em&gt;native machine code&lt;/em&gt; that does run on these platforms because if there would be one programming language that would work on both platforms, we wouldn't need &lt;em&gt;Flutter&lt;/em&gt;, but there isn't one!&lt;/p&gt;

&lt;p&gt;Now therefore, the one programming language Flutter uses doesn't work on &lt;em&gt;iOS&lt;/em&gt; and &lt;em&gt;Android&lt;/em&gt;, so it needs to be compiled to &lt;em&gt;native machine code&lt;/em&gt; for &lt;em&gt;iOS&lt;/em&gt; and native machine code for &lt;em&gt;Android&lt;/em&gt; so that we have code that has run on these platforms and that compilation task, along with a couple of other things,&lt;br&gt;
that's all part of Flutter but of course, it's not just a collection of tools, it also gives you everything you need to create beautiful applications.&lt;/p&gt;

&lt;p&gt;It gives you a &lt;em&gt;framework&lt;/em&gt;, a &lt;em&gt;widget library&lt;/em&gt; for that one programming language which is called &lt;strong&gt;Dart&lt;/strong&gt; which you can use to build beautiful Flutter apps.&lt;/p&gt;

&lt;p&gt;It gives you a vast collection of reusable &lt;em&gt;UI&lt;/em&gt; building blocks, these so-called &lt;em&gt;&lt;a href="https://developer.android.com/guide/topics/appwidgets/overview"&gt;widgets&lt;/a&gt;&lt;/em&gt;, so these are things like buttons, tabs, text inputs, drop downs, you get all of that out of the box. You can style them and customize them and then you build user interfaces with these tools. In addition, you get a couple of utility functions and generally, some &lt;em&gt;&lt;a href="https://pub.dev/"&gt;packages&lt;/a&gt;&lt;/em&gt; that help you build what your users see and what your users interact with and then that code which you built with the help of that framework, that is then compiled native machine code with the help of the &lt;em&gt;SDK&lt;/em&gt;.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ipJkVYQc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dk9ky8qk45g30ysey4fj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ipJkVYQc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dk9ky8qk45g30ysey4fj.png" alt="Why Dart?"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dart"&gt;
  &lt;/a&gt;
  &lt;em&gt;Dart&lt;/em&gt;
&lt;/h2&gt;

&lt;p&gt;Now as I mentioned, Flutter uses a programming language called &lt;em&gt;Dart&lt;/em&gt;. &lt;em&gt;Dart&lt;/em&gt; is a programming language which is focused on building front-end user interfaces, front-end apps. It's not limited to building mobile apps, that's just what Flutter uses it for but &lt;em&gt;Dart&lt;/em&gt; is independent of &lt;em&gt;Flutter&lt;/em&gt; and you can also build web apps with it. So it's a programming language built to make it really simple to build &lt;em&gt;front-end user interfaces&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;It was developed by &lt;a href="//www.google.com"&gt;Google&lt;/a&gt;, just like Flutter, so these are actually two independent teams in Google but of course they're working together to improve each other and therefore, we have a hand in hand solution here and in case you already have some programming experience, it's an &lt;a href="https://en.wikipedia.org/wiki/Object-oriented_programming"&gt;object oriented&lt;/a&gt; and strongly typed language and its syntax is a bit like a mixture of &lt;em&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript"&gt;JavaScript&lt;/a&gt;&lt;/em&gt;, &lt;em&gt;&lt;a href="//www.java.com"&gt;Java&lt;/a&gt;&lt;/em&gt;, &lt;em&gt;&lt;a href="https://docs.microsoft.com/en-us/dotnet/csharp/"&gt;C#&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#in-a-nutshell"&gt;
  &lt;/a&gt;
  &lt;em&gt;In a nutshell&lt;/em&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Flutter&lt;/em&gt; builds up on &lt;em&gt;Dart&lt;/em&gt;, it's a framework for &lt;em&gt;Dart&lt;/em&gt; and &lt;em&gt;Dart&lt;/em&gt; actually is the programming language which we're using, Flutter then just is a collection of tools, a set of features, utility functions and these widgets which are implemented using Dart, so that you don't have to reinvent the wheel there but you can write your own Dart code and use these existing widgets in your code so that you don't have to again reinvent how a button should look like and work but use the pre-built button instead and then just customize it to your requirements, that's how this works.&lt;br&gt;
And in addition as mentioned, Flutter also gives you that SDK, so all these tools for compiling your code in the end.&lt;/p&gt;

&lt;p&gt;Thanks for reading, hope you have a great day :)&lt;br&gt;
Find me on GitHub &lt;a href="https://github.com/geekyprawins"&gt;here&lt;/a&gt; to have a look at my Flutter repositories!üòä&lt;/p&gt;

</description>
      <category>flutter</category>
      <category>android</category>
      <category>ios</category>
      <category>dart</category>
    </item>
    <item>
      <title>8 Best Web Font Pairing</title>
      <author>Vansh Sharma</author>
      <pubDate>Thu, 15 Jul 2021 05:40:43 +0000</pubDate>
      <link>https://dev.to/vanshsh/8-best-web-font-pairing-nb8</link>
      <guid>https://dev.to/vanshsh/8-best-web-font-pairing-nb8</guid>
      <description>&lt;h2&gt;
  &lt;a href="#no-doubt"&gt;
  &lt;/a&gt;
  &lt;strong&gt;No doubt&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Why fonts are a necessary part of the Website? They cover 80% of your website. With such a high percentage we can't even think of neglecting them.&lt;/p&gt;

&lt;p&gt;But selecting the &lt;strong&gt;Best&lt;/strong&gt; and &lt;strong&gt;Appropriate&lt;/strong&gt; fonts from 1000s of fonts is in itself is a fight. But &lt;strong&gt;&lt;em&gt;no worries&lt;/em&gt;&lt;/strong&gt; with these üëá 8 ideas it will become a cakewalk for you.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-merriweather-and-open-sans"&gt;
  &lt;/a&gt;
  1. Merriweather and Open Sans
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;Merriweather&lt;/em&gt; for &lt;strong&gt;Headings&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Open Sans&lt;/em&gt; for &lt;strong&gt;Text&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jf35VZVO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626069510010/zXxTj4YS3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jf35VZVO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626069510010/zXxTj4YS3.png" alt="Screenshot (635).png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-ubuntu-and-lora"&gt;
  &lt;/a&gt;
  2. Ubuntu and Lora
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;Ubuntu&lt;/em&gt; for &lt;strong&gt;Headings&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Lora&lt;/em&gt; for &lt;strong&gt;Text&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m1lABwZf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626069519342/jI-ELJIgC.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m1lABwZf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626069519342/jI-ELJIgC.png" alt="Screenshot (636).png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-abril-fatface-and-poppins"&gt;
  &lt;/a&gt;
  3. Abril Fatface and Poppins
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;Abril Fatface&lt;/em&gt; for &lt;strong&gt;Headings&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Poppins&lt;/em&gt; for &lt;strong&gt;Text&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qM8qUt0_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626069529585/3Hn8KSXi1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qM8qUt0_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626069529585/3Hn8KSXi1.png" alt="Screenshot (637).png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-cinzel-and-fauna-one"&gt;
  &lt;/a&gt;
  4. Cinzel and Fauna One
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;Cinzel&lt;/em&gt; for &lt;strong&gt;Headings&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Fauna One&lt;/em&gt; for &lt;strong&gt;Text&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--om88MKPX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626069538185/Vi67ygq0O.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--om88MKPX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626069538185/Vi67ygq0O.png" alt="Screenshot (638).png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-fjalla-one-and-libre-baskerville"&gt;
  &lt;/a&gt;
  5. Fjalla One and Libre Baskerville
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;Fjalla&lt;/em&gt; for &lt;strong&gt;Headings&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Libre Baskerville&lt;/em&gt; for &lt;strong&gt;Text&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SMGw49NE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626069634401/8TJVzWQ9L.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SMGw49NE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626069634401/8TJVzWQ9L.png" alt="Screenshot (639).png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-space-mono-and-muli"&gt;
  &lt;/a&gt;
  6. Space Mono and Muli
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;Space Mono&lt;/em&gt; for &lt;strong&gt;Headings&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Muli&lt;/em&gt; for &lt;strong&gt;Text&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bQOxngpg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626069651812/s3LC0qNOo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bQOxngpg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626069651812/s3LC0qNOo.png" alt="Screenshot (640).png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#7-spectral-and-rubik"&gt;
  &lt;/a&gt;
  7. Spectral and Rubik
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;Spectral&lt;/em&gt; for &lt;strong&gt;Headings&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Rubik&lt;/em&gt; for &lt;strong&gt;Text&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JRVS4Ug8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626069713147/Y1Kvt2f_L.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JRVS4Ug8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626069713147/Y1Kvt2f_L.png" alt="Screenshot (641).png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#8-oswald-and-noto-sans"&gt;
  &lt;/a&gt;
  8. Oswald and Noto Sans
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;Oswald&lt;/em&gt; for &lt;strong&gt;Headings&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Noto Sans&lt;/em&gt; for &lt;strong&gt;Text&lt;/strong&gt;. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EA3FYCBf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626069721202/rrpQFXSyF.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EA3FYCBf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626069721202/rrpQFXSyF.png" alt="Screenshot (642).png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That's all for this blog. Now we will meet in the next blog.&lt;/p&gt;

&lt;p&gt;Until then &lt;strong&gt;Keep Learning, Keep Growing&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;Connect with me üëá &lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Twitter&lt;/th&gt;
&lt;th&gt;LinkedIn&lt;/th&gt;
&lt;th&gt;Gmail&lt;/th&gt;
&lt;th&gt;DEV&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://twitter.com/Vanshsh2701"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y-ozPGI4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.icons8.com/clouds/60/000000/twitter.png"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.linkedin.com/in/vanshsharma27/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ObNF6flA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.icons8.com/bubbles/60/000000/linkedin.png"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="mailto:vanshsharma9354@gmail.com"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VDnSwS5v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.icons8.com/clouds/60/000000/gmail.png"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://dev.to/vanshsh"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DfwG4qYV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.icons8.com/office/50/000000/blog.png"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

</description>
      <category>webdev</category>
      <category>bestofdev</category>
      <category>css</category>
      <category>html</category>
    </item>
    <item>
      <title>How to send WhatsApp message through HTML link</title>
      <author>Atul Prajapati</author>
      <pubDate>Thu, 15 Jul 2021 04:21:27 +0000</pubDate>
      <link>https://dev.to/atulcodex/how-to-send-whatsapp-message-through-html-link-23f8</link>
      <guid>https://dev.to/atulcodex/how-to-send-whatsapp-message-through-html-link-23f8</guid>
      <description>&lt;p&gt;Well, we mostly use WhatsApp to send and receive text or video messages to our loved ones.&lt;/p&gt;

&lt;p&gt;But there are lots of businesses out there using WhatsApp for business purposes some business organizations using WhatsApp to serve customer support services.&lt;/p&gt;

&lt;p&gt;According to businessofapps, WhatsApp has over 2.5 billion active users worldwide.&lt;/p&gt;

&lt;p&gt;And businesses are now adopting WhatsApp for their business use. That‚Äôs why Mark Zuckerberg and his team(Facebook Developers) released WhatsApp Business with some more great features.&lt;/p&gt;

&lt;p&gt;So in this article, You and I both are going to learn how to make send WhatsApp message with HTML link. Imagine when someone clicks on the link it will send a message to a particular WhatsApp number.&lt;/p&gt;

&lt;p&gt;Prerequisite&lt;br&gt;
‚Äì Very basic knowledge of HTML &amp;amp; CSS&lt;br&gt;
‚Äì one WhatsApp number&lt;br&gt;
‚Äì Your country code&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-create-whatsapp-link"&gt;
  &lt;/a&gt;
  How to create WhatsApp link?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZAypt_k6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://atulcodex.com/wp-content/uploads/2021/07/WhatsApp-link-preview-detail-1024x256.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZAypt_k6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://atulcodex.com/wp-content/uploads/2021/07/WhatsApp-link-preview-detail-1024x256.jpg" alt="WhatsApp link formula"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can see this image in which first we want to write ‚Äú&lt;a href="https://wa.me%E2%80%9D"&gt;https://wa.me‚Äù&lt;/a&gt; this is universal link for WhatsApp server. After that we want to write your country code like I am from India so my country code will be 91 with your WhatsApp number like (919876543215) and make sure we don‚Äôt want to write + with country code. And message is optional you can write anything here like ‚ÄúHi‚Äù, ‚ÄúHello‚Äù, etc.&lt;/p&gt;

&lt;p&gt;So the final WhatsApp link will look like this.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_3M2CV5b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://atulcodex.com/wp-content/uploads/2021/07/WhatsApp-link-result-1024x157.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_3M2CV5b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://atulcodex.com/wp-content/uploads/2021/07/WhatsApp-link-result-1024x157.png" alt="WhatsApp Link"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is custom way to make WhatsApp link with HTML. But If you are not a technical guy who knows HTML so don‚Äôt worry on the internet you will find 100s of WhatsApp link generators for free. Let‚Äôs take a look some best tools for creating WhatsApp link generators.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#whatsapp-link-generator-tool"&gt;
  &lt;/a&gt;
  WhatsApp Link Generator Tool
&lt;/h2&gt;

&lt;p&gt;There are lots of WhatsApp link generators on the internet like Postcron, join.chat, vepaar but I personally like the &lt;a href="https://create.wa.link/"&gt;WaLink&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--l1a3IwRU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://atulcodex.com/wp-content/uploads/2021/07/wa-link-1024x496.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--l1a3IwRU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://atulcodex.com/wp-content/uploads/2021/07/wa-link-1024x496.png" alt="wa-link"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Creating WhatsApp links is not user friendly and occasionally takes more time than expected. That‚Äôs where Walink comes in, Walink provide a tool which you can use to generate shortened WhatsApp links, with the wa.link domain. This will increase your chat conversions, and it‚Äôs free!&lt;/p&gt;

&lt;p&gt;Live Example&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-generate-whatsapp-link"&gt;
  &lt;/a&gt;
  How to generate WhatsApp link
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0dKSqlHC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://atulcodex.com/wp-content/uploads/2021/07/WhatsApp-link-generator.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0dKSqlHC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://atulcodex.com/wp-content/uploads/2021/07/WhatsApp-link-generator.gif" alt="WhatsApp link generator"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#generate-your-whatsapp-link"&gt;
  &lt;/a&gt;
  &lt;a href="https://create.wa.link/"&gt;Generate your WhatsApp link&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;So you have learned How to create a WhatsApp link with HTML and How to generate a WhatsApp link with a free WhatsApp link generator tool.&lt;/p&gt;

&lt;p&gt;I have tried my best to explain you how to create a WhatsApp link but still if you are facing any issue please feel free to comment your questions, suggestions and feedback‚Äôs. I love to hear from you.&lt;/p&gt;

&lt;p&gt;Share this post with your friend, colleague and students It will be an Educational Donation for our community.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/d68IdpvmAHohx5NMEV/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/d68IdpvmAHohx5NMEV/giphy.gif" alt="thank you for reading"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>codenewbie</category>
      <category>tutorial</category>
      <category>todayilearned</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Understanding the array methods Array.some() and Array.every() in JavaScript </title>
      <author>Sajith Pradeep</author>
      <pubDate>Thu, 15 Jul 2021 03:43:31 +0000</pubDate>
      <link>https://dev.to/sajithpradeep/understanding-the-array-methods-some-and-every-in-javascript-5c0i</link>
      <guid>https://dev.to/sajithpradeep/understanding-the-array-methods-some-and-every-in-javascript-5c0i</guid>
      <description>&lt;p&gt;There are lot of scenarios when we have an array of items and we need to check whether every item in that array satisfy a particular condition. &lt;/p&gt;

&lt;p&gt;We might think that, why not use a for loop and flag to check this? &lt;/p&gt;

&lt;p&gt;But there is an easier and much cleaner way to achieve this using Array.every().&lt;/p&gt;

&lt;p&gt;Similarly, if we need to check if at least &lt;strong&gt;some&lt;/strong&gt; items in an array satisfy a condition, we can use the Array.some() method. &lt;/p&gt;

&lt;p&gt;Let us understand this better with some examples -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// We have a sample Array of persons from country ABC&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;sampleArray&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;John&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;occupation&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Doctor&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;31&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;sex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;male&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;country&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ABC&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Jane&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;occupation&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Doctor&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;26&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;sex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;female&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;country&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ABC&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Roger&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;occupation&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Engineer&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;28&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;sex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;male&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;country&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ABC&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Riya&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;occupation&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Engineer&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;sex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;female&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;country&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ABC&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;// I want to find out if all of them are from country "ABC"&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;countryCheck&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;sampleArray&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;every&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;country&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ABC&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;All are from the same country? &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;countryCheck&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;// I want to check if all are engineers&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;engineerCheck&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;sampleArray&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;every&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;occupation&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Engineer&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;All are Engineers? &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;engineerCheck&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;// I want to check if at least some women are engineers&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;womenEngineers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;sampleArray&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;some&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;occupation&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Engineer&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sex&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;female&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Do we have at least some women engineers?&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;womenEngineers&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;// I want to check if any of them are advocates&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;lawyerCheck&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;sampleArray&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;some&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;occupation&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Lawyer&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Do we have any lawyers?&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;lawyerCheck&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zLwGFlji--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ymx1h6qlgbbjenf2vtjf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zLwGFlji--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ymx1h6qlgbbjenf2vtjf.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#syntax-of-arrayevery-and-arraysome"&gt;
  &lt;/a&gt;
  Syntax of Array.every() and Array.some()
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Syntax&lt;/span&gt;
&lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;every&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;callback&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;currentElement&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;array&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// currentElement - current item in the array that we are iterating over over&lt;/span&gt;
  &lt;span class="c1"&gt;// index - index of the current item - optional&lt;/span&gt;
  &lt;span class="c1"&gt;// array - array that we are iterating over - optional&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; 

&lt;span class="c1"&gt;// example usage&lt;/span&gt;
&lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;every&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;currentElement&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;currentElement&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Syntax&lt;/span&gt;
&lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;some&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;callback&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;currentElement&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;array&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// currentElement - current item in the array that we are iterating over over&lt;/span&gt;
  &lt;span class="c1"&gt;// index - index of the current item - optional&lt;/span&gt;
  &lt;span class="c1"&gt;// array - array that we are iterating over - optional&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; 

&lt;span class="c1"&gt;// example usage&lt;/span&gt;
&lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;some&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;currentElement&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;currentElement&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Hope you guys learned something new today. Keep coding!!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>tutorial</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Top 3 Ways to align item to center ( responsively )</title>
      <author>CoderZ90</author>
      <pubDate>Thu, 15 Jul 2021 03:40:45 +0000</pubDate>
      <link>https://dev.to/official_fire/top-3-ways-to-align-item-to-center-responsively-1neg</link>
      <guid>https://dev.to/official_fire/top-3-ways-to-align-item-to-center-responsively-1neg</guid>
      <description>&lt;p&gt;Hello üëã Guys This is my first blog I am writing hope you found it useful and helpful. So in this blog we are going to learn how to center any item to the center responsively.&lt;/p&gt;

&lt;p&gt;The most popular way to center is using flex in which you just need 3 lines of code to center it &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Number One:-&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; .center-item {
    display: flex;
    align-item: center;
    justify-content: center;
 }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is method just uses 3 lines of CSS codes and BOOM! üåü your item is not centered Horizontally and vertically in the webpage ( responsively )&lt;/p&gt;

&lt;p&gt;Now second way is using position absolute method in this method the parent element should have &lt;code&gt;position: relative&lt;/code&gt; and then the item you are centering should have &lt;code&gt;position: absolute&lt;/code&gt; to center it &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Number Two:&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; .parent-element {
    position: relative;
 }

 .center-item-container {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
 }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;üëÜ Here you see that the parent element have position relative to it and the center item ( the item we need to center ) has position absolute if you not put this then it will not work&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Now if you want to see how to center the item to center by using just &lt;em&gt;2&lt;/em&gt; lines of codes, then here it is üòä&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; .center-item-container {
   display: grid;
   place-items: center;
 }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Thankyou!ü•∞ For Giving your time and reading this blog hope you found it useful i also have my own Youtube channel named Coding Fire please subscribe -&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtube.com/c/Codingfire?sub_confirmation=1"&gt;https://youtube.com/c/Codingfire?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;

</description>
      <category>css</category>
      <category>webdev</category>
    </item>
    <item>
      <title>How to implement copy and paste in a web application</title>
      <author>hillary</author>
      <pubDate>Thu, 15 Jul 2021 03:05:04 +0000</pubDate>
      <link>https://dev.to/hills2003/how-to-implement-copy-and-paste-in-a-web-application-37aj</link>
      <guid>https://dev.to/hills2003/how-to-implement-copy-and-paste-in-a-web-application-37aj</guid>
      <description>&lt;p&gt;Ever wondered how to implement copy and paste functionality in any of your web applications?&lt;br&gt;
      yes , I have&lt;br&gt;
It is pretty much easier than it sounds , we only have to access the navigator.clipboard object to perform this.&lt;/p&gt;

&lt;p&gt;1 copy&lt;/p&gt;

&lt;p&gt;navigator.clipboard.writeText(e.target.value);&lt;/p&gt;

&lt;p&gt;And that's all you need to copy whatsoever to the browsers clipboard&lt;/p&gt;

&lt;p&gt;2 paste&lt;/p&gt;

&lt;p&gt;This is almost same as the previous&lt;br&gt;
navigator.clipboard.readText().then((text)=&amp;gt;console.log(text)) &lt;br&gt;
and there you have it , what you copied in your browsers console.&lt;/p&gt;

&lt;p&gt;Easy peazy!!!&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>react</category>
      <category>javascript</category>
    </item>
    <item>
      <title>What are Cookies?</title>
      <author>Tannu Daral</author>
      <pubDate>Thu, 15 Jul 2021 01:45:15 +0000</pubDate>
      <link>https://dev.to/tannudaral/what-are-cookies-3fk9</link>
      <guid>https://dev.to/tannudaral/what-are-cookies-3fk9</guid>
      <description>&lt;p&gt;When browsing social media, shopping, or doing almost anything else online, you might have seen a websites requesting permission to collect and use your cookies. Like many people, you probably clicked on the "approve" button and continued to do what you wanted to do. But did you ever think about what cookies are, and what companies and websites are actually collecting from your device? Why are they even needed? &lt;/p&gt;

&lt;p&gt;Let's dive in...&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---6jRcj2c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zyoou54csozl51fypyma.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---6jRcj2c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zyoou54csozl51fypyma.png" alt="cookies that you eat graphic"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;What are Cookies?&lt;/strong&gt;&lt;br&gt;
In short, cookies are tiny pieces of data stored on a device by a web browser. They are usually text files, and they are most commonly used to identify your device on a network, like an identification card(like the Aadhar card number for Indians).&lt;/p&gt;

&lt;p&gt;When you browse the web on your computer, small pieces of information are stored. These pieces range from saved usernames and passwords to the likes and dislikes you left on the page.&lt;/p&gt;

&lt;p&gt;One analogy that I can provide you for visualizing what cookies are is imagine yourself visiting your school canteen, where you visit quite often. When you enter, the canteen worker will probably already know that you favorite food is samosa, you are a fan of their pastries, and you like to sit on that table in the corner. They do not know these facts about you by reading your mind, rather, they know it because you have done these things before, multiple times.&lt;/p&gt;

&lt;p&gt;These are how cookies work. Over time, as you repeat actions and visit websites, the data from stored cookies can be used to create a virtual profile of you. Your likes, your dislikes, your family members, your pets, what you need, what you want can all be inferred from the cookies.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How are Cookies Sent and Stored?&lt;/strong&gt;&lt;br&gt;
Cookies are created whenever you visit a website. When you visit a website for the first time, the server the website is hosted on sends back the webpage you requested and a small text file, known as a cookie. The next time you visit the website, your browser will send a request for the website along with the cookie. These cookies identify who you are, and provide whatever data that the website may want or need to function properly.&lt;/p&gt;

&lt;p&gt;These cookies are all stored locally on your device, and are only sent to the web server when a website requests it. These cookies are stored as dictionaries, or key:value pairs. That way, whenever a website requests a specific piece of data, the data can be identified and sent as quickly as possible.&lt;/p&gt;

&lt;p&gt;All cookies are stored locally, which means that your data is only stored on your computer. However, this data can be sent to any website whenever they request it, which is what all the privacy scandals are about- sending enough user data to a website to learn enough to breach someone's privacy.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What are Cookies Used for?&lt;/strong&gt;&lt;br&gt;
Cookies have many uses, most of which you should be aware of. The three main uses of cookies are below (via Kaspersky)&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Session management cookies&lt;/strong&gt; are cookies stored only for your web browsing session (from when you open your browser to when you close it). These cookies allow websites to have auto-login features and save user preferences, for example, whether or not you turned on dark mode the last time you visited Reddit.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Personalisation cookies&lt;/strong&gt; are cookies that store user data, more specifically, user data on what you have searched up on the web. These cookies are most commonly used to provide personalized advertisements.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Tracking&lt;/strong&gt;: Shopping sites use cookies to track items users previously viewed, allowing the sites to suggest other goods they might like and keep items in shopping carts while they continue shopping.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Problems with Cookies&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8u1mF-GV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d3loh8ry2zt5pb7ldpjt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8u1mF-GV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d3loh8ry2zt5pb7ldpjt.png" alt="problem with cookies graphic"&gt;&lt;/a&gt;&lt;br&gt;
Cookies are essential to the internet today, but they still have problems. Below are some of the most common problems.&lt;/p&gt;

&lt;p&gt;Since cookies are stored locally, if an attacker gets access to the raw text cookies on your device, they can get an authorization for certain websites allowing them to log in as you. This is the same concept by which "keep me signed in" buttons work, allowing a user to send a cookie with an authorization instead of logging in again.&lt;/p&gt;

&lt;p&gt;When a website receives a request/action in the form of cookies, the server cannot distinguish whether the user requested this action in the current session or whether the cookies saved on the user's computer has requested it. Due to this, an attacker can simply change the content of the cookies so that the user's computer will be sending requests to the website that the user did not request for.&lt;/p&gt;

&lt;p&gt;The model of you that can be made using your cookies is extremely advanced and specific. This data is worth a lot, and can be sold to advertising agencies to create targeted advertisements.&lt;/p&gt;

&lt;p&gt;You can find read further about cookies in some other blogs such as the one by &lt;a href="https://www.kaspersky.com/resource-center/definitions/cookies"&gt;Kaspersky&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Happy Coding! :)&lt;/p&gt;

</description>
      <category>codenewbie</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Go program start from main function and stop when main  function exit</title>
      <author>Weerasak Chongnguluam</author>
      <pubDate>Thu, 15 Jul 2021 01:07:30 +0000</pubDate>
      <link>https://dev.to/iporsut/go-program-start-from-main-function-and-stop-when-main-function-exit-2d28</link>
      <guid>https://dev.to/iporsut/go-program-start-from-main-function-and-stop-when-main-function-exit-2d28</guid>
      <description>&lt;p&gt;‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô ‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏à‡∏∞‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏∞‡πÑ‡∏£ ‡∏°‡∏±‡∏ô‡∏à‡∏∞‡∏°‡∏µ‡∏ß‡∏á‡∏à‡∏£‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï (life cycle) ‡∏Ç‡∏≠‡∏á‡∏°‡∏±‡∏ô‡∏ß‡πà‡∏≤‡∏à‡∏∞‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏∏‡∏î‡πÑ‡∏´‡∏ô ‡πÅ‡∏•‡∏∞ ‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡πÑ‡∏´‡∏ô ‡πÄ‡∏™‡∏°‡∏≠&lt;/p&gt;

&lt;p&gt;‡∏ñ‡πâ‡∏≤‡πÄ‡∏£‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à life cycle ‡∏Ç‡∏≠‡∏á‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏° ‡∏Ç‡∏≠‡∏á‡∏†‡∏≤‡∏©‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡πÉ‡∏ä‡πâ ‡∏´‡∏£‡∏∑‡∏≠ ‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à life cycle ‡∏Ç‡∏≠‡∏á runtime ‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡πÉ‡∏ä‡πâ ‡πÄ‡∏£‡∏≤‡∏Å‡πá‡∏à‡∏∞‡πÑ‡∏•‡πà‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡πÑ‡∏î‡πâ‡∏á‡πà‡∏≤‡∏¢‡∏Ç‡∏∂‡πâ‡∏ô‡πÄ‡∏¢‡∏≠‡∏∞‡πÄ‡∏•‡∏¢&lt;/p&gt;

&lt;p&gt;‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏î‡πâ‡∏ß‡∏¢ Go ‡∏ô‡∏±‡πâ‡∏ô‡∏à‡∏∞‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô main ‡πÉ‡∏ô package main ‡πÅ‡∏•‡∏∞‡∏à‡∏∞‡∏´‡∏¢‡∏∏‡∏î‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠ main ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô ‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏à‡∏∞‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏≤‡∏£ return ‡∏õ‡∏Å‡∏ï‡∏¥, ‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å os.Exit ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô ‡∏´‡∏£‡∏∑‡∏≠‡πÇ‡∏î‡∏ô signal ‡∏à‡∏≤‡∏Å OS ‡πÉ‡∏´‡πâ‡∏´‡∏¢‡∏∏‡∏î‡∏ó‡∏≥‡∏á‡∏≤‡∏ô&lt;/p&gt;

&lt;p&gt;‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏ä‡πà‡∏ô‡πÇ‡∏Ñ‡πâ‡∏î‡πÅ‡∏ö‡∏ö‡∏ô‡∏µ‡πâ&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;package&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;"fmt"&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Hello, playground"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏≤‡∏£‡∏±‡∏ô‡∏Å‡πá‡πÑ‡∏î‡πâ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° &lt;code&gt;Hello, playground&lt;/code&gt; ‡πÉ‡∏ô‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡∏ó‡∏µ‡πà standard output ‡πÅ‡∏ï‡πà‡∏ñ‡πâ‡∏≤‡πÄ‡∏£‡∏≤‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ï‡∏£‡∏á &lt;code&gt;fmt.Println&lt;/code&gt; ‡πÉ‡∏´‡πâ‡πÑ‡∏õ‡πÑ‡∏õ‡∏£‡∏±‡∏ô‡πÉ‡∏ô‡∏≠‡∏µ‡∏Å goroutine ‡∏•‡πà‡∏∞ ‡πÅ‡∏ö‡∏ö‡∏ô‡∏µ‡πâ&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;package&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;"fmt"&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;go&lt;/span&gt; &lt;span class="k"&gt;func&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Hello, playground"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}()&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;‡πÄ‡∏ß‡∏•‡∏≤‡∏£‡∏±‡∏ô‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡πÄ‡∏´‡πá‡∏ô‡πÄ‡∏Å‡∏¥‡∏î‡∏≠‡∏∞‡πÑ‡∏£‡∏Ç‡∏∂‡πâ‡∏ô‡πÄ‡∏•‡∏¢ ‡∏ô‡∏±‡πà‡∏ô‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏ß‡πà‡∏≤ ‡∏û‡∏≠ main ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô ‡∏°‡∏±‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á goroutine ‡πÉ‡∏´‡∏°‡πà ‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß‡∏°‡∏±‡∏ô‡∏Å‡πá‡∏à‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏£‡∏≠‡πÉ‡∏´‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Ç‡∏≠‡∏á goroutine ‡∏≠‡∏µ‡∏Å‡∏≠‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÄ‡∏•‡∏¢ ‡πÄ‡∏°‡∏∑‡πà‡∏≠ main ‡∏à‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô ‡∏ñ‡∏∑‡∏≠‡∏ß‡πà‡∏≤‡∏à‡∏ö‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏° goroutine ‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏Å‡πá‡∏à‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡πÑ‡∏õ‡πÇ‡∏î‡∏¢‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥&lt;/p&gt;

&lt;p&gt;‡∏ñ‡πâ‡∏≤‡∏≠‡∏¢‡∏≤‡∏Å‡πÉ‡∏´‡πâ main ‡∏£‡∏≠‡πÉ‡∏´‡πâ goroutine ‡∏ó‡∏µ‡πà‡πÅ‡∏¢‡∏Å‡πÑ‡∏õ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à‡∏Å‡πà‡∏≠‡∏ô‡∏Å‡πá‡∏ó‡∏≥‡πÑ‡∏î‡πâ‡πÅ‡∏ö‡∏ö‡∏ô‡∏µ‡πâ&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;package&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;"fmt"&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;done&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nb"&gt;make&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;chan&lt;/span&gt; &lt;span class="k"&gt;struct&lt;/span&gt;&lt;span class="p"&gt;{})&lt;/span&gt;
    &lt;span class="k"&gt;go&lt;/span&gt; &lt;span class="k"&gt;func&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Hello, playground"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nb"&gt;close&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;done&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}()&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt;&lt;span class="n"&gt;done&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;‡πÉ‡∏ä‡πâ channel ‡∏ä‡πà‡∏ß‡∏¢ ‡πÇ‡∏î‡∏¢‡πÉ‡∏´‡πâ main ‡∏£‡∏≠‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤ ‡∏™‡πà‡∏ß‡∏ô‡πÉ‡∏ô goroutine ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à‡∏Å‡πá close channel ‡∏ã‡∏∞‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡πÑ‡∏°‡πà block ‡πÄ‡∏•‡∏¢‡∏ó‡∏≥‡πÉ‡∏´‡πâ main ‡∏à‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡πÑ‡∏î‡πâ&lt;/p&gt;

&lt;p&gt;‡∏ó‡∏µ‡∏ô‡∏µ‡πâ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ñ‡∏±‡∏î‡πÑ‡∏õ ‡πÇ‡∏Ñ‡πâ‡∏î HTTP server ‡∏á‡πà‡∏≤‡∏¢‡πÜ‡πÅ‡∏ö‡∏ö‡∏ô‡∏µ‡πâ&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;package&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;"fmt"&lt;/span&gt;
    &lt;span class="s"&gt;"net/http"&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HandleFunc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ResponseWriter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Fprintln&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Hello, World"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;

    &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ListenAndServe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;":8000"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;‡∏à‡∏∞‡πÄ‡∏´‡πá‡∏ô‡∏ß‡πà‡∏≤ ‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡πÄ‡∏£‡∏≤‡∏°‡∏±‡∏ô‡∏£‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πâ‡∏≤‡∏á‡πÑ‡∏ß‡πâ ‡∏£‡∏≠‡∏£‡∏±‡∏ö request ‡∏°‡∏≤‡∏ó‡∏µ‡πà port 8000 ‡πÅ‡∏•‡πâ‡∏ß‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏î‡πâ‡∏ß‡∏¢‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° &lt;code&gt;Hello, World&lt;/code&gt; ‡πÇ‡∏î‡∏¢‡∏ó‡∏µ‡πà‡∏à‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏≤‡∏™‡∏±‡πà‡∏á ctrl+c ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ OS ‡∏™‡πà‡∏á signal ‡πÑ‡∏õ‡∏à‡∏ö process&lt;/p&gt;

&lt;p&gt;‡πÅ‡∏™‡∏î‡∏á‡∏ß‡πà‡∏≤‡πÇ‡∏Ñ‡πâ‡∏î‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏Å http.ListenAndServe ‡∏°‡∏±‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ô‡∏ô‡∏≤‡∏ô‡πÜ‡πÄ‡∏•‡∏¢‡πÑ‡∏°‡πà‡∏à‡∏ö‡∏à‡∏ô‡∏Å‡∏ß‡πà‡∏≤‡∏à‡∏∞‡∏°‡∏µ signal ‡∏°‡∏≤‡∏´‡∏¢‡∏∏‡∏î‡∏°‡∏±‡∏ô‡∏ô‡∏±‡πà‡∏ô‡πÄ‡∏≠‡∏á ‡∏°‡∏±‡∏ô‡πÄ‡∏•‡∏¢ block main ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏≠‡∏≤‡πÑ‡∏ß‡πâ‡πÉ‡∏´‡πâ‡∏¢‡∏±‡∏á‡∏£‡∏±‡∏ô‡∏≠‡∏¢‡∏π‡πà‡πÑ‡∏°‡πà‡πÑ‡∏õ‡πÑ‡∏´‡∏ô&lt;/p&gt;

&lt;p&gt;‡∏ñ‡πâ‡∏≤‡πÄ‡∏£‡∏≤‡πÑ‡∏•‡πà‡πÇ‡∏Ñ‡πâ‡∏î‡πÉ‡∏ô &lt;code&gt;http.ListenAndServe&lt;/code&gt; ‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡πÑ‡∏ï‡πà‡πÑ‡∏õ‡∏ñ‡∏∂‡∏á‡∏à‡∏∏‡∏î‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏µ‡∏¢‡∏Å method &lt;code&gt;(srv *Server) Serve(l net.Listener) error&lt;/code&gt; ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÇ‡∏Ñ‡πâ‡∏î for loop ‡πÅ‡∏ö‡∏ö‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;rw&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Accept&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;select&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt;&lt;span class="n"&gt;srv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getDoneChan&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;ErrServerClosed&lt;/span&gt;
            &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;ne&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ok&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;ok&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;ne&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Temporary&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;tempDelay&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="n"&gt;tempDelay&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;5&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Millisecond&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="n"&gt;tempDelay&lt;/span&gt; &lt;span class="o"&gt;*=&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;max&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Second&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;tempDelay&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;max&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="n"&gt;tempDelay&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;max&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="n"&gt;srv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;logf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"http: Accept error: %v; retrying in %v"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tempDelay&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tempDelay&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="k"&gt;continue&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;connCtx&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;ctx&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;cc&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;srv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ConnContext&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;cc&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;connCtx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;connCtx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;rw&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;connCtx&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nb"&gt;panic&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"ConnContext returned nil"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;tempDelay&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
        &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;srv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;newConn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rw&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rwc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;StateNew&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;runHooks&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c"&gt;// before Serve can return&lt;/span&gt;
        &lt;span class="k"&gt;go&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;serve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;connCtx&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;‡∏°‡∏±‡∏ô‡∏Ñ‡∏∑‡∏≠ infinity loop ‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏£‡∏≠‡∏£‡∏±‡∏ö request ‡πÅ‡∏•‡πâ‡∏ß‡∏™‡πà‡∏á‡πÑ‡∏õ‡πÇ‡∏õ‡∏£‡πÄ‡∏ã‡∏™‡∏ï‡πà‡∏≠‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ï‡∏≤‡∏° handler ‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤ register ‡πÄ‡∏≠‡∏≤‡πÑ‡∏ß‡πâ‡πÉ‡∏ô main ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ô‡∏±‡πà‡∏ô‡πÄ‡∏≠‡∏á&lt;/p&gt;

&lt;p&gt;‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡∏£‡∏π‡πâ‡∏ß‡πà‡∏≤‡∏ó‡∏∏‡∏Å‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏µ‡πà main ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô ‡πÅ‡∏ï‡πà‡∏Å‡πá‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ß‡πà‡∏≤‡πÄ‡∏£‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡πÑ‡∏•‡πà‡πÇ‡∏Ñ‡πâ‡∏î‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏µ‡πà main ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏™‡∏°‡∏≠‡πÑ‡∏õ ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡πÇ‡∏Ñ‡πâ‡∏î‡πÉ‡∏ô main ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£ initialize ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Ç‡∏≠‡∏á‡∏™‡∏¥‡πà‡∏á‡∏ï‡πà‡∏≤‡∏á‡πÜ‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô business logic ‡∏à‡∏£‡∏¥‡∏á‡πÜ‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏£‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏ô‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö life cycle ‡∏Ç‡∏≠‡∏á‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡πÄ‡∏£‡∏≤‡∏≠‡∏µ‡∏Å‡∏ó‡∏µ‡∏ß‡πà‡∏≤ ‡∏à‡∏∞‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏≠‡∏∞‡πÑ‡∏£ ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡πÅ‡∏ö‡∏ö‡πÑ‡∏´‡∏ô ‡πÄ‡∏ä‡πà‡∏ô‡∏ñ‡πâ‡∏≤‡πÄ‡∏£‡∏≤‡∏ó‡∏≥ Web API ‡πÄ‡∏£‡∏≤‡∏™‡∏ô‡πÉ‡∏à‡πÅ‡∏Ñ‡πà‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á endpoint ‡∏´‡∏ô‡∏∂‡πà‡∏á ‡πÄ‡∏£‡∏≤‡∏Å‡πá‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏µ‡πà main ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Å‡πá‡πÑ‡∏î‡πâ ‡πÅ‡∏ï‡πà‡∏Ç‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏≤‡∏£‡∏π‡πâ‡∏ß‡πà‡∏≤‡∏™‡∏¥‡πà‡∏á‡∏ï‡πà‡∏≤‡∏á‡πÜ‡∏ñ‡∏π‡∏Å setup ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏°‡∏≤‡∏à‡∏≤‡∏Å main ‡∏Å‡πà‡∏≠‡∏ô ‡∏Å‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÄ‡∏£‡∏¥‡πà‡∏° life cycle ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö request ‡πÅ‡∏•‡πâ‡∏ß process response ‡∏ô‡∏±‡πà‡∏ô‡πÄ‡∏≠‡∏á&lt;/p&gt;

</description>
      <category>go</category>
    </item>
    <item>
      <title>Dependency Inversion Principle</title>
      <author>Eduardo Juli√£o</author>
      <pubDate>Thu, 15 Jul 2021 00:34:08 +0000</pubDate>
      <link>https://dev.to/eduardojuliao/dependency-inversion-principle-13je</link>
      <guid>https://dev.to/eduardojuliao/dependency-inversion-principle-13je</guid>
      <description>&lt;p&gt;Dependency Inversion Principle (DIP for short) states:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;One should depend upon abstractions and their concrete implementation.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The advantage of Dependency Inversion is that the classes do not need to know about the concrete implementation, just its abstraction.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;UserFileRepository&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;SaveUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;User&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;UserService&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;CreateUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;User&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;UserFileRepository&lt;/span&gt; &lt;span class="n"&gt;repository&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;UserFileRepository&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="n"&gt;repository&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;SaveUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The code above is totally fine, but it does not respect the Dependency Inversion Principle. The User class know about the concrete implementation of the &lt;code&gt;UserFileRepository&lt;/code&gt;, making it too dependent, if anything needs to be changed in &lt;code&gt;UserFileRepository&lt;/code&gt;, the &lt;code&gt;UserService&lt;/code&gt; class will need to be changed.&lt;/p&gt;

&lt;p&gt;We can solve this issue by changing the concrete reference to an &lt;code&gt;interface&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;interface&lt;/span&gt; &lt;span class="nc"&gt;IUserRepository&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;SaveUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;User&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;UserFileRepository&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;IUserRepository&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;SaveUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;User&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Saves User to a file&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;UserService&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;readonly&lt;/span&gt; &lt;span class="n"&gt;IUserRepository&lt;/span&gt; &lt;span class="n"&gt;_userRepository&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;UserService&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;IUserRepository&lt;/span&gt; &lt;span class="n"&gt;userRepository&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;_userRepository&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;userRepository&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;CreateUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;User&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;_userRepository&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;SaveUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;Main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;IUserRepository&lt;/span&gt; &lt;span class="n"&gt;repository&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;UserFileRepository&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;UserService&lt;/span&gt; &lt;span class="n"&gt;userService&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;UserService&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;repository&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;User&lt;/span&gt; &lt;span class="n"&gt;newUser&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;User&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;userService&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;CreateUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;newUser&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now the &lt;code&gt;UserService&lt;/code&gt; is not dependent on the concrete implementation of &lt;code&gt;UserDBRepository&lt;/code&gt; but on its contract &lt;code&gt;IUserRepository&lt;/code&gt;.&lt;br&gt;
If the application needs to change from saving to a file and save it to a database, we can simply create another concrete implementation of the &lt;code&gt;IUserRepository&lt;/code&gt; and pass it as an argument to the &lt;code&gt;UserService&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;interface&lt;/span&gt; &lt;span class="nc"&gt;IUserRepository&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;SaveUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;User&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;UserFileRepository&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;IUserRepository&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;SaveUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;User&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Saves User to a file&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;UserDBRepository&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;IUserRepository&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;SaveUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;User&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Saves User to a database&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;UserService&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;readonly&lt;/span&gt; &lt;span class="n"&gt;IUserRepository&lt;/span&gt; &lt;span class="n"&gt;_userRepository&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;UserService&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;IUserRepository&lt;/span&gt; &lt;span class="n"&gt;userRepository&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;_userRepository&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;userRepository&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;CreateUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;User&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;_userRepository&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;SaveUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;Main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Changed from File to DB repository&lt;/span&gt;
    &lt;span class="n"&gt;IUserRepository&lt;/span&gt; &lt;span class="n"&gt;repository&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;UserDBRepository&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;UserService&lt;/span&gt; &lt;span class="n"&gt;userService&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;UserService&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;repository&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;User&lt;/span&gt; &lt;span class="n"&gt;newUser&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;User&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;userService&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;CreateUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;newUser&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this example, this code can be changed even further, changing the &lt;code&gt;UserService&lt;/code&gt; to have its interface and implement it.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>csharp</category>
    </item>
  </channel>
</rss>
