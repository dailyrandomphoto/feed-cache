<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>OWASP Top 10 Web Application Security Risks</title>
      <author>Mukesh Kumar</author>
      <pubDate>Thu, 19 Aug 2021 19:12:06 +0000</pubDate>
      <link>https://dev.to/hakxcore/owasp-top-10-web-application-security-risks-apj</link>
      <guid>https://dev.to/hakxcore/owasp-top-10-web-application-security-risks-apj</guid>
      <description>&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Injection: Injection flaws, such as SQL, NoSQL, OS, and LDAP injection, occur when untrusted data is sent to an interpreter as part of a command or query. The attacker’s hostile data can trick the interpreter into executing unintended commands or accessing data without proper authorization.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Broken Authentication: Application functions related to authentication and session management are often implemented incorrectly, allowing attackers to compromise passwords, keys, or session tokens, or to exploit other implementation flaws to assume other users’ identities temporarily or permanently.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Sensitive Data Exposure: Many web applications and APIs do not properly protect sensitive data, such as financial, healthcare, and PII. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes. Sensitive data may be compromised without extra protection, such as encryption at rest or in transit, and requires special precautions when exchanged with the browser.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;XML External Entities (XXE): Many older or poorly configured XML processors evaluate external entity references within XML documents. External entities can be used to disclose internal files using the file URI handler, internal file shares, internal port scanning, remote code execution, and denial of service attacks.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Broken Access Control: Restrictions on what authenticated users are allowed to do are often not properly enforced. Attackers can exploit these flaws to access unauthorized functionality and/or data, such as access other users’ accounts, view sensitive files, modify other users’ data, change access rights, etc.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Security Misconfiguration: Security misconfiguration is the most commonly seen issue. This is commonly a result of insecure default configurations, incomplete or ad hoc configurations, open cloud storage, misconfigured HTTP headers, and verbose error messages containing sensitive information. Not only must all operating systems, frameworks, libraries, and applications be securely configured, but they must be patched/upgraded in a timely fashion.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Cross-Site Scripting XSS: XSS flaws occur whenever an application includes untrusted data in a new web page without proper validation or escaping, or updates an existing web page with user-supplied data using a browser API that can create HTML or JavaScript. XSS allows attackers to execute scripts in the victim’s browser which can hijack user sessions, deface web sites, or redirect the user to malicious sites.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Insecure Deserialization: Insecure deserialization often leads to remote code execution. Even if deserialization flaws do not result in remote code execution, they can be used to perform attacks, including replay attacks, injection attacks, and privilege escalation attacks.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Using Components with Known Vulnerabilities: Components, such as libraries, frameworks, and other software modules, run with the same privileges as the application. If a vulnerable component is exploited, such an attack can facilitate serious data loss or server takeover. Applications and APIs using components with known vulnerabilities may undermine application defenses and enable various attacks and impacts.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Insufficient Logging &amp;amp; Monitoring: Insufficient logging and monitoring, coupled with missing or ineffective integration with incident response, allows attackers to further attack systems, maintain persistence, pivot to more systems, and tamper, extract, or destroy data. Most breach studies show time to detect a breach is over 200 days, typically detected by external parties rather than internal processes or monitoring.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
    </item>
    <item>
      <title>Building charts in React with Nivo</title>
      <author>Matt Angelosanto</author>
      <pubDate>Thu, 19 Aug 2021 18:42:35 +0000</pubDate>
      <link>https://dev.to/logrocket/building-charts-in-react-with-nivo-25en</link>
      <guid>https://dev.to/logrocket/building-charts-in-react-with-nivo-25en</guid>
      <description>&lt;p&gt;&lt;strong&gt;Written by &lt;a href="https://blog.logrocket.com/author/leonardomaldonado/"&gt;Leonardo Maldonado&lt;/a&gt;&lt;/strong&gt; ✏️&lt;/p&gt;

&lt;p&gt;The React ecosystem has a very rich and vast community with many open-source libraries available to help us solve a wide range of problems — from the most basic, common problems, such as state management and forms, to the most complex challenges, such as visual representation of data. For the latter, it can be hard to find the right library for the job.&lt;/p&gt;

&lt;p&gt;React libraries are often created and rendered obsolete within a matter of months, and a decision to use a particular library impacts the whole development team. That’s why it’s important to choose the right library for any task or feature you plan to build into your app. Data visualization is no exception.&lt;/p&gt;

&lt;p&gt;In this tutorial, we’ll show you how to use Nivo, a data visualization library for React, by building a few charts and implementing them in a React app. We’ll highlight a few key components and show how they work together to make data more visually appealing to your users.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-use-a-react-chart-library"&gt;
  &lt;/a&gt;
  Why use a React chart library?
&lt;/h2&gt;

&lt;p&gt;The most important benefit of using a library for data visualization in React is the ability to implement a wide variety of charts and graphs without reinventing the wheel. You shouldn’t need to spend hours of your precious time trying to implement a simple bar char. A powerful chart library such as Nivo can help you save time, achieve better results, and create a unique user experience for your React app.&lt;/p&gt;

&lt;p&gt;Representing data in an aesthetically pleasing way can give your application a fresher, more modern look. Nowadays, most companies use some kind of data visualization feature to deliver an insightful and enjoyable user experience.&lt;/p&gt;

&lt;p&gt;Building your own data visualization or chart library is difficult and time-consuming. Many developers who have set out to do so have found that the juice wasn’t worth the squeeze.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-nivo"&gt;
  &lt;/a&gt;
  What is Nivo?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://nivo.rocks/"&gt;Nivo&lt;/a&gt; is a rich set of data visualization components for React applications. It includes a variety of components that can be used to show graphs and data numbers in modern React apps.&lt;/p&gt;

&lt;p&gt;Nivo is built on top of D3.js and comes with powerful extra features such as server-side rendering and declarative charts. It's a highly customizable data visualization library that provides well-written documentation with many examples and responsive data visualization components. It also supports motion and transitions out-of-the-box.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-use-nivo-instead-of-d3"&gt;
  &lt;/a&gt;
  Why use Nivo instead of D3?
&lt;/h2&gt;

&lt;p&gt;One of the most popular data visualization tools for JavaScript applications is the D3.js library. &lt;a href="https://blog.logrocket.com/using-d3-to-create-a-calendar-app/"&gt;D3 is a powerful chart library&lt;/a&gt; that enables you to bring data to life using HTML, SVG, and CSS.&lt;/p&gt;

&lt;p&gt;The only problem with D3.js is that it has a steep learning curve and your code is bound to become quite complex. D3.js makes heavy use of SVG, HTML, and CSS. To use the library correctly, you must have a good understanding of how SVGs and the DOM work.&lt;/p&gt;

&lt;p&gt;Don’t get me wrong — D3.js is a very powerful and useful library for building data visualization in modern applications. But most of the time, you don't want to spend hours trying to create a simple bar chart. React is all about reusability, and Nivo enables you to create reusable components and, in doing so, eliminate hours of debugging.&lt;/p&gt;

&lt;p&gt;Nivo is a better choice for data visualization in React because it removes the complexity of building components. with Nivo, you can work more efficiently, customize your components, and create a wide variety of data visualizations with ease.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#installing-nivo"&gt;
  &lt;/a&gt;
  Installing Nivo
&lt;/h2&gt;

&lt;p&gt;The first step to using Nivo in your React app is to install it in your project:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;yarn&lt;/span&gt; &lt;span class="nx"&gt;add&lt;/span&gt; &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;nivo&lt;/span&gt;&lt;span class="sr"&gt;/cor&lt;/span&gt;&lt;span class="err"&gt;e
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When we install the core package, it doesn't come with all the components of the library. This might sound like a disadvantage, but it’s actually a good thing.&lt;/p&gt;

&lt;p&gt;We don’t want to add a heave package that would increase our bundle size just to use a single component. Instead, we can add the specific package that we need to use a specific component.&lt;/p&gt;

&lt;p&gt;Let's add our first Nivo component package to our React application.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#building-a-bar-chart"&gt;
  &lt;/a&gt;
  Building a bar chart
&lt;/h2&gt;

&lt;p&gt;To start, we’ll add the &lt;a href="https://nivo.rocks/bar/"&gt;bar chart component&lt;/a&gt; to use it in our React application:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;yarn&lt;/span&gt; &lt;span class="nx"&gt;add&lt;/span&gt; &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;nivo&lt;/span&gt;&lt;span class="sr"&gt;/ba&lt;/span&gt;&lt;span class="err"&gt;r
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The bar chart component has many features. It can show data stacked or side by side. It supports both vertical and horizontal layouts and can be customized to render any valid SVG element.&lt;/p&gt;

&lt;p&gt;We're going to import the &lt;code&gt;bar&lt;/code&gt; component into our file so we can start to create our first bar chart using Nivo.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;ResponsiveBar&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@nivo/bar&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To get started with the bar component, we need a single prop: &lt;code&gt;data&lt;/code&gt;. The &lt;code&gt;data&lt;/code&gt; prop is an array of objects that we pass to the &lt;code&gt;ResponsiveBar&lt;/code&gt; component. Each object should have a lest one key property to index the data and a key property to determine each series.&lt;/p&gt;

&lt;p&gt;We're going to use the following object:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;day&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Monday&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;degress&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;59&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;day&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Tuesday&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;degress&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;61&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;day&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Wednesday&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;degress&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;55&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;day&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Thursday&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;degress&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;78&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;day&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Friday&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;degress&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;71&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;day&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Saturday&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;degress&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;56&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;day&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Sunday&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;degress&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;67&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We pass this &lt;code&gt;data&lt;/code&gt; array to our &lt;code&gt;ResponsiveBar&lt;/code&gt; component. The &lt;code&gt;ResponsiveBar&lt;/code&gt; component needs an &lt;code&gt;indexBy&lt;/code&gt; string to index the data and a &lt;code&gt;keys&lt;/code&gt; property, which is an array of string to use to determine each series.&lt;/p&gt;

&lt;p&gt;We're going to pass our &lt;code&gt;degrees&lt;/code&gt; property as keys and we want to index our data by &lt;code&gt;days&lt;/code&gt;. Our component will end up like this after all that:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Bar&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ResponsiveBar&lt;/span&gt;
      &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="nx"&gt;keys&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;degress&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;
      &lt;span class="nx"&gt;indexBy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;day&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
      &lt;span class="nx"&gt;margin&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="na"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;130&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;
      &lt;span class="nx"&gt;padding&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mf"&gt;0.4&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="nx"&gt;valueScale&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;linear&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;
      &lt;span class="nx"&gt;colors&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#3182CE&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
      &lt;span class="nx"&gt;animate&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="nx"&gt;enableLabel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="nx"&gt;axisTop&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="nx"&gt;axisRight&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="nx"&gt;axisLeft&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;
        &lt;span class="na"&gt;tickSize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;tickPadding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;tickRotation&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;legend&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;degrees&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;legendPosition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;middle&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;legendOffset&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;40&lt;/span&gt;
      &lt;span class="p"&gt;}}&lt;/span&gt;
    &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we have a beautiful and powerful data visualization component using Nivo! As you can see, with just a few lines of code, we can achieve a powerful result like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GfkEjs8E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/08/react-nivo-bar-chart-example.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GfkEjs8E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/08/react-nivo-bar-chart-example.png" alt="Example of a Bar Chart Created With Nivo and React"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#building-a-pie-chart"&gt;
  &lt;/a&gt;
  Building a pie chart
&lt;/h2&gt;

&lt;p&gt;A pie chart displays numerical data as slices of a single circle. This type of data visualization is applicable in virtually all industries and for a wide variety of use cases.&lt;/p&gt;

&lt;p&gt;Nivo has a &lt;a href="https://nivo.rocks/pie/"&gt;pie chart component&lt;/a&gt;, which you can install with the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;yarn&lt;/span&gt; &lt;span class="nx"&gt;add&lt;/span&gt; &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;nivo&lt;/span&gt;&lt;span class="sr"&gt;/pi&lt;/span&gt;&lt;span class="err"&gt;e
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Similar to the &lt;code&gt;bar&lt;/code&gt; component, the &lt;code&gt;pie&lt;/code&gt; component requires a few props to work: the &lt;code&gt;data&lt;/code&gt; array of objects and the &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; for showing your pie chart.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;data&lt;/code&gt; object that we pass to the pie component can be a little bit different. We can use many properties, such as &lt;code&gt;id&lt;/code&gt;, &lt;code&gt;label&lt;/code&gt;, &lt;code&gt;value&lt;/code&gt;, and &lt;code&gt;color&lt;/code&gt;, to customize our pie chart.&lt;/p&gt;

&lt;p&gt;We have an array of objects, and each object has a specific property that is going to be used in our pie chart:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  The &lt;code&gt;id&lt;/code&gt; property is a unique value for each object of our array&lt;/li&gt;
&lt;li&gt;  The &lt;code&gt;value&lt;/code&gt; property is the value of our object that is going to be rendered on our chart&lt;/li&gt;
&lt;li&gt;  The &lt;code&gt;color&lt;/code&gt; object is a string that we are going to pass as the color of our object on our chart&lt;/li&gt;
&lt;li&gt;  The &lt;code&gt;label&lt;/code&gt; property is the label name of our object
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;java&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;java&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;195&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hsl(90, 70%, 50%)&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;erlang&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;erlang&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;419&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hsl(56, 70%, 50%)&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ruby&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ruby&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;407&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hsl(103, 70%, 50%)&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;haskell&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;haskell&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;474&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hsl(186, 70%, 50%)&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;go&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;go&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;71&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hsl(104, 70%, 50%)&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can also customize our &lt;code&gt;pie&lt;/code&gt; component by passing properties such as &lt;code&gt;padAngle&lt;/code&gt; and &lt;code&gt;cornerRadius&lt;/code&gt;. The &lt;code&gt;padAngle&lt;/code&gt; prop determines the angle between each object in our chart. The &lt;code&gt;cornerRadius&lt;/code&gt; prop is the value we can pass as the border radius of each object.&lt;/p&gt;

&lt;p&gt;Our final component ends up like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Pie&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ResponsivePie&lt;/span&gt;
      &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;pieData&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="nx"&gt;margin&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="na"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;80&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;
      &lt;span class="nx"&gt;innerRadius&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="nx"&gt;padAngle&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mf"&gt;0.7&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="nx"&gt;cornerRadius&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="nx"&gt;activeOuterRadiusOffset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="nx"&gt;borderWidth&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="nx"&gt;borderColor&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="na"&gt;from&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;color&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;modifiers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;darker&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.2&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;
      &lt;span class="nx"&gt;arcLinkLabelsSkipAngle&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="nx"&gt;arcLinkLabelsTextColor&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#333333&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
      &lt;span class="nx"&gt;arcLinkLabelsThickness&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="nx"&gt;arcLinkLabelsColor&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="na"&gt;from&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;color&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;
      &lt;span class="nx"&gt;arcLabelsSkipAngle&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="nx"&gt;arcLabelsTextColor&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="na"&gt;from&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;color&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;modifiers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;darker&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;
    &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The final result should look like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pWjvlvZm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/08/react-nivo-pie-chart-example.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pWjvlvZm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/08/react-nivo-pie-chart-example.png" alt="Example of a Pie Chart Created With Nivo and React"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Nivo provides many different components for creating data visualization in React applications. Its vast list of components includes a &lt;a href="https://nivo.rocks/calendar/"&gt;calendar component&lt;/a&gt;, a &lt;a href="https://nivo.rocks/choropleth/"&gt;Choropleth component&lt;/a&gt; (a divided geographical area component), a &lt;a href="https://nivo.rocks/treemap/"&gt;tree map component&lt;/a&gt;, and many more.&lt;/p&gt;

&lt;p&gt;You can apply most of the techniques we learned in this tutorial to create other types of data visualization components besides the bar and pie chart. The idea here was to give a glimpse of what you can achieve using Nivo and how powerful this data visualization library is.&lt;/p&gt;

&lt;p&gt;There is no right or wrong chart library for a given task; it all depends on the results you’re aiming to achieve and the requirements of your project. That said, the tools and features available with Nivo make it an excellent chart library for creating stunning, impactful data visualizations in React.&lt;/p&gt;

&lt;p&gt;Nivo is open-source and the community around it is very active and helpful. The documentation is well-written and you can learn how to use some components in mere minutes. At the end of the day, the wide selection of components and variety of use cases they serve makes Nivo one of the best React chart libraries hands down.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#full-visibility-into-production-react-apps"&gt;
  &lt;/a&gt;
  Full visibility into production React apps
&lt;/h2&gt;

&lt;p&gt;Debugging React applications can be difficult, especially when users experience issues that are hard to reproduce. If you’re interested in monitoring and tracking Redux state, automatically surfacing JavaScript errors, and tracking slow network requests and component load time, &lt;a href="https://www2.logrocket.com/react-performance-monitoring"&gt;try LogRocket&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www2.logrocket.com/react-performance-monitoring"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5ceXkt4H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6v4gw3tgq2topvafgpgz.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;a href="https://www2.logrocket.com/react-performance-monitoring"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8FGBNR-I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2017/03/1d0cd-1s_rmyo6nbrasp-xtvbaxfg.png" alt="LogRocket Dashboard Free Trial Banner"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www2.logrocket.com/react-performance-monitoring"&gt;LogRocket&lt;/a&gt; is like a DVR for web apps, recording literally everything that happens on your React app. Instead of guessing why problems happen, you can aggregate and report on what state your application was in when an issue occurred. LogRocket also monitors your app's performance, reporting with metrics like client CPU load, client memory usage, and more.&lt;/p&gt;

&lt;p&gt;The LogRocket Redux middleware package adds an extra layer of visibility into your user sessions. LogRocket logs all actions and state from your Redux stores.&lt;/p&gt;

&lt;p&gt;Modernize how you debug your React apps — &lt;a href="https://www2.logrocket.com/react-performance-monitoring"&gt;start monitoring for free&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Your own HashTable/Dictionary/Map in JavaScript</title>
      <author>AvishkarDalvi</author>
      <pubDate>Thu, 19 Aug 2021 18:39:32 +0000</pubDate>
      <link>https://dev.to/avishkardalvi/your-own-hashtable-dictionary-map-in-javascript-4kk2</link>
      <guid>https://dev.to/avishkardalvi/your-own-hashtable-dictionary-map-in-javascript-4kk2</guid>
      <description>&lt;p&gt;We often use Hashtables/Maps/Dictionaries to store data as they provide fast lookups at O(1). Even arrays provide O(1) lookups but only if you are aware of the index of the element that you are trying to access, otherwise you have to loop through the array and check every element to finally find a match thereby making the time complexity O(n).&lt;br&gt;
In JavaScript, even objects are like maps as even they store data in key-value pairs but the only difference is objects can only have strings as keys whereas maps can have any data type as a key.&lt;br&gt;
Let's implement our very own HashTable.For this, we will declare a JavaScript class with a constructor with just one property that will be an array(an array of arrays to be fair).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;HashTable&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;size&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;size&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;&lt;br&gt;
As we know for O(1) lookup we need to store the key-value pair at a particular index in this array so that we can access the same using that index. Thus whenever we insert a key-value pair in the HashTable, the key is passed to a hash function that generates an array index location where the key will be stored. This particular hash function has to be an idempotent hash function, which means that a given input will always generate the same output. (example: if it generates 104 for 'mango' then it will always generate 104 for 'mango', the output will not change over time).&lt;br&gt;
Let's implement the hash function, I am using the below logic you can use any hashing logic you wish.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;hash&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="nx"&gt;hash&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;hash&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;charCodeAt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;&lt;br&gt;
Java guys can make this hash function private, as it will only be used internally. Notice that we use &lt;strong&gt;% this.data.length&lt;/strong&gt; so that the hash value which will be used as the array index of the list &lt;strong&gt;this.data&lt;/strong&gt; does exceed the length of &lt;strong&gt;this.data&lt;/strong&gt;.&lt;br&gt;
Now, let's use this hash function to insert key-value pairs in our HashTable by implementing the set method. This method takes two parameters namely the key and value, in which the key is passed to the hash function which generates a number that is the index position of the &lt;strong&gt;this.data&lt;/strong&gt; array and we will store this key-value pair as an array at the index location i.e &lt;strong&gt;[key, value]&lt;/strong&gt; at &lt;strong&gt;this.data[hashValueOfKey]&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;address&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;address&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;address&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;address&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;&lt;br&gt;
Here we calculate the hash for the key, check if something exists at that calculated hash index of that array, if not then we create an array at that index place the key-value pair inside it. If the array index already holds an array of key-value pairs then we push the new array of key-value pairs inside the array present at that index of &lt;strong&gt;this.data&lt;/strong&gt;.&lt;br&gt;
Lastly, let's implement the get function that accepts the key as a parameter and retrieves the value that we inserted alongside that key. In this function first, we calculate the hash for key passed as our hash function is an idempotent function thus it will generate the same value(index of &lt;strong&gt;this.data&lt;/strong&gt;) that was generated at the time of insertion of the key-value pair in case of set method. Then if we find an array present that at the generated index location of &lt;strong&gt;this.data&lt;/strong&gt; then we iterate over that array(this array contains arrays that have two elements key and value i.e [key, value]) and check if the key passe to our get function matches with the first element of any of the subarrays, as the first element is the key and the second element is the value. If we find a match then we return the second element i.e value of that array else we return undefined.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;address&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;currentBucket&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;address&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;currentBucket&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;currentBucket&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;currentBucket&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;currentBucket&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;&lt;br&gt;
In this way, we have implemented the HashTable with O(1) insertion and lookup, below is the full code&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;HashTable&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;size&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;size&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;hash&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="nx"&gt;hash&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;hash&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;charCodeAt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;address&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;address&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;address&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;address&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;address&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;currentBucket&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;address&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;currentBucket&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;currentBucket&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;currentBucket&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;currentBucket&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;myHashTable&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;HashTable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;myHashTable&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;grapes&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;myHashTable&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;grapes&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;myHashTable&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;apples&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;myHashTable&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;apples&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>javascript</category>
      <category>programming</category>
      <category>map</category>
      <category>hasthable</category>
    </item>
    <item>
      <title>How to Become an Intermediate Level React Developer from Zero Knowledge</title>
      <author>Maniruzzaman Akash</author>
      <pubDate>Thu, 19 Aug 2021 18:35:23 +0000</pubDate>
      <link>https://dev.to/maniruzzamanakash/how-to-become-an-intermediate-level-react-developer-from-zero-knowledge-43n2</link>
      <guid>https://dev.to/maniruzzamanakash/how-to-become-an-intermediate-level-react-developer-from-zero-knowledge-43n2</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;This is a complete crash course series tutorial about React to be compatible with Latest React Hooks and all...&lt;/p&gt;

&lt;p&gt;In this tutorial, I’ve shown &lt;strong&gt;many more important concepts&lt;/strong&gt; of React JS and &lt;strong&gt;completed 3 projects&lt;/strong&gt; using React JS. Let’s dive into it and Learn to React Together.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#demo-final-portfolio-website"&gt;
  &lt;/a&gt;
  Demo Final Portfolio Website
&lt;/h2&gt;

&lt;p&gt;Before Going to In-depth video series, first, you can check our Live React Developed portfolio site on that video tutorial — &lt;a href="https://maniruzzamanakash.github.io/React-Crash-Course"&gt;https://maniruzzamanakash.github.io/React-Crash-Course&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#full-crash-course-video"&gt;
  &lt;/a&gt;
  Full Crash Course Video
&lt;/h2&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/B9xGzJBJFyY"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#full-tutorial"&gt;
  &lt;/a&gt;
  Full Tutorial
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://devsenv.com/tutorials/learn-react-complete-crash-course-with-three-complete-project-devsenv"&gt;https://devsenv.com/tutorials/learn-react-complete-crash-course-with-three-complete-project-devsenv&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#topics-discussed-in-this-react-js-crash-course"&gt;
  &lt;/a&gt;
  Topics Discussed in this React JS Crash Course
&lt;/h2&gt;

&lt;h4&gt;
  &lt;a href="#prerequisite-to-start"&gt;
  &lt;/a&gt;
  Pre-Requisite to Start
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Setup Visual Studio Code Editor with Better Code Snippet — &lt;a href="https://devsenv.com/tutorials/3-enable-additional-plugins-for-better-react-development-react-basic-to-pro-series"&gt;https://devsenv.com/tutorials/3-enable-additional-plugins-for-better-react-development-react-basic-to-pro-series&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Basic JavaScript Knowledge — &lt;a href="https://www.w3schools.com/js"&gt;https://www.w3schools.com/js&lt;/a&gt;&lt;br&gt;
Basic ES6 Knowledge -&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Let, Const, Var difference and More — &lt;a href="https://devsenv.com/tutorials/4-let-vs-const-vs-var-clear-the-es6-concepts-and-makes-simpler-path-to-learn-react"&gt;https://devsenv.com/tutorials/4-let-vs-const-vs-var-clear-the-es6-concepts-and-makes-simpler-path-to-learn-react&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ES6 Arrow Function — &lt;a href="https://devsenv.com/tutorials/5-es6-basic-arrow-function-in-javascript-react-basic-to-pro"&gt;https://devsenv.com/tutorials/5-es6-basic-arrow-function-in-javascript-react-basic-to-pro&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;How Virtual DOM Works — &lt;a href="https://devsenv.com/tutorials/7-how-react-work-%7C-real-dom-vs-virtual-dom-%7C-coding-structure-%7C-naming-convention"&gt;https://devsenv.com/tutorials/7-how-react-work-%7C-real-dom-vs-virtual-dom-%7C-coding-structure-%7C-naming-convention&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;What is React &amp;amp; What it’s Done&lt;br&gt;
a) React Is a UI Library. Made by Facebook &amp;amp; Now used by millions of Dev.&lt;br&gt;
b) Responsible to make a dynamic page and make the frontend awesome.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#how-to-setup-react"&gt;
  &lt;/a&gt;
  How to Setup React
&lt;/h4&gt;

&lt;p&gt;Setup Node JS — &lt;a href="https://nodejs.org/en/"&gt;https://nodejs.org/en/&lt;/a&gt;&lt;br&gt;
Create-React-App (CRA) Setup&lt;br&gt;
&lt;a href="https://reactjs.org/docs/create-a-new-react-app.html"&gt;https://reactjs.org/docs/create-a-new-react-app.html&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx create-react-app my-app
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#what-is-component-in-react"&gt;
  &lt;/a&gt;
  What is Component in React
&lt;/h4&gt;

&lt;p&gt;React is fully based on component.&lt;br&gt;
Component is a Minimal Part of UI.&lt;br&gt;
It’s Just a Library, Not any Javascript Framework. It only handles the view Part&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#what-is-used-in-react"&gt;
  &lt;/a&gt;
  What is Used in React
&lt;/h4&gt;

&lt;p&gt;JavaScript&lt;br&gt;
JSX Element&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#how-many-components-in-react"&gt;
  &lt;/a&gt;
  How Many Components in React
&lt;/h4&gt;

&lt;p&gt;a) Class-Base Component&lt;br&gt;
b) Functional Component&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#classbase-component"&gt;
  &lt;/a&gt;
  Class-Base Component
&lt;/h4&gt;

&lt;p&gt;Demo Class base component&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#functional-component"&gt;
  &lt;/a&gt;
  Functional Component
&lt;/h4&gt;

&lt;p&gt;Demo Functional Component&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#class-based-component-state-manage-and-important-life-cycle-hook"&gt;
  &lt;/a&gt;
  Class based component State Manage and Important Life Cycle Hook
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;componentDidMount&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#hooks-in-react"&gt;
  &lt;/a&gt;
  Hooks in React
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="nx"&gt;useMemo&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="nx"&gt;useContext&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="nx"&gt;useReducer&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="nx"&gt;useCallback&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#component-to-component-communication-in-react"&gt;
  &lt;/a&gt;
  Component to Component Communication in React
&lt;/h4&gt;

&lt;p&gt;Parent Component to Child Component props&lt;br&gt;
Child Component to Parent Component onHandleClick&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#styling-amp-external-styling-in-react-js"&gt;
  &lt;/a&gt;
  Styling &amp;amp; External Styling in React JS
&lt;/h4&gt;

&lt;p&gt;CSS&lt;br&gt;
Modular CSS&lt;br&gt;
Bootstrap CSS&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#conditional-renderings-in-react"&gt;
  &lt;/a&gt;
  Conditional Renderings in React
&lt;/h4&gt;

&lt;p&gt;View Data in conditional rendering&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#loop-through-data-in-react"&gt;
  &lt;/a&gt;
  Loop through data in React
&lt;/h4&gt;

&lt;p&gt;Loop through Task List Data&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#input-handling-in-react"&gt;
  &lt;/a&gt;
  Input Handling in React
&lt;/h4&gt;

&lt;p&gt;Complete Task Form and&lt;br&gt;
Task List show&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#simple-counter-app-in-react"&gt;
  &lt;/a&gt;
  Simple Counter App in React
&lt;/h4&gt;

&lt;p&gt;Simple Increment and Decrement Counter Project&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#simple-contact-form-in-react"&gt;
  &lt;/a&gt;
  Simple Contact Form in React
&lt;/h4&gt;

&lt;p&gt;Same as the Concept of Task Title Entry Form&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#react-router-setup"&gt;
  &lt;/a&gt;
  React Router Setup
&lt;/h4&gt;

&lt;p&gt;React Router Quick Start — &lt;a href="https://reactrouter.com/web/guides/quick-start"&gt;https://reactrouter.com/web/guides/quick-start&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#complete-a-portfolio-website-using-react-using-fake-data"&gt;
  &lt;/a&gt;
  Complete a portfolio website using React using Fake Data
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;Demo Website Portfolio Link — &lt;a href="https://akash.devsenv.com"&gt;https://akash.devsenv.com&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Demo Fake Data List -&lt;/li&gt;
&lt;li&gt;Use React Bootstrap&lt;/li&gt;
&lt;li&gt;Master Layout of a Portfolio Website Using React
Home Page&lt;/li&gt;
&lt;li&gt;Portfolio Page&lt;/li&gt;
&lt;li&gt;About Page&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#download-project-from-github"&gt;
  &lt;/a&gt;
  Download Project From Github
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/ManiruzzamanAkash/React-Crash-Course.git"&gt;https://github.com/ManiruzzamanAkash/React-Crash-Course.git&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can get their code classes based on topics.&lt;/p&gt;

</description>
      <category>react</category>
      <category>reactlearning</category>
      <category>reacttutorial</category>
      <category>portfolio</category>
    </item>
    <item>
      <title>Pismo’s tech stack – the technologies we use to create our platform</title>
      <author>Aimée Ramos</author>
      <pubDate>Thu, 19 Aug 2021 18:10:24 +0000</pubDate>
      <link>https://dev.to/pismo/pismo-s-tech-stack-the-technologies-we-use-to-create-our-platform-14an</link>
      <guid>https://dev.to/pismo/pismo-s-tech-stack-the-technologies-we-use-to-create-our-platform-14an</guid>
      <description>&lt;p&gt;Author: &lt;strong&gt;Daniela Binatti&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Founder, CTO @Pismo&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I’ve been working in tech for the last 25 years. After a long journey climbing the corporate ladder, I co-founded Pismo 5 years ago.&lt;/p&gt;

&lt;p&gt;Among the challenges of starting a company from scratch, such as ideation, prototypes, discussions, business plans (and more discussions), the freedom to choose the technology stack was the most fun part.&lt;/p&gt;

&lt;p&gt;People ask me how and why we’ve chosen Pismo’s tech stack, but the truth is that it’s as much an art as it’s a science. The decision must consider the company’s stage and, more importantly,  some aspects of the business that are must-haves.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pismo"&gt;
  &lt;/a&gt;
  Pismo
&lt;/h2&gt;

&lt;p&gt;Our dream was ambitious from day one. We were convinced that we would unleash a new era of payments,  delivering the most reliable, innovative, and comprehensive infrastructure for payments in the world.&lt;/p&gt;

&lt;p&gt;That meant replacing 60-year-old legacy systems (most of them written in Cobol) with a set of microservices hosted in public clouds. We would provide services for large banks stuck in ancient systems that struggle to offer their customers new features.&lt;/p&gt;

&lt;p&gt;A  huge responsibility! As of 2018, those systems were still responsible for processing 80% of financial transactions.  Although they were taking far too long to deliver modern products and features, they were very stable systems for fulfilling their intended role.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pismos-musthaves"&gt;
  &lt;/a&gt;
  Pismo’s must-haves
&lt;/h2&gt;

&lt;p&gt;Core processing is a highly sensitive service. A flawed bank statement is not the same as an ill-suited movie recommendation.&lt;/p&gt;

&lt;p&gt;People can get a little upset by interruptions in their favorite streaming services. However, they will be infuriated by any instabilities in their chosen payment method when buying something.&lt;/p&gt;

&lt;p&gt;We must guarantee security, availability, and scalability.&lt;/p&gt;

&lt;p&gt;(A parenthesis on Pismo’s co-founders’ backgrounds: we’re a team of second-time entrepreneurs with a combined 80 years of payment processing experience. We’ve had the unique privilege of building a payments platform from scratch — twice!)&lt;/p&gt;

&lt;p&gt;Most of the players in the payments industry look more like BPO companies than tech businesses. Under the hood, you can find not only tons of old lines of code but also lots of human interventions to keep systems up and running.&lt;/p&gt;

&lt;p&gt;We were out to change all this! Our platform would have to be cloud-native, batchless, highly automated, distributed, and renewable (the last one to guarantee that we wouldn’t become museum pieces, but that can be a topic for another blog post).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bootstrapping"&gt;
  &lt;/a&gt;
  Bootstrapping
&lt;/h2&gt;

&lt;p&gt;In 2016, Pismo’s co-founders bootstrapped the company, so we didn’t have a team to operate infrastructure services. I was responsible for architecture and infrastructure, and Marcelo, one of my partners, was the software engineer in charge of the MVP.&lt;/p&gt;

&lt;p&gt;Given the resources, we needed to make intelligent decisions about the tools, always keeping in mind the big picture and the desired architecture:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Public cloud provider&lt;/strong&gt; (because I’m too old to pet on-premise servers again): AWS.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Programming languages&lt;/strong&gt;: Groovy (and vertx.io) and Golang (because we need high throughput). Actually, by the time we were looking for seed investment, we built the MVP in Ruby but rewrote it in Groovy for production.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Databases&lt;/strong&gt;: RDS, DynamoDB, Redis – We chose the databases carefully, considering the service’s scope and purpose.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Additional managed services&lt;/strong&gt;: SQS, SNS, Lambda, Kinesis, and many others.&lt;/p&gt;

&lt;p&gt;At some point, with a bigger and highly specialized team, we started managing some services internally.  And, after a short period of deploying our services on Kubernetes, we have adopted Istio service mesh since version 1.0.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2021-and-final-thoughts"&gt;
  &lt;/a&gt;
  2021 and final thoughts
&lt;/h2&gt;

&lt;p&gt;At this point, the stack is not the same anymore. We have a multi-cloud platform operating on top of AWS and GCP. We’re adopting a distributed database, and we’ve been using Kubernetes and Istio service mesh for a long time.&lt;/p&gt;

&lt;p&gt;When choosing your tech stack, pay attention to the resources available and the outcome of your project  —  even if you take baby steps, at least you’ll head in the right direction. Try not to put into the equation problems that you will be able to handle in the future (when you have more resources and a bigger team), and, most importantly, have fun 🙂 .&lt;/p&gt;

</description>
      <category>stack</category>
      <category>aws</category>
      <category>security</category>
      <category>go</category>
    </item>
    <item>
      <title>How To Use DORA Engineering Metrics To Improve Your Dev Team </title>
      <author>Nick Hodges</author>
      <pubDate>Thu, 19 Aug 2021 17:52:56 +0000</pubDate>
      <link>https://dev.to/linearb/how-to-use-dora-engineering-metrics-to-improve-your-dev-team-1hkc</link>
      <guid>https://dev.to/linearb/how-to-use-dora-engineering-metrics-to-improve-your-dev-team-1hkc</guid>
      <description>&lt;p&gt;Objective data to measure software development is here, and it’s here to stay.&lt;/p&gt;

&lt;p&gt;For a long time, the notion of using such data was thought to not really be possible. Thought leaders like Martin Fowler and Joel Spolsky basically said it couldn’t be done. Clearly, it’s a challenging task that frustrated software development managers everywhere. Shoot, I wrote an article way back when basically arguing that it is impossible to do.&lt;/p&gt;

&lt;p&gt;Well, I’d continue to argue that it impossible to do. But , with the rise of tooling like git, Jira, and other project management tools, it started becoming clear that the data is there to enable us to get a closer, more data-driven look at what is going on inside software development projects. That data just had to be revealed.&lt;/p&gt;

&lt;p&gt;And of course, people have started doing so. One of the most important and well-known results of that was done by the DevOps Research and Assessment organization — known commonly as DORA. They surveyed thousands of DevOps engineers and leaders over six years, coming up with a set of four metrics that were considered critical to the success of software development projects.&lt;/p&gt;

&lt;p&gt;The four DORA engineering metrics are:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Deployment Frequency&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Mean Lead Time for Changes&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Mean Time to Recovery (MTTR)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Change Failure Rate&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HncXV5Ni--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3200/0%2A0QUTV8QdkqTPS4kv" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HncXV5Ni--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3200/0%2A0QUTV8QdkqTPS4kv" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The first two metrics — Deployment Frequency and Mean Lead Time for Changes — measure the velocity of a team. MTTR and Change Failure rate are a measure of the quality and stability of a project. All four metrics can be derived from mining the tools that you are currently using.&lt;/p&gt;

&lt;p&gt;These four DORA engineering metrics are designed to allow software developers to align their work against the goals of the business. They have become the standard way for CTOs and VPs of Engineering to get a high-level overview of how their organizations are performing. By keeping an eye on the DORA metrics and organizing their work around improving them, development teams can ensure that they are doing the right things to move their projects, and more importantly their business, forward.&lt;/p&gt;

&lt;p&gt;Of course, understanding what the metrics actually measured and what they mean is necessary to make them useful. In addition, knowing the current state of these metrics is required for improving them as you move forward.&lt;/p&gt;

&lt;p&gt;So let’s take a look at these four key measures.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#deployment-frequency"&gt;
  &lt;/a&gt;
  Deployment Frequency
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#what-is-it"&gt;
  &lt;/a&gt;
  What is it?
&lt;/h3&gt;

&lt;p&gt;Deployment Frequency measures the number of times that code is deployed into production. It’s usually reported in “Deployments Per Day”.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5nUYb9e8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/0%2AvOBRkIKMGcULDUUn" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5nUYb9e8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/0%2AvOBRkIKMGcULDUUn" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, production can mean different things to different customers. For a SaaS company, it normally means actually delivering code to the production platform used by actual customers. For other companies, it might mean “made a version available for use by customers”.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-its-important"&gt;
  &lt;/a&gt;
  Why it’s important
&lt;/h3&gt;

&lt;p&gt;Increasing deployment frequency is an indication of team efficiency and confidence in their process. A team that can deploy more frequently is moving work through their pipeline faster and being more efficient about all of their work products.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-is-it-calculated"&gt;
  &lt;/a&gt;
  How is it calculated?
&lt;/h3&gt;

&lt;p&gt;It tallies the total number of deployments an organization does in a single day. As noted, the definition of “deployment” can vary between organizations. This metric can be automated if a team has a Continuous Integration/Continuous Delivery(CI/CD) tool that provides an API into its activity.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-do-you-improve-it"&gt;
  &lt;/a&gt;
  How do you improve it?
&lt;/h3&gt;

&lt;p&gt;If you wish to improve your deployment frequency, you should invest in:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Improving automated test coverage&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Integrating with CI/CD tools&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Automating the release validation phase and release process&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Reducing the error recovery time on production&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#mean-lead-time-for-changes"&gt;
  &lt;/a&gt;
  Mean Lead Time for Changes
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#what-is-it"&gt;
  &lt;/a&gt;
  What is it?
&lt;/h3&gt;

&lt;p&gt;Mean Lead Time for Changes is the average time it takes from code being committed to that code being released into production.&lt;/p&gt;

&lt;p&gt;Some organizations begin tracking the time from the first commit of the project’s code, while others measure it beginning from merging the code to the main branch.&lt;/p&gt;

&lt;p&gt;Many organizations roll Mean Lead Time for Changes into a metric called Cycle Time, which is discussed below.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-its-important"&gt;
  &lt;/a&gt;
  Why it’s important
&lt;/h3&gt;

&lt;p&gt;A lower Mean Lead Time for Changes means that your team is efficient in coding and deploying projects and are adding value to your product in a timely manner. Attempting to lower the average incentivizes teams to properly divide the work, to thoroughly review the code, and to have a fast deployment&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-is-it-calculated"&gt;
  &lt;/a&gt;
  How is it calculated?
&lt;/h3&gt;

&lt;p&gt;Each project is measured from start to finish, and an average of those times is calculated.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-do-you-improve-it"&gt;
  &lt;/a&gt;
  How do you improve it?
&lt;/h3&gt;

&lt;p&gt;This metric can be improved by:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Adding automation to the deployment process&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Ensuring that the CI/CD process is as efficient as possible&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Break projects into smaller and more manageable chunks&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create an efficient code review process&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#mean-time-to-recovery-mttr"&gt;
  &lt;/a&gt;
  Mean Time to Recovery (MTTR)
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#what-is-it"&gt;
  &lt;/a&gt;
  What is it?
&lt;/h3&gt;

&lt;p&gt;This metric measures the average time it takes the team to recover from a failure in the system.&lt;/p&gt;

&lt;p&gt;“Failure” can mean anything from a bug in production to the production system going down.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Hc0orbhn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2048/0%2AsOK6Sl__gYLFQcFw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Hc0orbhn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2048/0%2AsOK6Sl__gYLFQcFw.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-its-important"&gt;
  &lt;/a&gt;
  Why it’s important
&lt;/h3&gt;

&lt;p&gt;Obviously, down time is not good, and the quicker a team can recover from it, the better.&lt;/p&gt;

&lt;p&gt;Keeping an eye on mean time to recovery will encourage the building of more robust systems and increased monitoring of those systems.&lt;/p&gt;

&lt;p&gt;Quick recovery times are a reflection of the team’s ability to diagnose problems and correct them. Measuring mean time to recover can have the effect of making the team more careful and concerned about quality throughout the entire development process.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-is-it-calculated"&gt;
  &lt;/a&gt;
  How is it calculated?
&lt;/h3&gt;

&lt;p&gt;Normally, this metric is tracked by measuring the average time between a production bug report being created in your system and that bug report being resolved. Alternatively, it can be calculated by measuring the time between the report being created and the fix being deployed to production.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-do-you-improve-it"&gt;
  &lt;/a&gt;
  How do you improve it?
&lt;/h3&gt;

&lt;p&gt;MTTR can be made better by:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Building a CI/CD system that quickly reports failure&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Ensure there is a process in place to take immediate action on failures&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Prioritize recovery from failure over all other tasks&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Improve Deployment Time&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#change-failure-rate"&gt;
  &lt;/a&gt;
  Change Failure Rate
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#what-is-it"&gt;
  &lt;/a&gt;
  What is it?
&lt;/h3&gt;

&lt;p&gt;Change Failure Rate measures how often a code change results in a failure in production. Changes that result in a rollback, in production failing, or in production having a bug all contribute to this metric.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-its-important"&gt;
  &lt;/a&gt;
  Why it’s important
&lt;/h3&gt;

&lt;p&gt;This metric is important because all time spent dealing with failures is time not spent delivering new features and value to customers. Obviously, lowering the number of problems in your software is desirable.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-is-it-calculated"&gt;
  &lt;/a&gt;
  How is it calculated?
&lt;/h3&gt;

&lt;p&gt;Normally, this metric is calculated by counting the number of times a deployment results in a failure and dividing by the number of total deployments to get an average number. A lower average is better.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-do-you-improve-it"&gt;
  &lt;/a&gt;
  How do you improve it?
&lt;/h3&gt;

&lt;p&gt;Change Failure Rate is improved when you:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Ensure all new code is covered by automated unit tests&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Improve automated testing as part of your continuous integration process&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Do thorough and complete code reviews to help prevent issues being introduced into production&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#the-benefits-of-tracking-dora-metrics"&gt;
  &lt;/a&gt;
  The Benefits of Tracking DORA Metrics
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#decision-making"&gt;
  &lt;/a&gt;
  Decision Making
&lt;/h2&gt;

&lt;p&gt;Consistently tracking DORA metrics will enable you to make better decisions about where and how to improve your development process. Doing so will reveal bottlenecks, and enable you to focus attention on those places where the process may be stalled. Trends can be identified and the quality of decisions about what was focused on can be validated.&lt;/p&gt;

&lt;p&gt;DORA tracking can help focus both the development team and management on the things that will really drive value. They allow you to make decisions based on data rather than merely a finger in the wind or a gut feeling.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#delivering-value"&gt;
  &lt;/a&gt;
  Delivering Value
&lt;/h2&gt;

&lt;p&gt;DORA measures the value that your team is delivering. If your DORA metrics are favorable, your team is delivering value to your customers and are maintaining the quality necessary not to be distracted from that focus. And that’s pretty much the bottom line for any business — delivering value to your customers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#virtuous-cycle"&gt;
  &lt;/a&gt;
  Virtuous Cycle
&lt;/h2&gt;

&lt;p&gt;When anything gets measured, it will likely be gamed — that is, people will change behavior to optimize that which is measured. Many times this can have a negative, distorting effect on what a development team does&lt;/p&gt;

&lt;p&gt;DORA metrics can be gamed, but the great thing is that you &lt;strong&gt;&lt;em&gt;want&lt;/em&gt;&lt;/strong&gt; them to be gamed. You want your team working to optimize these metrics. Gaming them results in good things. Normally, gaming a metric has a negative impact on teams, but these metrics were carefully devised to do the exact opposite. Since they highlight inefficiencies and wasted time, gaming them will increase efficiency and reduce waste.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#linearb-helps-you-measure-and-improve-dora-engineering-metrics"&gt;
  &lt;/a&gt;
  LinearB helps you measure and improve DORA engineering metrics
&lt;/h2&gt;

&lt;p&gt;DORA Metrics are important, and LinearB allows them to be tracked easily. We give you DORA metrics right out of the box that can be easily displayed and tracked.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6ga6mre3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2048/0%2A4dKyVPbG1fSVcFhD.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6ga6mre3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2048/0%2A4dKyVPbG1fSVcFhD.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A dashboard like this could be useful by giving senior members of your software development organization a higher level view of the DORA metrics for the organization. With this simple view, leaders can see at a glance how the team is doing and what mid-course corrections might need to be made.&lt;/p&gt;

&lt;p&gt;In addition to the actual DORA metrics themselves, LinearB can track other metrics that can help improve your organization’s performance.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--quUAyze4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2048/0%2Ad-PWsgXP1Uu_4ErO.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--quUAyze4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2048/0%2Ad-PWsgXP1Uu_4ErO.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Metrics like Pull Request Size, Pull Request Review Depth and Pull Request Review Time can all be monitored and when improved, will reduce Mean Lead Time for Changes and Deployment Frequency&lt;/p&gt;

&lt;p&gt;Track DORA engineering metrics in your own code repository. &lt;a href="https://linearb.io/get-started-linearb/"&gt;Click here to get started free&lt;/a&gt; and see your Cycle Time drop!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#going-above-and-beyond"&gt;
  &lt;/a&gt;
  Going above and beyond
&lt;/h2&gt;

&lt;p&gt;LinearB goes beyond the DORA metric of Mean Lead Time for Changes to provide Cycle Time.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://linearb.io/blog/cycle-time-measuring-and-improving-team-process/"&gt;Cycle Time&lt;/a&gt; is a powerful metric that measures how long it takes a given unit of code to progress from branch creation to deployment in production. It’s really a measure of how fast a given task or subtask gets delivered to end users. And of course actually delivering functionality is the purpose of every development organization.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1-DEdcJQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3200/0%2A_0e26-n2d2rhschN" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1-DEdcJQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3200/0%2A_0e26-n2d2rhschN" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Cycle Time is divided into four subsections:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Coding Time&lt;/strong&gt; — Normally measured as the time between the first commit to a given branch and the moment a pull request is created for that branch&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Pull Request Pickup Time&lt;/strong&gt; — This is the time between a pull request is created and when the review for that pull request starts&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Pull Request Review Time&lt;/strong&gt; — The time between the pull request review starting and the code being merged&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Deploy Time&lt;/strong&gt; — Deploy time is the span between the merging of the code and that code actually being deployed to production.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Improving Cycle Time has a number of benefits:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Closely tracking coding time encourages you to divide work into smaller, more manageable chunks. Cycle Time goes up if a given branch or project is big and takes a long time. Instead, it encourages smaller bites of work&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It pushes the team to process pull requests in a timely manner. It helps prevent languishing pull requests and pull requests that are too large to review effectively.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Teams that track deployment time are motivated to focus on improving and streamlining build and deployment processes.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Rising Cycle Times can be an early warning system for project difficulties. If I had to pick one thing for a team to measure, it would be Cycle Time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#workerb-improves-dora-metrics"&gt;
  &lt;/a&gt;
  WorkerB improves DORA Metrics
&lt;/h2&gt;

&lt;p&gt;Idle time is the time spent waiting for things to happen in your software development process — pull requests sitting idle and unreviewed is a good example. It is a big killer of two important DORA metrics: Deployment Frequency and Mean Lead Time for Changes.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://linearb.io/blog/workerb-developer-automation/"&gt;WorkerB&lt;/a&gt; is a feature provided by LinearB that can have a drastic, positive effect on reducing idle time and thus improving your DORA metrics. By notifying your team members about repository events, it ensures that the team is immediately aware of the components of Cycle Time (e.g. Pull Request Pickup Time and Pull Request Review Time) and allows them to react in a more timely manner.&lt;/p&gt;

&lt;p&gt;LinearB customers routinely report more that a 50% reduction in CycleTime in their first four months of using WorkerB.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#measure-for-success"&gt;
  &lt;/a&gt;
  Measure for Success
&lt;/h2&gt;

&lt;p&gt;DORA Metrics are based on years of research into what really matters for software development teams. Focusing on them will result in more value being delivered through your development pipeline. More value means happier customers.&lt;/p&gt;

&lt;p&gt;LinearB can help your team track them consistently and thus bring about a profound and lasting impact on your software development process and your business.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://linearb.io/get-started-linearb/"&gt;Sign up for LinearB for free&lt;/a&gt; today.&lt;/p&gt;

&lt;p&gt;If you haven't already heard, Dev Interrupted is hosting &lt;strong&gt;INTERACT&lt;/strong&gt;: The interactive, community-driven, digital conference that takes place September 30th. Designed by engineering leaders, for engineering leaders, INTERACT will feature 10 speakers, 100s of engineers and engineering leaders, and is totally free.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2QYQCtGe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn-images-1.medium.com/max/2400/0%2AnHzak-kDc0MzrG55.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2QYQCtGe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn-images-1.medium.com/max/2400/0%2AnHzak-kDc0MzrG55.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#register-now"&gt;
  &lt;/a&gt;
  &lt;a href="https://devinterrupted.com/event/interact/"&gt;Register Now&lt;/a&gt;
&lt;/h1&gt;




&lt;p&gt;If you haven’t already joined the best developer discord out there, WYD?&lt;/p&gt;

&lt;p&gt;Look, I know we talk about it a lot but we love our developer discord community. With over 1500 members, the Dev Interrupted Discord Community is the best place for Engineering Leaders to engage in daily conversation. No salespeople allowed. &lt;a href="https://discord.gg/tpkmwM6c3g"&gt;Join the community &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gBWLfe0T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2048/0%2AxR_ViPMd2T8ljTzt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gBWLfe0T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2048/0%2AxR_ViPMd2T8ljTzt.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Originally published at &lt;a href="https://linearb.io/blog/dora-engineering-metrics/"&gt;https://linearb.io&lt;/a&gt; on June 17, 2021.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>devops</category>
      <category>git</category>
      <category>monitoring</category>
      <category>management</category>
    </item>
    <item>
      <title>Angular in Few Words</title>
      <author>Nachiket Panchal</author>
      <pubDate>Thu, 19 Aug 2021 17:48:43 +0000</pubDate>
      <link>https://dev.to/nachiket/angular-in-few-words-19d0</link>
      <guid>https://dev.to/nachiket/angular-in-few-words-19d0</guid>
      <description>&lt;p&gt;&lt;a href="https://errorsea.com/angular/"&gt;Angular&lt;/a&gt; is a TypeScript-based open-source front-end framework for single-page applications developed by Google.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#where-to-develop-angular-app"&gt;
  &lt;/a&gt;
  Where to develop Angular App?
&lt;/h3&gt;

&lt;p&gt;We can install Angular using Nodejs into our Windows/Linux/macOS machine.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#which-are-the-important-concepts-of-angular"&gt;
  &lt;/a&gt;
  Which are the important concepts of Angular?
&lt;/h3&gt;

&lt;p&gt;Here are some important concepts of Angular you must learn to be a good angular developer.&lt;/p&gt;

&lt;p&gt;Components, Interpolation, Property Binding, Class Binding, Style Binding, Event Binding, Template Reference Variables, Two-way Data Binding, ngFor Directive, ngIf Directive, ngSwitch Directive, Pipes, Routes, Wild Card Routes, Routing Parameters, Forms&lt;/p&gt;

&lt;p&gt;I hope now you know What is angular, Where to develop it, and Which are the most important concepts to be understood while learning Angular. You can learn the full Angular Tutorial at &lt;a href="https://errorsea.com"&gt;errorsea.com&lt;/a&gt;&lt;/p&gt;

</description>
      <category>angular</category>
      <category>node</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Understand Async/Await in 5 Minutes</title>
      <author>Nico Zerpa (he/him)</author>
      <pubDate>Thu, 19 Aug 2021 17:40:03 +0000</pubDate>
      <link>https://dev.to/nicozerpa/understand-async-await-in-5-minutes-3e7c</link>
      <guid>https://dev.to/nicozerpa/understand-async-await-in-5-minutes-3e7c</guid>
      <description>&lt;p&gt;Understanding async in JavaScript is a common problem for many developers. &lt;strong&gt;Getting your head around it takes a shift in thinking.&lt;/strong&gt; Here, I'll make a quick rundown of the most important concepts of asynchronous JavaScript so that you can start using it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#first-things-first-whats-an-asynchronous-task"&gt;
  &lt;/a&gt;
  First Things First, What's an Asynchronous Task?
&lt;/h2&gt;

&lt;p&gt;Normally, tasks in JavaScript are run in a synchronous way. That is, it runs the instructions one by one, and &lt;strong&gt;a given instruction won't be executed until the previous one has finished.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Sometimes, that's problematic because if a task takes a lot of time, &lt;strong&gt;the entire application gets blocked&lt;/strong&gt; until the time-consuming task finishes.&lt;/p&gt;

&lt;p&gt;Asynchronous tasks help you solve this problem. &lt;strong&gt;The time-consuming task will run, but it won't block the next instructions.&lt;/strong&gt; When the asynchronous task finishes, you'll be notified and you can do other things with the result of that task.&lt;/p&gt;

&lt;p&gt;In JavaScript development, asynchronous tasks are typically functions that make connections to a server or handle files.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-a-promise"&gt;
  &lt;/a&gt;
  What's a Promise?
&lt;/h2&gt;

&lt;p&gt;Nowadays, asynchronous functions normally return a special kind of object called Promise. Promises have a &lt;code&gt;then&lt;/code&gt; method, where you pass a function that will be executed when the promise is "fulfilled" (i.e. the asynchronous task has finished.)&lt;/p&gt;

&lt;p&gt;The function you pass to the &lt;code&gt;then&lt;/code&gt; method should have an argument. There, you'll receive the result of the asynchronous task.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Let's call the PokéApi web service to get information about Bulbasaur&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;apiCallPromise&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;axios&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`https://pokeapi.co/api/v2/pokemon/bulbasaur`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`This message will appear before the 
API call from the previous line is over`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;apiCallPromise&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;responseFromServer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;This will run when the asynchronous task finishes&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;responseFromServer&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Promises can be chained.&lt;/strong&gt; That means, if the function you passed in &lt;code&gt;.then&lt;/code&gt; returns another asynchronous task, you can add another &lt;code&gt;.then&lt;/code&gt; with a function for the second asynchronous task.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Let's call the PokéApi web service to get information about Bulbasaur&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;bulbasaurPromise&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;axios&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`https://pokeapi.co/api/v2/pokemon/bulbasaur`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;bulbasaurPromise&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;bulbasaurResponse&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`First async task is over.
    We've got the info about Bulbasaur!`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;// New call to PokéApi, not we'll ask about Magikarp&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;axios&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`https://pokeapi.co/api/v2/pokemon/magikarp`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;magikarpResponse&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Second async task is over.
    Now, we've got the info about Magikarp!`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#finally-what-are-async-and-await"&gt;
  &lt;/a&gt;
  Finally, What Are Async and Await?
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;async&lt;/code&gt; keyword lets you create asynchronous functions. This kind of function &lt;a href="https://dev.to/im-using-async-await-why-does-my-function-return-a-promise"&gt;will always return a promise&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Also, inside &lt;code&gt;async&lt;/code&gt; functions, you can use the &lt;code&gt;await&lt;/code&gt; keyword. That keyword lets you "wait" for an asynchronous task to finish, without the need to use &lt;code&gt;then&lt;/code&gt;. &lt;strong&gt;It blocks the &lt;code&gt;async&lt;/code&gt; function, but not the entire application.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Let's see an example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;askForPikachu&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;pikachuResponse&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;axios&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`https://pokeapi.co/api/v2/pokemon/magikarp`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Async task is over.
    Now, we've got the info about Pikachu!`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When you call an &lt;code&gt;async&lt;/code&gt; function (or any function that returns a promise), that function will return immediately, unless you use &lt;code&gt;await&lt;/code&gt;. But if you use that keyword, the function where you make the call should be &lt;code&gt;async&lt;/code&gt; too.&lt;/p&gt;

&lt;p&gt;Unless you're in a module, there you can use &lt;code&gt;await&lt;/code&gt; when you're not inside a function.&lt;/p&gt;




&lt;p&gt;Become a Better JavaScript Developer! My newsletter has easy, actionable steps to level up your JavaScript skills, right to your inbox. &lt;a href="https://nicozerpa.com"&gt;Click here to subscribe&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>#100daysofcode [Day - 09]</title>
      <author>Al Siam</author>
      <pubDate>Thu, 19 Aug 2021 17:07:39 +0000</pubDate>
      <link>https://dev.to/alsiamworld/100daysofcode-day-09-59m9</link>
      <guid>https://dev.to/alsiamworld/100daysofcode-day-09-59m9</guid>
      <description>&lt;h1&gt;
  &lt;a href="#100daysofcode-day-09"&gt;
  &lt;/a&gt;
  100daysofcode [Day - 09]
&lt;/h1&gt;

&lt;p&gt;Today I've made a shopping cart using JS DOM. You can add or delete products and it will update in real-time.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Hn9944a4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/60lk398byyv1sgnaj2y1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Hn9944a4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/60lk398byyv1sgnaj2y1.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Live Preview: &lt;a href="https://100daysofcode-day09-alsiam.netlify.app/"&gt;https://100daysofcode-day09-alsiam.netlify.app/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Code Link: &lt;a href="https://github.com/alsiamworld/100-days-of-code/tree/main/day-09"&gt;https://github.com/alsiamworld/100-days-of-code/tree/main/day-09&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#javascript-programming-codinglife"&gt;
  &lt;/a&gt;
  javascript #programming #codinglife
&lt;/h1&gt;

</description>
    </item>
    <item>
      <title>🗿 Stoicism and the Software Interview</title>
      <author>Randall</author>
      <pubDate>Thu, 19 Aug 2021 16:48:33 +0000</pubDate>
      <link>https://dev.to/mistval/stoicism-and-the-software-interview-4h75</link>
      <guid>https://dev.to/mistval/stoicism-and-the-software-interview-4h75</guid>
      <description>&lt;p&gt;Interviewing is hard, and software engineers have it especially bad. In what other profession is your fate determined by how well you solve random brainteasers on camera? &lt;/p&gt;

&lt;p&gt;Last week I had ten interviews with eight different companies, plus two automatically timed and scored tests and two take-home coding projects on top of that. It was not easy, but I did have some new tools that helped a lot, and I would like to share some of those in this article.&lt;/p&gt;

&lt;p&gt;These are tools that I acquired while learning about &lt;a href="https://en.wikipedia.org/wiki/Stoicism"&gt;Stoicism&lt;/a&gt;, an ancient Greek school of philosophy, which, among other things, provides guidance on how to react to stressful, frightening, or depressing situations.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-reserve-clause"&gt;
  &lt;/a&gt;
  The Reserve Clause
&lt;/h2&gt;

&lt;p&gt;Taking a &lt;strong&gt;reserve clause&lt;/strong&gt; essentially means putting in the effort and then accepting the outcome. Here's an example:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I will study as hard as I can and then, &lt;em&gt;fate permitting&lt;/em&gt;, I will receive a job offer.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The &lt;em&gt;fate permitting&lt;/em&gt; clause is the reserve clause. What you are doing here is taking responsibility for your &lt;em&gt;efforts&lt;/em&gt; while leaving the responsibility for the &lt;em&gt;outcome&lt;/em&gt; in the hands of fate.&lt;/p&gt;

&lt;p&gt;Framing the goal in this way, you succeed as long as you put in the effort. Even if you do not get the job!&lt;/p&gt;

&lt;p&gt;There are a million reasons why you might not get the job even if you put in the effort. They might by chance ask questions you had not prepared for, or maybe they liked you fine but there was another candidate who knocked their socks off, or maybe they thought you were amazing but someone accidentally entered 0 points instead of 10.&lt;/p&gt;

&lt;p&gt;We control little beyond our efforts, and fortune is fickle. If we limit our concept of success to the things we &lt;em&gt;do&lt;/em&gt; control, we can be more focused in our efforts and more equanimous when set back by forces beyond us.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#maybe-they-did-you-a-favor"&gt;
  &lt;/a&gt;
  Maybe They Did You a Favor
&lt;/h2&gt;

&lt;p&gt;Try to be grateful for rejection. Maybe by rejecting you, they are doing you a great favor! Your "dream job" could have turned into a nightmare, and your "backup plan" could turn out to be the greatest job you will ever have. We just cannot know.&lt;/p&gt;

&lt;p&gt;(The most fun I have ever had at a job was working as a cashier in a convenience store. I will spare you the details, but it was a million times more fun than I could have expected! The pay could have been a little better though...)&lt;/p&gt;

&lt;p&gt;By rejecting you, they are helping to write a chapter of your story. They are giving you direction. That is something to be grateful for.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-locality-of-anxiety"&gt;
  &lt;/a&gt;
  The Locality of Anxiety
&lt;/h2&gt;

&lt;p&gt;Anxiety is often described as "butterflies in your stomach", and indeed when you feel anxious, you will notice some interesting things if you focus on &lt;strong&gt;where&lt;/strong&gt; you feel anxious.&lt;/p&gt;

&lt;p&gt;It is a physical sensation, often in your chest, your stomach, maybe even your legs. It is not mental. It may not even be in your head!&lt;/p&gt;

&lt;p&gt;We seem to be hardwired to launch into &lt;a href="https://www.psychologytoday.com/us/blog/in-the-face-adversity/201103/catastrophic-thinking"&gt;catastrophic thinking&lt;/a&gt; when we feel such sensations, but we actually have a lot of control over the extent of that. If you recognize anxiety as a benign physical feeling, it can help you prevent it from commandeering your emotional state.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#avoid-suffering-before-it-is-necessary"&gt;
  &lt;/a&gt;
  Avoid Suffering Before it is Necessary
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;To suffer before it is necessary is to suffer more than is necessary - Seneca&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In addition to observing &lt;em&gt;where&lt;/em&gt; anxiety happens, be mindful about &lt;em&gt;when&lt;/em&gt; it happens.&lt;/p&gt;

&lt;p&gt;You might find that you are freaking out hours before you even step onto the stage! That is hours of suffering and it is completely unnecessary.&lt;/p&gt;

&lt;p&gt;Recognizing that the thing you are so afraid of is &lt;em&gt;not even happening right now&lt;/em&gt; can help calm your nerves.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-view-from-above"&gt;
  &lt;/a&gt;
  The View From Above
&lt;/h2&gt;

&lt;p&gt;This is a really simple and practical technique that Stoics use to decatastrophize a situation and make it not-so-bad.&lt;/p&gt;

&lt;p&gt;The idea is just to imagine looking down on yourself from above. Imagine you can see your entire block, or maybe your city, or maybe your country, and everyone in it. None of them care about what happens in your interview. It is just not that important.&lt;/p&gt;

&lt;p&gt;A lot of the time, this might sound like a depressing activity. But anxiety is caused to some extent by an inflated sense of self-importance! Re-framing the situation in a way that trivializes it, and yourself, can help to temper your emotions towards it.&lt;/p&gt;

&lt;p&gt;You can do this activity in an instant, or you can spend more time on it. &lt;a href="https://blog.stoameditation.com/the-view-from-above/"&gt;Here&lt;/a&gt; is a meditation plan you could follow.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-happens-next"&gt;
  &lt;/a&gt;
  What Happens Next?
&lt;/h2&gt;

&lt;p&gt;What are you going to do after the interview?&lt;/p&gt;

&lt;p&gt;Go for a run? Make a sandwich? Play a game?&lt;/p&gt;

&lt;p&gt;Remember that there &lt;em&gt;is&lt;/em&gt; an after. You are going to pick up the phone, spend an hour on it, and then it is over. No matter what happens in an interview, it will end, and after it does, it will feel like it took a mere instant.&lt;/p&gt;

&lt;p&gt;Just remember that you still have the rest of your day ahead of you. The world is not ending.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;I bet some of this sounded excessively mystical to some readers, but the proof is in the pudding. Try it out! Using these techniques and perspectives during the interview process helped me to maintain my composure before, during, and after interviews, and to be more satisfied even with negative outcomes.&lt;/p&gt;

&lt;p&gt;For anyone going through the interview process now, good luck! It may not be easy, but you will get through it.&lt;/p&gt;

</description>
      <category>career</category>
    </item>
    <item>
      <title>Beginner Guide To Grid !</title>
      <author>paul-coder-22</author>
      <pubDate>Thu, 19 Aug 2021 16:38:18 +0000</pubDate>
      <link>https://dev.to/paulcoder22/beginner-guide-to-grid-3cg8</link>
      <guid>https://dev.to/paulcoder22/beginner-guide-to-grid-3cg8</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZKkeoqM4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/puxmkcuux50hxqykxp36.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZKkeoqM4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/puxmkcuux50hxqykxp36.png" alt="Various Kind Of Grid Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;In this article I'll simplify grid in a way that by the end of the article you are able create a beautiful web template for you.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#what-is-grid-"&gt;
  &lt;/a&gt;
  What is Grid ?
&lt;/h1&gt;

&lt;p&gt;CSS Grid is a powerful tool that allows you to create two-dimensional layouts to be created on the web layouts.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#does-grid-support-in-all-browser"&gt;
  &lt;/a&gt;
  Does Grid Support in all Browser?
&lt;/h1&gt;

&lt;h5&gt;
  &lt;a href="#ohh-yes"&gt;
  &lt;/a&gt;
  Ohh yes.
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;Chrome - full support as of March 8, 2017 (version 57)&lt;/li&gt;
&lt;li&gt;Firefox - full support as of March 6, 2017 (version 52)&lt;/li&gt;
&lt;li&gt;Safari - full support as of March 26, 2017 (version 10.1)&lt;/li&gt;
&lt;li&gt;Edge - full support as of October 16, 2017 (version 16)&lt;/li&gt;
&lt;li&gt;IE11 - no support for current spec; supports obsolete version.&lt;/li&gt;
&lt;li&gt;IE10 - no support for current spec; supports obsolete version.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Today We'll be learning by doing Right. I think that's the better way of learning anything.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#image"&gt;
  &lt;/a&gt;
  Image
&lt;/h1&gt;

&lt;p&gt;It's Out Target We will achieve this by simplifying grid. :)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LE_PhWqR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m7y4qxywpgaraz5cway8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LE_PhWqR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m7y4qxywpgaraz5cway8.png" alt="Target Image Will be Doing this one"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#this-is-our-starter-html-we-will-be-playing-around-with-it-to-reach-our-goal"&gt;
  &lt;/a&gt;
  This is our Starter Html we will be playing around with it to reach our goal.
&lt;/h4&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/paul04/embed/ExmBpRJ?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A grid container contains grid items. Wrapper is a parent class and the inside classes are child elements.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/paul04/embed/poPXZQZ?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Just some weird things happening, isn't it ? And why I'm using fraction?&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you see the above Image, You'll get an Idea there are 5rows and 4 columns. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Make class "a" start on column 1 and end before column 2.&lt;br&gt;
  Make class "a" start on row 1 and end before row 2.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gzA3ffdj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hymi1h7lc0flo3bsovv3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gzA3ffdj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hymi1h7lc0flo3bsovv3.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Green&lt;/strong&gt;: Rows&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Red&lt;/strong&gt;: Columns&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We are suppose to achieve somethings but we are ended up getting some thing. Because grid system is smart enough to auto-place things in the grid. This is we called Implicit Grid.&lt;/p&gt;

&lt;p&gt;Yeah ! We manage to get Something so close.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/paul04/embed/LYyKJLb?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#final-grid"&gt;
  &lt;/a&gt;
  Final Grid
&lt;/h3&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/paul04/embed/zYwVJLq?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;How did I manage to make things accurate ?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Because of &lt;strong&gt;two&lt;/strong&gt; things &lt;br&gt;
First one &lt;br&gt;
The extension name is &lt;strong&gt;Web Developer toolbar&lt;/strong&gt; that helped me to measure the image accurately.&lt;br&gt;
Second one is &lt;br&gt;
&lt;code&gt;grid-template-rows: 170px 210px 61px 61px;&lt;br&gt;
  grid-template-columns: 124px 376px 42px;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XO30Iglp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0rfdetakkx0s8p2lv8ps.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XO30Iglp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0rfdetakkx0s8p2lv8ps.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you see the attribute I'm only giving height and width of each child Element. If there are multiple rows or columns that I'm not specifying the height or width. As it's a Implicit Grid it'll takes up space automatically.&lt;/p&gt;

&lt;p&gt;Let me know in the comments if you found this helpful.&lt;/p&gt;

</description>
      <category>css</category>
      <category>html</category>
    </item>
    <item>
      <title>Center an image with css on responsive without distorting</title>
      <author>dgloriaweb</author>
      <pubDate>Thu, 19 Aug 2021 16:25:27 +0000</pubDate>
      <link>https://dev.to/dgloriaweb/center-an-image-with-css-on-responsive-without-distorting-4mj4</link>
      <guid>https://dev.to/dgloriaweb/center-an-image-with-css-on-responsive-without-distorting-4mj4</guid>
      <description>&lt;p&gt;Hi, &lt;br&gt;
If my designer wants to see the middle of the image on the middle of any device screen, I take the height of the image, and calculate the left margin from it. I use an image that's near to rectangle, to be able to handle the wildest aspect ratio, in this case my app is portrait only. In this example my image is h=1000px w=776px. (Heads up, if your image might not be wide enough for some devices, also be prepared for landscape view. Better to use square image and decide if you use height or width as baseline.)&lt;/p&gt;

&lt;p&gt;I position the image to the corner like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;position: fixed;
top: 0;
left: 0;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then I set the height to 100vh&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;height: 100vh;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now I can calculate my offset for the image from the left, by adjusting the left-margin&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;margin-left: calc((-77.6vh / 2) + 50vw);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;briefly my image is 77.6vh wide (that's calculated from 100vh *77.6, because this is the aspect ratio), so I get half of that value, and move the whole thing 50vw to the right. That is where my image will start. I don't need to mess about with pixels, it's calculated for me.&lt;/p&gt;

</description>
    </item>
  </channel>
</rss>
