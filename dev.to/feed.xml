<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Easiest Way to Implement Heatmaps in your React applications </title>
      <author>roopantj</author>
      <pubDate>Sun, 26 Dec 2021 19:39:38 +0000</pubDate>
      <link>https://dev.to/roopan_tj/easiest-way-to-implement-heatmaps-in-your-react-applications-40p6</link>
      <guid>https://dev.to/roopan_tj/easiest-way-to-implement-heatmaps-in-your-react-applications-40p6</guid>
      <description>&lt;p&gt;To implement Heatmaps visualization in react apps, we need &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Google Maps API key
&lt;/li&gt;
&lt;li&gt;google-map-react package&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;To get Google Maps API key, visit this &lt;a href="https://developers.google.com/maps/documentation/javascript/get-api-key"&gt;page&lt;/a&gt; and follow the instructions.&lt;/p&gt;

&lt;p&gt;As mentioned above, we use &lt;strong&gt;google-map-react&lt;/strong&gt; package.&lt;br&gt;
You can install it by running,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm i google-map-react
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To get more info about this package, visit &lt;a href="https://www.npmjs.com/package/google-map-react"&gt;--&amp;gt;&amp;lt;--&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now lets create a Heatmaps.js component.&lt;br&gt;
&lt;strong&gt;Heatmaps.js&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const Heatmaps = () =&amp;gt; {
  return (
    &amp;lt;GoogleMapReact
      bootstrapURLKeys={{ key: YOUR_API_KEY }}
      defaultCenter={{ lat: DEFAULT_LAT, lng: DEFAULT_LNG }}
      defaultZoom={4}
      heatmap={{ positions: LIST_OF_POINTS, options: {} }}
      heatmapLibrary={true}
    &amp;gt;&amp;lt;/GoogleMapReact&amp;gt;
  );
};
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Pass the coordinates data in &lt;strong&gt;heatmap&lt;/strong&gt; props and don't forget to set &lt;strong&gt;heatmapLibrary&lt;/strong&gt; props &lt;em&gt;true&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;LIST_OF_POINTS&lt;/strong&gt; passed to positions[in heatmap prop] is an array of coordinates. Export coordinates array by creating a new file HeatmapPoints.js.&lt;br&gt;
&lt;strong&gt;HeatmapPoints.js&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;export const LIST_OF_POINTS = [
  {
    lat: 9.9256235,
    lng: 78.1177802,
  },
  {
    lat: 9.920991599999999,
    lng: 78.1118825,
  },
  {
    lat: 9.9206833,
    lng: 78.1123521,
  },
  //Add as many coordinates you want.
]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;&lt;br&gt;
Make sure the container element of Heatmaps components has width and height. The map will fill the parent container, but if the container has no size, it will be collapsed.&lt;/p&gt;

&lt;p&gt;Hope you find this useful!&lt;/p&gt;

</description>
      <category>react</category>
      <category>heatmaps</category>
      <category>googlemapreact</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Animate Components - ReactJS</title>
      <author>Mahmoud Ehab</author>
      <pubDate>Sun, 26 Dec 2021 19:22:22 +0000</pubDate>
      <link>https://dev.to/mahmoudehab/animate-components-reactjs-49gh</link>
      <guid>https://dev.to/mahmoudehab/animate-components-reactjs-49gh</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;If you want to animate your ReactJS Components in a rapid and easy manner, without using CSS. Then this post is for you.&lt;/p&gt;

&lt;p&gt;To make it possible to define our own animations in ReactJS, without using CSS. We'll just use style prop, hooks and transition. Hover, to do so in a flexible manner with all CSS keyframes/animation features (loop, backward animation, ...etc) that goes beyond using just transition. And so, we ought to create an external reusable component that carries the whole logic of switching between different stages in the animation.&lt;/p&gt;

&lt;p&gt;I already wrote such a component and deployed it on &lt;a href="https://www.npmjs.com/package/react-animation-maker"&gt;npm&lt;/a&gt;, with an additional feature: useAnimate hook that makes it more elegant and powerful. And this post elaborates how to use it in your project. However, if you want a post in how it actually works, let me know in the comments.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#installing"&gt;
  &lt;/a&gt;
  Installing
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install react-animation-maker
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#usage"&gt;
  &lt;/a&gt;
  Usage
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#animate-component"&gt;
  &lt;/a&gt;
  Animate Component
&lt;/h2&gt;

&lt;p&gt;This component is used to define your own animations only using css-js objects. It animate the div from the object of the 'from' prop, to the list of objects of the 'to' prop.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Animate&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-animation-maker&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Animate&lt;/span&gt; 
&lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="na"&gt;backgroundColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#f00&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt; 
&lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{[{&lt;/span&gt;&lt;span class="na"&gt;backgroundColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#0f0&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;}]}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nx"&gt;Hello&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;World&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Animate&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can create multi-staged animation, as well. In other words, adding more than one object in the 'to' prop list.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Animate&lt;/span&gt; 
&lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="na"&gt;backgroundColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#f00&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt; 
&lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{[&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;backgroundColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#0f0&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;backgroundColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#00f&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;]}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nx"&gt;Hello&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;World&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Animate&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#other-props-optional"&gt;
  &lt;/a&gt;
  Other props (OPTIONAL)
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;style: js-css object&lt;/code&gt; for the general style of all stages.&lt;br&gt;
&lt;code&gt;durations: string[]&lt;/code&gt; the durations between stages, its default value ['1s'].&lt;br&gt;
&lt;code&gt;delay: int&lt;/code&gt; specifies the delay time in milliseconds.&lt;br&gt;
&lt;code&gt;loop: boolen&lt;/code&gt; to indicate wheather the animation loops forever or not.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#using-durations-prop"&gt;
  &lt;/a&gt;
  Using 'durations' Prop
&lt;/h2&gt;

&lt;p&gt;This is an optional prop, whose only purpose is to descripe the duration between each stage and the one preceeding, starting from the first stage in "to" prop. The durations list length should be as the length of "to" list. If it's not, then the first value of the durations list is considered as the duration between each stage and the another.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#example"&gt;
  &lt;/a&gt;
  Example
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Animate&lt;/span&gt; 
&lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="na"&gt;backgroundColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#f00&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt; 
&lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{[&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;backgroundColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#0f0&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;backgroundColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#00f&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;backgroundColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#f0f&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;backgroundColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#fff&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;]}&lt;/span&gt;
&lt;span class="nx"&gt;durations&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;250ms&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;500ms&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;750ms&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;1s&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nx"&gt;Hello&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;World&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Animate&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#using-predefined-animations"&gt;
  &lt;/a&gt;
  Using Pre-defined Animations
&lt;/h2&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Animate&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;FancyPopIn&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-animation-maker&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Animate&lt;/span&gt; 
&lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;FancyPopIn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; 
&lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;FancyPopIn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;durations&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;FancyPopIn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;durations&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nx"&gt;Hello&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;World&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Animate&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Checkout the whole list here:&lt;br&gt;
&lt;a href="https://mahmoud-ehab.github.io/react-animation-maker"&gt;https://mahmoud-ehab.github.io/react-animation-maker&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#using-useanimate-hook"&gt;
  &lt;/a&gt;
  Using useAnimate Hook
&lt;/h2&gt;

&lt;p&gt;Another way to use Animate Component is using it through useAnimate Hook. This gives you the ability to rename your Animate Components and consequently increase the readibilty of your code. What makes it more powerful, that it allows you to change the animation of the component using event handlers.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useAnimate&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;FadeIn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;FadeOut&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-animation-maker&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;Anim&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setAnim&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useAnimate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;FadeIn&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Anim&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nx"&gt;Hello&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;World&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Anim&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setAnim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;FadeOut&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nx"&gt;Change&lt;/span&gt; &lt;span class="nx"&gt;Anim&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Notice that setAnim in the above example; just takes a props object,&lt;br&gt;
hence you can do the following, as well...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useAnimate&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;FadeIn&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-animation-maker&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;Anim&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setAnim&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useAnimate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;FadeIn&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Anim&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nx"&gt;Hello&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;World&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Anim&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setAnim&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;from&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{},&lt;/span&gt; &lt;span class="na"&gt;to&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{[{&lt;/span&gt;&lt;span class="na"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;}]})}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nx"&gt;Change&lt;/span&gt; &lt;span class="nx"&gt;Anim&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>react</category>
    </item>
    <item>
      <title>What is Facebook pixel and how to use it?</title>
      <author>Rakesh Potnuru</author>
      <pubDate>Sun, 26 Dec 2021 18:44:27 +0000</pubDate>
      <link>https://dev.to/itsrakesh/what-is-facebook-pixel-and-how-to-use-it-2c4c</link>
      <guid>https://dev.to/itsrakesh/what-is-facebook-pixel-and-how-to-use-it-2c4c</guid>
      <description>&lt;p&gt;Ever wondered how that T-Shirt you visited on the Myntra website appeared on your Facebook Timeline or Feed? Then you need to know about Facebook Pixel. If you have a website or an app and you want to promote your business then you should know how to use it. So in this blog, I will introduce you to Facebook Pixel and explain to you how to integrate it into your website.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lets-get-started"&gt;
  &lt;/a&gt;
  Let's get started
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#what-is-facebook-pixel"&gt;
  &lt;/a&gt;
  What is Facebook Pixel?
&lt;/h3&gt;

&lt;p&gt;Explanation from &lt;a href="https://www.facebook.com/business/learn/facebook-ads-pixel"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A piece of code for your website that lets you measure, optimise and build audiences for your advertising campaigns.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Pixel collects data from your user's actions like clicking "Add to cart", "Add to wishlist" etc. With this data, you can create ads. For example, the pixel has a feature called "Custom Audience" which lets you find people who are likely interested in your product or reach people who are already engaged with your product.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#why-do-you-need-this"&gt;
  &lt;/a&gt;
  Why do you need this?
&lt;/h3&gt;

&lt;p&gt;The answer is simple - find people who may be interested in your product or bring back those who have already visited your website.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-it-works"&gt;
  &lt;/a&gt;
  How it works?
&lt;/h3&gt;

&lt;p&gt;Whenever you visit a website (that uses Facebook pixel), this pixel gets triggered and it records all the events and sends data to Facebook. For example, go to &lt;a href="https://www.myntra.com"&gt;myntra.com&lt;/a&gt; and open dev tools -&amp;gt; Network tab -&amp;gt; type Facebook in filter input box. Then click random buttons like "Wishlist", "Add to cart" etc and now you can see pixel record your actions.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r7AQJ3mQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640521503433/7flRUwt5Fk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r7AQJ3mQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640521503433/7flRUwt5Fk.png" alt="facebook pixel events screenshot" width="880" height="444"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Yes, that looks like a mess. To understand better, Facebook has a chrome extension called &lt;a href="https://chrome.google.com/webstore/detail/facebook-pixel-helper/fdgfkebogiimcoedlicjlajpkdmockpc?hl=en"&gt;Facebook Pixel Helper&lt;/a&gt;. Install the extension and visit the Myntra website again. Click the extension and now you can see what events that pixel is tracking.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;You may or may not see events because those websites set so many rules like what action to track, where to track, track only targeted geo locations etc...&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-integrate-pixel"&gt;
  &lt;/a&gt;
  How to integrate Pixel?
&lt;/h2&gt;

&lt;p&gt;Now let's see how you can install the pixel on your website.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;You need to have access to the source code of your website.&lt;/li&gt;
&lt;li&gt;A Facebook account.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#step-1"&gt;
  &lt;/a&gt;
  Step - 1:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Go to Facebook &lt;a href="https://business.facebook.com/events_manager2"&gt;Events Manager&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Click &lt;strong&gt;Connect Data Sources&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--woMgL58c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640533852316/76nmSRBAp8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--woMgL58c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640533852316/76nmSRBAp8.png" alt="Connect Data Sources" width="880" height="468"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Select &lt;strong&gt;Web&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cYj0okR4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640534579955/IlxoSqFKN.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cYj0okR4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640534579955/IlxoSqFKN.png" alt="Web" width="880" height="392"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create a name for your pixel.&lt;/li&gt;
&lt;li&gt;Follow the steps.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#step-2-install-pixel"&gt;
  &lt;/a&gt;
  Step - 2: Install pixel
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;It's so easy to install the pixel on your website, just choose manual install and copy the code paste it above &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; of your website.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;If you are using Shopify or other services you can follow the respective guides.&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;After following all the steps to install the pixel, wait for some time and then your pixel is ready.&lt;/li&gt;
&lt;li&gt;Now you can see your website activity.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#step-3-event-setup"&gt;
  &lt;/a&gt;
  Step - 3: Event Setup
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Now you need to do actual thing, that is setup events like clicking a button and tracking a URL.&lt;/li&gt;
&lt;li&gt;To do so, go to &lt;strong&gt;Data Sources&lt;/strong&gt; -&amp;gt; &lt;strong&gt;Select pixel&lt;/strong&gt; -&amp;gt; &lt;strong&gt;Settings&lt;/strong&gt; -&amp;gt; Scroll down -&amp;gt; Click &lt;strong&gt;Open Event Setup Tool&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--74A-WpmK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640541232787/eUAeBZ-BN.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--74A-WpmK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640541232787/eUAeBZ-BN.png" alt="Open Event Setup Tool" width="880" height="448"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Enter website URL and launch website. Now a window will open along with your website.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LIyrBhzt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640541344956/mOW4GzCVV.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LIyrBhzt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640541344956/mOW4GzCVV.png" alt="Event Setup Tool" width="808" height="598"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Now can add what events to track like clicking a button, accessing a URL etc.&lt;/li&gt;
&lt;li&gt;After adding all the events you want &lt;strong&gt;Finish Setup&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;That's it! You can test events and see whether they are recording or not with the Facebook pixel helper extension.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#step-4-do-your-research-and-promotions"&gt;
  &lt;/a&gt;
  Step - 4: Do your research and promotions
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Now that you are tracking actions and knowing about your users. What next?&lt;/li&gt;
&lt;li&gt;Create ads based on your users' interests. For example, if your users are more interested in buying your hoodies, create an ad for hoodies.&lt;/li&gt;
&lt;li&gt;Try these-&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IgnTu1Xe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640542059112/lyrZvLyhC.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IgnTu1Xe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640542059112/lyrZvLyhC.png" alt="Screenshot 2021-12-26 233252.png" width="712" height="595"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Let me know if you have any doubts or want more articles on this in the comments.&lt;/p&gt;




&lt;p&gt;⚒️Tool of the week⚒️&lt;/p&gt;

&lt;p&gt;&lt;a href="https://coil.com"&gt;Coil&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Monetize your website for free with Coil.&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;Hope this helps you!&lt;br&gt;
Save for reference.&lt;br&gt;
New blog every week. Follow for more awesomeness 😀.&lt;br&gt;
You can connect with me on &lt;a href="https://twitter.com/rakesh_at_tweet"&gt;Twitter&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>tutorial</category>
      <category>webdev</category>
    </item>
    <item>
      <title>How to create Records in AWS Route53</title>
      <author>Vijay Patel</author>
      <pubDate>Sun, 26 Dec 2021 18:23:13 +0000</pubDate>
      <link>https://dev.to/easyawslearn/how-to-create-records-in-aws-route53-1agh</link>
      <guid>https://dev.to/easyawslearn/how-to-create-records-in-aws-route53-1agh</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-route53"&gt;
  &lt;/a&gt;
  what is Route53?
&lt;/h2&gt;

&lt;p&gt;Amazon Route 53 is a highly available and scalable Domain Name System (DNS) web service. You can use Route 53 to perform three main functions in any combination: domain registration, DNS routing, and health checking.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#amazon-route-53-pricing-and-billing"&gt;
  &lt;/a&gt;
  Amazon Route 53 pricing and billing
&lt;/h2&gt;

&lt;p&gt;As with other AWS products, there are no contracts or minimum commitments for using Amazon Route 53. You pay only for the hosted zones that you configure and the number of DNS queries that Route 53 answers. For more information, see Amazon Route 53 Pricing  &lt;/p&gt;

&lt;p&gt;For information about billing for AWS services, including how to view your bill and manage your account and payments, see the AWS Billing and Cost Management User Guide.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Here is the full video, based on AWS Route53 Domain configuration, Creating the first comment and Query those Records in AWS CloudShell👇👇&lt;/code&gt;&lt;br&gt;
&lt;a href="https://youtu.be/Ftoiq8HvrNE"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--16BxaWFR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w89ka4tvykmjcp1dhq85.png" alt="Image description" width="600" height="320"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#to-create-a-record-using-the-route-53-console"&gt;
  &lt;/a&gt;
  To create a record using the Route 53 console
&lt;/h2&gt;

&lt;h4&gt;
  &lt;a href="#1-sign-in-to-the-aws-management-console-and-open-the-route-53-console-at-httpsconsoleawsamazoncomroute53"&gt;
  &lt;/a&gt;
  1. Sign in to the AWS Management Console and open the Route 53 console at &lt;a href="https://console.aws.amazon.com/route53/"&gt;https://console.aws.amazon.com/route53/&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QhN_PXFA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s9gnb5wmd2iroc450glv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QhN_PXFA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s9gnb5wmd2iroc450glv.png" alt="Image description" width="307" height="189"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#2-search-for-route53-service"&gt;
  &lt;/a&gt;
  2. Search for Route53 service
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DmNpADjf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uxti1prd63h9022f34p2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DmNpADjf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uxti1prd63h9022f34p2.png" alt="Image description" width="400" height="245"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#3-choose-hosted-zones"&gt;
  &lt;/a&gt;
  3. choose Hosted zones.
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4icRIVPN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lvnqh4lfho69rtyhllom.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4icRIVPN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lvnqh4lfho69rtyhllom.png" alt="Image description" width="400" height="245"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#4-if-you-already-have-a-hosted-zone-for-your-domain-skip-to-the-next-step-if-you-dont-select-the-create-a-hosted-zone-option-and-you-can-create-it"&gt;
  &lt;/a&gt;
  4. If you already have a hosted zone for your domain, skip to the next step. If you don't, select the "create a hosted zone" option and you can create it.
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HNpPhjaW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4dqnoz2c82yyw5k3yiok.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HNpPhjaW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4dqnoz2c82yyw5k3yiok.png" alt="Image description" width="400" height="245"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#5-now-if-you-are-done-with-the-creating-hosted-zone-on-the-hosted-zones-page-choose-the-name-of-the-hosted-zone-that-you-want-to-create-records-in"&gt;
  &lt;/a&gt;
  5. Now If you are done with the Creating hosted zone, On the Hosted zones page, choose the name of the hosted zone that you want to create records in.
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AmAkB78M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xs669e6uujy4efuvz14v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AmAkB78M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xs669e6uujy4efuvz14v.png" alt="Image description" width="400" height="245"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#6-choose-create-record"&gt;
  &lt;/a&gt;
  6. Choose Create Record.
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9kjgE-9b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wpgtfcuwv8u981exidp1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9kjgE-9b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wpgtfcuwv8u981exidp1.png" alt="Image description" width="400" height="245"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;▬▬▬▬▬▬ WANT TO LEARN MORE? ▬▬▬▬▬▬&lt;br&gt;
Full Terraform tutorial ► &lt;a href="https://bit.ly/2GwK8V2"&gt;https://bit.ly/2GwK8V2&lt;/a&gt;&lt;br&gt;
DevOps Tools, like Ansible ► &lt;a href="https://bit.ly/3iASHuP"&gt;https://bit.ly/3iASHuP&lt;/a&gt;&lt;br&gt;
Docker Tutorial ► &lt;a href="https://bit.ly/3iAT9Jx"&gt;https://bit.ly/3iAT9Jx&lt;/a&gt;&lt;/p&gt;

</description>
      <category>aws</category>
      <category>route53</category>
      <category>domain</category>
      <category>cloudcomputing</category>
    </item>
    <item>
      <title>The Ultimate Guide You Need To Publish Your Python Package In Just 9 Easy Steps</title>
      <author>Audarya</author>
      <pubDate>Sun, 26 Dec 2021 18:18:34 +0000</pubDate>
      <link>https://dev.to/audarya07/the-ultimate-guide-you-need-to-publish-your-python-package-in-just-9-easy-steps-39o5</link>
      <guid>https://dev.to/audarya07/the-ultimate-guide-you-need-to-publish-your-python-package-in-just-9-easy-steps-39o5</guid>
      <description>&lt;h3&gt;
  &lt;a href="#directory-structure"&gt;
  &lt;/a&gt;
  Directory structure
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Create a directory that is named exactly how you want your package to be named.
&lt;/li&gt;
&lt;li&gt;Place all the files, folders and classes that you want to publish into this directory.&lt;/li&gt;
&lt;li&gt;Create files required by PyPI to prepare the project for distribution. &lt;/li&gt;
&lt;li&gt;It should look something like this: &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DXxYqJt3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z75fm28j1oeomkys96dl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DXxYqJt3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z75fm28j1oeomkys96dl.png" alt="directory structure" width="809" height="459"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#clean-your-code"&gt;
  &lt;/a&gt;
  Clean your code
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Remove all "print" statements from the code.
&lt;/li&gt;
&lt;li&gt;Use logs instead of print statements(debug/info/warn etc..)
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#configuring-metadata"&gt;
  &lt;/a&gt;
  Configuring metadata
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;setup.cfg&lt;/code&gt; --&amp;gt; It is the configuration file for &lt;strong&gt;setuptools&lt;/strong&gt;. It tells setuptools about your package(such as the name and version) as well as which code files to include. There are a variety of &lt;a href="https://setuptools.pypa.io/en/latest/userguide/declarative_config.html"&gt;metadata and options supported&lt;/a&gt; here.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[metadata]
description-file = README.md  
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;setup.py&lt;/code&gt; --&amp;gt;  It is the build script for which tells setuptools about your package(such as the name and version) as well as which code files to include.
&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;setuptools is a library designed to facilitate packaging Python projects.  &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Open &lt;code&gt;setup.py&lt;/code&gt; and enter the following content. Change the name to include your username; this ensures that you have a unique package name and that your package doesn’t conflict with packages uploaded by other people.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;setuptools&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;find_packages&lt;/span&gt;

&lt;span class="n"&gt;version&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'0.0.1'&lt;/span&gt; &lt;span class="c1"&gt;# Any format you want
&lt;/span&gt;
&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"README.md"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"r"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;encoding&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"utf-8"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;fh&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;long_description&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;fh&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'your-package-name'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;find_packages&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
  &lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="n"&gt;license&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'MIT'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="n"&gt;description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'Short description'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="n"&gt;long_description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;long_description&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="n"&gt;long_description_content_type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text/markdown"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'Author Name'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="n"&gt;author_email&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'author@email.com'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'https://gitlab.com/username/repo-name'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="n"&gt;download_url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;'https://gitlab.com/username/repo-name/-/archive/&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;/repo-name-&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;.tar.gz'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="n"&gt;keywords&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'Some'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'keywords'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="n"&gt;install_requires&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
          &lt;span class="s"&gt;'dependency-1'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="c1"&gt;# All external pip packages you are importing
&lt;/span&gt;          &lt;span class="s"&gt;'dependency-2'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="n"&gt;classifiers&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="s"&gt;'Development Status :: 3 - Alpha'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;'Intended Audience :: Developers'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;'Operating System :: OS Independent'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;'Topic :: Software Development :: Build Tools'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;'License :: OSI Approved :: MIT License'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;'Programming Language :: Python :: 3.7'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;'Programming Language :: Python :: 3.8'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can find details about each arguments &lt;a href="https://packaging.python.org/tutorials/packaging-projects/#configuring-metadata"&gt;here&lt;/a&gt;.  &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#creating-readmemd-optional-but-recommended"&gt;
  &lt;/a&gt;
  Creating README.md (optional but recommended)
&lt;/h3&gt;

&lt;p&gt;Open README.md and enter details about your package. You can customize this as you’d like. This content can be displayed on the homepage of your package on PyPI.  &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#creating-a-license"&gt;
  &lt;/a&gt;
  Creating a LICENSE
&lt;/h3&gt;

&lt;p&gt;It’s important for every package uploaded to the Python Package Index to include a license. This tells users who install your package the terms under which they can use your package. For help picking a license, see &lt;a href="https://choosealicense.com/"&gt;https://choosealicense.com/&lt;/a&gt;. Once you have chosen a license, open LICENSE and enter the license text. For example, if you had chosen the MIT license:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Copyright (c) 2021 YOUR NAME
Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#create-a-pypi-account"&gt;
  &lt;/a&gt;
  Create a PyPI account
&lt;/h3&gt;

&lt;p&gt;Register yourself for a PyPI account &lt;a href="https://pypi.org/account/register/"&gt;here&lt;/a&gt;. Remember your username (not the Name, not the E-Mail Address) and your password, you will need it later for the upload process.  &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#upload-your-package-to-githubgitlab"&gt;
  &lt;/a&gt;
  Upload your package to github/gitlab
&lt;/h3&gt;

&lt;p&gt;Create a github/gitlab repo including all the above files and folders. Name the repo exactly as the package.&lt;br&gt;&lt;br&gt;
If uploading package to Gitlab, &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;After uploading the required files, go to &lt;code&gt;Repository --&amp;gt; Tags --&amp;gt; New Tag&lt;/code&gt; and create new tag(tag name should be same as the version) for every release of the package to PyPI. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tWxa5bhU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uuekaftfa9a0btd5ff4j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tWxa5bhU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uuekaftfa9a0btd5ff4j.png" alt="Creating Tags" width="880" height="495"&gt;&lt;/a&gt;  &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;This copied link should be the same as &lt;em&gt;download_url&lt;/em&gt; argument in the &lt;code&gt;setup.py&lt;/code&gt; file.
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If uploading package to GitHub, &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;After uploading the required files, follow steps mentioned &lt;a href="https://docs.github.com/en/repositories/releasing-projects-on-github/managing-releases-in-a-repository"&gt;here&lt;/a&gt; to create a release.
&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;br&gt;&lt;br&gt;
Every time you want to update your package later on, upload a new version to gitlab/github, create a new release as discussed, specify a new release tag and copy-paste the link to Source into the setup.py file (do not forget to also increment the version number).&lt;/strong&gt; &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#uploading-the-distribution-archives"&gt;
  &lt;/a&gt;
  Uploading the distribution archives
&lt;/h3&gt;

&lt;p&gt;The first thing to do is register an account on TestPyPI, which is a separate instance of the package index intended for testing and experimentation. To register an account, go to &lt;a href="https://test.pypi.org/account/register/"&gt;here&lt;/a&gt; and complete the steps on that page. You will also need to verify your email address before you’re able to upload any packages.  &lt;/p&gt;

&lt;p&gt;After registration, use &lt;strong&gt;twine&lt;/strong&gt; to upload the distribution packages.  &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Navigate to folder where you have al the files and package located.
&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;python setup.py sdist&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Install Twine:  &lt;code&gt;pip install twine&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Run twine: &lt;code&gt;twine upload --repository testpypi dist/*&lt;/code&gt;
Upload successful
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#installing-newly-uploaded-package"&gt;
  &lt;/a&gt;
  Installing newly uploaded package
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pip install -i https://test.pypi.org/simple/ your-package-name&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When you are ready to publish your package to &lt;strong&gt;PyPI&lt;/strong&gt; after proper testing, run the following command:&lt;br&gt;&lt;br&gt;
&lt;code&gt;twine upload dist/*&lt;/code&gt;&lt;br&gt;&lt;br&gt;
to publish it on PyPI.    &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;:&lt;br&gt;&lt;br&gt;
Now for every future updates to your package:  &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;change the version number in setup.py file&lt;/li&gt;
&lt;li&gt;create tag/release in gitlab/github&lt;/li&gt;
&lt;li&gt;update the &lt;em&gt;download_url&lt;/em&gt; in setup.py&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;python setup.py sdist&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;twine upload dist/*&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;pip install your-package --upgrade&lt;/code&gt; --&amp;gt; to see whether your changes worked.
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;AND IT'S DONE ...YAAAY !!&lt;br&gt;&lt;br&gt;
Visit PyPI and search for your package name. Now you can use your package just like any other python packages by installing it with pip i.e. &lt;code&gt;pip install your-package-name&lt;/code&gt;.  &lt;/p&gt;

&lt;p&gt;I hope this blog helped you understand how to publish your own Python Package easily.&lt;/p&gt;

&lt;p&gt;Happy coding !!&lt;/p&gt;

</description>
      <category>python</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>How express.js works</title>
      <author>Md.  Raihan Hossain Jibon</author>
      <pubDate>Sun, 26 Dec 2021 17:41:36 +0000</pubDate>
      <link>https://dev.to/rjibon49/how-expressjs-works-160c</link>
      <guid>https://dev.to/rjibon49/how-expressjs-works-160c</guid>
      <description>&lt;p&gt;In this post, we will go through the source code of express, and try to understand how it works under the hood. Studying how a popular open source library works, will help us make better applications using it, and reduces some of the “magic” involved &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#when-using-it"&gt;
  &lt;/a&gt;
  when using it.
&lt;/h3&gt;

&lt;p&gt;The “Hello World” example&lt;br&gt;
Let’s use the “Hello world” example given in the official website to form a starting point for digging into the source code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const express = require("express")
const app = express()

app.get("/", (req, res) =&amp;gt; res.send("Hello World!"))

app.listen(3000, () =&amp;gt; console.log("Example app listening on port 3000!"))
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#creating-a-new-express-application"&gt;
  &lt;/a&gt;
  Creating a new express application
&lt;/h3&gt;

&lt;p&gt;The var app = express() statement creates a new express application for you. The createApplication function from the lib/express.js file is the default export, which we see as the express() function call.&lt;/p&gt;

&lt;p&gt;Some of the important bits are:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const mixin = require("merge-descriptors")
const proto = require("./application")

function createApplication() {
    const app = function(req, res, next) {
        app.handle(req, res, next)
    }
    mixin(app, proto, false)
    return app
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#starting-the-http-server"&gt;
  &lt;/a&gt;
  Starting the HTTP server
&lt;/h2&gt;

&lt;p&gt;After setting up the routes, the server has to be started. In our example, we call the app.listen method, with the port number, and callback function as the arguments. To understand this method, we can see lib/application.js. The gist of it is:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;app.listen = function listen() {
    var server = http.createServer(this)
    return server.listen.apply(server, arguments)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Hopefully, this post helped you in understanding the important aspects of the source code, which you can use to understand the rest of it.&lt;/p&gt;

&lt;p&gt;If there are any libraries or frameworks whose internal workings you feel deserve an explanation, let me know in the comments.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>System Design Interviews: A Step-By-Step Guide</title>
      <author>Arslan Ahmad</author>
      <pubDate>Sun, 26 Dec 2021 17:41:20 +0000</pubDate>
      <link>https://dev.to/arslan_ah/system-design-interviews-a-step-by-step-guide-39am</link>
      <guid>https://dev.to/arslan_ah/system-design-interviews-a-step-by-step-guide-39am</guid>
      <description>&lt;p&gt;How to efficiently manage a 45 minutes system design interview?&lt;/p&gt;

&lt;p&gt;System design interviews (SDIs) have gained a lot of focus in the past few years. Now a standard part of every software engineering interview, these interviews assess a candidate’s ability to handle complex systems. &lt;strong&gt;Performance in these interviews determines the position and salary offered by the interviewing company.&lt;/strong&gt; Engineers usually struggle with SDIs partly due to their lack of experience developing large-scale systems and partly due to the unstructured nature of SDIs. Engineers who have experience building such systems still find these interviews uncomfortable, mainly because the design problems are open-ended and have no standard answer.&lt;/p&gt;

&lt;p&gt;Generally, software engineers have difficulty with system design interviews for three primary reasons:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;SDIs are &lt;strong&gt;unstructured&lt;/strong&gt;, where candidates are asked to take on an open-ended design problem that doesn’t have a standard solution.&lt;/li&gt;
&lt;li&gt;Candidates &lt;strong&gt;lack experience&lt;/strong&gt; in developing complex and large-scale systems.&lt;/li&gt;
&lt;li&gt;Candidates did not &lt;strong&gt;spend enough time&lt;/strong&gt; preparing for SDIs.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Like coding interviews, candidates who have not put a deliberate effort to prepare for SDIs, mostly perform poorly, especially at top companies like Google, Facebook, Amazon, Microsoft, etc. In these companies, candidates who do not perform above average have a limited chance to get an offer. &lt;strong&gt;On the other hand, a good performance always results in a better offer (a higher position and salary) since it proves the candidate’s ability to handle a complex system.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;During my professional career, I have taken more than 200 system design interviews. My goal in this post is to provide a step-by-step guide on how to approach system design questions during an interview; it will assist with overcoming the problems highlighted above.&lt;/p&gt;

&lt;p&gt;Check &lt;strong&gt;&lt;a href="https://www.designgurus.org/course/grokking-the-system-design-interview"&gt;Grokking the System Design Interview&lt;/a&gt;&lt;/strong&gt; to learn about important distributed system concepts.&lt;/p&gt;

&lt;p&gt;In my experience, candidates who have performed better tend to follow these seven steps:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Requirements clarifications:&lt;/strong&gt; Always ask questions to find the exact scope of the problem you are solving.&lt;br&gt;
&lt;strong&gt;2. Back-of-the-envelope estimation:&lt;/strong&gt; It’s always a good idea to estimate the scale of the system you are going to design. This will also help later, when you will be focusing on scaling, partitioning, load balancing, caching, etc.&lt;br&gt;
&lt;strong&gt;3. System interface definition:&lt;/strong&gt; Define what APIs are expected from the system. This will not only establish the exact contract expected from the system but also ensure that you have not gotten any requirements wrong.&lt;br&gt;
&lt;strong&gt;4. Define data model:&lt;/strong&gt; Defining the system data model early on will clarify how data will flow among different components of the system and later will also guide towards the data partitioning and management.&lt;br&gt;
&lt;strong&gt;5. High-level design:&lt;/strong&gt; Draw a block diagram with 5–6 boxes representing the core components of your system. You should identify enough components that are needed to solve the actual problem from end to end.&lt;br&gt;
&lt;strong&gt;6. Detailed design:&lt;/strong&gt; Dig deeper into 2–3 components; interviewer’s feedback should always guide you towards which parts of the system she wants you to explain further. You should be able to provide different options, their pros and cons, and why are you choosing them?&lt;br&gt;
&lt;strong&gt;7. Identifying and resolving bottlenecks:&lt;/strong&gt; Try to discuss as many bottlenecks (and different approaches to mitigate them) as possible.&lt;/p&gt;

&lt;p&gt;Let’s discuss each step in detail with a real case study:&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#step-1-requirements-clarifications"&gt;
  &lt;/a&gt;
  Step 1: Requirements clarifications
&lt;/h2&gt;

&lt;p&gt;It is always a good idea to ask questions about the exact scope of the problem we are solving. Design questions are mostly open-ended, and they don’t have ONE correct answer; that’s why clarifying ambiguities early in the interview becomes critical. Candidates who spend enough time defining the end goals of the system always have a better chance to be successful in the interview. Also, since we only have 35–40 minutes to design a (supposedly) large system, we should clarify what parts of the system we will be focusing on.&lt;/p&gt;

&lt;p&gt;Let’s expand this with an actual example of designing a Twitter-like service. Here are some questions for designing Twitter that should be answered before moving on to the next steps:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Will users of our service be able to post tweets and follow other people?&lt;/li&gt;
&lt;li&gt;Should we also design to create and display the user’s timeline?&lt;/li&gt;
&lt;li&gt;Will tweets contain photos and videos?&lt;/li&gt;
&lt;li&gt;Are we focusing on the backend only, or are we developing the front-end too?&lt;/li&gt;
&lt;li&gt;Will users be able to search tweets?&lt;/li&gt;
&lt;li&gt;Do we need to display hot trending topics?&lt;/li&gt;
&lt;li&gt;Will there be any push notification for new (or important) tweets?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All such questions will determine how our end design will look like.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--azQ_kyjj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1vla8mnczr2if415r27d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--azQ_kyjj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1vla8mnczr2if415r27d.png" alt="Photo by Malcolm Lightbody on Unsplash" width="700" height="466"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#step-2-backoftheenvelope-estimation"&gt;
  &lt;/a&gt;
  Step 2: Back-of-the-envelope estimation
&lt;/h2&gt;

&lt;p&gt;It is always a good idea to estimate the scale of the system we’re going to design. This will also help later when we will be focusing on scaling, partitioning, load balancing, and caching.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What scale is expected from the system (e.g., number of new tweets, number of tweet views, number of timeline generations per sec., etc.)?&lt;/li&gt;
&lt;li&gt;How much storage will we need? We will have different storage requirements if users can have photos and videos in their tweets.&lt;/li&gt;
&lt;li&gt;What network bandwidth usage are we expecting? This will be crucial in deciding how we will manage traffic and balance load between servers.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#step-3-system-interface-definition"&gt;
  &lt;/a&gt;
  Step 3: System interface definition
&lt;/h2&gt;

&lt;p&gt;Define what APIs are expected from the system. This will not only establish the exact contract expected from the system but will also ensure that we haven’t gotten any requirements wrong. Some examples of APIs for our Twitter-like service will be:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;postTweet(user_id, tweet_data, tweet_location, timestamp, …)
generateTimeline(user_id, current_time, user_location, …)
markTweetFavorite(user_id, tweet_id, timestamp, …)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#step-4-defining-data-model"&gt;
  &lt;/a&gt;
  Step 4: Defining data model
&lt;/h2&gt;

&lt;p&gt;Defining the data model in the early part of the interview will clarify how data will flow between different components of the system. Later, it will guide for data partitioning and management. The candidate should be able to identify various entities of the system, how they will interact with each other, and different aspects of data management like storage, transportation, encryption, etc. Here are some entities for our Twitter-like service:&lt;br&gt;
&lt;strong&gt;User:&lt;/strong&gt; UserID, Name, Email, DoB, CreationData, LastLogin, etc.&lt;br&gt;
&lt;strong&gt;Tweet:&lt;/strong&gt; TweetID, Content, TweetLocation, NumberOfLikes, TimeStamp, etc.&lt;br&gt;
&lt;strong&gt;UserFollowo:&lt;/strong&gt; UserdID1, UserID2&lt;br&gt;
&lt;strong&gt;FavoriteTweets:&lt;/strong&gt; UserID, TweetID, TimeStamp&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9MBOIYPO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ecmfllged09ajdjnf9v5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9MBOIYPO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ecmfllged09ajdjnf9v5.png" alt="Image description" width="700" height="211"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Which database system should we use? Will NoSQL like &lt;a href="https://en.wikipedia.org/wiki/Apache_Cassandra"&gt;Cassandra&lt;/a&gt; best fit our needs, or should we use a MySQL-like solution? What kind of block storage should we use to store photos and videos? &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-5-highlevel-design"&gt;
  &lt;/a&gt;
  Step 5: High-level design
&lt;/h2&gt;

&lt;p&gt;Draw a block diagram with 5–6 boxes representing the core components of our system. We should identify enough components that are needed to solve the actual problem from end to end.&lt;/p&gt;

&lt;p&gt;For Twitter, at a high level, we will need multiple application servers to serve all the read/write requests with load balancers in front of them for traffic distributions. If we’re assuming that we will have a lot more read traffic (as compared to write), we can decide to have separate servers for handling these scenarios. On the backend, we need an efficient database that can store all the tweets and can support a huge number of reads. We will also need a distributed file storage system for storing photos and videos.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ty1VhY0G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kn39faxmx8muxfs0nlvg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ty1VhY0G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kn39faxmx8muxfs0nlvg.png" alt="Image description" width="369" height="203"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-6-detailed-design"&gt;
  &lt;/a&gt;
  Step 6: Detailed design
&lt;/h2&gt;

&lt;p&gt;Dig deeper into two or three major components; the interviewer’s feedback should always guide us to what parts of the system need further discussion. We should be able to present different approaches, their pros and cons, and explain why we will prefer one approach over the other. Remember, there is no single answer; the only important thing is to consider tradeoffs between different options while keeping system constraints in mind.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Since we will be storing a massive amount of data, how should we partition our data to distribute it to multiple databases? Should we try to store all the data of a user on the same database? What issue could it cause?&lt;/li&gt;
&lt;li&gt;How will we handle hot users who tweet a lot or follow lots of people?&lt;/li&gt;
&lt;li&gt;Since users’ timelines will contain the most recent (and relevant) tweets, should we try to store our data in such a way that is optimized for scanning the latest tweets?&lt;/li&gt;
&lt;li&gt;How much and at which layer should we introduce cache to speed things up?&lt;/li&gt;
&lt;li&gt;What components need better load balancing?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7iHBY1GP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nikdbd64s8dywl0fkvm6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7iHBY1GP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nikdbd64s8dywl0fkvm6.png" alt="Image description" width="700" height="384"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-7-identifying-and-resolving-bottlenecks"&gt;
  &lt;/a&gt;
  Step 7: Identifying and resolving bottlenecks
&lt;/h2&gt;

&lt;p&gt;Try to discuss as many bottlenecks as possible and different approaches to mitigate them.&lt;br&gt;
Is there any single point of failure in our system? What are we doing to mitigate it?&lt;br&gt;
Do we have enough replicas of the data so that if we lose a few servers, we can still serve our users?&lt;br&gt;
Similarly, do we have enough copies of different services running such that a few failures will not cause a total system shutdown?&lt;br&gt;
How are we monitoring the performance of our service? Do we get alerts whenever critical components fail, or their performance degrades?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;To sum up, preparing well and being organized during the interview is key to success in a system design interview. The steps mentioned above should guide you to stay on track and cover all the different aspects while designing a system.&lt;/p&gt;

&lt;p&gt;Please take a look at &lt;strong&gt;&lt;a href="https://www.designgurus.org/course/grokking-the-system-design-interview"&gt;Grokking the System Design Interview&lt;/a&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;a href="https://www.designgurus.org/course/grokking-the-advanced-system-design-interview"&gt;Grokking the Advanced System Design Interview&lt;/a&gt;&lt;/strong&gt; for some good examples of system design interview questions and their answers.&lt;/p&gt;

</description>
      <category>programming</category>
      <category>distributedsystems</category>
      <category>career</category>
      <category>architecture</category>
    </item>
    <item>
      <title>Internet image as desktop background without downloading it in your local machine :) Its Possible</title>
      <author>manish srivastava</author>
      <pubDate>Sun, 26 Dec 2021 17:33:33 +0000</pubDate>
      <link>https://dev.to/manishfoodtechs/internet-image-as-desktop-background-without-downloading-it-in-your-local-machine-its-possible-1ab1</link>
      <guid>https://dev.to/manishfoodtechs/internet-image-as-desktop-background-without-downloading-it-in-your-local-machine-its-possible-1ab1</guid>
      <description>&lt;p&gt;Hello Friends,&lt;/p&gt;

&lt;p&gt;Many of us download images from internet and then set it as wallpaper. In this short hack , I will let you know, how you can make any internet image as desktop background without downloading it in your local machine.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Kn5f2D9k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cpnmg57zi6i7mz5liux6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Kn5f2D9k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cpnmg57zi6i7mz5liux6.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In ubuntu you need to run this command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo apt-get install feh
feh --bg-scale /path/to/your/background/image.jpg
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;change path to internet image:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;feh --bg-scale https://bit.ly/3EnPMkc
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above link is shorturl of &lt;a href="https://upload.wikimedia.org/wikipedia/commons/b/b3/Shinjini_kathak_dance_indian_classical_san_Francisco.jpg"&gt;https://upload.wikimedia.org/wikipedia/commons/b/b3/Shinjini_kathak_dance_indian_classical_san_Francisco.jpg&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;you can make feh to remember your choice next boot:&lt;br&gt;
Once you've picked a wallpaper, feh stores the name in a file called .fehbg. That means you can tell it to restore the wallpaper on the next boot by checking to see what's inside that file. Add this line to your ~/.xinitrc file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;eval `cat $HOME/.fehbg` &amp;amp;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Other things you can do:&lt;/p&gt;

&lt;p&gt;(1) My readers may recall my post about the lorapora-sum of images, in which images are generated on each refresh ( check my previous posts). You can try this on your server by allowing feh to reload every 2 hours. As a simple home-made solution.&lt;/p&gt;

&lt;p&gt;(2) If you are a "Administrator," you can update the season greeting as the desktop wallpaper on all computers connected to your network.&lt;/p&gt;

&lt;p&gt;(3) New notices are delivered to employees' desktops on a daily basis. They are not required to open mail:)&lt;/p&gt;

&lt;p&gt;Bye!!! &lt;/p&gt;

</description>
      <category>ubuntu</category>
      <category>linux</category>
      <category>desktop</category>
    </item>
    <item>
      <title>How to Add Featured Image in WordPress RSS Feed</title>
      <author>elinabey</author>
      <pubDate>Sun, 26 Dec 2021 17:28:44 +0000</pubDate>
      <link>https://dev.to/elinabey/how-to-add-featured-image-in-wordpress-rss-feed-1g0e</link>
      <guid>https://dev.to/elinabey/how-to-add-featured-image-in-wordpress-rss-feed-1g0e</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6SPLLRo---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j0lycwxptahm4pggsgin.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6SPLLRo---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j0lycwxptahm4pggsgin.jpg" alt="Add Featured Image in WordPress RSS Feed" width="600" height="300"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Featured Image in WordPress RSS Feed. If you use an RSS feed on your WordPress website, you'll notice that the featured image isn't included in your RSS feed's posts by default. Having an RSS feed with images will enhance your syndication and may come in handy later because marketing tools like Mailup, Aweber, MailChimp use RSS feeds to create newsletters. RSS really means simple syndication. &lt;/p&gt;

&lt;p&gt;In this brief guide, I will show you how to show your featured image in WordPress RSS feed using a plugin and without a plugin.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#featured-image-in-wordpress-rss%C2%A0feed-manually"&gt;
  &lt;/a&gt;
  Featured Image in WordPress RSS Feed (Manually)
&lt;/h2&gt;

&lt;p&gt;If you are familiar with modifying your &lt;strong&gt;&lt;code&gt;functions.php&lt;/code&gt;&lt;/strong&gt; file, you can use the code below to display the prominent Featured images in your RSS feed.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Login to your WordPress Dashboard.&lt;/li&gt;
&lt;li&gt;Go to &lt;strong&gt;Appearance&lt;/strong&gt; &amp;gt;&amp;gt; &lt;strong&gt;Theme Editor&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Click on &lt;strong&gt;function.php&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Add given code in the bottom of function.php file.&lt;/li&gt;
&lt;li&gt;That's All, Click on &lt;strong&gt;Update file&lt;/strong&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You can also add this code by using FTP.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Yf9ZDIAo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w6tx40hbna1b65bnqe9t.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Yf9ZDIAo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w6tx40hbna1b65bnqe9t.jpg" alt="Featured Image" width="880" height="466"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cd"&gt;/**
 * Featured image to RSS Feed.
 */&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;featuredtoRSS&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="k"&gt;global&lt;/span&gt; &lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nf"&gt;has_post_thumbnail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="no"&gt;ID&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;){&lt;/span&gt;
&lt;span class="nv"&gt;$content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'&amp;lt;div&amp;gt;'&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="nf"&gt;get_the_post_thumbnail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="no"&gt;ID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'medium'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'style'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'margin-bottom: 15px;'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'&amp;lt;/div&amp;gt;'&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nf"&gt;add_filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'the_excerpt_rss'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'featuredtoRSS'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nf"&gt;add_filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'the_content_feed'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'featuredtoRSS'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Copy the above code and paste it into your &lt;strong&gt;function.php&lt;/strong&gt; file. If you don't know what you are doing with the function first make a backup. &lt;/p&gt;

&lt;p&gt;I shared this post from &lt;a href="https://softcodeon.com/wordpress/featured-image-in-wordpress-rss-feed.htm"&gt;Add Featured Image in WordPress RSS Feed&lt;/a&gt; you can read in detail from there. Also they have provided easy way by using a plugin.&lt;/p&gt;

&lt;p&gt;If you have any question please discuss below help to improve. Thank you.&lt;/p&gt;

</description>
      <category>wordpress</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Protecting Employees Using Secure AWS Solutions</title>
      <author>Madhu Kumar</author>
      <pubDate>Sun, 26 Dec 2021 17:22:30 +0000</pubDate>
      <link>https://dev.to/aws-builders/protecting-employees-using-secure-aws-solutions-4el4</link>
      <guid>https://dev.to/aws-builders/protecting-employees-using-secure-aws-solutions-4el4</guid>
      <description>&lt;p&gt;&lt;strong&gt;What is TMA?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Since 2014, Deutsche Telekom AG (DTAG) has run an employee threat management system internally. Dealing with all kinds of workplace issues and threats, the ultimate aim of the system is to ensure that each employee is treated with dignity and respect and to protect the company and its employees from harm.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--T6I8dzHA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o5f3ba441fxmsas4s1e8.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T6I8dzHA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o5f3ba441fxmsas4s1e8.jpg" alt="Image description" width="700" height="466"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Since data privacy and security are paramount for this project, these aspects are taken into serious consideration when architecting and implementing the solution in AWS:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;The points below reflect the services implemented based on the security recommendations and improvements suggested by the AWS Well-Architected Review:&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Ruby on Rails as a web-application framework — introduced containerisation using Docker process&lt;br&gt;
Deployments via CodePipeline managed by Elastic Container Service&lt;br&gt;
RDS PostgreSQL for data tier — multi-AZ for high availability and failover support&lt;br&gt;
GitLab (Workbench)/CodePipeline for versioning and CI/CD&lt;br&gt;
SSM Parameter Store for passwords and parameters&lt;br&gt;
Elastic Load Balancing — Application Load Balancer for availability&lt;br&gt;
AWS Key Management Service — encryption for data at rest&lt;br&gt;
AWS Certificate Manager for certificate management&lt;br&gt;
AWS CloudFormation — Infrastructure as Code&lt;br&gt;
Amazon CloudWatch — Monitoring&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS Architecture — Security design implemented by T-Systems:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yyyYhiJl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2eh6t154teld3uzna29p.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yyyYhiJl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2eh6t154teld3uzna29p.jpg" alt="Image description" width="880" height="587"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS Architecture — CI/CD Pipeline implemented by T-Systems:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RFi73DnG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z97oxhfsh4j4ykf84g7c.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RFi73DnG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z97oxhfsh4j4ykf84g7c.jpg" alt="Image description" width="700" height="466"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Conclusion:&lt;/strong&gt;&lt;br&gt;
Today, threat management is an integral part of Telekom’s personnel security in Germany. In fact, DTAG is the first company in Europe to employ a professional and firmly established Threat Management Assistant system.&lt;br&gt;
Migrating the TMA system to AWS fulfilled all the business’s requirements, including flexibility, security, increased agility, scalability and improved business continuity. It also accelerated development of new features. Zero downtime deployments and AWS automated solutions contributed to a TMA cloud infrastructure with resulting benefits for operations.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reference:&lt;/strong&gt; &lt;br&gt;
&lt;a href="https://www.t-systems.com/de/en/newsroom/expert-blogs/protecting-employees-using-secure-aws-solutions-387756"&gt;https://www.t-systems.com/de/en/newsroom/expert-blogs/protecting-employees-using-secure-aws-solutions-387756&lt;/a&gt;&lt;/p&gt;

</description>
      <category>aws</category>
      <category>containers</category>
      <category>security</category>
      <category>devops</category>
    </item>
    <item>
      <title>How to quickly optimize images in a Github repository</title>
      <author>Diego Ballesteros</author>
      <pubDate>Sun, 26 Dec 2021 16:54:56 +0000</pubDate>
      <link>https://dev.to/diballesteros/how-to-quickly-optimize-images-in-a-github-repository-akn</link>
      <guid>https://dev.to/diballesteros/how-to-quickly-optimize-images-in-a-github-repository-akn</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QX0WfPoU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1024/1%2A6-uJXlkiT2gCE7ZYpwbNcQ.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QX0WfPoU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1024/1%2A6-uJXlkiT2gCE7ZYpwbNcQ.jpeg" alt="Splash" width="880" height="1320"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Photo by Erik Mclean on Unsplash&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;It can be pretty common to just have some images bundled up in the repository. Taking into consideration the size of said images can be incredibly important to lower the size of the entire page/web app.&lt;/p&gt;

&lt;p&gt;There are plenty of services online that can be used to optimize images but Github directly has access to a method of optimization!&lt;/p&gt;

&lt;p&gt;In this short tutorial, I’ll quickly go over how to set it up in your repo, this entire process should take under 5 minutes!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#marketplace"&gt;
  &lt;/a&gt;
  Marketplace
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8sTxVwvp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/438/0%2AFhc4jB6NQJQLeoGN" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8sTxVwvp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/438/0%2AFhc4jB6NQJQLeoGN" alt="ImgBot" width="438" height="160"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Within the Github marketplace, which can be accessed from the top bar of Github, you can access a variety of different tools for your repository! One of which is the &lt;a href="https://github.com/marketplace/imgbot"&gt;ImgBot&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;As per the description: “Imgbot is a friendly robot that optimizes your images and saves you time. Optimized images mean smaller file sizes without sacrificing quality.”&lt;/p&gt;

&lt;p&gt;Great! Once you’re on the page you can set up the plan. As a disclaimer, ImgBot does have paid plans for private repos but for public repos it is completely free!&lt;/p&gt;

&lt;p&gt;After selecting the plan you can complete the installation, as an aside you can also select which repositories you specifically want to install it to.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#pull-request"&gt;
  &lt;/a&gt;
  Pull request
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uOX_mfCR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/636/0%2AzOPh45ED5u2l32--" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uOX_mfCR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/636/0%2AzOPh45ED5u2l32--" alt="ImgBot Detail" width="636" height="167"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After installing the ImgBot it will automatically create a pull request after analyzing all the images.&lt;/p&gt;

&lt;p&gt;It’ll even tell you exactly how much the images were reduced by:&lt;/p&gt;

&lt;p&gt;And within detail it’ll give a breakdown of every single image that was altered:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UFiMiTMO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/544/0%2A3aXOgrPM7a_d74FJ" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UFiMiTMO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/544/0%2A3aXOgrPM7a_d74FJ" alt="Picture details" width="544" height="233"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The way the ImgBot optimizes every file can be different but to give an example here are two files:&lt;/p&gt;

&lt;p&gt;For a PNG file it reduces the size:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---vb3apGg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/381/0%2AhVx8Cc_TqYifaIqS" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---vb3apGg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/381/0%2AhVx8Cc_TqYifaIqS" alt="PNG files" width="381" height="76"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Meanwhile, for an SVG it takes away all the empty space and essentially minifies it:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IrqqPBNg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/901/0%2AGiZFbjUmbWQXmi0Y" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IrqqPBNg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/901/0%2AGiZFbjUmbWQXmi0Y" alt="SVG file" width="880" height="285"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Afterward, it’s just reviewing all the changes and accepting the PR merge into the main branch, as easy as that!&lt;/p&gt;

&lt;p&gt;Let me know how it goes in the comments below or if you have any other optimizations for images.&lt;/p&gt;

&lt;p&gt;More content at &lt;a href="https://relatablecode.com"&gt;RelatableCode&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Originally published at&lt;/em&gt; &lt;a href="https://relatablecode.com/how-to-quickly-optimize-images-in-a-github-repository/"&gt;&lt;em&gt;https://relatablecode.com&lt;/em&gt;&lt;/a&gt; &lt;em&gt;on December 26, 2021.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>githubmarketplace</category>
      <category>github</category>
    </item>
    <item>
      <title>Creating new server in node.js</title>
      <author>Muhammadaziz</author>
      <pubDate>Sun, 26 Dec 2021 16:44:11 +0000</pubDate>
      <link>https://dev.to/muhammadaziz107/creating-new-server-in-nodejs-2icp</link>
      <guid>https://dev.to/muhammadaziz107/creating-new-server-in-nodejs-2icp</guid>
      <description>&lt;p&gt;Firstly install express&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const express = require("express")
const app = express()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then add to server.js or other js files to listen port&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;app.listen(4000, ()=&amp;gt;{
console.log("server is running on port: 4000")
})
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Or if you want to this way. This way is also good. It's best practices&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const PORT = process.env.PORT || 4000

app.listen(PORT, ()=&amp;gt;{
console.log(PORT)
})
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>javascript</category>
      <category>npm</category>
      <category>node</category>
    </item>
  </channel>
</rss>
