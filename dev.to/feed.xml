<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Best File Comparison Tools For Linux.</title>
      <author>Chetan AtrawalkarüëâCA.</author>
      <pubDate>Wed, 08 Dec 2021 12:00:04 +0000</pubDate>
      <link>https://dev.to/chetan_atrawalkar/best-file-comparison-tools-for-linux-11n8</link>
      <guid>https://dev.to/chetan_atrawalkar/best-file-comparison-tools-for-linux-11n8</guid>
      <description>&lt;p&gt;Many new tools for comparing files have emerged in Linux over the years, and in this post, we'll examine best and most useful tools for doing that.&lt;/p&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;File comparison compares the contents of computer files, finding their common contents and their differences. When you compare two computer files on Linux, the difference between their contents is called a &lt;strong&gt;diff&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;There are several file comparison tools that you can use on Linux, and in this review, we shall look at some of the best terminal based and GUI diff tools you can take advantage of while writing code or other text files.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;üëâ Let's go and explore this tools.&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#kompare"&gt;
  &lt;/a&gt;
  1Ô∏è‚É£ Kompare
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Kompare&lt;/strong&gt; is a &lt;strong&gt;diff GUI&lt;/strong&gt; wrapper that allows users to view differences between files and also merge them.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Some of its features include:&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;Supports multiple diff formats&lt;/li&gt;
&lt;li&gt;Supports comparison of directories&lt;/li&gt;
&lt;li&gt;Supports reading diff files&lt;/li&gt;
&lt;li&gt;Customizable interface&lt;/li&gt;
&lt;li&gt;Creating and applying patches to source files&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vcpgzmmf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lb1lgkmtzwde4oaexmfr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vcpgzmmf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lb1lgkmtzwde4oaexmfr.png" alt="Image description" width="880" height="562"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#homepage-link"&gt;
  &lt;/a&gt;
  üìå&lt;a href="https://www.kde.org/applications/development/kompare/"&gt;Homepage Link:&lt;/a&gt;
&lt;/h3&gt;




&lt;h2&gt;
  &lt;a href="#vimdiff"&gt;
  &lt;/a&gt;
  2Ô∏è‚É£ Vimdiff
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Vimdiff&lt;/strong&gt; works in an advanced manner in comparison to &lt;strong&gt;diff&lt;/strong&gt; utility. It enables a user to edit up to four versions of a file while showing their differences. When you run it, &lt;strong&gt;Vimdiff&lt;/strong&gt; opens two or three or four files using &lt;strong&gt;vim text editor&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Vimdiff&lt;/strong&gt; Edit Multiple Files for Differences.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MCJIrBQK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pwopriv78blpk6jg0q15.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MCJIrBQK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pwopriv78blpk6jg0q15.png" alt="Image description" width="880" height="562"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#homepage-link"&gt;
  &lt;/a&gt;
  üìå&lt;a href="http://vimdoc.sourceforge.net/htmldoc/diff.html"&gt;Homepage Link:&lt;/a&gt;
&lt;/h3&gt;




&lt;h2&gt;
  &lt;a href="#diffuse-gui-diff-tool"&gt;
  &lt;/a&gt;
  3Ô∏è‚É£ Diffuse ‚Äì GUI Diff Tool
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Diffuse&lt;/strong&gt; is another popular, free, small and simple GUI diff and merge tool that you can use on Linux. Written in Python, It offers two major functionalities, that is: file comparison and version control, allowing file editing, merging of files and also output the difference between files.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You can view a comparison summary, select lines of text in files using a mouse pointer, match lines in adjacent files and edit different file. Other features include:&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;Syntax highlighting&lt;/li&gt;
&lt;li&gt;Keyboard shortcuts for easy navigation&lt;/li&gt;
&lt;li&gt;Supports unlimited undo&lt;/li&gt;
&lt;li&gt;Unicode support&lt;/li&gt;
&lt;li&gt;Supports Git, CVS, Darcs, Mercurial, RCS, Subversion, SVK and Monotone&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tdkSe87o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z5jukhz37vsf9mjfejvu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tdkSe87o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z5jukhz37vsf9mjfejvu.png" alt="Image description" width="880" height="679"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#homepage-link"&gt;
  &lt;/a&gt;
  üìå&lt;a href="http://diffuse.sourceforge.net/"&gt;Homepage Link:&lt;/a&gt;
&lt;/h3&gt;




&lt;h2&gt;
  &lt;a href="#diffmerge"&gt;
  &lt;/a&gt;
  4Ô∏è‚É£ DiffMerge
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;DiffMerge&lt;/strong&gt; is a cross-platform GUI application for comparing and merging files. It has two functionality engines, the Diff engine which shows the difference between two files, which supports intra-line highlighting and editing and a Merge engine which outputs the changed lines between three files.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It has got the following features:&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;Supports directory comparison&lt;/li&gt;
&lt;li&gt;File browser integration&lt;/li&gt;
&lt;li&gt;Highly configurable&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Nhj6Jf----/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kpz9d1b9rhcusbtg46qj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Nhj6Jf----/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kpz9d1b9rhcusbtg46qj.png" alt="Image description" width="880" height="571"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#homepage-link"&gt;
  &lt;/a&gt;
  üìå&lt;a href="https://sourcegear.com/diffmerge/"&gt;Homepage Link:&lt;/a&gt;
&lt;/h3&gt;




&lt;h2&gt;
  &lt;a href="#meld-diff-tool"&gt;
  &lt;/a&gt;
  5Ô∏è‚É£ Meld ‚Äì Diff Tool
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Meld&lt;/strong&gt; is a lightweight GUI diff and merge tool. It enables users to compare files, directories plus version controlled programs. Built specifically for developers, it comes with the following features:&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;Two-way and three-way comparison of files and directories&lt;/li&gt;
&lt;li&gt;Update of file comparison as a users types more words&lt;/li&gt;
&lt;li&gt;Makes merges easier using auto-merge mode and actions on changed blocks&lt;/li&gt;
&lt;li&gt;Easy comparisons using visualizations&lt;/li&gt;
&lt;li&gt;Supports Git, Mercurial, Subversion, Bazaar plus many more&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MeBmiI0d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fdw48klrf8shairm6ndb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MeBmiI0d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fdw48klrf8shairm6ndb.png" alt="Image description" width="880" height="606"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#homepage-link"&gt;
  &lt;/a&gt;
  üìå&lt;a href="http://meldmerge.org/"&gt;Homepage Link:&lt;/a&gt;
&lt;/h3&gt;




&lt;h2&gt;
  &lt;a href="#kdiff3-diff-and-merge-tool"&gt;
  &lt;/a&gt;
  6Ô∏è‚É£ KDiff3 ‚Äì ‚Äì Diff and Merge Tool
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;KDiff3&lt;/strong&gt; is yet another cool, cross-platform diff and merge tool made from &lt;strong&gt;KDevelop&lt;/strong&gt;. It works on all Unix-like platforms including Linux and Mac OS X, Windows.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It can compare or merge two to three files or directories and has the following notable features:&lt;/p&gt;

&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;Indicates differences line by line and character by character&lt;/li&gt;
&lt;li&gt;Supports auto-merge&lt;/li&gt;
&lt;li&gt;In-built editor to deal with merge-conflicts&lt;/li&gt;
&lt;li&gt;Supports Unicode, UTF-8 and many other codecs&lt;/li&gt;
&lt;li&gt;Allows printing of differences&lt;/li&gt;
&lt;li&gt;Windows explorer integration support&lt;/li&gt;
&lt;li&gt;Also supports auto-detection via byte-order-mark ‚ÄúBOM‚Äù&lt;/li&gt;
&lt;li&gt;Supports manual alignment of lines&lt;/li&gt;
&lt;li&gt;Intuitive GUI and many more&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rFDqUit_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eln0bhlklpfl5clmbjlb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rFDqUit_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eln0bhlklpfl5clmbjlb.png" alt="Image description" width="880" height="643"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#homepage-link"&gt;
  &lt;/a&gt;
  üìå&lt;a href="http://kdiff3.sourceforge.net/"&gt;Homepage Link:&lt;/a&gt;
&lt;/h3&gt;




&lt;h2&gt;
  &lt;a href="#tkdiff"&gt;
  &lt;/a&gt;
  7Ô∏è‚É£ TkDiff
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;TkDiff&lt;/strong&gt; is also a cross-platform, easy-to-use GUI wrapper for the Unix diff tool. It provides a side-by-side view of the differences between two input files. It can run on Linux, Windows and Mac OS X.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Additionally, it has some other exciting features including diff bookmarks, a graphical map of differences for easy and quick navigation plus many more.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4sXGiXdR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vnkcmryxm3ztnn80wde4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4sXGiXdR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vnkcmryxm3ztnn80wde4.png" alt="Image description" width="748" height="521"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#homepage-link"&gt;
  &lt;/a&gt;
  üìå&lt;a href="https://sourceforge.net/projects/tkdiff/"&gt;Homepage Link:&lt;/a&gt;
&lt;/h3&gt;




&lt;p&gt;This is some of the best file and directory comparator and merge tools, you probably want to try out some of them. These may not be the only diff tools available you can find on Linux, but they are known to offer some the best features.&lt;/p&gt;

&lt;p&gt;üôè Please share your valuable feedback in comment section which is yours favourite and mostly used diff tool and which tool you used in daily basis.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thanks-for-reading"&gt;
  &lt;/a&gt;
  Thanks For Reading.
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/chetan.ca"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zQj764Ae--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/default-orange.png" alt="Buy Me A Coffee" width="434" height="100"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#keep-claim-and-just-code-it"&gt;
  &lt;/a&gt;
  üòé Keep Claim And Just Code It!
&lt;/h3&gt;

</description>
      <category>bash</category>
      <category>linux</category>
      <category>beginners</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Python ternary operators - How to use them?</title>
      <author>hrishikesh1990</author>
      <pubDate>Wed, 08 Dec 2021 11:56:34 +0000</pubDate>
      <link>https://dev.to/hrishikesh1990/python-ternary-operators-how-to-use-them-1k61</link>
      <guid>https://dev.to/hrishikesh1990/python-ternary-operators-how-to-use-them-1k61</guid>
      <description>&lt;p&gt;In this short tutorial, let us look at how we can write code using the Python ternary operator. One can make their Python code more concise using the ternary operator.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#table-of-contents-python-ternary-operators"&gt;
  &lt;/a&gt;
  Table of contents - Python ternary operators
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#what-are-ternary-operators-in-python"&gt;What are ternary operators in Python?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#syntax"&gt;Syntax&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#simple-example-of-the-python-ternary-operator-in-a-program"&gt;Simple example of Python ternary operator in a program&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#python-ternary-operator-with-tuples-dictionary-and-lambda"&gt;Python ternary operator with Tuples, Dictionary and Lambda&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#closing-thoughts"&gt;Closing thoughts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#what-are-ternary-operators-in-python"&gt;
  &lt;/a&gt;
  What are ternary operators in Python?
&lt;/h2&gt;

&lt;p&gt;Here, Python‚Äôs ternary or conditional operators are operators that evaluate something based on a condition being true or false. They are also known as conditional expressions. To further simplify it, ternary operators can be thought of as one-line versions of the if-else statements.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#syntax"&gt;
  &lt;/a&gt;
  Syntax
&lt;/h2&gt;

&lt;p&gt;As the name suggests, Python‚Äôs ternary operators need three operands to run. The three operands are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;condition: A boolean expression that needs to evaluate whether true or false.&lt;/li&gt;
&lt;li&gt;val_true: A value that is to be assigned if the condition evaluates to be true.&lt;/li&gt;
&lt;li&gt;val_false: A value that is to be assigned if the condition evaluates to be false.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When it‚Äôs all put together this is how it should look like:&lt;br&gt;
some_var = val_true if [condition] else val_false&lt;/p&gt;

&lt;p&gt;The variable some_var that you see on the left side of the equal-to sign ‚Äú=‚Äù (assignment operator) will be assigned either one of the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;val_true if the boolean expression evaluates to be true.
Or&lt;/li&gt;
&lt;li&gt;val_false if the boolean expression evaluates to be false.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#simple-example-of-the-python-ternary-operator-in-a-program"&gt;
  &lt;/a&gt;
  Simple example of the Python ternary operator in a program
&lt;/h2&gt;

&lt;p&gt;Let‚Äôs write a simple Python program that helps us understand the ternary operator‚Äôs usage. To understand the difference between the Python ternary operator and the if-else statement method, let's first write the program using the if-else statement.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#the-program-using-the-ifelse-method"&gt;
  &lt;/a&gt;
  The program using the "if-else" method:
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;your_age&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Enter your age to check if you are eligible to legally drive or not:'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;your_age&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;driving_permit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;‚Äú&lt;/span&gt;&lt;span class="n"&gt;Yes&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="n"&gt;can&lt;/span&gt; &lt;span class="n"&gt;drive&lt;/span&gt;&lt;span class="err"&gt;!‚Äù&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;driving_permit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;‚Äú&lt;/span&gt;&lt;span class="n"&gt;Sorry&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="n"&gt;can&lt;/span&gt;&lt;span class="err"&gt;‚Äô&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="n"&gt;drive&lt;/span&gt; &lt;span class="n"&gt;yet&lt;/span&gt;&lt;span class="err"&gt;!‚Äù&lt;/span&gt; 
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"The Result - &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;driving_permit&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;And here is the output if 20 is the input:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;Enter&lt;/span&gt; &lt;span class="n"&gt;your&lt;/span&gt; &lt;span class="n"&gt;age&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;check&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="n"&gt;are&lt;/span&gt; &lt;span class="n"&gt;eligible&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;legally&lt;/span&gt; &lt;span class="n"&gt;drive&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;
&lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;Result&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Yes&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="n"&gt;can&lt;/span&gt; &lt;span class="n"&gt;drive&lt;/span&gt;&lt;span class="err"&gt;!&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this example, the if-else statement assigns ‚ÄúYes, you can drive!‚Äù to the driving_permit variable if the age entered is greater than or equal to 18. Otherwise, it assigns Sorry, you can‚Äôt drive yet!‚Äù to driving_permit.&lt;/p&gt;

&lt;p&gt;Now, to make this program a lot more concise, we can make use of the syntax of the ternary expression.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-program-using-the-ternary-operator-method"&gt;
  &lt;/a&gt;
  The program using the ternary operator method
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;your_age&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Enter your age to check if you are eligible to legally drive or not:'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;driving_permit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;‚Äú&lt;/span&gt;&lt;span class="n"&gt;Yes&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="n"&gt;can&lt;/span&gt; &lt;span class="n"&gt;drive&lt;/span&gt;&lt;span class="err"&gt;!‚Äù&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;your_age&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="err"&gt;‚Äú&lt;/span&gt;&lt;span class="n"&gt;Sorry&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="n"&gt;can&lt;/span&gt;&lt;span class="err"&gt;‚Äô&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="n"&gt;drive&lt;/span&gt; &lt;span class="n"&gt;yet&lt;/span&gt;&lt;span class="err"&gt;!‚Äù&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"The Result - &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;driving_permit&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this statement, the left side of the assignment operator (=) is the variable driving_permit. The ternary operator evaluates the condition which is if int(your_age) &amp;gt;= 18. If the result is true, then it returns the val_true, which in this case is ‚ÄúYes, you can drive!‚Äù. Else it returns val_false, which is Sorry, you can‚Äôt drive yet!‚Äù&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#python-ternary-operator-with-tuples-dictionary-and-lambda"&gt;
  &lt;/a&gt;
  Python ternary operator with Tuples, Dictionary and Lambda
&lt;/h2&gt;

&lt;p&gt;As we now have an understanding of how Python‚Äôs ternary operator works, let‚Äôs see how it applies with Tuples, Dictionary and Lambda. Before that, let‚Äôs begin with a simple program on finding the greatest of 2 numbers. It helps with having a clear picture of what we want to accomplish when we apply the ternary method with Python‚Äôs Tuples, Dictionary and Lambda function.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#sample-program-of-python-ternary-operator"&gt;
  &lt;/a&gt;
  Sample program of Python ternary operator.
&lt;/h3&gt;

&lt;p&gt;Here is a simple Python program where we find the greatest of 2 numbers using the ternary operator method.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#input"&gt;
  &lt;/a&gt;
  Input:
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# A code snippet to demonstrate the Python ternary operator
# Finding the greatest of 2 numbers
&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt;

&lt;span class="nb"&gt;max&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;max&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  Output:
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;40
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If [x&amp;gt;y] is true it returns 1, so the element with 1 index will be printed. Otherwise if [x&amp;gt;y] is false it will return 0, so the element with 0 index will be printed.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#python-ternary-operator-with-tuples"&gt;
  &lt;/a&gt;
  Python ternary operator with Tuples
&lt;/h3&gt;

&lt;p&gt;Let‚Äôs now see how ternary conditions are used with Tuples. The syntax to be considered during the usage of the ternary operator with Tuples is (if_check_is_false, if_check_is_true)[check]&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#input"&gt;
  &lt;/a&gt;
  Input:
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# A simple program to demonstrate Python ternary operator with Tuples
&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  Output:
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;40
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#python-ternary-operator-with-dictionary"&gt;
  &lt;/a&gt;
  Python ternary operator with Dictionary
&lt;/h2&gt;

&lt;p&gt;Let‚Äôs now see how ternary conditions are used with the Dictionary data structure.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#input"&gt;
  &lt;/a&gt;
  Input:
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# A simple program to demonstrate Python ternary operator with Dictionary
&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  Output:
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;40
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this case, if [x &amp;gt; y] is True then the value of the True key will be printed. Else if [x&amp;gt;y] is False then the value of the False key will be printed&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#python-ternary-operator-with-the-lambda-function"&gt;
  &lt;/a&gt;
  Python ternary operator with the Lambda function
&lt;/h2&gt;

&lt;p&gt;Interestingly, implementing the ternary operator with the Lambda function is more efficient than the other two methods. This is because with Lambda we are assured that only one expression will be evaluated. But in the instance of Tuple or Dictionary, both the expressions are evaluated.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#input"&gt;
  &lt;/a&gt;
  Input:
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# A simple program to demonstrate Python ternary operator with Lambda
&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;lambda&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;]())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  Output:
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;40
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#closing-thoughts"&gt;
  &lt;/a&gt;
  Closing thoughts
&lt;/h2&gt;

&lt;p&gt;The Python ternary operator is a concise and simple way of implementing if-else statements. It first evaluates the given condition, then returns a specific value depending on whether that condition turns out to be True or False.&lt;/p&gt;

&lt;p&gt;But we need to note that the ternary operator cannot always be used. For example, if you want to test for multiple expressions, you should write out a full if-else statement as usual.&lt;/p&gt;

</description>
      <category>python</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>1-Day Python Build: What‚Äôs The Weather At The North Pole?</title>
      <author>Ryan Britnell</author>
      <pubDate>Wed, 08 Dec 2021 11:52:24 +0000</pubDate>
      <link>https://dev.to/britnellryan/1-day-python-build-whats-the-weather-at-the-north-pole-2f31</link>
      <guid>https://dev.to/britnellryan/1-day-python-build-whats-the-weather-at-the-north-pole-2f31</guid>
      <description>&lt;h1&gt;
  &lt;a href="#whats-the-weather-at-the-north-pole"&gt;
  &lt;/a&gt;
  What's the weather at the North Pole?
&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;This blog post is part of Anvil's Advent Calendar, a project where we build 24 apps in 24 days, and blog about it! That means this app was built in only a few hours; read on to see what our 8th of December app is.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Weather conditions can be pretty tough for Santa Claus and his Elves at the North Pole. With todays advent calendar app, you can find out whether the weather is being naughty or nice for Santa:&lt;/p&gt;

&lt;h3&gt;&lt;center&gt;&lt;a href="https://north-pole-weather.anvil.app"&gt;https://north-pole-weather.anvil.app&lt;/a&gt;&lt;/center&gt;&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ygx7zKYB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9tqf2xllsvvjkry85c7t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ygx7zKYB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9tqf2xllsvvjkry85c7t.png" alt="Finished Weather App" width="880" height="483"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Of course, the app is built with nothing but Python!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#heres-how-it-works"&gt;
  &lt;/a&gt;
  Here's how it works:
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.accuweather.com/"&gt;AccuWeather&lt;/a&gt; provides a simple free API for getting the &lt;a href="https://developer.accuweather.com/accuweather-current-conditions-api/apis/get/currentconditions/v1/%7BlocationKey%7D"&gt;current weather conditions&lt;/a&gt; at a given location. All we need to do is send a request to the API and build a front end for it to display the information we want.&lt;/p&gt;

&lt;p&gt;We can start by building the app's UI by dragging and dropping components, like &lt;a href="https://anvil.works/docs/client/components/basic#label"&gt;Labels&lt;/a&gt;, to display the weather information we want. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--E6MVi59X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://anvil-website-static.s3.eu-west-2.amazonaws.com/advent-calendar/north-pole-weather/weather-app-build.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E6MVi59X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://anvil-website-static.s3.eu-west-2.amazonaws.com/advent-calendar/north-pole-weather/weather-app-build.gif" alt="Dragging and dropping a Label onto a form and naming it self.chance_of_snow" width="880" height="429"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then we just need to &lt;a href="https://developer.accuweather.com/accuweather-current-conditions-api/apis/get/currentconditions/v1/%7BlocationKey%7D"&gt;get an API key&lt;/a&gt; and &lt;a href="https://anvil.works/docs/security/encrypting-secret-data#using-secrets-from-code"&gt;store it as a secret&lt;/a&gt; in our app. We can then create a server function to &lt;a href="https://anvil.works/docs/http-apis/making-http-requests"&gt;send the HTTP request&lt;/a&gt; and get weather data back:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;`@anvil.server.callable
def get_north_pole_weather():
  resp = anvil.http.request(f"http://dataservice.accuweather.com/currentconditions/v1/336714?apikey={anvil.secrets.get_secret('accuweather_key')}", json=True)
  return resp[0]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, we can set the properties of each front-end component, like a Label's display text, in &lt;a href="https://anvil.works/docs/client/python"&gt;client-side Python&lt;/a&gt; to display the weather data:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;...
self.weather_description.text = weather_data['WeatherText']
self.temperature_celsius.text = str(weather_data['Temperature']['Metric']['Value']) + "¬∞C"
...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And that‚Äôs all there is to it! We now have an app to check the weather at the North Pole.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#see-the-source"&gt;
  &lt;/a&gt;
  See the Source
&lt;/h2&gt;

&lt;p&gt;Check out the source code for yourself!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://anvil.works/build#clone:YPVNELTJMBVAKYP3=AWCRNMANN5KU6WCSVLTWST5A"&gt;&lt;u&gt;Clone Link&lt;/u&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>webdev</category>
      <category>adventofcode</category>
      <category>anvil</category>
    </item>
    <item>
      <title>The story of Bonita Documentation! The need for a new documentation site</title>
      <author>Thomas Bouffard</author>
      <pubDate>Wed, 08 Dec 2021 11:27:56 +0000</pubDate>
      <link>https://dev.to/bonitasoft/the-story-of-bonita-documentation-the-need-for-a-new-documentation-site-3p17</link>
      <guid>https://dev.to/bonitasoft/the-story-of-bonita-documentation-the-need-for-a-new-documentation-site-3p17</guid>
      <description>&lt;p&gt;Have you ever had a question, an issue, a need to know something about Bonita? If yes, you‚Äôve probably visited the friendly Bonita Documentation!&lt;/p&gt;

&lt;p&gt;In March 2021, we launched the &lt;em&gt;new&lt;/em&gt; *Bonita Documentation site, which offers fixes and improvements. If you want more details about the new site content, here‚Äôs the &lt;a href="https://community.bonitasoft.com/blog/brand-new-bonita-documentation-site"&gt;site go live announcement&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We want to share with you the story of the Bonita documentation evolution in a series to explain how and why the &lt;a href="https://www.bonitasoft.com/"&gt;Bonitasoft&lt;/a&gt; team decided to make this latest change.&lt;/p&gt;

&lt;p&gt;In our previous article, we described the fascinating history of &lt;a href="https://dev.to/bonitasoft/the-story-of-bonita-documentation-from-drupal-to-github-218g"&gt;the Bonita Documentation site 2016 version&lt;/a&gt;.&lt;br&gt;
Here we‚Äôll show some of the issues we have faced over time and the solution we have been looking for to resolve them.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#issues-with-bonita-documentation-2016"&gt;
  &lt;/a&gt;
  Issues with Bonita Documentation 2016
&lt;/h2&gt;

&lt;p&gt;The Bonita Documentation 2016 version was designed to manage documentation for Bonita Studio and Bonita Runtime only. By 2020, it was unable to support new needs, and we faced major issues in the user experience, maintenance, and operations that couldn‚Äôt be solved easily.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#user-experience"&gt;
  &lt;/a&gt;
  User eXperience
&lt;/h3&gt;

&lt;p&gt;Improvements made with the 2016 version of the Bonita documentation mainly focused on the content and how to update it, but  not so much on the User eXperience (UX).&lt;/p&gt;

&lt;p&gt;The site didn‚Äôt have a useful bookmark system. There weren‚Äôt real anchors in its pages, so it was hard to bookmark a specific section and to navigate between related content on pages and sections.&lt;/p&gt;

&lt;p&gt;The embedded search feature was also limited due to the lack of proper anchors. Clicking on a search result didn't send the user to the paragraph that matched the search request, but to the top of the page instead. There was then no other choice but to scroll in the page looking for the expected paragraph.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--evxedR1N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5gphid5gzqme57l7j6gj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--evxedR1N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5gphid5gzqme57l7j6gj.png" alt="Recycling papers" width="560" height="373"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;‚ÄúRecycling‚Äù by &lt;a href="https://www.freeimages.com/photo/recycling-1239302"&gt;Griszka Niewiadomski&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;SEO was also an issue. Some pages of very old documentation versions were better indexed than their related page in the latest version, so search engines sometimes led the reader to outdated content. Navigation to new content required extra clicks and extra searches in the documentation site.&lt;/p&gt;

&lt;p&gt;One of the impacts of these issues was that readers could too easily miss the information they were searching for. This was not the best user experience and we wanted to do better.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#maintenance"&gt;
  &lt;/a&gt;
  Maintenance
&lt;/h3&gt;

&lt;p&gt;The Bonita Documentation 2016 version involved custom &lt;a href="https://www.python.org/"&gt;Python&lt;/a&gt; scripts to aggregate document&lt;br&gt;
contents coming from various sources, using one repository per documentation component and a branch per version.&lt;/p&gt;

&lt;p&gt;This documentation content structure worked perfectly well, as&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  branches were useful for for updates backport/cherry-pick/merge&lt;/li&gt;
&lt;li&gt;  repositories were useful for content segregation, access management, product and documentation lifecycle alignments.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Each branch in each repository was responsible for generating its documentation part; the aggregation scripts were in charge of assembling everything and adding the final styles.&lt;/p&gt;

&lt;p&gt;Initially this worked well, as there was only a single documentation component (the Bonita platform) and only a few versions.&lt;/p&gt;

&lt;p&gt;Over time though, the Bonita portfolio has grown and now contains more products (including Bonita Continuous Delivery, and Bonita Cloud), so more components and more versions were added to the documentation.&lt;/p&gt;

&lt;p&gt;Duplications of repositories began to appear and we had to make changes in multiple places. Inevitably more and more problems arose. For example:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  At one time, it was possible to generate a PDF file for a given version of a component. This function was abandoned as it did not work properly, but was still present in all branches.&lt;/li&gt;
&lt;li&gt;  The build process of all versions was full of unused tools and dependencies. This slowed down the build.&lt;/li&gt;
&lt;li&gt;  We accepted changes in Markdown with custom syntax (for instance, to manage information and warning blocks), native HTML tags, and &lt;a href="https://fontawesome.com/"&gt;Font Awesome icons&lt;/a&gt;. But minor changes then had to be replicated to all repositories.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As noted, the Bonita Documentation 2016 was complex and hard to maintain. It used an aged technical stack and it was especially hard to build. Developers who may have been able to implement changes were not very encouraged to do so!&lt;/p&gt;

&lt;p&gt;We saw very few technical updates, fewer and fewer bug fixes, and the user experience issues remained.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#operations"&gt;
  &lt;/a&gt;
  Operations
&lt;/h3&gt;

&lt;p&gt;The Bonita Documentation 2016 version had continuous deployment and preview environments. This was perfect for day-to-day work; changing the documentation content was straightforward. The changes were propagated from staging to production transparently.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nONpX-0---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k2ykhtce1d257a3wltgg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nONpX-0---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k2ykhtce1d257a3wltgg.png" alt="Deploy previews with Jenkins when Pull Requests are created or update" width="880" height="548"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;‚ÄúPull Request Flow‚Äù taken from the &lt;a href="https://laurentleseigneur.github.io/agile-grenoble-2017/#/5/8"&gt;Agile Grenoble 2017 presentation ‚ÄúFluidifier la production de la documentation‚Äù&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;But we also faced operational pains.&lt;/p&gt;

&lt;p&gt;Adding a new component version (for instance, when preparing a new Bonita beta version) involved multiple actors and synchronization.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  The configuration to actually manage the version was spread across several locations.&lt;/li&gt;
&lt;li&gt;  Synchronization was done using tickets, and direct conversations.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This lack of ability to self-service updates slowed down the process a lot and generated frustration.&lt;/p&gt;

&lt;p&gt;The documentation site build, and deployment to the preview and production environments, were all managed with internally-operated &lt;a href="https://en.wikipedia.org/wiki/Continuous_integration"&gt;Continuous Integration&lt;/a&gt; servers (&lt;a href="https://www.jenkins.io/"&gt;Jenkins&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Internally-operated meant dealing with Jenkins and server updates. As it involved a large amount of custom scripts and Jenkins jobs, this also meant maintenance to follow the Jenkins evolutions.&lt;/p&gt;

&lt;p&gt;The pre-production and production environments were composed of front-end and search (&lt;a href="https://solr.apache.org/"&gt;Solr&lt;/a&gt;) servers, also operated internally. This was another area for regular maintenance costs.&lt;/p&gt;

&lt;p&gt;As we didn‚Äôt rely on a &lt;a href="https://en.wikipedia.org/wiki/Content_delivery_network"&gt;CDN&lt;/a&gt;, the latency could be high depending on the location a user was browsing the documentation from.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-previous-drupalbased-documentation"&gt;
  &lt;/a&gt;
  The previous Drupal-based documentation
&lt;/h3&gt;

&lt;p&gt;Prior to the Bonita Documentation 2016 version, Bonita documentation (for Bonita BPM v6.0 to v7.2) was managed on Drupal.&lt;/p&gt;

&lt;p&gt;This content had to stay online for a transition period, up until the versions reached end-of-life. As often happens with legacy assets, it was still available years later.&lt;/p&gt;

&lt;p&gt;There were no plans for decommissioning or migrating, and it contained very old content which hadn‚Äôt been updated for a while.&lt;/p&gt;

&lt;p&gt;It had its own dedicated infrastructure still live more than 4 years after the rollout of &lt;a href="https://dev.to/bonitasoft/the-story-of-bonita-documentation-from-drupal-to-github-218g"&gt;the Bonita Documentation site 2016  version&lt;/a&gt;. The operations team had to deal with security (stack hard to update) and user experience concerns (no changes to the site while browsers have evolved, resulting in some broken features).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aqb6NTvZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0r2py1vxlahwxd1otel7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aqb6NTvZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0r2py1vxlahwxd1otel7.png" alt="Drawing: Dream written on a wall by a little girl" width="698" height="439"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Photo by &lt;a href="https://unsplash.com/photos/rlRRIvWNJJo"&gt;Thi√©baud Faix&lt;/a&gt; on &lt;a href="https://unsplash.com/"&gt;Unsplash&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-new-solution-what-we-dreamt-about"&gt;
  &lt;/a&gt;
  The New Solution: What We Dreamt About
&lt;/h2&gt;

&lt;p&gt;All the issues explained above began to have more and more impact on Bonita documentation users. We really wanted to get in there and improve the site!&lt;/p&gt;

&lt;p&gt;We first prototyped a new solution based on Jekyll for HTML generation, keeping most of the existing Markdown content and the Python aggregator. We also investigated moving the search solution from Solr to &lt;a href="https://www.elastic.co/elasticsearch/"&gt;ElasticSearch&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;While having a true static site was a great improvement, a lot of issues remained unresolved.&lt;/p&gt;

&lt;p&gt;The prototype only addressed a part of the user experience issues; maintenance and the operations sides still presented issues. The site still included a lot of custom code in particular for the content aggregation.&lt;/p&gt;

&lt;p&gt;So this approach was not a game changer, although it was a way to do basically the same thing better. But ultimately it didn‚Äôt provide enough improvements.&lt;/p&gt;

&lt;p&gt;So we decided to change our direction, go back to simplicity, and approach everything globally.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#user-experience-ux"&gt;
  &lt;/a&gt;
  User experience (UX)
&lt;/h3&gt;

&lt;p&gt;The first prototype confirmed that we needed a static site that could provide a good UX especially on mobile (which wasn‚Äôt that good in the existing site) and good SEO out of the box.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#maintenance"&gt;
  &lt;/a&gt;
  Maintenance
&lt;/h3&gt;

&lt;p&gt;Reducing maintenance time and complexity was one of our main concerns.&lt;/p&gt;

&lt;p&gt;We needed a simpler solution to maintain and deploy; we wanted to rely on existing and widely used tools (a lot of products have the same documentation needs as ours, so solutions exist for our use case), and reduce customization at the minimum (theming).&lt;/p&gt;

&lt;p&gt;The &lt;a href="https://dev.to/bonitasoft/the-story-of-bonita-documentation-from-drupal-to-github-218g"&gt;Bonita Documentation site 2016 version&lt;/a&gt; worked perfectly for porting documentation content changes from version&lt;br&gt;
to version. We wanted to keep that, but have a simpler build that wouldn‚Äôt be split across repositories.&lt;/p&gt;

&lt;p&gt;For a long time, keeping Markdown as a markup language was mandatory. We wanted to avoid doing content migration and training documentation contributors, but this should not stop us from using a better adapted solution if it supports only other languages (as long as we can migrate the existing content and it is easy to learn). We wanted to have a markup language for text diff/merge with Git and Markdown was one way to achieve that.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#operations"&gt;
  &lt;/a&gt;
  Operations
&lt;/h3&gt;

&lt;p&gt;We needed to get rid of silos, to have a more self-serve solution to avoid tickets, team synchronization issues, and bottlenecks.&lt;/p&gt;

&lt;p&gt;This also meant using configuration as code as much as possible, and automation for continuous preview and deployment. So we imagined a more comprehensive solution where we would no longer operate the Continuous Integration/Deployment, search, and front-end servers ourselves.&lt;/p&gt;

&lt;p&gt;We wanted to focus on using them, not on maintaining and upgrading them. So we felt that this would probably involve using a&lt;br&gt;
&lt;a href="https://en.wikipedia.org/wiki/Platform_as_a_service"&gt;PAAS&lt;/a&gt; solution, to provide more features for &lt;a href="https://en.wikipedia.org/wiki/High_availability"&gt;High Availability&lt;/a&gt; and &lt;a href="https://en.wikipedia.org/wiki/Content_delivery_network"&gt;Content Delivery Network&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For the old Drupal solution, we decided we needed to find a way to keep the content but drop the related infrastructure, or be ready to definitively remove it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZH56aTWw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/85ucdhydj081oguqlrpq.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZH56aTWw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/85ucdhydj081oguqlrpq.jpg" alt="A crystal ball" width="880" height="587"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Photo by &lt;a href="https://unsplash.com/photos/xU5Mqq0Chck"&gt;Drew Beamer&lt;/a&gt; on &lt;a href="https://unsplash.com/"&gt;Unsplash&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#coming-soon"&gt;
  &lt;/a&gt;
  Coming soon
&lt;/h2&gt;

&lt;p&gt;This article presents the issues of &lt;a href="https://dev.to/bonitasoft/the-story-of-bonita-documentation-from-drupal-to-github-218g"&gt;the Bonita Documentation site 2016 version&lt;/a&gt; and why we needed to provide a refreshed site. In  it, I have outlined both the issues and our ‚Äúneed to have‚Äù and ‚Äúwant to have‚Äù requirements to select a new solution for improvements.&lt;/p&gt;

&lt;p&gt;In the next article, we‚Äôll explain the actual technical choices we made for the new online documentation, and what we learned about our new technical stack from the migration. (Hint: we‚Äôre still here, and so is the &lt;a href="https://documentation.bonitasoft.com/bonita/latest/"&gt;Bonita documentation&lt;/a&gt;!)&lt;/p&gt;

</description>
      <category>documentation</category>
      <category>bonita</category>
      <category>github</category>
      <category>markdown</category>
    </item>
    <item>
      <title>Ops Docker it is #2: Build a Docker Image for Flask Application </title>
      <author>Asmi Jafar</author>
      <pubDate>Wed, 08 Dec 2021 11:24:32 +0000</pubDate>
      <link>https://dev.to/asmijafar20/ops-docker-it-is-2-build-a-docker-image-for-flask-application-4eha</link>
      <guid>https://dev.to/asmijafar20/ops-docker-it-is-2-build-a-docker-image-for-flask-application-4eha</guid>
      <description>&lt;p&gt;Let's first start with creating the Docker file where we will pull Python 3.9 image.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Flask Dockerfile template&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;FROM python:3.9.7
COPY . /app
WORKDIR /app
RUN pip install -r requirements.txt
EXPOSE 5000
ENTRYPOINT ["python3"]
CMD ["app.py"]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we are pulling Python 3.9.7 image from the Python dockerhub repository.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;COPY&lt;/strong&gt;&lt;br&gt;
Copy the current directory contents into the container at &lt;code&gt;/app&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;WORKDIR&lt;/strong&gt;&lt;br&gt;
It's a directory inside container image that can be set with the WORKDIR instruction in the Dockerfile. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;RUN&lt;/strong&gt; command will install all the required packages for the Dockerfile. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;EXPOSE&lt;/strong&gt;&lt;br&gt;
The EXPOSE instruction tells Docker to get all its information required during the runtime from a specified Port.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ENTRYPOINT&lt;/strong&gt;&lt;br&gt;
The initiating point for the dockerfile while we run it. ENTRYPOINT command and parameters will not be overwritten from the command line. Instead, all command-line arguments will be added after ENTRYPOINT parameters.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;CMD&lt;/strong&gt;&lt;br&gt;
CMD instruction is used to define what command the container should execute when launched and CMD sets default command and/or parameters, which can be overwritten from the command line when the docker container runs.&lt;/p&gt;

&lt;p&gt;Now Let's run the Docker command for building the image &lt;/p&gt;

&lt;p&gt;&lt;code&gt;docker build -t asmi-flask .&lt;/code&gt; &lt;br&gt;
This will build the image(asmi-flask) for the flask application. Give it a tag &lt;code&gt;-t&lt;/code&gt; called asmi-flask.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;docker run -p 5000:5000 asmi-flask&lt;/code&gt; &lt;br&gt;
In this command we tell docker to run an image called asmi-flask. &lt;code&gt;-p&lt;/code&gt; Publish a container's port(s) to the host. Since Flask is running on port 5000 by default, the second part of this flag needs to be 5000. &lt;/p&gt;

&lt;p&gt;After this, we can run &lt;code&gt;docker ps&lt;/code&gt; command to check if the image has been built or not. &lt;/p&gt;

&lt;p&gt;Output:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ubntu@asmijafar20:~/Flask-App$ docker images
REPOSITORY              TAG          IMAGE ID       CREATED       SIZE
asmijafar20/dockerhub   asmi-flask   2e155e2820a0   3 days ago    922MB
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the next blog, we can build CI/CD pipelines and configure them using GitHub Actions. &lt;/p&gt;

&lt;p&gt;Till then Happy Coding! &lt;/p&gt;

</description>
      <category>python</category>
      <category>devops</category>
      <category>docker</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Underrepresented Groups in Tech depicted in Popular Culture - a Personal Review of "Good Trouble"</title>
      <author>Annika_H</author>
      <pubDate>Wed, 08 Dec 2021 11:24:00 +0000</pubDate>
      <link>https://dev.to/s2engineers/underrepresented-groups-in-tech-depicted-in-popular-culture-a-personal-review-of-good-trouble-353f</link>
      <guid>https://dev.to/s2engineers/underrepresented-groups-in-tech-depicted-in-popular-culture-a-personal-review-of-good-trouble-353f</guid>
      <description>&lt;p&gt;I don‚Äôt know about you but I am always on the hunt for new TV shows to binge in my free time. When one of my friends told me about a series she‚Äôs recently watched and approved I was intrigued and had to find out myself if this one was really that binge worthy. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;In my country of residence, which is Germany, the first two seasons of ‚ÄúGood Trouble‚Äù are available on Disney+ (not sponsored). Luckily I already subscribed so I could start right away.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;If you‚Äôre wondering why I want to talk about this show on dev.to, let me explain. ‚ÄúGood Trouble‚Äù is actually a spin-off series of ‚ÄúThe Fosters‚Äù (I didn‚Äôt know it before) and is about two characters Callie and Mariana who are about to start the next chapter of their lives after university. And guess what? Mariana went to MIT and started her job as a software engineer in a fancy Tech company in Los Angeles. &lt;/p&gt;

&lt;p&gt;During the first minutes, I thought that it was another ‚Äúcoming of age-twenty-something-life in L.A.‚Äù kind of series and I was actually surprised to see how it quickly developed and critically depicts various societal issues. One of them being how women, or underrepresented groups in general, are treated in tech. &lt;/p&gt;

&lt;p&gt;Mariana is hyped and confident that she will rock her new role after she‚Äôs been able to prove herself at MIT. Naturally, she wants to make a good first impression and dresses up accordingly. When she meets her team, her dream bursts with a bang. Just like the entire company, the team is male dominated (including the CEO) and instead of appreciating diversity and welcoming a woman on their team, they treat her disrespectfully from day one. &lt;/p&gt;

&lt;p&gt;As mentioned earlier, the show depicts various topics, however, I was particularly intrigued by the fact that it deals with the issues of the tech industry. While Mariana reaches her limits in this toxic environment, she also decides to fight the occurring inequalities and starts an initiative to raise awareness and improve things. &lt;/p&gt;

&lt;p&gt;I‚Äôm not a developer myself but I‚Äôve worked in this field for the last two years and I quickly learned about the grievances, particularly when it comes to inclusion and diversity. In my opinion, the series portrays these quite accurately. &lt;/p&gt;

&lt;p&gt;Mariana is a great developer and has to fight so hard to even prove her talent. She is bold and brings the power to address the issues she is facing at her company but before she was there nobody dared to do it. There are other colleagues of underrepresented groups who live in fear of losing their jobs if they speak up and the worst part of it all is that it‚Äôs not even   . &lt;/p&gt;

&lt;p&gt;Just like in real life, the people who suffer from injustice are also the ones who become activists and strive to create a better environment for themselves. Mariana and her colleagues do find allies eventually but the fight is still not over. When she gets a promotion or the chance to lead a project (which was her own idea) she is accused of getting her way only because she is a woman and not because she is good at what she does. &lt;/p&gt;

&lt;p&gt;There are so many examples I could name from the show I could relate to as a woman and as an ally to underrepresented people in tech, I could probably even write several books about this topic. In the end, what I want to achieve by talking about the show is to point out that 1. The issue is real (and even has arrived in pop culture) and 2. I really really want people to watch it. &lt;/p&gt;

&lt;p&gt;It made me feel empowered because I felt with the characters and it also made me feel hopeful to see that topics like inclusion and diversity (in the workplace but also in everyday life) are incorporated into mainstream TV shows. I know that most of the people who watch shows like that are already educated but I also genuinely wish for people to check it out who are living in their privileged bubble. It‚Äôs important to read, talk, share knowledge and listen to each other but it‚Äôs also SO GREAT that series like these exist and we need more of this! &lt;/p&gt;

&lt;p&gt;This brings me to my last point. I wouldn‚Äôt have discovered the series (or the fact that it deals with the tech industry issue) without my friend. But I want to watch more of this stuff and I‚Äôm sure that there is more of it out there. So please feel free to share TV shows, movies etc. you know of that critically deal with inclusion and diversity in the tech industry (or the workfield in general). I would love to watch and share them. &lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>womenintech</category>
      <category>career</category>
      <category>inclusion</category>
    </item>
    <item>
      <title>The Right way to commit a code - Integrating Git hooks using husky(V7) with (ESLint + commitlint + SonarQube) in Angular(12+)</title>
      <author>Vishnu Thankappan</author>
      <pubDate>Wed, 08 Dec 2021 11:22:01 +0000</pubDate>
      <link>https://dev.to/vishnu_thankappan/integrating-git-hooks-using-huskyv7-with-eslint-commitlint-sonarqube-in-angular12-the-right-way-to-commit-a-code-24c9</link>
      <guid>https://dev.to/vishnu_thankappan/integrating-git-hooks-using-huskyv7-with-eslint-commitlint-sonarqube-in-angular12-the-right-way-to-commit-a-code-24c9</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Here we'll be automating our commit workflow i.e when a developer commits a code it will check for lint errors, do unit testing then inspect the code using SonarQube and check whether the commit message given by developer follows the commit convention or not. Only If all above conditions are satisfied the code will be commited.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In this article we'll cover the basic set-up required to integrate &lt;a href="https://typicode.github.io/husky/#/"&gt;husky&lt;/a&gt; into your Angular Application.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Husky improves your commits and more üê∂ woof!&lt;br&gt;
You can use it to lint your commit messages, run tests, lint code, etc... when you commit or push. Husky supports all Git hooks.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now, Let's get started&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;First install husky&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;npm install husky --save-dev&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This command will add husky to your packahe.json file.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; enable Git Hook:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;npx husky-init&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;this will add following script to you package.json file&lt;br&gt;
 "prepare": "husky install"&lt;/p&gt;

&lt;p&gt;and it will also create a .husky folder in your root directory.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Next we'll be creating a file in the Husky directory for the purpose of linting commit messages&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;npx husky add .husky/commit-msg 'npx --no-install commitlint --edit'&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;this will create a file called commit-msg in .husky directory with the following data:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#!/bin/sh
. "$(dirname "$0")/_/husky.sh"

npx --no-install commitlint --edit
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Now we'll install commit lint&lt;br&gt;
&lt;code&gt;npm install @commitlint/config-conventional @commitlint/cli --dev&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;now create a file commitlint.config.js in the root directory with the following data&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Now when you commit you changes using &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;git commit -m 'new fixes'&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;it will give the following error, if its not aligned with the git commit conventions (&lt;a href="https://www.conventionalcommits.org/en/v1.0.0-beta.2/#why-use-conventional-commits"&gt;git conventions&lt;/a&gt;)&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qOQ1KUbm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r7iioghiw7xrirob1d34.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qOQ1KUbm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r7iioghiw7xrirob1d34.png" alt="without convention commit" width="880" height="160"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;again perform the commit with 
&lt;code&gt;git commit -m 'style(package): package upgrade'&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YKHngPDU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6ikj1qppmqaoi4v8fwo5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YKHngPDU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6ikj1qppmqaoi4v8fwo5.png" alt="commit following git commit convention" width="880" height="152"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#linting-before-commit-using-husky"&gt;
  &lt;/a&gt;
  Linting before commit using Husky
&lt;/h2&gt;

&lt;p&gt;Install following package:&lt;br&gt;
&lt;code&gt;npm install lint-staged --save-dev&lt;br&gt;
npm install eslint&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Add linting to the application
&lt;a href="https://github.com/angular-eslint/angular-eslint"&gt;https://github.com/angular-eslint/angular-eslint&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;ng add @angular-eslint/schematics&lt;br&gt;
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ng g @angular-eslint/schematics:convert-tslint-to-eslint --remove-tslint-if-no-more-tslint-targets --ignore-existing-tslint-config&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;this will migrate the default tslist to esLint&lt;/p&gt;

&lt;p&gt;Now add the following content to the pre-commit file .husky/pre-commit&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#!/bin/sh
. "$(dirname "$0")/_/husky.sh"

npx pretty-quick --staged
npx lint-staged
ng test --watch=false --browsers=ChromeHeadless

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Now when you run the following git commit command it will run the &lt;strong&gt;pre-commit&lt;/strong&gt; script which you just defined.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;git commit -m 'style(package): package upgrade'&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;It will run pretty-quick after that it will check lint and after that it will run test case for the project and if successful it will check for the commit message.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CFJgbJLF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zxgmp5tp2q7lgj48gu4h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CFJgbJLF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zxgmp5tp2q7lgj48gu4h.png" alt="running git commit" width="880" height="154"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#integrating-sonarqube"&gt;
  &lt;/a&gt;
  Integrating SonarQube
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Install SonarQube in your system:&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;For Mac Users:&lt;br&gt;
&lt;code&gt;https://techblost.com/how-to-setup-sonarqube-locally-on-mac/&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;For Windows Users:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Install SonarQube form &lt;a href="https://www.sonarqube.org/downloads/"&gt;https://www.sonarqube.org/downloads/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Post download extracts the ZIP file to any folder and then run the StartSonar.bat from sonarqube\bin\windows-x86‚Äì64.
Now you can access the SonarQube from your browser using the default port &lt;a href="http://localhost:9000"&gt;http://localhost:9000&lt;/a&gt;. You can use the default credentials i.e admin and admin.&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0WKsX3ho--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vaii3ulb6d5rokzm2hck.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0WKsX3ho--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vaii3ulb6d5rokzm2hck.png" alt="SonarQube login window" width="880" height="529"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--K3jc0imO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ntduvog71z47i9h19rhc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--K3jc0imO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ntduvog71z47i9h19rhc.png" alt="SonarQube after login" width="880" height="529"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#configure-sonar-with-angular"&gt;
  &lt;/a&gt;
  Configure Sonar with Angular
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;npm install sonar-scanner --save-dev&lt;/code&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create a file name &lt;strong&gt;sonar-project.properties&lt;/strong&gt; in the root directory with the following data:&lt;/li&gt;
&lt;/ul&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Now, add following script in your package.json file:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;"sonar": "sonar-scanner"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Now, run the following script using &lt;code&gt;npm run sonar&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If everything goes as planned SonarQube will start inspecting your angular project &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;On Successful completion you can navigate to &lt;code&gt;http://localhost:9000/projects&lt;/code&gt; and see the inspection result done on the project.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yg9Z3HqH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t3t9ct5rpl3swioncjib.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yg9Z3HqH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t3t9ct5rpl3swioncjib.png" alt="inspection result" width="880" height="530"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#final-integrating-sonarqube-with-husky"&gt;
  &lt;/a&gt;
  Final - Integrating Sonarqube with husky
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Add the following in your pre-commit file lazyloading/.husky/pre-commit&lt;/li&gt;
&lt;/ul&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Now run &lt;code&gt;git commit -m 'feat(sonar): sonarqube integrated'&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BYplxduQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9xx0f66ifbrvqkvnbkr7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BYplxduQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9xx0f66ifbrvqkvnbkr7.png" alt="SonarQube with husky" width="880" height="381"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That's all, Congratulationsü•≥ü•≥  you have successfully integrated Husky with Es-Lint, commitlint and SonarQube with your commit workflow.&lt;/p&gt;

&lt;p&gt;You can check the sample code in &lt;a href="https://github.com/vishnuramero/lazyloading"&gt;https://github.com/vishnuramero/lazyloading&lt;/a&gt;&lt;/p&gt;

</description>
      <category>angular</category>
      <category>commit</category>
      <category>webdev</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Day 57 of 100 Days of Code &amp; Scrum: Connecting Next.js to Ghost Headless CMS</title>
      <author>Rammina</author>
      <pubDate>Wed, 08 Dec 2021 11:19:00 +0000</pubDate>
      <link>https://dev.to/rammina/day-57-of-100-days-of-code-scrum-connecting-nextjs-to-ghost-headless-cms-53a0</link>
      <guid>https://dev.to/rammina/day-57-of-100-days-of-code-scrum-connecting-nextjs-to-ghost-headless-cms-53a0</guid>
      <description>&lt;p&gt;Good day, everyone!&lt;/p&gt;

&lt;p&gt;I'm back from my two days of inactivity. Today was a fairly great start, I managed to connect the &lt;a href="https://www.rammina.com/"&gt;Rammina business page&lt;/a&gt; Next.js frontend with my Ghost headless CMS. I'm pretty glad to be coding again!&lt;/p&gt;

&lt;p&gt;Anyway, let's move on to my daily report!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-past-two-days"&gt;
  &lt;/a&gt;
  The past two days
&lt;/h2&gt;

&lt;p&gt;I took a break from work and coding. I was spending time with my family.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#today"&gt;
  &lt;/a&gt;
  Today
&lt;/h2&gt;

&lt;p&gt;Here are the things I learned and worked on today:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#company-website"&gt;
  &lt;/a&gt;
  Company Website
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;connected my &lt;a href="https://www.rammina.com/"&gt;company page&lt;/a&gt;'s Next.js frontend with Ghost CMS.&lt;/li&gt;
&lt;li&gt;I learned a lot about &lt;code&gt;getStaticProps&lt;/code&gt; and &lt;code&gt;getStaticPaths&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;got some Typescript learning in from using the Next.js and Ghost Content API built-in functions.&lt;/li&gt;
&lt;li&gt;learned some methods in Ghost Content API.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#scrum"&gt;
  &lt;/a&gt;
  Scrum
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;I did some practice flashcards for Scrum.&lt;/li&gt;
&lt;li&gt;reviewed some of the things I've learned before.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thank you for reading! I hope everyone's doing well.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9gNNIpK9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x9ayfxxxaz2g2hfcqbsk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9gNNIpK9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x9ayfxxxaz2g2hfcqbsk.png" alt="Rammina Thank You Banner" width="880" height="293"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#resourcesrecommended-readings"&gt;
  &lt;/a&gt;
  Resources/Recommended Readings
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://ghost.org/docs/content-api/"&gt;Content API | Ghost&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nextjs.org/learn/excel/typescript/nextjs-types"&gt;Next.js Specific Types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://scrumguides.org/scrum-guide.html"&gt;The 2020 Scrum Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mlapshin.com/index.php/scrum-quizzes/"&gt;Mikhail Lapshin's Scrum Quizzes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#disclaimer"&gt;
  &lt;/a&gt;
  DISCLAIMER
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;This is not a guide&lt;/strong&gt;, it is just me sharing my experiences and learnings. This post only expresses my thoughts and opinions (based on my limited knowledge) and is in no way a substitute for actual references. If I ever make a mistake or if you disagree, I would appreciate corrections in the comments!&lt;/p&gt;



&lt;h3&gt;
  &lt;a href="#other-media"&gt;
  &lt;/a&gt;
  Other Media
&lt;/h3&gt;

&lt;p&gt;Feel free to reach out to me in other media!&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;a href="https://twitter.com/RamminaR"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C341ckO3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/rammina/image/upload/v1636792959/twitter-logo_laoyfu_pdbagm.png" alt="Twitter logo" width="128" height="50"&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;a href="https://github.com/Rammina"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u4ZlXeay--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/rammina/image/upload/v1636795051/GitHub-Emblem2_epcp8r.png" alt="Github logo" width="128" height="50"&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;

</description>
      <category>100daysofcode</category>
      <category>beginners</category>
      <category>javascript</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Let's create a digital clock with CSS &amp; JS</title>
      <author>Shuvo</author>
      <pubDate>Wed, 08 Dec 2021 10:48:46 +0000</pubDate>
      <link>https://dev.to/0shuvo0/lets-create-a-digital-clock-with-css-js-328c</link>
      <guid>https://dev.to/0shuvo0/lets-create-a-digital-clock-with-css-js-328c</guid>
      <description>&lt;p&gt;In this article I will show you how to create a working Digital Clock using CSS and JavaScript.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--puGk4Pko--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ycf398guz6jxa68nsptp.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--puGk4Pko--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ycf398guz6jxa68nsptp.gif" alt="css js digital clock" width="880" height="495"&gt;&lt;/a&gt;&lt;br&gt;
Lets start by creating a &lt;strong&gt;index.html&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"UTF-8"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;http-equiv=&lt;/span&gt;&lt;span class="s"&gt;"X-UA-Compatible"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"IE=edge"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width, initial-scale=1.0"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"style.css"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Document&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"clock"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;span&amp;gt;&lt;/span&gt;
            &lt;span class="c"&gt;&amp;lt;!-- this text will be updated using JS --&amp;gt;&lt;/span&gt;
            12:23:01 PM
        &lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"main.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;And now style it using &lt;strong&gt;style.css&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;rgb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;26&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;25&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;25&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.clock&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;.75em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;rgb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;26&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;25&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;25&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Arial&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Helvetica&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bold&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;transparent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.clock&lt;/span&gt; &lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;linear-gradient&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;135deg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;rgb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;145&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;rgb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;221&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="no"&gt;blue&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nl"&gt;background-clip&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;text&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;-webkit-background-clip&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;text&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.clock&lt;/span&gt;&lt;span class="nd"&gt;::before&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;.clock&lt;/span&gt;&lt;span class="nd"&gt;::after&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;108%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;120%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background-image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;linear-gradient&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;135deg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;rgb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;145&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;rgb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;221&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="no"&gt;blue&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-10%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-4%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;z-index&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.clock&lt;/span&gt;&lt;span class="nd"&gt;::after&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;blur&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Now if you open it up in a browser it should look like this&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ATEV29HQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e6951zi2nh9y21c94u96.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ATEV29HQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e6951zi2nh9y21c94u96.png" alt="CSS digital clock design" width="880" height="495"&gt;&lt;/a&gt;&lt;br&gt;
Now we just have to updated the text using JS.&lt;br&gt;
In our &lt;strong&gt;main.js&lt;/strong&gt; JavaScript file let's create a function that will get the current time.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;clock&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;.clock span&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;updateClock&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// creating a new date object&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;now&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="c1"&gt;// getting the current hour&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;hours&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;now&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getHours&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="c1"&gt;// getting the current minute&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;minutes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;now&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getMinutes&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="c1"&gt;// getting the current second &lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;seconds&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;now&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getSeconds&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="c1"&gt;// getting the AM/PM &lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;am_pm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;hours&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;PM&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;AM&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

    &lt;span class="c1"&gt;// converting 24 hours format to 12 hours&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;hours&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;hours&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;

    &lt;span class="c1"&gt;// adding a zero in front of the times&lt;/span&gt;
    &lt;span class="nx"&gt;hours&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;hours&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;0&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;hours&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;hours&lt;/span&gt;
    &lt;span class="nx"&gt;minutes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;minutes&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;0&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;minutes&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;minutes&lt;/span&gt;
    &lt;span class="nx"&gt;seconds&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;seconds&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;0&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;seconds&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;seconds&lt;/span&gt;

    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;hours&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;minutes&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;seconds&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;am_pm&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;updateClock&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sutJE9N3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1urn9bgo186w3d4sefjd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sutJE9N3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1urn9bgo186w3d4sefjd.png" alt="get current time using javascript" width="206" height="74"&gt;&lt;/a&gt;&lt;br&gt;
Now instead of console logging them we simply have to update the text of our &lt;strong&gt;span&lt;/strong&gt; and them call the &lt;code&gt;updateClock&lt;/code&gt; function every seconds&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;clock&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;.clock span&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;updateClock&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;now&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;hours&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;now&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getHours&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;minutes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;now&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getMinutes&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;seconds&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;now&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getSeconds&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;am_pm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;hours&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;PM&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;AM&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;hours&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;hours&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;

    &lt;span class="nx"&gt;hours&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;hours&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;0&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;hours&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;hours&lt;/span&gt;
    &lt;span class="nx"&gt;minutes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;minutes&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;0&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;minutes&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;minutes&lt;/span&gt;
    &lt;span class="nx"&gt;seconds&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;seconds&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;0&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;seconds&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;seconds&lt;/span&gt;

    &lt;span class="c1"&gt;// displaying the time&lt;/span&gt;
    &lt;span class="nx"&gt;clock&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;hours&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;:&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;minutes&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;:&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;seconds&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;am_pm&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// calling the function every second&lt;/span&gt;
&lt;span class="nx"&gt;setInterval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;updateClock&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--puGk4Pko--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ycf398guz6jxa68nsptp.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--puGk4Pko--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ycf398guz6jxa68nsptp.gif" alt="css js digital clock" width="880" height="495"&gt;&lt;/a&gt;&lt;br&gt;
And its that easy.&lt;br&gt;
Hey did I earned a coffee from you? &lt;a href="https://www.buymeacoffee.com/0shuvo0"&gt;Buy Me A Coffee&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Make sure you checkout my other articles and YouTube channel&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__user ltag__user__id__728097"&gt;
  
    .ltag__user__id__728097 .follow-action-button {
      background-color: #000000 !important;
      color: #ffffff !important;
      border-color: #000000 !important;
    }
  
    &lt;a href="/0shuvo0" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wZgMNup---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--j0_lvM9_--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/728097/0f6e1da9-f243-42d0-b446-301ac6ea6412.jpeg" alt="0shuvo0 image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/0shuvo0"&gt;Shuvo&lt;/a&gt;Follow
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/0shuvo0"&gt;Frontend Developer and YouTuber.
Channel link: https://www.youtube.com/c/AngleBrace&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;
&lt;iframe&gt;
  width="710"&lt;br&gt;
  height="399"&lt;br&gt;
  src="https://www.youtube.com/embed/qcjwkvezZRk"&lt;br&gt;
  allowfullscreen&lt;br&gt;
  loading="lazy"&amp;gt;&lt;br&gt;
&lt;/iframe&gt;&lt;br&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#was-it-helpful-support-me-on-patreon"&gt;
  &lt;/a&gt;
  Was it helpful? Support me on Patreon
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.patreon.com/0shuvo0"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vln7kszB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7vnw8g7vs5pok3jwgtgv.png" alt="Patreon Logo" width="225" height="225"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>css</category>
    </item>
    <item>
      <title>20 Best Libraries for Flutter Developers</title>
      <author>Pablo Discobar</author>
      <pubDate>Wed, 08 Dec 2021 10:41:03 +0000</pubDate>
      <link>https://dev.to/pablonax/20-best-libraries-for-flutter-developers-38ph</link>
      <guid>https://dev.to/pablonax/20-best-libraries-for-flutter-developers-38ph</guid>
      <description>&lt;p&gt;How often do you use libraries in your work? I guess you do it all the time. Because good developers always want to be better. That is why they are always ready to get something new, and importantly, they always know where to find it. The CODE MARKET team has developed the top 20 best libraries for rookie Flutter developers. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#expandable"&gt;
  &lt;/a&gt;
  expandable
&lt;/h2&gt;

&lt;p&gt;Number one on our list. This template is going to help you build a drop-down list to make your app more user-friendly. An irreplaceable thing.  Use this library to build a great product and cut development time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#maskedcontroller"&gt;
  &lt;/a&gt;
  masked_controller
&lt;/h2&gt;

&lt;p&gt;What is the first action the user sees when he runs the application? Registration! Registration must be easy and handy to keep users from running away. That is why you need to add controller to insert mask to textfield. This is a proven code used in nearly every application which has a registration via phone.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#fluttermoneyformatter"&gt;
  &lt;/a&gt;
  flutter_money_formatter
&lt;/h2&gt;

&lt;p&gt;An indispensable extension for any e-commerce application. If you need to get price labels in your app, then here's everything you need. This extension allows you to format any currency based on your characteristics, without reference to localization. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#flchart"&gt;
  &lt;/a&gt;
  fl_chart
&lt;/h2&gt;

&lt;p&gt;This is the best library for drawing charts. However, they are essential in various applications, ranging from financial apps to simple calorie counters.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#shimmer"&gt;
  &lt;/a&gt;
  shimmer
&lt;/h2&gt;

&lt;p&gt;Easy to use and pleasant to the eye loading waiting screen. Users will definitely appreciate the efforts. And it won't be worth anything to you if you use the libraries properly.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#fontawesomeflutter"&gt;
  &lt;/a&gt;
  font_awesome_flutter
&lt;/h2&gt;

&lt;p&gt;A bit different but no less valuable library. There are icons for any query. Perfect for getting started. Such libraries are good to know in order to save your time for working on something bigger.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#backdrop"&gt;
  &lt;/a&gt;
  backdrop
&lt;/h2&gt;

&lt;p&gt;For any novice developer, it is important to find their libraries to do their tasks better. Such tiny peculiarities, like this, in application development are extremely valuable, because they let you work with little effort so that it looks good and professional. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#neatperiodictask"&gt;
  &lt;/a&gt;
  neat_periodic_task
&lt;/h2&gt;

&lt;p&gt;This extension will help with the regular launch of tasks in the background. It seems to be a simple case, but you can't do without a library here. This extension is not an official Google support, but allows you to run maintenance operations in a periodic background task. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#urllauncher"&gt;
  &lt;/a&gt;
  url_launcher
&lt;/h2&gt;

&lt;p&gt;It is also a very significant function to open links from your application in a browser. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introslider"&gt;
  &lt;/a&gt;
  intro_slider
&lt;/h2&gt;

&lt;p&gt;Slider is a user-friendly extension for your application. Using this library you won't have to spend your time on it anymore. A couple of clicks and you're done.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bottomnavybar"&gt;
  &lt;/a&gt;
  bottom_navy_bar
&lt;/h2&gt;

&lt;p&gt;The usability of an app, as well as a site, lies in its navigation. If it's intuitive, and doesn't create extra questions for users, then this is success. That's why the bottom navigation panel is a hit, it's simple, clearest and close to every user. And the navigation bar from this library is also very easy to use.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#localauth"&gt;
  &lt;/a&gt;
  local_auth
&lt;/h2&gt;

&lt;p&gt;An excellent feature for the app is log-in by biometric data. This library will diversify your application and make it up-to-date. This extension is suitable for both Android and iOS systems. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#percentindicator"&gt;
  &lt;/a&gt;
  percent_indicator
&lt;/h2&gt;

&lt;p&gt;Indicators, loading bars, all this is common, so there are a million different libraries on this topic. It's practical to use a library with proven code. It is very easy to use, so even if you are a beginner, you can easily handle the task.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cachednetworkimage"&gt;
  &lt;/a&gt;
  cached_network_image
&lt;/h2&gt;

&lt;p&gt;Page loading rate is very important, using cached images you will be able to keep more users. That is why every developer needs to know about this library. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#flutterinappwebview"&gt;
  &lt;/a&gt;
  flutter_inappwebview
&lt;/h2&gt;

&lt;p&gt;Webview inside your application. To open pages in the browser light and breezy. Another essential item for every developer from beginner to professional. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dio"&gt;
  &lt;/a&gt;
  dio
&lt;/h2&gt;

&lt;p&gt;This is the best, tested and handy HTTP client for Dart. It 's actually very useful for making queries in a simplified way. This client supports Interceptors, Global configuration, FormData, Request Cancellation, File downloading, Timeout etc. I suggest you keep it in your tabs, because it will definitely be handy for you, and it will definitely make your life easier. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pathprovider"&gt;
  &lt;/a&gt;
  path_provider
&lt;/h2&gt;

&lt;p&gt;When you need to locate a file on the Android or iOS file system - just use this plugin. This is exactly what you need.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#animations"&gt;
  &lt;/a&gt;
  animations
&lt;/h2&gt;

&lt;p&gt;The power of animation cannot be underestimated. Still images are simple, but also dull. To make your application more appealing to users, you have to use this power. This package contains a basic animation that makes even the most simple application entertaining. If you use animation correctly, then your application will look more professional. As if you spent a lot of time and effort on it. But in fact, you used libraries wisely in your work.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#flutterlocalnotifications"&gt;
  &lt;/a&gt;
  flutter_local_notifications
&lt;/h2&gt;

&lt;p&gt;Check your notifications, it looks like you are being reminded to use libraries in your work more frequently! This cross-platform plugin for displaying local notifications on user devices. Notifications are frequently disabled in applications, but they are still extremely important for development.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#flutterslidable"&gt;
  &lt;/a&gt;
  flutter_slidable
&lt;/h2&gt;

&lt;p&gt;Another awesome plugin that will make life easier is sliding animation. Rather than suffer yourself, you can use this package. The package includes several types of animation: Behind Motion, Drawer Motion, Scroll Motion and Stretch Motion (example above).&lt;/p&gt;

&lt;p&gt;That's it, tell me what we forgot? What libraries do you use? Share it in the comments.&lt;/p&gt;

</description>
      <category>flutter</category>
      <category>beginners</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Search UI Component with React &amp; Typesense made Easy!</title>
      <author>Sankalp Swami</author>
      <pubDate>Wed, 08 Dec 2021 10:27:06 +0000</pubDate>
      <link>https://dev.to/aviyel/search-ui-component-with-react-typesense-made-easy-de</link>
      <guid>https://dev.to/aviyel/search-ui-component-with-react-typesense-made-easy-de</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1yIuWvQn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1638599196755-event-announcement-3-resized.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1yIuWvQn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1638599196755-event-announcement-3-resized.png" alt="Reactjs typesense opensource" width="760" height="380"&gt;&lt;/a&gt;&lt;br&gt;
You might have come across many search bars on your applications that look very beautiful &amp;amp; simple to look at but requires a lot of tireless effort to build the same. Your Search Engine will never work in the same way forever, it requires continuous maintenance and upgrades to be a user-friendly Search Engine. In this case, choosing a perfect Search Engine for your application becomes a very important decision and this is where the Typesense comes into the picture. Aviyel is coming with another profitable session where you will build a Search UI Component with React &amp;amp; Typesense.&lt;/p&gt;

&lt;p&gt;Why should one join this event?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;You will learn how to build a Search UI Component.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You will learn how to implement Typsense Search UI with React.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You will build a simple Music Search Application with React &amp;amp; Typsesense.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Kevine Nzapdi is coming live on Aviyel where she will build a simple Online Music search Application using React &amp;amp; Typsesense. K√©vine is a frontend developer and Content Creator. Kevine likes art and is passionate about New technologies. Actually, Kevine likes Discovering many New tools that can help Kevine in her day-to-day life. She is open to learning new skills and also ready to share with the community. Aside from that Kevine likes reading novels and practicing judo.&lt;/p&gt;

&lt;p&gt;Join us to get hands-on experience with Search UI and &lt;a href="https://aviyel.com/"&gt;open-source&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Date: December 10th, 2021&lt;br&gt;
Time: 8.00 AM PST | 11:00 AM EST&lt;br&gt;
Register here:&lt;/strong&gt; &lt;a href="https://bit.ly/3Dy28FZ"&gt;https://bit.ly/3Dy28FZ&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Impressed? Check out the rest of our &lt;a href="https://aviyel.com/events"&gt;events&lt;/a&gt;!&lt;br&gt;
Let‚Äôs build open-source together! üéâ&lt;br&gt;
Team Aviyel&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Kevine Nzapdi Socials!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Hashnode: &lt;a href="https://gunkev.hashnode.dev/"&gt;Kevine Nzapdi&lt;/a&gt;&lt;br&gt;
LinkedIn: &lt;a href="https://www.linkedin.com/in/kevine-nzapdi-738502167/"&gt;Kevine Nzapdi&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Saleor - a GraphQL-first open-source e-Commerce platform</title>
      <author>Tomek Poniatowicz</author>
      <pubDate>Wed, 08 Dec 2021 09:57:47 +0000</pubDate>
      <link>https://dev.to/graphqleditor/saleor-a-graphql-first-open-source-e-commerce-platform-15a9</link>
      <guid>https://dev.to/graphqleditor/saleor-a-graphql-first-open-source-e-commerce-platform-15a9</guid>
      <description>&lt;p&gt;The pandemic has changed many aspects of our lives.  Because of the lockdowns, almost all of our activities have moved online. Work? Remote. Meetings? Zoom or Teams. Shopping? Ecommerce. One of the areas most impacted by the pandemic is the retail industry.&lt;/p&gt;

&lt;p&gt;The changes have caused a significant acceleration of e-commerce, but also increased competition in the field. With such rapid growth and the race for the biggest market share, keeping in touch with customers and making sure they get what they need has become a challenge. Just as Zoom, Teams and other apps have helped with conference calls as remote working has entered the lives of most people permanently, automation and tools that allow for better management of sales, customer service and customer relations has become essential for the ecommerce industry.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#customer-relationship-amp-process-management-platforms"&gt;
  &lt;/a&gt;
  Customer Relationship &amp;amp; Process Management Platforms
&lt;/h2&gt;

&lt;p&gt;The most basic customer relationship helpers are Customer Relationship Management (CRM) apps. CRMs are a sort of company archivists, keeping track of all matters related to its business operations in order to create a ‚Äúcompany's memory" independent of the changing of its employees. The data gathered this way can be easily subjected to multidirectional analyses leading to more accurate business strategies.&lt;/p&gt;

&lt;p&gt;The above definition was valid 20 years ago, currently CRMs have transformed into something more than just company business data storage &amp;amp; there's a lot more to them than that. Modern CRMs track every interaction with every client, the chain of email conversations and the progress of each individual customer case. This can be anything from tracking:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;potential leads,&lt;/li&gt;
&lt;li&gt;sales,&lt;/li&gt;
&lt;li&gt;purchases,&lt;/li&gt;
&lt;li&gt;customer support or complaints.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The strength doesn't come from just having the data, but from being able to streamline the whole process through various automations and integrations, while still having everything in one place. This keeps the whole process and each case transparent and easy to analyze for the person handling it. CRMs evolved from a company archive into Business Process Management (BPM) platforms which, with a little of help from 3rd party tools, can be not only the company's archivist but also a sales and marketing person.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#mix-and-match"&gt;
  &lt;/a&gt;
  Mix and match
&lt;/h2&gt;

&lt;p&gt;I said the strength comes from automations and integrations, because CRMs do not aim to be the be-all end-all. These platforms are aimed at keeping things tidy and easily accessible for non coders while most of the work happens in the background. Some of the more popular CRMs are Pipedrive and Pipefy, so let‚Äôs take a quick look at what they‚Äôre about.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pipedrive:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;vertical platform developed with sales in mind&lt;/li&gt;
&lt;li&gt;batch processing&lt;/li&gt;
&lt;li&gt;sales force automation and sales tracking&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Pipefy:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;horizontal platform developed to fit the needs of various businesses&lt;/li&gt;
&lt;li&gt;easy to learn automations to make personalization easier&lt;/li&gt;
&lt;li&gt;custom workflow management&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gPztBoyR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ojxs9kuvluaenvlfb6qa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gPztBoyR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ojxs9kuvluaenvlfb6qa.png" alt="With Pipefy you can create &amp;amp; automate business workflows easily" width="518" height="365"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#source-pipefycom"&gt;
  &lt;/a&gt;
  Source: &lt;a href="https://www.pipefy.com/"&gt;pipefy.com&lt;/a&gt;
&lt;/h5&gt;

&lt;p&gt;As we can see here Pipedrive is focused on sales and Pipefy is geared towards a broader audience, still both use integrations to fill in the gaps, so if you need to hook them up with some other app, for example to import data, you‚Äôll have to rely on those. They do have a bit of basic built in integrations with things like Slack, Zoom or Google Sheets etc. but if you need something else it's pretty likely you‚Äôll have to use something like Zapier to bridge the gap. Alternatively you could also use web hooks or a little thing called GraphQL. While Pipedrive requires third party libraries, Pipefy does handle both GraphQL queries and mutations by design, so it is a lot more flexible in terms of what you can do with it using that.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#saleor"&gt;
  &lt;/a&gt;
  Saleor
&lt;/h2&gt;

&lt;p&gt;Well if you‚Äôre a GraphQL enthusiast (and you probably wouldn't be here if you weren't one) this probably sounded like something right down your alley. After all, GraphQL is all about getting exactly what you want and not about jumping through hoops and integrations to get what you need. Well this is where Saleor comes in, a GraphQL-first headless sales platform. Most CRMs are geared towards non-coders, trying to keep everything simple by using tailored solutions and templates to make tracking everything easier. Saleor is a platform that helps connect that with both customers and developers, it‚Äôs aimed at providing maximum flexibility by giving them free reign over the platform:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;aimed at developers:&lt;/strong&gt; no proprietary templates, just GraphQL, JAMstack, Next.js and modern front-end tools, &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;simple integration:&lt;/strong&gt; teams don't need to focus on integrating various platforms (like CRMs) or tools and can just rely on the GraphQL API,&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;frontend freedom:&lt;/strong&gt; it's entirely up to you how the frontend looks, you can write a client from scratch using the language or platform of your choosing or you can use use the default PWA storefront or JavaScript SDK,&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;decoupled presentation layer:&lt;/strong&gt; the frontend is separate from your core business so you can manage any number of stores, apps, and devices from a single back-end.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7JWs8V9D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jcw54be2fol0cvu4s243.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7JWs8V9D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jcw54be2fol0cvu4s243.png" alt="Image description" width="800" height="676"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#source-aleorio"&gt;
  &lt;/a&gt;
  Source: &lt;a href="https://saleor.io/"&gt;aleor.io&lt;/a&gt;
&lt;/h6&gt;

&lt;h2&gt;
  &lt;a href="#is-it-for-me-though"&gt;
  &lt;/a&gt;
  Is it for me though?
&lt;/h2&gt;

&lt;p&gt;As always choosing the right platform depends on your particular situation and needs. If you just want something, which will make working a bit easier for sales people with no knowledge of coding a CRM is still very useful. But things tend to pile up over time, so if it's a bigger project you might find yourself using a bunch of makeshift integrations down the line (of which not all are free). That might prove problematic in case something stops working and will take additional time to get a hang of in case you bring new people in. Saleor is a solution that can help you with that as it keeps everything decoupled. Sales people work on the CRM platform, devs work on the GraphQL API and customers just see the end result. The only drawback is you'll need someone who knows GraphQL to make use of it.&lt;/p&gt;




&lt;p&gt;&lt;em&gt;A guest blog post for &lt;a href="https://blog.graphqleditor.com/"&gt;GraphQL Editor blog&lt;/a&gt; by Micha≈Ç Tyszkiewicz&lt;/em&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#speed-up-your-graphql-api-development"&gt;
  &lt;/a&gt;
  Speed up your GraphQL API development
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;GraphQL Editor&lt;/strong&gt; is a supportive tool for both advanced GraphQL users as well as those taking their first steps with GraphQL APIs. Our all-in-one development environment for GraphQL will help you build, manage &amp;amp; deploy your GraphQL API much faster. &lt;strong&gt;&lt;a href="https://graphqleditor.com"&gt;Try GraphQL Editor for free!&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://graphqleditor.com"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7zoIKUCL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ur7var8ljvdb5tzhyjz9.png" alt="Try GraphQL Editor" width="880" height="550"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>graphql</category>
      <category>webdev</category>
      <category>productivity</category>
    </item>
  </channel>
</rss>
