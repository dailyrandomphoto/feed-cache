<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Prevent NPM from installing packages outside of a Docker container</title>
      <author>Tyler Smith</author>
      <pubDate>Wed, 01 Dec 2021 06:32:27 +0000</pubDate>
      <link>https://dev.to/tylerlwsmith/prevent-npm-from-installing-packages-outside-of-a-docker-container-akh</link>
      <guid>https://dev.to/tylerlwsmith/prevent-npm-from-installing-packages-outside-of-a-docker-container-akh</guid>
      <description>&lt;p&gt;If you're developing a Node.js app in a Docker container, you may want to prevent the host machine from running &lt;code&gt;npm install&lt;/code&gt; for a number of reasons. For example: a Linux container won't be able to run packages that include bundled binaries if they were installed from MacOS or Windows. Node packages can also run arbitrary (and &lt;a href="https://harry.garrood.me/blog/malicious-code-in-purescript-npm-installer/"&gt;potentially malicious&lt;/a&gt;) code during installation, so you may want to isolate your host machine.&lt;/p&gt;

&lt;p&gt;Even still, it's easy to accidentally run &lt;code&gt;npm install&lt;/code&gt; on the host.&lt;/p&gt;

&lt;p&gt;Thankfully, NPM provides &lt;em&gt;some&lt;/em&gt; ways to mitigate this. NPM has a &lt;code&gt;preinstall&lt;/code&gt; hook that runs before the &lt;code&gt;npm install&lt;/code&gt; command, and if it returns an error, it will prevent the install command from executing.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-npms-raw-preinstall-endraw-hook"&gt;
  &lt;/a&gt;
  Using NPM's &lt;code&gt;preinstall&lt;/code&gt; hook
&lt;/h2&gt;

&lt;p&gt;We can use NPM's &lt;code&gt;preinstall&lt;/code&gt; hook to prevent running &lt;code&gt;npm install&lt;/code&gt; on the host by checking for an environment variable that is only present in the container.&lt;/p&gt;

&lt;p&gt;Take a look at the following &lt;code&gt;package.json&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"scripts"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"preinstall"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"[ &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;$IS_CONTAINER&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; != 1 ] &amp;amp;&amp;amp; echo &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;Installing packages is not permitted outside of a container!"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&amp;amp;&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;exit&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;exit&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="s2"&gt;"
  },
  "&lt;/span&gt;&lt;span class="err"&gt;dependencies&lt;/span&gt;&lt;span class="s2"&gt;": {
    "&lt;/span&gt;&lt;span class="err"&gt;express&lt;/span&gt;&lt;span class="s2"&gt;": "&lt;/span&gt;&lt;span class="err"&gt;^&lt;/span&gt;&lt;span class="mf"&gt;4.17&lt;/span&gt;&lt;span class="err"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="s2"&gt;"
  }
}
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If the environment variable &lt;code&gt;IS_CONTAINER&lt;/code&gt; doesn't exist or isn't set to &lt;code&gt;1&lt;/code&gt;, NPM will echo an error message, then exit with an error code (&lt;code&gt;exit 1&lt;/code&gt; means&lt;br&gt;
the program exited with an error). If &lt;code&gt;IS_CONTAINER&lt;/code&gt; is set to &lt;code&gt;1&lt;/code&gt;, the script will exit with &lt;code&gt;0&lt;/code&gt;, which means it was successful and the dependencies will install without issue.&lt;/p&gt;

&lt;p&gt;Now we need to make sure that our Docker container has the &lt;code&gt;IS_CONTAINER&lt;/code&gt; environment variable. &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#setting-an-environment-variable-in-the-container"&gt;
  &lt;/a&gt;
  Setting an environment variable in the container
&lt;/h2&gt;

&lt;p&gt;We can set a &lt;code&gt;IS_CONTAINER&lt;/code&gt; environment variable using one of the following three methods:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. We can set this variable in the &lt;code&gt;docker-compose.yml&lt;/code&gt; file.&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;services&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;node&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;node:lts-alpine&lt;/span&gt;
    &lt;span class="na"&gt;working_dir&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;/srv/app&lt;/span&gt;
    &lt;span class="na"&gt;command&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;node index.js&lt;/span&gt;
    &lt;span class="na"&gt;volumes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;.:/srv/app&lt;/span&gt;
    &lt;span class="na"&gt;environment&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;IS_CONTAINER&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
    &lt;span class="na"&gt;ports&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;3000:3000"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;2. We can set this variable in a Dockerfile (if you're using one).&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; node:lts-alpine&lt;/span&gt;

&lt;span class="k"&gt;ENV&lt;/span&gt;&lt;span class="s"&gt; IS_CONTAINER=1&lt;/span&gt;

&lt;span class="k"&gt;WORKDIR&lt;/span&gt;&lt;span class="s"&gt; /usr/src/app&lt;/span&gt;
&lt;span class="k"&gt;COPY&lt;/span&gt;&lt;span class="s"&gt; . .&lt;/span&gt;
&lt;span class="k"&gt;RUN &lt;/span&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt;
&lt;span class="k"&gt;CMD&lt;/span&gt;&lt;span class="s"&gt; ["node", "index.js"]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;3. We can set it as an environment variable from the command line.&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker-compose run &lt;span class="nt"&gt;-e&lt;/span&gt; &lt;span class="nv"&gt;IS_CONTAINER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1 &lt;span class="nt"&gt;--rm&lt;/span&gt; node
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With the combination of adding the &lt;code&gt;preinstall&lt;/code&gt; script in your &lt;code&gt;package.json&lt;/code&gt; file and setting the &lt;code&gt;IS_CONTAINER&lt;/code&gt; environment variable using one of the methods above, your Node packages will install in your container without issue when you run &lt;code&gt;npm install&lt;/code&gt;. Conversely: if you run &lt;code&gt;npm install&lt;/code&gt; on your host, you'll get an error that says &lt;code&gt;Installing packages is not permitted outside of a container!&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Unfortunately, this method will not prevent you from installing individual packages outside of your container: it will only prevent &lt;code&gt;npm install&lt;/code&gt; from installing the packages inside &lt;code&gt;package.json&lt;/code&gt;.&lt;/strong&gt; For example, if you ran &lt;code&gt;npm install lodash&lt;/code&gt; in a console on your host machine, it would install lodash without an error. There is &lt;a href="https://github.com/npm/rfcs/issues/325"&gt;an NPM RFC&lt;/a&gt; that would change this behavior, but as of time of writing this post (November 2021), it hasn't gone through.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prevent-npm-scripts-from-running-outside-of-a-container"&gt;
  &lt;/a&gt;
  Prevent NPM scripts from running outside of a container
&lt;/h2&gt;

&lt;p&gt;You can also prevent custom NPM scripts from running outside of a container by using NPM's &lt;code&gt;pre&lt;/code&gt; scripts. If you had an NPM script called &lt;code&gt;dev&lt;/code&gt; (example: &lt;code&gt;npm run dev&lt;/code&gt;), you could create a &lt;code&gt;predev&lt;/code&gt; script that would run before &lt;code&gt;dev&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Prepending any script name with &lt;code&gt;pre&lt;/code&gt; will cause NPM to run that script first. If you had a &lt;code&gt;build&lt;/code&gt; script, you could have a &lt;code&gt;prebuild&lt;/code&gt;. If you had a &lt;code&gt;start&lt;/code&gt; script, you could have a &lt;code&gt;prestart&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;We can use these &lt;code&gt;pre&lt;/code&gt; scripts to look for an &lt;code&gt;IS_CONTAINER&lt;/code&gt; environment variable the way that we did in the &lt;code&gt;preinstall&lt;/code&gt; script.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"scripts"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"preinstall"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"[ &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;$IS_CONTAINER&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; != 1 ] &amp;amp;&amp;amp; echo &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;Installing packages is not permitted outside of a container!"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&amp;amp;&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;exit&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;exit&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="s2"&gt;",
    "&lt;/span&gt;&lt;span class="err"&gt;predev&lt;/span&gt;&lt;span class="s2"&gt;": "&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="s2"&gt;"$IS_CONTAINER&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; != 1 ] &amp;amp;&amp;amp; echo &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;Running the development script is not permitted outside of a container!"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&amp;amp;&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;exit&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="err"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;exit&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="s2"&gt;",
    "&lt;/span&gt;&lt;span class="err"&gt;dev&lt;/span&gt;&lt;span class="s2"&gt;": "&lt;/span&gt;&lt;span class="err"&gt;nodemon&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;index.js&lt;/span&gt;&lt;span class="s2"&gt;"
  },
  "&lt;/span&gt;&lt;span class="err"&gt;dependencies&lt;/span&gt;&lt;span class="s2"&gt;": {
    "&lt;/span&gt;&lt;span class="err"&gt;express&lt;/span&gt;&lt;span class="s2"&gt;": "&lt;/span&gt;&lt;span class="err"&gt;^&lt;/span&gt;&lt;span class="mf"&gt;4.17&lt;/span&gt;&lt;span class="err"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="s2"&gt;"
  }
}
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can learn more about &lt;code&gt;pre&lt;/code&gt; and &lt;code&gt;post&lt;/code&gt; scripts in &lt;a href="https://docs.npmjs.com/cli/v8/using-npm/scripts#pre--post-scripts"&gt;the official NPM docs&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Please let me know if this post helped you, and let me know in the comments if you know a better way of doing this!&lt;/p&gt;

</description>
      <category>docker</category>
      <category>node</category>
      <category>npm</category>
      <category>javascript</category>
    </item>
    <item>
      <title>AWS IoT TwinMaker: The Hidden Gem of re:Invent</title>
      <author>Brooke Jamieson</author>
      <pubDate>Wed, 01 Dec 2021 06:31:35 +0000</pubDate>
      <link>https://dev.to/aws-builders/aws-iot-twinmaker-the-hidden-gem-of-reinvent-2kkk</link>
      <guid>https://dev.to/aws-builders/aws-iot-twinmaker-the-hidden-gem-of-reinvent-2kkk</guid>
      <description>&lt;p&gt;Overnight, AWS made lots of product announcements at &lt;a href="https://reinvent.awsevents.com/"&gt;re:Invent 2021&lt;/a&gt;, and while lots of these are getting good coverage, I wanted to quickly bring everyone up to speed on what I think is the hidden gem of re:Invent - &lt;a href="https://aws.amazon.com/iot-twinmaker/"&gt;AWS IoT TwinMaker&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Before I started as Head of Enablement for AI Machine Learning and Data at &lt;a href="https://blackbook.ai/"&gt;Blackbook.ai&lt;/a&gt; and before I became an &lt;a href="https://aws.amazon.com/developer/community/community-builders/"&gt;AWS Community Builder&lt;/a&gt; for Machine Learning, I was actually User Experience Lead and then Analytics Lead at a global IoT Proptech platform, so I've actually got heaps of experience with digital twins for facilities optimisation, and I've seen a lot when it comes to integrating disparate data sources in the built environment. &lt;/p&gt;

&lt;p&gt;This is why I'm so excited about AWS IoT TwinMaker which is a new service which makes it faster and easier for developers to create and use digital twins of real-world systems to monitor and optimise operations. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Diagram from the AWS IoT TwinMaker Product Page: &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kM6apv8s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9gec2803qa3bus28g4go.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kM6apv8s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9gec2803qa3bus28g4go.png" alt="Diagram from the AWS IoT TwinMaker Product Page" width="880" height="298"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Data from sources like equipment sensors, video cameras, and business applications is being collected and processed by all sorts of organisations about their equipment and facilities. In order to optimise industrial operations, improve production output, and improve equipment performance, most companies want to combine these disparate data sets to create a digital replica of their physical systems. This is called a Digital Twin. Although creating and maintaining Digital Twins may seem difficult and time-consuming, it doesn't have to be anymore.&lt;br&gt;
With AWS IoT TwinMaker, you can quickly get started with creating digital twins of equipment, processes, and facilities. This is done by connecting data from different data sources like time series sensor data from equipment, video feeds from cameras, and maintenance histories from business applications. Importantly, You won't have to move the data into a single repository for this to work.  &lt;/p&gt;

&lt;p&gt;Building a Digital Twin Graph allows your operators to make better data-driven decisions by understanding and connecting all the sources of your data into a 3D application of the physical environment that displays data and insights in a spatial context. &lt;/p&gt;

&lt;p&gt;There's built-in data connectors for services like &lt;a href="https://aws.amazon.com/iot-sitewise/"&gt;AWS IoT SiteWise&lt;/a&gt; for equipment and time-series sensor data, &lt;a href="https://aws.amazon.com/kinesis/video-streams/"&gt;Amazon Kinesis Video Streams&lt;/a&gt; for video data, and &lt;a href="https://aws.amazon.com/s3/"&gt;Amazon S3&lt;/a&gt; for storage of visual resources like CAD files and data from business applications.&lt;/p&gt;

&lt;p&gt;AWS IoT TwinMaker forms a digital twin graph that combines and understands the relationships between virtual representations of your physical systems and connected data sources, so you can intuitively and accurately model what's happening in your real-world environment.&lt;/p&gt;

&lt;p&gt;Once you've built the digital twin graph, you can visualise the data using the context of the physical data using your existing CAD files or point cloud scans to make 3D models of your space. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Example from &lt;a href="https://github.com/aws-samples/aws-iot-twinmaker-samples"&gt;Github repo of AWS IoT TwinMaker Samples&lt;/a&gt;:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BAKH2gv8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/virp7xll5b30tzn0oomp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BAKH2gv8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/virp7xll5b30tzn0oomp.png" alt="Screenshot from Github repo for AWS IoT TwinMaker showing a dashboard with 3d renderings of physical spaces" width="880" height="453"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;From here, you can then overlay video and sensor data overlays from your connected data sources as well as insights from connected machine learning or simulation services. But it's not just forecasts and projections, you can also add practical elements like equipment maintenance records and manuals to the digital twin which becomes your single source of truth. &lt;/p&gt;

&lt;p&gt;AWS IoT TwinMaker is available today in preview in US East, US West, Europe and Asia Pacific, and this is again just a preview service so this list will grow. The AWS Free tier will include 50 million API calls per month for 12 months, so I'm excited to get building with this! &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dnZh68sE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qznjy7c17vimjhk95epi.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dnZh68sE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qznjy7c17vimjhk95epi.jpg" alt="Just a teal divider line" width="880" height="5"&gt;&lt;/a&gt;&lt;br&gt;
About the Author: &lt;a href="https://twitter.com/brooke_jamieson"&gt;Brooke Jamieson&lt;/a&gt; is the Head of Enablement - AI/ML and Data at Blackbook.ai, an Australian consulting firm specialising in AI, Automation, DataOps and Digital. Learn more about Blackbook.ai &lt;a href="https://blackbook.ai/"&gt;here&lt;/a&gt; and learn more about Brooke &lt;a href="https://www.linkedin.com/in/brookejamieson/"&gt;here&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>aws</category>
      <category>iot</category>
      <category>digitaltwins</category>
      <category>proptech</category>
    </item>
    <item>
      <title>What I learned from Virtual Coffee's Tech blogging challenge</title>
      <author>Jessica Wilkins</author>
      <pubDate>Wed, 01 Dec 2021 06:26:29 +0000</pubDate>
      <link>https://dev.to/codergirl1991/what-i-learned-from-virtual-coffees-tech-blogging-challenge-186</link>
      <guid>https://dev.to/codergirl1991/what-i-learned-from-virtual-coffees-tech-blogging-challenge-186</guid>
      <description>&lt;p&gt;During the month of November, &lt;a href="https://virtualcoffee.io/"&gt;Virtual Coffee&lt;/a&gt; members participated in a &lt;a href="https://virtualcoffee.io/monthlychallenges/nov-2021/"&gt;blogging challenge&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The goal was to write 50,000 words as a community. This challenged all of the members to write thoughtful tech blogs and publish them on sites like Devto. &lt;/p&gt;

&lt;p&gt;The community ended up exceeding that goal and writing over 120,000 words.&lt;/p&gt;

&lt;p&gt;It was great to see all of the amazing articles and grow personally as a writer. &lt;/p&gt;

&lt;p&gt;In this article, I am going to break down some of the articles I submitted for this challenge and what I learned by writing them.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-i-overcame-my-fear-of-technical-writing-and-landed-a-job-at-freecodecamp"&gt;
  &lt;/a&gt;
  How I overcame my fear of technical writing and landed a job at freeCodeCamp
&lt;/h2&gt;

&lt;p&gt;This was probably my most popular &lt;a href="https://dev.to/codergirl1991/how-i-overcame-my-fear-of-technical-writing-and-landed-a-job-at-freecodecamp-37d6"&gt;article&lt;/a&gt; from this month.&lt;/p&gt;

&lt;p&gt;I decided to tell the story of how I started learning how to code and wound up working for &lt;a href="https://www.freecodecamp.org/learn/"&gt;freeCodeCamp&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;I felt like it was important to tell this story because everyone has a unique journey into tech. &lt;/p&gt;

&lt;p&gt;I think it is inspiring to learn about everyone's past careers and how they wound up as developers.&lt;/p&gt;

&lt;p&gt;It was nice to see the positive reception to my story and seeing it shared across social media. I hope to write more articles talking about my journey in the near future. 😃&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-create-a-website-free-of-cost-website-builder-platform-guide"&gt;
  &lt;/a&gt;
  How to Create a Website Free of Cost – Website Builder Platform Guide
&lt;/h2&gt;

&lt;p&gt;As a staff author for &lt;a href="https://www.freecodecamp.org/news/"&gt;freeCodeCamp News&lt;/a&gt;, this was one of the assigned headlines. &lt;/p&gt;

&lt;p&gt;My task was to come up with a list of website builders that were completely free. That includes free hosting. &lt;/p&gt;

&lt;p&gt;The target audience for &lt;a href="https://www.freecodecamp.org/news/how-to-create-a-website-free-of-cost-website-builder-platform-guide/"&gt;this article&lt;/a&gt; were those that were actively searching for free options to build websites that required zero coding knowledge. &lt;/p&gt;

&lt;p&gt;At first, I wasn't sure how many free options there were still out there. My initial impression was that were was always going to be some sort of hidden cost built in.&lt;/p&gt;

&lt;p&gt;But to my suprise, there are a few options where you can build high quality sites without any coding experience.&lt;/p&gt;

&lt;p&gt;All of these options have drag and drop features and pre made template designs to choose from.&lt;/p&gt;

&lt;p&gt;These were the four sites I found during my research.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://www.wix.com/"&gt;Wix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.weebly.com/"&gt;Weebly&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.site123.com/"&gt;SITE123&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://carrd.co/"&gt;Carrd&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I really hope this guide will help those non-coders who want to build beautiful websites. 😃&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-run-the-freecodecamp-backend-challenges-locally"&gt;
  &lt;/a&gt;
  How to Run the freeCodeCamp Backend Challenges Locally
&lt;/h2&gt;

&lt;p&gt;I decided to come up with &lt;a href="https://www.freecodecamp.org/news/how-to-run-the-freecodecamp-backend-challenges-locally/"&gt;this article&lt;/a&gt;, because I was surprised that &lt;a href="https://www.freecodecamp.org/learn/"&gt;freeCodeCamp&lt;/a&gt; did not have a guide to teach users how to run the backend challenges locally. &lt;/p&gt;

&lt;p&gt;In the &lt;a href="https://www.freecodecamp.org/learn/back-end-development-and-apis/"&gt;curriculum&lt;/a&gt;, most users decide to complete the challenges using the Replit starter project. &lt;/p&gt;

&lt;p&gt;But the few users that do decide to run the project locally, try to submit their GitHub repository links but are confused why the system doesn't except their submission.&lt;/p&gt;

&lt;p&gt;I decided to create a walkthrough guide of how to clone the freeCodeCamp backend repositories and get the project running using the local server.&lt;/p&gt;

&lt;p&gt;I enjoyed writing this short guide to help freeCodeCamp users through the backend certifications. 😃&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-build-a-weather-converter-series"&gt;
  &lt;/a&gt;
  How to Build a Weather Converter Series
&lt;/h2&gt;

&lt;p&gt;I wanted to create a tutorial for beginners for a few months now, but was always too nervous to write it. &lt;/p&gt;

&lt;p&gt;I wanted to create a step by step guide to give beginners extra practice creating small web projects.&lt;/p&gt;

&lt;p&gt;This was my &lt;a href="https://dev.to/codergirl1991/series/15503"&gt;first tutorial&lt;/a&gt; and it was to show beginners how to build a Weather Temperature converter using HTML, CSS and JavaScript. &lt;/p&gt;

&lt;p&gt;I initially struggled with how to structure the series and how detailed I should get when it came to using a code editor. &lt;/p&gt;

&lt;p&gt;I tried to be aware of the fact that many beginners might not be familiar with a code editor. So I wanted to walk them through the basics.&lt;/p&gt;

&lt;p&gt;I also wanted to explain each step of the project and how parts of the code were working.&lt;/p&gt;

&lt;p&gt;I was happy to see that the project received positive reviews and that people were following along with the series. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#stress-and-mental-health-in-tech-what-i-learned-from-dr-jennifer-akullians-freecodecamp-tech-talk"&gt;
  &lt;/a&gt;
  Stress and Mental Health in Tech – What I learned from Dr. Jennifer Akullian's freeCodeCamp Tech Talk
&lt;/h2&gt;

&lt;p&gt;I decided to write &lt;a href="https://www.freecodecamp.org/news/stress-and-mental-health-in-tech/"&gt;this article&lt;/a&gt; because the issue of mental health in tech is not discussed that often. &lt;/p&gt;

&lt;p&gt;I learned a lot from this &lt;a href="https://www.youtube.com/watch?v=xgDX8dwiF5w"&gt;freeCodeCamp Tech Talk&lt;/a&gt;, and wanted to share my thoughts with the community. &lt;/p&gt;

&lt;p&gt;The main takeaway I received from the talk, were exercises I could do throughout the day to manage my stress at work.&lt;/p&gt;

&lt;p&gt;I have even started to implement some of those daily exercises throughout my work day.&lt;/p&gt;

&lt;p&gt;I encourage everyone to give this 19 minute talk a listen because mental health is important. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;This has been a great month of writing. I am really fortunate to be apart of a great community like &lt;a href="https://virtualcoffee.io/"&gt;Virtual Coffee&lt;/a&gt; and I look forward to next month's challenge. 😃&lt;/p&gt;

</description>
      <category>webdev</category>
    </item>
    <item>
      <title>Building a Clubhouse clone with 100ms Javascript SDK</title>
      <author>Nilay Jayswal</author>
      <pubDate>Wed, 01 Dec 2021 06:03:22 +0000</pubDate>
      <link>https://dev.to/100mslive/building-a-clubhouse-clone-with-100ms-javascript-sdk-4bo1</link>
      <guid>https://dev.to/100mslive/building-a-clubhouse-clone-with-100ms-javascript-sdk-4bo1</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.100ms.live/"&gt;100ms&lt;/a&gt; offers a video conferencing infrastructure that provides web and mobile — native iOS and Android SDK, to add live video &amp;amp; audio conferencing to your applications.&lt;/p&gt;

&lt;p&gt;100ms is built by the same team that built live infrastructure at &lt;a href="https://www.hotstar.com/in/disneyplus"&gt;Disney&lt;/a&gt; and &lt;a href="https://web.facebook.com/?_rdc=1&amp;amp;_rdr"&gt;Facebook&lt;/a&gt;, so be sure that you are in safe hands.&lt;/p&gt;

&lt;p&gt;In this article, we will demonstrate the power of the &lt;a href="https://docs.100ms.live/javascript/v2/features/integration"&gt;100ms SDK&lt;/a&gt; by building a &lt;a href="https://www.joinclubhouse.com/"&gt;Clubhouse&lt;/a&gt; clone.&lt;/p&gt;

&lt;p&gt;Clubhouse is a revolutionary audio-based social media network that features chat rooms where users connect, listen, and learn from each other.  &lt;/p&gt;

&lt;p&gt;Let’s get started with creating our Clubhouse clone in the next section.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting Started
&lt;/h2&gt;

&lt;p&gt;Our Clubhouse clone will be built with &lt;a href="https://parceljs.org/"&gt;Parcel&lt;/a&gt;, &lt;a href="https://docs.100ms.live/javascript/v2/features/integration"&gt;100ms JavaScript SDK&lt;/a&gt;, &lt;a href="https://tailwindcss.com/"&gt;Tailwind CSS&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To get started, clone &lt;a href="https://github.com/lawrenceagles/clubhouse-jSDK-starter"&gt;this repository&lt;/a&gt; to get the starter files.&lt;/p&gt;

&lt;p&gt;Now you can run &lt;code&gt;npm install&lt;/code&gt; to install all dependencies and &lt;code&gt;npm start&lt;/code&gt; to start the dev server. After this we get:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HQzASTtw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zfkfut9ce9hm6o1onf8d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HQzASTtw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zfkfut9ce9hm6o1onf8d.png" alt="Image description" width="880" height="441"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Note: the room section is not displayed because we added a &lt;code&gt;hidden&lt;/code&gt; class in the boilerplate above — in the element with &lt;code&gt;room-section&lt;/code&gt; id. We only want to display this view when the user joins a room — at that time we would hide the join form.&lt;/p&gt;

&lt;p&gt;In the next subsection, we will set up our 100ms credentials. Let’s jump in.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setting-up-100ms-credentials"&gt;
  &lt;/a&gt;
  Setting up 100ms credentials
&lt;/h2&gt;

&lt;p&gt;To use the 100ms SDK in our app, we need a &lt;code&gt;token_endpoint&lt;/code&gt; and a &lt;code&gt;room_id&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Since &lt;a href="https://en.parceljs.org/env.html"&gt;Parcel supports environment variables&lt;/a&gt;, create a &lt;code&gt;.env&lt;/code&gt; file in your app’s root directory and add the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;TOKEN_ENDPOINT=&amp;lt;!-- your token endpoint --&amp;gt;
ROOM_ID=&amp;lt;!-- your room id --&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To get our &lt;code&gt;token_endpoint&lt;/code&gt;, register and &lt;a href="https://dashboard.100ms.live/login?__hstc=19694910.329979dc69ac6211c451a608deb47ead.1629813148407.1638280799524.1638335711945.143&amp;amp;__hssc=19694910.4.1638335711945&amp;amp;__hsfp=263881901"&gt;log in&lt;/a&gt; to your 100ms dashboard and go to the &lt;a href="https://dashboard.100ms.live/developer?__hstc=19694910.329979dc69ac6211c451a608deb47ead.1629813148407.1638280799524.1638335711945.143&amp;amp;__hssc=19694910.4.1638335711945&amp;amp;__hsfp=263881901"&gt;developer section&lt;/a&gt;. Copy the &lt;code&gt;token_endpoint&lt;/code&gt; and update the &lt;code&gt;.env&lt;/code&gt; file accordingly. Also, to get the &lt;code&gt;room_id&lt;/code&gt;  we need to create a room. But before we create a room, we first need to create a custom app and custom roles.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-custom-app"&gt;
  &lt;/a&gt;
  Create custom app
&lt;/h2&gt;

&lt;p&gt;After registration, you would redirect to your dashboard to create an app.&lt;/p&gt;

&lt;p&gt;Add a unique subdomain, and from the template, options choose the “Create your Own” option to create a custom template as seen below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--t2-8g5Jj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g8p23u4em19z2409uazh.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t2-8g5Jj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g8p23u4em19z2409uazh.gif" alt="Image description" width="880" height="455"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-roles"&gt;
  &lt;/a&gt;
  Create Roles
&lt;/h2&gt;

&lt;p&gt;A role defines who a peer can see/hear, their permissions to mute/unmute someone, change someone's role, etc. Note a peer simply refers to a participant in the room — someone who has joined the room.&lt;/p&gt;

&lt;p&gt;Our clubhouse clone would have the following roles:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Listener — can only listen to others. To create this role, turn off all publish strategies and click save.&lt;/li&gt;
&lt;li&gt;Speaker — can listen and speak. Can mute and unmute himself. To create this role, turn off all publish strategies and leave only &lt;code&gt;can share audio&lt;/code&gt; on.&lt;/li&gt;
&lt;li&gt;Moderator — can do everything a speaker can do. Also, can mute/unmute others and change their role. To create this role, turn on only &lt;code&gt;can share audio&lt;/code&gt; as in speaker. And modify its permission by turning on &lt;code&gt;can change any participant's role&lt;/code&gt; and &lt;code&gt;can mute any participant&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now click on “Setup App”, and we have:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uz9abat2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/op4da8mh0yth9w76lq0k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uz9abat2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/op4da8mh0yth9w76lq0k.png" alt="Image description" width="880" height="470"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now we can create our room.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-room"&gt;
  &lt;/a&gt;
  Create Room
&lt;/h2&gt;

&lt;p&gt;When users join a conference call, they are said to join a room. And these users are referred to as peers. &lt;/p&gt;

&lt;p&gt;To create a room, click on Rooms from the dashboard then Create Room as seen in the image below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--npcerkaI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j09lfxgomzptjk0oiufg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--npcerkaI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j09lfxgomzptjk0oiufg.png" alt="Image description" width="880" height="420"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now fill out the room details and click “Create Room” and you will be redirected to the room details page. From there, copy your &lt;code&gt;room_id&lt;/code&gt; and update the &lt;code&gt;.env&lt;/code&gt; file accordingly.&lt;/p&gt;

&lt;p&gt;Now that we have finished setting up our 100ms app, we can start building our application.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#building-the-app"&gt;
  &lt;/a&gt;
  Building the App
&lt;/h2&gt;

&lt;p&gt;To use the 100ms JavaScript SDK we installed previously, there are three entities we need to be familiar with, from the &lt;a href="https://docs.100ms.live/javascript/v2/features/integration#java-script"&gt;documentation&lt;/a&gt; these hooks are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;hmsStore&lt;/code&gt; - this contains the complete state of the room at any given time. This includes, for example, participant details, messages, and track states.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;hmsActions&lt;/code&gt; - this is used to perform any action such as joining, muting, and sending a message.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;hmsNotifications&lt;/code&gt; - this can be used to get notified on peer join/leave and new messages to show toast notifications to the user.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To keep things clean, let’s set up our 100ms JavaScript SDK and grab all the needed DOM elements. Add the following code to your &lt;code&gt;app.js&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import {
    HMSReactiveStore,
    selectPeers,
    selectIsConnectedToRoom,
    selectIsLocalAudioEnabled
} from '@100mslive/hms-video-store';

const hms = new HMSReactiveStore();
const hmsStore = hms.getStore();
const hmsActions = hms.getHMSActions();

// Get DOM elements
const Form = document.querySelector('#join-form');
const FormView = document.querySelector('#join-section');
const RoomView = document.querySelector('#room-section');
const PeersContainer = document.querySelector('#peers-container');
const LeaveRoomBtn = document.querySelector('#leave-room-btn');
const AudioBtn = document.querySelector('#audio-btn');
const JoinBtn = document.querySelector('#join-btn');

// handle submit form

// handle join room view

// leave room

// display room

//handle mute/unmute peer
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we can create the &lt;code&gt;join room&lt;/code&gt; view.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#joining-room"&gt;
  &lt;/a&gt;
  Joining Room
&lt;/h2&gt;

&lt;p&gt;Add the following code to your &lt;code&gt;index.html&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;form id="join-form" class="mt-8"&amp;gt;
    &amp;lt;div class="mx-auto max-w-lg "&amp;gt;
        &amp;lt;div class="py-1"&amp;gt;
            &amp;lt;span class="px-1 text-sm text-gray-600"&amp;gt;Username&amp;lt;/span&amp;gt;
            &amp;lt;input id="username" 
                   placeholder="Enter Username" 
                   name="username" 
                   type="text"
                   class="text-md block px-3 py-2 rounded-lg 
                          w-full bg-white border-2 border-gray-300 
                          placeholder-gray-600 shadow-md 
                          focus:placeholder-gray-500 focus:bg-white 
                          focus:border-gray-600 focus:outline-none" /&amp;gt;
        &amp;lt;/div&amp;gt;

        &amp;lt;div class="py-1"&amp;gt;
            &amp;lt;span class="px-1 text-sm text-gray-600"&amp;gt;Role&amp;lt;/span&amp;gt;
            &amp;lt;select id="roles"
                class="text-md block px-3 py-2 rounded-lg 
                       w-full bg-white border-2 border-gray-300 
                       placeholder-gray-600 shadow-md 
                       focus:placeholder-gray-500 focus:bg-white 
                       focus:border-gray-600 focus:outline-none"&amp;gt;
                &amp;lt;option&amp;gt;Speaker&amp;lt;/option&amp;gt;
                &amp;lt;option&amp;gt;Listener&amp;lt;/option&amp;gt;
                &amp;lt;option&amp;gt;Moderator&amp;lt;/option&amp;gt;
            &amp;lt;/select&amp;gt;
        &amp;lt;/div&amp;gt;
        &amp;lt;button id="join-btn" type="submit"
            class="mt-3 text-lg font-semibold bg-gray-800 w-full 
                   text-white rounded-lg px-6 py-3 block shadow-xl 
                   hover:text-white hover:bg-black"&amp;gt;
            Join
        &amp;lt;/button&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/form&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The form above provides an input field for the username and a select option for the roles. We will handle submitting this form by adding the following code to the &lt;code&gt;app.js&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Form.addEventListener('submit', async function handleSubmit(e) {
    // prevents form reload
    e.preventDefault();
    // get input fields
    const userName = Form.elements['username'].value; // by name
    const role = Form.elements['roles'].value; // by name
    // simple validation
    if (!userName) return; // makes sure user enters a username
    JoinBtn.innerHTML = 'Loading...';
    try {
        // gets token
        const authToken = await getToken(role);
        // joins rooms
        hmsActions.join({
            userName,
            authToken,
            settings: {
                isAudioMuted: true
            }
        });
    } catch (error) {
        // handle error
        JoinBtn.innerHTML = 'Join';
        console.log('Token API Error', error);
    }
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The code above gets the value of the form fields, gets an &lt;code&gt;authToken&lt;/code&gt; by calling the &lt;code&gt;getToken&lt;/code&gt; method, and joins the room by calling the join method in &lt;code&gt;hmsActions&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;The &lt;code&gt;getToken&lt;/code&gt; function is a utility function. We will use two utility functions for the purpose of this tutorial. Let's quickly create them.&lt;/p&gt;

&lt;p&gt;In the &lt;code&gt;src&lt;/code&gt; folder, create a utils folder and with the following files: &lt;code&gt;getToken.js&lt;/code&gt;, &lt;code&gt;createElem.js&lt;/code&gt;, and &lt;code&gt;index.js&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;In the &lt;code&gt;getToken.js&lt;/code&gt; add the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { v4 as uuidv4 } from 'uuid';
const TOKEN_ENDPOINT = process.env.TOKEN_ENDPOINT;
const ROOM_ID = process.env.ROOM_ID;

const getToken = async (user_role) =&amp;gt; {
    const role = user_role.toLowerCase();
    const user_id = uuidv4();
    const room_id = ROOM_ID;
    const response = await fetch(`${TOKEN_ENDPOINT}api/token`, {
        method: 'POST',
        body: JSON.stringify({
            user_id,
            role,
            room_id
        })
    });
    const { token } = await response.json();
    return token;
};
export default getToken;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And in the &lt;code&gt;createElem.js&lt;/code&gt; add the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const createElem = () =&amp;gt; {}
export default createElem
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We will update this when we are working on rendering peers to the view. But for now, let’s leave it as a noop.&lt;/p&gt;

&lt;p&gt;Next, in the &lt;code&gt;index.js&lt;/code&gt; file add the following code to export the above utility functions:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import createElem from './createElem';
import getToken from './getToken';

export { createElem, getToken };
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally, we will import these functions in our &lt;code&gt;app.js&lt;/code&gt; file as seen below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import {
    HMSReactiveStore,
    selectPeers,
    selectIsConnectedToRoom,
    selectIsLocalAudioEnabled
} from '@100mslive/hms-video-store';
import { getToken, createElem } from '../utils';
...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now when we run our server we get:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---U4tWbuf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pphq4y7cb69xvjfsdljm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---U4tWbuf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pphq4y7cb69xvjfsdljm.png" alt="Image description" width="880" height="441"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When a user joins a room, we want to hide this form and display the room view. And to do this add the following code to your &lt;code&gt;app.js&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function handleConnection(isConnected) {
    if (isConnected) {
        console.log('connected');
        // hides Form
        FormView.classList.toggle('hidden');
        // displays room
        RoomView.classList.toggle('hidden');
    } else {
        console.log('disconnected');
        // hides Form
        FormView.classList.toggle('hidden');
        // displays room
        RoomView.classList.toggle('hidden');
    }
}
// subscribe to room state
hmsStore.subscribe(handleConnection, selectIsConnectedToRoom);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the code above, we subscribed to the room state; consequently, &lt;code&gt;handleConnection&lt;/code&gt; is called whenever we join or leave a room. This is possible because &lt;code&gt;hmsStore&lt;/code&gt; is reactive and it enables us to register a state. The result of this is that the registered function is called whenever the selected state changes.&lt;/p&gt;

&lt;p&gt;To handle leaving a room add the following code to the &lt;code&gt;app.js&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function leaveRoom() {
    hmsActions.leave();
    JoinBtn.innerHTML = 'Join';
}
LeaveRoomBtn.addEventListener('click', leaveRoom);
window.onunload = leaveRoom;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The code above, calls the &lt;code&gt;leaveRoom&lt;/code&gt; function when the &lt;code&gt;LeaveRoomBtn&lt;/code&gt; is clicked to handle leaving a room. &lt;/p&gt;

&lt;p&gt;Note: call leave on &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/WindowEventHandlers/onunload"&gt;window.onunload&lt;/a&gt; to handle when a user closes or refreshes the tab.&lt;/p&gt;

&lt;p&gt;Now we can join a room and we get:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CHCyhib_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fw1012erynd7w2g428d5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CHCyhib_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fw1012erynd7w2g428d5.png" alt="Image description" width="880" height="442"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Following this, all that is left is to create our room. Let’s do that in the next subsection.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-room"&gt;
  &lt;/a&gt;
  Create Room
&lt;/h2&gt;

&lt;p&gt;First, update the &lt;code&gt;createElem.js&lt;/code&gt; function with the code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// helper function to create html elements
function createElem(tag, attrs = {}, ...children) {
    const newElement = document.createElement(tag);
    Object.keys(attrs).forEach((key) =&amp;gt; {
        newElement.setAttribute(key, attrs[key]);
    });

    children.forEach((child) =&amp;gt; {
        newElement.append(child);
    });
    return newElement;
}
export default createElem;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We will use this helper function to render the peers in a room. To do this, add the following code to the &lt;code&gt;app.js&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function renderPeers(peers) {
    PeersContainer.innerHTML = ''; // clears the container
    if (!peers) {
        // this allows us to make peer list an optional argument
        peers = hmsStore.getState(selectPeers);
    }
    peers.forEach((peer) =&amp;gt; {
        // creates an image tag
        const peerAvatar = createElem('img', {
            class: 'object-center object-cover w-full h-full',
            src: 'https://cdn.pixabay.com/photo/2013/07/13/10/07/man-156584_960_720.png',
            alt: 'photo'
        });

        // create a description paragrah tag with a text
        peerDesc = createElem(
            'p',
            {
                class: 'text-white font-bold'
            },
            peer.name + '-' + peer.roleName
        );
        const peerContainer = createElem(
            'div',
            {
                class:
                    'w-full bg-gray-900 rounded-lg sahdow-lg overflow-hidden flex flex-col justify-center items-center'
            },
            peerAvatar,
            peerDesc
        );

        // appends children
        PeersContainer.append(peerContainer);
    });
}
hmsStore.subscribe(renderPeers, selectPeers);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the &lt;code&gt;renderPeers&lt;/code&gt;  function above, &lt;code&gt;selectPeers&lt;/code&gt; gives us an array of peers — remote and your local peer, present in the room.&lt;/p&gt;

&lt;p&gt;Next, we create two HTML elements: &lt;code&gt;peerAvatar&lt;/code&gt; , and &lt;code&gt;peerDesc&lt;/code&gt; by using the &lt;code&gt;createElem&lt;/code&gt; helper function. And we appended these elements as children to &lt;code&gt;peerContainer&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Also, since we are subscribed to peer state, our view gets updated whenever something changes with any of the peers.&lt;/p&gt;

&lt;p&gt;Note, in our small contrived example above, we used a random avatar from &lt;a href="https://pixabay.com/"&gt;Pixabay&lt;/a&gt; as the &lt;code&gt;src&lt;/code&gt; for the &lt;code&gt;peerAvatar&lt;/code&gt; element. In a real situation, this should be the link to the user profile photo. &lt;/p&gt;

&lt;p&gt;Finally, we will handle mute/unmute by adding the following code to &lt;code&gt;app.js&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;AudioBtn.addEventListener('click', () =&amp;gt; {
    let audioEnabled = !hmsStore.getState(selectIsLocalAudioEnabled);
    AudioBtn.innerText = audioEnabled ? 'Mute' : 'Unmute';
    AudioBtn.classList.toggle('bg-green-600');
    AudioBtn.classList.toggle('bg-red-600');
    hmsActions.setLocalAudioEnabled(audioEnabled);
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we can test our app by running &lt;code&gt;npm start&lt;/code&gt;, filling out, and submitting the form. And after joining a room we get:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D3_VENkB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cyhwju02zzvwvcq7mavo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D3_VENkB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cyhwju02zzvwvcq7mavo.png" alt="Image description" width="880" height="441"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can mute/unmute yourself, and leave the room. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#role-change"&gt;
  &lt;/a&gt;
  Role change
&lt;/h2&gt;

&lt;p&gt;Our current setup does not support the “change role” feature, but in this section, we will add this feature. &lt;/p&gt;

&lt;p&gt;Currently, a listener can mute/unmute but it is best we hide this feature since the listener does not have publish permissions.&lt;/p&gt;

&lt;p&gt;So we need to upgrade our mute/unmute feature to work with roles. We will get the permissions of the local peer from the &lt;a href="https://docs.100ms.live/api-reference/javascript/v2/home/content#select-local-peer-role"&gt;selectLocalPeerRole&lt;/a&gt; variable but first, import it by updating &lt;code&gt;app.js&lt;/code&gt; as seen below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import {
    HMSReactiveStore,
    selectPeers,
    selectIsConnectedToRoom,
    selectIsLocalAudioEnabled,
    selectLocalPeerRole // imports selectLocalPeerRole
} from '@100mslive/hms-video-store';
...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, update the &lt;code&gt;handleConnection&lt;/code&gt; function as seen below to hide the mute/unmute button from the listener update:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// handle join room view
function handleConnection(isConnected) {
    // get local peer role.
    const role = hmsStore.getState(selectLocalPeerRole);

    if (isConnected) {
        console.log('connected');

        //hides mute btn for listner
        if (role.name === 'listener') {
            AudioBtn.classList.add('hidden');
        }

        // hides Form
        FormView.classList.toggle('hidden');
        // displays room
        RoomView.classList.toggle('hidden');
    } else {
        console.log('disconnected');
        // hides Form
        FormView.classList.toggle('hidden');
        // displays room
        RoomView.classList.toggle('hidden');
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, we will start working on the role change feature. &lt;/p&gt;

&lt;p&gt;Update the &lt;code&gt;renderPeer&lt;/code&gt; function’s forEach loop as seen below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;...
    peers.forEach((peer) =&amp;gt; {
        // creates an image tag
        const peerAvatar = createElem('img', {
            class: 'object-center object-cover w-full h-full',
            src: 'https://cdn.pixabay.com/photo/2013/07/13/10/07/man-156584_960_720.png',
            alt: 'photo'
        });
        // create a description paragraph tag with a text
        const peerDesc = createElem(
            'p',
            {
                class: 'text-white font-bold'
            },
            `${peer.name}${peer.isLocal ? ' (You)' : ''}-${peer.roleName} `
        );
        // add mute/unmute list items
        const MuteItem = createElem(
            'li',
            { id: 'mute', class: 'cursor-pointer' },
            createElem(
                'span',
                {
                    'data-id': peer.id,
                    'data-islocal': peer.isLocal,
                    class: 'mute rounded-t bg-gray-200 hover:bg-gray-400 py-2 px-4 block'
                },
                'Unmute'
            )
        );
        const SpeakerItem = createElem(
            'li',
            { id: 'speaker', class: 'cursor-pointer' },
            createElem(
                'span',
                {
                    'data-id': peer.id,
                    class: 'speaker bg-gray-200 hover:bg-gray-400 py-2 px-4 block'
                },
                'Make speaker'
            )
        );
        const ListenerItem = createElem(
            'li',
            { id: 'listener', class: 'cursor-pointer' },
            createElem(
                'span',
                {
                    'data-id': peer.id,
                    class: 'listener rounded-b bg-gray-200 hover:bg-gray-400 py-2 px-4 block'
                },
                'Make listener'
            )
        );
        const menu = createElem(
            'button',
            { class: 'text-white font-bold text-3xl z-20 rounded inline-flex items-center' },
            '...'
        );
        const dropdown = createElem(
            'ul',
            { class: 'dropdown-menu absolute top-4 right-0 hidden text-gray-700 w-max pt-1 group-hover:block z-50' },
            MuteItem,
            SpeakerItem,
            ListenerItem
        );
        const menuContainer = createElem(
            'div',
            {
                class: `${peer.isLocal &amp;amp;&amp;amp; peer.roleName === 'listener'
                ? 'hidden'
                : ''} dropdown inline-block absolute top-0 right-8`
            },
            menu,
            dropdown
        );
        const peerContainer = createElem(
            'div',
            {
                class:
                    'relative w-full p-4 bg-gray-900 rounded-lg sahdow-lg overflow-hidden flex flex-col justify-center items-center'
            },
            menuContainer,
            peerAvatar,
            peerDesc
        );
        // appends children
        PeersContainer.append(peerContainer);
    });
...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The code above creates the list items needed for the change role feature. And these are nested as children of &lt;code&gt;menuContainer&lt;/code&gt;.  Also, the &lt;code&gt;menuContainer&lt;/code&gt; is dynamically hidden if the local peer is a listener by adding the &lt;code&gt;hidden&lt;/code&gt; Tailwind CSS class. And this gives each user with publish permission, ellipses that display a list of actions. &lt;/p&gt;

&lt;p&gt;Thus a listener cannot mute/unmute as seen below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f_2EkxfY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8rwu5kkcc3hydi3r5nw7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f_2EkxfY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8rwu5kkcc3hydi3r5nw7.png" alt="Image description" width="880" height="441"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But a moderator can mute/unmute as seen below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8x4PAFwc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xl5i9hd8uuw54a0hp23i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8x4PAFwc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xl5i9hd8uuw54a0hp23i.png" alt="Image description" width="880" height="442"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Also, we dynamically passed &lt;code&gt;peer.id&lt;/code&gt; and &lt;code&gt;peer.islocal&lt;/code&gt; by using the HTML 5 &lt;a href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Howto/Use_data_attributes"&gt;data-*&lt;/a&gt; global attributes. This enables us to pass custom data needed for implementing the change role feature. &lt;/p&gt;

&lt;p&gt;We choose this pattern rather than setting up our event handlers within the forEach loop because this is cleaner and easier to understand. Also, setting up event handlers in a loop in JavaScript can easily lead to bugs because it requires us to add an event handler for each list item — DOM nodes and somehow bind this.&lt;/p&gt;

&lt;p&gt;We could use &lt;a href="https://javascript.info/event-delegation"&gt;event delegation&lt;/a&gt;; this pattern enables us to add only one event handler to a parent element which would analyze bubbled events to find a match on child elements.&lt;/p&gt;

&lt;p&gt;Add the following code at the button of &lt;code&gt;app.js&lt;/code&gt; :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// handle change role and mute/unmuter other peers
document.addEventListener(
    'click',
    function(event) {
        const role = hmsStore.getState(selectLocalPeerRole);
        // hanadle mute/unmute
        if (event.target.matches('.mute')) {
            if (role.name === 'listener') {
                alert('You do not have the permission to mute/unmute!');
                return;
            }
            if (
                role.name === 'speaker' &amp;amp;&amp;amp; 
                JSON.parse(event.target.dataset.islocal) === false) {
                alert(
                  'You do not have the permission to mute/unmute other peers!'
                );
                return;
            }
            let audioEnabled = !hmsStore.getState(selectIsLocalAudioEnabled);
            hmsActions.setLocalAudioEnabled(audioEnabled);
            event.target.innerText = audioEnabled ? 'Mute' : 'unmute';
        }

        // handle change role
        if (event.target.matches('.speaker')) {
            if (!role.permissions.changeRole) {
                alert('You do not have the permission to change role!');
                return;
            }
            hmsActions.changeRole(event.target.dataset.id, 'speaker', true);
        }

        if (event.target.matches('.listener')) {
            if (!role.permissions.changeRole) {
                alert('You do not have the permission to change role!');
                return;
            }
            hmsActions.changeRole(event.target.dataset.id, 'listener', true);
        }
    },
    false
);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the code above we set up one event listener to handle all the mute and change role events.&lt;/p&gt;

&lt;p&gt;We get the clicked DOM element with &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Element/matches"&gt;event.target.matches&lt;/a&gt; and we get a peer’s permission using &lt;code&gt;role.permissions&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;From our implementation a listener cannot perform any action — he/she can only listen. A speaker can mute/unmute only himself and a moderator can mute/unmute himself and other peers. And he can also change the role of other peers.&lt;/p&gt;

&lt;p&gt;Now our final app looks like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9mVVNu2y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s01nrkhcjkq2itn557on.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9mVVNu2y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s01nrkhcjkq2itn557on.gif" alt="Image description" width="880" height="455"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;100ms is both powerful and easy to use. With a few clicks from the dashboard, we set up a custom app that we easily integrated into our app using the 100ms SDK.&lt;/p&gt;

&lt;p&gt;Interestingly, we have barely scratched the surface of what 100ms can do. Features such as screen share, RTMP streaming and recording, chat, and more can all be implemented by using this awesome infrastructure. &lt;/p&gt;

&lt;p&gt;You can &lt;a href="https://discord.com/invite/kGdmszyzq2"&gt;join the discord channel&lt;/a&gt; to learn more about 100ms or &lt;a href="https://dashboard.100ms.live/register?referrer=https://www.google.com/&amp;amp;__hstc=19694910.329979dc69ac6211c451a608deb47ead.1629813148407.1638280799524.1638335711945.143&amp;amp;__hssc=19694910.4.1638335711945&amp;amp;__hsfp=263881901"&gt;give it a try&lt;/a&gt; in your next app for free. Lastly, if you are interested in the source code of the final application, you can get it &lt;a href="https://github.com/lawrenceagles/clubhouse-100ms-jSDK"&gt;here&lt;/a&gt;.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Finding Developers For Calinix</title>
      <author>Arghya Sarkar</author>
      <pubDate>Wed, 01 Dec 2021 05:45:58 +0000</pubDate>
      <link>https://dev.to/arghyasarkar/finding-developers-for-calinix-2l7</link>
      <guid>https://dev.to/arghyasarkar/finding-developers-for-calinix-2l7</guid>
      <description>&lt;p&gt;&lt;strong&gt;So if you don't know what CalinixOS is, it's an Arch based linux users focused on power users&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We currently need developers for Calinix&lt;/p&gt;

&lt;p&gt;GUI Developers. Calinix is FOSS so don't expect any payment from our side. Your contributions are what makes the open source projects great. Join our developer team and get mentioned in our Website and other social media handles. We currently need GUI developers who can make beautiful lightweight apps (hence no electron allowed)&lt;/p&gt;

&lt;p&gt;Try to avoid using python, cuz of its slowness, C++ and Java grow as better options. Even if you use python you need to give efficient design. &lt;/p&gt;

&lt;p&gt;For joining us, mail us at &lt;a href="mailto:contact@calinix.tech"&gt;contact@calinix.tech&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Or join our Discord Server: &lt;a href="https://tinyurl.com/calinixdisc"&gt;https://tinyurl.com/calinixdisc&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Arghya Sarkar,&lt;br&gt;
Founder, Lead Developer, CEO&lt;br&gt;
The Calinix Project&lt;/p&gt;

</description>
      <category>calinix</category>
      <category>linux</category>
      <category>developers</category>
    </item>
    <item>
      <title>Javascript snippets you need to know right now 🔥 - #4</title>
      <author>Abhiraj Bhowmick</author>
      <pubDate>Wed, 01 Dec 2021 05:42:40 +0000</pubDate>
      <link>https://dev.to/abhirajb/javascript-snippets-you-need-to-know-right-now-4-3a2l</link>
      <guid>https://dev.to/abhirajb/javascript-snippets-you-need-to-know-right-now-4-3a2l</guid>
      <description>&lt;p&gt;Hello my fellow readers!&lt;br&gt;
If you have really come this far in this series of posts, I would like to thank you for your support in reading all of the posts in this series. Thank you and do follow me on &lt;a href="https://twitter.com/rainboestrykr"&gt;Twitter&lt;/a&gt; for more tech content soon. Let's get started.&lt;/p&gt;



&lt;p&gt;1️⃣ Drop Elements&lt;br&gt;
This snippet returns a new array with n elements removed from the left.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;drop&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;drop&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt; &lt;span class="c1"&gt;// [2,3]&lt;/span&gt;
&lt;span class="nx"&gt;drop&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// [3]&lt;/span&gt;
&lt;span class="nx"&gt;drop&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="mi"&gt;42&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// []&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;2️⃣ dropRight&lt;br&gt;
This snippet returns a new array with n elements removed from the right.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;dropRight&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;dropRight&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt; &lt;span class="c1"&gt;// [1,2]&lt;/span&gt;
&lt;span class="nx"&gt;dropRight&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// [1]&lt;/span&gt;
&lt;span class="nx"&gt;dropRight&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="mi"&gt;42&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// []&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;3️⃣ dropRightWhile&lt;br&gt;
This snippet removes elements from the right side of an array until the passed function returns true.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;dropRightWhile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;func&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;dropRightWhile&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// [1, 2]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;4️⃣ dropWhile&lt;br&gt;
This snippet removes elements from an array until the passed function returns true.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;dropWhile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;func&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;dropWhile&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// [3,4]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;5️⃣ elementContains&lt;br&gt;
This snippet checks whether the parent element contains the child.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;elementContains&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;parent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;child&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;parent&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="nx"&gt;child&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;parent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;contains&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;child&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;elementContains&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;head&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;title&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// true&lt;/span&gt;
&lt;span class="nx"&gt;elementContains&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;body&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;body&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;6️⃣ Filter Duplicate Elements&lt;br&gt;
This snippet removes duplicate values in an array.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;filterNonUnique&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;indexOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lastIndexOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

&lt;span class="nx"&gt;filterNonUnique&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt; &lt;span class="c1"&gt;// [1, 3, 5]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;7️⃣ findKey&lt;br&gt;
This snippet returns the first key that satisfies a given function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;findKey&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;fn&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;fn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

&lt;span class="nx"&gt;findKey&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;barney&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;36&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;active&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;fred&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;active&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;pebbles&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;active&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="nx"&gt;o&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;o&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;active&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 'barney'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;8️⃣ findLast&lt;br&gt;
This snippet returns the last element for which a given function returns a truthy value.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;findLast&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;fn&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fn&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nx"&gt;findLast&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 3&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;9️⃣ insertAfter&lt;br&gt;
This snippet can be used to insert an HTML string after the end of a particular element.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;insertAfter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;htmlString&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;insertAdjacentHTML&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;afterend&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;htmlString&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;insertAfter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;myId&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;&amp;lt;p&amp;gt;after&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// &amp;lt;div id="myId"&amp;gt;...&amp;lt;/div&amp;gt; &amp;lt;p&amp;gt;after&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;🔟 insertBefore&lt;br&gt;
This snippet can be used to insert an HTML string before a particular element.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;insertBefore&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;htmlString&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;insertAdjacentHTML&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;beforebegin&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;htmlString&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;insertBefore&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;myId&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;&amp;lt;p&amp;gt;before&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// &amp;lt;p&amp;gt;before&amp;lt;/p&amp;gt; &amp;lt;div id="myId"&amp;gt;...&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#thank-you-for-reading"&gt;
  &lt;/a&gt;
  Thank you for reading!
&lt;/h2&gt;

&lt;p&gt;Subscribe to my newsletter to never miss out on Product Launches and my top posts. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.getrevue.co/profile/abhiraj"&gt;Abhiraj's Dev-letter&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Until next time,&lt;br&gt;
&lt;a href="https://abhiraj.glitch.me"&gt;Abhiraj&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>Dark theme using GetX</title>
      <author>DhiWise</author>
      <pubDate>Wed, 01 Dec 2021 05:28:35 +0000</pubDate>
      <link>https://dev.to/dhiwise/dark-theme-using-getx-5hn7</link>
      <guid>https://dev.to/dhiwise/dark-theme-using-getx-5hn7</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nvHwhdMP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2800/0%2Ah61ZNbotOOBem5sC.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nvHwhdMP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2800/0%2Ah61ZNbotOOBem5sC.png" alt="[Source: Mighty Techno](https://mightytechno.com/category/app-development/flutter-app-development/)" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Adding a Light and Dark theme for your app kind of becomes a mandatory thing in today’s app world. Because most people prefer a dark theme over a light theme because it is pretty comfortable for our eyes and reduces battery consumption.&lt;/p&gt;

&lt;p&gt;For implementing a dynamic theme we are going to use a well-known flutter framework named GetX.&lt;/p&gt;

&lt;p&gt;The simplest way of changing the light to dark is by changing the theme of the MaterialApp widget to light to dark. For that, we need two themes like dark and light.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-getx"&gt;
  &lt;/a&gt;
  What is GetX?
&lt;/h2&gt;

&lt;p&gt;GetX is an extra-light and powerful solution for Flutter. It combines high-performance state management, intelligent dependency injection, and route management quickly and practically&lt;/p&gt;

&lt;p&gt;Installing GetX and shared preference:&lt;/p&gt;

&lt;p&gt;Add these two dependencies in your project’s pubspec.yaml file.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;get: any
shared_preferences: any
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Shared Preferences will be used to save the theme, so whenever you return to the app you will get the theme that you selected previously.&lt;/p&gt;

&lt;p&gt;Let’s start implementing it…&lt;/p&gt;

&lt;p&gt;Define light and dark theme data (like the accent color, primary and secondary color, etc.)&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ThemeData _darkTheme = ThemeData(
    accentColor: Colors.red,
    brightness: Brightness.dark,
    primaryColor: Colors.amber,
    buttonTheme: ButtonThemeData(
      buttonColor: Colors.amber,
      disabledColor: Colors.grey,
    ));

ThemeData _lightTheme = ThemeData(
    accentColor: Colors.pink,
    brightness: Brightness.light,
    primaryColor: Colors.blue,
    buttonTheme: ButtonThemeData(
      buttonColor: Colors.blue,
      disabledColor: Colors.grey,
    ))
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Now add one variable to manage the theming of your app.&lt;/p&gt;

&lt;p&gt;We are adding a RxBool _isLightTheme = false.obs For that.&lt;/p&gt;

&lt;p&gt;Now add following theme property like this in your GetMaterialApp Widget:&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;theme: _lightTheme,
darkTheme: _darkTheme,
themeMode: ThemeMode.system,
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VOV4UJHQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2ACla-OAoFbqA44nCiJVS69g.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VOV4UJHQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2ACla-OAoFbqA44nCiJVS69g.gif" alt="[Source : Dribble](https://dribbble.com/shots/2407427-Light-Switch-animation)" width="800" height="600"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now we are going to use Switch to manage the dark and light themes. Here is an example of adding a switch widget on your screen.&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ObxValue(
  (data) =&amp;gt; Switch(
     value: _isLightTheme.value,
     onChanged: (val) {
       _isLightTheme.value = val;
       Get.changeThemeMode(
          _isLightTheme.value ? ThemeMode.light : ThemeMode.dark,
        );
        _saveThemeStatus();
      },
    ),
    false.obs,
 ),
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
  &lt;a href="#wanna-make-it-persistent"&gt;
  &lt;/a&gt;
  Wanna make it persistent?
&lt;/h2&gt;

&lt;p&gt;If Yes, Let’s Do it… The following steps will help you to keep the selected theme persistently.&lt;/p&gt;

&lt;p&gt;First of all, create an instance or shared preference and add two methods for getting the value of the theme and setting the value of the theme.&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Future&amp;lt;SharedPreferences&amp;gt; _prefs = SharedPreferences.getInstance();

  _saveThemeStatus() async {
    SharedPreferences pref = await _prefs;
    pref.setBool('theme', _isLightTheme.value);
  }

  _getThemeStatus() async {
    var _isLight = _prefs.then((SharedPreferences prefs) {
      return prefs.getBool('theme') != null ? prefs.getBool('theme') : true;
    }).obs;
    _isLightTheme.value = await _isLight.value;
    Get.changeThemeMode(_isLightTheme.value ? ThemeMode.light : ThemeMode.dark);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Now to initialize the selected theme in your app call the getThemeStatus() method at the start of your app by using the initState() method.&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;@override
  void initState() {
    super.initState();
    _getThemeStatus();
  }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Here is an complete main.dart file for the reference:&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion:
&lt;/h2&gt;

&lt;p&gt;Let’s Wrap It. There are many ways for implementing dynamic theming in flutter since GetX is a more efficient way to implement it. Hope you liked this content. If you found it useful then share it with your development team.&lt;/p&gt;

&lt;p&gt;Thanks for reading this article ❤&lt;/p&gt;

&lt;p&gt;If I got something wrong 🙈, Let me know in the comments. I would love to improve.&lt;/p&gt;

&lt;p&gt;Clap 👏 If this article helps you.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://pub.dev/packages/get"&gt;GetX Package&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://pub.dev/packages/shared_preferences"&gt;SharedPreference Package&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;By Keval Makadiya&lt;br&gt;
(Programmer Analyst | DhiWise)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
    </item>
    <item>
      <title>Just Another (Average) Full Stack Web Project</title>
      <author>Amir Azhar</author>
      <pubDate>Wed, 01 Dec 2021 05:26:41 +0000</pubDate>
      <link>https://dev.to/amehpls/just-another-average-full-stack-web-project-1d93</link>
      <guid>https://dev.to/amehpls/just-another-average-full-stack-web-project-1d93</guid>
      <description>&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table of Contents
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="#background"&gt;Background&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#beginnings"&gt;Beginnings&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tech-stack"&gt;Tech Stack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#initial-design"&gt;Initial Design&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#challenges"&gt;Challenges&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#grand-finale"&gt;Grand Finale&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#reflections"&gt;Reflections&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;




&lt;h2&gt;
  &lt;a href="#background"&gt;
  &lt;/a&gt;
  Background.
&lt;/h2&gt;

&lt;p&gt;Back in 2019 when I first started delving into web development out of my own interest, I never had the opportunity (or rather, I was massively procrastinating) to start my own full stack web project. My past personal projects were always frontend-focused, using technologies like React or Bootstrap. I always found frontend development to be more enjoyable and captivating, as it allowed me to visualize my work and explore my creative side when designing interfaces.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;But it was time to get out of my comfort zone.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I started to dabble in backend technologies - ranging from MongoDB to Express - during the summer of 2021. I used this as an opportunity to learn more technology frameworks and tools, mainly through YouTube tutorials from &lt;a href="https://www.youtube.com/channel/UC29ju8bIPH5as8OGnQzwJyA"&gt;Traversy Media&lt;/a&gt; and &lt;a href="https://www.youtube.com/channel/UCQrQo7jTpOh8V9EDn9Tgnxg"&gt;Full Stack Junkie&lt;/a&gt;. It definitely brought me enjoyment, finally able to explore a whole different side to web development.&lt;/p&gt;

&lt;p&gt;It was not until my final year in National University of Singapore (NUS), August 2021, that I had the opportunity to create my very own full stack web project.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#beginnings"&gt;
  &lt;/a&gt;
  Beginnings.
&lt;/h2&gt;

&lt;p&gt;As Computer Engineering undergraduates in NUS, we had to complete the infamous CG4002 Capstone module. Why did I say infamous? Well, because this was our first project where we had to utilise all the knowledge and skills that we picked up over the past 3 years of our degree program. Embedded systems? &lt;em&gt;Yup&lt;/em&gt;. Socket programming? &lt;em&gt;Of course&lt;/em&gt;. Machine learning? &lt;em&gt;You bet&lt;/em&gt;. Vivado? &lt;em&gt;Absolutely hate it, but yes&lt;/em&gt;. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;I think you get the point.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;It was a huge project with so many different components interacting with one another but luckily, we worked in groups, where each one of us played different roles, and became experts in our different fields. Of course, I picked the web development role. &lt;em&gt;Why would I be writing this post if there wasn't any web development.&lt;/em&gt; For just a bit of context, the problem statement of our project was:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A wearable system that detects and coaches dance moves of a dance group&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We were given total design freedom, albeit a few guidelines to follow. We could decide the direction of the project and how we wanted to execute it. For my web development component, also known as the dashboard, I had a few requirements to fulfil:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;How will the dashboard store, analyze, and display the data from&lt;br&gt;
the dancers in real-time? What analytics can you provide to coach the dancers? How can the dashboard handle many simultaneous  users? How will you assess user feedback of the dashboard?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Simply put, dancers would have wearables (with sensors) strapped to their wrists. The data will be used to predict what dance move a dancer is performing. I had to create a dashboard that would display the result of the machine learning model and also provide real-time data visualisation and analytics while the dancers performed their moves. For now, let's not worry about the details of the data pipeline between the other components and mine.  &lt;/p&gt;

&lt;p&gt;&lt;em&gt;It's finally time to delve into the web development part that you've all been waiting for.&lt;/em&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#tech-stack"&gt;
  &lt;/a&gt;
  Tech Stack.
&lt;/h2&gt;

&lt;p&gt;I opted for the MERN tech stack for my project. Let me briefly go through the different components in MERN and why I chose them. It has to be said that the entire web application, both the client and server, was run locally ob my own device.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;u&gt;M&lt;/u&gt;ongoDB&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;MongoDB is one of the most famous NoSQL database. Unlike traditional databases, MongoDB represents its information in a schemaless series of JSON-like documents, as opposed to the table and row format of relational systems such as PostgreSQL or MySQL. I picked it for 2 main reasons - (1) it allowed me to watch for real-time changes in the database using &lt;a href="https://docs.mongodb.com/manual/changeStreams/"&gt;Change Streams&lt;/a&gt; and (2) I had a complicated love-hate relationship with SQL.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;u&gt;E&lt;/u&gt;xpress&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Being a smart (and hard worker) I wanted to achieve my goals without having to write API functions or routes from scratch. Express comes to the rescue as a minimal web application framework that provides me with a myriad of HTTP utility methods and middleware, to ease the creation of APIs. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;u&gt;R&lt;/u&gt;eact&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Of course I picked React. What else would I have chosen? React is &lt;em&gt;obviously&lt;/em&gt; the most superior frontend tool. All jokes aside, I was most comfortable with React as compared to other technologies like Vue and Angular, due to my extensive exploration of the library back when I was developing my &lt;a href="//amir-azhar.com"&gt;personal web portfolio&lt;/a&gt;. (sorry for the shameless plug.)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;u&gt;N&lt;/u&gt;ode&lt;/strong&gt;&lt;br&gt;
Using Node was essentially  a no brainer for me. Node would allow me to run JavaScript outside of the browser, hence, I am able to use it server side as well.&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#initial-design"&gt;
  &lt;/a&gt;
  Initial Design.
&lt;/h2&gt;

&lt;p&gt;Having complete design freedom was definitely exciting, but it can be challenging because it may seem directionless at times. Thankfully, I tried to develop a proper workflow so that I could achieve an extraordinary end result.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;I first started to look for &lt;u&gt;inspiration&lt;/u&gt; on this amazing website, &lt;a href="//dribbble.com"&gt;Dribbble&lt;/a&gt;. They had TONS of user-submitted  designs and animations which I then used to generate my own ideas.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Next, I sent out a simple preliminary &lt;u&gt;survey&lt;/u&gt; to my group mates, friends and family. I would then use these (un)overwhelming responses to develop use cases, user stories, and feature lists, all centered around the users.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Last step was the exciting part, which involved the &lt;u&gt;designing&lt;/u&gt; of the UI. Thankfully, I had paid for the entire Adobe Creative Suite which included Adobe Xd, which allowed me to create simple mockups.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GhoOITp6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ih4dl1wbdh4xs7ucs88n.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GhoOITp6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ih4dl1wbdh4xs7ucs88n.png" alt="Adobe Xd Mockups" width="880" height="709"&gt;&lt;/a&gt; &lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#challenges"&gt;
  &lt;/a&gt;
  Challenges.
&lt;/h2&gt;

&lt;p&gt;Considering it was my first full stack web project, I was met with quite a few challenges, which was to be expected from a newbie like me. Although I had Teaching Assistants and Professors that could guide my process, I wanted to be as independent as possible. This meant spending countless of sleepless nights debugging, re-designing and scouring the depths of StackOverflow. Here are just a few challenges I faced during the development of the application and I how I tried to overcome them or simply just ignore them (ignorance is bliss).&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;u&gt;MongoDB&lt;/u&gt; provides a cloud-based solution, MongoDB Atlas, which handles all the complexity of deploying, managing, and handling of deployments on a cloud service provider of our choice. All I thought I had to do was to just set up the endpoints on my server that would connect to the cloud database and I would be good to go. &lt;em&gt;Boy was I wrong.&lt;/em&gt; Unfortunately, there were troubles connecting to the cloud service on the FPGA that we deployed to run ML predictions and send results to the database. The FPGA was sitting in a lab in campus (we had to connect to it remotely) throughout the course of the project and was connected to the campus network. The network apparently had a certain firewall which I never managed to get around. However, a workaround was to set up the MongoDB server locally on my laptop. Since I was staying on campus, my laptop and the FPGA would be on the same network!&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;I definitely had troubles displaying &lt;u&gt;real-time graphs&lt;/u&gt; on screen. Despite having MongoDB's Change Streams and &lt;a href="https://socket.io/"&gt;Socket.io&lt;/a&gt; to aid in my real-time streaming, I still faced troubles. The issue was that, my database was receiving data at frequency of 30Hz and my server would then vomit out the data at the same rate to the frontend, resulting in major latency issues. An easy fix I thought of was to sample the incoming data, reducing the frequency to only about 5Hz. On deciding the sampling rate, it was about finding the sweet spot between having minimal latency, and still meeting the requirement of 'real-time'.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The biggest obstacle I faced was the &lt;u&gt;lack of time&lt;/u&gt;. It was nearing the final evaluation but I had submissions for other modules to focus on too. My dashboard was mostly done, except for the sign up, login and logout functionalities. It was a shame as I spent quite a considerable amount of time learning about authentication using &lt;a href="https://jwt.io/introduction"&gt;JSON Web Tokens (JWT)&lt;/a&gt;, and &lt;a href="https://redux.js.org/"&gt;Redux&lt;/a&gt; to manage and keep track of the state of the application. Since this was originally a 'Nice to Have', I decided to forgo the functionality and simplify the authentication process with just simple conditional checks and password encryption with &lt;a href="https://www.npmjs.com/package/bcrypt"&gt;bcrypt&lt;/a&gt;. I was definitely not proud of it, but considering it was not even a project requirement, and just something I wanted to have fun with, I was not too bummed for long.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;h2&gt;
  &lt;a href="#grand-finale"&gt;
  &lt;/a&gt;
  Grand Finale.
&lt;/h2&gt;

&lt;p&gt;After almost 4 months of painstaking hard work, it was finally done. Our final evaluation went very smoothly, with the dashboard performing as it should. Since I had to show only a small part of my website during the evaluation, I thought maybe I could shamelessly show off my masterpiece here.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Enjoy&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/aE_SYE_DMt4"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Here are just some of the tools and npm packages I used in making some of the components of my dashboard:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.blobmaker.app/"&gt;Blobmaker&lt;/a&gt; - A free web design tool to help quickly create random, unique, and organic-looking SVG shapes.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://nivo.rocks/components"&gt;Nivo&lt;/a&gt; - A library that provides a myriad of highly customisable data visualisation tools.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.material-ui-datatables.com/"&gt;Material UI DataTables&lt;/a&gt; - A simple data table component that comes with features like filtering, view/hide columns, search and many more.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://react-bootstrap.github.io/"&gt;React Bootstrap&lt;/a&gt; - A library that provides many easy-to-use and highly customisable components, essential in any modern web application.&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#reflections"&gt;
  &lt;/a&gt;
  Reflections.
&lt;/h2&gt;

&lt;p&gt;Was I happy with my work? &lt;em&gt;Absolutely&lt;/em&gt;. Could I have done more? &lt;em&gt;Maybe?&lt;/em&gt; When all is said and done, I believed that it was a great experience finally doing a deep dive on the different aspects of full stack web development. From exploring my misconceptions in React to understanding how HTTP requests work, I definitely learned a lot throughout this journey. This project showed me that backend development was definitely not my cup of tea and I still had a very soft spot for frontend development. I would like to give a shoutout to my lovely groupmates Andrew, Billy, Jess, Jiayi and Alex for being such great teammates and for making my CG4002 journey memorable. To others, this project may seem trivial and simple, but it was definitely a stepping stone for me in becoming a proficient web developer.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Here's to many more projects!&lt;/em&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>react</category>
    </item>
    <item>
      <title>Metaprogramming and Class Inheritance in Ruby</title>
      <author>MikeKetterling</author>
      <pubDate>Wed, 01 Dec 2021 05:22:35 +0000</pubDate>
      <link>https://dev.to/mikeketterling/metaprogramming-and-class-inheritance-in-ruby-1ek9</link>
      <guid>https://dev.to/mikeketterling/metaprogramming-and-class-inheritance-in-ruby-1ek9</guid>
      <description>&lt;p&gt;If your new to the developer world and your coming across Metaprogramming for ruby, chances are you are feeling a bit intimidated by just the sound of it, or maybe excited about the potential power such a concept might have?  For me I know it was a little of both, but id have to say mostly I thought about potential use cases for such a concept, and I didn’t even know that much about it yet!&lt;/p&gt;

&lt;p&gt;For myself I have always though I embodies that idea that developers are lazy and do not want to code more than they have to, infact I could say I live my life around this sort of philosophy.  Efficiency is everything to me, I want to get as much doen in as little as possible so I can spend more time learning something new, getting better at something, or just relaxing.  This is where Metaprogramming really comes into play for me.&lt;/p&gt;

&lt;p&gt;I know there are concepts out there with other languages that are either exactly the same as Ruby’s Metaprogramming or very similar to it, but I think this Is just the first time for me where I have the dedicated time to really dive into the concept and the base knowledge to explain it and get through some examples in the hope of helping someone else with the concept and the utilization.&lt;/p&gt;

&lt;p&gt;In the most basic explanation, Metaprogramming is code that has been developed to write additional code, treat code as their data, and be read, generate, analyze or transform other programs or itself while its running.  With this definition alone I hope I’ve peeked some interest, I know this one sentence got me.  If we think about the usability of that concept we could potentially cut down on dozens if not hundreds of lines of code, making our applications much smoother, easy to read and follow great DRY principles.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-does-ruby-call-methods"&gt;
  &lt;/a&gt;
  How does Ruby call Methods?
&lt;/h2&gt;

&lt;p&gt;Before we can really get into the thick of Metaprogramming we have to lay down some basics of how methods work in Ruby. The below example is a simple method inside a class called Car.  When we call the method #start from our Car class we get an output of “VROOM”, but more importantly is how we get this output.  When we call the start method Ruby first will look for the parent of the station_wagon object, but because this station_wagon object is an instance of the Car class, and has the #start method available it will be called on station_wagon.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;class Car
    def start
        "VROOM"
    end
end

station_wagon = Car.new
station_wagon.start  =&amp;gt; "VROOM"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can even take a look at a more complicated block of code that has some class inheritance&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;class Vehicle
    def start
        "VROOM"
    end

    def speed_up
        "SHIFT
    end
end

class Sportscar &amp;lt; Vehicle
    def how_many_tickets
        "Too many"
    end
end

corvette = Sportscar.new
corvette.how_many_tickets  =&amp;gt; "Too many"
corvette.start =&amp;gt; "VROOM"
corvette.thiscarisbroken =&amp;gt; NoMethodError: undefined method...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Ruby is doing the same operations as before, Ruby checks the Sportscar class for the #how_many_tickets method and because it exists and finds it, the method will be called.  The process changes a bit when we call the corvette.start method.  It first asks the Sportscar class if it can call the method, but Sportscar does not have that method available. And so because of inheritance it looks up the chain to the Vehicle class.  It located the method in the parent class and calls it.  When we call the last line: “corvette.thiscarisbroken” no method is located so we are returned an error.&lt;/p&gt;

&lt;p&gt;This process can all be boiled down to something like this; Ask the objects parent class if it has a particular method and call on it, if no method is found it will continue to look up the inheritance chain for the method that’s stated, and if it can’t find the method, the method does not exist and an error will be returned.&lt;/p&gt;

&lt;p&gt;Since we’ve seen a basic example of class inheritance and in basic metaprogramming, we can start to take a deeper look into inheritance specifically with the Singleton class.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#singleton-class"&gt;
  &lt;/a&gt;
  Singleton Class
&lt;/h2&gt;

&lt;p&gt;The Singleton class was designed specifically for single object addition, alteration and deletion it does this by having only one instance of some class. Lets look at the code below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;greeting = "I like to drive fast!"

class &amp;lt;&amp;lt; greeting
    def greet
        "lets go, " + self
    end
end

greeting.greet =&amp;gt; "lets go, I like to drive fast!"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Breaking this down, we created a variable called “greeting”.  Then we call the greeting on the class itself since it is its own instance and by chaining the greet method to it we can return the entire phrase.  The notation on the 3rd line is known as the class &amp;lt;&amp;lt; self notation.&lt;/p&gt;

&lt;p&gt;With the Singleton class, Ruby is adding another class into our inheritance chain.  This class is given the methods and changes instead, making it the parent of the object we are working on.  So essentially we are adding one extra layer of inheritance and locating method calls.  So instead of first asking the objects parent class if the method exists first, we will ask the object if its singleton class can respond to the method if found.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;These are just a couple examples of metaprogramming in specific with inheritance and singleton methods.  There is a whole lot more to be uncovered with metaprogramming with Ruby though.  The have books just on this topic, so if your still interested go out and find more information on it!&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>ruby</category>
      <category>programming</category>
    </item>
    <item>
      <title>How I started learning to code: the resources I’ve used in the first three months</title>
      <author>Sagar Barapatre</author>
      <pubDate>Wed, 01 Dec 2021 05:16:57 +0000</pubDate>
      <link>https://dev.to/sagarbarapatre/how-i-started-learning-to-code-the-resources-ive-used-in-the-first-three-months-2gmf</link>
      <guid>https://dev.to/sagarbarapatre/how-i-started-learning-to-code-the-resources-ive-used-in-the-first-three-months-2gmf</guid>
      <description>&lt;p&gt;Want to learn how to code? This article guides you through the jungle of technologies and resources, helping you go from no knowledge to building fast, interactive, modern websites.&lt;/p&gt;

&lt;p&gt;I have spent the last three months learning to code, and though challenging at times, it has been a highly rewarding experience.&lt;/p&gt;

&lt;p&gt;One of the trickiest challenges was choosing &lt;em&gt;what&lt;/em&gt; to learn and &lt;em&gt;where&lt;/em&gt; to learn it. There are so many languages, frameworks, and libraries - and lots of conflicting advice.&lt;/p&gt;

&lt;p&gt;Plus, some learning resources were much better than others. If I had known what resources to focus on, I might have progressed even faster.&lt;/p&gt;

&lt;p&gt;In that spirit, I thought I’d share what has worked for me. If it feels like a lot, I was lucky enough that I could spend several hours a day learning this material. How fast you do it isn’t a sign of your potential as a developer, so don’t worry if it takes longer to get through the material. But, if you can dedicate the time, it &lt;em&gt;can&lt;/em&gt; be done in three months.&lt;/p&gt;

&lt;p&gt;At the bottom of the article, there’s a full list of my recommended resources.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#part-1-html-css-and-javascript"&gt;
  &lt;/a&gt;
  Part 1: HTML, CSS, and JavaScript
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;These are the three core languages of all web applications, and it’s (almost) impossible to build anything on the Internet without using them.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4&gt;
  &lt;a href="#html"&gt;
  &lt;/a&gt;
  HTML
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mV0zwm5j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dhtrz4cvnta3wx5yfa8u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mV0zwm5j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dhtrz4cvnta3wx5yfa8u.png" alt="Imagdsnckjdsnc" width="192" height="259"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you’ve never done any coding before, then HTML is a great place to start. It is the core building block of the Internet, and unlike most other languages, it gives learners immediate visual feedback on the code they are writing.&lt;/p&gt;

&lt;p&gt;I had picked up bits and pieces of HTML before I began taking coding more seriously, but if I had to choose one resource to learn it today, I would go with &lt;a href="https://www.freecodecamp.org/"&gt;freeCodeCamp&lt;/a&gt;. It’s well-paced, quick and simple - and it’s free!&lt;/p&gt;

&lt;p&gt;If you’re looking for an environment to practice what you’ve learnt, I recommend &lt;a href="https://codepen.io/"&gt;CodePen&lt;/a&gt;, which is a sandbox for the core languages of the web (HTML, CSS, and JavaScript).&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#css"&gt;
  &lt;/a&gt;
  CSS
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yYfPkmMP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jbou1hd1qdq10gfwpqvf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yYfPkmMP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jbou1hd1qdq10gfwpqvf.png" alt="Imagsdkldslck" width="192" height="259"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;CSS is the natural companion to HTML. On the surface, it’s very simple, although there are certain concepts - especially related to layout and positioning - that can take some time to get your head around.&lt;/p&gt;

&lt;p&gt;Once again, &lt;a href="https://www.freecodecamp.org/"&gt;freeCodeCamp&lt;/a&gt; is a good choice for CSS. I didn’t spend much time learning CSS via courses, as the syntax is pretty simple, so most of my learning came from trying things out in my own projects.&lt;/p&gt;

&lt;p&gt;The most difficult part of CSS is understanding layout. Most of my layout questions had been asked by users on StackOverflow, so a quick Google search solved most of my problems.&lt;/p&gt;

&lt;p&gt;CSS3 has two powerful layout tools, and it can help to dive deeper into these: I often go back to the &lt;a href="https://css-tricks.com/snippets/css/a-guide-to-flexbox/"&gt;Flexbox Guide&lt;/a&gt; and &lt;a href="https://css-tricks.com/snippets/css/complete-guide-grid/"&gt;Grid Guide&lt;/a&gt;, by CSS Tricks, and I followed roughly half of Wes Bos’s free &lt;a href="https://cssgrid.io/"&gt;CSS Grid Tutorial&lt;/a&gt; before I felt ready to move on.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#javascript"&gt;
  &lt;/a&gt;
  JavaScript
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--X3KCusQ8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kkgbbfo4356jcva1vrdw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X3KCusQ8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kkgbbfo4356jcva1vrdw.png" alt="Imagksmaxlkmalsk" width="192" height="259"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;HTML and CSS aren’t fully fledged programming languages, and so you won’t get a full sense of what programming really is until you start learning one. JavaScript is the programming language of the web.&lt;/p&gt;

&lt;p&gt;That makes JavaScript an extremely safe choice to learn. Plus, it’s increasingly being used for other purposes, through technologies like Node.js.&lt;/p&gt;

&lt;p&gt;For beginners, JavaScript is not as approachable as HTML or CSS, and I recommend you jump between a variety of different sources to reinforce the core concepts.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Beginners&lt;/strong&gt;: As with HTML and CSS, I highly recommend freeCodeCamp’s &lt;a href="https://www.freecodecamp.org/"&gt;JavaScript course&lt;/a&gt;. I several other courses, the most useful of which were &lt;a href="https://codecademy.com/"&gt;Codecademy&lt;/a&gt; and a free introductory course from &lt;a href="https://flatironschool.com/free-courses/learn-javascript/"&gt;Flatiron School&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Intermediate&lt;/strong&gt;: Once I had a better understanding of JavaScript, I started completing problems on &lt;a href="https://codewars.com"&gt;https://codewars.com/&lt;/a&gt;. CodeWars is fantastic, but its problem difficulty grading is hit-and-miss, some of the problems supposedly for beginners can seem very demanding! I suggest starting with several problems at the lowest tier. If you get stuck, searching for JavaScript methods on the MDN website can be very useful.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#part-2-other-musthave-parts-of-any-developers-toolkit"&gt;
  &lt;/a&gt;
  Part 2: Other must-have parts of any developer’s toolkit
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--duzW0xdl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hlz8dggtv5tr6ifj40s7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--duzW0xdl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hlz8dggtv5tr6ifj40s7.png" alt="Imagdsncknksd" width="404" height="206"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#git-and-github"&gt;
  &lt;/a&gt;
  Git and GitHub
&lt;/h4&gt;

&lt;p&gt;Git is what’s called a “version-control system” and GitHub is the most popular, cloud-based Git service.&lt;/p&gt;

&lt;p&gt;In simpler terms, Git allows you to backup your files, keep track of changes, share your progress with other developers, and work on collaborative projects.&lt;/p&gt;

&lt;p&gt;When you’re just learning, and have no need to use Git, it can feel like a chore to learn. But it’s a worthwhile one: not only do the vast majority of professional developers rely on GitHub (or similar services), but having an active GitHub profile can help you secure work.&lt;/p&gt;

&lt;p&gt;The sooner you start committing your work to GitHub, the more evidence you’ll have of your experience as a developer. I used &lt;a href="https://www.codecademy.com/learn/learn-git"&gt;Codecademy’s Git Tutorial&lt;/a&gt; to help me get started.&lt;/p&gt;

&lt;p&gt;The Command Line&lt;/p&gt;

&lt;p&gt;The best way to use Git is via the “terminal” or “command line”, and this is also essential for modern web developers, allowing you to easily add 3rd party packages to your websites via &lt;a href="https://www.npmjs.com/"&gt;NPM&lt;/a&gt; (Node Package Manager) or &lt;a href="https://yarnpkg.com/en/"&gt;Yarn&lt;/a&gt;. As above, I took my first steps here using &lt;a href="https://www.codecademy.com/courses/learn-the-command-line/"&gt;Codecademy&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A note for Windows users: I strongly recommend you download &lt;a href="https://gitforwindows.org/"&gt;https://gitforwindows.org/&lt;/a&gt; and use it for Git and NPM/Yarn. It allows you to use commands familiar to Linux and Mac users and - as far as I can tell - it is an all-round improvement on the Command Prompt that’s built-in.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#part-3-building-your-skill-set"&gt;
  &lt;/a&gt;
  Part 3: Building your skill set
&lt;/h2&gt;

&lt;p&gt;Once you have working knowledge of HTML, CSS and JavaScript, the choice of technologies which you could learn can feel overwhelming.&lt;/p&gt;

&lt;p&gt;For web developers, here’s what I’d recommend.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#sass"&gt;
  &lt;/a&gt;
  Sass
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--L2uFHZSd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gwdzobam8kiymfw0c52j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L2uFHZSd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gwdzobam8kiymfw0c52j.png" alt="Imagsnxkjnasknxas" width="318" height="262"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Sass is a CSS pre-processor. It takes basic CSS, and adds several new functionalities that make it better, easier to write, and easier to maintain. It’s also very easy to learn. Simply follow the &lt;a href="https://sass-lang.com/guide"&gt;official guide&lt;/a&gt;. Once I began using Sass, it was very difficult to go back to regular CSS!&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#bootstrap"&gt;
  &lt;/a&gt;
  Bootstrap
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ou--DkFr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ogbmamk8cweriz3934m6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ou--DkFr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ogbmamk8cweriz3934m6.png" alt="Imagedsjcnkjdncsd" width="318" height="262"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Bootstrap is a component library, developed by Twitter. It allows developers to build prototypes very quickly. Instead of custom coding that slider, or navbar, or accordion, Bootstrap can help you deploy one in seconds.&lt;/p&gt;

&lt;p&gt;Like with Sass, it doesn’t take long to get comfortable with &lt;a href="https://getbootstrap.com/docs/4.3/getting-started/introduction/"&gt;Bootstrap’s basics&lt;/a&gt;. I recommend learning Bootstrap because it can help you set up a project very quickly. This is particularly useful if you’re making a test project to learn another technology, and don’t want to spend time on your site’s appearance.&lt;/p&gt;

&lt;p&gt;Having said that, as I learner I wouldn’t rely too heavily on Bootstrap. You’ll learn a lot by building common components (navigation bars, light boxes, sliders, etc) by yourself!&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#jquery"&gt;
  &lt;/a&gt;
  jQuery
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8e4GAZHO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3stn15hrfpz0eakut3g1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8e4GAZHO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3stn15hrfpz0eakut3g1.png" alt="Imagesdkmlsdmcd" width="263" height="262"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2021 may be a turning point for jQuery, as increasing numbers of developers turn to frameworks like React.js and Vue.js, where jQuery’s style of manipulating of the DOM is seen as bad practice.&lt;/p&gt;

&lt;p&gt;However, I would still recommend learning jQuery. Not only is there a huge amount of jQuery still in use on the Internet (and you’re almost guaranteed to encounter it as a professional web developer), but I found that learning jQuery really helped me develop my knowledge of JavaScript. For me, the best place to learn jQuery was its &lt;a href="https://jquery.com/"&gt;official site&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Nowadays, when I am trying to achieve an effect in vanilla JavaScript, which I know exists in jQuery, I look at jQuery’s &lt;a href="https://code.jquery.com/jquery-3.3.1.js"&gt;source code&lt;/a&gt;. jQuery’s code is well-written, fast, and highly-compatible, and it’s helped me understand a lot about what vanilla JavaScript can do. I certainly benefited from learning jQuery before picking up a more modern technology like React.&lt;/p&gt;

&lt;p&gt;Other libraries, such as Lodash and Underscore, make use of similar principles to jQuery. Often, I prefer to try and understand the source code of these technologies and write in Vanilla JavaScript. That said, there’s no need to reinvent the wheel: if you find yourself with multiple places where Lodash (for example) would be useful, then go for it!&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#react"&gt;
  &lt;/a&gt;
  React
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aV2JL-aC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jdub65m8z0oqwxxuhcf1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aV2JL-aC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jdub65m8z0oqwxxuhcf1.png" alt="Imagednskncskdl" width="263" height="262"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There are several modern JavaScript libraries out there, including Ember, React, Vue, and Angular. There’s no single right choice here, but after doing some research I chose to focus on React.&lt;/p&gt;

&lt;p&gt;Of all these libraries and frameworks, React appears to be the most popular and fastest growing. It was developed by Facebook, and its approach to DOM manipulation also gives it an advantage over Angular.&lt;/p&gt;

&lt;p&gt;I really like React. It was harder to learn than jQuery, and it takes longer to write. But the benefits become apparent even in small personal projects. React’s modular nature, use of state, and speed make it a pleasure to work with.&lt;/p&gt;

&lt;p&gt;The only programming course I have paid for is &lt;a href="https://reactforbeginners.com/"&gt;Wes Bos’s React for Beginners&lt;/a&gt;. This is because programming in React can feel quite different to programming with “traditional” JavaScript: it exploits many features specific to ES6 JavaScript, and there’s a good chance you won’t have encountered JavaScript’s class system before using React.&lt;/p&gt;

&lt;p&gt;The best free resource to learn React was &lt;a href="https://reactjs.org/tutorial/tutorial.html"&gt;its own tutorial&lt;/a&gt;.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#wordpress-and-php"&gt;
  &lt;/a&gt;
  WordPress and PHP
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--w4oc2TqB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l8nh0pycx8sscyxwmi2j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w4oc2TqB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l8nh0pycx8sscyxwmi2j.png" alt="Imagesdcsdklcn" width="263" height="188"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you have aspirations to work as a web developer, either freelance or as part of a larger company, you’ll likely encounter WordPress.&lt;/p&gt;

&lt;p&gt;Developers may have mixed feelings about WordPress and PHP, the language that underlies it, but it is the go-to solution for many businesses and powers almost a quarter of the web.&lt;/p&gt;

&lt;p&gt;The reason for its continued success is familiarity. Many people have experience using it as a CMS (content management system) and - with the right optimizations - it can be as fast and versatile as many more modern CMS solutions.&lt;/p&gt;

&lt;p&gt;I completed PHP problems on &lt;a href="https://codewars.com/"&gt;CodeWars&lt;/a&gt; for a week or so, just to get familiar with the basic syntax and methods, and that was enough for me to dive into WordPress. In particular, I recommend this &lt;a href="https://www.taniarascia.com/developing-a-wordpress-theme-from-scratch/"&gt;fantastic tutorial for beginners to WordPress&lt;/a&gt;, which explains how to get started with custom themes. I would also read up on the &lt;a href="https://underscores.me/"&gt;Underscores Starter Theme&lt;/a&gt;. When you have problems, the place to go is &lt;a href="https://developer.wordpress.org/"&gt;https://developer.wordpress.org/&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#part-4-whats-next"&gt;
  &lt;/a&gt;
  Part 4: What’s next?
&lt;/h2&gt;

&lt;p&gt;Minus one or two technologies, this is everything I learnt to get to a comfortable level in my first three months.&lt;/p&gt;

&lt;p&gt;I was planning on going deeper into PHP. But, then I decided that, for now, I am happier in JavaScript land! There are so many options for next steps, depending on what you’re interested in.&lt;/p&gt;

&lt;p&gt;My list of things to learn includes Node, Next, Express, Redux, Gatsby.js, and GraphQL. That’s a lot of technologies, and I’m not (yet!) equipped to tell you about any of them. Better get back to it!&lt;/p&gt;

&lt;p&gt;TL;DR: Summary of Resources&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;HTML&lt;/strong&gt;&lt;br&gt;
1.&lt;a href="https://www.freecodecamp.org/"&gt;https://www.freecodecamp.org/&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://codepen.io/"&gt;https://codepen.io/&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;CSS&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;As above, plus:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://css-tricks.com/"&gt;CSS Tricks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cssgrid.io/"&gt;Wes Bos’s free CSS Grid Tutorial&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;As above, plus:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://www.codecademy.com/learn/introduction-to-javascript"&gt;Codecademy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://flatironschool.com/free-courses/learn-javascript/"&gt;Flatiron School’s free Intro to JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://codewars.com/"&gt;CodeWars&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/bm/docs/Web/JavaScript"&gt;MDN&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Git and GitHub&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://www.codecademy.com/learn/learn-git"&gt;Codecademy&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Command Line&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://www.codecademy.com/learn/learn-the-command-line"&gt;Codeacademy&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Sass&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://sass-lang.com/guide"&gt;Official documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Bootstrap&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://getbootstrap.com/docs/4.3/getting-started/introduction/"&gt;Official documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;jQuery&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://api.jquery.com/"&gt;Official documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;React&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://reactforbeginners.com/"&gt;Wes Bos’s React for Beginners&lt;/a&gt; (the only paid course I’m recommending)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://reactjs.org/tutorial/tutorial.html"&gt;Official tutorial&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;WordPress and PHP&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="http://codewars.com/"&gt;CodeWars&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.taniarascia.com/developing-a-wordpress-theme-from-scratch/"&gt;Tania Rascia’s article on creating a custom WordPress theme&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.wordpress.org/"&gt;The WordPress developers site&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://underscores.me/"&gt;The Underscores Starter Theme&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>productivity</category>
      <category>discuss</category>
    </item>
    <item>
      <title>How to create a Twitter bot in python</title>
      <author>Praveen Kumar</author>
      <pubDate>Wed, 01 Dec 2021 05:07:58 +0000</pubDate>
      <link>https://dev.to/abipravi/how-to-create-a-twitter-bot-in-python-1024</link>
      <guid>https://dev.to/abipravi/how-to-create-a-twitter-bot-in-python-1024</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wsDHLa0j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6845g5yr2sf8pz0oy1oo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wsDHLa0j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6845g5yr2sf8pz0oy1oo.png" alt="Image description" width="800" height="533"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this article, we will learn how to create a Twitter bot using a module called &lt;code&gt;simpletwitter&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7HecuIoB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/td0gl0jr8bm62gstsel4.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7HecuIoB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/td0gl0jr8bm62gstsel4.gif" alt="Image description" width="498" height="192"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Install the simpletwitter module&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;code&gt;pip install simpletwitter&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--a8sbyN-X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3y9n6hywuniosof7t2ln.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a8sbyN-X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3y9n6hywuniosof7t2ln.gif" alt="Image description" width="200" height="270"&gt;&lt;/a&gt;  &lt;/p&gt;

&lt;p&gt;Yes we have successfully installed the module&lt;/p&gt;

&lt;p&gt;Now get into the code,&lt;/p&gt;

&lt;p&gt;&lt;code&gt;from simpletwitter import SimpleTwitter&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Create an instance for the class SimpleTwitter&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;email = "Twitter_User_Email_Address"

password = "Twitter_Password"

user_name = "Abipravi1" 
#here i have entered my twitter username but you need to enter your's in this case

no_of_tweets = 10 
#this value is necessary how many no of tweets you want to perform operation

bot = SimpleTwitter(email, password, no_of_tweets, user_name)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's all we set up all the necessary requirements, Now let us go and perform the Twitter operations…..&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Sy7NhRvD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/esp6nal4gh6yyxtdajpv.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Sy7NhRvD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/esp6nal4gh6yyxtdajpv.gif" alt="Image description" width="498" height="298"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;hashtags = ['#abipravi', #pythonmodule', '#twitter_bot']
tweetmessage = "My first tweet by simple twitter"
bot.login() 
# to login into the account
bot.like_tweet(hashtags) 
# like the tweet
bot.unlike_liked_tweets(5) 
# unlike the liked tweet
bot.tweet(tweetmessage) 
# put some tweet
bot.only_like_top_tweet(hashtags)
# this will like only the trending tweet
bot.retweet(hashtags) 
# retweet some tweets based on particular hashtags
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally We have have it......&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FSXUDKAK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/esthup6mgmrt25erkya7.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FSXUDKAK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/esthup6mgmrt25erkya7.gif" alt="Image description" width="498" height="280"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We have made our own Twitter bot&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Full Code:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;from simpletwitter import SimpleTwitter

email = "Twitter_User_Email_Address"

password = "Twitter_Password"

user_name = "Abipravi1" 
#here i have entered my twitter username but you need to enter your's in this case

no_of_tweets = 10 
#this value is necessary how many no of tweets you want to perform operation

bot = SimpleTwitter(email, password, no_of_tweets, user_name)
#Creating Instance

hashtags = ['#abipravi', #pythonmodule', '#twitter_bot']

tweetmessage = "My first tweet by simple twitter"

bot.login() 
# to login into the account

bot.like_tweet(hashtags) 
# like the tweet

bot.unlike_liked_tweets(5) 
# unlike the liked tweet

bot.tweet(tweetmessage) 
# put some tweet

bot.only_like_top_tweet(hashtags)
# this will like only the trending tweet

bot.retweet(hashtags) 
# retweet some tweets based on particular hashtags
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;**_Thanks for reading&lt;/p&gt;

&lt;p&gt;If You like this post make sure you follow us on_**&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.instagram.com/praveenkumar_abipravi/"&gt;Instagram&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/ABIPRAVI1"&gt;Twitter&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.linkedin.com/in/praveen-kumar-9b09441b7/"&gt;Linked In&lt;br&gt;
&lt;/a&gt;&lt;a href="https://medium.com/r/?url=https%3A%2F%2Fabipraviii.blogspot.com%2F"&gt;BlogPost&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Working with Amazon S3 presigned URLs in Spring Boot</title>
      <author>Afrar Malakooth</author>
      <pubDate>Wed, 01 Dec 2021 05:05:03 +0000</pubDate>
      <link>https://dev.to/aws-builders/working-with-amazon-s3-presigned-urls-in-spring-boot-383n</link>
      <guid>https://dev.to/aws-builders/working-with-amazon-s3-presigned-urls-in-spring-boot-383n</guid>
      <description>&lt;p&gt;Hello Everyone! Welcome to another DEV Community post. This is going to be a continuation of my previous DEV Community post &lt;a href="https://dev.to/aws-builders/integrating-your-spring-boot-project-with-amazon-s3-3e3"&gt;Integrating your Spring Boot project with Amazon S3&lt;/a&gt;. If you have directly visited here, you might have to go back and copy some code snippets from previous story for a fully working solution. If you’re ready, let’s get started without waiting further.&lt;/p&gt;

&lt;p&gt;As per the implementation in the last DEV Community post whenever a user needs to upload a file, the file should be first uploaded to the server and from the server it will be uploaded to Amazon S3. Similarly when a user requests for a file it will be downloaded to the server first and then will be sent to the user. Whoever reads the above sentence will clearly understand that the implementation uploads a file twice and downloads it twice. Hence this will be a wastage of server resources and will double time taken to process a file. Luckily presigned URLs are there to save us!&lt;/p&gt;




&lt;p&gt;With presigned URLs first the user need to send the metadata about the file to server in order to create a key and to generate a presigned URL. Server will send the generated presigned URL back to user and user has to upload the file directly to Amazon S3 using the presigned URL along with request parameters sent by the server. Similarly when retrieving a file user has to send the filename (aka key) to the server and server will generate a presigned URL to download the requested resource. Once the presigned URL is returned, user has to make a request again to download the file directly from Amazon S3.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WmkBpdAj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jh9h03npvqct7fi1yfp2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WmkBpdAj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jh9h03npvqct7fi1yfp2.png" alt="Photo by https://www.webiny.com/blog/upload-files-to-aws-s3-using-pre-signed-post-data-and-a-lambda-function-7a9fb06d56c1" width="880" height="514"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;First open the FileService.java class from the previous story. We’ll be removing convertMultiPartFileToFile method which is no more needed and making changes to findByName, save methods. Make the changes by referring to below Gist.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Once you’re done making changes to the service class, open the FileController.java class to make some additional changes. Refer the code snippet shared below and make changes accordingly.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Once you’re done with the changes we have simple Spring Boot application which will interact with Amazon S3 to generate presigned URLs for file upload and download. Please note that above code is not production ready and should undergo several changes before being deployed.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tA42UV-E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/728mmfaoj3sku2azh9qc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tA42UV-E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/728mmfaoj3sku2azh9qc.png" alt="Requesting a presigned URL to upload a file&amp;lt;br&amp;gt;
" width="700" height="151"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As shown above make a request to server via Postman or any other client with requested metadata to generated a presigned URL to upload a file. Once the server returns a presigned URL, make another call via the client to upload the file as below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XuAB8Wse--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a3fex3iaoeefewyvg49e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XuAB8Wse--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a3fex3iaoeefewyvg49e.png" alt="Uploading a file to Amazon S3 via presigned URL provided" width="700" height="151"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We’re all set now, Happy Coding! Below is a DEV Community video I have recently published and if you’re interested check out my previous Medium story on &lt;a href="https://medium.com/@mmafrar/configuring-multiple-data-sources-with-spring-boot-2-and-spring-data-jpa-8e236844e80f"&gt;Configuring multiple data sources with Spring Boot 2 and Spring Data JPA&lt;/a&gt;.&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/mmafrar/how-to-add-an-icon-for-an-ios-app-312c" class="video-image"&gt;
    &lt;span class="video-timestamp"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pl4ssD2Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/video-camera-9a2eda0979fd9ce3933037481ee8828557b6c7f5533e1de458b8c2648a60b097.svg" alt="video camera" width="491" height="491"&gt;
      04:16&lt;/span&gt;
  &lt;/a&gt;
  &lt;a href="/mmafrar" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IwYlE0DT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--we1XYzIG--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/697273/7e54c133-88f3-4ab4-945e-20b67a98f5d5.jpeg" alt="mmafrar"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/mmafrar/how-to-add-an-icon-for-an-ios-app-312c" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;How to add an icon for an iOS app&lt;/h2&gt;
      &lt;h3&gt;Afrar Malakooth ・ Nov 18 ・ 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#apple&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#swift&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#reactnative&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#ios&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;Cover Image: Photo by &lt;a href="https://unsplash.com/@qwitka"&gt;Maksym Kaharlytskyi&lt;/a&gt; on &lt;a href="https://unsplash.com"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

</description>
      <category>java</category>
      <category>spring</category>
      <category>aws</category>
      <category>s3</category>
    </item>
  </channel>
</rss>
