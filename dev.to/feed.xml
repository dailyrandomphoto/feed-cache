<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Learning Python- Intermediate course: Day 27, Entry keypress event</title>
      <author>Aatmaj</author>
      <pubDate>Thu, 16 Sep 2021 08:33:07 +0000</pubDate>
      <link>https://dev.to/aatmaj/learning-python-intermediate-course-day-27-entry-keypress-event-5d15</link>
      <guid>https://dev.to/aatmaj/learning-python-intermediate-course-day-27-entry-keypress-event-5d15</guid>
      <description>&lt;h2&gt;
  &lt;a href="#let-us-study-keypress-event-in-tkinter-entry-widget"&gt;
  &lt;/a&gt;
  Let us study keypress event in Tkinter entry widget
&lt;/h2&gt;




&lt;p&gt;Yesterday we had made a dummy login program (password manager). But the thing was the password was hidden. The password data can only be accessed by the &lt;code&gt;storepassword()&lt;/code&gt; function. But today how about making a secret trapdoor available for hackers to steal the passwords😈&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#keypress-event"&gt;
  &lt;/a&gt;
  Keypress event
&lt;/h3&gt;

&lt;p&gt;We can achieve this by writing a piece of code into the main program which scans whatever we write into the password entry widget and prints it in the command prompt. This can be done using the keypress event. &lt;code&gt;e1.bind("&amp;lt;Key&amp;gt;",keypress)&lt;/code&gt; Whenever any key is pressed, then the function 'keypress' is executed.&lt;/p&gt;

&lt;p&gt;Here is the complete code&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;tkinter&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="n"&gt;spy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Tk&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;spy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geometry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"300x200"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;spy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"spyware"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;keypress&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;ord&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;char&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"."&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;except&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="c1"&gt;# for blank press
&lt;/span&gt;        &lt;span class="k"&gt;pass&lt;/span&gt;
&lt;span class="n"&gt;e1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Entry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;spy&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'*'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;e1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;focus_set&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;e1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"&amp;lt;Key&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;keypress&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# mind the case of 'key'- k must be K
&lt;/span&gt;&lt;span class="n"&gt;e1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;spy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mainloop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SMIZTGqt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fhouxyr5pyx8kiwuy3w3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SMIZTGqt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fhouxyr5pyx8kiwuy3w3.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TIg3MOUD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a6vou6e6u6qzy2g4ysp4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TIg3MOUD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a6vou6e6u6qzy2g4ysp4.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So what is happening? Well, the actual action is taking place in the shell window. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ScRcgy7M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9183o8sfeit3l5h2iqzb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ScRcgy7M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9183o8sfeit3l5h2iqzb.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let me explain what the keypress function does. Whenever any key is pressed, the keypress function is executed. This function first extracts out which key is pressed. Then, it converts the key into an ASCII value and prints it in the command shell using a dot for separation. This way, even characters like backspace and enter key can be detected. Parsing this string to get the password is a piece of cake for the hacker😈&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The code is wrapped in try-except to prevent blank key presses, which results in errors like&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Exception in Tkinter callback
Traceback (most recent call last):
  File "C:\Users\aatma\AppData\Local\Programs\Python\Python310\lib\tkinter\__init__.py", line 1884, in __call__
    return self.func(*args)
  File "C:/Users/aatma/AppData/Local/Programs/Python/Python310/spy.py", line 6, in keypress
    print(ord(event.char),end=".")
TypeError: ord() expected a character, but string of length 0 found
&lt;/code&gt;&lt;/pre&gt;

&lt;/blockquote&gt;




&lt;p&gt;Let us now couple the code with our password manager and see the results.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;tkinter&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;tk&lt;/span&gt; &lt;span class="c1"&gt;# import the Tkinter module
&lt;/span&gt;
&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;tk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Tk&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;# create the blank window.
&lt;/span&gt;&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"password manager"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# set the title as password manager
&lt;/span&gt;&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geometry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'400x200'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# set the default geometry of the window.
&lt;/span&gt;
&lt;span class="n"&gt;TB1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;tk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Entry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;width&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="c1"&gt;# make an entry widget with 20 spaces for the username
&lt;/span&gt;
&lt;span class="n"&gt;TB2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;tk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Entry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"*"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;width&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;keypress&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;ord&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;char&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"."&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;except&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="c1"&gt;# for blank press
&lt;/span&gt;        &lt;span class="k"&gt;pass&lt;/span&gt;
&lt;span class="n"&gt;TB2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"&amp;lt;Key&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;keypress&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# entry widget for password and hide the keys whenever pressed.
&lt;/span&gt;
&lt;span class="c1"&gt;# TB1 is for username, TB2 is for password
&lt;/span&gt;&lt;span class="n"&gt;TB1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;TB2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="c1"&gt;# pack the widgets into 'form'
&lt;/span&gt;
&lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;tk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Label&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# make a label to display the username
&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;show&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="c1"&gt;#function to be executed once the button is pressed.
&lt;/span&gt;    &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;TB1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;# get username
&lt;/span&gt;    &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;TB2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;# get password
&lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
     &lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Welcome "&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;" to python GUI"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;fg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Green"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# display the label
&lt;/span&gt;     &lt;span class="n"&gt;storepassword&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# store password and username
&lt;/span&gt;    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
     &lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Please enter a valid username and password."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;fg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Red"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# blank screens
&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;storepassword&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="c1"&gt;#//Some mechanism to store password//
&lt;/span&gt;    &lt;span class="k"&gt;pass&lt;/span&gt; &lt;span class="c1"&gt;#stubbed
&lt;/span&gt;
&lt;span class="n"&gt;button&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;tk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Button&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Sign Up"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# setup the button
&lt;/span&gt;&lt;span class="n"&gt;button&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mainloop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jH2MjHuo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ejhmpyrynk9nunsmb62u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jH2MjHuo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ejhmpyrynk9nunsmb62u.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;So friends that was all for today. Stay tuned for updates.....&lt;/p&gt;

</description>
      <category>learningpython</category>
      <category>python</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Go/Golang Basics - Variables and Data types</title>
      <author>Tarun Kumar J</author>
      <pubDate>Thu, 16 Sep 2021 08:05:12 +0000</pubDate>
      <link>https://dev.to/tarunj096/go-golang-basics-variables-and-data-types-1n46</link>
      <guid>https://dev.to/tarunj096/go-golang-basics-variables-and-data-types-1n46</guid>
      <description>&lt;p&gt;Basic data types in Go are:&lt;code&gt;int&lt;/code&gt;, &lt;code&gt;float&lt;/code&gt;,&lt;code&gt;complex&lt;/code&gt;,&lt;code&gt;string&lt;/code&gt;,&lt;code&gt;bool&lt;/code&gt;.&lt;br&gt;
Int, Float, and complex are part of the numbers.&lt;/p&gt;

&lt;p&gt;We'll start with Integers.There are two categories, One is signed and other is unsigned integers.Signed integers can be negative but unsigned integers are always positive.Signed int is referred as &lt;code&gt;int&lt;/code&gt; and Unsigned int as &lt;code&gt;uint&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;They are : int8, int16, int32, int64, uint8, uint16, uint32, uint64, int, uint.&lt;/p&gt;

&lt;p&gt;Example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;package main

import "fmt"

function main() {

            var lengthOfWire uint16 = 36
            var numberOfChocalates int8 = 10 
            var boxlength uint = 200
            var x int =  -450
}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next is Floating-Point Numbers. They are of two types &lt;code&gt;float32&lt;/code&gt; and &lt;code&gt;float64&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;      var ratingOfTheProduct float32 = 3.5

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally, the next part is &lt;code&gt;Complex&lt;/code&gt; Numbers. Complex numbers are of two types, complex64 and complex128. The in-built function creates a complex number from its imaginary and real part. Complex numbers can be initialized as:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;      var x complex64 = complex( 5, 2)
      var y complex128 = complex( 7, 3)

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If they are printed then, their output would be:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;(5 + 2i)
(7 + 3i)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;Boolean&lt;/code&gt;: Boolean data type contains only 1 bit of information. It's either 0 or 1. 0 denotes false and 1 denotes true.&lt;/p&gt;

&lt;p&gt;They can be initialized as :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;     var isCodingFun bool = true

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The last data type is a &lt;code&gt;string&lt;/code&gt;. A string stores sequence of characters and it must be surrounded with double-quotes. They can be initialized as:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;     var text string = "Hi, Welcome to Golang Blog Series"

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can concatenate two strings by using the &lt;code&gt;+&lt;/code&gt; operator.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;     var nameOfMovie string = "Avengers Endgame "

     var concatStr string = nameOfMovie + "is one of the greatest superhero movies."

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#variables"&gt;
  &lt;/a&gt;
  Variables
&lt;/h3&gt;

&lt;p&gt;Variables in the Go language hold a value even before we assign anything to it. They are default values. All the numeric variables have 0 as default and string variables have&lt;code&gt;""&lt;/code&gt;. Boolean variables have false as default value.&lt;/p&gt;

&lt;p&gt;You can declare a variable without stating its type by &lt;code&gt;:=&lt;/code&gt; (short declaration operator ). For example :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
         nameOfMovie := "Avengers Endgame"
         x := 15
         y:= 3.7
         isClimateChangeReal := true
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Go also allows us to declare multiple variables in a single line. An Example of that is :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;       var x , y = 10,20

       nameOfStreet , sure := "Abbey road" , true 
      //'nameOfStreet' is type 'string' and 'sure' is type 'bool'

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's it for this blog ✅.&lt;/p&gt;

&lt;p&gt;For more information, You can always check out the Official documentation.  &lt;a href="https://golang.org"&gt;This&lt;/a&gt; is the official site 💯.&lt;/p&gt;

&lt;p&gt;If you are new to the &lt;code&gt;Go&lt;/code&gt; language and you want to check out more, Below are some resources 🔥.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  Resources
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;A full video course on  &lt;a href="https://www.youtube.com/watch?v=YS4e4q9oBaU"&gt;freecodecamp&lt;/a&gt;. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;There's a Course on Codecademy on Go language. You can check it out  &lt;a href="https://www.codecademy.com/learn/learn-go"&gt;here&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>go</category>
      <category>webdev</category>
      <category>100daysofcode</category>
      <category>beginners</category>
    </item>
    <item>
      <title>How to create your first Android app using Android Studio?</title>
      <author>Gourav Khunger</author>
      <pubDate>Thu, 16 Sep 2021 08:04:05 +0000</pubDate>
      <link>https://dev.to/gouravkhunger/how-to-create-your-first-android-app-using-android-studio-5139</link>
      <guid>https://dev.to/gouravkhunger/how-to-create-your-first-android-app-using-android-studio-5139</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://genicsblog.com/how-to-create-your-first-android-app-using-android-studio"&gt;Read this article on my blog&lt;/a&gt; for a better experience and to listen the audio version.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Hello there!&lt;/p&gt;

&lt;p&gt;This is the second article in the &lt;a href="https://genicsblog.com/series/android-development"&gt;Android App Development For Beginner&lt;/a&gt; series. If you have followed along with the previous article, then you will have Android Studio set up.&lt;/p&gt;

&lt;p&gt;I will continue this article from where the previous article ended, and by the end, we will be having a Hello World Android App ready!&lt;/p&gt;

&lt;p&gt;Let's dig into it now!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-a-new-project"&gt;
  &lt;/a&gt;
  Create a new project
&lt;/h2&gt;

&lt;p&gt;We are now going to create the project, first open Android Studio and you will be presented with this screen.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---ZTH0480--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631772463954/WoC110PBE.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---ZTH0480--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631772463954/WoC110PBE.png" alt="Welcome to Android Studio Screen"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is the latest Android Studio Arctic Fox &lt;code&gt;2020.3.1&lt;/code&gt;. This might be different from the older post but yeah, the installation process remains the same.&lt;/p&gt;

&lt;p&gt;Once Android Studio is open, press the New Project button.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--G5_2qHyt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631772561088/aBJwhkyQ_.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--G5_2qHyt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631772561088/aBJwhkyQ_.png" alt="New Project Button"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pressing it will take you to the New Project window.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--COWcaJzH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631731580840/3jpz5Ssw7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--COWcaJzH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631731580840/3jpz5Ssw7.png" alt="New Project Window"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There, you will see a bunch of starter templates for Android Projects, like Basic Activity, Bottom Navigation, Tabbed Activity, etc. &lt;/p&gt;

&lt;p&gt;If the word Activity is strange to you, don't be afraid. I will explain the concepts in the later articles, but for now, you can understand that an Activity is like a page in the app. Anything that you see in an app, that is, the page, is called an Activity.&lt;/p&gt;

&lt;p&gt;An app can have multiple activities with multiple widgets in them(called Views) that make the app functional. We will dig into the fundamentals of Android and practice them later, for now, you can go with the Empty Activity.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XE6t65oQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631732822722/J6Kp0MJqq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XE6t65oQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631732822722/J6Kp0MJqq.png" alt="Select Empty Activity From Prebuilt Templates"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Press the next button. Now you will be asked to give some information about the android app. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5zgfDQtw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631733019453/GNXLb_Ode.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5zgfDQtw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631733019453/GNXLb_Ode.png" alt="Give information to Android Studio about your app"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The information required is:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#app-name"&gt;
  &lt;/a&gt;
  App Name
&lt;/h3&gt;

&lt;p&gt;Give your app a suitable name. If you don't wish to give it a name yet, don't worry you can edit this later too.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#package-name"&gt;
  &lt;/a&gt;
  Package Name
&lt;/h3&gt;

&lt;p&gt;This is a unique identifier of your app. The package name is used by the android operating system to distinguish your app from other apps, and also by the google play store to identify different apps on their platform, no two different apps on the store or on an android device can have the same package name.&lt;/p&gt;

&lt;p&gt;Usually, companies give set the package name of their app by reversing their domain. Like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Google uses &lt;code&gt;com.google.android.&amp;lt;identifier-of-app&amp;gt;&lt;/code&gt; for their apps.&lt;/li&gt;
&lt;li&gt;Whatsapp uses &lt;code&gt;com.whatsapp&lt;/code&gt; as their Android app's package name&lt;/li&gt;
&lt;li&gt;Discord uses &lt;code&gt;com.discord&lt;/code&gt; as their app's package name.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In the same way, if you do have a domain name registered under your name, you can proceed to create a package name as explained above.&lt;/p&gt;

&lt;p&gt;Otherwise, you can use the same structure as I am using. Even though I own &lt;code&gt;genicsblog.com&lt;/code&gt; and &lt;code&gt;gouravkhunger.xyz&lt;/code&gt;, I prefer to use my GitHub URL as the package. Since we are making a hello world app here, I have kept the package name as &lt;code&gt;com.github.gouravkhunger.helloworld&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This identifier is more unique to you because your GitHub account will be used to host your personal projects so I prefer using it that way.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Quick Clarification&lt;/strong&gt;: You don't actually need to own the domain you put into the package name, and there will be no verification if you put another domain. But if you publish the project and later someone claims the domain, there can be conflicts so it's better to use your own, or the way I used my GitHub username.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#save-location"&gt;
  &lt;/a&gt;
  Save location
&lt;/h3&gt;

&lt;p&gt;Android studio will store the project at this location - feel free to store it anywhere you like. The folder must not exist before as Android Studio will create it for you.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#language"&gt;
  &lt;/a&gt;
  Language
&lt;/h3&gt;

&lt;p&gt;I would prefer to use kotlin because it is the official language to create android apps. I expect you to know a bit of Java or any other object-oriented programming language like C++ because that would help you to adopt kotlin very easily.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#minimum-sdk"&gt;
  &lt;/a&gt;
  Minimum SDK
&lt;/h3&gt;

&lt;p&gt;This is the minimum Android version the app needs to run. It is required to specify it because there are certain things that don't work in older versions of Android. So to ensure backward compatibility, you need to specify the minimum SDK so that all features work seamlessly on the devices.&lt;/p&gt;

&lt;p&gt;You can always change this field later, so you can choose API 23, which is Android 6.0 (Marshmellow), for now. From my past experience, this API level works with most of the libraries (pre-written code for android apps that makes development easier) and works on ~85% of the devices in the market.&lt;/p&gt;

&lt;p&gt;Now, you can hit the Finish button and Android Studio will set things up for you! Please wait for 2-3 minutes to let it build the project (depending on your hardware specifications it can take longer/shorter time).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3KMKcFcS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631734256571/QJ9wDuGId.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3KMKcFcS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631734256571/QJ9wDuGId.png" alt="Finish button in New Project Window - Android Studio"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#run-the-hello-world-project"&gt;
  &lt;/a&gt;
  Run the Hello World project
&lt;/h2&gt;

&lt;p&gt;Once the project is built, you will see the IDE window with two files open: &lt;code&gt;MainActivity.kt&lt;/code&gt; and &lt;code&gt;acitvity_main.xml&lt;/code&gt;. Actually, Android Studio puts in a simple hello world app when we select an Empty Activity, we will go into more details when subsequent articles get released in this series.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--X_6HSHTt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631773265969/Sq2JDNXFps.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X_6HSHTt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631773265969/Sq2JDNXFps.png" alt="Android Studio IDE Project Screen Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://genicsblog.com/beginning-android-development-with-android-studio#emulators-yes-or-no"&gt;In the last article&lt;/a&gt;, I explained whether or not you should use emulators or not. In this article, I will run the app on my device but you can also use &lt;/p&gt;

&lt;p&gt;Now, you can enable USB debugging on your Android Device through developer options (I will write an article on it and link it here). Then connect your android device to your machine, and you will see that Android Studio shows the device name on the toolbar.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vHyme968--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631774295972/kWzS5YgOC.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vHyme968--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631774295972/kWzS5YgOC.png" alt="Connected Devices in Android Studio"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Press the green button beside the name of the device and Android Studio will build an APK  and install it on your device. You might need to allow the installation from a pop-up dialog on your device if it is your first time while installing from android studio.&lt;/p&gt;

&lt;p&gt;Watch the below gif for the above steps in action.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4SaqtEJ3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631775449659/4y5k5NRlC.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4SaqtEJ3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631775449659/4y5k5NRlC.gif" alt="Build and run an Android app on a real device - Android Studio"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you are wondering- I didn't use any android emulators, as my laptop won't be able to handle screen recording with Android Studio as well as an android emulator open. I have used a tool called &lt;a href="https://github.com/Genymobile/scrcpy"&gt;scrcpy&lt;/a&gt; to simulate my real android device's screen to the laptop, any changes that occur on the device are reflected on the screen.&lt;/p&gt;

&lt;p&gt;It's instantaneous, so you can opt in to choose that way too if you wish to feel an emulator without really having an emulator.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;CONGRATULATIONS&lt;/strong&gt;!&lt;/p&gt;

&lt;p&gt;You have successfully built your first Hello World project and installed it on your device 😀.&lt;/p&gt;

&lt;p&gt;I hope you learned something new today! Make sure to subscribe to my newsletter (email field at the starting of this article) to never miss any article I post. New articles coming soon to this series!&lt;/p&gt;

&lt;p&gt;I would really appreciate it to know your views on this article. All kinds of feedback are welcome!&lt;/p&gt;

&lt;p&gt;Happy coding :)&lt;/p&gt;

</description>
      <category>android</category>
      <category>appdevelopment</category>
      <category>project</category>
      <category>androidstudio</category>
    </item>
    <item>
      <title>Beginning Android Development with Android Studio</title>
      <author>Gourav Khunger</author>
      <pubDate>Thu, 16 Sep 2021 08:00:18 +0000</pubDate>
      <link>https://dev.to/gouravkhunger/beginning-android-development-with-android-studio-241f</link>
      <guid>https://dev.to/gouravkhunger/beginning-android-development-with-android-studio-241f</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://genicsblog.com/beginning-android-development-with-android-studio"&gt;Read this article on my blog&lt;/a&gt; for a better experience.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Hi everyone! This is the beginning of my new series on Android Development! &lt;/p&gt;

&lt;p&gt;In this series, we will be going through various aspects of Android Programming and App Development from the basics to some advanced level topics.&lt;/p&gt;

&lt;p&gt;But in this article, we will just get an overview of Android and some motivation on why and how to start with it. &lt;/p&gt;

&lt;p&gt;Then we will start by installing Android Studio, the Official IDE for making Android Apps, by Google. At last, I will sum up the post and provide some further reading materials so that you can get started with it.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#whats-android"&gt;
  &lt;/a&gt;
  What's Android?
&lt;/h1&gt;

&lt;p&gt;Android is an open-source mobile Operating System owned by Google. It is one of the most popular OS out there! Each day many new people start with an endeavor to make something great with the Android Platform.&lt;/p&gt;

&lt;p&gt;Also, since it is based on Linux, it is highly customizable and can work as you need it to. Android devices come in all shapes and sizes as it is very lightweight and can run on old hardware models too.&lt;/p&gt;

&lt;p&gt;The marketplace for Android is also vast, though competent. Surely, your app may have a base userbase of &amp;gt;1k users within weeks of publishing the app, without even marketing. And I have tested it and that's true!&lt;/p&gt;

&lt;p&gt;Now that you are motivated enough to know more about development in Android, we will go through the tools required to start with Android!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#tools-needed-for-android-dev"&gt;
  &lt;/a&gt;
  Tools needed for Android Dev
&lt;/h1&gt;

&lt;p&gt;Android apps can be developed on any system running Windows, Linux, or Mac. The process is pretty much the same in each case.&lt;/p&gt;

&lt;p&gt;Next, what you need is Android Studio, the official IDE supported by Google for android app development. It is based on IntelliJ IDEA IDE for Java by JetBrains, so it looks and works pretty much the same. People who have used any of Jetbrains IDE will not have issues understanding Android Studio!&lt;/p&gt;

&lt;p&gt;You can install Android Studio from the official &lt;a href="https://developer.android.com/studio"&gt;Andorid Studio site&lt;/a&gt;. This step will not be very difficult.&lt;/p&gt;

&lt;p&gt;Though Android Studio is pre-bundled with a JRE, so you may not need to install any additional kit for Java, though, if you wish, you can install your needed JDK &lt;a href="https://www.oracle.com/java/technologies/javase-downloads.html"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Android Studio installation is a bit heavy and may need some time to complete. Be patient!&lt;/p&gt;

&lt;p&gt;After installing and doing all the necessary setups, and opening Android Studio, you will be able to see such a screen: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--htHjynIw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1613322813352/3bqWDusIb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--htHjynIw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1613322813352/3bqWDusIb.png" alt="Android Studio 4.1.2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;The picture may not be the exact same as your version of Android Studio, also I have a theme installed which may not be similar to yours!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;You can now proceed to install the required SDKs (Software Development Kits) for building your apps. On the main screen of Android Studio, click Configure -&amp;gt; SDK Manager.&lt;/p&gt;

&lt;p&gt;It is recommended to install the latest possible version at the moment you are setting it up. Check the box next to the SDK name and then click apply, Android Studio will start setting up the things for you!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#emulators-yes-or-no"&gt;
  &lt;/a&gt;
  Emulators- Yes or No?
&lt;/h1&gt;

&lt;p&gt;Now, at this point in time, you may have the android studio and all other stuff set up.&lt;/p&gt;

&lt;p&gt;But you may be thinking of how will you test your app while you code. For that, there are two options left now, either you can go with your own real android device, and emulators. Emulators are the copy of real android devices that can run on your system.&lt;/p&gt;

&lt;p&gt;They are pretty much like a virtual setup of a device. Though they may not give the same actual experience that you may get on testing your app on a real device, they may give valuable insights on how your app will perform on different SDK versions.&lt;/p&gt;

&lt;p&gt;But, an important aspect to notice is that the emulators take up ram and space on your phone to run their set up and that won't be good enough if your system has low specs.&lt;/p&gt;

&lt;p&gt;Make sure that if you have at least &amp;gt;16 GB ram, then only you should go for having android emulators to run on your system, as they make the system heavy and cause lags if they don't get enough resources.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Emulators require your system to support virtualization.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;If you wish to run and test apps on a real android device, then you can follow the &lt;a href="https://developer.android.com/studio/run/device"&gt;official guide&lt;/a&gt; to get things done.&lt;/p&gt;

&lt;p&gt;I won't be going to all the further details in this post itself, this post was just to get you started with Android Studio and installing the right stuff for android app development. Hope to see you in the next post!&lt;/p&gt;




&lt;p&gt;Further reading materials:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://developer.android.com/guide"&gt;https://developer.android.com/guide&lt;/a&gt;&lt;br&gt;
&lt;a href="https://developer.android.com/training/basics/firstapp"&gt;https://developer.android.com/training/basics/firstapp&lt;/a&gt;&lt;br&gt;
&lt;a href="https://developer.android.com/docs"&gt;https://developer.android.com/docs&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;If you have any doubts or queries, you may write down in the comments below! Thank you for reading :)&lt;/p&gt;

</description>
      <category>android</category>
      <category>appdevelopment</category>
    </item>
    <item>
      <title>How to alter large MySQL tables on production?</title>
      <author>bright inventions</author>
      <pubDate>Thu, 16 Sep 2021 07:54:58 +0000</pubDate>
      <link>https://dev.to/brightdevs/how-to-alter-large-mysql-tables-on-production-1phd</link>
      <guid>https://dev.to/brightdevs/how-to-alter-large-mysql-tables-on-production-1phd</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;In this tutorial, we are going to learn, how to update the structure of the large tables on the production environment, without causing delays, locks, and downtime.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#large-table"&gt;
  &lt;/a&gt;
  Large table
&lt;/h2&gt;

&lt;p&gt;What is the large table? Is my table large enough to follow the steps from the tutorial?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#evaluate-the-term"&gt;
  &lt;/a&gt;
  Evaluate the term
&lt;/h3&gt;

&lt;p&gt;Large is subjective: sometimes, a wide table with 1m rows will be the biggest in the system. Sometimes 30mlns will be "average".&lt;/p&gt;

&lt;p&gt;One way to determine is to answer, what is the impact of updating a specific table during working hours?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;can you afford to put the sign "maintenance work in progress"?&lt;/li&gt;
&lt;li&gt;can you run the &lt;code&gt;ALTER&lt;/code&gt; query which will end after 10 minutes and not care about causing the locks?&lt;/li&gt;
&lt;li&gt;will nobody notice that the application is down for 5 minutes?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you answered "yes" for the questions, you may have the large tables but there is no need to worry about the way you are going to modify them.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#migration"&gt;
  &lt;/a&gt;
  Migration
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#check-if-a-regular-migration-will-work"&gt;
  &lt;/a&gt;
  Check if a regular migration will work
&lt;/h3&gt;

&lt;p&gt;Modern databases (including MySQL) support online DDLs e.g. adding columns (nullable) without locking tables. This is by far the easiest and best approach if it works.&lt;/p&gt;

&lt;p&gt;"if it works" - because in some cases - i.e. you have FTS index created - you will be not able to do so.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#use-percona-toolkit-to-update-the-table"&gt;
  &lt;/a&gt;
  Use Percona Toolkit to update the table
&lt;/h3&gt;

&lt;p&gt;In the case mentioned above, if you have an FTS index created over the table, there is a need to perform the migration some other way. The other way, in this case, is &lt;a href="https://www.percona.com/software/database-tools/percona-toolkit"&gt;Percona Toolkit&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Percona Toolkit is a collection of advanced open source command-line tools, developed and used by the Percona technical staff, that are engineered to perform a variety of MySQL®, MariaDB®, MongoDB®, and PostgreSQL server and system tasks that are too difficult or complex to perform manually.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In our scenario, &lt;a href="https://www.percona.com/doc/percona-toolkit/3.0/pt-online-schema-change.html"&gt;pt-online-schema-change&lt;/a&gt; allows you to alter a table’s structure without blocking reads or writes. In the following paragraphs, I described how it works.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Do not use this tool before reading its documentation and checking your backups carefully.&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#planning-the-migration"&gt;
  &lt;/a&gt;
  Planning the migration
&lt;/h3&gt;

&lt;p&gt;In order to perform the change, we need to ensure that migration will be as lightest as possible.&lt;/p&gt;

&lt;p&gt;Determine what kind of application's activities are related to the table you want to edit - examine the logs that are leading to some operations on the table to find the best timeframe to alter the schema.&lt;/p&gt;

&lt;p&gt;In our case, it was about the night hours. We checked the traffic for the application in the last two weeks' perspective.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--k0-Je6js--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e1nip7j171usoe1p18x8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k0-Je6js--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e1nip7j171usoe1p18x8.png" alt="app_traffic"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#executing-the-migration"&gt;
  &lt;/a&gt;
  Executing the migration
&lt;/h3&gt;

&lt;p&gt;It is important to update the table without interruption. You need to remember that the process can take hours. It’s a good practice to start the migration from some remote shell. By doing this, even if your network connection fails, you will be able to connect to the shell and attach to the screen again, without stopping the execution. Moreover, it's worth to consider using Unix' &lt;a href="https://linuxize.com/post/how-to-use-linux-screen/"&gt;screen&lt;/a&gt; program:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ screen -S percona-processing
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once you created the screen, you are able to reattach to it later (ie. after network connection crash):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ screen -ls
There is a screen on:
    41303.percona-processing    (Attached)
1 Socket in /var/folders/7g/45p5bfln4k3384t7wcvyrhqh0000gn/T/.screen.
$ screen -R 41303
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here is an example of the altering command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ pt-online-schema-change \
    --alter "ADD COLUMN created_at datetime DEFAULT null" \
    --alter-foreign-keys-method drop_swap \
    --set-vars lock_wait_timeout=5 D={database_name},t={destination_table_name},P={port},h={host_name},u={user_name},p={password} \
    --no-check-foreign-keys \
    --no-check-replication-filters \
    --max-load="Threads_running=100" \
    --critical-load="Threads_running=100" \
    --dry-run
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;--dry-run&lt;/code&gt; will prevent from executing the actual migration on the database&lt;/p&gt;

&lt;p&gt;How does it work? Percona tool is creating a NEW, temporary table (with the modification applied) and copy the data from the original table to the new one. The triggers created on the old table are copying the incoming data during the process. After the whole data is copied, the tool is swapping the tables and removing the old one.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;In this post, you learned how to alter your table during the productional application's lifecycle.&lt;/p&gt;

&lt;p&gt;In our case, the update of the entire table took 12hours of processing, ends successfully without causing any downtime.&lt;/p&gt;

&lt;p&gt;By Patryk Szlagowski, Senior Backend Developer @ Bright Inventions&lt;/p&gt;

</description>
      <category>mysql</category>
      <category>database</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Understanding your DynamoDB Single Table Performance</title>
      <author>Michael O'Brien</author>
      <pubDate>Thu, 16 Sep 2021 07:54:03 +0000</pubDate>
      <link>https://dev.to/sensedeep/understanding-your-dynamodb-single-table-performance-58ab</link>
      <guid>https://dev.to/sensedeep/understanding-your-dynamodb-single-table-performance-58ab</guid>
      <description>&lt;p&gt;Best practices for DynamoDB have evolved to favor single-table design patterns where one database table serves the entire application and holds multiple different application entities.&lt;/p&gt;

&lt;p&gt;This design pattern offers greater performance by reducing the number of requests required to retrieve information and lowers operational overhead. It also greatly simplifies the changing and evolving of your DynamoDB designs by uncoupling the entity key fields and attributes from the physical table structure.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;However, managing single-table data and performance can often feel like you are peering at &lt;code&gt;Assembly Language&lt;/code&gt;. Composite keys with prefixed and mapped attribute names are single-table design techniques but they can make just reading a single-table item quite difficult.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;What is needed are tools that "understand" the single-table schema and can present and organize your data logically according to your application entities.&lt;/p&gt;

&lt;p&gt;To meet this need we've created the &lt;a href="https://www.npmjs.com/package/dynamodb-metrics"&gt;DynamoDB Metrics&lt;/a&gt; library which calculates and emits detailed single-table performance metrics for DynamoDB.&lt;/p&gt;

&lt;p&gt;This post looks at our libraries &lt;a href="https://www.npmjs.com/package/dynamodb-metrics"&gt;DynamoDB Metrics&lt;/a&gt;, &lt;a href="https://www.npmjs.com/package/dynamodb-onetable"&gt;OneTable&lt;/a&gt; and the &lt;a href="https://www.sensedeep.com"&gt;SenseDeep&lt;/a&gt; platform that understand your single-table design schema and can create and present detailed metrics to graphically show how your single-table designs are performing.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#single-table-monitoring"&gt;
  &lt;/a&gt;
  Single Table Monitoring
&lt;/h2&gt;

&lt;p&gt;So what are the kinds of questions that &lt;a href="https://www.npmjs.com/package/dynamodb-metrics"&gt;DynamoDB Metrics&lt;/a&gt; can answer?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Which single-table entity/model is causing the most load and is consuming the most RCU or WCU?&lt;/li&gt;
&lt;li&gt;Which customer tenant is causing the most load and how much should they be billed?&lt;/li&gt;
&lt;li&gt;Which app or function is causing what percentage of load on DynamoDB and is consuming the most RCU or WCU?&lt;/li&gt;
&lt;li&gt;Which queries are the most inefficient (items vs scanned) and by which app or model?&lt;/li&gt;
&lt;li&gt;Which operations are being used the most?&lt;/li&gt;
&lt;li&gt;Which entity is using performing scans or other operations?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These questions and others can be answered by using detailed metrics for DynamoDB that profile performance at an application entity/model level.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wKyPD2Q7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.sensedeep.com/images/sensedeep/table-single.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wKyPD2Q7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.sensedeep.com/images/sensedeep/table-single.png" alt="Single Table"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dynamodb-metrics-features"&gt;
  &lt;/a&gt;
  DynamoDB Metrics Features
&lt;/h2&gt;

&lt;p&gt;The &lt;a href="https://www.npmjs.com/package/dynamodb-metrics"&gt;DynamoDB Metrics&lt;/a&gt; library is an NPM module for Node applications that captures and emits detailed DynamoDB metrics. It has the following features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Creates detailed CloudWatch metrics for Tables, Indexes, Apps/Functions, Entities and DynamoDB operations.&lt;/li&gt;
&lt;li&gt;Emits metrics using CloudWatch EMF for zero-latency metric creation.&lt;/li&gt;
&lt;li&gt;Supports AWS V2 and V3 SDKs.&lt;/li&gt;
&lt;li&gt;Simple easy integration.&lt;/li&gt;
&lt;li&gt;Very low CPU and memory impact.&lt;/li&gt;
&lt;li&gt;Clean, readable small code base (&amp;lt;400 lines).&lt;/li&gt;
&lt;li&gt;Full TypeScript support.&lt;/li&gt;
&lt;li&gt;No dependencies.&lt;/li&gt;
&lt;li&gt;Optionally integrates with &lt;a href="https://www.npmjs.com/package/senselogs"&gt;SenseLogs the Serverless Logger&lt;/a&gt; for dynamic control of metrics.&lt;/li&gt;
&lt;li&gt;Supported by the free &lt;a href="https://www.sensedeep.com/"&gt;SenseDeep Developer Plan&lt;/a&gt; for graphical DynamoDB single-table monitoring.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#metrics-galore"&gt;
  &lt;/a&gt;
  Metrics Galore
&lt;/h2&gt;

&lt;p&gt;DynamoDB Metrics captures detailed statistics across 5 dimensions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Table — Per table metrics&lt;/li&gt;
&lt;li&gt;Tenant — Per tenant metrics&lt;/li&gt;
&lt;li&gt;Source — Per application, module or function identification&lt;/li&gt;
&lt;li&gt;Index — Primary or global secondary index&lt;/li&gt;
&lt;li&gt;Model — Application single-table entity / model name&lt;/li&gt;
&lt;li&gt;Operation — DynamoDB low-level operation: GetItem, PutItem, etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can drill-down to see metrics aggregated by table, tenant, source, index, model or operation. This enables you to pin-point exactly where performance issues may be lurking.&lt;/p&gt;

&lt;p&gt;For each of these dimension combinations, DynamoDB Metrics emits the following metrics:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;read — Read capacity units consumed&lt;/li&gt;
&lt;li&gt;write — Write capacity units consumed&lt;/li&gt;
&lt;li&gt;latency — Aggregated request latency in milliseconds&lt;/li&gt;
&lt;li&gt;count — Count of items returned&lt;/li&gt;
&lt;li&gt;scanned — Number of items scanned&lt;/li&gt;
&lt;li&gt;requests — Number of API requests issued&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With these metrics, you can see precisely who is consuming read and write capacity, which requests are running long, which requests are inefficient and are scanning the table.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-get-dynamodb-metrics"&gt;
  &lt;/a&gt;
  How to get DynamoDB Metrics
&lt;/h2&gt;

&lt;p&gt;There are two ways to get these wonderful single-table metrics for DynamoDB.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;The &lt;a href="https://www.npmjs.com/package/dynamodb-metrics"&gt;DynamoDB Metrics&lt;/a&gt; NPM library can be used by any Node application using DynamoDB. It is configured as AWS SDK middleware and efficiently captures request details with minimal overhead.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Alternatively, you can use the &lt;a href="https://www.npmjs.com/package/dynamodb-onetable"&gt;OneTable&lt;/a&gt; library that has this support built-in and get all the other benefits of OneTable.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#dynamodb-metrics"&gt;
  &lt;/a&gt;
  DynamoDB Metrics
&lt;/h2&gt;

&lt;p&gt;To configure DynamoDB Metrics, load the library and pass your DynamoDB client instance to the Metrics constructor. The other parameters tell Metrics how to understand your index and key structure.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Metrics&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dynamodb-metrics&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;metrics&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Metrics&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;client&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;indexes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;primary&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;pk&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;sk&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;}},&lt;/span&gt;
    &lt;span class="na"&gt;separator&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can read more about how to configure Metrics at &lt;a href="https://github.com/sensedeep/dynamodb-metrics/blob/main/README.md"&gt;DynamoDB Metrics README&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#onetable-support"&gt;
  &lt;/a&gt;
  OneTable Support
&lt;/h2&gt;

&lt;p&gt;To enable DynamoDB Metrics using OneTable, just add &lt;code&gt;metrics&lt;/code&gt; to your OneTable constructor and specify the name of your application or Lambda function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;table&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Table&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;metrics&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;source&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;acme:launcher&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;OneTable uses your defined OneTable schema to understand your key structure.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-view-dynamodb-single-table-metrics"&gt;
  &lt;/a&gt;
  How to View DynamoDB Single Table Metrics
&lt;/h2&gt;

&lt;p&gt;You can view DynamoDB single-table metrics using CloudWatch or the SenseDeep Serverless Platform.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#viewing-via-sensedeep"&gt;
  &lt;/a&gt;
  Viewing via SenseDeep
&lt;/h3&gt;

&lt;p&gt;SenseDeep has pre-configured dashboards and graphs to assist in visualizing your DynamoDB metrics. You can drill down and view metrics at the table, tenant, source, index, model or operation dimension level for any desired time period.&lt;/p&gt;

&lt;p&gt;It is easy to see which application or function is consuming read/write capacity and how your app data entities are using DynamoDB.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wKyPD2Q7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.sensedeep.com/images/sensedeep/table-single.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wKyPD2Q7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.sensedeep.com/images/sensedeep/table-single.png" alt="Single Table"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;SenseDeep also provides intuitive capacity planning and provisioning assistance.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XZ00c04I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.sensedeep.com/images/sensedeep/table-provisioning.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XZ00c04I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.sensedeep.com/images/sensedeep/table-provisioning.png" alt="Provisioning Table"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cloudwatch"&gt;
  &lt;/a&gt;
  CloudWatch
&lt;/h2&gt;

&lt;p&gt;Using &lt;a href="https://console.aws.amazon.com/cloudwatch/home?region=us-east-1#metricsV2:graph=~()"&gt;CloudWatch Metrics&lt;/a&gt;, you can see cards for the DynamoDB Metrics dimension combinations.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZkilGcoU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.sensedeep.com/images/blog/cloud-watch-dimensions.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZkilGcoU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.sensedeep.com/images/blog/cloud-watch-dimensions.png" alt="CloudWatch Dimensions"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The metrics are created under the &lt;code&gt;SingleTable/Metrics.1&lt;/code&gt; namespace. Clicking on a card provides a list of dimension combinations to graph.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LSgXtozA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.sensedeep.com/images/blog/cloud-watch-graph-metrics.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LSgXtozA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.sensedeep.com/images/blog/cloud-watch-graph-metrics.png" alt="CloudWatch Metrics"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#under-the-hood"&gt;
  &lt;/a&gt;
  Under the Hood
&lt;/h2&gt;

&lt;p&gt;The DynamoDB Metrics library emits metrics using the &lt;a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Embedded_Metric_Format_Specification.html"&gt;CloudWatch EMF&lt;/a&gt; log-based metrics format. This permits zero-latency creation of metrics without impacting the performance of your Lambdas. EMF allows metrics to be emitted without blocking as would be the case with a normal blocking API.&lt;/p&gt;

&lt;p&gt;DynamoDB Metrics will only emit metrics for dimension combinations that are active. If you have many application entities and indexes, you may end up with a large number of metrics. If your site uses all these dimensions actively, your CloudWatch Metric costs may be high. You will be charged by AWS CloudWatch for the total number of metrics that are active each hour at the rate of $0.30 cents per hour.&lt;/p&gt;

&lt;p&gt;If your CloudWatch costs are too high, you can minimize your charges by reducing the number of dimensions. The dimensions emitted can be modified via the &lt;code&gt;dimensions&lt;/code&gt; constructor property. Alternatively, you can dynamically enable and disable metrics via the LOG_FILTER parameter.&lt;/p&gt;

&lt;p&gt;DynamoDB Metrics are buffered and aggregated to minimize the load on your system. If a Lambda function is reclaimed by AWS Lambda, there may be a few metric requests that are not emitted before the function is reclaimed. This should be a very small percentage and should not significantly impact the quality of the metrics. You can control this buffering via the Metrics constructor.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;Gaining insight into single-table design patterns is the new frontier. Previously, single-table designs with DynamoDB has been a black box and it has been difficult to peer inside and see how the components of your design are operating.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.npmjs.com/package/dynamodb-metrics"&gt;DynamoDB Metrics&lt;/a&gt; provides an easy way to instrument your code and gain these insights. SenseDeep provides a free developer plan so you can view and analyze these metrics with graphical dashboards.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#more"&gt;
  &lt;/a&gt;
  More?
&lt;/h2&gt;

&lt;p&gt;Download &lt;a href="https://www.npmjs.com/package/dynamodb-metrics"&gt;DynamoDB Metrics&lt;/a&gt; from NPM at &lt;a href="https://www.npmjs.com/package/dynamodb-metrics"&gt;DynamoDB Metrics&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For the most elegant way to create single-table designs, consider &lt;a href="https://www.npmjs.com/package/dynamodb-onetable"&gt;OneTable&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;And you can get a free developer license for SenseDeep at &lt;a href="https://app.sensedeep.com"&gt;SenseDeep App&lt;/a&gt; or learn more at &lt;a href="https://www.sensedeep.com"&gt;https://www.sensedeep.com&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You may also like to read:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.sensedeep.com/blog/posts/2021/dynamodb-singletable-design.html"&gt;Data Modeling with Single Table Designs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.sensedeep.com/blog/posts/2020/dynamodb-onetable.html"&gt;DynamoDB OneTable&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.sensedeep.com/blog/posts/2021/dynamodb-schemas.html"&gt;DynamoDB with OneTable Schemas&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#about-sensedeep"&gt;
  &lt;/a&gt;
  About SenseDeep
&lt;/h2&gt;

&lt;p&gt;SenseDeep is an observability platform for AWS developers to accelerate the delivery and maintenance of serverless applications.&lt;/p&gt;

&lt;p&gt;SenseDeep helps developers through the entire lifecycle to create observable, reliable and maintainable apps via an integrated serverless developer studio that includes deep insights into how your apps are performing.&lt;/p&gt;

&lt;p&gt;To try SenseDeep, navigate your browser to: &lt;a href="https://app.sensedeep.com/"&gt;https://app.sensedeep.com&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To learn more about SenseDeep please see: &lt;a href="https://www.sensedeep.com/product/"&gt;https://www.sensedeep.com/product&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Please let us know what you think, we thrive on feedback. &lt;a href="//mailto:dev@sensedeep.com"&gt;dev@sensedeep.com&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#links"&gt;
  &lt;/a&gt;
  Links
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.sensedeep.com/"&gt;SenseDeep Web Site&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://app.sensedeep.com/"&gt;SenseDeep App&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>aws</category>
      <category>serverless</category>
      <category>dynamodb</category>
      <category>observability</category>
    </item>
    <item>
      <title>Custom Type Guards in Typescript</title>
      <author>Maina Wycliffe</author>
      <pubDate>Thu, 16 Sep 2021 07:53:40 +0000</pubDate>
      <link>https://dev.to/this-is-learning/custom-type-guards-in-typescript-4kep</link>
      <guid>https://dev.to/this-is-learning/custom-type-guards-in-typescript-4kep</guid>
      <description>&lt;p&gt;Previously, we covered various approaches that you can take to narrowing types in Typescript. Type narrowing is the process of moving the type of a variable from a less precise to a more precise type i.e. from a union of string and number to string only. You can learn more about type narrowing &lt;a href="https://mainawycliffe.dev/blog/type-guards-and-narrowing-in-typescript"&gt;here&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;In this article, we are going to look at how we can create our own custom type guards. Custom type guards will help you to check if a variable is of a certain type before usage, which helps in Type narrowing.&lt;/p&gt;

&lt;p&gt;Take for instance the following function, which calculates the area of a shape i.e. Circle or Rectangle.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;calculateArea&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Rectangle&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;Circle&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// calculate area&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In order to calculate the area, we will need to determine whether the shape being passed in is a Rectangle or Circle. We can create a custom type guide that will check if the type of a &lt;code&gt;Rectangle&lt;/code&gt; and calculate its area, otherwise calculates the area of a circle:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isRectangle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// calculate area of a rectangle&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// calculate area of a circle&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#what-is-a-type-predicate"&gt;
  &lt;/a&gt;
  What is a Type Predicate?
&lt;/h2&gt;

&lt;p&gt;A type predicate is a function return type that tells typescript a parameter is of a specific type. A predicate takes the following format: &lt;code&gt;parameterName is Type&lt;/code&gt;, where &lt;code&gt;parameterName&lt;/code&gt; must be the name of a parameter in the function parameter signature. &lt;/p&gt;

&lt;p&gt;For instance, if we wanted to build the custom type guard &lt;code&gt;isRectangle&lt;/code&gt; above, our type predicate would be &lt;code&gt;shape is Rectangle&lt;/code&gt;, where &lt;code&gt;shape&lt;/code&gt; is the parameter name, as shown below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;isRectangle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;unknown&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nx"&gt;shape&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="nx"&gt;Rectangle&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// function body&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#custom-type-guard"&gt;
  &lt;/a&gt;
  Custom Type Guard
&lt;/h2&gt;

&lt;p&gt;To define a custom type guard, we create a function that returns a type predicate. The function itself just needs to return true or false. If we take the example above for &lt;code&gt;isRectangle&lt;/code&gt; type guard, we would check if the &lt;code&gt;width&lt;/code&gt; and the &lt;code&gt;height&lt;/code&gt; are present and return &lt;code&gt;true&lt;/code&gt;, otherwise, return &lt;code&gt;false&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;isRectangle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;unknown&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nx"&gt;shape&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="nx"&gt;Rectangle&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;width&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;shape&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;height&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// this is a rectangle&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="c1"&gt;// it's not a rectangle&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above example, we are using Javascripts &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/in"&gt;in operator&lt;/a&gt; to check if the width and height properties are in the shape object.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#usage"&gt;
  &lt;/a&gt;
  Usage
&lt;/h3&gt;

&lt;p&gt;To use the custom type guard, we use it just like any other function that returns a boolean.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;Rectangle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;Circle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Rectangle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Circle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isReactangle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;r&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// true&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isReactangle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;// false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;By using it within a control flow, you can narrow the type of the variable, just like other methods of narrowing types.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;area&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Rectangle&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;Circle&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isRectangle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Rectangle&lt;/span&gt;
    &lt;span class="nx"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt; &lt;span class="c1"&gt;// no error&lt;/span&gt;
    &lt;span class="nx"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;radius&lt;/span&gt; &lt;span class="c1"&gt;// error&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Circle&lt;/span&gt;
    &lt;span class="nx"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;radius&lt;/span&gt; &lt;span class="c1"&gt;// no error&lt;/span&gt;
    &lt;span class="nx"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt; &lt;span class="c1"&gt;// error&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;In this brief article, we learned what a Type predicate is and how to build custom type guards. We learned that a type guard is a special function that returns a type predicate so that typescript is able to determine the type of a variable.&lt;/p&gt;

&lt;p&gt;We will continue covering similar topics in Typescript in this series - &lt;a href="https://mainawycliffe.dev/blog/tags/a-byte-of-typescript"&gt;A Byte of Typescript&lt;/a&gt;. A Byte of Typescript is a new series that I will be publishing on a regular basis to help you demystify Typescript.&lt;/p&gt;

&lt;p&gt;If you are looking to learn more about Typescript, here are the previous articles I have published. Thank you 😄.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://mainawycliffe.dev/blog/typescript-use-unknown-instead-of-any"&gt;Typescript: why you should use unknown instead of any&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mainawycliffe.dev/blog/type-guards-and-narrowing-in-typescript"&gt;Type Narrowing in TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mainawycliffe.dev/blog/types-and-mocking-typescript"&gt;Types and Mocking - Typescript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mainawycliffe.dev/blog/template-literal-types-in-typescript"&gt;Template Literal Types in TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mainawycliffe.dev/blog/transforming-types-typescript-utility-types"&gt;Transforming Types in TypeScript with Utility Types&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>typescript</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>React Native Setup on macOS!</title>
      <author>Krishna Bhamare</author>
      <pubDate>Thu, 16 Sep 2021 07:28:11 +0000</pubDate>
      <link>https://dev.to/krishna7852/react-native-setup-on-macos-5a76</link>
      <guid>https://dev.to/krishna7852/react-native-setup-on-macos-5a76</guid>
      <description>&lt;p&gt;You're interested in developing React Native on your macOS computer - yay! However, installing React Native can be kind of tricky, there are a lot of different pieces to connect for both iOS development and Android.&lt;/p&gt;

&lt;p&gt;Without further ado, let's dive in!!!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#downloading-xcode"&gt;
  &lt;/a&gt;
  Downloading Xcode
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#why-xcode"&gt;
  &lt;/a&gt;
  Why Xcode?
&lt;/h4&gt;

&lt;p&gt;Xcode is Apple's IDE (integrated development environment) for building Mac, iOS, watchOS, and tvOS apps. It supports the Objective-C and Swift languages. We need it for React Native in order to use its build tools, which allows us to compile the native code necessary to build React Native apps.&lt;/p&gt;

&lt;p&gt;Xcode also comes with an iOS "simulator", which lets us run iOS apps on our Mac to see how they'll look and function.&lt;/p&gt;

&lt;p&gt;Lastly, while we generally recommend running our React Native app from the terminal (more information on this in the last chapter of this blog!) we can also load up our React Native app in Xcode and run it from there, which lets us use all of the powerful features that Xcode has to offer.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://apps.apple.com/us/app/xcode/id497799835?mt=12"&gt;Download Xcode from the Mac App Store&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dsrro10d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1mzbg6oxuarxohe8n33p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dsrro10d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1mzbg6oxuarxohe8n33p.png" alt="Screenshot 2021-09-15 at 12.38.02 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#downloading-android-studio"&gt;
  &lt;/a&gt;
  Downloading Android Studio
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#why-android-studio"&gt;
  &lt;/a&gt;
  Why Android Studio?
&lt;/h4&gt;

&lt;p&gt;Android Studio is Google's IDE (integrated development environment) for Android app development. It'll allow us to compile Android apps, set up Android emulators, and also run our React Native project in Android Studio to take advantage of its powerful features if we want.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://developer.android.com/studio"&gt;Download Android Studio&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#installing-homebrew"&gt;
  &lt;/a&gt;
  Installing Homebrew
&lt;/h3&gt;

&lt;p&gt;One of the most important tools on macOS is called Homebrew. Homebrew is billed as "the missing package manager" for macOS and is widely used by developers. We will need it to install some of the dependencies for React Native. Plus, it's just super handy for installing other things you may need!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;You can check if you already have Homebrew installed by running brew --version in your Terminal.&lt;/em&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#installing-node"&gt;
  &lt;/a&gt;
  Installing Node
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#why-node"&gt;
  &lt;/a&gt;
  Why Node?
&lt;/h4&gt;

&lt;p&gt;Node is a JavaScript "runtime environment" that lets you run JavaScript from your Terminal (and other places outside of a browser). React Native uses Node to run JavaScript scripts on the command line for things like testing, packaging, and more.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;You can check if you already have Node installed by running node --version in your Terminal.&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#installing-watchman"&gt;
  &lt;/a&gt;
  Installing Watchman
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#why-watchman"&gt;
  &lt;/a&gt;
  Why Watchman?
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://facebook.github.io/watchman/"&gt;Watchman&lt;/a&gt; is a tool by Facebook for watching for changes to files in your project. This allows for recompiling, rebundling, and reloading every time you save changes to your source files. While React Native can work without Watchman, it's highly recommended to install it for performance and productivity reasons.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;You can check if you already have Watchman installed by running watchman --version in your Terminal.&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#installing-yarn"&gt;
  &lt;/a&gt;
  Installing Yarn
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#why-yarn"&gt;
  &lt;/a&gt;
  Why Yarn?
&lt;/h4&gt;

&lt;p&gt;[Yarn is a command-line tool created by Facebook that (mostly) replaces NPM. At Infinite Red, we use it for almost everything. It lets us install NPM dependencies and run scripts -- and it's very fast!&lt;/p&gt;

&lt;p&gt;Yarn is optional for React Native projects, but I recommend it.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;You can check if you already have Yarn installed by running yarn --version in your Terminal.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setting-up-your-mac-for-ios-react-native-development"&gt;
  &lt;/a&gt;
  Setting up your Mac for iOS React Native Development
&lt;/h2&gt;

&lt;h4&gt;
  &lt;a href="#installing-xcode"&gt;
  &lt;/a&gt;
  Installing Xcode
&lt;/h4&gt;

&lt;p&gt;&lt;em&gt;Note: even if you've already installed Xcode, you should follow the steps here to ensure it's properly configured.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This part requires some patience, but you can do it!&lt;/p&gt;

&lt;p&gt;In the first page of this section, you should have started downloading Xcode. Hopefully it's finished by now! If so, click the Open button in the App Store or launch it from your Applications folder.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QL-FzLBZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oz29igryfyfc0z2kdahx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QL-FzLBZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oz29igryfyfc0z2kdahx.png" alt="Screenshot 2021-09-16 at 12.07.50 PM"&gt;&lt;/a&gt;&lt;br&gt;
First, you'll need to agree to their Xcode and Apple SDKs Agreement. I'm sure you'll read them carefully. ;-)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--giVMB_ub--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mrookzrowpx3et5e6hek.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--giVMB_ub--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mrookzrowpx3et5e6hek.png" alt="Screenshot 2021-09-16 at 12.08.16 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Xcode will then install some components before opening.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8Ye2Mq-m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p5j4jl32vyb9xwpmvi4u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8Ye2Mq-m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p5j4jl32vyb9xwpmvi4u.png" alt="Screenshot 2021-09-16 at 12.08.54 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now we need to install the &lt;strong&gt;Command Line Tools&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Hit ⌘+, (command + comma) to open Xcode Preferences or open it from the Xcode menu.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bd88XZyn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gk4z0yymitip9he5ci94.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bd88XZyn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gk4z0yymitip9he5ci94.png" alt="Screenshot 2021-09-16 at 12.09.43 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Go to the &lt;strong&gt;Locations&lt;/strong&gt; tab and select the item in the Command Line Tools drop-down.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yGLWIvVt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ro2gbxd3h0n9iqk8kh5a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yGLWIvVt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ro2gbxd3h0n9iqk8kh5a.png" alt="Screenshot 2021-09-16 at 12.10.27 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It'll ask for your password and then install the Command Line Tools.&lt;/p&gt;

&lt;p&gt;Next let's install an iOS simulator. In the same Preferences dialog, choose the &lt;strong&gt;Components&lt;/strong&gt; tab and click the down arrow next to the simulator you want to use. I chose the latest (iOS 13.2). It will ask for your password again - maybe even twice. I bet you're getting good at typing that in.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MDyl-oWW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wkqdvoo1fj2546du6ou5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MDyl-oWW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wkqdvoo1fj2546du6ou5.png" alt="Screenshot 2021-09-16 at 12.12.03 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This will take a while, so feel free to move on to the next section. When it's done, just close the Preferences dialog box. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#installing-cocoapods"&gt;
  &lt;/a&gt;
  Installing CocoaPods
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#why-cocoapods"&gt;
  &lt;/a&gt;
  Why CocoaPods?
&lt;/h4&gt;

&lt;p&gt;In order to bring in native third-party packages written in Objective-C or Swift, called CocoaPods, you'll want the CocoaPods CLI. This is sort of like NPM or Yarn, but for native iOS code. It's written in Ruby and requires Ruby (which is installed by default in macOS, although new versions of macOS are reportedly going to remove it!)&lt;/p&gt;

&lt;p&gt;*You can check if you already have CocoaPods installed by running pod --version in your Terminal. *&lt;/p&gt;

&lt;p&gt;You can install CocoaPods in a variety of different ways, but I recommend using Homebrew. If you have a Ruby version manager like RVM or rbenv, you can also &lt;a href="https://guides.cocoapods.org/using/getting-started.html"&gt;install using Rubygems&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Let's use &lt;strong&gt;Homebrew:&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;brew install cocoapods&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;When it's done, try pod --version to see if it installed correctly.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: it may warn you to add export LANG=en_US.UTF-8 to your .zshrc. Check the pod --version output carefully and follow the directions.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Once the iOS Simulator is done downloading (from the previous section), you should be ready to go! You can either move on to setting up Android now, or skip to the section Creating your first &lt;strong&gt;React Native app&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setting-up-your-mac-for-android-react-native-development"&gt;
  &lt;/a&gt;
  Setting up your Mac for Android React Native Development
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#installing-the-java-development-kit-jdk"&gt;
  &lt;/a&gt;
  Installing the Java Development Kit (JDK)
&lt;/h3&gt;

&lt;p&gt;You'll need the JDK (Java Development Kit) to compile Android apps. The JDK includes an interpreter for Java, the JRE (Java Runtime Environment), a compiler, and many other things critical for building Android apps (and Java apps in general).&lt;/p&gt;

&lt;p&gt;In our case, we're actually going to be using &lt;a href="https://openjdk.java.net/"&gt;OpenJDK&lt;/a&gt;, which is a free and open source version of the JDK.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#installing-jdk"&gt;
  &lt;/a&gt;
  Installing JDK
&lt;/h3&gt;

&lt;p&gt;With Homebrew, this is pretty straightforward.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;brew tap AdoptOpenJDK/openjdk&lt;/code&gt;&lt;br&gt;
&lt;code&gt;brew install --cask adoptopenjdk8&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;(Note with older versions of Homebrew, you may have to run brew cask install adoptopenjdk8 instead.)&lt;br&gt;
You may need to enter your password again.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#installing-android-studio"&gt;
  &lt;/a&gt;
  Installing Android Studio
&lt;/h3&gt;

&lt;p&gt;Hopefully Android Studio has finished downloading! Let's install it.&lt;/p&gt;

&lt;p&gt;First, find and run the DMG file that you downloaded. Drag the icon into the Applications folder.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jzzFmIMl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kk98i2ubsmmfqgrbzm6g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jzzFmIMl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kk98i2ubsmmfqgrbzm6g.png" alt="Screenshot 2021-09-16 at 12.24.16 PM"&gt;&lt;/a&gt;&lt;br&gt;
Now launch it from Spotlight or your Applications folder.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Mv-AIZyA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f43whv96d312nygh0k48.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Mv-AIZyA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f43whv96d312nygh0k48.png" alt="Screenshot 2021-09-16 at 12.24.49 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This will open a setup wizard. Just click Next, and then choose "Custom" in the Install Type screen.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--02wagucm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qlxjpptm59buyr93zkc2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--02wagucm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qlxjpptm59buyr93zkc2.png" alt="Screenshot 2021-09-16 at 12.25.58 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You might see a screen that looks like this:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--96pG-rlX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8k6eypfnf1bcjm0l1d0h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--96pG-rlX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8k6eypfnf1bcjm0l1d0h.png" alt="Screenshot 2021-09-16 at 12.26.47 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Just click Next to keep the default path.&lt;/p&gt;

&lt;p&gt;Choose dark or light theme, and then in the SDK Components Setup screen, make sure Android SDK Platform, API 29, Performance, and Android Virtual Device are all checked.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5tnYplxJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zgct6prgcqus3ydn73wf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5tnYplxJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zgct6prgcqus3ydn73wf.png" alt="Screenshot 2021-09-16 at 12.27.43 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click Next. In the next screen (Emulator Settings) leave everything at the default and click Finish to start downloading and installing the SDK components.&lt;/p&gt;

&lt;p&gt;Note that you may see a message saying System Extension Blocked, If so, click &lt;strong&gt;Open Security Preferences&lt;/strong&gt;, then click on the lock icon, enter your password, and click &lt;strong&gt;Allow&lt;/strong&gt;.     &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JRW9Kti6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rycwhc3orkyuizqhe39q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JRW9Kti6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rycwhc3orkyuizqhe39q.png" alt="Screenshot 2021-09-16 at 12.29.27 PM"&gt;&lt;/a&gt;&lt;br&gt;
Once it's done, we have more work to do. Let's go to Do that.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#installing-android-sdk"&gt;
  &lt;/a&gt;
  Installing Android SDK
&lt;/h3&gt;

&lt;p&gt;Not to be confused with the JDK (Java Development Kit), the Android SDK (Android Software Development Kit) contains Android-specific tools, such as Android libraries, emulators, a debugger, and more.&lt;/p&gt;

&lt;p&gt;Open up Android Studio and click the Configure button on the bottom right of the welcome screen and choose SDK Manager.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;NOTE: If you don't see the welcome screen, you can also go to the Android Studio Preferences, Appearance &amp;amp; Behavior, System Settings, Android SDK, and then find SDK Manager there.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--R36s-F-M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gg40hmettqwz30gn4sqg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--R36s-F-M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gg40hmettqwz30gn4sqg.png" alt="Screenshot 2021-09-16 at 12.32.34 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VW-qRi0M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f7eyr3ctfxnxbc42vip6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VW-qRi0M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f7eyr3ctfxnxbc42vip6.png" alt="Screenshot 2021-09-16 at 12.35.50 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Follow the next steps very carefully and check your work. It can cause some head-scratching problems if you don't!&lt;/p&gt;

&lt;p&gt;Click the &lt;strong&gt;Show Package Details&lt;/strong&gt; checkbox in the SDK Platforms tab (you should already be on it). &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OR1BB5BC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5x2fswgjr8ww1wadp1wt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OR1BB5BC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5x2fswgjr8ww1wadp1wt.png" alt="Screenshot 2021-09-16 at 12.38.08 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Find &lt;strong&gt;Android 9 (Pie)&lt;/strong&gt; and open it up, and then check these entries:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Android SDK Platform 28&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Intel x86 Atom_64 System Image&lt;/strong&gt; (note: do NOT select the similarly named "Intel x86 Atom System Image" by mistake) &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vmtNhx2G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ef5fxdwzyc0d4a2bcs12.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vmtNhx2G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ef5fxdwzyc0d4a2bcs12.png" alt="Screenshot 2021-09-16 at 12.40.01 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now go to the SDK Tools tab. Click "Show Package Details" in this tab too.&lt;/p&gt;

&lt;p&gt;Find "Android SDK Build-Tools" and check "28.0.3" (exactly that version). On mine, 29.0.2 is also checked, don't uncheck it (or whichever one is checked on yours) unless you intend to make your own Android Virtual Device which uses SDK 28. For the majority of you, just leave both 28.0.3 and whatever was already checked, and move along. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bWII973b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8y99ifeoowmrhu2eq2ko.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bWII973b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8y99ifeoowmrhu2eq2ko.png" alt="Screenshot 2021-09-16 at 12.41.43 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click "Apply" and "OK" on the &lt;strong&gt;Confirm Change dialog&lt;/strong&gt;. It should look something like this .&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qfICtJ77--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r27vmyqutiajg4ghpwt0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qfICtJ77--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r27vmyqutiajg4ghpwt0.png" alt="Screenshot 2021-09-16 at 12.42.29 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click "Accept" on each of the items in the License Agreement dialog and then "Next". When it's done, click "Finish".&lt;/p&gt;

&lt;p&gt;Wow! Let's move on to the next step. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#configuring-the-androidhome-environment-variable"&gt;
  &lt;/a&gt;
  Configuring the ANDROID_HOME environment variable
&lt;/h3&gt;

&lt;p&gt;When you run &lt;strong&gt;npx react-native run-android&lt;/strong&gt;, React Native needs to know where all of the Android dependencies live. This environment variable (ANDROID_HOME) is where it'll look.&lt;/p&gt;

&lt;p&gt;We also need to set up our path to allow our system to know where the emulator command and other commands live.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#configuring-androidhome-and-path"&gt;
  &lt;/a&gt;
  Configuring ANDROID_HOME and PATH
&lt;/h4&gt;

&lt;p&gt;Note that you could have various shells set up, such as zsh or bash, and will need to properly choose which one to add these lines to.&lt;/p&gt;

&lt;p&gt;Run this command to figure out what shell you are in:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;echo $0&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If it says &lt;strong&gt;-zsh&lt;/strong&gt;, you're in zsh. If it says &lt;strong&gt;-bash&lt;/strong&gt; you're in bash. If it's something else, hopefully you know what you're doing.&lt;/p&gt;

&lt;p&gt;Some notes:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;For &lt;strong&gt;bash&lt;/strong&gt;, you want to put these lines in ~/.bash_profile (probably) or &lt;strong&gt;~/.bashrc&lt;/strong&gt; (possibly).&lt;/li&gt;
&lt;li&gt;For &lt;strong&gt;zsh&lt;/strong&gt;, you want to put these lines in &lt;strong&gt;~/.zshrc&lt;/strong&gt; (probably).&lt;/li&gt;
&lt;li&gt;It's possible you may need to create one of these files if they don't already exist. Just run touch &lt;strong&gt;~/.&lt;/strong&gt; to create the proper file.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;em&gt;Note that if you customized where the Android SDK is, you'll need to change the first line. If you didn't customize anything, it's probably correct as-is.&lt;/em&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;export ANDROID_HOME=$HOME/Library/Android/sdk&lt;br&gt;
export PATH=$PATH:$ANDROID_HOME/emulator&lt;br&gt;
export PATH=$PATH:$ANDROID_HOME/tools&lt;br&gt;
export PATH=$PATH:$ANDROID_HOME/tools/bin&lt;br&gt;
export PATH=$PATH:$ANDROID_HOME/platform-tools&lt;br&gt;
&lt;/code&gt;&lt;br&gt;
Let's say you are on zsh and want to add these to &lt;strong&gt;~/.zshrc&lt;/strong&gt;. You can append them by running this command:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;echo "export ANDROID_HOME=\$HOME/Library/Android/sdk&lt;br&gt;
export PATH=\$PATH:\$ANDROID_HOME/emulator&lt;br&gt;
export PATH=\$PATH:\$ANDROID_HOME/tools&lt;br&gt;
export PATH=\$PATH:\$ANDROID_HOME/tools/bin&lt;br&gt;
export PATH=\$PATH:\$ANDROID_HOME/platform-tools" &amp;gt;&amp;gt; ~/.zshrc&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;When you're done, you can test it in a new Terminal window with this line:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;echo $ANDROID_HOME&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It should output something like /Users//Library/Android/sdk. You can also check your path:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;echo $PATH&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;and see if it's correct. Note (again) that you do need to open a new terminal window (with command+N or command+T) to load the new environment variables -- editing the file won't change them for the current terminal session.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-a-new-react-native-project"&gt;
  &lt;/a&gt;
  Creating a new React Native project
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;We're finally ready to spin up a new React Native project!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Open your Terminal back up and change directories to your code folder where you keep your projects.&lt;/p&gt;

&lt;p&gt;Now, let's run the React Native CLI via NPM's built-in "npx" command.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;npx react-native init ReactNativeApp&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This will start the process of building a brand-new React Native app. (Note that it may install a bunch of dependencies and spit out a bunch of warnings -- you can mostly ignore those.)&lt;/p&gt;

&lt;p&gt;Once it's created, change directories into the new app and start it up.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;cd ReactNativeApp&lt;br&gt;
for iOS:&lt;br&gt;
npx react-native run-ios&lt;br&gt;
for Android:&lt;br&gt;
npx react-native run-android&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If all goes well, you should see the iOS simulator or Android emulator start up with your new app!&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--95koWq9X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fszvjfyz1e421txdxaai.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--95koWq9X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fszvjfyz1e421txdxaai.png" alt="Screenshot 2021-09-16 at 12.56.06 PM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;CONGRATULATIONS!!! You're all set up.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Use Prometheus and Grafana to Visualize ISP Packet Loss</title>
      <author>Eric Yi</author>
      <pubDate>Thu, 16 Sep 2021 07:28:06 +0000</pubDate>
      <link>https://dev.to/ericyi/use-prometheus-and-grafana-to-visualize-isp-packet-loss-2eh</link>
      <guid>https://dev.to/ericyi/use-prometheus-and-grafana-to-visualize-isp-packet-loss-2eh</guid>
      <description>&lt;h2&gt;
  &lt;a href="#background"&gt;
  &lt;/a&gt;
  Background
&lt;/h2&gt;

&lt;p&gt;Since people started working from home, poor video/voice call connections have become a very annoying problem. &lt;/p&gt;

&lt;p&gt;However, it's hard for people to diagnose what is the root cause. People start blaming their ISPs, and I feel bad for them. In fact, there are a number of reasons that can cause poor video call connections, but if you can tell us with great confidence that my problem is not from your end.&lt;/p&gt;

&lt;p&gt;You should probably start monitoring your ISP  packet loss.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Grafana(You can register a free &lt;a href="https://grafana.com/auth/sign-in?plcmt=top-nav&amp;amp;cta=myaccount"&gt;Grafana Cloud account&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Prometheus (You can &lt;a href="https://prometheus.io/docs/prometheus/latest/installation/"&gt;install it&lt;/a&gt; on your Raspberry Pi or NAS)&lt;/li&gt;
&lt;li&gt;Open Source Router OS (OpenWRT, ClearOS, Asuswrt-Merlin etc)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#process"&gt;
  &lt;/a&gt;
  Process
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#set-up-pingexporter"&gt;
  &lt;/a&gt;
  Set Up ping_exporter
&lt;/h3&gt;

&lt;p&gt;SSH in to your router &amp;gt; Download ping_exporter&lt;/p&gt;

&lt;p&gt;You can check which version you need &lt;a href="https://github.com/czerwonk/ping_exporter/releases"&gt;here.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;wget https://github.com/czerwonk/ping_exporter/releases#:~:text&lt;span class="o"&gt;=&lt;/span&gt;ping_exporter_0.4.7_linux_arm64.tar.gz
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Extract the file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;tar&lt;/span&gt; &lt;span class="nt"&gt;-xf&lt;/span&gt; ping_exporter_&lt;span class="k"&gt;*&lt;/span&gt;.tar.gz ping_exporter
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Move to &lt;code&gt;/usr/local/bin&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;mv &lt;/span&gt;ping_exporter /usr/local/bin
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Choose the way you like to get the ISP's DNS servers on your router.&lt;/p&gt;

&lt;p&gt;For example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cat&lt;/span&gt; /etc/resolv.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create a &lt;code&gt;ping_exporter.yaml&lt;/code&gt; file under &lt;code&gt;/etc/ping_exporter/&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;targets:
  - &amp;lt;Your ISP&lt;span class="s1"&gt;'s DNS servers&amp;gt;

ping:
  interval: 2s
  timeout: 3s
  history-size: 42
  payload-size: 120
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create a &lt;code&gt;ping_exporter.service&lt;/code&gt; file under &lt;code&gt;/etc/systemd/system/&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;[&lt;/span&gt;Unit]
&lt;span class="nv"&gt;Description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;ping_exporter

&lt;span class="o"&gt;[&lt;/span&gt;Service]
&lt;span class="nv"&gt;User&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;root
&lt;span class="nv"&gt;ExecStart&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/local/bin/ping_exporter &lt;span class="nt"&gt;--config&lt;/span&gt;.path /etc/ping_exporter/ping_exporter.yaml
&lt;span class="nv"&gt;Restart&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;always

&lt;span class="o"&gt;[&lt;/span&gt;Install]
&lt;span class="nv"&gt;WantedBy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;multi-user.target
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Reload the service files:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;systemctl daemon-reload
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Start your &lt;code&gt;ping_exporter.service&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;systemctl start ping_exporter.service
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Check the status of your &lt;code&gt;ping_exporter.service&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;systemctl status ping_exporter.service
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To enable your &lt;code&gt;ping_exporter.service&lt;/code&gt; on every reboot:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;systemctl &lt;span class="nb"&gt;enable &lt;/span&gt;ping_exporter.service
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Get the results for testing via cURL:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;curl http://localhost:9427/metrics
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#add-a-target-to-prometheus"&gt;
  &lt;/a&gt;
  Add a target to Prometheus
&lt;/h3&gt;

&lt;p&gt;In your Prometheus configuration file, add the target in the &lt;code&gt;static_config&lt;/code&gt; section :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;- targets: &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"&amp;lt;Your router's ip/dns address&amp;gt;:9427"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The reload your Prometheus’ configuration.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-a-grafana-panel"&gt;
  &lt;/a&gt;
  Create a Grafana Panel
&lt;/h3&gt;

&lt;p&gt;Add a new Panel in your home network's dashboard, we are going to use the &lt;code&gt;ping_loss_percent&lt;/code&gt; metric.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;ping_loss_percent&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;instance&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"&amp;lt;Your router's ip/dns address&amp;gt;:9427"&lt;/span&gt;,target&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"&amp;lt;Your ISP's DNS servers&amp;gt;"&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--epqFwpjr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2y7h6c4o2lgt3mjmkzwd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--epqFwpjr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2y7h6c4o2lgt3mjmkzwd.png" alt="Packet Loss Pannel"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;⚠️  Please note for voice and video calls, any packet loss below 0.05 could be considered acceptable.&lt;/p&gt;

</description>
      <category>opensource</category>
    </item>
    <item>
      <title>Safari is problematic.</title>
      <author>intrnl</author>
      <pubDate>Thu, 16 Sep 2021 07:10:19 +0000</pubDate>
      <link>https://dev.to/intrnl/safari-is-problematic-2p6a</link>
      <guid>https://dev.to/intrnl/safari-is-problematic-2p6a</guid>
      <description>&lt;p&gt;I've never been an Apple user, maybe once, but not long enough to get into their ecosystem entirely, and yet I love what they do. I feel like they make great products, both hardware and software, but there's just one thing...&lt;/p&gt;




&lt;p&gt;Why is Apple so hostile towards the web platform?&lt;/p&gt;

&lt;p&gt;Safari is problematic, it does not support platforms other than iOS and macOS. If I want to get my website to work with those platforms, I have to invest into Apple's ecosystem.&lt;/p&gt;

&lt;p&gt;It's not cheap, especially when your biggest concerns are whether you're making enough money to put food into your mouth.&lt;/p&gt;

&lt;p&gt;So tell me, why do I have to support a browser, that is not only lacking a lot of the new API and features that makes it easy for us to build websites, but also costs a considerable fortune to get started?&lt;/p&gt;




&lt;p&gt;On my first point, this isn't something only I encounter. We can see that on &lt;a href="https://insights.developer.mozilla.org/reports/mdn-web-developer-needs-assessment-2020.html#technologies-browsers-that-cause-issues"&gt;MDN Web Developers Needs Assesment 2020 survey results&lt;/a&gt; that aside from Internet Explorer, a lot of web developers are having pains with Safari as well, and it's really high up there!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--H2KjzzPL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hnoblqx6nw8quyq35d7q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H2KjzzPL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hnoblqx6nw8quyq35d7q.png" alt="A list of browsers that cause issues, as ranked by developers"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;As for the second, while I do know that as a Linux user I have the option of using WebKitGTK to test, it should be known clearly that this is still not Safari.&lt;/p&gt;

&lt;p&gt;Without an Apple device, would I be able to know that there's a workaround for getting IndexedDB to work on macOS 11.4 and iOS 14.6, and that's &lt;a href="https://github.com/jakearchibald/safari-14-idb-fix"&gt;to keep poking it until it decides to work&lt;/a&gt;?&lt;/p&gt;

&lt;p&gt;Theoretically, I could get a second-hand device, but is that really the only choice I can make in this situation?&lt;/p&gt;




&lt;p&gt;I've felt the need to write this post because, like many web developers, the reason why I started as one is because I want to build things that can be enjoyed by everyone, and the web just happens to be the best platform for that.&lt;/p&gt;

&lt;p&gt;So it's just sad to see that I, as a web developer, is unable to support iOS and macOS users, which could be a significant amount, just because I'm simply unable to do so.&lt;/p&gt;

&lt;p&gt;We should be able to build and deliver a great experience to everyone, without worrying about the differences in what the user's browser might support.&lt;/p&gt;

&lt;p&gt;Thanks for reading this short post. There's still a ton of points worth exploring, but I feel like this series of blog posts by Alex Russell really goes deep into things like this and it's worth a read.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://infrequently.org/2021/04/progress-delayed/"&gt;Progress Delayed Is Progress Denied&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://infrequently.org/2021/07/hobsons-browser/"&gt;Hobson's Browser&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://infrequently.org/2021/08/webkit-ios-deep-dive/"&gt;iOS Engine Choice In Depth&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>webdev</category>
      <category>safari</category>
    </item>
    <item>
      <title>If you run a Github organisation you must do this now! </title>
      <author>Aniket Pal</author>
      <pubDate>Thu, 16 Sep 2021 06:48:09 +0000</pubDate>
      <link>https://dev.to/aniket762/if-you-run-a-github-organisation-you-must-do-this-now-3nc1</link>
      <guid>https://dev.to/aniket762/if-you-run-a-github-organisation-you-must-do-this-now-3nc1</guid>
      <description>&lt;p&gt;Looking to have your Github organisation standout? Wanting it to match all the beautiful and intricate design work that your organisation has developed? Don't want to add contributing guidelines and code of conduct to every project? Don't worry this blog got you covered! &lt;/p&gt;

&lt;p&gt;In this blog, I will walk you through how to update your GitHub organisation, add more personalisation, and help your organisation stand out from the crowd. Incase you don't know markdown refer &lt;a href="https://www.markdownguide.org/cheat-sheet/"&gt;this&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-the-special-repository"&gt;
  &lt;/a&gt;
  Creating the special repository 😎
&lt;/h2&gt;

&lt;p&gt;In order to customize your Github organisation first let's initialise repo in which we will work! &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---HNbrNdC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7jutx0luot24fhs0l669.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---HNbrNdC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7jutx0luot24fhs0l669.png" alt="Github organisation readme repository name"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Create a new repository with the name &lt;strong&gt;.github&lt;/strong&gt; and make sure to keep the repo public and initialise with a readme.  &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--teijr7tf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3b807j2hg91m2902fxdy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--teijr7tf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3b807j2hg91m2902fxdy.png" alt="Github organisation readme public init"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-the-profile"&gt;
  &lt;/a&gt;
  Creating the profile 🔥
&lt;/h2&gt;

&lt;p&gt;Create a directory with the name profile and initialise with a markdown file named README.md or click on the green button in the repo which says &lt;strong&gt;Add profile README&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--c4hIRfX---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/stqtb3od44i8w4h4dyho.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c4hIRfX---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/stqtb3od44i8w4h4dyho.png" alt="Github organisation readme profile init"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once the file has been created, you will see that GitHub knows you have accessed this special repo and presents you with the option to edit the file. Go ahead and click on this. You will get directed over to the file editor that is built into GitHub. Incase you have never created a readme make sure to visit &lt;a href="https://www.makeareadme.com/"&gt;this&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Dpep0FhD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5ct0puz3ro1rny3dti40.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Dpep0FhD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5ct0puz3ro1rny3dti40.png" alt="Github organisation profile readme init"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lets-add-coc-and-cg"&gt;
  &lt;/a&gt;
  Let's add COC and CG 🚀
&lt;/h2&gt;

&lt;p&gt;In general all the projects in a particular organisation follows the same code of conduct, contributing guidelines and security rules and it becomes difficult to add it in every project. Now you can add it in the &lt;strong&gt;.github&lt;/strong&gt; repo and make sure every contributor reads before sending a pull request! Incase you are confused on how it should look finally refer to &lt;a href="https://github.com/github/.github"&gt;this&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vGkWPc-J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kdl7rbssytjk47qdbzb6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vGkWPc-J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kdl7rbssytjk47qdbzb6.png" alt="Screenshot 2021-09-16 at 11.57.13 AM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion 🥷🏻
&lt;/h2&gt;

&lt;p&gt;Making sure that your org stand out from the rest is crucial. Take advantage of the ability to personalise your organisation to showcase your community guidelines.&lt;/p&gt;

&lt;p&gt;Have you already added the readme? I’d love to take a look at it! Feel free to share it with &lt;a href="https://www.linkedin.com/in/aniket-pal/"&gt;me&lt;/a&gt;. Would also love to collaborate on &lt;a href="https://github.com/Aniket762"&gt;github&lt;/a&gt; &lt;/p&gt;

</description>
      <category>opensource</category>
      <category>portfolio</category>
      <category>github</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Hello World! in 5 Different Programming languages</title>
      <author>Nibodh Daware</author>
      <pubDate>Thu, 16 Sep 2021 06:46:32 +0000</pubDate>
      <link>https://dev.to/nibodhdaware/hello-world-in-5-different-programming-languages-46ip</link>
      <guid>https://dev.to/nibodhdaware/hello-world-in-5-different-programming-languages-46ip</guid>
      <description>&lt;p&gt;Greetings!! from this blog post, I am starting a new series called the "Basics of Code 5 Different Languages" in this series as the title says we are going to study all the beginner concepts that are necessary to start with code ex. &lt;strong&gt;variables, functions, loops, conditionals&lt;/strong&gt; in 5 different programming languages namely: Python 🐍, Java ☕️, C/C++ (Both are basically the same), C# and Javascript (yes, Java and Javascript are different)&lt;/p&gt;

&lt;p&gt;In this post, we will be learning the cliché "printing the Hello World to the console" in the above-mentioned programming languages&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#python"&gt;
  &lt;/a&gt;
  Python 🐍
&lt;/h1&gt;




&lt;blockquote&gt;
&lt;p&gt;Python, O Python Near and Dear to my Heart ❤️ - Nibodh Daware&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Python was actually the first programming language that introduced me to this amazing world of programming&lt;br&gt;
Python among all is the most understandable and easy syntax&lt;br&gt;
Create a hello.py file and put the below code in it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;print("Hello World!")
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's it no semicolons no weird things like importing a print statement from classes inside of classes just plain simple print Hello World. This is the simplicity that python really is famous for.&lt;/p&gt;

&lt;p&gt;Now let's move on to the weird parts,&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#java-%EF%B8%8F"&gt;
  &lt;/a&gt;
  Java ☕️
&lt;/h1&gt;




&lt;blockquote&gt;
&lt;p&gt;BEAN LANGUAGE IS NEXT...🥔🥔🥔&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I haven't programmed in Java for a while last time I did I remember I was trying to make Minecraft mods but never got into my head&lt;br&gt;
I have heard a lot of praise from people who choose Java as their first language that it has basically changed their lives so I don't know.&lt;br&gt;
Create a hello.java file and put the below code in it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;class HelloWorld {
    public static void main(String[] args) {
        System.out.println("Hello, World!"); 
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Even though it has a long syntax but I love the fact that it was made with Object-Oriented Programming concepts in mind, and I think it is so good for so many people like the fact that it has so many better features as compared to the previous generation la#nguages like C++.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#c"&gt;
  &lt;/a&gt;
  C#\
&lt;/h1&gt;




&lt;blockquote&gt;
&lt;p&gt;Took me a long time to learn how to escape the # in markdown.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As you may have guessed I have tried C#\ too as I am way too &lt;em&gt;predictable&lt;/em&gt; it was in theory my first language as nearly everybody wanted to get into programming because of games and what better way to make games than &lt;strong&gt;Unity and C#&lt;/strong&gt;&lt;br&gt;
Create a hello.cs file and put the below code in it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;namespace HelloWorld
{
    class Hello {         
        static void Main(string[] args)
        {
            System.Console.WriteLine("Hello World!");
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Looks really similar to Java in my opinion.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#cc"&gt;
  &lt;/a&gt;
  C/C++
&lt;/h1&gt;




&lt;blockquote&gt;
&lt;p&gt;Origin of all!!!!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I can't much about it except I have to learn it in college and I don't think it will stop haunting my back anytime soon. I'm kidding I like C.&lt;/p&gt;

&lt;p&gt;This is Hello World in C:&lt;br&gt;
Create a hello.c file and put the below code in it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#include &amp;lt;stdio.h&amp;gt;

void main(){
      printf("Hello World");
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and this in C++&lt;br&gt;
Create a hello.cpp file and put the below code in it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#include &amp;lt;iostream&amp;gt;
using namespace std;

int main(){
    cout &amp;lt;&amp;lt; "Hello World" &amp;lt;&amp;lt; endl;
    return 0;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There are also other ways but this is how I like to write it.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#javascript-%EF%B8%8F"&gt;
  &lt;/a&gt;
  Javascript ☕️📄
&lt;/h1&gt;




&lt;blockquote&gt;
&lt;p&gt;Best for beginners&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This is also one of my favourite languages out of all the languages I touched the past year. If I start I am not going to stop talking so let's write the Hello World&lt;br&gt;
Create a hello.js file and put the below code in it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;console.log("Hello World");
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;By now you may know I like simple and easy languages. Here the console doesn't mean by the native command line but the browser inspect window.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hRJ5vrIm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631761627918/TSFBhHOG9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hRJ5vrIm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631761627918/TSFBhHOG9.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;




&lt;blockquote&gt;
&lt;p&gt;Choosing your first language is really important as it will predict your experience in this journey.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;All the languages that I have introduced you in this post you can't go wrong with them. I may recommend you to find out more about what these languages can do and then choose one of them.&lt;/p&gt;

</description>
      <category>python</category>
      <category>javascript</category>
      <category>cpp</category>
      <category>csharp</category>
    </item>
  </channel>
</rss>
