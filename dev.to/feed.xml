<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How to Remove a Virus Creating Shortcuts For Files and Folders in Pen Drives, Memory Cards and USB Drives (a Shortcut Virus)</title>
      <author>Michael Mirosnichenko</author>
      <pubDate>Wed, 17 Nov 2021 18:29:33 +0000</pubDate>
      <link>https://dev.to/hetmansoftware/how-to-remove-a-virus-creating-shortcuts-for-files-and-folders-in-pen-drives-memory-cards-and-usb-drives-a-shortcut-virus-lkf</link>
      <guid>https://dev.to/hetmansoftware/how-to-remove-a-virus-creating-shortcuts-for-files-and-folders-in-pen-drives-memory-cards-and-usb-drives-a-shortcut-virus-lkf</guid>
      <description>&lt;p&gt;Read this article to find out how to remove s shortcut virus turning files and folders into shortcuts How to restore data lost after such virus hits your system.&lt;/p&gt;

&lt;p&gt;Have your files and folders on a USB drive, pen drive or memory card turned into shortcuts? Is your USB drive, pen drive or memory card shown as a shortcut? Are you looking for a method to restore your data and remove the pesky shortcut virus? Is your computer infected, in spite of having an antivirus installed? Unfortunately, few antiviruses can protect you against this misfortune.&lt;/p&gt;

&lt;p&gt;With all those nasty effects, this type of virus is relatively harmless (especially if you think of ransomware and the like) so data can be restored, and the virus removed quite easily.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#types-of-shortcut-viruses"&gt;
  &lt;/a&gt;
  Types of shortcut viruses
&lt;/h2&gt;

&lt;p&gt;At the moment, the two types of shortcut viruses are the most widespread: the first type creates shortcuts instead of files and folders on a pen drive or memory card, while the other type creates shortcuts of removable drives instead of the actual pen drives, USB drives and memory cards.&lt;/p&gt;

&lt;p&gt;Names of the most widespread viruses:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Bundpil.Shortcu;&lt;/li&gt;
&lt;li&gt;Mal/Bundpil-LNK;&lt;/li&gt;
&lt;li&gt;Ramnit.CPL;&lt;/li&gt;
&lt;li&gt;Serviks.Shortcut;&lt;/li&gt;
&lt;li&gt;Troj/Agent-NXIMal/FakeAV-BW;&lt;/li&gt;
&lt;li&gt;Trojan.Generic.7206697 (B);&lt;/li&gt;
&lt;li&gt;Trojan.VBS.TTE (B);&lt;/li&gt;
&lt;li&gt;Trojan.VBS.TTE;&lt;/li&gt;
&lt;li&gt;VBS.Agent-35;&lt;/li&gt;
&lt;li&gt;VBS.Serviks;&lt;/li&gt;
&lt;li&gt;VBS/Autorun.EY worm;&lt;/li&gt;
&lt;li&gt;VBS/Autorun.worm.k virus;&lt;/li&gt;
&lt;li&gt;VBS/Canteix.AK;&lt;/li&gt;
&lt;li&gt;VBS/Worm.BH;&lt;/li&gt;
&lt;li&gt;W32.Exploit.CVE-2010_2568-1;&lt;/li&gt;
&lt;li&gt;W32.Trojan.Starter-2;&lt;/li&gt;
&lt;li&gt;W32/Sality.AB.2;&lt;/li&gt;
&lt;li&gt;Win32/Ramnit.A virus;&lt;/li&gt;
&lt;li&gt;Worm:VBS/Cantix.A;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#the-virus-turning-files-and-folders-into-shortcuts"&gt;
  &lt;/a&gt;
  The virus turning files and folders into shortcuts
&lt;/h2&gt;

&lt;p&gt;This virus duplicates your files and folders, then hides and replaces them. It is a combination of a Trojan and a worm. The danger is that you start a virus every time when you want to open your file or folder. When you start a virus, it multiplies itself and infects more and more files, and often installs more malware that can steal data on your passwords and credit cards stored on your PC.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-virus-turning-pen-drives-and-memory-cards-into-shortcuts"&gt;
  &lt;/a&gt;
  The virus turning pen drives and memory cards into shortcuts
&lt;/h2&gt;

&lt;p&gt;This is a thoroughbred Trojan that hides all removable drives connected to the computer and replaces them with shortcuts for these devices. Every time you click on the shortcut, you start the virus again and again, so it starts looking for any financial data on your PC, and sends it to its creators.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-can-be-done-if-the-virus-attacks-your-pc"&gt;
  &lt;/a&gt;
  What can be done if the virus attacks your PC
&lt;/h2&gt;

&lt;p&gt;Unfortunately, few antiviruses can recognize the threat in time and protect your PC from infestation. That is why the best protection is to disable autorun option for removable devices and avoid clicking on file, folder or disk shortcuts. Be attentive and don’t click on the shortcuts which you didn’t create. Instead of the usual double-click to open the drive, right-click on it and select Open in new window.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#recover-data-removed-by-the-virus"&gt;
  &lt;/a&gt;
  Recover data removed by the virus
&lt;/h2&gt;

&lt;p&gt;To restore effectively the data removed by this type of virus, use Hetman &lt;a href="https://hetmanrecovery.com/hard-drive-data-recovery-software"&gt;Partition Recovery&lt;/a&gt;. It uses low-level functions in working with the disk, so it can bypass the virus blocking and read all of your files.&lt;/p&gt;

&lt;p&gt;Download and install the program, then analyze the infected pen drive or memory card. Restore the information before cleaning the drive from the virus. The most reliable method is to clean the pen drive with the command DiskPart, which will remove all data.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#delete-the-virus-from-the-memory-card-or-usb-drive"&gt;
  &lt;/a&gt;
  Delete the virus from the memory card or USB drive
&lt;/h2&gt;

&lt;p&gt;After recovering data from the pen drive, you can clean it entirely with the help of diskpart. Removing all files and formatting the device may still miss the virus hiding in the boot sector, partition table or unallocated area of the drive. Watch the video to see how to clean a pen drive properly.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#remove-the-virus-from-the-pen-drive-with-the-command-prompt"&gt;
  &lt;/a&gt;
  Remove the virus from the pen drive with the Command Prompt
&lt;/h2&gt;

&lt;p&gt;This method cannot clean your pen drive from all kinds of viruses for sure, but it can help you to get rid of the shortcut virus. You don’t have to download and install any third-party utilities – all the work can be done with this Windows-integrated tool.&lt;/p&gt;

&lt;p&gt;Right-click on the Start menu and run the Command Prompt as Administrator.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VUwfAIBM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fa8umri1t86yx3h0ycc2.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VUwfAIBM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fa8umri1t86yx3h0ycc2.jpg" alt="Image description" width="612" height="393"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Enter the command j: and press Enter (where j: is the letter of the USB drive infected by a virus).&lt;/p&gt;

&lt;p&gt;Enter the command: attrib j:&lt;em&gt;.&lt;/em&gt; /d /s -h -r –s and press Enter:&lt;/p&gt;

&lt;p&gt;–h: shows all hidden files on the flash drive;&lt;br&gt;
–r: disables the read-only setting;&lt;br&gt;
–s: disables the system mark from all files.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#delete-the-virus-from-your-pc"&gt;
  &lt;/a&gt;
  Delete the virus from your PC
&lt;/h2&gt;

&lt;p&gt;The easiest and most reliable way to clean the computer from the virus is to completely reinstall Windows, with removing the system partition.&lt;/p&gt;

&lt;p&gt;However, if you are a power user, here’s one thing you can try:&lt;/p&gt;

&lt;p&gt;Modify the Windows registry to prevent the virus from auto-starting. Press the key shortcut Win + R, in the window that appear, type regedit and press Enter. Go to HKEY_CURRENT_USER / Software / Microsoft / Windows / CurrentVersion / Run.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--U8uVZbeL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dhai3o3x4cjzb0rlin55.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--U8uVZbeL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dhai3o3x4cjzb0rlin55.jpg" alt="Image description" width="788" height="341"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;View all keys located there. If you see an unusual name or location of a program, remove the entry. Often viruses are hiding under automatically generated names, such as sfdWQD234dcfF. Any keys starting VBS, INI, LINK or EXE files are potentially dangerous. However, you are the person to know for sure what programs are installed on your computer and are supposed to start with Windows, so it’s up to you to decide if a certain key has to be removed. To remove a key, select it by left click and press Del.&lt;/p&gt;

&lt;p&gt;Disable the virus auto-start in Windows Services. Press the key shortcut Win + R, in the window that appears, type msconfig and press Enter. In the window that opens, jump to the tab Services. View them and disable all that seem to be suspicious.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PTz2ZKV3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nc5w2b1kxitzn3gcj9ew.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PTz2ZKV3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nc5w2b1kxitzn3gcj9ew.jpg" alt="Image description" width="577" height="390"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Disable the apps that are started automatically via Task Manager (For Windows 8 and older) Press Ctrl + Shift + Esc and go to the tab Startup. To prevent a suspicious app from starting, right-click on it and select Disable.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rWGdPNG2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/web9zlb1rgqkqorib5ze.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rWGdPNG2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/web9zlb1rgqkqorib5ze.jpg" alt="Image description" width="785" height="647"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Read the &lt;a href="https://hetmanrecovery.com/recovery_news/how-to-remove-virus-creating-shortcuts-to-files-and-folders.htm"&gt;full article&lt;/a&gt; with all additional video tutorials. Also visit our &lt;a href="https://www.youtube.com/channel/UCu-D9QnPsAPn7AtxL4HXLUg"&gt;Youtube channel&lt;/a&gt;, there are over 400 video tutorials.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>tutorial</category>
      <category>testing</category>
      <category>security</category>
    </item>
    <item>
      <title>Make money as a developer</title>
      <author>Vik 📈</author>
      <pubDate>Wed, 17 Nov 2021 18:28:08 +0000</pubDate>
      <link>https://dev.to/heyvik/make-money-as-a-developer-2ngj</link>
      <guid>https://dev.to/heyvik/make-money-as-a-developer-2ngj</guid>
      <description>&lt;p&gt;If you’re a programming geek and not making any money online, you are missing out BIG. There are plenty of ways to earn as a developer, in this blog, I am going to discuss about some of these ways.&lt;/p&gt;

&lt;p&gt;There are many incredible ways to make money online with programming skills. If you learn various coding languages and programs, then you can offer your skills online and start generating cash fast.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#1-blogging"&gt;
  &lt;/a&gt;
  1. Blogging
&lt;/h4&gt;

&lt;p&gt;Just as me, you can write blogs about anything you want and earn money. There are many platforms in which you can write blogs.&lt;/p&gt;

&lt;p&gt;If you do blogging in a platform where the platform itself dont pay you, no worries you can earn with different ways out there.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;offering coding skills online&lt;/li&gt;
&lt;li&gt;charging for premium content&lt;/li&gt;
&lt;li&gt;earning through affiliate links&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#2-freelancing"&gt;
  &lt;/a&gt;
  2. Freelancing
&lt;/h4&gt;

&lt;p&gt;You must have heard this word, if you have any skill like web development, android development or anything you can start a freelancing website.&lt;/p&gt;

&lt;p&gt;Same as blogging there are many platforms in which you can freelance, and the cool part is you dont need a platform, you can start your own website.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/vikstack"&gt;For more of these content, you can follow me on twitter&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#3-selling-templates-or-themes"&gt;
  &lt;/a&gt;
  3. Selling Templates or Themes
&lt;/h4&gt;

&lt;p&gt;You can start making Templates and Theme ( even of wordpress ) and sell them, people earn a lot by doing this.&lt;/p&gt;

&lt;p&gt;You might be confused on where to sell your HTML Templates?&lt;/p&gt;

&lt;p&gt;No Worries I got it for you&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;themeforest. net&lt;/li&gt;
&lt;li&gt;monsterone. com&lt;/li&gt;
&lt;li&gt;codester. com&lt;/li&gt;
&lt;li&gt;creativemarket. com&lt;/li&gt;
&lt;li&gt;designhill. com&lt;/li&gt;
&lt;li&gt;templatemonster. com&lt;/li&gt;
&lt;li&gt;mojomarketplace. com&lt;/li&gt;
&lt;li&gt;gumroad.com&lt;/li&gt;
&lt;li&gt;your own website&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#4-develop-a-app-or-website"&gt;
  &lt;/a&gt;
  4. Develop a App or Website
&lt;/h4&gt;

&lt;p&gt;You can just start your own app and website and earn through it, most of the programmers know this and dont need much explanation. There are plenty of ways from which you can earn in an app or website.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#5-sell-courses"&gt;
  &lt;/a&gt;
  5. Sell Courses
&lt;/h4&gt;

&lt;p&gt;Last but not the least, you can sell your courses, if you are good at teaching stuff and have a good programming knowledge you can surely do it.&lt;/p&gt;

&lt;p&gt;Good Luck for the journey of earning through code, Thanks&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>programming</category>
      <category>productivity</category>
      <category>discuss</category>
    </item>
    <item>
      <title>Cucumber BDD Framework</title>
      <author>Anne Quinkenstein</author>
      <pubDate>Wed, 17 Nov 2021 18:27:42 +0000</pubDate>
      <link>https://dev.to/annequinkenstein/cucumber-bdd-framework-2n4o</link>
      <guid>https://dev.to/annequinkenstein/cucumber-bdd-framework-2n4o</guid>
      <description>&lt;h1&gt;
  &lt;a href="#basics-of-behaviour-driver-development"&gt;
  &lt;/a&gt;
  Basics of Behaviour Driver Development
&lt;/h1&gt;

&lt;p&gt;Often there is a Problem of Secifying the needs of the Business, communicate it to Development and Testing. There are mismatches between their perceptions. &lt;/p&gt;

&lt;p&gt;-&amp;gt; write a Requirement in a formal standard/ template in a language which is a common words. Dev, QA and Business can express the Requriment in that language. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--M_SrPkK9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ynq7lx90ohovrmofeeio.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--M_SrPkK9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ynq7lx90ohovrmofeeio.png" alt="Image description" width="676" height="258"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#scenario-template"&gt;
  &lt;/a&gt;
  Scenario template
&lt;/h3&gt;

&lt;p&gt;In order to (achieve something/ Business Outcome)&lt;br&gt;
as a (user)&lt;br&gt;
i want to do (this). &lt;/p&gt;

&lt;p&gt;Example: &lt;br&gt;
In oder to pay credit card payment&lt;br&gt;
as a NetBanking sole owner who has credit section access&lt;br&gt;
i want to navigate to credit card section, enter amount and process my payment. &lt;/p&gt;

&lt;p&gt;Dev uses this scenario to develop &amp;amp; tester uses it to write testcases(positiv &amp;amp; negativ /Payment is not happening) &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#testcases"&gt;
  &lt;/a&gt;
  Testcases
&lt;/h2&gt;

&lt;p&gt;Given (what you need to have to perform an action)&lt;br&gt;
When (performs action) &lt;br&gt;
Then (desired outcome for the user) &lt;/p&gt;

&lt;p&gt;Example: &lt;br&gt;
Given: An account with sero balance&lt;br&gt;
When: i navigate to Credit card Payment Section and click to submit by giving amount&lt;br&gt;
Then: it should show a warning - funds&lt;/p&gt;

&lt;p&gt;Given : An account with sufficent balance who does not have credit card&lt;br&gt;
When: I navigate to Credit card Payment Section and amount&lt;br&gt;
Then :You don't have to access /warning message &lt;/p&gt;

&lt;p&gt;Business values are easy detectable. (in scenario)&lt;br&gt;
Testcases are countable for each scenario. &lt;br&gt;
Using a standard template for both manual and automation testing. &lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#cucumber-framework-architecture-amp-core-functionalities"&gt;
  &lt;/a&gt;
  Cucumber Framework Architecture &amp;amp; Core Functionalities
&lt;/h1&gt;
&lt;h2&gt;
  &lt;a href="#setup"&gt;
  &lt;/a&gt;
  Setup
&lt;/h2&gt;

&lt;p&gt;Install Cucmber Plugin into eclipse from eclipse market place&lt;br&gt;
Cucumber expects a Selenium scaletton, optains by Maven &lt;br&gt;
Open a Maven Project with quickstart template (maven-architect-template) &lt;br&gt;
Artifactid and GroupId(Projectname)&lt;br&gt;
Maven: libaries in pom.xml: Cucumber JVM Java &amp;amp;&amp;amp; Cucumber JVM JUnit&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#cucmber-core-functionalities"&gt;
  &lt;/a&gt;
  Cucmber Core Functionalities
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Feature File&lt;/em&gt; - "When i click on button"&lt;br&gt;
&lt;em&gt;StepDefinition File&lt;/em&gt;  - mapped Code to click button &lt;br&gt;
&lt;em&gt;JUnit TestRunner&lt;/em&gt; - triggers all Testcase (related Documents) &lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#feature-file"&gt;
  &lt;/a&gt;
  Feature File
&lt;/h4&gt;

&lt;p&gt;under src/test/java create Package features &lt;br&gt;
inside create "file" - zB Login.feature (provide .feature)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="nl"&gt;Feature:&lt;/span&gt; &lt;span class="nc"&gt;Application&lt;/span&gt; &lt;span class="nc"&gt;Login&lt;/span&gt; 

&lt;span class="nl"&gt;Scenario:&lt;/span&gt; &lt;span class="nc"&gt;Home&lt;/span&gt; &lt;span class="n"&gt;page&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="n"&gt;login&lt;/span&gt; 
&lt;span class="nc"&gt;Given&lt;/span&gt; &lt;span class="nc"&gt;User&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;landing&lt;/span&gt; &lt;span class="n"&gt;page&lt;/span&gt; 
&lt;span class="nc"&gt;When&lt;/span&gt; &lt;span class="nc"&gt;User&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="n"&gt;logging&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="n"&gt;with&lt;/span&gt; &lt;span class="n"&gt;username&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt;
&lt;span class="nc"&gt;Then&lt;/span&gt; &lt;span class="n"&gt;home&lt;/span&gt; &lt;span class="n"&gt;page&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="n"&gt;populated&lt;/span&gt; 
&lt;span class="nc"&gt;And&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt; &lt;span class="n"&gt;infos&lt;/span&gt; &lt;span class="n"&gt;about&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="n"&gt;bills&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="n"&gt;displayed&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;AddOn in Eclipse to highlight the cucumer Syntax: Natural 0.7... &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YlsO1pcW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x4zeznk5jf4dbidjh6iq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YlsO1pcW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x4zeznk5jf4dbidjh6iq.png" alt="Image description" width="83" height="76"&gt;&lt;/a&gt;&lt;br&gt;
-&amp;gt; no defition found (no code implementation yet) &lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#stepdefinition-file"&gt;
  &lt;/a&gt;
  StepDefinition File
&lt;/h4&gt;

&lt;p&gt;under src/test/java create Package stepDefinition&lt;br&gt;
under this, stepDefition Java Class&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="nd"&gt;@Given&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"^User is on landing page$"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;user_is_on_landing_lage&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt;
&lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="c1"&gt;//navigate to the landing page }&lt;/span&gt;
&lt;span class="nd"&gt;@When&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"^User is logging in with username and password$"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;user_is_logging_in&lt;/span&gt;&lt;span class="o"&gt;(){...}&lt;/span&gt;
&lt;span class="nd"&gt;@Then&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"^home page is populated$"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;home_page_is_populated&lt;/span&gt;&lt;span class="o"&gt;(){...}&lt;/span&gt;
&lt;span class="nd"&gt;@And&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"^all infos about you bills is displayed$"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;all_infos_about_bills_are_displayed&lt;/span&gt;&lt;span class="o"&gt;(){...}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;create mapping stepDefinition&lt;/em&gt; &lt;br&gt;
install Extention from Chrome Webstore: Tidy Gherkin app &lt;br&gt;
 &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--faBRqqea--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e7kie62mh9zjc8nvg50j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--faBRqqea--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e7kie62mh9zjc8nvg50j.png" alt="Image description" width="131" height="115"&gt;&lt;/a&gt; chrome://apps -&amp;gt;  click, an window will open where you can paste your feature file and get the tidy cucumber java (or ...) code&lt;br&gt;
(adjust package-/classname accourdingly to your code) &lt;/p&gt;

&lt;p&gt;or just run tests and copy code from the konsole&lt;/p&gt;

&lt;p&gt;jump from a featurefile-sentence -&amp;gt; to stepDefinition: Crtl + Click&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#running-tests-with-testrunner-file"&gt;
  &lt;/a&gt;
  Running Tests with TestRunner File
&lt;/h3&gt;

&lt;p&gt;preferable under the same roof with the stepDefinitions Package src/test/java create Package cucumberOptions and in there class TestRunner &lt;br&gt;
Annotations:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="nd"&gt;@RunWith&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Cucumber&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nd"&gt;@CUcumberOptions&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;features&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"src/test/java/features"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; 
    &lt;span class="n"&gt;glue&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"stepDefinitions"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;packages stepDefitions + cucumberOptions should have same parents &lt;/p&gt;

&lt;p&gt;variables&lt;br&gt;
feature file: put it in double quotes -Code: display it as regular expression in Annotation of function + passed as arguments in Method (so nr. of arguments should match nr. of parameters) &lt;/p&gt;

</description>
      <category>selenium</category>
      <category>java</category>
      <category>cucumber</category>
      <category>ghwerkin</category>
    </item>
    <item>
      <title>React Django - Open-Source Full-Stack Seed Project</title>
      <author>Sm0ke</author>
      <pubDate>Wed, 17 Nov 2021 18:17:16 +0000</pubDate>
      <link>https://dev.to/sm0ke/react-django-open-source-full-stack-seed-project-1kog</link>
      <guid>https://dev.to/sm0ke/react-django-open-source-full-stack-seed-project-1kog</guid>
      <description>&lt;p&gt;Hello Coders! &lt;/p&gt;

&lt;p&gt;This article presents an open-source full-stack project that uses a modern &lt;strong&gt;React UI&lt;/strong&gt; (styled with Chakra) powered by a simple &lt;strong&gt;Django API&lt;/strong&gt; Server (also free): &lt;a href="https://appseed.us/product/django-react-purity-dashboard"&gt;Django React Purity&lt;/a&gt; can be used as a starter codebase for a future end-product or simply by beginners for eLearning activities. For newcomers, &lt;strong&gt;React&lt;/strong&gt; is a popular JavaScript library for coding user interfaces baked by Facebook and &lt;strong&gt;Django&lt;/strong&gt; is a leading web framework used to manage the backend logic. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Thanks for reading!&lt;/em&gt; - Content provided by &lt;strong&gt;&lt;a href="https://appseed.us/"&gt;App Generator&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;ul&gt;
&lt;li&gt;✨ &lt;a href="https://appseed.us/product/django-react-purity-dashboard"&gt;Django React Purity&lt;/a&gt; - product page&lt;/li&gt;
&lt;li&gt;✨ &lt;a href="https://github.com/app-generator/django-react-purity-dashboard"&gt;Django React Purity&lt;/a&gt; - Source code&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--udcgZGpn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p9tejjb9kmajnmrpajnc.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--udcgZGpn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p9tejjb9kmajnmrpajnc.gif" alt="React Django - Open-Source Full-Stack Seed Project, GIF animated presentation" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#product-features"&gt;
  &lt;/a&gt;
  Product Features
&lt;/h2&gt;

&lt;p&gt;This free product comes with a &lt;code&gt;production-ready&lt;/code&gt; JWT Authentication flow, Docker scripts for UI &amp;amp; the backend and a permissive license that permits unlimited copies for hobby &amp;amp; commercial end-products.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Innovative &lt;strong&gt;Chakra UI&lt;/strong&gt; Design &lt;/li&gt;
&lt;li&gt;React, Redux, Redux-persist&lt;/li&gt;
&lt;li&gt;Authentication: JWT Login/Register/Logout&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Full-stack Ready&lt;/strong&gt; using a &lt;strong&gt;Django API Server&lt;/strong&gt; (open-source project):

&lt;ul&gt;
&lt;li&gt;Django / DRF / SQLite3 - a simple, easy to use backend&lt;/li&gt;
&lt;li&gt;Authentication with JWT (login, logout, register)&lt;/li&gt;
&lt;li&gt;Docker, Unitary tests&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The product is built using a &lt;code&gt;two-tier&lt;/code&gt; pattern where the React frontend is decoupled logically and physically from the API backend. To use the product, a short action list must be completed successfully: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;Compile and start&lt;/code&gt; the &lt;strong&gt;Django API Backend&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;by default the server starts on port &lt;code&gt;5000&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;Compile and start&lt;/code&gt; the &lt;strong&gt;React UI&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;UI will start on port &lt;code&gt;3000&lt;/code&gt; and expects a running backend on port &lt;code&gt;5000&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;Configuration&lt;/code&gt; (Optional)

&lt;ul&gt;
&lt;li&gt;Change the API port&lt;/li&gt;
&lt;li&gt;Configure the API port used by the React UI to communicate with the backend &lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#start-in-docker"&gt;
  &lt;/a&gt;
  Start in Docker
&lt;/h2&gt;

&lt;p&gt;Probably the fastest way to use the product in a local environment is via Docker. Both parts of the product can be used in Docker.&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step #1&lt;/strong&gt; - Clone/Download the source code&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git clone  https://github.com/app-generator/django-react-purity-dashboard.git
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step #2&lt;/strong&gt; - Start the Django API&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;django-api
&lt;span class="nv"&gt;$ &lt;/span&gt;docker-compose pull   &lt;span class="c"&gt;# download dependencies &lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;docker-compose build  &lt;span class="c"&gt;# local set up&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;docker-compose up     &lt;span class="c"&gt;# start the app &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;At this point, the API should be up &amp;amp; running at &lt;code&gt;http://localhost:5000&lt;/code&gt;, and we can test the interface using POSTMAN or &lt;code&gt;curl&lt;/code&gt;.&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step #3&lt;/strong&gt; - Start the React UI (using another terminal)&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;react-ui
&lt;span class="nv"&gt;$ &lt;/span&gt;docker-compose pull   &lt;span class="c"&gt;# download dependencies &lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;docker-compose build  &lt;span class="c"&gt;# local set up&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;docker-compose up     &lt;span class="c"&gt;# start the app &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once all the above commands are executed, the &lt;code&gt;React UI&lt;/code&gt; should be visible in the browser. By default, the app redirects the guest users to authenticate. &lt;br&gt;
After we register a new user and Sign IN, all the private pages become accessible.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XooetSit--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hkidmsywh8h6lk8ahl4x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XooetSit--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hkidmsywh8h6lk8ahl4x.png" alt="React Django Purity - Login Page." width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;React Django Purity - User profile page&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--k0mcclnU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kjn6t0yko85676wr4hls.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k0mcclnU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kjn6t0yko85676wr4hls.png" alt="React Django Purity - User profile Page." width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;React Django Purity - Main Dashboard Page&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jv6BEpaX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c0wajo35lhfojtxvdj58.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jv6BEpaX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c0wajo35lhfojtxvdj58.png" alt="React Django Purity - Main Dashboard Page" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Thanks for reading!&lt;/strong&gt; For more resources, please access: &lt;/p&gt;
&lt;/blockquote&gt;




&lt;ul&gt;
&lt;li&gt;✨ AppSeed for &lt;a href="https://appseed.us/support"&gt;support&lt;/a&gt; via email and &lt;a href="https://appseed.us/support"&gt;Discord&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;✨ &lt;a href="https://appseed.us/apps/react"&gt;React Apps&lt;/a&gt; - a curated index with Full-Stack Starters &lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>webdev</category>
      <category>react</category>
      <category>django</category>
      <category>opensource</category>
    </item>
    <item>
      <title>How to use Leetcode more efficiently
</title>
      <author>Daniel</author>
      <pubDate>Wed, 17 Nov 2021 18:12:12 +0000</pubDate>
      <link>https://dev.to/dannyhabibs/how-to-use-leetcode-more-efficiently-j7m</link>
      <guid>https://dev.to/dannyhabibs/how-to-use-leetcode-more-efficiently-j7m</guid>
      <description>&lt;p&gt;tldr; Stop doing random LC problems and make a study plan. Layout all of the topics, rate yourself from 1-10, solve problems until each topic is at a 9 or a 10. Then teach&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-problem"&gt;
  &lt;/a&gt;
  The Problem
&lt;/h2&gt;

&lt;p&gt;Too many people are doing random Leetcode problems without any framework for choosing which problem to solve. They either follow a pre-canned list of problems off Leetcode, or just pick a problem at random every day. This method might be ok to start, but you will soon need to start adding more structure to your studying if you want to grow. Everyone digests different concepts at different rates. You need a tailored study plan to use your time more efficiently.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-a-plan"&gt;
  &lt;/a&gt;
  Create a plan
&lt;/h2&gt;

&lt;p&gt;It is important to select practice problems with intention, and to track yourself as you progress. Layout all of the relevant topics for your interview, from strings to DP and rate yourself 1-10 on them. Your goal is to get your self-rating in all of these topics to a 9 or 10. Example, if linked lists are rated at a 4, you should be reading up on the concept and solving problems until they are at 9 or a 10.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-confirm-youve-mastered-a-concept"&gt;
  &lt;/a&gt;
  How to confirm you’ve mastered a concept?
&lt;/h2&gt;

&lt;p&gt;Teach others! There is nothing that will help you find the gaps in your knowledge faster than teaching that concept to someone who is trying to learn. You will be forced to articulate all of the thoughts in your head, and simplify them so they are digestible. As you are explaining different concepts, and attempting to answer your student’s questions, the gaps in your knowledge will be come clear. &lt;/p&gt;

&lt;p&gt;When you are able to teach others the ins and outs of a particular topic, you will be in a good place and can move on to mastering another topic.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#when-should-i-start-doing-random-leetcode-questions"&gt;
  &lt;/a&gt;
  When should I start doing “random” leetcode questions?
&lt;/h2&gt;

&lt;p&gt;Taking on random questions has its place, after you’ve gotten the different concepts to a rating of 9 or 10. Grabbing a random question and learning how to categorize and solve it is an important skill in itself to master. The problem is that too many people are trying to skip diving deep into the fundamentals of the different topics before simulating the interview environment.&lt;/p&gt;

&lt;p&gt;(Shoutout to Ching#4264 in the discord for raising this point)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#join-the-community"&gt;
  &lt;/a&gt;
  Join the community
&lt;/h2&gt;

&lt;p&gt;I run a private study group for engineers who are serious about getting jobs in Big Tech, &lt;a href="https://fangprep.notion.site/Big-Tech-Private-Study-Group-9d209cbfb57f4a5b858872798066ac8c"&gt;signup here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Need advice on how to break into Big Tech? &lt;a href="https://discord.com/invite/M8944Xz26m"&gt;Join the discord&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Twitter: &lt;a href="https://twitter.com/DannyHabibs"&gt;@dannyhabibs&lt;/a&gt;&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>interview</category>
      <category>beginners</category>
    </item>
    <item>
      <title>OOP Principles</title>
      <author>Greg Ross</author>
      <pubDate>Wed, 17 Nov 2021 17:23:38 +0000</pubDate>
      <link>https://dev.to/gregrossdev/oop-principles-4ag0</link>
      <guid>https://dev.to/gregrossdev/oop-principles-4ag0</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;code concepts in my words &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#building-blocks"&gt;
  &lt;/a&gt;
  Building Blocks
&lt;/h2&gt;

&lt;p&gt;-&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#objects"&gt;
  &lt;/a&gt;
  Objects
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;An object is an entity that has states and behaviors.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#classes"&gt;
  &lt;/a&gt;
  Classes
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;A class is a template or blueprint from which objects are created.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h2&gt;
  &lt;a href="#main-principles"&gt;
  &lt;/a&gt;
  Main Principles
&lt;/h2&gt;

&lt;p&gt;-&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#encapsulation"&gt;
  &lt;/a&gt;
  Encapsulation
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Encapsulation is a process of wrapping code and data together into a single unit.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#inheritance"&gt;
  &lt;/a&gt;
  Inheritance
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Inheritance is a mechanism in which one object acquires all the states and behaviors of a parent object.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#abstraction"&gt;
  &lt;/a&gt;
  Abstraction
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Abstraction is a process of hiding the implementation details and showing only functionality to the user.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4&gt;
  &lt;a href="#interface"&gt;
  &lt;/a&gt;
  Interface
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;An interface is a blueprint of a class.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#polymorphism"&gt;
  &lt;/a&gt;
  Polymorphism
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Polymorphism is the ability of an object to take on many forms.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4&gt;
  &lt;a href="#method-overloading"&gt;
  &lt;/a&gt;
  Method overloading
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;If a class has multiple methods that have same name but different parameters, this is known as method overloading.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4&gt;
  &lt;a href="#method-overriding"&gt;
  &lt;/a&gt;
  Method overriding
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;If a subclass has the same method as declared in the super class, this is known as method overriding.&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>beginners</category>
      <category>programming</category>
      <category>codenewbie</category>
      <category>java</category>
    </item>
    <item>
      <title>Difference between parameter and argument</title>
      <author>icncsx</author>
      <pubDate>Wed, 17 Nov 2021 17:21:37 +0000</pubDate>
      <link>https://dev.to/icncsx/difference-between-parameter-and-argument-50p0</link>
      <guid>https://dev.to/icncsx/difference-between-parameter-and-argument-50p0</guid>
      <description>&lt;p&gt;The two terms are used interchangeably in conversation, but they mean different things. You pass arguments when calling a method. And you use parameters within the method body.&lt;/p&gt;

&lt;p&gt;As most if not all programming languages are copy-by-value, the two are equivalent, only differing in the context. The two terms exist to distinguish whether you are talking about a method definition or a method call. When you're calling a method, you pass in arguments. When you're actually in the method body, you are using parameters. Arguments get copied-by-value to parameters.&lt;/p&gt;

</description>
      <category>programming</category>
      <category>tutorial</category>
      <category>computerscience</category>
      <category>shorts</category>
    </item>
    <item>
      <title>Announcing vite-react-ts-extended</title>
      <author>Ryota Murakami</author>
      <pubDate>Wed, 17 Nov 2021 17:11:52 +0000</pubDate>
      <link>https://dev.to/malloc007/announcing-vite-react-ts-extended-2093</link>
      <guid>https://dev.to/malloc007/announcing-vite-react-ts-extended-2093</guid>
      <description>&lt;h2&gt;
  &lt;a href="#2020-webpack-amp-babel-is-de-facto"&gt;
  &lt;/a&gt;
  2020 Webpack &amp;amp; Babel is de facto
&lt;/h2&gt;

&lt;p&gt;This year there has been a big movement in build tools in the JavaScript community.&lt;br&gt;&lt;br&gt;
In 2020, &lt;a href="https://2020.stateofjs.com/en-US/technologies/"&gt;Webpack&lt;/a&gt;, especially in combination with Babel, seemed to be the de facto standard for build tools.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#2021-new-bundler-esbuild-by-golang"&gt;
  &lt;/a&gt;
  2021 New bundler ESBuild by Golang
&lt;/h2&gt;

&lt;p&gt;However, in 2021, the popularity of a completely new development environment/build tool that does not include Webpack has skyrocketed.&lt;br&gt;
Yes, it is &lt;a href="https://vitejs.dev/"&gt;Vite&lt;/a&gt;.&lt;br&gt;
Super-fast DevServer, super-fast HMR, super-fast build with &lt;a href="https://esbuild.github.io/"&gt;ESBuild&lt;/a&gt; that starts without build.&lt;br&gt;
Vite solves the problem that Webpack+Babel stacks used to have, that Local environment and Production builds become noticeably slower in proportion to the scale of the project.&lt;br&gt;
In &lt;a href="https://www.npmtrends.com/vite-vs-create-react-app"&gt;NPM Trend&lt;/a&gt;, you can see that Vite has overtaken the number of downloads of create-react-app since July.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#nextjs-adopt-swc-over-the-babel"&gt;
  &lt;/a&gt;
  Next.js adopt SWC over the Babel
&lt;/h2&gt;

&lt;p&gt;The Next.js team has also responded by abandoning Babel and introducing &lt;a href="https://github.com/swc-project/swc"&gt;SWC&lt;/a&gt;, an ultra-fast TypeScript compiler, in Next v12.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#vitereacttsextended"&gt;
  &lt;/a&gt;
  vite-react-ts-extended
&lt;/h2&gt;

&lt;p&gt;What does that mean for us React Developers?&lt;br&gt;
The answer is that Create React App is no longer a good choice for many use cases.&lt;br&gt;
After four to five years of use as a Production Web Service, a demo for libraries, etc., and as a front-end for Toy App, the create react app seems to have become difficult to keep up with.ASo I created a Vite template for React-TypeScript that inherits the good points of create-react-app.&lt;/p&gt;

&lt;p&gt;The Vite default &lt;code&gt;react-ts&lt;/code&gt; template lacked Jest and ESLint (Prettier integrated).&lt;br&gt;
TailwindCSS has also been set up, which is useful if you want to start writing demo or experimental code right after installation.&lt;/p&gt;

&lt;p&gt;Jest comes pre-installed with React-Testing-Library, Hook-Testing-Library, MSW, and TypeScript support.&lt;/p&gt;

&lt;p&gt;You can easily install and run Jest with the following commands, &lt;/p&gt;

&lt;p&gt;yarn&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npx degit laststance/vite-react-ts-extended myapp
cd myapp
yarn install
yarn dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;npm&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npx degit laststance/vite-react-ts-extended myapp
cd myapp
npm install
npm run dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;github: &lt;a href="https://github.com/laststance/vite-react-ts-extended"&gt;https://github.com/laststance/vite-react-ts-extended&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;so I would be happy if you could use it as a way to build a instant React+TypeScript development environment for new libraries or anything else! 💅&lt;/p&gt;

</description>
      <category>react</category>
      <category>typescript</category>
      <category>vite</category>
    </item>
    <item>
      <title>How To Create Animated Progress Bar HTML</title>
      <author>Muhammad Rauf</author>
      <pubDate>Wed, 17 Nov 2021 16:51:37 +0000</pubDate>
      <link>https://dev.to/softcodeon/how-to-create-animated-progress-bar-html-218o</link>
      <guid>https://dev.to/softcodeon/how-to-create-animated-progress-bar-html-218o</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9iRofH42--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hpql5ydtnwr2tr92kcvy.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9iRofH42--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hpql5ydtnwr2tr92kcvy.jpg" alt="Image description" width="600" height="300"&gt;&lt;/a&gt;&lt;br&gt;
When thinking about user experience, one commonly occurring problem is not giving feedback to user input. Any action that your users take should cause a reaction. If your application has long-running tasks, it’s essential to show progress. Otherwise, users will be left confused.&lt;/p&gt;

&lt;p&gt;In this tutorial, we will focus on how CSS transitions can be used to create an animated progress bar. I will leave a link to the GitHub repository at the end of the article where the final project is hosted. This is how the progress bar will look like.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#to-create-animated-progress-bar-it-takes-three-steps-only"&gt;
  &lt;/a&gt;
  To Create Animated Progress Bar It Takes Three Steps Only:-
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Make a HTML file and define markup&lt;/li&gt;
&lt;li&gt;Make a CSS file and define styling&lt;/li&gt;
&lt;li&gt;Make a JavaScript file and define scripting&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You can also do it in a single HTML file. Copy the following HTML, CSS and a bit JavaScript code and paste it where you want to show S&lt;/p&gt;

&lt;p&gt;HTML Code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"softprogress"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Progress Bar to - &lt;span class="nt"&gt;&amp;lt;strong&amp;gt;&lt;/span&gt;90%&lt;span class="nt"&gt;&amp;lt;/strong&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;code-softprogress=&lt;/span&gt;&lt;span class="s"&gt;"90"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Progress Bar to - &lt;span class="nt"&gt;&amp;lt;strong&amp;gt;&lt;/span&gt;65%&lt;span class="nt"&gt;&amp;lt;/strong&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;code-softprogress=&lt;/span&gt;&lt;span class="s"&gt;"65"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Progress Bar to - &lt;span class="nt"&gt;&amp;lt;strong&amp;gt;&lt;/span&gt;95%&lt;span class="nt"&gt;&amp;lt;/strong&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;code-softprogress=&lt;/span&gt;&lt;span class="s"&gt;"95"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;CSS Code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;style&lt;/span&gt; &lt;span class="nt"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;"text/css"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bold&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c"&gt;/* softprogress bar CSS */&lt;/span&gt;
&lt;span class="nc"&gt;.softprogress&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nd"&gt;:not&lt;/span&gt;&lt;span class="o"&gt;([&lt;/span&gt;&lt;span class="nt"&gt;code-softprogress&lt;/span&gt;&lt;span class="o"&gt;])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;16px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.softprogress&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;500px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;15px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;box-sizing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;border-box&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.softprogress&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;code-softprogress&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;25px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;box-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.35&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nb"&gt;inset&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;15px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;overflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#ddd&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;code-softprogress&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="nd"&gt;::after&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex-end&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#2f8d46&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;box-sizing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;border-box&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;16px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;15px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;3px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;code-softprogress&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="nc"&gt;.run-softprogress&lt;/span&gt;&lt;span class="nd"&gt;::after&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;code-softprogress&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="s1"&gt;"%"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--run-softprogress&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c"&gt;/* End softprogress bar CSS */&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;style&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;JavaScript Code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text/javascript&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onload&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelectorAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.softprogress&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelectorAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.softprogress [code-softprogress]&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelectorAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.softprogress [code-softprogress]&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;runsoftprogress&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="p"&gt;}};&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;runsoftprogress&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;className&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;run-softprogress&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;style&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;`--run-softprogress:&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;code-softprogress&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="s2"&gt;%;`&lt;/span&gt;
  &lt;span class="p"&gt;);}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/script&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's all, this is how to create animated progress bar using jQuery and CSS.You can customize this code further as per your requirement. And please feel free to give comments on this tutorial. Want to learn in detail you can visit our official website &lt;a href="https://softcodeon.com/tutorials/create-animated-progress-bar-html.htm"&gt;Create Animated Progress Bar HTML&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>programming</category>
      <category>tutorial</category>
      <category>webdev</category>
    </item>
    <item>
      <title>LaTeX &amp; Macros: Macros with Arguments</title>
      <author>latexteada</author>
      <pubDate>Wed, 17 Nov 2021 16:42:19 +0000</pubDate>
      <link>https://dev.to/latexteada/latex-macros-macros-with-arguments-2a42</link>
      <guid>https://dev.to/latexteada/latex-macros-macros-with-arguments-2a42</guid>
      <description>&lt;p&gt;Hello, how are you? :) &lt;/p&gt;

&lt;p&gt;In this post I tell you &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;How to declare macros with arguments&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Do you remember that in &lt;a href="https://dev.to/latexteada/latex-macros-creating-macros-macros-without-arguments-4338"&gt;this&lt;/a&gt; post I gave you a brief introduction to Macros without arguments, these are helpful in those situations where you need the same expression multiple times, but what if you need to have the same expression but just modify something?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-declare-macros-with-arguments"&gt;
  &lt;/a&gt;
  How to declare macros with arguments
&lt;/h2&gt;

&lt;p&gt;The command is the following&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tex"&gt;&lt;code&gt;&lt;span class="k"&gt;\newcommand&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="k"&gt;\name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;[args]&lt;span class="p"&gt;{&lt;/span&gt;expr&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;\name&lt;/code&gt; is the name of the command &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;args&lt;/code&gt; is the number of arguments in the command, top 9&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;expr&lt;/code&gt; is the expression to manipulate&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You already know what is &lt;code&gt;\name&lt;/code&gt;, but if you have forgotten it, you can check it &lt;a href="https://dev.to/latexteada/latex-macros-creating-macros-macros-without-arguments-4338"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;args&lt;/code&gt;, this is the number of arguments in the command, in other words, the &lt;em&gt;blanks&lt;/em&gt; to be filled&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;If you want 1 argument you put 1, if you want 2 put 2 and so on. &lt;strong&gt;&lt;em&gt;The maximum number of arguments is 9&lt;/em&gt;&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;The same number of arguments declared in &lt;code&gt;args&lt;/code&gt; must match with the arguments used in the definition of &lt;code&gt;expr&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;To put the position of the commands, we need to use &lt;code&gt;#&lt;/code&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;The arguments have an order&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Let's see some examples to clarify the information &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7UjGBrIb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8xhsztf1oc1r79njr4zq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7UjGBrIb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8xhsztf1oc1r79njr4zq.png" alt="Image description" width="880" height="722"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's analyze the code :) &lt;/p&gt;

&lt;p&gt;Here I declare two new commands &lt;/p&gt;

&lt;p&gt;The command &lt;code&gt;\oneArg&lt;/code&gt; has &lt;strong&gt;one&lt;/strong&gt; argument (&lt;em&gt;Which is declared in the square brackets&lt;/em&gt;) and this argument is going to be the exponent of &lt;em&gt;x&lt;/em&gt;. Can you notice, there is a &lt;code&gt;#&lt;/code&gt; this indicates &lt;em&gt;Here is going to be my argument&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The command &lt;code&gt;\twoArgs&lt;/code&gt; has &lt;strong&gt;two&lt;/strong&gt; arguments, one is going to be the variable, and the second is going to be the exponent, again, I use &lt;code&gt;#&lt;/code&gt; to say &lt;em&gt;Here is going to be my argument&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;See, when I use these new commands, check that &lt;code&gt;\oneArg&lt;/code&gt; has one curly brackets while &lt;code&gt;\twoArgs&lt;/code&gt; has two curly brackets&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The curly brackets match with the number of arguments&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That code produces &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yQB8dF-L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8yjugdimjwxin9biciwx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yQB8dF-L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8yjugdimjwxin9biciwx.png" alt="Image description" width="176" height="119"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But wait, do you remember that the arguments have an order while declaring them, let's check it&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kZonM6jq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bfun7zgdqxx3zsnnsipj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kZonM6jq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bfun7zgdqxx3zsnnsipj.png" alt="Image description" width="880" height="725"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here we have two new commands &lt;code&gt;\first&lt;/code&gt; and &lt;code&gt;\second&lt;/code&gt; they have two arguments, but there are a subtle difference, did you notice it? Yes &lt;strong&gt;&lt;em&gt;The position of the arguments&lt;/em&gt;&lt;/strong&gt; Let's see what is the output &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XX_AJaGZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g0ezw0068e32cjtgyob0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XX_AJaGZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g0ezw0068e32cjtgyob0.png" alt="Image description" width="144" height="92"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now you have grasped what &lt;em&gt;have an order&lt;/em&gt; means &lt;/p&gt;

&lt;p&gt;This is all :) &lt;/p&gt;

&lt;p&gt;Thanks for reading. &lt;/p&gt;

&lt;p&gt;Do not forget to follow me on Twitter &lt;code&gt;@latexteada&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Greetings :) &lt;/p&gt;

</description>
      <category>codenewbie</category>
      <category>latex</category>
    </item>
    <item>
      <title>Callback Functions, Explain it to me like I'm 5.</title>
      <author>Brijrajsinh parmar</author>
      <pubDate>Wed, 17 Nov 2021 16:36:33 +0000</pubDate>
      <link>https://dev.to/brijrajparmar27/callback-functions-explain-it-to-me-like-im-5-17b0</link>
      <guid>https://dev.to/brijrajparmar27/callback-functions-explain-it-to-me-like-im-5-17b0</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nIds5KIb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1130/1%2AZdcU_oRV2Gz2XLal1uoNxg.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nIds5KIb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1130/1%2AZdcU_oRV2Gz2XLal1uoNxg.jpeg" alt="Image description" width="565" height="313"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hi, since a 5yo will like chocolates, I will use that as an example!&lt;/p&gt;

&lt;p&gt;Assume you are the 5yo kid, and I give you a chocolate. If you open the wrapper and pop the chocolate into your mouth right away, that is a normal function. On the other hand, if you give it to your mom and she, say, after 5 minutes unwarps the chocolate and pops it into your mouth, voila! you have a callback function.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ciTfn-6V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/1%2ACbqCJcKdhm-aJW7WhXA7sw.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ciTfn-6V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/1%2ACbqCJcKdhm-aJW7WhXA7sw.jpeg" alt="Image description" width="700" height="369"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In programming, if all the data required by a function is ready, we can right away call that function ourselves, as below:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;function greet(name) {&lt;br&gt;
   console.log("Hi, " + name )&lt;br&gt;
}&lt;br&gt;
greet("Brij")&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;On the other hand, assume we should fetch the name from a database over the network, which will take some time — known as an asynchronous operation, and in such a case, if we call the &lt;code&gt;greet()&lt;/code&gt; function ourselves, name will still be undefined and our code will not work as intended. In such cases, we pass the &lt;code&gt;greet()&lt;/code&gt; function itself as an argument to another function, say, &lt;code&gt;fetchName()&lt;/code&gt;, that will first do the fetching and then using the fetched data call the &lt;code&gt;greet()&lt;/code&gt; function, as below:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;function fetchName(cb) {&lt;br&gt;
   const name = // code to get the name&lt;br&gt;
   cb(name)&lt;br&gt;
}&lt;br&gt;
fetchName(greet)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Note that here we are not calling the &lt;code&gt;greet()&lt;/code&gt; function; rather, the &lt;code&gt;fetchName()&lt;/code&gt; function will call it! In other words, we are passing a function as an argument to another function to be called back later by that function.&lt;/p&gt;

&lt;p&gt;I hope the above drops the penny further!&lt;/p&gt;

&lt;p&gt;if you enjoyed this do consider to drop a like or a follow.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>explainlikeimfive</category>
      <category>react</category>
    </item>
    <item>
      <title>How to install react , A simplest guide </title>
      <author>Rohit</author>
      <pubDate>Wed, 17 Nov 2021 15:45:10 +0000</pubDate>
      <link>https://dev.to/rohitcodes/how-to-install-react-a-simplest-guide-35eo</link>
      <guid>https://dev.to/rohitcodes/how-to-install-react-a-simplest-guide-35eo</guid>
      <description>&lt;h3&gt;Intro:&lt;/h3&gt; Hey there this is Rohit, today I am going to share an easiest guide for how to install react for beginners, So let's get into it&lt;br&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MKqs_fyS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a6iuvw0w9mqz6jkuyu00.jpg" alt="Image description" width="880" height="587"&gt; &lt;center&gt;Image: Photo by &lt;a href="https://unsplash.com/@lautaroandreani?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt; Lautaro Andreani&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/react-js?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;br&gt;
  &lt;/center&gt;
&lt;br&gt;
&lt;h3&gt;What is react :&lt;/h3&gt; React is amazing JavaScript library for building front-end user interfaces.&lt;br&gt;
&lt;h3&gt;Pre-requisites :&lt;/h3&gt; Before installing react we need to install node which is cross-platform JavaScript runtime environment, with node it comes with npm i.e node package manager which allow you to install packages and dependencies.&lt;br&gt;
&lt;br&gt;&lt;center&gt;click here to install &lt;a href=""&gt;node.js&lt;/a&gt;
&lt;/center&gt;
&lt;br&gt;
&lt;em&gt;note: If you have already installed node in your system you can skip this step and move on to next&lt;/em&gt;&lt;br&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eiS-oFsl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hmp9quvitya4qe6db04j.png" alt="Image description" width="880" height="880"&gt;&lt;center&gt;Image by:&lt;a href="https://www.linkedin.com/in/rohitpadghan/"&gt; rohitcode&lt;/a&gt; on &lt;a href="LinkedIn/rohitpadghan"&gt; LinkedIn&lt;/a&gt;
&lt;/center&gt;
&lt;br&gt;
&lt;h3&gt;Let's Install React :&lt;/h3&gt; Installing React is the most easiest thing to do for that we need only one command in your terminal or PowerShell:&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;center&gt;&lt;code&gt;npx create-react-app project-name&lt;/code&gt;&lt;/center&gt;
&lt;br&gt;
&lt;br&gt;&lt;br&gt;
That's it after this command press enter on your keyboard and wait for npm to install all the dependencies and packages.&lt;br&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VSdOfKg8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h5rm4z6mj5jr7x4u62tw.png" alt="Image description" width="880" height="438"&gt;&lt;center&gt;Image by: &lt;a href="https://www.linkedin.com/in/rohitpadghan/"&gt; rohitcode&lt;/a&gt;on &lt;a href="LinkedIn/rohitpadghan"&gt; LinkedIn&lt;/a&gt;
&lt;/center&gt;
&lt;br&gt;
Congratulations you have successfully installed react for the project, Now enter these following commands to launch react on browser:&lt;br&gt;
open the project directory by this command:&lt;br&gt;
&lt;center&gt;&lt;code&gt;cd project-name&lt;/code&gt;&lt;/center&gt;
&lt;br&gt;
&lt;center&gt;Then&lt;/center&gt;
&lt;br&gt;
&lt;center&gt;&lt;code&gt;npm start&lt;/code&gt;&lt;/center&gt;
&lt;br&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AYxzX4rU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ffdxuma1kdbsoxhry5ul.png" alt="Image description" width="880" height="386"&gt;If you see this, Now you are good to go.

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lhdlqawW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tn33cnc8y6ovx8pnhtkg.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lhdlqawW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tn33cnc8y6ovx8pnhtkg.gif" alt="Image description" width="498" height="498"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;h3&gt;Conclusion :&lt;/h3&gt; I hope you enjoyed this installation guide for React.js. If you have any questions or comments about this article, Comment me Thank you for reading, I am always excited when one of our posts is able to provide useful information on a topic like this!

</description>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
  </channel>
</rss>
