<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>tsParticles 1.31.0 and 2K stars on GitHub</title>
      <author>Matteo Bruni</author>
      <pubDate>Fri, 09 Jul 2021 22:24:56 +0000</pubDate>
      <link>https://dev.to/matteobruni/tsparticles-1-31-0-and-2k-stars-on-github-36e6</link>
      <guid>https://dev.to/matteobruni/tsparticles-1-31-0-and-2k-stars-on-github-36e6</guid>
      <description>&lt;h1&gt;
  &lt;a href="#tsparticles-1310"&gt;
  &lt;/a&gt;
  tsParticles 1.31.0
&lt;/h1&gt;

&lt;p&gt;First of all, thanks to all users that left a stars to this project, it's growing fast for being just a new particles library.&lt;/p&gt;

&lt;p&gt;I wanted to release the &lt;code&gt;1.31.0&lt;/code&gt; version when 2K stars reached since it was a close target.&lt;/p&gt;

&lt;p&gt;Now let's see what's new in this version&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#new-features"&gt;
  &lt;/a&gt;
  New Features
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Added zIndex options, closes #979&lt;/li&gt;
&lt;li&gt;Added particles groups to options&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#changes"&gt;
  &lt;/a&gt;
  Changes
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Infection is now a plugin, and it's included and is not included in the slim version&lt;/li&gt;
&lt;li&gt;Changed particles move distance options to an horizontal/vertical object, single number still valid&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#sample"&gt;
  &lt;/a&gt;
  Sample
&lt;/h2&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/matteobruni/embed/rNmMVEx?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Here we can see the new Z Index effect, particles are in different "layers" and opacity is not affected by configuration.&lt;/p&gt;

&lt;p&gt;Let's set a new target to 3K stars from now, thanks for the new star ‚≠êÔ∏è&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/matteobruni"&gt;
        matteobruni
      &lt;/a&gt; / &lt;a href="https://github.com/matteobruni/tsparticles"&gt;
        tsparticles
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      tsParticles - Easily create highly customizable particles animations and use them as animated backgrounds for your website. Ready to use components available for React, Vue.js (2.x and 3.x), Angular, Svelte, jQuery, Preact, Inferno.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a href="https://particles.js.org" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/58f22f0a546d5d7f34b4668dc842ac91b3a4cf9a5de72346559b7d15b13e587e/68747470733a2f2f7061727469636c65732e6a732e6f72672f696d616765732f62616e6e6572322e706e67" alt="banner"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
tsParticles - TypeScript Particles&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;A lightweight TypeScript library for creating particles. Dependency free (*), browser ready and compatible with React, Vue, Angular, Svelte, jQuery, Preact, Inferno&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://openbase.com/js/tsparticles?utm_source=embedded&amp;amp;utm_medium=badge&amp;amp;utm_campaign=rate-badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/303db015a31c411aee869f57d55a44a53cd2f5380d0de5ee8abecb337a9452a6/68747470733a2f2f6261646765732e6f70656e626173652e636f6d2f6a732f726174696e672f74737061727469636c65732e737667" alt="Rate on Openbase"&gt;&lt;/a&gt; &lt;a href="https://www.jsdelivr.com/package/npm/tsparticles" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8c64088d02effc095dd7386325d216ce6d6bd46513a88ed2274e0ec4e6d876cf/68747470733a2f2f646174612e6a7364656c6976722e636f6d2f76312f7061636b6167652f6e706d2f74737061727469636c65732f62616467653f7374796c653d726f756e646564" alt="jsDelivr"&gt;&lt;/a&gt; &lt;a href="https://cdnjs.com/libraries/tsparticles" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e9e5a7a72f7cbc65eedd0e4d7431e4d4762c472ad4a66b6648a8e74c2b6be331/68747470733a2f2f696d672e736869656c64732e696f2f63646e6a732f762f74737061727469636c6573" alt="Cdnjs"&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/tsparticles" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e18baafcedd7efbbd13d6e2b1cf738c07ea898383c946e6e7b16400f813d70cb/68747470733a2f2f62616467652e667572792e696f2f6a732f74737061727469636c65732e737667" alt="npmjs"&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/tsparticles" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bc16ec38506bbab6f6b729850ad28fd94a5643f1633b4356647033c3aa3fe102/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f646d2f74737061727469636c6573" alt="npm"&gt;&lt;/a&gt; &lt;a href="https://lerna.js.org/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3bc63f921dd60bac6d91aa900ef570c928b2aa4c2124ed23647e8fe9d2232853/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6d61696e7461696e6564253230776974682d6c65726e612d6363303066662e737667" alt="lerna"&gt;&lt;/a&gt; &lt;a href="https://www.codefactor.io/repository/github/matteobruni/tsparticles" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ce969771f1502f57861fe8ce7c787c209c50ef17c2e19f35cb1de0c960eba94a/68747470733a2f2f7777772e636f6465666163746f722e696f2f7265706f7369746f72792f6769746875622f6d617474656f6272756e692f74737061727469636c65732f6261646765" alt="CodeFactor"&gt;&lt;/a&gt; &lt;a href="https://www.codacy.com/manual/ar3s/tsparticles?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=matteobruni/tsparticles&amp;amp;utm_campaign=Badge_Grade" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8f96d4d0dccc9c7491f3ed07af70a808b0fd4d2e4d863a1f7bb9e51e10ae526e/68747470733a2f2f6170692e636f646163792e636f6d2f70726f6a6563742f62616467652f47726164652f6239383361616633343631613463343862316532656563636531666631643734" alt="Codacy Badge"&gt;&lt;/a&gt; &lt;a href="https://gitpod.io/#https://github.com/matteobruni/tsparticles" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/daadb4894128d1e19b72d80236f5959f1f2b47f9fe081373f3246131f0189f6c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f476974706f642d72656164792d2d746f2d2d636f64652d626c75653f6c6f676f3d676974706f64" alt="Gitpod Ready-to-Code"&gt;&lt;/a&gt; &lt;a href="https://repl.it/github/matteobruni/tsparticles" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/64adf1bd83058aa64f848245f74bef77cd7cc2a3f36343ac44d6d0c39cc41bc3/68747470733a2f2f7265706c2e69742f62616467652f6769746875622f6d617474656f6272756e692f74737061727469636c6573" alt="Run on Repl.it"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Do you want to use it on your website?&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;This library is available on the two most popular CDNs and it's easy and ready to use, if you were using particles.js it's even easier&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;You'll find the instructions &lt;a href="https://github.com/matteobruni/tsparticles/blob/main/README.md#library-installation"&gt;below&lt;/a&gt;, with all the links you need, and &lt;em&gt;don't be scared by &lt;strong&gt;TypeScript&lt;/strong&gt;, it's just the source language&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The output files are just JavaScript&lt;/strong&gt;. ü§©&lt;/p&gt;
&lt;p&gt;CDNs and &lt;code&gt;npm&lt;/code&gt; have all the sources you need in &lt;strong&gt;Javascript&lt;/strong&gt;, a bundle browser ready (tsparticles.min.js) and all files splitted for &lt;code&gt;import&lt;/code&gt; syntax.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;If you are still interested&lt;/strong&gt; some lines below there are some instructions for migrating from the old particles.js library.&lt;/p&gt;
&lt;h2&gt;
&lt;strong&gt;&lt;em&gt;Library installation&lt;/em&gt;&lt;/strong&gt;
&lt;/h2&gt;
&lt;h3&gt;
&lt;strong&gt;&lt;em&gt;Hosting / CDN&lt;/em&gt;&lt;/strong&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Please use this hosts or your own to&lt;/em&gt;&lt;/strong&gt;‚Ä¶&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/matteobruni/tsparticles"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;You can see other configurations and articles in my &lt;a href="https://dev.to/matteobruni"&gt;profile&lt;/a&gt;&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/matteobruni" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JQFfhxbE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--48F7T3mb--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/349511/bb633a3a-649f-4897-9773-86a525c8fdc3.png" alt="matteobruni"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/matteobruni/how-to-create-beautiful-and-realistic-confetti-animation-with-tsparticles-1lkm" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;[JS] How to create beautiful and realistic confetti animation with tsParticles&lt;/h2&gt;
      &lt;h3&gt;Matteo Bruni „Éª Jun 29 „Éª 6 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#showdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;div class="ltag__link"&gt;
  &lt;a href="/matteobruni" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JQFfhxbE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--48F7T3mb--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/349511/bb633a3a-649f-4897-9773-86a525c8fdc3.png" alt="matteobruni"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/matteobruni/tsparticles-fireworks-effect-2-0-10p9" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;tsParticles Fireworks Effect 2.0&lt;/h2&gt;
      &lt;h3&gt;Matteo Bruni „Éª Jun 16 „Éª 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#codepen&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#showdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


</description>
      <category>showdev</category>
      <category>javascript</category>
      <category>html</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Learn JavaScript Coding by Playing Games üéÆ</title>
      <author>Suprabha</author>
      <pubDate>Fri, 09 Jul 2021 21:29:50 +0000</pubDate>
      <link>https://dev.to/suprabhasupi/learn-javascript-coding-by-playing-games-4d8a</link>
      <guid>https://dev.to/suprabhasupi/learn-javascript-coding-by-playing-games-4d8a</guid>
      <description>&lt;p&gt;&lt;span&gt;Y&lt;/span&gt;ou will learn the basics of JavaScript by creating the following ten games:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#checkio"&gt;
  &lt;/a&gt;
  1Ô∏è‚É£ &lt;a href="https://checkio.org/"&gt;CheckiO&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cpgQu1p2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/CMs1xPv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cpgQu1p2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/CMs1xPv.png" alt="checkio javascript gaming"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Teachers all over the world use CheckiO as an extra-tool during their courses so that students could practice their skills when learning new material.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#jsrobot"&gt;
  &lt;/a&gt;
  2Ô∏è‚É£ &lt;a href="https://lab.reaal.me/jsrobot/"&gt;JSRobot&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GEurtK9W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/eyQWkuX.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GEurtK9W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/eyQWkuX.png" alt="JsRobot javascript gaming"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Learn JavaScript by playing a platform game&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#jsdares"&gt;
  &lt;/a&gt;
  3Ô∏è‚É£ &lt;a href="https://jsdares.com/"&gt;JSDares&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hGCSEIcn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/tKm05aw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hGCSEIcn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/tKm05aw.png" alt="JsDares javascript gaming"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You learn programming by completing dares. These are short puzzles in which you have to copy the example, in as few lines of code as possible.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#coding-game"&gt;
  &lt;/a&gt;
  4Ô∏è‚É£ &lt;a href="https://www.codingame.com/start"&gt;Coding Game&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nnmelA-v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/5cFn6S5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nnmelA-v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/5cFn6S5.png" alt="CodingGame javascript gaming"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;CodinGame is a challenge-based training platform for programmers where you can improve your coding skills with fun exercises (25+ languages supported)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#robocode"&gt;
  &lt;/a&gt;
  5Ô∏è‚É£ &lt;a href="https://robocode.sourceforge.io/"&gt;Robocode&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8mf9rbsC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/2U9DGHK.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8mf9rbsC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/2U9DGHK.png" alt="Robocode javascript gaming"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Robocode is a programming game, where the goal is to develop a robot battle tank to battle against other tanks in Java or .NET. The robot battles are running in real-time and on-screen.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#code-combat"&gt;
  &lt;/a&gt;
  6Ô∏è‚É£ &lt;a href="https://codecombat.com/"&gt;Code Combat&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kQoBCswc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/x1tE6DI.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kQoBCswc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/x1tE6DI.png" alt="Code Combat javascript gaming"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;CodeCombat is an HTML5 role-playing game (RPG) that teaches you fundamental programming concepts. CodeCombat supports 5 programming languages.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#screeps"&gt;
  &lt;/a&gt;
  7Ô∏è‚É£ &lt;a href="https://screeps.com/"&gt;Screeps&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--datHHCc7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/PZJ7yHB.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--datHHCc7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/PZJ7yHB.png" alt="Screeps javascript gaming"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Screeps is a fun game and has a unique angle to it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#untrusted"&gt;
  &lt;/a&gt;
  8Ô∏è‚É£ &lt;a href="https://alexnisnevich.github.io/untrusted/"&gt;Untrusted&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0ceyO7eI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/WIJ1fHg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0ceyO7eI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/WIJ1fHg.png" alt="Untrusted javascript gaming"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The game presents you with a roguelike-like playing environment and a console window with the JavaScript code generating each level.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#crunchzilla"&gt;
  &lt;/a&gt;
  9Ô∏è‚É£ &lt;a href="https://www.crunchzilla.com/"&gt;Crunchzilla&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hAdyBLIL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/33npX2E.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hAdyBLIL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/33npX2E.png" alt="Crunchzilla javascript gaming"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Crunchzilla offers interactive tutorials that get people excited about programming. Play with code, build, and learn.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#elevator-saga"&gt;
  &lt;/a&gt;
  üîü &lt;a href="https://play.elevatorsaga.com/"&gt;Elevator Saga&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tt1MR7-Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/9cSIj7D.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tt1MR7-Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/9cSIj7D.png" alt="ElevatorSage javascript gaming"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is a game of programming!&lt;br&gt;
Your task is to program the movement of elevators, by writing a program in JavaScript.&lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;

&lt;p&gt;Hope you enjoyed reading the article üòâ &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/suprabhasupi"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aDe0OdcG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/4t25pJE.png" alt="Buy Me A Coffee"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;
        üåü &lt;a href="https://twitter.com/suprabhasupi"&gt; Twitter&lt;/a&gt;
      &lt;/td&gt;
      &lt;td&gt;
        üë©üèª‚Äçüíª &lt;a href="https://www.suprabha.me/"&gt; suprabha.me&lt;/a&gt;
      &lt;/td&gt;
&lt;td&gt;
        üåü &lt;a href="https://www.instagram.com/suprabhasupi/"&gt; Instagram&lt;/a&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>How to add Redux Toolkit to a React-Redux application</title>
      <author>Maxine Meurer</author>
      <pubDate>Fri, 09 Jul 2021 21:09:58 +0000</pubDate>
      <link>https://dev.to/mmeurer00/how-to-add-redux-toolkit-to-a-react-redux-application-i9f</link>
      <guid>https://dev.to/mmeurer00/how-to-add-redux-toolkit-to-a-react-redux-application-i9f</guid>
      <description>&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table Of Contents
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#1"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#2"&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#3"&gt;Create Redux Store&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#4"&gt;Create Slicers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#5"&gt;Add Reducers to Store&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#6"&gt;Performing Asynchronous Logic and Data Fetching&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#7"&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Over the last couple days I realized I wasn't alone in learning the wonders of redux toolkit. So for those of you that are in the same boat as me, get ready for some ducks!&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Redux Toolkit is package that was built on top of Redux &lt;em&gt;an open-source JS library for managing application state&lt;/em&gt;. The package allows the user to avoid unnecessary boilerplate code, and supplies APIs that make applications DRYer and more maintainable. If you'd like to read more about Redux Toolkit and its features, I have another blog post available &lt;a href="https://dev.to/mmeurer00/what-is-redux-toolkit-b94"&gt;here&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Today we'll be focusing on how to implement Redux toolkit in a React-Redux application. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;First and foremost, install the Redux Toolkit package in your React-Redux application:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install @reduxjs/toolkit react-redux
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#create-redux-store"&gt;
  &lt;/a&gt;
  Create Redux Store &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Create a file named src/redux/store.js. &lt;em&gt;I choose to name the folder containing my store and slicers "redux", in the documentation you will see it named "app", the convention is your choice.&lt;/em&gt; Inside the store.js file, import the &lt;a href="https://redux-toolkit.js.org/api/configureStore"&gt;configureStore()&lt;/a&gt; API from Redux Toolkit. You're simply just going to start by creating and exporting an empty Redux store:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// src/redux/store.js&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;configureStore&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@reduxjs/toolkit&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;store&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;configureStore&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;reducer&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{},&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;By creating the Redux store, you are now able to observe the store from the Redux Devtools extension while developing. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dWX2G3VX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dfqpa5ltyw3wl2o0n3ix.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dWX2G3VX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dfqpa5ltyw3wl2o0n3ix.gif" alt="Console Gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After the store is created, you must make it available to your React components by putting a React-Redux Provider around your application in src/index.js. Import your newly created Redux store, put a Provider around your App, and pass the store as a prop:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// src/index.js&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;ReactDOM&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-dom&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./index.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./App&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;store&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./redux/store&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="c1"&gt;// import your store&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Provider&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-redux&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="c1"&gt;// import the provider&lt;/span&gt;

&lt;span class="nx"&gt;ReactDOM&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Provider&lt;/span&gt; &lt;span class="nx"&gt;store&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;store&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="c1"&gt;// place provider around app, pass store as prop&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Provider&amp;gt;,&lt;/span&gt;&lt;span class="err"&gt; 
&lt;/span&gt;  &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;root&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And there you have it, a beautifully set up Redux Store. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-slicers"&gt;
  &lt;/a&gt;
  Create Slicers &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;To create your first slicer, we'll be adding a new file &lt;em&gt;generally named after what you will be performing the actions on, or the action itself&lt;/em&gt;. For this example, let's say we are creating an app that allows a user to create posts. I would then create a file named src/redux/PostSlice.js. Within that file, you would then import the createSlice API from Redux Toolkit like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// src/redux/PostSlice.js&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createSlice&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@reduxjs/toolkit&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A slice requires a string name &lt;em&gt;to identify the slice&lt;/em&gt;, an initial state value, and one or more reducer functions, &lt;em&gt;defining how the state can be updated&lt;/em&gt;. After creating the slice, you can export the already generated Redux action creators and reducer function for the entire slice.&lt;/p&gt;

&lt;p&gt;Redux requires that we write all state updates immutably, it does this by making copies of data and updating the copies. But, Redux Toolkit's &lt;a href="https://redux-toolkit.js.org/api/createSlice"&gt;createSlice&lt;/a&gt; and &lt;a href="https://redux-toolkit.js.org/api/createReducer"&gt;createReducer&lt;/a&gt; APIs use &lt;a href="https://immerjs.github.io/immer/"&gt;Immer&lt;/a&gt; &lt;em&gt;a package  that allows you to work with immutable state&lt;/em&gt;, allowing you to write "mutating" update logic that then becomes correct immutable updates. Right now you're probably use to your action creators looking something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;addPost&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ADD_POST&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But Redux Toolkit provides you a function called &lt;a href="https://redux-toolkit.js.org/api/createAction"&gt;createAction&lt;/a&gt;, which generates an action creator that uses the given action type, and turns its argument into the payload field. It also accepts a "prepare callback" argument, allowing you to customize the returning payload field:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;addPost&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createAction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ADD_POST&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;addPost&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello World&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Redux reducers search for specific action types to know how they should update their state. While you may be use to separately defining action type strings and action creator functions, the createAction function cuts some of the work out for you. &lt;/p&gt;

&lt;p&gt;You should know that, &lt;strong&gt;createAction overrides the toString() method on the action creators it generates&lt;/strong&gt;. This means that in some clauses, such providing keys to builder.addCase, or the createReducer object notation. the action creator itself can be used as the "action type" reference. Furthermore, the action type is defined as a type field on the action creator.&lt;/p&gt;

&lt;p&gt;Here is a code snippet from &lt;a href="https://redux-toolkit.js.org/tutorials/quick-start#create-a-redux-state-slice"&gt;Redux Toolkit Documentation&lt;/a&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;actionCreator&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createAction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;SOME_ACTION_TYPE&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;actionCreator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="c1"&gt;// "SOME_ACTION_TYPE"&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;actionCreator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// "SOME_ACTION_TYPE"&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;reducer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createReducer&lt;/span&gt;&lt;span class="p"&gt;({},&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;builder&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// actionCreator.toString() will automatically be called here&lt;/span&gt;
  &lt;span class="c1"&gt;// also, if you use TypeScript, the action type will be correctly inferred&lt;/span&gt;
  &lt;span class="nx"&gt;builder&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addCase&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;actionCreator&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{})&lt;/span&gt;

  &lt;span class="c1"&gt;// Or, you can reference the .type field:&lt;/span&gt;
  &lt;span class="c1"&gt;// if using TypeScript, the action type cannot be inferred that way&lt;/span&gt;
  &lt;span class="nx"&gt;builder&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addCase&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;actionCreator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{})&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here's how our example PostSlice would look if we were to use the "ducks" file structure...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// src/redux/PostSlice.js&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;CREATE_POST&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;CREATE_POST&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;addPost&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;CREATE_POST&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;title&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;initialState&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;postsReducer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;initialState&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nx"&gt;CREATE_POST&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// Your code&lt;/span&gt;
      &lt;span class="k"&gt;break&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nl"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;While this definitely simplifies things, you would still need to write actions and action creators manually. To make things even easier, Redux toolkit includes the a createSlice function that will automatically generate the action types/action creators for you, based on the names of the reducer functions provided.&lt;/p&gt;

&lt;p&gt;Here's how our updated posts example would look with createSlice:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// src/redux/PostSlice.js&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;postsSlice&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createSlice&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;posts&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;initialState&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[],&lt;/span&gt;
  &lt;span class="na"&gt;reducers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;createPost&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{},&lt;/span&gt;
    &lt;span class="nx"&gt;updatePost&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{},&lt;/span&gt;
    &lt;span class="nx"&gt;deletePost&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{},&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;


&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createPost&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;postsSlice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;actions&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createPost&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;actions&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;PostSlice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reducer&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Slices defined in this manner are similar in concept to the "Redux Ducks" pattern. However, there are a few things to beware of when importing and exporting slices.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Redux action types are not meant to be exclusive to a single slice. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Looking at it abstractly, each slice reducer "owns" its own piece of the Redux state. But, it should be able for listen to any action type, updating its state accordingly. For example, many different slices may have a response to a "LOG OUT" action by clearing or resetting data back to initial state values. It's important to remember this as you design your state shape and create your slices.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;JS modules can have &lt;a href="https://medium.com/visual-development/how-to-fix-nasty-circular-dependency-issues-once-and-for-all-in-javascript-typescript-a04c987cf0de"&gt;"circular reference" problems&lt;/a&gt; if two modules try to import each other. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;This can result in imports being undefined, which will likely break the code that needs that import. Specifically in the case of "ducks" or slices, this can occur if slices defined in two different files both want to respond to actions defined in the other file. The solution to this is usually moving the shared/repeated code to a separate, common, file that both modules can import and use. In this case, you might define some common action types in a separate file using createAction, import those action creators into each slice file, and handle them using the extraReducers argument.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;em&gt;This was personally an issue I had when first using Redux Toolkit, and let's just say it was a very long 8 hours...&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#add-reducers-to-store"&gt;
  &lt;/a&gt;
  Add Reducers to Store &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Once you created your slice, &lt;em&gt;and read/signed the terms and conditions listed above&lt;/em&gt;, you can import your reducers in the store. Redux state is typically organized into "slices", defined by the reducers that are passed to combineReducers:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// src/redux/store.js&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;configureStore&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@reduxjs/toolkit&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;postsReducer&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./postSlice&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;rootReducer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;combineReducers&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;posts&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;postsReducer&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you were to have more than one slice, it would look like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;rootReducer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;combineReducers&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;users&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;usersReducer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;posts&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;postsReducer&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can take away that the reducers...&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;"Own" a piece of state, including what the initial value is.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Define how that state is updated.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Define which specific actions result in state updates&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#performing-asynchronous-logic-and-data-fetching"&gt;
  &lt;/a&gt;
  Performing Asynchronous Logic and Data Fetching &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;You also may be asking how to import and use this in your actual components, which is where &lt;a href="https://react-redux.js.org/using-react-redux/connect-mapdispatch"&gt;connect and mapDispatchToProps&lt;/a&gt; comes in play. &lt;/p&gt;

&lt;p&gt;If you are looking to include async logic into your code, you will have to use middleware to enable async logic, &lt;em&gt;unless you would like to write all that lovely code yourself&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Redux store alone doesn't know anything about async logic. It only knows how to synchronously dispatch actions, update the state by calling the root reducer function, and notify the UI that something has changed. So, &lt;strong&gt;any asynchronicity has to happen outside the store.&lt;/strong&gt; If you are looking to implement this into your application, I would to look into this &lt;a href="https://redux-toolkit.js.org/usage/usage-guide#asynchronous-logic-and-data-fetching"&gt;documentation&lt;/a&gt; and utilizing &lt;a href="https://redux-toolkit.js.org/usage/usage-guide#async-requests-with-createasyncthunk"&gt;createAsyncThunk&lt;/a&gt;. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;You have successfully transitioned over from vanilla Redux to Redux Toolkit! You probably have some cleaning up to do throughout your application, as your code has been greatly &lt;em&gt;reduced&lt;/em&gt;. While this definitely does not cover the entirety of the package, it should at least get you started! &lt;/p&gt;

&lt;p&gt;I sincerely hope this article has aided you in your transition from Redux to Redux Toolkit. I would appreciate any feedback you have, and feel free to share your Redux Toolkit applications! Happy Coding!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#sources-supplemental-resources"&gt;
  &lt;/a&gt;
  Sources/ Supplemental Resources:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://redux.js.org/redux-toolkit/overview"&gt;Redux Toolkit Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/visual-development/how-to-fix-nasty-circular-dependency-issues-once-and-for-all-in-javascript-typescript-a04c987cf0de"&gt;"circular reference" problems&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=iBUJVy8phqw"&gt;Redux Tutorial (with Redux Toolkit)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=dHpgzGyCYj8&amp;amp;t=1550s"&gt;Converting Old Redux project to Redux Toolkit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>redux</category>
      <category>javascript</category>
      <category>beginners</category>
      <category>react</category>
    </item>
    <item>
      <title>What was your win this week?</title>
      <author>Gracie Gregory (she/her)</author>
      <pubDate>Fri, 09 Jul 2021 20:27:08 +0000</pubDate>
      <link>https://dev.to/devteam/what-was-your-win-this-week-4h3g</link>
      <guid>https://dev.to/devteam/what-was-your-win-this-week-4h3g</guid>
      <description>&lt;p&gt;Hey there!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Looking back on your week, what was something you're proud of?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;All wins count ‚Äî big or small üéâ&lt;/p&gt;

&lt;p&gt;Examples of 'wins' include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Starting a new project&lt;/li&gt;
&lt;li&gt;Fixing a tricky bug&lt;/li&gt;
&lt;li&gt;Kicking back with friends... or whatever else might spark joy ‚ù§Ô∏è &lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;Congrats on your wins this week!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/3SwvKYqfHVM7bUMAlc/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/3SwvKYqfHVM7bUMAlc/giphy.gif" alt="Weather Man dressed up as the sun"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>weeklyretro</category>
    </item>
    <item>
      <title>Getting started with a project written by another developer</title>
      <author>Tawanda Nyahuye</author>
      <pubDate>Fri, 09 Jul 2021 19:25:24 +0000</pubDate>
      <link>https://dev.to/towernter/getting-started-with-a-project-written-by-another-developer-1l61</link>
      <guid>https://dev.to/towernter/getting-started-with-a-project-written-by-another-developer-1l61</guid>
      <description>&lt;h2&gt;
  &lt;a href="#lets-get-into-this"&gt;
  &lt;/a&gt;
  Lets get into this
&lt;/h2&gt;

&lt;p&gt;I have been there and if you are not a newbie, you have probably been there but if you haven't been there, don't worry you will be there. There will always be a time in your life when you inherit code that was written by another developer. If the developer is smarter than you, that's a problem and if they are not, well that's a huge problem. This is a problem most developers face when they start a new job at a different company.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--R805x7PO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u9k41x9qf46u8o10rs3o.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--R805x7PO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u9k41x9qf46u8o10rs3o.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-did-we-get-here"&gt;
  &lt;/a&gt;
  How did we get here?
&lt;/h2&gt;

&lt;p&gt;Recently I was given a task to maintain a project that was written by another developer using a programming language that I am not familiar with. This article has some few things that helped me get up to speed with this new project as well as explaining these ways in case you encounter the same problem.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#you-have-been-given-a-project-written-by-another-developer-what-should-you-do"&gt;
  &lt;/a&gt;
  You have been given a project written by another Developer. What should you do?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7JbdmloG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tr2s5kqldtl4x1mryb84.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7JbdmloG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tr2s5kqldtl4x1mryb84.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;&lt;em&gt;We don't run away from the code, we run the code&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#study-the-programming-language-used"&gt;
  &lt;/a&gt;
  Study the programming language used
&lt;/h4&gt;

&lt;p&gt;The first thing you have to do before trying to add functionality to a project written by someone else is to understand the programming language that was used to write the project. Most people say programming languages are the same, learn one and you are good with all of them. I disagree, programming languages are different in terms of syntax but they use the same concepts like , OOP, if statements exception handling etc. Take your time to understand the syntax of the language before you try changing some lines of code in a project and this will save you a lot of time. This applies to all programming languages, Python, JavaScript, PHP, C# etc.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#study-the-source-code"&gt;
  &lt;/a&gt;
  Study the source code
&lt;/h4&gt;

&lt;p&gt;Once you get an understanding of the programming language, take your time to read through the project code. Go through the code as much as you can if possible from line 1 to line n, file 1 to file n. Going through the code thoroughly will help you understand the way the developer structures their code, their commenting style, strength and weaknesses. This will also help you know where to edit when you want to edit any features of the project. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#experiment-with-the-project"&gt;
  &lt;/a&gt;
  Experiment with the project
&lt;/h4&gt;

&lt;p&gt;Experiment with the project, make a backup then break it and fix it. If you break the project you will suffer, the suffering is necessary because it will help you understand the concepts and technologies used in the project when you are trying to fix the project. This will also help you to understand several modules of the project and their connection.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NB:&lt;/strong&gt; There are several ways that can help one to get started with a project that was written by another developer but this is what worked for me. &lt;/p&gt;

</description>
      <category>productivity</category>
      <category>codenewbie</category>
      <category>python</category>
      <category>javascript</category>
    </item>
    <item>
      <title>The "safe" star rating &amp; the ONE star unlimited rating  </title>
      <author>Temani Afif</author>
      <pubDate>Fri, 09 Jul 2021 19:00:47 +0000</pubDate>
      <link>https://dev.to/afif/the-safe-star-rating-the-one-star-unlimited-rating-13gg</link>
      <guid>https://dev.to/afif/the-safe-star-rating-the-one-star-unlimited-rating-13gg</guid>
      <description>&lt;p&gt;After &lt;a href="https://dev.to/afif/scalable-star-rating-without-js-and-no-svg-or-image-for-the-star-2mef"&gt;my scalable star rating&lt;/a&gt; and &lt;a href="https://dev.to/afif/the-one-star-rating-system-the-future-of-rating-4jl8"&gt;my ONE star rating&lt;/a&gt;, Here I am with more rating systems.&lt;/p&gt;

&lt;p&gt;This time I will perform a 2x combo providing not one, but two star rating systems:&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#1-the-safe-star-rating"&gt;
  &lt;/a&gt;
  &lt;a href="#the-safe-star-rating"&gt;1. The "safe" star rating&lt;/a&gt;
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#2-the-one-star-unlimited-rating"&gt;
  &lt;/a&gt;
  &lt;a href="#the-one-star-unlimited-rating"&gt;2. The ONE star unlimited rating&lt;/a&gt;
&lt;/h4&gt;




&lt;h2&gt;
  &lt;a href="#the-safe-star-rating"&gt;
  &lt;/a&gt;
  The "safe" star rating
&lt;/h2&gt;

&lt;p&gt;Everyone is talking about accessibility but no one is talking about safety which is a very important subject. Nowadays, everyone is using touch screens to navigate and as you know stars have spikes and they are dangerous for your fingers!&lt;/p&gt;

&lt;p&gt;Each years 20% of the kids between 8 years and 14 years get hurt by star spikes while navigating their phones. A recent study has claimed that 89% of the star rating on the web aren't safe!&lt;/p&gt;

&lt;p&gt;Luckily, I am here for the rescue providing a "safe" star rating. No more dangerous spikes but smooth and rounded edges instead.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/abWZQQY?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Similar to my first rating system, it's scalable and is made with pure CSS (no JS and no SVG).&lt;/p&gt;

&lt;p&gt;Keep people safe by adopting this rating system.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#the-one-star-unlimited-rating"&gt;
  &lt;/a&gt;
  The ONE star unlimited rating
&lt;/h2&gt;

&lt;p&gt;The first version of the ONE star rating was good but it has few drawbacks:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Only limited to a 0-5 rating&lt;/li&gt;
&lt;li&gt;Not very intuitive&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I have improved it and this version is now called the: &lt;strong&gt;ONE star unlimited rating&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Unlimited because it can work with any rating. Only one star holding all kind of rating.&lt;/p&gt;

&lt;p&gt;Let's start with the classical 0-5 rating:&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/zYwBXpM?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;A simple click on the star will increase the rating. More intuitive and also informative since I am showing the rating.&lt;/p&gt;

&lt;p&gt;You can search in the code but you will find no JS logic in there. All is done with CSS.&lt;/p&gt;

&lt;p&gt;Want more rating? We simply add more inputs and we adjust the scaling step:&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/RwVRzLq?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;By simply adjusting 2 variables we can control both the size and the rating range while still having a unique star.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-about-raw-ltlabelgt-endraw-"&gt;
  &lt;/a&gt;
  What about &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt;?
&lt;/h3&gt;

&lt;p&gt;Someone said my code is missing labels. Guess what, you can easily add them without affecting the code.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/JjNRjJO?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;I simply updated 2 rules where I am using the &lt;code&gt;+&lt;/code&gt; selector (replacing &lt;code&gt;+&lt;/code&gt; with &lt;code&gt;+ * +&lt;/code&gt; to consider the label), nothing more. The same can be done with all my star rating and you don't have to touch the code of the others because I am not using the &lt;code&gt;+&lt;/code&gt; selector. test it and see.&lt;/p&gt;




&lt;p&gt;Now you have 4 different star rating systems. Notice that all of them use the same HTML code and I am changing only the CSS. You can easily switch to any star rating without too much complexity.&lt;/p&gt;

&lt;p&gt;Is this my last star rating?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/zndou9tOk63LIthccc/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/zndou9tOk63LIthccc/giphy.gif" alt="we will see"&gt;&lt;/a&gt; &lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>How I set up my new Next.js projects with a handy bash script</title>
      <author>Salma Alam-Naylor</author>
      <pubDate>Fri, 09 Jul 2021 18:54:45 +0000</pubDate>
      <link>https://dev.to/whitep4nth3r/how-i-set-up-my-new-next-js-projects-with-a-handy-bash-script-58o0</link>
      <guid>https://dev.to/whitep4nth3r/how-i-set-up-my-new-next-js-projects-with-a-handy-bash-script-58o0</guid>
      <description>&lt;p&gt;If you‚Äôve watched my &lt;a href="https://twitch.tv/whitep4nth3r"&gt;live streams on Twitch&lt;/a&gt;, you‚Äôll have seen me speed-build and YOLO-deploy quite a few websites with Next.js, including &lt;a href="https://randomcodegenerator.lol"&gt;randomcodegenerator.lol&lt;/a&gt;, &lt;a href="https://unbreak.tech"&gt;unbreak.tech&lt;/a&gt;, &lt;a href="https://womenwhostream.tech"&gt;womenwhostream.tech&lt;/a&gt; and &lt;a href="https://whitep4nth3r.com"&gt;whitep4nth3r.com&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;After I bootstrap a new Next.js application with &lt;code&gt;npx create-next-app&lt;/code&gt;, there are several things I do to prepare the app for development, including:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;delete the vercel.svg file&lt;/li&gt;
&lt;li&gt;delete the Home.module.css file&lt;/li&gt;
&lt;li&gt;add my own CSS reset rules to globals.css&lt;/li&gt;
&lt;li&gt;add a custom pages/_document.js file to add a lang attribute to the HTML tag to improve accessibility&lt;/li&gt;
&lt;li&gt;delete lots of code from pages/index.js&lt;/li&gt;
&lt;li&gt;open the new project in VSCode&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I‚Äôm a big fan of automation, and so I wrote a bash script to take care of these tasks for me ‚Äî and to remind me to have a nice day üòé.&lt;/p&gt;

&lt;p&gt;If you‚Äôd like to do the same, run the script below with ‚Äîlang, ‚Äîappname and ‚Äîdir flags ‚Äî and have a nice day! You can also &lt;a href="https://gist.github.com/whitep4nth3r/c178d99e8e3bd276c7d0047c3bd924da"&gt;bookmark the gist on GitHub&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Input flags&lt;/span&gt;

&lt;span class="nv"&gt;LANG&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;
&lt;span class="nv"&gt;APP_NAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;

&lt;span class="c"&gt;# The directory path must be relative to where the script lives&lt;/span&gt;
&lt;span class="nv"&gt;DIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;

&lt;span class="c"&gt;# Loop through arguments and process them&lt;/span&gt;
&lt;span class="k"&gt;for &lt;/span&gt;arg &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$@&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="k"&gt;do
    case&lt;/span&gt; &lt;span class="nv"&gt;$arg&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt;
        &lt;span class="nt"&gt;-h&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="nt"&gt;--help&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"‚ö°Ô∏è Example script usage ‚ö°Ô∏è"&lt;/span&gt;
        &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"./reset-next.sh --lang=en --appname=&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;my cool app&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; --dir=this-test"&lt;/span&gt;
        &lt;span class="nb"&gt;shift
        exit&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;;;&lt;/span&gt;
        &lt;span class="nt"&gt;-l&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;*&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="nt"&gt;--lang&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nv"&gt;LANG&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;#*=&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
        &lt;span class="nb"&gt;shift&lt;/span&gt;
        &lt;span class="p"&gt;;;&lt;/span&gt;
        &lt;span class="nt"&gt;-a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;*&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="nt"&gt;--appname&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nv"&gt;APP_NAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;#*=&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
        &lt;span class="nb"&gt;shift&lt;/span&gt;
        &lt;span class="p"&gt;;;&lt;/span&gt;
        &lt;span class="nt"&gt;-d&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;*&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="nt"&gt;--dir&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nv"&gt;DIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;#*=&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
        &lt;span class="nb"&gt;shift&lt;/span&gt;
        &lt;span class="p"&gt;;;&lt;/span&gt;
    &lt;span class="k"&gt;esac&lt;/span&gt;
&lt;span class="k"&gt;done

&lt;/span&gt;change_dir &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"‚ú® Changing directory to &lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
  &lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="nv"&gt;$1&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

delete_vercel_svg &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"‚ùå Deleting vercel.svg"&lt;/span&gt;
  &lt;span class="nb"&gt;rm &lt;/span&gt;public/vercel.svg
&lt;span class="o"&gt;}&lt;/span&gt;

delete_home_css &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"‚ùå  Deleting Home.module.css"&lt;/span&gt;
  &lt;span class="nb"&gt;rm &lt;/span&gt;styles/Home.module.css
&lt;span class="o"&gt;}&lt;/span&gt;

add_custom_document &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"‚úÖ Adding custom _document.js with lang=&lt;/span&gt;&lt;span class="nv"&gt;$LANG&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
  &lt;span class="nb"&gt;cd &lt;/span&gt;pages
  &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;'import Document, { Html, Head, Main, NextScript } from "next/document";
  class MyDocument extends Document {
    static async getInitialProps(ctx) {
      const initialProps = await Document.getInitialProps(ctx);
      return { ...initialProps };
    }
    render() {
      return (
        &amp;lt;Html lang="'&lt;/span&gt;&lt;span class="nv"&gt;$LANG&lt;/span&gt;&lt;span class="s1"&gt;'"&amp;gt;
          &amp;lt;Head /&amp;gt;
          &amp;lt;body&amp;gt;
            &amp;lt;Main /&amp;gt;
            &amp;lt;NextScript /&amp;gt;
          &amp;lt;/body&amp;gt;
        &amp;lt;/Html&amp;gt;
      );
    }
  }
  export default MyDocument;'&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; _document.js
  &lt;span class="nb"&gt;cd&lt;/span&gt; ..
&lt;span class="o"&gt;}&lt;/span&gt;

replace_index &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"‚úÖ  Replacing pages/index.js"&lt;/span&gt;
  &lt;span class="nb"&gt;cd &lt;/span&gt;pages
  &lt;span class="nb"&gt;rm &lt;/span&gt;index.js
  &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;'import Head from "next/head";
  export default function Home() {
    return (
      &amp;lt;&amp;gt;
        &amp;lt;Head&amp;gt;
          &amp;lt;title&amp;gt;'&lt;/span&gt;&lt;span class="nv"&gt;$APP_NAME&lt;/span&gt;&lt;span class="s1"&gt;'&amp;lt;/title&amp;gt;
          &amp;lt;meta name="description" content="Description for '&lt;/span&gt;&lt;span class="nv"&gt;$APP_NAME&lt;/span&gt;&lt;span class="s1"&gt;'" /&amp;gt;
          &amp;lt;link rel="icon" href="/favicon.ico" /&amp;gt;
        &amp;lt;/Head&amp;gt;
        &amp;lt;main&amp;gt;
          &amp;lt;h1&amp;gt;This new Next.js app has been reset!&amp;lt;/h1&amp;gt;
        &amp;lt;/main&amp;gt;
      &amp;lt;/&amp;gt;
    );
  }'&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; index.js
  &lt;span class="nb"&gt;cd&lt;/span&gt; ..
&lt;span class="o"&gt;}&lt;/span&gt;

replace_globals_css &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"‚úÖ  Replacing styles/globals.css"&lt;/span&gt;
  &lt;span class="nb"&gt;cd &lt;/span&gt;styles
  &lt;span class="nb"&gt;rm &lt;/span&gt;globals.css
  &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;'html {
  font-size: 100%;
}
body {
  font-size: 1rem;
  padding: 0;
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell,
    Fira Sans, Droid Sans, Helvetica Neue, sans-serif;
}
* {
  box-sizing: border-box;
}
'&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; globals.css
  &lt;span class="nb"&gt;cd&lt;/span&gt; ..
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"üî• Resetting Next.js app in &lt;/span&gt;&lt;span class="nv"&gt;$DIR&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"‚ú® Language: &lt;/span&gt;&lt;span class="nv"&gt;$LANG&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"‚ú® App name: &lt;/span&gt;&lt;span class="nv"&gt;$APP_NAME&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;

change_dir &lt;span class="nv"&gt;$DIR&lt;/span&gt;
delete_vercel_svg
delete_home_css
add_custom_document
replace_index
replace_globals_css

&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"‚ú® Opening project in VSCode"&lt;/span&gt;
code &lt;span class="nb"&gt;.&lt;/span&gt;

&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"üì£ DONE. Have a nice day!"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>webdev</category>
      <category>bash</category>
    </item>
    <item>
      <title>I made a terminal game in Python</title>
      <author>Tingwei</author>
      <pubDate>Fri, 09 Jul 2021 18:06:58 +0000</pubDate>
      <link>https://dev.to/tingwei628/i-made-a-terminal-game-in-python-3bcg</link>
      <guid>https://dev.to/tingwei628/i-made-a-terminal-game-in-python-3bcg</guid>
      <description>&lt;p&gt;I created Snake and Tetris with &lt;a href="https://docs.python.org/3/howto/curses.html"&gt;curses&lt;/a&gt; in Python.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/tingwei628/pytg"&gt;Repo&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=irQpzvLx0f4"&gt;Live Demo&lt;/a&gt;&lt;br&gt;
Screenshot&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IR1UcU64--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5wt11cx7yvjx2zcrxpy8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IR1UcU64--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5wt11cx7yvjx2zcrxpy8.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Enjoy it :P&lt;/p&gt;

</description>
      <category>python</category>
      <category>gamedev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Awesome üéß Music Player + tutorial</title>
      <author>Roden</author>
      <pubDate>Fri, 09 Jul 2021 18:04:47 +0000</pubDate>
      <link>https://dev.to/kerthin/awesome-music-player-g81</link>
      <guid>https://dev.to/kerthin/awesome-music-player-g81</guid>
      <description>&lt;h1&gt;Introduction&lt;/h1&gt;

&lt;p&gt;Last week I posted my calculator made in the style of Neomorphism. Today I decided to continue posting my similar works. Therefore, I want to present to you my music player, also made in the style of neomorphism.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Calculator&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/kerthin" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MEDW7r1U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--N_Cn4rKT--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/634154/b6864fc7-4410-46ca-a11d-bc605dc6d2b1.jpeg" alt="kerthin"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/kerthin/beautiful-neomorphic-calculator-dark-mode-6jm" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Neomorphic Calculator üßÆ + Dark Mode üñ§&lt;/h2&gt;
      &lt;h3&gt;Roden „Éª Jul 2 „Éª 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#codepen&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;/blockquote&gt;

&lt;h1&gt;Music Player&lt;/h1&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/Astap/embed/JjNKQVB?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://kerthin.github.io/musicPlayer-templateSait/"&gt;&lt;h1&gt;Full Page Demo&lt;/h1&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Functional&lt;/h2&gt;

&lt;h3&gt;01. Switching tracks&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/lJbn4bUGj0Y0iMKlij/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/lJbn4bUGj0Y0iMKlij/giphy.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It is possible to switch your tracks. If you switch a track while playing music, the next track will start by clicking on the "Play" button.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;02. Switching tracks&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/oKQTrdWlog9x1adXZI/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/oKQTrdWlog9x1adXZI/giphy.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;While the music is playing, the animation of scrolling the image of the song will be started.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;03. Rewind the song time&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/wl7ZtMykFiyGi0BRwc/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/wl7ZtMykFiyGi0BRwc/giphy.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You can also rewind the song. The song can be rewound manually using the timeline or using the buttons that scroll the song forward or backward for 5 seconds.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;04. Random launch of a track&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/PSMeyymgM6T4UNGWx4/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/PSMeyymgM6T4UNGWx4/giphy.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;When you click the lower right button, the tracks will start in random order, and not in order as specified in the array.

&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;This only works if the track ended on its own, and you didn't switch it.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;05. Repeat an album or track&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/4pqwXuuFjyEZiM6v72/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/4pqwXuuFjyEZiM6v72/giphy.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;If there is a number 1 in the button, it means that the track will be played again at the end (&lt;code&gt;Repeat&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;If the button is highlighted, but there are no numbers in it, it means that when the last track is played, the album will automatically start playing again from the first track.&lt;/li&gt;
&lt;li&gt;If the button is pale, it means that after playing the last track, the first one will not start.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;Responsive&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Phone:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://i.giphy.com/media/X8nWIy4uweQ8bWMKZD/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/X8nWIy4uweQ8bWMKZD/giphy.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The site is adapted for screen resolutions such as:&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;@media 414px&lt;/code&gt;&lt;br&gt;
&lt;code&gt;@media 375px&lt;/code&gt;&lt;br&gt;
&lt;code&gt;@media 320px&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Desktop:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://i.giphy.com/media/AzLe0fp2wtW0rwuQX4/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/AzLe0fp2wtW0rwuQX4/giphy.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I also decided to adapt the site to different screen heights so that there would be no problems with the display.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/51qP2B2ZHFGY8/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/51qP2B2ZHFGY8/giphy.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;Code&lt;/h1&gt;

&lt;p&gt;You can add your own tracks through the array.&lt;br&gt;
Here it is:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;jerryHerman&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;music/JerryHerman_PutOnYourSundayClothes.mp3&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;author&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Jerry Herman&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Put On Your Sunday&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;elvisPresley&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;music/ElvisPresley_CantHelpFallingInLove.mp3&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;author&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Elvis Presley&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Can't Falling In Love&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;royOrbison&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;music/RoyOrbison_OhPrettyWoman.mp3&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;author&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Roy Orbison&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Oh, Pretty Woman&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;frankSinatra&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;music/FrankSinatra_ThatsLife.mp3&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;author&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Frank Sinatra&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;That's Life&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;jimCroce&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;music/JimCroce_TimeInABottle.mp3&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;author&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Jim Croce&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Time In A Bottle&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;redHotChiliPeppers&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;music/RedHotChiliPeppers_DarkNecessities.mp3&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;author&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Red Hot Chili Peppers&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Dark Necessities&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;stephaneGrappelli&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;music/StephaneGrappelli_laMer.mp3&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;author&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Stephane Grappelli&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;La Mer&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;evanKing&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;music/EvanKing_Overwatch.mp3&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;author&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Evan King&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Overwatch&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;JR&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;music/JR_SouthSac.mp3&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;author&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;JR&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;SouthSac&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;theDeli&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;music/TheDeli_Sun.mp3&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;author&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;The Deli&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Sun&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;&lt;p&gt;It displays information about the track, changes the class for changing the image, and adds the track. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;To add an image, you need to create a line in the mixin. The image class must be the same as in the array specified above.&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;mixin&lt;/span&gt; &lt;span class="nx"&gt;albumBgMix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$albumBgName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;$bgPath&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;$albumBgName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;album&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;before&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;background&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;$bgPath&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;include&lt;/span&gt; &lt;span class="nx"&gt;albumBgMix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;jerryHerman&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://rawcdn.githack.com/Kerthin/musicPlayer-templateSait/4df6444e97123a39d036f1f9b57973858f70bae5/docs/image/albumBg/jerryHerman.jpg&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;include&lt;/span&gt; &lt;span class="nx"&gt;albumBgMix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;elvisPresley&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://rawcdn.githack.com/Kerthin/musicPlayer-templateSait/4df6444e97123a39d036f1f9b57973858f70bae5/docs/image/albumBg/elvisPresley.jpg&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;include&lt;/span&gt; &lt;span class="nx"&gt;albumBgMix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;royOrbison&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://rawcdn.githack.com/Kerthin/musicPlayer-templateSait/4df6444e97123a39d036f1f9b57973858f70bae5/docs/image/albumBg/royOrbison.jpg&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;include&lt;/span&gt; &lt;span class="nx"&gt;albumBgMix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;frankSinatra&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://rawcdn.githack.com/Kerthin/musicPlayer-templateSait/4df6444e97123a39d036f1f9b57973858f70bae5/docs/image/albumBg/frankSinatra.jpg&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;include&lt;/span&gt; &lt;span class="nx"&gt;albumBgMix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;jimCroce&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://rawcdn.githack.com/Kerthin/musicPlayer-templateSait/4df6444e97123a39d036f1f9b57973858f70bae5/docs/image/albumBg/jimCroce.jpg&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;include&lt;/span&gt; &lt;span class="nx"&gt;albumBgMix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;redHotChiliPeppers&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://rawcdn.githack.com/Kerthin/musicPlayer-templateSait/4df6444e97123a39d036f1f9b57973858f70bae5/docs/image/albumBg/redHotChiliPeppers.jpg&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;include&lt;/span&gt; &lt;span class="nx"&gt;albumBgMix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;stephaneGrappelli&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://rawcdn.githack.com/Kerthin/musicPlayer-templateSait/4df6444e97123a39d036f1f9b57973858f70bae5/docs/image/albumBg/stephaneGrappelli.jpg&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;include&lt;/span&gt; &lt;span class="nx"&gt;albumBgMix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;evanKing&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://rawcdn.githack.com/Kerthin/musicPlayer-templateSait/4df6444e97123a39d036f1f9b57973858f70bae5/docs/image/albumBg/evanKing.jpg&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;include&lt;/span&gt; &lt;span class="nx"&gt;albumBgMix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;JR&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://rawcdn.githack.com/Kerthin/musicPlayer-templateSait/4df6444e97123a39d036f1f9b57973858f70bae5/docs/image/albumBg/JR.jpg&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;include&lt;/span&gt; &lt;span class="nx"&gt;albumBgMix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;theDeli&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://rawcdn.githack.com/Kerthin/musicPlayer-templateSait/4df6444e97123a39d036f1f9b57973858f70bae5/docs/image/albumBg/theDeli.png&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;h1&gt;GitHub&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;You can also download this project from the GitHub repository.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/Kerthin"&gt;
        Kerthin
      &lt;/a&gt; / &lt;a href="https://github.com/Kerthin/musicPlayer-templateSait"&gt;
        musicPlayer-templateSait
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A music player made in the style of neomorphism.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/Kerthin/musicPlayer-templateSait/master/#"&gt;&lt;img width="100" src="https://res.cloudinary.com/practicaldev/image/fetch/s--P1xqdQ9z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Kerthin/musicPlayer-templateSait/master/READMEimage/squirrelAppIcon.png" alt="Kerthin logo"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;
    &lt;a href="https://raw.githubusercontent.com/Kerthin/musicPlayer-templateSait/master/#"&gt;&lt;img src="https://camo.githubusercontent.com/3aaee52aea7e26ea020e0c2bac3ea70c011c1cc0507999c2c8b91c121b7fe9ba/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6275696c642d70617373696e672d627269676874677265656e2e737667" alt="Build Status"&gt;&lt;/a&gt;
    &lt;a href="https://raw.githubusercontent.com/Kerthin/musicPlayer-templateSait/master/#"&gt;&lt;img src="https://camo.githubusercontent.com/9131d6ef04409049c328ce7a6f6a175e64f1374adac1f18ffaf89a8f2889e366/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f6d706c6574696f6e2d32302532352d6f72616e67652e737667" alt="completion Status"&gt;&lt;/a&gt;
    &lt;a href="https://raw.githubusercontent.com/Kerthin/musicPlayer-templateSait/master/#"&gt;&lt;img src="https://camo.githubusercontent.com/0ef94bb3d6bdf5fec0c3f5452111c9dd1b2d4c82518f871f6da0dd27fce5910d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6e706d2d76362e31342e342d626c75652e737667" alt="Version"&gt;&lt;/a&gt; &lt;br&gt;
    &lt;a href="https://raw.githubusercontent.com/Kerthin/musicPlayer-templateSait/master/#"&gt;&lt;img src="https://camo.githubusercontent.com/e2c7bcf456840ac212cd09701b26b6d86ed89b7780dde7ef35aa3d5c2312af9b/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6e6f64652d7631302e31362e302d626c75652e737667" alt="Version"&gt;&lt;/a&gt;
    &lt;a href="https://raw.githubusercontent.com/Kerthin/musicPlayer-templateSait/master/#"&gt;&lt;img src="https://camo.githubusercontent.com/0f65d45420ca4ebd6b698cfb148c8afe07b9171f58927bc05dbebabec24d8948/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f7265706f25323073697a652d302e372532304d422d677265656e2e737667" alt="Size"&gt;&lt;/a&gt;
    &lt;a href="https://raw.githubusercontent.com/Kerthin/musicPlayer-templateSait/master/#"&gt;&lt;img src="https://camo.githubusercontent.com/dcc0fe2b2da3287aa7d01b012f6a8892fba7af66d73a68fd0b24e7f412094aad/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f70726f6a65637425323076657273696f6e2d76312d626c75652e737667" alt="Version"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h2&gt;
Description&lt;/h2&gt;
&lt;p&gt;The project is a working music player made in the style of neomorphism.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;In the player it is possible:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;to switch tracks;&lt;/li&gt;
&lt;li&gt;rewind a track for 5 seconds forward and back;&lt;/li&gt;
&lt;li&gt;use the music bar to scroll the track in more detail;&lt;/li&gt;
&lt;li&gt;to enable repeat track;&lt;/li&gt;
&lt;li&gt;to enable repeat playlist;&lt;/li&gt;
&lt;li&gt;you can enable random track launch mode.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://kerthin.github.io/musicPlayer-templateSait/" rel="nofollow"&gt;Demo&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;
Use technology.&lt;/h4&gt;
&lt;p&gt;The following technologies were used to create this project:&lt;/p&gt;
&lt;h3&gt;
Task-Manager&lt;/h3&gt;
&lt;p&gt;
    &lt;a href="https://raw.githubusercontent.com/Kerthin/musicPlayer-templateSait/master/#"&gt;
        &lt;img width="144px" src="https://res.cloudinary.com/practicaldev/image/fetch/s--dz68nBz1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Kerthin/musicPlayer-templateSait/master/READMEimage/gulp.svg"&gt;
    &lt;/a&gt;
&lt;/p&gt;
&lt;h3&gt;
Software platform&lt;/h3&gt;
&lt;p&gt;
    &lt;a href="https://raw.githubusercontent.com/Kerthin/musicPlayer-templateSait/master/#"&gt;
        &lt;img width="260px" src="https://res.cloudinary.com/practicaldev/image/fetch/s--1bAX22hE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Kerthin/musicPlayer-templateSait/master/READMEimage/nodejs-1.svg"&gt;
    &lt;/a&gt;
&lt;/p&gt;

&lt;h3&gt;
Preprocessors&lt;/h3&gt;

&lt;p&gt;
    &lt;a href="https://raw.githubusercontent.com/Kerthin/musicPlayer-templateSait/master/#"&gt;
        &lt;img width="144px" src="https://res.cloudinary.com/practicaldev/image/fetch/s--VTkL5PIM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Kerthin/musicPlayer-templateSait/master/READMEimage/pug.svg"&gt;
    &lt;/a&gt;
    &lt;a href="https://raw.githubusercontent.com/Kerthin/musicPlayer-templateSait/master/#"&gt;
        &lt;img width="144px" src="https://res.cloudinary.com/practicaldev/image/fetch/s--fHNTxVjM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Kerthin/musicPlayer-templateSait/master/READMEimage/sass-1.svg"&gt;
    &lt;/a&gt;
&lt;/p&gt;

&lt;h3&gt;
Package manager&lt;/h3&gt;

&lt;p&gt;
    &lt;a href="https://raw.githubusercontent.com/Kerthin/musicPlayer-templateSait/master/#"&gt;
        &lt;img width="144px" src="https://res.cloudinary.com/practicaldev/image/fetch/s--DwxO8f3M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Kerthin/musicPlayer-templateSait/master/READMEimage/npm.svg"&gt;
    &lt;/a&gt;
&lt;/p&gt;

&lt;h3&gt;
Languages&lt;/h3&gt;

&lt;p&gt;
    &lt;a href="https://raw.githubusercontent.com/Kerthin/musicPlayer-templateSait/master/#"&gt;
        &lt;img width="124px" src="https://res.cloudinary.com/practicaldev/image/fetch/s--E5iqWZju--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Kerthin/musicPlayer-templateSait/master/READMEimage/html-5.svg"&gt;
    &lt;/a&gt;
    &lt;a href="https://raw.githubusercontent.com/Kerthin/musicPlayer-templateSait/master/#"&gt;
        &lt;img width="124px" src="https://res.cloudinary.com/practicaldev/image/fetch/s--dgKpW7fl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Kerthin/musicPlayer-templateSait/master/READMEimage/css-3.svg"&gt;
    &lt;/a&gt;
    &lt;a href="https://raw.githubusercontent.com/Kerthin/musicPlayer-templateSait/master/#"&gt;
        &lt;img width="124px" src="https://res.cloudinary.com/practicaldev/image/fetch/s--FMmm5d37--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Kerthin/musicPlayer-templateSait/master/READMEimage/javascript.svg"&gt;
    &lt;/a&gt;
&lt;/p&gt;


&lt;h2&gt;
Plugins&lt;/h2&gt;
&lt;p&gt;To develop the project through gulp, I used the following types of NPM plugins:&lt;/p&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Plugin&lt;/th&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/gulp-sourcemaps" rel="nofollow"&gt;gulp-sourcemaps&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/gulp-sourcemaps" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/528a1ebd364b693bb3d0101b0673c41e655019ffd2f9bdc0d1d6ee92e2641899/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6e706d2d76322e362e342d626c75652e737667" alt="gulp-sourcemaps-status"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Intended for generation of &lt;code&gt;css source maps&lt;/code&gt; which will be necessary at debugging of a code.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/gulp-imagemin" rel="nofollow"&gt;gulp-imagemin&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/gulp-imagemin" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/711705519071329822e444430727735680a0559653d21c428730d5f74dacef31/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6e706d2d76342e312e302d626c75652e737667" alt="gulp-imagemin-status"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Minify &lt;code&gt;PNG&lt;/code&gt;, &lt;code&gt;JPEG&lt;/code&gt;, &lt;code&gt;GIF&lt;/code&gt; and &lt;code&gt;SVG&lt;/code&gt; images with &lt;code&gt;imagemin&lt;/code&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/gulp-autoprefixer" rel="nofollow"&gt;gulp-autoprefixer&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/gulp-autoprefixer" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/98049dfc0610712ebdfca9ffac989e2d2b0693eec4fd386e15242b7eeec66552/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6e706d2d76362e302e302d626c75652e737667" alt="gulp-autoprefixer-status"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Prefix &lt;code&gt;CSS&lt;/code&gt; with &lt;code&gt;Autoprefixer&lt;/code&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/imagemin-pngquant" rel="nofollow"&gt;imagemin-pngquant&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/imagemin-pngquant" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/98049dfc0610712ebdfca9ffac989e2d2b0693eec4fd386e15242b7eeec66552/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6e706d2d76362e302e302d626c75652e737667" alt="imagemin-pngquant-status"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;Pngquant imagemin&lt;/code&gt; plugin&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/gulp-uglify" rel="nofollow"&gt;gulp-uglify&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/gulp-uglify" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b2b4a07c63198d7e5f42f3b13e24079c5ffbc9c3527a41f9179a171d7f0e4f0f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6e706d2d76332e302e312d626c75652e737667" alt="gulp-uglify-status"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Minify &lt;code&gt;JavaScript&lt;/code&gt; with &lt;code&gt;UglifyJS3&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/gulp-rigger" rel="nofollow"&gt;gulp-rigger&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/gulp-rigger" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/503c5942f276fc051f3b969da0dbaaf76a0aa9bb080825ceafda298f5fb986fa/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6e706d2d76302e352e382d626c75652e737667" alt="gulp-rigger-status"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;Rigger&lt;/code&gt; is a build time include engine for &lt;code&gt;Javascript&lt;/code&gt;, &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;‚Ä¶&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/Kerthin/musicPlayer-templateSait"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;
&lt;a href="https://kerthin.github.io/musicPlayer-templateSait/"&gt;&lt;h1&gt;Full Page Demo&lt;/h1&gt;&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;/blockquote&gt;

&lt;h1&gt;The End&lt;/h1&gt;

&lt;p&gt;Thank you for giving your precious time to my post. See you soon.&lt;br&gt;
I can advise you to subscribe to my &lt;a href="https://twitter.com/BelichenkoRoden"&gt;&lt;strong&gt;Twitter&lt;/strong&gt;&lt;/a&gt;, I also post my work there.&lt;br&gt;
&lt;br&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Goodbye&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://i.giphy.com/media/1iTQdNvyJyja66fS/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/1iTQdNvyJyja66fS/giphy.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>codepen</category>
      <category>javascript</category>
      <category>css</category>
    </item>
    <item>
      <title>Using styled-components with React</title>
      <author>Shubam Bhasin</author>
      <pubDate>Fri, 09 Jul 2021 17:56:34 +0000</pubDate>
      <link>https://dev.to/shubambhasin/using-styled-components-with-react-46d7</link>
      <guid>https://dev.to/shubambhasin/using-styled-components-with-react-46d7</guid>
      <description>&lt;p&gt;Well, we all love CSS, we all love JavaScript and we all love React. What if someone tells you that now you can create full-fledged Components ( e.g., a button, a navbar, a tile, etc ) while writing React code using CSS in a very easy handy way.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-does-a-styled-component-looks-like-"&gt;
  &lt;/a&gt;
  How does a styled component looks like ?
&lt;/h2&gt;

&lt;p&gt;Just like this üëá&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Button&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="s2"&gt;`
  /* This renders the buttons above... Edit me! */
  display: inline-block;
  border-radius: 3px;
  padding: 0.5rem 0;
  margin: 0.5rem 1rem;
  width: 11rem;
  background: transparent;
  color: white;
  border: 2px solid white;
`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And how do we use it? Is it even simple? Yes, you guessed it right,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Writing this will give you a separate button component of the CSS properties &lt;/span&gt;
&lt;span class="c1"&gt;//mentioned above&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Big Button&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Ain't it easy? Now you can use this button anywhere without writing any separate class or anything.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lets-dive-a-little-deeper"&gt;
  &lt;/a&gt;
  Let's dive a little deeper
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#why-styled-components"&gt;
  &lt;/a&gt;
  Why Styled Components?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Automatic vendor prefixing:&lt;/strong&gt; You can use standard CSS properties, and styled-components will add vendor prefixes should they be needed.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Unique class names:&lt;/strong&gt; Styled components are independent of each other, and you do not have to worry about their names because the library handles that for you.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Elimination of dead styles:&lt;/strong&gt; Styled components removes unused styles, even if they‚Äôre declared in your code.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h3&gt;

&lt;p&gt;It is super easy. You can do it through a¬†&lt;a href="https://styled-components.com/docs/basics#installation"&gt;CDN&lt;/a&gt;¬†or with a package manager like yarn or npm‚Ä¶&lt;/p&gt;

&lt;p&gt;for &lt;strong&gt;&lt;em&gt;npm&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// npm&lt;/span&gt;
&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;I&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;components&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;with &lt;strong&gt;&lt;em&gt;yarn&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;yarn&lt;/span&gt; &lt;span class="nx"&gt;add&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;components&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#lets-learn-the-syntax-now"&gt;
  &lt;/a&gt;
  Let's learn the syntax now
&lt;/h3&gt;

&lt;p&gt;If I go a little precise, styled-components use Javascript's template literals to bridge the gap between components and the styles. So, technically when we write a styled component, we are actually writing React components with styles. &lt;/p&gt;

&lt;p&gt;Let's see an example now.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;styled-components&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// Styled component named StyledButton&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;OrangeButton&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt;&lt;span class="s2"&gt;`
  background-color: orange;
  font-size: 1.5rem;
  color: white;
    border-radius: 5px;
`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// nothing special here, works just like a normal react component.&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;SomeReactComponents&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;OrangeButton&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; Login &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;OrangeButton&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we know that whatever we write with styled components, in reality, is a React component. So a React component is definitely incomplete without props.&lt;/p&gt;

&lt;p&gt;Yes we can use props with styled components üòçüî•üî•&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lets-learn-how-to-do-that"&gt;
  &lt;/a&gt;
  Let's learn how to do that
&lt;/h3&gt;

&lt;p&gt;For example, we need a button, but the button's color is coming from the database or it is dynamic or dependent on some other component, how will we use that in &lt;strong&gt;&lt;em&gt;styled-components&lt;/em&gt;&lt;/strong&gt;? Obviously using props.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;styled-components&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;DynamicButton&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt;&lt;span class="s2"&gt;`

  font-size: 1.5rem;
  color: white;
    border-radius: 5px;
                                        //props                                                             
  background-color: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bg&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;red&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;red&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;green&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="s2"&gt;`;

function SomeReactComponent() {
  return (
    &amp;lt;div&amp;gt;
      &amp;lt;DynamicButton bg="Red"&amp;gt;Red button&amp;lt;/DynamicButton&amp;gt;
      &amp;lt;DynamicButton bg="Green"&amp;gt;Green button&amp;lt;/DynamicButton&amp;gt;
    &amp;lt;/div&amp;gt;
  )
}
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So we pass a &lt;strong&gt;&lt;em&gt;bg&lt;/em&gt;&lt;/strong&gt; in props and if you pay a little attention &lt;strong&gt;&lt;em&gt;${props}&lt;/em&gt;&lt;/strong&gt; is used because styled components use JavaScript's template literals.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tip"&gt;
  &lt;/a&gt;
  Tip
&lt;/h2&gt;

&lt;p&gt;We can keep styles in a separate file with export statements and just simply import them wherever we want to use them.&lt;/p&gt;

&lt;p&gt;That's Styled components !!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pros"&gt;
  &lt;/a&gt;
  Pros
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Reusable&lt;/strong&gt;¬†‚Äì just as the normal React components, you can make small reusable pieces of code and avoid¬†code¬†duplication. Typical use cases are buttons, tables, forms, etc.&lt;/li&gt;
&lt;li&gt;Writing pure CSS ‚Äì –æne of the biggest advantages of Styled components in comparison to other styling solutions in React. You don‚Äôt use weird syntax and write the CSS as a JavaScript object. Inside the template literals, you¬†write¬†SCSS or plain CSS.&lt;/li&gt;
&lt;li&gt;Dynamic styling ‚Äì Using¬†props,¬†you can¬†have¬†dynamic values, which gives you¬†a high¬†level of¬†flexibility¬†by avoiding writing duplicated styles.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#cons"&gt;
  &lt;/a&gt;
  Cons
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;The only con I see is while debugging something in chrome dev tools. We see weird class names and hence it is difficult to find what class is doing what. Other than this I find them super lit.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;See you using styled components üòÅ&lt;/p&gt;

</description>
      <category>styledcomponents</category>
      <category>css</category>
      <category>react</category>
    </item>
    <item>
      <title>Interview panic - how to overcome the difficult questions</title>
      <author>vazsonyidl</author>
      <pubDate>Fri, 09 Jul 2021 17:53:38 +0000</pubDate>
      <link>https://dev.to/vazsonyidl/interview-panic-how-to-overcome-the-difficult-questions-6o6</link>
      <guid>https://dev.to/vazsonyidl/interview-panic-how-to-overcome-the-difficult-questions-6o6</guid>
      <description>&lt;h2&gt;
  &lt;a href="#intro"&gt;
  &lt;/a&gt;
  Intro
&lt;/h2&gt;

&lt;p&gt;There are several interviews in every developers life. You may look for a new opportunity, or you are just preparing yourself to keep this skill up-to-date and do not let this rust. The case does not matter, it could happen to you when you encounter a question where you do not have so much clue at a first glance how to solve the task. In this article, I will suggest some ideas how to overcome these though times.&lt;br&gt;
This post is for &lt;em&gt;beginners or pre-intermediate&lt;/em&gt; level but I recommend this article for everyone.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#the-scene"&gt;
  &lt;/a&gt;
  The scene
&lt;/h3&gt;

&lt;p&gt;So let's take that you are on an interview and the interviewer pops up a coding question - and you are like &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;excuse me, what the?! I can not solve this, sorry...&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Of course you should not say this - or at least not the best idea. Because of reasons and the most frequent interviewing process, you have to prove that you are the best candidate ever and you have to find the best solution. Instead of panicking, I suggest you to try the following steps because I am hundred percent sure that the interviewer's goal is not to see the most efficient solution within 2 minutes in a one-liner. &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#ideas"&gt;
  &lt;/a&gt;
  Ideas
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;1) Taking your possibilities into account&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;If you have a code editor open - and you must have one which you are familiar with, start to sketch your possible options and functions you already now. Let's write down the data structures which could come in handy. You may think this is not the best idea, but while you are noting that - I have Set, Map, Array and Object for this, hmm Objects are not the best for this, then two remains. Now, if you are thinking loud, the interviewer can follow your thoughts, maybe ask a question - what is the main difference of use-cases between Objects and Maps? .....&lt;/p&gt;

&lt;p&gt;&lt;em&gt;2) Asking for details&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This may sound stupid, but with this you can widen your knowledge of the current problem, and with that you have a more clear vision of what to implement. From another perspective, it is always a good point during the interview process. Working in a team and implementing feature is full of discussion and questions, so know how to ask and what to ask is a really valuable skill.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;3) Put on the TDD glasses&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This abbreviation stands for Test Driven Development, and nowadays this is a popular concept in the software development industry. This could be a whole Udemy course what TDD is and what are the best practices to start with, etc. but you can start with some tests, where you can summarise your current informations and requirements for the task. This can give a skeleton for your possible solution. Write a test skeleton for each requirements you have discovered within the last few minutes, then go ahead and start implementing your solution.&lt;/p&gt;

&lt;p&gt;With these, you have more and more time to think about the solution for the original question, instead of just sitting there silently which could be a quiet awkward situation. Do not forget that the interviewer's goal is not to find the most optimised solution within 45 seconds but to see your level of skills - soft skills and coding skills as well.&lt;/p&gt;

&lt;p&gt;This may have sounded like that you need half an hour for solving a simple task, but believe me that you will go through this points within 3 to 5 minutes. &lt;em&gt;One thing to add of course - you do not have to use these all the times, or at all.&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#example"&gt;
  &lt;/a&gt;
  Example
&lt;/h3&gt;

&lt;p&gt;Implement a stack without usage of an array!&lt;/p&gt;

&lt;p&gt;Now let's quickly summarise the things and go through our bullet points.&lt;/p&gt;

&lt;p&gt;1) The remaining options in JavaScript are &lt;em&gt;/excluding primitive types, but I really welcome a primitive type stack solution in the comment section :)/&lt;/em&gt; : &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Map&lt;/li&gt;
&lt;li&gt;Set&lt;/li&gt;
&lt;li&gt;WeakMap&lt;/li&gt;
&lt;li&gt;WeakSet&lt;/li&gt;
&lt;li&gt;Object&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Knowing the behaviour of a stack, we may exclude Map and WeakMap, hence we should now what &lt;em&gt;key&lt;/em&gt; we are querying for.&lt;/p&gt;

&lt;p&gt;Set and WeakSet are dropped because they store unique reference values, so if you would like to add the same primitive value twice in your solution, you will not be able to.&lt;/p&gt;

&lt;p&gt;So, &lt;strong&gt;Object&lt;/strong&gt; remained.&lt;/p&gt;

&lt;p&gt;2) Ask for questions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Does a maximum/default stack size required? &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Yes, maybe let's take this to 7&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What should happen when we overflow/underflow our stack?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Throw some kind of error accordingly.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;3) Sketch up some TDD things&lt;/p&gt;

&lt;p&gt;With all the information you have by this time, you can sketch up your tests' skeleton.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;describe('Stack without array', () =&amp;gt; {
  it('should be initialised - with default length', () =&amp;gt; {
    let stack = new Stack();
    expect(stack).toBeDefined();
});

  it.todo('should set maximum length');

  it.todo('should add new item on top');

  it.todo('should remove item from top');

  it.todo('should handle overflow');

  it.todo('should handle underflow');
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Solution:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;class Stack {
  #elements = {};
  constructor(private size: number = 7) {
  }

  get elements() {
    return this.#elements;
  }

  public push(element) {
    this.#elements[Object.keys(this.#elements).length] = element;
  }

  public pop() {
    this.#elements = Object.entries(this.elements)
      .filter(([index, element]) =&amp;gt; +index !== Object.keys(this.elements).length - 1)
      .reduce((acc, [index, element]) =&amp;gt; {
        acc[index] = element;
        return acc;
      }, {});
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Without implementing every detail, you may see how can we iterate over implementing this and extending the test cases in paralel while finding the solution.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#outro"&gt;
  &lt;/a&gt;
  Outro
&lt;/h4&gt;

&lt;p&gt;Hope you enjoyed my article, please add any interview idea here as well as correcting me for any mistakes I have made. Have a nice day everyone!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>javascript</category>
    </item>
    <item>
      <title>What's your morning routine?</title>
      <author>Noƒçnica Fee</author>
      <pubDate>Fri, 09 Jul 2021 17:27:10 +0000</pubDate>
      <link>https://dev.to/run-x/what-s-your-morning-routine-26ld</link>
      <guid>https://dev.to/run-x/what-s-your-morning-routine-26ld</guid>
      <description>&lt;p&gt;&lt;em&gt;Cover image by AcombesFR, CC BY 4.0, via Wikimedia Commons&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Being at home for 15 months forced me to figure out the morning routine that actually helped me, as I tried to enter a mental state where work felt easy.&lt;/p&gt;

&lt;p&gt;I did everything from 'roll out of bed and immediately open my laptop' to 'two hours of self care before I even touch my phone' and have settled into something that works okay. For me the essentials are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;shower&lt;/li&gt;
&lt;li&gt;light exercise&lt;/li&gt;
&lt;li&gt;make a cup of coffee (I froth the milk with a &lt;a href="https://www.amazon.com/Miroco-Stainless-Automatic-Cappuccino-Chocolates/dp/B07HH9BHL1/ref=asc_df_B07HH9BHL1/?tag=hyprod-20&amp;amp;linkCode=df0&amp;amp;hvadid=242019256550&amp;amp;hvpos=&amp;amp;hvnetw=g&amp;amp;hvrand=14187248414928926185&amp;amp;hvpone=&amp;amp;hvptwo=&amp;amp;hvqmt=&amp;amp;hvdev=c&amp;amp;hvdvcmdl=&amp;amp;hvlocint=&amp;amp;hvlocphy=9061081&amp;amp;hvtargid=pla-575341920861&amp;amp;psc=1"&gt;cheap device&lt;/a&gt; that, 9 months later, is my favorite pandemic purchase)&lt;/li&gt;
&lt;li&gt;drink coffee sitting in the back yard while the dogs run around&lt;/li&gt;
&lt;li&gt;space out looking at TikTok for half an hour&lt;/li&gt;
&lt;li&gt;sit down at my desk&lt;/li&gt;
&lt;li&gt;realize an hour later that I didn't eat anything&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And that's how it goes! What's your morning routine?&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>lifeskills</category>
      <category>watercooler</category>
      <category>coffee</category>
    </item>
  </channel>
</rss>
