<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How 1.5 years of writing posts on dev.to made me a better developer ‚úçÔ∏è‚ÜîÔ∏èüßë‚ÄçüíªüöÄ</title>
      <author>Pascal Thormeier</author>
      <pubDate>Sun, 16 Jan 2022 12:48:14 +0000</pubDate>
      <link>https://dev.to/thormeier/how-15-years-of-writing-posts-on-devto-made-me-a-better-developer--25j4</link>
      <guid>https://dev.to/thormeier/how-15-years-of-writing-posts-on-devto-made-me-a-better-developer--25j4</guid>
      <description>&lt;p&gt;I've been here for a while now. I love the community, the people are amazing and I learned so much while reading the amazing articles the authors on here have to offer.&lt;/p&gt;

&lt;p&gt;I also write articles every other week (shocking news, I know) and today I want to get a bit more meta about it. I want to tell you how writing articles has actually made me a better developer. Let's jump right in.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creativity"&gt;
  &lt;/a&gt;
  Creativity üé®
&lt;/h2&gt;

&lt;p&gt;If you want your articles to be read by people, there's two things you more or less have to deliver: Usefulness and entertainment. I once read somewhere that a good tech talk is 60-80% entertainment and the rest is useful info about the topic. Although this is an opinion of someone, I think it has a very true core, also for the text medium. I love articles that are fun to read. I mean, who doesn't, really? If I want some info, I could read docs of topics, but when I browse articles on dev.to, the topic is the thing that grabs my attention, but I also stay for the fun.&lt;/p&gt;

&lt;p&gt;Writing useful &lt;em&gt;and&lt;/em&gt; entertaining articles on a regular basis means I have to get creative. Listicles write themselves, basically - and I'm also guilty of producing them every so often, I admit that - the next React to-do list tutorial is going to be read by people who want to get into the tech, yeah, but what's the fun in writing about that? I could write about the same exact topic for weeks on end (think: "React To Do list, but this time I'm only using my left hand!"), but people don't stick around for that, usually.&lt;/p&gt;

&lt;p&gt;I think of myself as a fairly creative person. Writing &lt;em&gt;and actually coming up with stuff to write about&lt;/em&gt;, though, greatly increased my creativity. And creativity is especially useful for a developer.&lt;/p&gt;

&lt;p&gt;Developers need to be creative in order to find the solutions that work best. They need to be creative in order to support the people they work with, be it business, design, or a client. They need to be creative in order to strive. Understanding and applying logic is one thing, but creativity is a large part of the job.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#learning-new-stuff"&gt;
  &lt;/a&gt;
  Learning new stuff üéì
&lt;/h2&gt;

&lt;p&gt;I've written a few articles on things I only knew a little bit about when writing. I even made it a thing once to &lt;a href="https://dev.to/thormeier/i-m-going-to-give-snowpack-a-try-now-3ohm"&gt;document every step of learning a new tool called Snowpack&lt;/a&gt; or showing you what &lt;a href="https://dev.to/thormeier/crunching-numbers-stuff-i-wrote-for-project-euler-7ng"&gt;I've learned while messing around on Project Euler&lt;/a&gt;. Learning is an essential part of the job. If you're not switching jobs constantly or keep yourself busy with a ton of small side projects, chances are you're more or less focussing on a single tech stack that your company uses and get really proficient in that, while the outside world is constantly changing. New tools and techniques emerge and vanish again in the neverending cycle that software development really is.&lt;/p&gt;

&lt;p&gt;And that can be an issue. Spoiler: Anyone's favorite framework or language are not going to stick around for the rest of their entire career. Unless you're doing Kobol or SAP, of course, those will stick with us for the next few centuries, probably.&lt;/p&gt;

&lt;p&gt;Learning new things helps in different ways: You might find a new interesting tech stack to diversify your portfolio, you might find tools that could be useful some day (just had that exact case last Friday, actually!) or you might just learn a new paradigm that broadens your horizon in general.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#people"&gt;
  &lt;/a&gt;
  People üßë‚Äçü§ù‚Äçüßë
&lt;/h2&gt;

&lt;p&gt;Seriously, when I started writing articles, I thought this would be a one-person-show for most of the time, trying to find inspiration myself, delivering to the masses where I barely know a face, let alone the names of people. Turns out I was as wrong as I could be! The people you get to know, either by joining a Discord server or two, reading other people's articles or by discussing with them in the comment section is amazing.&lt;/p&gt;

&lt;p&gt;I just had an amazing call on Friday with someone I got to know through writing articles and reading theirs. We had a great exchange and figured we could help each other learn and reach our goals faster! This wouldn't have happend if I wasn't writing articles. This is, yet again, another learning opportunity for both of us. Which brings me to the next point:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#teaching"&gt;
  &lt;/a&gt;
  Teaching üßë‚Äçüè´
&lt;/h2&gt;

&lt;p&gt;An old saying goes: "You truly understood something if you can explain it to others so they understand it as well."&lt;/p&gt;

&lt;p&gt;And that's true! By trying to teach things in the tutorials I write and by explaining why I coded some things the way I coded them, I learn to question my own decisions and reflexes. There's go-to patterns everywhere, but maybe those are not the ideal patterns to begin with. Perhaps they're hard to understand and unnecessarily complicated. By trying to explain them, I question them. If they're too complex, I try to simplify or find a different way to solve a problem entirely.&lt;/p&gt;

&lt;p&gt;It also helps me coach juniors or people in the bootcamps I sometimes attend as a coach. It helps me to explain technical decisions to non-technical people, making me at least &lt;em&gt;look&lt;/em&gt; more senior.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#escaping-the-comfort-zone"&gt;
  &lt;/a&gt;
  Escaping the comfort zone üé¢
&lt;/h2&gt;

&lt;p&gt;We all have our comfort zones. Some are smaller, some are larger, but we all know things we would rather not do. Be it because we think we're bad at it, or because we're actually bad at it, or because we're afraid people will judge us, you name it. Comfort zones exist and that's a good thing. They let us excell at what we're good at and let us avoid things we might break.&lt;/p&gt;

&lt;p&gt;But getting out of the comfort zone every now and then is necessary in order to evolve. Writing, and also for some people the interaction with the community, forces one out of their comfort zone on a regular basis. Some people will hate your posts, others will love them, that's just how it works. You cant satisfy everybody at once.&lt;/p&gt;

&lt;p&gt;Writing articles puts you on a stage. You might feel uncomfortable being on that stage (the comfort zone I was talking about), but after some articles you will &lt;em&gt;want&lt;/em&gt; to be on that stage. The positive feedback you get will be amazing. And it helped me to get out of my comfort zone in other areas as well.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#in-the-end"&gt;
  &lt;/a&gt;
  In the end
&lt;/h2&gt;

&lt;p&gt;I told you about all the personal benefits I got of writing articles on dev.to. Perhaps you agree, perhaps you don't, perhaps it has inspired you to write articles yourself now! I'm certainly inspired now. And off I go to the next article draft!&lt;/p&gt;




&lt;p&gt;&lt;em&gt;I hope you enjoyed reading this article as much as I enjoyed writing it! If so, leave a&lt;/em&gt; ‚ù§Ô∏è &lt;em&gt;or a&lt;/em&gt; ü¶Ñ&lt;em&gt;! I write tech articles in my free time and like to drink coffee every once in a while.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;If you want to support my efforts,&lt;/em&gt; &lt;a href="http://buymeacoffee.com/pthormeier"&gt;&lt;em&gt;you can offer me a coffee&lt;/em&gt; ‚òï&lt;/a&gt; &lt;em&gt;or&lt;/em&gt; &lt;a href="https://twitter.com/pthormeier"&gt;&lt;em&gt;follow me on Twitter&lt;/em&gt; üê¶&lt;/a&gt;&lt;em&gt;!&lt;/em&gt; &lt;em&gt;You can also support me directly via &lt;a href="https://www.paypal.me/pthormeier"&gt;Paypal&lt;/a&gt;!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://buymeacoffee.com/pthormeier"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kc4mYYLu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/x55hp6jopwyy161d8e2u.png" alt="Buy me a coffee button" width="262" height="60"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>career</category>
      <category>discuss</category>
      <category>watercooler</category>
    </item>
    <item>
      <title>How to separate public folder in laravel</title>
      <author>BELHARRADI JAMAL</author>
      <pubDate>Sun, 16 Jan 2022 12:44:05 +0000</pubDate>
      <link>https://dev.to/jamalroger/how-to-separate-public-folder-in-laravel-3ld</link>
      <guid>https://dev.to/jamalroger/how-to-separate-public-folder-in-laravel-3ld</guid>
      <description>&lt;p&gt;&lt;strong&gt;Hi&lt;/strong&gt;,everyone know that is really difficult to host &lt;strong&gt;Laravel&lt;/strong&gt; project on shared host because they give just one folder &lt;strong&gt;public_html&lt;/strong&gt;, and is the only entry point folder. but the structure of Laravel entry point of laravel is not the** root of project ** is &lt;strong&gt;root_project/public&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#so-how-can-i-host-laravel-in-this-situation-"&gt;
  &lt;/a&gt;
  So how can i host &lt;strong&gt;Laravel&lt;/strong&gt; in this situation ??
&lt;/h2&gt;

&lt;p&gt;The best solution is to separate &lt;strong&gt;public folder&lt;/strong&gt; from &lt;strong&gt;Laravel&lt;/strong&gt; project.&lt;br&gt;
From  structure&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cQnhjNEV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/84e9uxja2kcafthxtxhv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cQnhjNEV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/84e9uxja2kcafthxtxhv.png" alt="structure" width="555" height="203"&gt;&lt;/a&gt;&lt;br&gt;
To structure&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Mrped6em--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3btfr1u5fukqi2iuicsp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Mrped6em--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3btfr1u5fukqi2iuicsp.png" alt="structure" width="502" height="49"&gt;&lt;/a&gt;&lt;br&gt;
With new structure we move public folder outside src code.&lt;br&gt;
so now we change the name of folder &lt;strong&gt;public&lt;/strong&gt; to &lt;strong&gt;public_html&lt;/strong&gt; to host the project. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--T7AZGM_h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zfw13t7gx62w3dhhz7ad.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T7AZGM_h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zfw13t7gx62w3dhhz7ad.jpg" alt="hosting" width="236" height="236"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;First we should bind public_path in &lt;strong&gt;bootstrap/app.php&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="c1"&gt;// add this before return $app;&lt;/span&gt;
&lt;span class="nv"&gt;$app&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'path.public'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;base_path&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'/../public_html'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After that we need  update path in &lt;strong&gt;server.php&lt;/strong&gt; and *&lt;em&gt;index.php &lt;br&gt;
*&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;*&lt;em&gt;server.php *&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cd"&gt;/**
 * Laravel - A PHP Framework For Web Artisans
 *
 * @package  Laravel
 * @author   Taylor Otwell &amp;lt;taylor@laravel.com&amp;gt;
 */&lt;/span&gt;

&lt;span class="nv"&gt;$uri&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;urldecode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nb"&gt;parse_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_URI'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="kc"&gt;PHP_URL_PATH&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// This file allows us to emulate Apache's "mod_rewrite" functionality from the&lt;/span&gt;
&lt;span class="c1"&gt;// built-in PHP web server. This provides a convenient way to test a Laravel&lt;/span&gt;
&lt;span class="c1"&gt;// application without having installed a "real" web server software here.&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$uri&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="s1"&gt;'/'&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;file_exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;__DIR__&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'/../public_html'&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$uri&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;require_once&lt;/span&gt; &lt;span class="k"&gt;__DIR__&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'/../public_html/index.php'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;index.php in public_html&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;
&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Illuminate\Contracts\Http\Kernel&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Illuminate\Http\Request&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nb"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'LARAVEL_START'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;microtime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

&lt;span class="cm"&gt;/*
|--------------------------------------------------------------------------
| Check If The Application Is Under Maintenance
|--------------------------------------------------------------------------
|
| If the application is in maintenance / demo mode via the "down" command
| we will load this file so that any pre-rendered content can be shown
| instead of starting the framework, which could cause an exception.
|
*/&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;file_exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;__DIR__&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'/../src/storage/framework/maintenance.php'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;require&lt;/span&gt; &lt;span class="k"&gt;__DIR__&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'/../src/storage/framework/maintenance.php'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="cm"&gt;/*
|--------------------------------------------------------------------------
| Register The Auto Loader
|--------------------------------------------------------------------------
|
| Composer provides a convenient, automatically generated class loader for
| this application. We just need to utilize it! We'll simply require it
| into the script here so we don't need to manually load our classes.
|
*/&lt;/span&gt;

&lt;span class="k"&gt;require&lt;/span&gt; &lt;span class="k"&gt;__DIR__&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'/../src/vendor/autoload.php'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="cm"&gt;/*
|--------------------------------------------------------------------------
| Run The Application
|--------------------------------------------------------------------------
|
| Once we have the application, we can handle the incoming request using
| the application's HTTP kernel. Then, we will send the response back
| to this client's browser, allowing them to enjoy our application.
|
*/&lt;/span&gt;

&lt;span class="nv"&gt;$app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;require_once&lt;/span&gt; &lt;span class="k"&gt;__DIR__&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'/../src/bootstrap/app.php'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nv"&gt;$kernel&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$app&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;make&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Kernel&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nv"&gt;$response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$kernel&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;handle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nv"&gt;$request&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Request&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;capture&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;send&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nv"&gt;$kernel&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;terminate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$response&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That all isn't simple !!!,now you can easily host laravel project on shared hosting any problem of storage or anything else. &lt;br&gt;
you can clone an example from repo  &lt;a href="https://github.com/jamalroger/laravel-new-structure"&gt;laravel-new-structure&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I hope that you the article and see you again with another article.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2vrOr1v7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mbywvf6972vitmqwani3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2vrOr1v7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mbywvf6972vitmqwani3.png" alt="end" width="651" height="476"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Free Unlimited Image Hosting Sites with direct link</title>
      <author>Shaswat Raj</author>
      <pubDate>Sun, 16 Jan 2022 12:39:28 +0000</pubDate>
      <link>https://dev.to/sh20raj/free-unlimited-image-hosting-sites-with-direct-link-1i9i</link>
      <guid>https://dev.to/sh20raj/free-unlimited-image-hosting-sites-with-direct-link-1i9i</guid>
      <description>&lt;p&gt;Upload your Images Here for free and right click on your image and get direct image url to use in &lt;code&gt;src&lt;/code&gt; of &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; tag.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#some-free-image-cdn-hosting-sites-are-listed-below"&gt;
  &lt;/a&gt;
  Some Free Image CDN Hosting Sites are Listed Below
&lt;/h2&gt;




&lt;h1&gt;
  &lt;a href="#1-pinterest-recommended-1010"&gt;
  &lt;/a&gt;
  1. Pinterest (Recommended) 10/10
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jYk8so05--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.pinimg.com/280x280_RS/f6/e9/3a/f6e93a06b500b2d87ffd32e1f56f7c6f.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jYk8so05--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.pinimg.com/280x280_RS/f6/e9/3a/f6e93a06b500b2d87ffd32e1f56f7c6f.jpg" alt="Image description" width="280" height="280"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Upload your Images Here for free and right click on your image (pins here) and get direct image url to use in &lt;code&gt;src&lt;/code&gt; of &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; tag.&lt;br&gt;
You can find different URLs for getting image in different sizes.&lt;/p&gt;

&lt;p&gt;Website :- &lt;a href="https://in.pinterest.com/"&gt;https://in.pinterest.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Post Example :- &lt;a href="https://in.pinterest.com/pin/11118330319957843/"&gt;https://in.pinterest.com/pin/11118330319957843/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Image Example :- &lt;a href="https://i.pinimg.com/564x/94/2f/94/942f94bcf7cca94fb71d7dbc0f86464a.jpg"&gt;https://i.pinimg.com/564x/94/2f/94/942f94bcf7cca94fb71d7dbc0f86464a.jpg&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#2-imgur-recommended-1010"&gt;
  &lt;/a&gt;
  2. Imgur (Recommended) 10/10
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nlcnBkkg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/392/1%2A6bqgBkbNo7kXLv2qXU6NHQ.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nlcnBkkg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/392/1%2A6bqgBkbNo7kXLv2qXU6NHQ.jpeg" alt="Image description" width="392" height="401"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Imgur is an American online image sharing and image hosting service with a focus on social gossip that was founded by Alan Schaaf in 2009. The service has hosted viral images and memes, particularly those posted on Reddit. &lt;a href="https://en.wikipedia.org/wiki/Imgur"&gt;Wikipedia&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Same Process Here Upload your Images Here and right click on your image and get direct image url to use in &lt;code&gt;src&lt;/code&gt; of &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; tag.&lt;br&gt;
Videos can also be uploaded here...&lt;/p&gt;

&lt;p&gt;Here You can also upload and get images Using Api.&lt;/p&gt;

&lt;p&gt;Checkout Detailed Article and Video on this Topic :- &lt;a href="https://codexdindia.blogspot.com/2021/05/unlimited-image-and-short-video-hosting.html"&gt;https://codexdindia.blogspot.com/2021/05/unlimited-image-and-short-video-hosting.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Video Link :- &lt;a href="https://www.youtube.com/watch?v=ENz0cu0rFXI"&gt;https://www.youtube.com/watch?v=ENz0cu0rFXI&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Website :- &lt;a href="https://imgur.com/"&gt;https://imgur.com/&lt;/a&gt;&lt;br&gt;
Post Example :- &lt;a href="https://imgur.com/a/ubKzmop"&gt;https://imgur.com/a/ubKzmop&lt;/a&gt;&lt;br&gt;
Image Example :- &lt;a href="https://i.imgur.com/4U9cyaZ.png"&gt;https://i.imgur.com/4U9cyaZ.png&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#3-imgbb-recommended-1010"&gt;
  &lt;/a&gt;
  3. Imgbb (Recommended) 10/10
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--U3o5mfW4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pipedream.com/s.v0/app_1M0hkk/logo/orig" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--U3o5mfW4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pipedream.com/s.v0/app_1M0hkk/logo/orig" alt="IMGBB" width="300" height="300"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Free image hosting and sharing service, upload pictures, photo host. Offers integration solutions for uploading images to forums.&lt;/p&gt;

&lt;p&gt;All Process are Same Here. Go and Checkout the Website. It has many features including Api.&lt;/p&gt;

&lt;p&gt;Website :- &lt;a href="https://imgbb.com/"&gt;https://imgbb.com/&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#4-gurimg-recommended-1010"&gt;
  &lt;/a&gt;
  4. GurImg (Recommended) 10/10
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OlT1dw7h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gurimg.sh20raj.repl.co/logo.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OlT1dw7h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gurimg.sh20raj.repl.co/logo.jpg" alt="GurImg :- Free Unlimited Image Hosting - Direct Link&amp;lt;br&amp;gt;
" width="512" height="512"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Free Unlimited Image Hosting - Direct Link&lt;/p&gt;

&lt;p&gt;It uses Imgur Api to Upload Images and give you a direct and sharing link.&lt;/p&gt;

&lt;p&gt;Website :- &lt;a href="https://gurimg.sh20raj.repl.co/"&gt;https://gurimg.sh20raj.repl.co/&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#5-archiveorg-recommended-910"&gt;
  &lt;/a&gt;
  5. Archive.org (Recommended) 9/10
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--N3JgGrMn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://web.archive.org/web/20210418075737if_/https://upload.wikimedia.org/wikipedia/commons/thumb/8/84/Internet_Archive_logo_and_wordmark.svg/1200px-Internet_Archive_logo_and_wordmark.svg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--N3JgGrMn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://web.archive.org/web/20210418075737if_/https://upload.wikimedia.org/wikipedia/commons/thumb/8/84/Internet_Archive_logo_and_wordmark.svg/1200px-Internet_Archive_logo_and_wordmark.svg.png" alt="Image description" width="880" height="855"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;See Detailed video and Article Here&lt;br&gt;
Free Unlimited Video Storage + Hosting ft. Archive.org with Direct Download&lt;br&gt;
 :- &lt;a href="https://codexdindia.blogspot.com/2021/05/free-unlimited-video-storage-hosting-ft.html"&gt;https://codexdindia.blogspot.com/2021/05/free-unlimited-video-storage-hosting-ft.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Video Link :- &lt;a href="https://www.youtube.com/watch?v=oDcqXxkyCyw"&gt;https://www.youtube.com/watch?v=oDcqXxkyCyw&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Website :- &lt;a href="https://archive.org/"&gt;https://archive.org/&lt;/a&gt;&lt;br&gt;
Post Example :- &lt;a href="https://archive.org/details/bcf_20201128"&gt;https://archive.org/details/bcf_20201128&lt;/a&gt;&lt;br&gt;
Image Example :- &lt;a href="https://archive.org/download/bcf_20201128/bcf.JPG"&gt;https://archive.org/download/bcf_20201128/bcf.JPG&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#6-blogger-510"&gt;
  &lt;/a&gt;
  6. Blogger 5/10
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ec56XHlr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://upload.wikimedia.org/wikipedia/commons/thumb/3/31/Blogger.svg/1200px-Blogger.svg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ec56XHlr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://upload.wikimedia.org/wikipedia/commons/thumb/3/31/Blogger.svg/1200px-Blogger.svg.png" alt="Image description" width="880" height="875"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;All Process are Same Here. Go and Checkout the Website. It is a Google Product. &lt;a href="https://en.wikipedia.org/wiki/Blogger_(service)"&gt;Wikipedia&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Website :- &lt;a href="https://www.blogger.com/"&gt;https://www.blogger.com/&lt;/a&gt;&lt;br&gt;
Post Example :- &lt;a href="https://codexdindia.blogspot.com/2020/11/top-reliable-free-image-hosting-services.html"&gt;https://codexdindia.blogspot.com/2020/11/top-reliable-free-image-hosting-services.html&lt;/a&gt;...&lt;br&gt;
Image Example :- &lt;a href="https://1.bp.blogspot.com/-rD8Ii77cOHo/X7tOfLHhZTI/AAAAAAAAAPU/Ox86IkI_W6om4RjJq0i5uEcQ5UhGnAarACLcBGAsYHQ/s16000/4a5235_e69a001a64244d608a0f5dddb783edb6_mv2.webp"&gt;https://1.bp.blogspot.com/-rD8Ii77cOHo/X7tOfLHhZTI/AAAAAAAAAPU/Ox86IkI_W6om4RjJq0i5uEcQ5UhGnAarACLcBGAsYHQ/s16000/4a5235_e69a001a64244d608a0f5dddb783edb6_mv2.webp&lt;/a&gt;.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#7-google-photos-recommended-410"&gt;
  &lt;/a&gt;
  7. Google Photos (Recommended) 4/10
&lt;/h1&gt;

&lt;p&gt;Website :- &lt;a href="https://photos.google.com/"&gt;https://photos.google.com/&lt;/a&gt;&lt;br&gt;
Post Example :- &lt;a href="https://photos.app.goo.gl/UemdrghXwpLc2pPu7"&gt;https://photos.app.goo.gl/UemdrghXwpLc2pPu7&lt;/a&gt;&lt;br&gt;
Image Example :- &lt;a href="https://lh3.googleusercontent.com/Ridpy-lxYRvKo_DWjw5SyYRcWd-vY0qD-bA8HrMEJjRGPgXY65Bbc5IkIvrEJKQGkr0EKn-qqP3TWvycwVs3aJiI7AQh4204tEX34E-PLAe8MgyR7qYed3YHwp0LJ8zMvtQ3DTMFkbn-6laJdv7O5SPjBlcKAP0W84DSM3bgBpGnx0WDSJTVVo3Z3tpwsqlCbKAto5F-e4uqofxXTY4yG6T_RIN2Li6vlguDoyWAEv8C3C__nCfwm6-fini0MCOLgXm8_gAo3P9ltiC2FQuxI6UbZAapQwLk7LkIdFaDqsPzOwTtm00MrorDVk1kdGXA73piSAiB72M3zyzQFf5TqIJtTHkS7fPXjiCA25TM5IKRUQdKcO1Gt-1TSDNVg7kaB9l8MZ2TbJMsZHp6Y881WNWS5Beekz9ZgPHRZwchWn42i72JsSAAUOwoJHi40ImsuxA7a7Y2KUTnJp4OuhQMvYBEz1Vbvc1KK_zlC0hqI46Jtd5kWGzHCTPFdxfTiVQS8XOtV-Yo7JE7c178HzFJSabPyYRjOL19rjpoJoFwLeD9Lme0TC_SAN9ICvA_BeWSCK7QVOfDReOHgKltrqAPitRttbYKqDgdFI1ckenJyPmD_00Z0TW_OMBtFBgqAxZlkxMm4eyf8Tg6R-BRLvMw6tGhIPdKlp8JQ_doMixt3eb_-tXmQlfEsoOyw3vFBg=w493-h298-no"&gt;https://lh3.googleusercontent.com/Ridpy-lxYRvKo....&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#8-wix-410"&gt;
  &lt;/a&gt;
  8. Wix 4/10
&lt;/h1&gt;

&lt;p&gt;Website :- &lt;a href="https://wix.com/"&gt;https://wix.com/&lt;/a&gt;&lt;br&gt;
Post Example :- &lt;a href="https://shaswatraj3.wixsite.com/shgamer"&gt;https://shaswatraj3.wixsite.com/shgamer&lt;/a&gt;&lt;br&gt;
Image Example :- &lt;a href="https://static.wixstatic.com/media/363e50_d34eb64888814b5b97ed157c30de7e97%7Emv2.png/v1/fill/w_600,h_600,al_c,q_85/363e50_d34eb64888814b5b97ed157c30de7e97%7Emv2.webp"&gt;https://static.wixstatic.com/media/363e50_d34eb64888814b5b97ed157c30de7e97~mv2.png/v1/fill/w_600,h_600,al_c,q_85/363e50_d34eb64888814b5b97ed157c30de7e97~mv2.webp&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;em&gt;More Website's may be listed soon..&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Mainly low rating are given for bad and long direct URLs&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#see-more-services-in-short-here-httpscodexdindiablogspotcom202011topreliablefreeimagehostingserviceshtml"&gt;
  &lt;/a&gt;
  See More Services in short Here :- &lt;a href="https://codexdindia.blogspot.com/2020/11/top-reliable-free-image-hosting-services.html"&gt;https://codexdindia.blogspot.com/2020/11/top-reliable-free-image-hosting-services.html&lt;/a&gt;
&lt;/h3&gt;

</description>
      <category>free</category>
      <category>unlimited</category>
      <category>hosting</category>
      <category>sh20raj</category>
    </item>
    <item>
      <title>CloudWatch RUM for all insights</title>
      <author>Jones Zachariah Noel</author>
      <pubDate>Sun, 16 Jan 2022 12:03:15 +0000</pubDate>
      <link>https://dev.to/aws-builders/cloudwatch-rum-for-all-insights-km5</link>
      <guid>https://dev.to/aws-builders/cloudwatch-rum-for-all-insights-km5</guid>
      <description>&lt;p&gt;&lt;a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-RUM.html"&gt;CloudWatch RUM&lt;/a&gt; was recently launched during re:Invent 2021 which provides insights to your web-application about certain metrics based on user-actions and errors for debugging.&lt;br&gt;
You can read about the &lt;a href="https://aws.amazon.com/about-aws/whats-new/2021/11/amazon-cloudwatch-rum-applications-client-side-performance/"&gt;announcement&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;
&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--ik-UMlVJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1465736248325468162/W1G0iK5K_normal.jpg" alt="Jeff Barr ‚òÅÔ∏è (@ üè† ) üíâ profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Jeff Barr ‚òÅÔ∏è (@ üè† ) üíâ
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @jeffbarr
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      New ‚Äì Real-User Monitoring for Amazon CloudWatch - &lt;a href="https://t.co/kiVCRuzglr"&gt;aws.amazon.com/blogs/aws/clou‚Ä¶&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/AWS"&gt;#AWS&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/reInvent"&gt;#reInvent&lt;/a&gt; &lt;br&gt;&lt;br&gt;"You simply register your application, add a snippet of JavaScript to the header of each page, and deploy."
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      18:19 PM - 29 Nov 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1465384891869138946" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1465384891869138946" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1465384891869138946" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;h3&gt;
  &lt;a href="#key-takeways-from-the-blog"&gt;
  &lt;/a&gt;
  Key takeways from the blog
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#understanding-rum"&gt;Understanding CloudWatch RUM &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#setting-up-rum"&gt;Setting-up RUM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#data"&gt;Different telemetry data&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#understanding-cloudwatch-rum"&gt;
  &lt;/a&gt;
  Understanding CloudWatch RUM &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;CloudWatch Real-User Monitoring (RUM)&lt;/strong&gt; is a monitoring functionality facilitated by CloudWatch which has always been the monitoring tool on AWS. RUM enables developers and DevOps engineers to understand the issues/errors encountered on the web-app and also insights such as which &lt;em&gt;device&lt;/em&gt; or &lt;em&gt;browser&lt;/em&gt; or &lt;em&gt;location&lt;/em&gt; had the error. Additionally, there is performance insights and the time taken for a file to load on the client side along with the geographically information. &lt;br&gt;
As &lt;a href="https://twitter.com/jeffbarr"&gt;Jeff Barr&lt;/a&gt; quotes it, it's that simple to implement on the client side.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You simply register your application, add a snippet of JavaScript to the header of each page, and deploy.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The &lt;strong&gt;CloudWatch RUM&lt;/strong&gt; consolidated and provides dashboard which gives you a detailed insights such as - &lt;em&gt;page load speed&lt;/em&gt;, &lt;em&gt;geographic info&lt;/em&gt;, &lt;em&gt;devices&lt;/em&gt;, &lt;em&gt;browsers&lt;/em&gt;, &lt;em&gt;average load during the time&lt;/em&gt;, &lt;em&gt;user journey&lt;/em&gt;. All this with just a snippet of JS to page.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#settingup-rum"&gt;
  &lt;/a&gt;
  Setting-up RUM &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;CloudWatch Real-User Monitoring (RUM)&lt;/strong&gt; setup can be summarized with the 3 steps - &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#add-app"&gt;Add app monitor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#snippet"&gt;Adding the JS snippet to your web app&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#monitoring"&gt;Monitor the web-app from CloudWatch console&lt;/a&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j6xRDFKC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lql0okoyaqdf86l7bvc8.png" alt="Setting-up RUM" width="880" height="502"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#add-app-monitor"&gt;
  &lt;/a&gt;
  Add app monitor &lt;a&gt;&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;While adding a new app monitor, you would have to specify details such as - &lt;em&gt;app monitor name&lt;/em&gt;, &lt;em&gt;app domain&lt;/em&gt; and an option to include the sub-domains of the &lt;em&gt;app domain&lt;/em&gt;. &lt;br&gt;
You can choose what all data is been collected and stored as telemetry data for the dashboards.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KxfaqKOk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oon6wubl4x5t70o9qoqu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KxfaqKOk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oon6wubl4x5t70o9qoqu.png" alt="Configs" width="846" height="584"&gt;&lt;/a&gt;&lt;br&gt;
The telemetry data is stored only for &lt;em&gt;30 days&lt;/em&gt;, so if you would wish to store the logs, you can create a CloudWatch log event which captures and stores all these datas.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KUnBmOHY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dh7h9f43fng40mpiy8aa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KUnBmOHY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dh7h9f43fng40mpiy8aa.png" alt="Data storage" width="847" height="174"&gt;&lt;/a&gt;&lt;br&gt;
CloudWatch RUM needs authorization to access AWS resources, for which Amazon Cognito Identity Pools are used.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--T_GrSGP0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5njjdh4waldl06jxn6pj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T_GrSGP0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5njjdh4waldl06jxn6pj.png" alt="Authorization" width="847" height="380"&gt;&lt;/a&gt;&lt;br&gt;
The telemetry data of the web-pages can also be fine grained to the choice of &lt;em&gt;all pages&lt;/em&gt;, &lt;em&gt;specific pages only&lt;/em&gt; or &lt;em&gt;exclude certain pages&lt;/em&gt;.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mrOUaAKl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0ga51iqhbfl9utkez5ba.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mrOUaAKl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0ga51iqhbfl9utkez5ba.png" alt="Configure pages" width="844" height="352"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#adding-the-js-snippet-to-your-web-app"&gt;
  &lt;/a&gt;
  Adding the JS snippet to your web app &lt;a&gt;&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;Once you save the configurations and add the app monitor, you would be presented with a JavaScript snippet. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--p1iRGnJx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s05rdacka8aka413x1sv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p1iRGnJx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s05rdacka8aka413x1sv.png" alt="JS snippet" width="880" height="377"&gt;&lt;/a&gt;&lt;br&gt;
As simple as it is, this just needs to be added to the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; of your web-page which is sending telemetry data using the &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#monitor-the-webapp-from-cloudwatch-console"&gt;
  &lt;/a&gt;
  Monitor the web-app from CloudWatch console &lt;a&gt;&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;Once set-up and moved your web-page to the server, you can navigate to your CloudWatch console to view the dashboard. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7gm_mqBa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p1ugnlipbnfe0pjqlayl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7gm_mqBa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p1ugnlipbnfe0pjqlayl.png" alt="Overview dashboard" width="880" height="500"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#different-telemetry-data"&gt;
  &lt;/a&gt;
  Different telemetry data &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;From your CloudWatch console, you can view different types of insights. The previous section shows the overview of your app monitor.&lt;/p&gt;

&lt;p&gt;Page load speed data for 1 month (Dec 17th 2021 - Jan 16th 2022)&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mK2hf5IR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v3v9jgnej3m3uzy7tg8f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mK2hf5IR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v3v9jgnej3m3uzy7tg8f.png" alt="Page load speed" width="880" height="411"&gt;&lt;/a&gt;&lt;br&gt;
Different web vitals for 1 month (Dec 17th 2021 - Jan 16th 2022)&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DICeeh9I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rcd8xted81f9krtcrn4l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DICeeh9I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rcd8xted81f9krtcrn4l.png" alt="Different web vitals" width="880" height="514"&gt;&lt;/a&gt;&lt;br&gt;
Different web browsers used for 1 month (Dec 17th 2021 - Jan 16th 2022)&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_qi11mPG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ykmjrrnaj651j5qhcolg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_qi11mPG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ykmjrrnaj651j5qhcolg.png" alt="Different web browsers" width="880" height="407"&gt;&lt;/a&gt;&lt;br&gt;
Different devices used for 1 month (Dec 17th 2021 - Jan 16th 2022)&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--duIt4Uw3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8hf0ik17vhdpzxeodi2s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--duIt4Uw3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8hf0ik17vhdpzxeodi2s.png" alt="Different devices" width="880" height="309"&gt;&lt;/a&gt;&lt;br&gt;
Different locations with page load time for 1 month (Dec 17th 2021 - Jan 16th 2022)&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nEuLEWa4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1ehh8rd83xdm1tsrax91.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nEuLEWa4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1ehh8rd83xdm1tsrax91.png" alt="Different locations with page load time" width="880" height="465"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Different locations with sessions for 1 month (Dec 17th 2021 - Jan 16th 2022)&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xG5X4H8Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/prhlfazix06zmnyx7stg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xG5X4H8Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/prhlfazix06zmnyx7stg.png" alt="Different locations with sessions" width="880" height="466"&gt;&lt;/a&gt;&lt;br&gt;
You can view the details at a country filter of sessions for 1 month (Dec 17th 2021 - Jan 16th 2022)&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--k75MG6xx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b14ay7wgb7e06idwzkud.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k75MG6xx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b14ay7wgb7e06idwzkud.png" alt="Country filter" width="880" height="431"&gt;&lt;/a&gt;&lt;br&gt;
For multiple pages, you can even get the user-journey.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DZkkCYLR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ly2lw177be3ot8fdmf22.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DZkkCYLR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ly2lw177be3ot8fdmf22.png" alt="User-journey" width="880" height="162"&gt;&lt;/a&gt;&lt;br&gt;
For the sessions with errors, you can view what the error was and also the data time of occurrence along with device details. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XbYtQu6W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9kwdetpfoh59m0u33m63.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XbYtQu6W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9kwdetpfoh59m0u33m63.png" alt="Error session" width="880" height="286"&gt;&lt;/a&gt; &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BC8Nfu6_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/le9t1kezqyamnw8z7p7n.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BC8Nfu6_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/le9t1kezqyamnw8z7p7n.png" alt="Error sessions details" width="880" height="216"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#pricing"&gt;
  &lt;/a&gt;
  Pricing
&lt;/h3&gt;

&lt;p&gt;The free trial has 1 million RUM events which is across the account. And this is only for the first time when RUM is used. Post which, $1 per 100k RUM events.&lt;br&gt;
You can view the detailed &lt;a href="https://aws.amazon.com/cloudwatch/pricing/"&gt;pricing details&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#wrapup"&gt;
  &lt;/a&gt;
  Wrap-up
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;CloudWatch RUM&lt;/strong&gt; has provided a simplistic approach to web-app insights. The above sample logs and telemetry data are of my personal landing page &lt;a href="https://zachjonesnoel.com"&gt;https://zachjonesnoel.com&lt;/a&gt; which has been up and running from Dec 01 2021 and this dashboard has facilitated me to understand what and how is the performance.&lt;br&gt;
Jeff Barr writes about the &lt;a href="https://aws.amazon.com/blogs/aws/cloudwatch-rum/"&gt;New ‚Äì Real-User Monitoring for Amazon CloudWatch&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>aws</category>
      <category>monitoring</category>
      <category>javascript</category>
      <category>cloudwatch</category>
    </item>
    <item>
      <title>How to build a Tailwind CSS timeline component with Flowbite</title>
      <author>Zolt√°n Sz≈ëgy√©nyi</author>
      <pubDate>Sun, 16 Jan 2022 09:49:46 +0000</pubDate>
      <link>https://dev.to/themesberg/how-to-build-a-tailwind-css-timeline-component-with-flowbite-5638</link>
      <guid>https://dev.to/themesberg/how-to-build-a-tailwind-css-timeline-component-with-flowbite-5638</guid>
      <description>&lt;p&gt;I've been using Tailwind CSS to build websites and the power of the utility classes coupled with the components from &lt;a href="https://flowbite.com"&gt;Flowbite&lt;/a&gt; makes it so much more easier and fun!&lt;/p&gt;

&lt;p&gt;I've started a tutorial series on how to create some of the most commonly used UI components using the classes from Tailwind CSS, and today I want to show you how to build a timeline component.&lt;/p&gt;

&lt;p&gt;Here's a preview of how it will look:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fscOYuI2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4sx70hujpy6ouofl56yp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fscOYuI2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4sx70hujpy6ouofl56yp.png" alt="Tailwind CSS timeline" width="880" height="473"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's get started!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tailwind-css-timeline"&gt;
  &lt;/a&gt;
  Tailwind CSS timeline
&lt;/h2&gt;

&lt;p&gt;First of all we need to set up the basic HTML markup. We'll use a &lt;code&gt;&amp;lt;ol&amp;gt;&lt;/code&gt; element.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;ol&amp;gt;                  
    &amp;lt;li&amp;gt;
        &amp;lt;time&amp;gt;February 2022&amp;lt;/time&amp;gt;
        &amp;lt;h3&amp;gt;Application UI code in Tailwind CSS&amp;lt;/h3&amp;gt;
        &amp;lt;p&amp;gt;Get access to over 20+ pages including a dashboard layout, charts, kanban board, calendar, and pre-order E-commerce &amp;amp; Marketing pages.&amp;lt;/p&amp;gt;
    &amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;
        &amp;lt;time&amp;gt;March 2022&amp;lt;/time&amp;gt;
        &amp;lt;h3&amp;gt;Marketing UI design in Figma&amp;lt;/h3&amp;gt;
        &amp;lt;p&amp;gt;All of the pages and components are first designed in Figma and we keep a parity between the two versions even as we update the project.&amp;lt;/p&amp;gt;
    &amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;
        &amp;lt;time&amp;gt;April 2022&amp;lt;/time&amp;gt;
        &amp;lt;h3&amp;gt;E-Commerce UI code in Tailwind CSS&amp;lt;/h3&amp;gt;
        &amp;lt;p&amp;gt;Get started with dozens of web components and interactive elements built on top of Tailwind CSS.&amp;lt;/p&amp;gt;
    &amp;lt;/li&amp;gt;
&amp;lt;/ol&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Awesome! Let's now style the spacing, typography, and colors of the elements inside the timeline.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;ol class="relative border-l border-gray-200"&amp;gt;                  
    &amp;lt;li class="mb-10 ml-4"&amp;gt;
        &amp;lt;div class="absolute w-3 h-3 bg-gray-200 rounded-full -left-1.5 border border-white"&amp;gt;&amp;lt;/div&amp;gt;
        &amp;lt;h3 class="text-lg font-semibold text-gray-900 dark:text-white"&amp;gt;Application UI code in Tailwind CSS&amp;lt;/h3&amp;gt;
        &amp;lt;p class="mb-4 text-base font-normal text-gray-500"&amp;gt;Get access to over 20+ pages including a dashboard layout, charts, kanban board, calendar, and pre-order E-commerce &amp;amp; Marketing pages.&amp;lt;/p&amp;gt;
    &amp;lt;/li&amp;gt;
    &amp;lt;li class="mb-10 ml-4"&amp;gt;
        &amp;lt;time class="mb-1 text-sm font-normal leading-none text-gray-400"&amp;gt;March 2022&amp;lt;/time&amp;gt;
        &amp;lt;h3 class="text-lg font-semibold text-gray-900 dark:text-white"&amp;gt;Marketing UI design in Figma&amp;lt;/h3&amp;gt;
        &amp;lt;p class="text-base font-normal text-gray-500"&amp;gt;All of the pages and components are first designed in Figma and we keep a parity between the two versions even as we update the project.&amp;lt;/p&amp;gt;
    &amp;lt;/li&amp;gt;
    &amp;lt;li class="ml-4"&amp;gt;
        &amp;lt;time class="mb-1 text-sm font-normal leading-none text-gray-400"&amp;gt;April 2022&amp;lt;/time&amp;gt;
        &amp;lt;h3 class="text-lg font-semibold text-gray-900 dark:text-white"&amp;gt;E-Commerce UI code in Tailwind CSS&amp;lt;/h3&amp;gt;
        &amp;lt;p class="text-base font-normal text-gray-500"&amp;gt;Get started with dozens of web components and interactive elements built on top of Tailwind CSS.&amp;lt;/p&amp;gt;
    &amp;lt;/li&amp;gt;
&amp;lt;/ol&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Already looking much better. Let's now add the dots and a CTA button link.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;ol class="relative border-l border-gray-200"&amp;gt;                  
    &amp;lt;li class="mb-10 ml-4"&amp;gt;
        &amp;lt;div class="absolute w-3 h-3 bg-gray-200 rounded-full -left-1.5 border border-white"&amp;gt;&amp;lt;/div&amp;gt;
        &amp;lt;time class="mb-1 text-sm font-normal leading-none text-gray-400"&amp;gt;February 2022&amp;lt;/time&amp;gt;
        &amp;lt;h3 class="text-lg font-semibold text-gray-900 dark:text-white"&amp;gt;Application UI code in Tailwind CSS&amp;lt;/h3&amp;gt;
        &amp;lt;p class="mb-4 text-base font-normal text-gray-500"&amp;gt;Get access to over 20+ pages including a dashboard layout, charts, kanban board, calendar, and pre-order E-commerce &amp;amp; Marketing pages.&amp;lt;/p&amp;gt;
        &amp;lt;a href="#" class="inline-flex items-center px-4 py-2 text-sm font-medium text-gray-900 bg-white border border-gray-200 rounded-lg hover:bg-gray-100 hover:text-blue-700 focus:z-10 focus:ring-2 focus:ring-blue-700 focus:text-blue-700 dark:bg-gray-800 dark:text-gray-400 dark:border-gray-600 dark:hover:text-white dark:hover:bg-gray-700"&amp;gt;Learn more &amp;lt;svg class="w-3 h-3 ml-2" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"&amp;gt;&amp;lt;path fill-rule="evenodd" d="M12.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd"&amp;gt;&amp;lt;/path&amp;gt;&amp;lt;/svg&amp;gt;&amp;lt;/a&amp;gt;
    &amp;lt;/li&amp;gt;
    &amp;lt;li class="mb-10 ml-4"&amp;gt;
        &amp;lt;div class="absolute w-3 h-3 bg-gray-200 rounded-full -left-1.5 border border-white"&amp;gt;&amp;lt;/div&amp;gt;
        &amp;lt;time class="mb-1 text-sm font-normal leading-none text-gray-400"&amp;gt;March 2022&amp;lt;/time&amp;gt;
        &amp;lt;h3 class="text-lg font-semibold text-gray-900 dark:text-white"&amp;gt;Marketing UI design in Figma&amp;lt;/h3&amp;gt;
        &amp;lt;p class="text-base font-normal text-gray-500"&amp;gt;All of the pages and components are first designed in Figma and we keep a parity between the two versions even as we update the project.&amp;lt;/p&amp;gt;
    &amp;lt;/li&amp;gt;
    &amp;lt;li class="ml-4"&amp;gt;
        &amp;lt;div class="absolute w-3 h-3 bg-gray-200 rounded-full -left-1.5 border border-white"&amp;gt;&amp;lt;/div&amp;gt;
        &amp;lt;time class="mb-1 text-sm font-normal leading-none text-gray-400"&amp;gt;April 2022&amp;lt;/time&amp;gt;
        &amp;lt;h3 class="text-lg font-semibold text-gray-900 dark:text-white"&amp;gt;E-Commerce UI code in Tailwind CSS&amp;lt;/h3&amp;gt;
        &amp;lt;p class="text-base font-normal text-gray-500"&amp;gt;Get started with dozens of web components and interactive elements built on top of Tailwind CSS.&amp;lt;/p&amp;gt;
    &amp;lt;/li&amp;gt;
&amp;lt;/ol&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Great job! The timeline component should now look like in the preview picture.&lt;/p&gt;

&lt;p&gt;Lastly, let's also apply some of the dark variant classes for the dark mode.&lt;/p&gt;

&lt;p&gt;Note: check out this tutorial on how to set &lt;a href="https://flowbite.com/docs/customize/dark-mode/"&gt;dark mode with Tailwind CSS and Flowbite&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;ol class="relative border-l border-gray-200 dark:border-gray-700"&amp;gt;                  
    &amp;lt;li class="mb-10 ml-4"&amp;gt;
        &amp;lt;div class="absolute w-3 h-3 bg-gray-200 rounded-full -left-1.5 border border-white dark:border-gray-900 dark:bg-gray-700"&amp;gt;&amp;lt;/div&amp;gt;
        &amp;lt;time class="mb-1 text-sm font-normal leading-none text-gray-400 dark:text-gray-500"&amp;gt;February 2022&amp;lt;/time&amp;gt;
        &amp;lt;h3 class="text-lg font-semibold text-gray-900 dark:text-white"&amp;gt;Application UI code in Tailwind CSS&amp;lt;/h3&amp;gt;
        &amp;lt;p class="mb-4 text-base font-normal text-gray-500 dark:text-gray-400"&amp;gt;Get access to over 20+ pages including a dashboard layout, charts, kanban board, calendar, and pre-order E-commerce &amp;amp; Marketing pages.&amp;lt;/p&amp;gt;
        &amp;lt;a href="#" class="inline-flex items-center px-4 py-2 text-sm font-medium text-gray-900 bg-white border border-gray-200 rounded-lg hover:bg-gray-100 hover:text-blue-700 focus:z-10 focus:ring-2 focus:ring-blue-700 focus:text-blue-700 dark:bg-gray-800 dark:text-gray-400 dark:border-gray-600 dark:hover:text-white dark:hover:bg-gray-700"&amp;gt;Learn more &amp;lt;svg class="w-3 h-3 ml-2" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"&amp;gt;&amp;lt;path fill-rule="evenodd" d="M12.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd"&amp;gt;&amp;lt;/path&amp;gt;&amp;lt;/svg&amp;gt;&amp;lt;/a&amp;gt;
    &amp;lt;/li&amp;gt;
    &amp;lt;li class="mb-10 ml-4"&amp;gt;
        &amp;lt;div class="absolute w-3 h-3 bg-gray-200 rounded-full -left-1.5 border border-white dark:border-gray-900 dark:bg-gray-700"&amp;gt;&amp;lt;/div&amp;gt;
        &amp;lt;time class="mb-1 text-sm font-normal leading-none text-gray-400 dark:text-gray-500"&amp;gt;March 2022&amp;lt;/time&amp;gt;
        &amp;lt;h3 class="text-lg font-semibold text-gray-900 dark:text-white"&amp;gt;Marketing UI design in Figma&amp;lt;/h3&amp;gt;
        &amp;lt;p class="text-base font-normal text-gray-500 dark:text-gray-400"&amp;gt;All of the pages and components are first designed in Figma and we keep a parity between the two versions even as we update the project.&amp;lt;/p&amp;gt;
    &amp;lt;/li&amp;gt;
    &amp;lt;li class="ml-4"&amp;gt;
        &amp;lt;div class="absolute w-3 h-3 bg-gray-200 rounded-full -left-1.5 border border-white dark:border-gray-900 dark:bg-gray-700"&amp;gt;&amp;lt;/div&amp;gt;
        &amp;lt;time class="mb-1 text-sm font-normal leading-none text-gray-400 dark:text-gray-500"&amp;gt;April 2022&amp;lt;/time&amp;gt;
        &amp;lt;h3 class="text-lg font-semibold text-gray-900 dark:text-white"&amp;gt;E-Commerce UI code in Tailwind CSS&amp;lt;/h3&amp;gt;
        &amp;lt;p class="text-base font-normal text-gray-500 dark:text-gray-400"&amp;gt;Get started with dozens of web components and interactive elements built on top of Tailwind CSS.&amp;lt;/p&amp;gt;
    &amp;lt;/li&amp;gt;
&amp;lt;/ol&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The timeline should look like this in dark mode:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D_nce_bi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/czslesbdmtnhivninv1l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D_nce_bi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/czslesbdmtnhivninv1l.png" alt="Tailwind CSS dark mode timeline" width="880" height="473"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This &lt;a href="https://flowbite.com/docs/components/timeline/"&gt;Tailwind CSS timeline component&lt;/a&gt; is part of an open source library of Tailwind CSS components called Flowbite.&lt;/p&gt;

&lt;p&gt;You can find more timeline component styles and variants and also a full set of other elements such as buttons, dropdowns, modals, tooltips, and more.&lt;/p&gt;

&lt;p&gt;üëâ &lt;a href="https://flowbite.com/docs/components/timeline/"&gt;Flowbite - Tailwind CSS timeline&lt;/a&gt;&lt;br&gt;
üìö &lt;a href="https://flowbite.com/docs/getting-started/introduction/"&gt;Flowbite - Tailwind CSS Components&lt;/a&gt;&lt;/p&gt;

</description>
      <category>tailwindcss</category>
      <category>webdev</category>
      <category>tutorial</category>
      <category>opensource</category>
    </item>
    <item>
      <title>for ... of operator and Symbol.iterator</title>
      <author>Daniel Gropp</author>
      <pubDate>Sun, 16 Jan 2022 09:34:24 +0000</pubDate>
      <link>https://dev.to/dagropp/javascript-objects-iteration-1ao7</link>
      <guid>https://dev.to/dagropp/javascript-objects-iteration-1ao7</guid>
      <description>&lt;p&gt;JavaScript's &lt;code&gt;for ... of&lt;/code&gt; operator loops over iterable objects. This type of loop exists in many programming languages.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// JavaScript&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;users&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="cm"&gt;/* do something */&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Java&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;User&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="cm"&gt;/* do something */&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="c1"&gt;// PHP&lt;/span&gt;
&lt;span class="k"&gt;foreach&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$users&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="cm"&gt;/* do something */&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Python
&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="c1"&gt;# do something
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In JavaScript we also have the &lt;code&gt;for ... in&lt;/code&gt; operator that loops over an object's enumerable properties, which means its keys.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;john&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;John Lennon&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;isAlive&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;beatles&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;John&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Paul&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;George&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Ringo&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;john&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// "name", "age", "isAlive"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;beatles&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 0, 1, 2, 3&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;JavaScript arrays are basically special objects with indices as keys. We can imagine that a very simple implementation of a JavaScript array will look like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;arrayObject&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;John&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
  &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Paul&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
  &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;George&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
  &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Ringo&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
  &lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;that's why the &lt;code&gt;for ... in&lt;/code&gt; operator will loop over its indices. &lt;br&gt;
Using a &lt;code&gt;for ... of&lt;/code&gt; operator on an array will loop over its entries.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;beatle&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;beatles&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;beatle&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// "John", "Paul", "George", "Ringo"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But using the same operator on a plain object will throw an error.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;john&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Uncaught TypeError: john is not iterable&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Our simple array implementation, will work using a regular &lt;code&gt;for&lt;/code&gt; loop, but will throw the same error when using the &lt;code&gt;for ... of&lt;/code&gt; operator.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;arrayObject&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arrayObject&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt; &lt;span class="c1"&gt;// "John", "Paul", "George", "Ringo"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;beatle&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;arrayObject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;beatle&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
  &lt;span class="c1"&gt;// Uncaught TypeError: arrayObject is not iterable&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;JavaScript arrays (and for that matter also &lt;code&gt;Set&lt;/code&gt;, &lt;code&gt;Map&lt;/code&gt;, &lt;code&gt;NodeList&lt;/code&gt;, etc.) are basically objects, So why on earth does a &lt;code&gt;for ... of&lt;/code&gt; work on an array and not on plain objects? &lt;br&gt;
The reason is a property called &lt;code&gt;Symbol.iterator&lt;/code&gt;, which accepts a &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator"&gt;Generator function&lt;/a&gt; that allows for any object to be iterated with a &lt;code&gt;for ... of&lt;/code&gt; loop and accept the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax"&gt;spread syntax&lt;/a&gt;.&lt;br&gt;
&lt;code&gt;Array.prototype&lt;/code&gt; and other iterable interfaces, have that property defined,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;Symbol&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;iterator&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt; &lt;span class="c1"&gt;// ∆í values() { [native code] }&lt;/span&gt;
&lt;span class="nb"&gt;Set&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;Symbol&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;iterator&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt; &lt;span class="c1"&gt;// ∆í values() { [native code] }&lt;/span&gt;
&lt;span class="nb"&gt;Map&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;Symbol&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;iterator&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt; &lt;span class="c1"&gt;// ∆í entries() { [native code] }&lt;/span&gt;
&lt;span class="nx"&gt;NodeList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;Symbol&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;iterator&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt; &lt;span class="c1"&gt;// ∆í values() { [native code] }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;while other objects don't.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;Symbol&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;iterator&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt; &lt;span class="c1"&gt;// undefined&lt;/span&gt;
&lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;Symbol&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;iterator&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt; &lt;span class="c1"&gt;// undefined&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So, if for some reason we'd really like to use a &lt;code&gt;for ... of&lt;/code&gt; loop on an object, we could define it a &lt;code&gt;Symbol.iterator&lt;/code&gt; method. (Note that it's currently impossible to use arrow functions for a generator function).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;john&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;Symbol&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;iterator&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;john&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="nx"&gt;john&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we can use a &lt;code&gt;for ... of&lt;/code&gt; loop on that object, and even use the spread syntax.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;john&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// "John Lennon", 40, false&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;values&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[...&lt;/span&gt;&lt;span class="nx"&gt;john&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt; &lt;span class="c1"&gt;// ["John Lennon", 40, false]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But, setting a &lt;code&gt;Symbol.iterator&lt;/code&gt; property to every object instance is overtly complicated and unnecessary. Instead, we can add it to &lt;code&gt;Object.prototype&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;Symbol&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;iterator&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And while this works like a charm, adding methods to built-in prototypes is discouraged. Think of the confusion it can cause with people unfamiliar with your code, and of future errors it could cause, &lt;a href="https://flaviocopes.com/javascript-why-not-modify-object-prototype/"&gt;read more about this here&lt;/a&gt;. &lt;br&gt;
To iterate over the values of an object, we'd better use the &lt;code&gt;Object.prototype&lt;/code&gt; static method &lt;code&gt;Object.values&lt;/code&gt;, and then we could easily use a &lt;code&gt;for ... of&lt;/code&gt; loop, or any &lt;code&gt;Array.prototype&lt;/code&gt; methods.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;values&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;john&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// "John Lennon", 40, false&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So when should we define a &lt;code&gt;Symbol.iterator&lt;/code&gt; method? For instance when we implement our own data structure, and we'd like it to be iterable. Check out my linked list implementation on &lt;a href="https://github.com/dagropp/js-dast/blob/master/src/linked-list/LinkedList.js"&gt;GitHub&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;LinkedList&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="cm"&gt;/* Class implementation */&lt;/span&gt;

  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;Symbol&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;iterator&lt;/span&gt;&lt;span class="p"&gt;]()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;node&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;head&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;node&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Also, we can create a class that handle array-like objects, that will add the ability to use &lt;code&gt;for ... of&lt;/code&gt; loops. That way we could use the object as is without using &lt;code&gt;Object.prototype&lt;/code&gt; static methods and without polluting &lt;code&gt;Object.prototype&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;IterableObject&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;assign&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;Symbol&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;iterator&lt;/span&gt;&lt;span class="p"&gt;]()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;beatles&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;IterableObject&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;john&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;John Lennon&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;isAlive&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;paul&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Paul McCartney&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;79&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;isAlive&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;george&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;George Harrison&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;58&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;isAlive&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;ringo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Ringo Starr&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;81&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;isAlive&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we can use a &lt;code&gt;for ... of&lt;/code&gt; loop and run queries and tests on it using the spread syntax.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;beatle&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;beatles&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;beatle&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="c1"&gt;// "John Lennon", "Paul McCartney", "George Harrison", "Ringo Starr"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;[...&lt;/span&gt;&lt;span class="nx"&gt;beatles&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;beatle&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;beatle&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isAlive&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// 1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;One thing to keep in mind about &lt;code&gt;for ... of&lt;/code&gt; operator and &lt;code&gt;Symbol.iterator&lt;/code&gt;, is that &lt;a href="https://caniuse.com/mdn-javascript_statements_for_of"&gt;according to caniuse.com&lt;/a&gt;, while widely supported in 95% of browsers, they are not supported in (you guessed it) Internet Explorer. If you care about IE (and I think you shouldn't) you should avoid using this operator, as there's no polyfill - you can't polyfill syntax...&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>tutorial</category>
      <category>webdev</category>
    </item>
    <item>
      <title>CRUD is simple until it's not</title>
      <author>Chakrit Likitkhajorn</author>
      <pubDate>Sun, 16 Jan 2022 09:17:58 +0000</pubDate>
      <link>https://dev.to/chrisza4/crud-is-simple-until-its-not-4n84</link>
      <guid>https://dev.to/chrisza4/crud-is-simple-until-its-not-4n84</guid>
      <description>&lt;p&gt;Every app is just a glorified CRUD app with extra steps.&lt;/p&gt;

&lt;p&gt;There are a lot of debates happening in the dev community between using complex architecture (such as CQRS) and viewing everything as a CRUD.&lt;/p&gt;

&lt;p&gt;I want to clarify when CRUD is simple enough for the job, and when it is not.&lt;/p&gt;

&lt;p&gt;Let say you want to create an accounting system. You have an invoice. Invoice can be created, read, updated and deleted.&lt;/p&gt;

&lt;p&gt;Sounds like a CRUD app.&lt;/p&gt;

&lt;p&gt;So you start with a simple Rails-style framework with REST-style API surface, where everything is just a resource that can be CRUDed.&lt;/p&gt;

&lt;p&gt;The code can look like this (simplified version)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;update&lt;/span&gt;
  &lt;span class="n"&gt;invoice&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Invoice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;body&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:id&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
  &lt;span class="n"&gt;invoice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;update_by&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;body&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;invoice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;save&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#fit-everything-to-crud"&gt;
  &lt;/a&gt;
  Fit everything to CRUD
&lt;/h1&gt;

&lt;p&gt;Let say that your invoice can be approved. You added &lt;code&gt;status&lt;/code&gt; field to the model. The status can be &lt;code&gt;Draft&lt;/code&gt;, &lt;code&gt;Confirmed&lt;/code&gt;, &lt;code&gt;Approved&lt;/code&gt;, &lt;code&gt;Commented&lt;/code&gt; and &lt;code&gt;Rejected&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;And then you some business requirement&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;When an invoice is approved, send a notification to someone so they can proceed to pay.&lt;/li&gt;
&lt;li&gt;When an invoice is commented or rejected, send a notification to the creator so they can be revised.&lt;/li&gt;
&lt;li&gt;When a confirmed invoice has a total of more than 100,000 USD, send a notification to the director level.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If we still model by CRUD, we need a code that looks like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;update&lt;/span&gt;
  &lt;span class="n"&gt;invoice&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Invoice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;body&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:id&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
  &lt;span class="n"&gt;old_status&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;invoice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;status&lt;/span&gt;
  &lt;span class="n"&gt;invoice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;update_by&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;body&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;invoice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;save&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="n"&gt;new_status&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;invoice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;status&lt;/span&gt;

  &lt;span class="c1"&gt;# Send notification to payment department if status changed to approved&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;old_status&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="ss"&gt;:Approved&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;new_status&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="ss"&gt;:Approved&lt;/span&gt;
    &lt;span class="no"&gt;Notification&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;send_to&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:payment_department&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="c1"&gt;# Send notification to invoice owner if invoice was commented or rejected&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;old_status&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="ss"&gt;:Confirmed&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:Commented&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:Rejected&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nf"&gt;included?&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new_status&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="no"&gt;Notification&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;send_to&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;invoice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;owner&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="c1"&gt;# Send notification to management board if invoice exceed particular amount&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;old_status&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="ss"&gt;:Draft&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;new_status&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="ss"&gt;:Confirmed&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;invoice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;total&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;100000&lt;/span&gt;
    &lt;span class="no"&gt;Notification&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;send_to&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:C_level&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So now we can generalize everything as CRUD.&lt;/p&gt;

&lt;p&gt;Six months later, we want to add functionality to the invoice approval step.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;We want to ensure that any invoice exceeding 100,000 USD must be approved by someone with a proper level of authorization&lt;/li&gt;
&lt;li&gt;We want to lock any invoice that has been rejected more than 3 times.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If we wrote code as CRUD, to implement these requirements you must:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Carefully read through update hoops and see which line is related to which.&lt;/li&gt;
&lt;li&gt;If 2 programmers work in parallel, they might need to resolve to merge conflict.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1&gt;
  &lt;a href="#use-business-intent"&gt;
  &lt;/a&gt;
  Use business intent
&lt;/h1&gt;

&lt;p&gt;Another type of implementation is to put a business intent into our model.&lt;/p&gt;

&lt;p&gt;Instead of update, we have these:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;approve&lt;/span&gt;
  &lt;span class="n"&gt;invoice&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Invoice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;body&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:id&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
  &lt;span class="n"&gt;invoice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;status&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="ss"&gt;:Approved&lt;/span&gt;
  &lt;span class="n"&gt;invoice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;save&lt;/span&gt;
  &lt;span class="no"&gt;Notification&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;send_to&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:payment_department&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;reject&lt;/span&gt;
  &lt;span class="n"&gt;invoice&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Invoice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;body&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:id&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
  &lt;span class="n"&gt;invoice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;status&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="ss"&gt;:Reject&lt;/span&gt;
  &lt;span class="n"&gt;invoice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;save&lt;/span&gt;
  &lt;span class="no"&gt;Notification&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;send_to&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:invoice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;owner&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="c1"&gt;# And so-on&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Instead of translating business intention such as approve to be like: approval is just an update with extra steps. We instead embedded business intention directly into our method.&lt;/p&gt;

&lt;p&gt;When the business what to modify the approval process, we can search for &lt;code&gt;approve&lt;/code&gt; method.&lt;br&gt;
When the business what to modify the confirmation process, we can search for &lt;code&gt;confirm&lt;/code&gt; method.&lt;/p&gt;

&lt;p&gt;Even if this contains more code, it's become easier to modify and reason about.&lt;/p&gt;

&lt;p&gt;This is the power of moving away from CRUD based modelling.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#its-not-black-and-white"&gt;
  &lt;/a&gt;
  It's not black and white
&lt;/h1&gt;

&lt;p&gt;CRUD is a simple model. There are only four concepts and it can handle almost every requirement imaginable.&lt;/p&gt;

&lt;p&gt;Everything can be viewed as "CRUD with extra steps". Even network communication can be viewed as "CRUD of network packet with extra steps".&lt;/p&gt;

&lt;p&gt;It is a simple and powerful model. But it has its own limitation.&lt;/p&gt;

&lt;p&gt;CRUD based method works well until collaboration break.&lt;/p&gt;

&lt;p&gt;You can fit nearly every app into the CRUD model, but at what cost?&lt;/p&gt;

&lt;p&gt;The question is here is not can you, it's should you.&lt;/p&gt;

&lt;p&gt;If your software grows based on some particular business process, such as if your accounting module is famous for a world-class approval system, it's worth you putting a highlight to those business intent rather than generalize it to "just CRUD with extra steps".&lt;/p&gt;

&lt;p&gt;I don't have a clear line between when to model the app as CRUD and when to do the domain event-based app.&lt;/p&gt;

&lt;p&gt;But I know that if communication starts to break down. If a requirement needs 2 days of dev assessment just to translate the requirement into codebase modelling, check where to change, what is the impact.&lt;/p&gt;

&lt;p&gt;Your model might not be sufficient.&lt;/p&gt;

&lt;p&gt;And that's when you might need to move on from the simple CRUD model.&lt;/p&gt;

</description>
      <category>architecture</category>
      <category>webdev</category>
    </item>
    <item>
      <title>GitHub CLI on GitPod üçä</title>
      <author>Siddhant Khare</author>
      <pubDate>Sun, 16 Jan 2022 09:15:17 +0000</pubDate>
      <link>https://dev.to/siddhantkcode/github-cli-on-gitpod-4e84</link>
      <guid>https://dev.to/siddhantkcode/github-cli-on-gitpod-4e84</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-github-cli"&gt;
  &lt;/a&gt;
  What is GitHub CLI?
&lt;/h2&gt;

&lt;p&gt;It is GitHub‚Äôs official command line tool. It brings pull requests, issues, and other GitHub concepts to the terminal next to where you are already working with git and your code.&lt;/p&gt;

&lt;p&gt;So, Recently GitHub CLI made a new update to Run Your GitHub Workflow Files through Command Line.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-gitpod"&gt;
  &lt;/a&gt;
  What is GitPod?
&lt;/h2&gt;

&lt;p&gt;Gitpod is an open-source Kubernetes application for ready-to-code developer environments that spins up fresh, automated dev environments for each task, in the cloud, in seconds. It enables you to describe your dev environment as code and start instant, remote and cloud-based developer environments directly from your browser or your Desktop IDE.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#open-your-github-repository-in-gitpod"&gt;
  &lt;/a&gt;
  Open Your GitHub Repository in Gitpod:
&lt;/h2&gt;

&lt;p&gt;just add this prefix following to your github repository: &lt;code&gt;https://gitpod.io/#&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Example: &lt;code&gt;https://gitpod.io/#https://github.com/GITHUB_USERNAME/REPOSITORY_NAME/&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#github-cli-setup-at-gitpod-official-docs"&gt;
  &lt;/a&gt;
  GitHub CLI Setup at Gitpod (&lt;a href="https://cli.github.com/manual/installation"&gt;official docs&lt;/a&gt;):
&lt;/h2&gt;

&lt;p&gt;Run Following Commands:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;curl &lt;span class="nt"&gt;-fsSL&lt;/span&gt; https://cli.github.com/packages/githubcli-archive-keyring.gpg | &lt;span class="nb"&gt;sudo dd &lt;/span&gt;&lt;span class="nv"&gt;of&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/share/keyrings/githubcli-archive-keyring.gpg
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"deb [arch=&lt;/span&gt;&lt;span class="si"&gt;$(&lt;/span&gt;dpkg &lt;span class="nt"&gt;--print-architecture&lt;/span&gt;&lt;span class="si"&gt;)&lt;/span&gt;&lt;span class="s2"&gt; signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main"&lt;/span&gt; | &lt;span class="nb"&gt;sudo tee&lt;/span&gt; /etc/apt/sources.list.d/github-cli.list &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; /dev/null
&lt;span class="nb"&gt;sudo &lt;/span&gt;apt update
&lt;span class="nb"&gt;sudo &lt;/span&gt;apt &lt;span class="nb"&gt;install &lt;/span&gt;gh
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;apt update
&lt;span class="nb"&gt;sudo &lt;/span&gt;apt &lt;span class="nb"&gt;install &lt;/span&gt;gh
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Output:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--alpyQGUQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zl63b9f2xoswealtdj2a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--alpyQGUQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zl63b9f2xoswealtdj2a.png" alt="Installation of GitHub CLI on Gitpod" width="880" height="359"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#setting-up-the-workflow"&gt;
  &lt;/a&gt;
  Setting up the Workflow:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Create a empty file under &lt;code&gt;.github/workflows/&lt;/code&gt; named as &lt;code&gt;github-action-demo.yml&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;File Content:&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Demo&lt;/span&gt;

&lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="c1"&gt;# Triggers the workflow on push or pull request events but only for the main branch&lt;/span&gt;
&lt;span class="na"&gt;pull_request&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;branches&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;main&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;# Allows you to run this workflow manually from the Actions tab&lt;/span&gt;
&lt;span class="na"&gt;workflow_dispatch&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;

&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;cli-gitpod&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;CLI and Gitpod Demo&lt;/span&gt;
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;
    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Hello From Gitpod&lt;/span&gt;
        &lt;span class="s"&gt;run&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;|&lt;/span&gt;
        &lt;span class="s"&gt;echo "Hello! From Gitpod üçä"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#login-with-gh-cli"&gt;
  &lt;/a&gt;
  Login with gh cli
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Run:&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;gh auth login
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Complete whole step and login.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#test-amp-run-github-workflow-with-gh-cli"&gt;
  &lt;/a&gt;
  Test &amp;amp; Run GitHub Workflow with gh cli:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;To View the list of your workflows:&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;gh workflow list
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;you Will not see anything, because you first have to enbale that workflow.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;To Enable the workflow:&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;gh workflow &lt;span class="nb"&gt;enable&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8oKAbntG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pvzq20e335rgh63dwsh1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8oKAbntG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pvzq20e335rgh63dwsh1.png" alt="Workflow Enabled" width="808" height="64"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;To Run the Workflow:&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;gh workflow run demo
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Here &lt;code&gt;demo&lt;/code&gt; was my workflow name, you can replace it with your workflow's name.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RobU6Vze--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s2jmvjnjcqvpf3fezdsl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RobU6Vze--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s2jmvjnjcqvpf3fezdsl.png" alt="Workflow Run" width="880" height="90"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;On GitHub Dashboard:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--M1qM7T4y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0ze6hhbudlbtoipqy2oa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--M1qM7T4y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0ze6hhbudlbtoipqy2oa.png" alt="GitHub Dashboard" width="880" height="339"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;run history list &amp;amp; analysis:&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;gh run list &lt;span class="nt"&gt;--workflow&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;github-action-demo.yml
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;github-action-demo.yml&lt;/code&gt; is the filename, replace it with your workflow's filename.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i-FH07e_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x3vq1z7mhfxfwvh37zuu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i-FH07e_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x3vq1z7mhfxfwvh37zuu.png" alt="Run List" width="880" height="57"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Specific Result of any run ID:&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;gh run view 1703727006
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;1703727006&lt;/code&gt; is ID, replace it with your workflow run ID.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eZvaxfNT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j51bds0b8s7d4sy5ii11.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eZvaxfNT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j51bds0b8s7d4sy5ii11.png" alt="Github workflow run view" width="880" height="147"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#similarly-you-can-run-all-github-cli-commands-in-gitpod-raw-gh-endraw-cli-commands"&gt;
  &lt;/a&gt;
  Similarly, You Can Run all GitHub CLI Commands in GitPod (&lt;a href="https://cli.github.com/manual/gh"&gt;&lt;code&gt;gh&lt;/code&gt; cli commands&lt;/a&gt;)
&lt;/h2&gt;



&lt;p&gt;&lt;a href="https://gitpod.io/#https://github.com/Siddhant-K-code/test-github-action-on-gitpod"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ucaV8MME--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gitpod.io/button/open-in-gitpod.svg" alt="Contribute in the browser using Gitpod" width="138" height="32"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/Siddhant-K-code"&gt;
        Siddhant-K-code
      &lt;/a&gt; / &lt;a href="https://github.com/Siddhant-K-code/github-cli-on-gitpod"&gt;
        github-cli-on-gitpod
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Test GitHub CLI on Gitpod
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h2&gt;
What is GitHub CLI?&lt;/h2&gt;
&lt;p&gt;It is GitHub‚Äôs official command line tool. It brings pull requests, issues, and other GitHub concepts to the terminal next to where you are already working with git and your code.&lt;/p&gt;
&lt;p&gt;So, Recently GitHub CLI made a new update to Run Your GitHub Workflow Files through Command Line.&lt;/p&gt;
&lt;h2&gt;
What is GitPod?&lt;/h2&gt;
&lt;p&gt;Gitpod is an open-source Kubernetes application for ready-to-code developer environments that spins up fresh, automated dev environments for each task, in the cloud, in seconds. It enables you to describe your dev environment as code and start instant, remote and cloud-based developer environments directly from your browser or your Desktop IDE.&lt;/p&gt;
&lt;h2&gt;
Open Your GitHub Repository in Gitpod:&lt;/h2&gt;
&lt;p&gt;just add this prefix following to your github repository: &lt;code&gt;https://gitpod.io/#&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Example: &lt;code&gt;https://gitpod.io/#https://github.com/GITHUB_USERNAME/REPOSITORY_NAME/&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;
GitHub CLI Setup at Gitpod (&lt;a href="https://cli.github.com/manual/installation"&gt;official docs&lt;/a&gt;):&lt;/h2&gt;
&lt;p&gt;Run Following Commands:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg &lt;span class="pl-k"&gt;|&lt;/span&gt; sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
&lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;deb [arch=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$(&lt;/span&gt;dpkg --print-architecture&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;‚Ä¶
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/Siddhant-K-code/github-cli-on-gitpod"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



</description>
      <category>gitpod</category>
      <category>github</category>
      <category>cli</category>
      <category>actions</category>
    </item>
    <item>
      <title>Day 79 of 100 Days of Code &amp; Scrum: Eleventh Weekly Retrospective</title>
      <author>Rammina</author>
      <pubDate>Sun, 16 Jan 2022 08:51:28 +0000</pubDate>
      <link>https://dev.to/rammina/day-79-of-100-days-of-code-scrum-eleventh-weekly-retrospective-acj</link>
      <guid>https://dev.to/rammina/day-79-of-100-days-of-code-scrum-eleventh-weekly-retrospective-acj</guid>
      <description>&lt;p&gt;Happy Sunday, everyone!&lt;/p&gt;

&lt;p&gt;I had trouble keeping up with my goals this week, because they involved different things. These were learning more about Next.js and Scrum, adding pages to my company site, sending job proposals and cold e-mails, and finally, reviewing some of my skills to prepare for technical interviews. It was honestly overwhelming at times, but it was fairly productive.&lt;/p&gt;

&lt;p&gt;Let's move on to my weekly retrospective!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#weekly-sprint-goals"&gt;
  &lt;/a&gt;
  Weekly Sprint Goals
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#company-website"&gt;
  &lt;/a&gt;
  Company Website
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;add more sections to other pages and make them more detailed:

&lt;ul&gt;
&lt;li&gt;the &lt;a href="https://www.rammina.com/services"&gt;Services page&lt;/a&gt; could include specific sections for "Website Development," such as Frontend Web Development and Backend Web Development, what kind of technology stacks are used, and so on.&lt;/li&gt;
&lt;li&gt;Digital advertising, for example, could include different types of services and techniques such as email marketing, social media marketing, and the likes.&lt;/li&gt;
&lt;li&gt;Writing also could include different types of writing services, including articles, blogs, and etc.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#nextjs"&gt;
  &lt;/a&gt;
  Next.js
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;continue learning by reading the Next.js documentation.&lt;/li&gt;
&lt;li&gt;continue going through &lt;a href="https://www.udemy.com/course/nextjs-react-the-complete-guide/"&gt;Next.js &amp;amp; React by Maximilian Schwarzm√ºller&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;learn about SWR and go through the documentation.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#scrum"&gt;
  &lt;/a&gt;
  Scrum
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;continue to learn more about Scrum, through reading articles and watching videos.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#job-searching"&gt;
  &lt;/a&gt;
  Job Searching
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;make reusable templates for answering a job application questions.&lt;/li&gt;
&lt;li&gt;create a template for cold outreach for looking for contract/subcontract work.&lt;/li&gt;
&lt;li&gt;make reusable templates for cold e-mailing businesses to let me work for them (searching for clients).&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#weekly-review"&gt;
  &lt;/a&gt;
  Weekly Review
&lt;/h2&gt;

&lt;p&gt;Here are the things I've managed to do:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;add Web Development and Digital Marketing Services pages (not deployed, because I have one more page to add)&lt;/li&gt;
&lt;li&gt;continue to learn more Next.js by going through &lt;a href="https://www.udemy.com/course/nextjs-react-the-complete-guide/"&gt;Next.js &amp;amp; React by Maximilian Schwarzm√ºller&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;continued studying Scrum by reading articles on the &lt;a href="https://www.scrum.org/pathway/scrum-master"&gt;Scrum.org Scrum Master Learning Path&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;made reusable templates for cold emailing to companies and potential clients.&lt;/li&gt;
&lt;li&gt;expanded my network.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#weekly-retrospective"&gt;
  &lt;/a&gt;
  Weekly Retrospective
&lt;/h2&gt;

&lt;p&gt;Moving on, let's tackle what I've managed to do well, what my shortcomings are, and what I could do better next time.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-went-great"&gt;
  &lt;/a&gt;
  What Went Great
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;I made some progress with building services pages for my &lt;a href="https://www.rammina.com"&gt;company website&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;I learned more about Next.js, even if just a little bit.&lt;/li&gt;
&lt;li&gt;read more articles about Scrum.&lt;/li&gt;
&lt;li&gt;now, I have templates for reaching out to companies and businesses.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#some-mistakes-ive-made"&gt;
  &lt;/a&gt;
  Some Mistakes I've Made
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;I forgot to continue reading SWR documentation.&lt;/li&gt;
&lt;li&gt;I didn't finish all of the pages for the Services of my website.&lt;/li&gt;
&lt;li&gt;I wasn't managing my time efficiently.&lt;/li&gt;
&lt;li&gt;I don't have a set structure and schedule for doing things, so I tend to forget them eventually.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#things-i-could-improve-on"&gt;
  &lt;/a&gt;
  Things I Could Improve On
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;limit distractions especially when I'm in the middle of work.&lt;/li&gt;
&lt;li&gt;try to do things at the same time and setting if possible to avoid procrastination.&lt;/li&gt;
&lt;li&gt;write more recyclable code (components and styling), so I don't have to keep repeating the same work.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#resourcesrecommended-readings"&gt;
  &lt;/a&gt;
  Resources/Recommended Readings
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://scrumguides.org/scrum-guide.html"&gt;2020 Scrum Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.scrum.org/pathway/scrum-master"&gt;Scrum.org Scrum Master Learning Path&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nextjs.org/docs/getting-started"&gt;Next.js official documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://swr.vercel.app/"&gt;SWR official documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thank you for the support, everyone! Enjoy your weekend!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9gNNIpK9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x9ayfxxxaz2g2hfcqbsk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9gNNIpK9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x9ayfxxxaz2g2hfcqbsk.png" alt="Rammina Thank You Banner" width="880" height="293"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#disclaimer"&gt;
  &lt;/a&gt;
  DISCLAIMER
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;This is not a guide&lt;/strong&gt;, it is just me sharing my experiences and learnings. This post only expresses my thoughts and opinions (based on my limited knowledge) and is in no way a substitute for actual references. If I ever make a mistake or if you disagree, I would appreciate corrections in the comments!&lt;/p&gt;



&lt;h3&gt;
  &lt;a href="#other-media"&gt;
  &lt;/a&gt;
  Other Media
&lt;/h3&gt;

&lt;p&gt;Feel free to reach out to me in other media!&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;a href="https://www.rammina.com"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BK-zilS2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/rammina/image/upload/v1638444046/rammina-button-128_x9ginu.png" alt="Rammina Logo" width="128" height="50"&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;a href="https://twitter.com/RamminaR"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C341ckO3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/rammina/image/upload/v1636792959/twitter-logo_laoyfu_pdbagm.png" alt="Twitter logo" width="128" height="50"&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;a href="https://github.com/Rammina"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u4ZlXeay--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/rammina/image/upload/v1636795051/GitHub-Emblem2_epcp8r.png" alt="Github logo" width="128" height="50"&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;

</description>
      <category>100daysofcode</category>
      <category>beginners</category>
      <category>javascript</category>
      <category>productivity</category>
    </item>
    <item>
      <title>What is an IIFE in Javascript?</title>
      <author>Amol Shelke</author>
      <pubDate>Sun, 16 Jan 2022 08:37:33 +0000</pubDate>
      <link>https://dev.to/amolshelke2/what-is-an-iife-in-javascript-1j3e</link>
      <guid>https://dev.to/amolshelke2/what-is-an-iife-in-javascript-1j3e</guid>
      <description>&lt;h2&gt;
  &lt;a href="#iife"&gt;
  &lt;/a&gt;
  IIFE
&lt;/h2&gt;

&lt;p&gt;An IIFE is (Immediately Invoked function Expression) that runs as soon it is defined.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;(function () {
  var number = Math.random() * 10
  console.log(number &amp;gt;= 5)
})()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It is a design pattern also known as self executing anonymous function and contains two major parts&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;The first is the anonymous function with lexical scope enclosed withing the grouping selector (). This Prevents accessing variable withing the IIFE idiom as well as polluting the global scope.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The second part is the Immediately invoked function expression (). through which javascript engine will interpret the function&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>javascript</category>
      <category>programming</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Writing unit tests for EF Core</title>
      <author>Jason Sultana</author>
      <pubDate>Sun, 16 Jan 2022 08:21:00 +0000</pubDate>
      <link>https://dev.to/jasonsultana/writing-unit-tests-for-ef-core-4lji</link>
      <guid>https://dev.to/jasonsultana/writing-unit-tests-for-ef-core-4lji</guid>
      <description>&lt;p&gt;G‚Äôday guys!&lt;/p&gt;

&lt;p&gt;It‚Äôs been a while since I‚Äôve had a good look at Entity Framework, since for the last couple of years I‚Äôve been professionally living in mostly NoSQL-land. Earlier today though, I thought I‚Äôd crack open an old hobby project and add some unit tests for it. That‚Äôs easier said than done though unless you know what you‚Äôre doing, since &lt;code&gt;DbContext&lt;/code&gt; by default is not easily unit testable.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#bro-do-you-even-moq"&gt;
  &lt;/a&gt;
  Bro, do you even Moq?
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dt7_U6Is--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://jason.sultana.net.au/static/img/bro-do-you-even-mock.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dt7_U6Is--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://jason.sultana.net.au/static/img/bro-do-you-even-mock.jpeg" alt="" width="400" height="400"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I hear ya! It should be as simple as extracting an interface out of your context, mocking it with Moq and you‚Äôre done! The problem essentially is the &lt;code&gt;DbSet&amp;lt;T&amp;gt;&lt;/code&gt; that you use to define your tables. Firstly, &lt;code&gt;DbSet&amp;lt;T&amp;gt;&lt;/code&gt; is abstract, so it can‚Äôt be newed. On top of that, there are a whole plethora of methods on it that are a pain to mock - &lt;code&gt;ToListAsync()&lt;/code&gt;, &lt;code&gt;Where()&lt;/code&gt; chaining, &lt;code&gt;IQueryable&amp;lt;T&amp;gt;&lt;/code&gt; logic, unions and other set operations and more. If I remember correctly, there was a &lt;a href="https://docs.microsoft.com/en-us/ef/ef6/fundamentals/testing/mocking#testing-with-async-queries"&gt;Microsoft article&lt;/a&gt; published years ago which gave you an implementation for what was essentially a mockable &lt;code&gt;DbSet&amp;lt;T&amp;gt;&lt;/code&gt;, but I‚Äôve found a better solution: &lt;code&gt;Moq.EntityFrameworkCore&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;You can have a look at the official howto on &lt;a href="https://github.com/MichalJankowskii/Moq.EntityFrameworkCore"&gt;Github&lt;/a&gt;, but the gist of it is:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;        var mock = new Mock&amp;lt;IYourDbContext&amp;gt;();
        mock.Setup(m =&amp;gt; m.Customers)
            .ReturnsDbSet(_customers); // This magic comes from Moq.EntityFrameworkCore

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And that‚Äôs it! Admittedly I haven‚Äôt tested it thoroughly, but for the simple-ish test cases that I have, it works like a dream. Looking at the &lt;a href="https://github.com/MichalJankowskii/Moq.EntityFrameworkCore/tree/master/src/Moq.EntityFrameworkCore/DbAsyncQueryProvider"&gt;source code&lt;/a&gt; interestingly looks quite similar to the Microsoft article, but even if it is just taking what Microsoft gave us and packaging it into a nice, easily-consumable chunk of nuget (I‚Äôm dreaming of Tim Tams), it‚Äôs much appreciated.&lt;/p&gt;

&lt;p&gt;Anyway, that‚Äôs all from me - this might be my shortest post yet. Happy mocking!&lt;/p&gt;

&lt;p&gt;Catch ya!&lt;/p&gt;

</description>
      <category>dotnet</category>
      <category>testing</category>
    </item>
    <item>
      <title>Writing Chrome Extensions Using Svelte-Kit and Manifest v3</title>
      <author>Michel Canta</author>
      <pubDate>Sun, 16 Jan 2022 08:12:35 +0000</pubDate>
      <link>https://dev.to/michmich112/writing-chrome-extensions-using-svelte-kit-and-manifest-v3-mkd</link>
      <guid>https://dev.to/michmich112/writing-chrome-extensions-using-svelte-kit-and-manifest-v3-mkd</guid>
      <description>&lt;p&gt;Svelte-Kit has been an amazing tool to create great responsive and reactive websites. But with its roots as a compiler, I wondered how I could use it to create a Chrome Extension, and as it turns out‚Ä¶ it's really simple.&lt;/p&gt;




&lt;p&gt;Today, we're going to see how we can build a simple extension with Svelte-kit and use Chrome's &lt;a href="https://developer.chrome.com/docs/extensions/mv3/"&gt;Manifest V3&lt;/a&gt; which will allow us to use promisified versions of many of the Chrome API's methods.¬†&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: this method can work with Manifest V2 as well&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#1-setting-up-our-repo"&gt;
  &lt;/a&gt;
  1. Setting Up Our Repo
&lt;/h2&gt;

&lt;p&gt;We'll start with an empty repo where we will create the template svelte kit project.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm init svelte@next my-extension
&lt;span class="nb"&gt;cd &lt;/span&gt;my-app
npm &lt;span class="nb"&gt;install
&lt;/span&gt;npm run dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We are going to replace the default index page that is created with the following code that will allow us to get the url of the current tab:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GjzSUmlD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1j81g00lpk6ghwl59pxn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GjzSUmlD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1j81g00lpk6ghwl59pxn.png" alt="src/routes/index.svelte" width="880" height="537"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: We are using the Chrome api as other methods are blocked by the extension executer for safety reasons.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Update the &lt;code&gt;body&lt;/code&gt; tag in the the &lt;code&gt;app.html&lt;/code&gt; file to configure the max size of the extension popup as such:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hVI4cvw1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gykhtkrxj70w5u6jeywm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hVI4cvw1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gykhtkrxj70w5u6jeywm.png" alt="src/app.html" width="880" height="485"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once updated we will create our manifest file in the &lt;code&gt;/static&lt;/code&gt; folder. We will be using manifest V3 here as that is the latest from the Chrome team.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"My first Svelte Extension"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"description"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"A browser extension made with Svelte Kit"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"version"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"1.0.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"manifest_version"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"permissions"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"activeTab"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"action"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"default_title"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Svelte Extension"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"default_icon"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"favicon.png"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"default_popup"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"index.html"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now when we build our extension, the manifest file will be included in our build folder making it much easier and cleaner.&lt;/p&gt;

&lt;p&gt;Finally we need to change our adapter to the &lt;a href="https://github.com/michmich112/sveltekit-adapter-chrome-extension"&gt;&lt;code&gt;sveltekit-adapter-chrome-extension&lt;/code&gt;&lt;/a&gt; as the usual &lt;code&gt;@sveltekit/adapter-static&lt;/code&gt; creates an inline script that is blocked in Manifest V3 due to Content Security Policies (The same is true for Manifest V2 but you are able to define a Content Security Policy rule with a the sha256 of the script or a nonce, that bypasses it in Manifest V2).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-D&lt;/span&gt; sveltekit-adapter-chrome-extension
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We are then able to build our project running &lt;code&gt;npm run build&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2testing-our-extension"&gt;
  &lt;/a&gt;
  2.Testing our Extension
&lt;/h2&gt;

&lt;p&gt;Click on the extension icon in your chrome browser and then click on manage extensions&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UmlI0eZT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ybcwkl8mmrlj6jasyk55.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UmlI0eZT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ybcwkl8mmrlj6jasyk55.png" alt="Navigation to get to Extension management page" width="328" height="231"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Make sure that developer mode is turned on (on the top right side of the page) then click on &lt;code&gt;Load Unpacked&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nT-p2YPW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y5ku53ngxu7qkdfx4egz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nT-p2YPW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y5ku53ngxu7qkdfx4egz.png" alt="Extension management page top bar" width="784" height="122"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Select your &lt;code&gt;build&lt;/code&gt; folder from the file picker and open it. You should now see your extension on the page.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DSZ8pOOI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lhcz9ddu8ob1dtwu27qu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DSZ8pOOI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lhcz9ddu8ob1dtwu27qu.png" alt="Extension appears on the extension management page" width="774" height="347"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Make sure it is enabled and navigate to any page you want. Toggle the extension and press the button!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tbD1GKts--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/splo0d9wgf9cw4752o4t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tbD1GKts--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/splo0d9wgf9cw4752o4t.png" alt="Success!" width="880" height="637"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There you go! You've just made your first Chrome extension using Svelte Kit and Manifest v3!&lt;/p&gt;

</description>
      <category>svelte</category>
      <category>javascript</category>
      <category>chrome</category>
      <category>tutorial</category>
    </item>
  </channel>
</rss>
