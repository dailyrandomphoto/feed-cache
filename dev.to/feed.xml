<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Solution: Jump Game II</title>
      <author>seanpgallivan</author>
      <pubDate>Wed, 05 May 2021 08:56:53 +0000</pubDate>
      <link>https://dev.to/seanpgallivan/solution-jump-game-ii-cn3</link>
      <guid>https://dev.to/seanpgallivan/solution-jump-game-ii-cn3</guid>
      <description>&lt;p&gt;&lt;em&gt;This is part of a series of Leetcode solution explanations (&lt;a href="https://dev.to/seanpgallivan/leetcode-solutions-index-57fl"&gt;index&lt;/a&gt;). If you liked this solution or found it useful,&lt;/em&gt; &lt;strong&gt;&lt;em&gt;please like&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;this post and/or&lt;/em&gt; &lt;strong&gt;&lt;em&gt;upvote&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;&lt;a href="https://leetcode.com/problems/jump-game-ii/discuss/1192396"&gt;my solution post on Leetcode's forums&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#leetcode-problem-45-medium-jump-game-ii"&gt;
  &lt;/a&gt;
  &lt;a href="https://leetcode.com/problems/jump-game-ii/"&gt;Leetcode Problem #45 (&lt;em&gt;Medium&lt;/em&gt;): Jump Game II&lt;/a&gt;
&lt;/h4&gt;




&lt;h4&gt;
  &lt;a href="#description"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Description:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt; || &lt;em&gt;Code&lt;/em&gt;: &lt;a href="#javascript-code"&gt;&lt;em&gt;JavaScript&lt;/em&gt;&lt;/a&gt; | &lt;a href="#python-code"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; | &lt;a href="#java-code"&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt; | &lt;a href="#c-code"&gt;&lt;em&gt;C++&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Given an array of non-negative integers &lt;code&gt;nums&lt;/code&gt;, you are initially positioned at the first index of the array.&lt;/p&gt;

&lt;p&gt;Each element in the array represents your maximum jump length at that position.&lt;/p&gt;

&lt;p&gt;Your goal is to reach the last index in the minimum number of jumps.&lt;/p&gt;

&lt;p&gt;You can assume that you can always reach the last index.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#examples"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Examples:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 1:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;nums = [2,3,1,1,4]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Explanation:&lt;/td&gt;
&lt;td&gt;The minimum number of jumps to reach the last index is 2. Jump 1 step from index 0 to 1, then 3 steps to the last index.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 2:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;nums = [2,3,0,1,4]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#constraints"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Constraints:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;1 &amp;lt;= nums.length &amp;lt;= 1000&lt;/li&gt;
&lt;li&gt;0 &amp;lt;= nums[i] &amp;lt;= 10^5&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#idea"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Idea:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;em&gt;Code&lt;/em&gt;: &lt;a href="#javascript-code"&gt;&lt;em&gt;JavaScript&lt;/em&gt;&lt;/a&gt; | &lt;a href="#python-code"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; | &lt;a href="#java-code"&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt; | &lt;a href="#c-code"&gt;&lt;em&gt;C++&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;Since each element of our input array (&lt;strong&gt;N&lt;/strong&gt;) represents the maximum jump length and not the definite jump length, that means we can visit any index between the current index (&lt;strong&gt;i&lt;/strong&gt;) and &lt;strong&gt;i + N[i]&lt;/strong&gt;. Stretching that to its logical conclusion, we can safely iterate through &lt;strong&gt;N&lt;/strong&gt; while keeping track of the furthest index reachable (&lt;strong&gt;next&lt;/strong&gt;) at any given moment (&lt;strong&gt;next = max(next, i + N[i])&lt;/strong&gt;). We'll know we've found our solution once &lt;strong&gt;next&lt;/strong&gt; reaches or passes the last index (&lt;strong&gt;next &amp;gt;= N.length - 1&lt;/strong&gt;).&lt;/p&gt;

&lt;p&gt;The difficulty then lies in keeping track of how many jumps it takes to reach that point. We can't simply count the number of times we update &lt;strong&gt;next&lt;/strong&gt;, as we may see that happen more than once while still in the current jump's range. In fact, we can't be sure of the best next jump until we reach the end of the current jump's range.&lt;/p&gt;

&lt;p&gt;So in addition to &lt;strong&gt;next&lt;/strong&gt;, we'll also need to keep track of the current jump's endpoint (&lt;strong&gt;curr&lt;/strong&gt;) as well as the number of jumps taken so far (&lt;strong&gt;ans&lt;/strong&gt;).&lt;/p&gt;

&lt;p&gt;Since we'll want to &lt;strong&gt;return ans&lt;/strong&gt; at the earliest possibility, we should base it on &lt;strong&gt;next&lt;/strong&gt;, as noted earlier. With careful initial definitions for &lt;strong&gt;curr&lt;/strong&gt; and &lt;strong&gt;next&lt;/strong&gt;, we can start our iteration at &lt;strong&gt;i = 0&lt;/strong&gt; and &lt;strong&gt;ans = 0&lt;/strong&gt; without the need for edge case return expressions.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Time Complexity: O(N)&lt;/strong&gt; where N is the length of N&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Space Cmplexity: O(1)&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h4&gt;
  &lt;a href="#implementation"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Implementation:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;There are only minor differences in the code of all four languages.&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#javascript-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Javascript Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;jump&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;N&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;len&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;N&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;curr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;next&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ans&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;next&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;len&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;curr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;ans&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;curr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;next&lt;/span&gt;
        &lt;span class="nx"&gt;next&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;N&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;ans&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#python-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Python Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;jump&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;Nlen&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;curr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nxt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;nxt&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;Nlen&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;curr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;ans&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
                &lt;span class="n"&gt;curr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;nxt&lt;/span&gt;
            &lt;span class="n"&gt;nxt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nxt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#java-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Java Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;jump&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="no"&gt;N&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;len&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;N&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;curr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;len&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;curr&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="o"&gt;++;&lt;/span&gt;
                &lt;span class="n"&gt;curr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
            &lt;span class="o"&gt;};&lt;/span&gt;
            &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;max&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="no"&gt;N&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="o"&gt;};&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;};&lt;/span&gt;
&lt;span class="o"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#c-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;C++ Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;public:&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;jump&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;len&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;curr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;len&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;curr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;curr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;ans&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>algorithms</category>
      <category>javascript</category>
      <category>java</category>
      <category>python</category>
    </item>
    <item>
      <title>Introducing Code Modes</title>
      <author>Siddharth</author>
      <pubDate>Wed, 05 May 2021 08:54:56 +0000</pubDate>
      <link>https://dev.to/siddharthshyniben/introducing-code-modes-13h7</link>
      <guid>https://dev.to/siddharthshyniben/introducing-code-modes-13h7</guid>
      <description>&lt;p&gt;Lately, I've been finding myself showing/hiding folders/files again and again depending on what I am doing. To make this easier, I created a VSCode extension called Code Modes.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/SiddharthShyniben"&gt;
        SiddharthShyniben
      &lt;/a&gt; / &lt;a href="https://github.com/SiddharthShyniben/code-modes"&gt;
        code-modes
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Change your file tree based on what mode you are in!
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a href="https://github.com/SiddharthShyniben/code-modes/graphs/contributors"&gt;&lt;img src="https://camo.githubusercontent.com/b7a372711ded9efccd30802869c6f2090325305ae61da578241ce4c04344380d/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6e7472696275746f72732f5369646468617274685368796e6962656e2f636f64652d6d6f6465732e7376673f7374796c653d666f722d7468652d6261646765" alt="Contributors"&gt;&lt;/a&gt;
&lt;a href="https://github.com/SiddharthShyniben/code-modes/network/members"&gt;&lt;img src="https://camo.githubusercontent.com/6f98c96cfafa992fa2e75b9028b7583bd528a135c56e77b73925b2edc8bbe0e6/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f5369646468617274685368796e6962656e2f636f64652d6d6f6465732e7376673f7374796c653d666f722d7468652d6261646765" alt="Forks"&gt;&lt;/a&gt;
&lt;a href="https://github.com/SiddharthShyniben/code-modes/stargazers"&gt;&lt;img src="https://camo.githubusercontent.com/77e6ceb434ae155c8a0287e6d1a406cf6c0de1a45b514917edae054e785f9970/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f5369646468617274685368796e6962656e2f636f64652d6d6f6465732e7376673f7374796c653d666f722d7468652d6261646765" alt="Stargazers"&gt;&lt;/a&gt;
&lt;a href="https://github.com/SiddharthShyniben/code-modes/issues"&gt;&lt;img src="https://camo.githubusercontent.com/7b0fcf904d6c2ea80cd116ae5c17c6d40e75a2c26fdeb9b527428c3eb85c54c2/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f5369646468617274685368796e6962656e2f636f64652d6d6f6465732e7376673f7374796c653d666f722d7468652d6261646765" alt="Issues"&gt;&lt;/a&gt;
&lt;a href="https://github.com/SiddharthShyniben/code-modes/blob/main/LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/77c6b12fbc8ae5fa983c0df345379cdf70a67a4797f79d561c26b0154e0f3a7e/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f5369646468617274685368796e6962656e2f636f64652d6d6f6465732e7376673f7374796c653d666f722d7468652d6261646765" alt="GPL 3.0 License"&gt;&lt;/a&gt;
&lt;a href="https://github.com/SiddharthShyniben/code-modes/"&gt;&lt;img src="https://camo.githubusercontent.com/7d036fe907e0a64a242b9fcfedeff63dc9d397e16d335fafb479b777aa69d14a/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f762f7461672f5369646468617274685368796e6962656e2f636f64652d6d6f6465733f736f72743d73656d766572267374796c653d666f722d7468652d6261646765" alt="Latest Version"&gt;&lt;/a&gt;
&lt;a href="https://saythanks.io/to/siddharth.muscat%40gmail.com" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4964bfa83392183cba098ee9f9586d059b28a1dca00858d3ad40b2046b85ee23/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f7361792d7468616e6b732d6666363962342e7376673f7374796c653d666f722d7468652d6261646765" alt="Say thanks"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;
  &lt;a href="https://github.com/SiddharthShyniben/code-modes"&gt;
    &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Kv1VUyKQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/SiddharthShyniben/code-modes/main/images/logo.png" alt="(ツ)" height="80"&gt;
  &lt;/a&gt;
  &lt;/p&gt;
&lt;h3&gt;
Code Modes (for VSCode)&lt;/h3&gt;
  &lt;p&gt;
    Change your file tree based on what mode you are in
    &lt;br&gt;
    
    &lt;a href="https://raw.githubusercontent.com/SiddharthShyniben/code-modes/main/#documentation"&gt;&lt;strong&gt;Explore the docs »&lt;/strong&gt;&lt;/a&gt;
    &lt;br&gt;
    &lt;br&gt;
    
    
    
    &lt;a href="https://github.com/SiddharthShyniben/code-modes/issues/new?assignees=SiddharthShyniben&amp;amp;labels=bug&amp;amp;template=bug_report.md&amp;amp;title=%5BBug%5D%3A+Describe+your+bug"&gt;Report Bug&lt;/a&gt;
    ·
    &lt;a href="https://github.com/SiddharthShyniben/code-modes/issues/new?assignees=SiddharthShyniben&amp;amp;labels=enhancement&amp;amp;template=feature_request.md&amp;amp;title=%5BFeature%5D%3A+Describe+your+feature"&gt;Request Feature&lt;/a&gt;
  &lt;/p&gt;



  &lt;h2&gt;
Table of Contents&lt;/h2&gt;
  &lt;ol&gt;
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/SiddharthShyniben/code-modes/main/#about-the-project"&gt;About The Project&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;
      &lt;a href="https://raw.githubusercontent.com/SiddharthShyniben/code-modes/main/#getting-started"&gt;Getting Started&lt;/a&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/SiddharthShyniben/code-modes/main/#prerequisites"&gt;Prerequisites&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/SiddharthShyniben/code-modes/main/#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/SiddharthShyniben/code-modes/main/#usage"&gt;Usage&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/SiddharthShyniben/code-modes/main/#roadmap"&gt;Roadmap&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/SiddharthShyniben/code-modes/main/#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/SiddharthShyniben/code-modes/main/#license"&gt;License&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/SiddharthShyniben/code-modes/main/#contact"&gt;Contact&lt;/a&gt;&lt;/li&gt;
  &lt;/ol&gt;


&lt;h2&gt;
About The Project&lt;/h2&gt;

&lt;p&gt;Ever found yourself going to the settings to show/hide folders/files again and again depending on whether you are Git debugger man or Configuration man? This extension does exactly that, hiding/showing folders/files depending on what you are doing.&lt;/p&gt;

&lt;h2&gt;
Getting Started&lt;/h2&gt;
&lt;p&gt;To install the extension follow these simple steps.&lt;/p&gt;
&lt;h3&gt;
Prerequisites&lt;/h3&gt;
&lt;p&gt;You need &lt;a href="https://code.visualstudio.com/" rel="nofollow"&gt;VSCode&lt;/a&gt; installed.&lt;/p&gt;
&lt;h3&gt;
Installation&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Open the &lt;strong&gt;extension&lt;/strong&gt; sidebar panel in VSCode&lt;/li&gt;
&lt;li&gt;Search for &lt;code&gt;code-modes&lt;/code&gt;. (Be sure to find the right one!)&lt;/li&gt;
&lt;li&gt;Click install to install it.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;OR&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Clone this repo&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;cd&lt;/code&gt; (&lt;a href="https://github.com/SiddharthShyniben/fcd"&gt;&lt;code&gt;fcd&lt;/code&gt;&lt;/a&gt;?) into it&lt;/li&gt;
&lt;li&gt;run &lt;code&gt;code --install-extension code-modes-1.0.0.vsix&lt;/code&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
Usage&lt;/h2&gt;
&lt;p&gt;This extension exposes a command and a status bar item&lt;/p&gt;
&lt;p&gt;Use the command &lt;code&gt;Code Modes: Change mode&lt;/code&gt;…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/SiddharthShyniben/code-modes"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;Basically, there are a bunch of modes, which you can choose. When you are in a certain mode, certain files get excluded from the file tree. &lt;/p&gt;

&lt;p&gt;For now, the extension is very basic (I made it in 1 day and I had the most amazing feeling when it worked bug-free) and there is no way to add custom modes, etc. &lt;/p&gt;

&lt;p&gt;If you have any suggestions for any modes, feel free to comment!&lt;/p&gt;

</description>
      <category>vscode</category>
      <category>showdev</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Junior developer !== super unskilled wannabe-developer noob</title>
      <author>Lea Rosema (she/her)</author>
      <pubDate>Wed, 05 May 2021 08:12:05 +0000</pubDate>
      <link>https://dev.to/terabaud/junior-developer-super-unskilled-wannabe-developer-noob-3b5h</link>
      <guid>https://dev.to/terabaud/junior-developer-super-unskilled-wannabe-developer-noob-3b5h</guid>
      <description>&lt;p&gt;Some teams have a certain bias about junior developers because they think they are all super unskilled wannabe-developer noobs. &lt;/p&gt;

&lt;p&gt;Yeah we all know these memes and jokes about junior vs senior developers and this can be funny up to a certain point. But these jokes and memes actually get toxic when teams refuse to get juniors on board. &lt;/p&gt;

&lt;p&gt;Juniors need the opportunity to show and grow their skills. &lt;/p&gt;

&lt;p&gt;There might also even be a situation a junior has a more advanced expertise in certain fields, in such a way that seniors could even learn from the junior. If your team  categorically denies to have juniors in the team, your team might miss innovation and is maybe less diverse.&lt;/p&gt;

&lt;p&gt;Also, some juniors have multiple years of experience but they are denied a promotion and the reason for getting denied a promotion can often be very subjective.&lt;/p&gt;

&lt;p&gt;So, please look at the person's skillset, not at their level when adding new team members to your team. Get more juniors into your team :)&lt;/p&gt;

</description>
    </item>
    <item>
      <title>How to be good at Code Reviews</title>
      <author>Pavel Polívka</author>
      <pubDate>Wed, 05 May 2021 07:27:37 +0000</pubDate>
      <link>https://dev.to/pavel_polivka/how-to-be-good-at-code-reviews-2lpl</link>
      <guid>https://dev.to/pavel_polivka/how-to-be-good-at-code-reviews-2lpl</guid>
      <description>&lt;p&gt;In my time as a developer, I have given hundreds of code reviews. It's something I learned to enjoy very much as it gives me others' perspectives on our codebase. Most days I learn something new from it. In this article, I want to go over few tips on how to be good at them and especially how to enjoy them. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#good-pipeline"&gt;
  &lt;/a&gt;
  Good pipeline
&lt;/h2&gt;

&lt;p&gt;Most teams have some kind of code-style rules and recommendations on how to uniform their codebase. Whatever you do, do not force code reviewers to check whenever the pull request complies with those rules. There are tools to do that look at eslint, SonarQube. These tools should be run as part of your PR pipeline.&lt;/p&gt;

&lt;p&gt;SonarQube is one of those tools that will improve code reviews for everyone in your team. It can find style issues but can do so much more. With their code analysis, they can find the most common mistakes you can do in your code. You never closed your resource? Sonar will let you know. Personally, I never do code review before Sonar finished its job. &lt;/p&gt;

&lt;p&gt;You need to have a concrete process that will run every time somebody creates a PR or pushes new changes in there. Steps can look something like this.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Compile the code&lt;/li&gt;
&lt;li&gt;Run the tests&lt;/li&gt;
&lt;li&gt;Run linting&lt;/li&gt;
&lt;li&gt;Run SonarQube&lt;/li&gt;
&lt;li&gt;Do the manual review process&lt;/li&gt;
&lt;li&gt;Merge to the main codebase&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#flyover"&gt;
  &lt;/a&gt;
  Flyover
&lt;/h2&gt;

&lt;p&gt;Like first thing, in my review, I will do a quick overview of all the changed files. This I usually do inside the pull request UI. I am focusing on few things during this stage.&lt;/p&gt;

&lt;p&gt;First is the code readability. How is the reading experience? Is it apparent what is being done? Good code should be able to convey its purpose at first glance. Then I am trying to figure out if this change is what is required by the corresponding change request. I will read through the ticket and try to match all requirements there in the pull request. &lt;/p&gt;

&lt;p&gt;During this stage, I do not dive deep into the implementation details. I identify those for later stages. &lt;/p&gt;

&lt;p&gt;Possible points conveyed at this stage:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;change is not very readable&lt;/li&gt;
&lt;li&gt;change does not cover the requirements, or change request ticket was not changed as requirements changed&lt;/li&gt;
&lt;li&gt;missing tests&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#do-deep"&gt;
  &lt;/a&gt;
  Do deep
&lt;/h2&gt;

&lt;p&gt;After the brief code flyover, I have a list of changed files I need to go deep into. I usually do this in IDE so that I can see connections between files better, but for most changes, it's ok to do it in the web UI of the pull request. &lt;/p&gt;

&lt;p&gt;I start by asking the question of how would I solve the problem and go from there. Is there a piece of code in our codebase that does something similar (or the same)? Is there a library (that we currently use) that can be used for this? If there is a library that we do not use currently is it worth adding to solve this issue? &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#test-review"&gt;
  &lt;/a&gt;
  Test review
&lt;/h2&gt;

&lt;p&gt;Do not forget to review the tests. Are all cases valid? Does those tests have the possibility to find something? Are assertions readable? Are tests even present? &lt;/p&gt;

&lt;p&gt;Do not be afraid to fight back to add more tests if you as a reviewer feel like there is a possibility to add them to improve the codebase. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#be-nice-and-educate"&gt;
  &lt;/a&gt;
  Be nice and educate
&lt;/h2&gt;

&lt;p&gt;Whatever you do, do not be arrogant, snarky, and sound like a know-it-all. If the proposed solution is valid, but you would do it differently you may say so but also approve the request. You may leave education comments, but too much can of those can be harmful. Consider what feels important. Do not argue about little things, people are different and have different opinions. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#approval"&gt;
  &lt;/a&gt;
  Approval
&lt;/h2&gt;

&lt;p&gt;Be quick on approval, not perfect is ok. &lt;/p&gt;

&lt;p&gt;This is the golden rule you should go by.&lt;/p&gt;




&lt;p&gt;For more tips like this, you can follow me on &lt;a href="https://twitter.com/pavel_polivka"&gt;Twitter&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>codereview</category>
      <category>productivity</category>
      <category>javascript</category>
      <category>java</category>
    </item>
    <item>
      <title>Age Calculator | Javascript Project With Source Code</title>
      <author>Innocent Coder</author>
      <pubDate>Wed, 05 May 2021 07:22:26 +0000</pubDate>
      <link>https://dev.to/innocentcoder/age-calculator-javascript-project-with-source-code-52a0</link>
      <guid>https://dev.to/innocentcoder/age-calculator-javascript-project-with-source-code-52a0</guid>
      <description>&lt;p&gt;JavaScript offers some built-in date and time functions, which helps to calculate the age from the date (Date of Birth). Using these JavaScript methods, you can easily find the age of anyone. For this, we require a date input from the user and the current system date.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/IEuYA09-fGo"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;➼ Download Files and Images Link: &lt;a href="https://www.websitemakers.xyz/2021/05/age-calculator-javascript-project-with.html"&gt;https://www.websitemakers.xyz/2021/05/age-calculator-javascript-project-with.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;HTML Code&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div class="container"&amp;gt;
        &amp;lt;div class="inputs-wrapper"&amp;gt;
            &amp;lt;input type="date" id="date-input"&amp;gt;
            &amp;lt;button onclick="ageCalculate()"&amp;gt;Calculate&amp;lt;/button&amp;gt;
        &amp;lt;/div&amp;gt;
        &amp;lt;div class="outputs-wrapper"&amp;gt;
            &amp;lt;div&amp;gt;
                &amp;lt;span id="years"&amp;gt;
                    -
                &amp;lt;/span&amp;gt;
                &amp;lt;p&amp;gt;
                    Years
                &amp;lt;/p&amp;gt;
            &amp;lt;/div&amp;gt;
            &amp;lt;div&amp;gt;
                &amp;lt;span id="months"&amp;gt;
                    -
                &amp;lt;/span&amp;gt;
                &amp;lt;p&amp;gt;
                    Months
                &amp;lt;/p&amp;gt;
            &amp;lt;/div&amp;gt;
            &amp;lt;div&amp;gt;
                &amp;lt;span id="days"&amp;gt;
                    -
                &amp;lt;/span&amp;gt;
                &amp;lt;p&amp;gt;
                    Days
                &amp;lt;/p&amp;gt;
            &amp;lt;/div&amp;gt;
        &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;CSS Code&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;*,
*:before,
*:after{
    padding: 0;
    margin: 0;
    box-sizing: border-box;
}
body{
    background-color: #ff6666;
}
.container{
    width: 40%;
    min-width: 450px;
    position: absolute;
    transform: translate(-50%,-50%);
    left: 50%;
    top: 50%;
    padding: 50px 30px;
}
.container *{
    font-family: "Poppins",sans-serif;
    border: none;
    outline: none;
}
.inputs-wrapper{
    background-color: #080808;
    padding: 30px 25px;
    border-radius: 8px;
    box-shadow: 0 15px 20px rgba(0,0,0,0.3);
    margin-bottom: 50px;
}
input,
button{
    height: 50px;
    background-color: #ffffff;
    color: #080808;
    font-weight: 500;
    border-radius: 5px;
}
input{
    width: 60%;
    padding: 0 20px;
    font-size: 14px;
}
button{
    width: 30%;
    float: right;
}
.outputs-wrapper{
    width: 100%;
    display: flex;
    justify-content: space-between;
}
.outputs-wrapper div{
    height: 100px;
    width: 100px;
    background-color: #080808;
    border-radius: 5px;
    color: #ffffff;
    display: grid;
    place-items: center;
    padding: 20px 0;
    box-shadow: 0 15px 20px rgba(0,0,0,0.3);

}
span{
    font-size: 30px;
    font-weight: 500;
}
p{
    font-size: 14px;
    color: #707070;
    font-weight: 400;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Javascript&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const months = [31,28,31,30,31,30,31,31,30,31,30,31];

function ageCalculate(){
    let today = new Date();
    let inputDate = new Date(document.getElementById("date-input").value);
    let birthMonth,birthDate,birthYear;
    let birthDetails = {
        date:inputDate.getDate(),
        month:inputDate.getMonth()+1,
        year:inputDate.getFullYear()
    }
    let currentYear = today.getFullYear();
    let currentMonth = today.getMonth()+1;
    let currentDate = today.getDate();

    leapChecker(currentYear);

    if(
        birthDetails.year &amp;gt; currentYear ||
        ( birthDetails.month &amp;gt; currentMonth &amp;amp;&amp;amp; birthDetails.year == currentYear) || 
        (birthDetails.date &amp;gt; currentDate &amp;amp;&amp;amp; birthDetails.month == currentMonth &amp;amp;&amp;amp; birthDetails.year == currentYear)
    ){
        alert("Not Born Yet");
        displayResult("-","-","-");
        return;
    }

    birthYear = currentYear - birthDetails.year;

    if(currentMonth &amp;gt;= birthDetails.month){
        birthMonth = currentMonth - birthDetails.month;
    }
    else{
        birthYear--;
        birthMonth = 12 + currentMonth - birthDetails.month;
    }

    if(currentDate &amp;gt;= birthDetails.date){
        birthDate = currentDate - birthDetails.date;
    }
    else{
        birthMonth--;
        let days = months[currentMonth - 2];
        birthDate = days + currentDate - birthDetails.date;
        if(birthMonth &amp;lt; 0){
            birthMonth = 11;
            birthYear--;
        }
    }
    displayResult(birthDate,birthMonth,birthYear);
}

function displayResult(bDate,bMonth,bYear){
    document.getElementById("years").textContent = bYear;
    document.getElementById("months").textContent = bMonth;
    document.getElementById("days").textContent = bDate;
}

function leapChecker(year){
    if(year % 4 == 0 || (year % 100 == 0 &amp;amp;&amp;amp; year % 400 == 0)){
        months[1] = 29;
    }
    else{
        months[1] = 28;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Note:-&lt;/strong&gt; visit my youtube channel for frontend tutorials&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;subscribe to my youtube channel :-&lt;/strong&gt; &lt;a href="https://www.youtube.com/channel/UCR64vQptythbJ1SmI-ub0Rg"&gt;https://www.youtube.com/channel/UCR64vQptythbJ1SmI-ub0Rg&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Resent post :-&lt;/strong&gt; &lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/innocentcoder" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RGJ5NE5F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--ICZsIDfS--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/620705/764eb964-ecd2-4875-90c2-142dfc2f639c.jpg" alt="innocentcoder image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/innocentcoder/make-a-modern-registration-form-using-html-and-css-1ag4" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Make A Modern Registration Form Using HTML And CSS&lt;/h2&gt;
      &lt;h3&gt;Innocent Coder ・ Apr 30 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



</description>
      <category>javascript</category>
      <category>html</category>
      <category>css</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Any Taylor swift fans here?</title>
      <author>Siddharth Chaudhary</author>
      <pubDate>Wed, 05 May 2021 07:14:02 +0000</pubDate>
      <link>https://dev.to/sidchaudhary04/any-taylor-swift-fans-here-4ndh</link>
      <guid>https://dev.to/sidchaudhary04/any-taylor-swift-fans-here-4ndh</guid>
      <description>&lt;p&gt;Just asking if any devs are Swifties.&lt;/p&gt;

&lt;p&gt;Reply with your favourite song!&lt;/p&gt;

</description>
      <category>taylorswift</category>
      <category>askdev</category>
    </item>
    <item>
      <title>Introduction to Amazon S3</title>
      <author>Adit Modi</author>
      <pubDate>Wed, 05 May 2021 07:11:45 +0000</pubDate>
      <link>https://dev.to/aws-builders/introduction-to-amazon-s3-5f1c</link>
      <guid>https://dev.to/aws-builders/introduction-to-amazon-s3-5f1c</guid>
      <description>&lt;p&gt;Amazon Simple Storage Service, also known as Amazon S3 is an online storage facility. It is cheap, fast and easy to setup. And since it’s a service provided by e-commerce giant Amazon, you can be rest-assured whatever you stored at S3 is secured.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KIb_GjEm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d1kxbvxh0sdaej18ie5k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KIb_GjEm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d1kxbvxh0sdaej18ie5k.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;My Background: I am Cloud , DevOps &amp;amp; Big Data Evangelist | 4x AWS Certified | 3x OCI Certified | 3x Azure Certified | AWS Community Builder | AWS Educate Cloud Ambassador . &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Amazon S3&lt;/strong&gt; is one of the core services and among the pillars of the AWS cloud infrastructure. The S3 stands for &lt;strong&gt;“Simple Storage Service”&lt;/strong&gt; and is among the three foundational services that Amazon started with back in 2006. Almost all services in the AWS cloud infrastructure use this service in one way or the other. In simple terms, Amazon S3 is an object store just like a regular file system that you have on your computer but is &lt;strong&gt;“infinitely scaling”&lt;/strong&gt; or as AWS advertises it. There’s no limit to the amount of data you can store on s3.&lt;br&gt;
The key features of s3 service are it's &lt;strong&gt;infinite, highly scalable, high availability, high durability, manageable, and secure.&lt;/strong&gt; Even with the option of infinite storage, in terms of cost, it is one of the most costly friendly services and you only pay for what you use. It can be used to store all kinds of image, text, and multi-media data.&lt;br&gt;
The article will cover the following sections:&lt;br&gt;
Amazon S3 overview.&lt;br&gt;
S3 Buckets and Objects overview.&lt;br&gt;
S3 Advance features.&lt;br&gt;
S3 popular use cases.&lt;br&gt;
If you’re new to AWS and cloud check out my article summarizing what is cloud and AWS.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#amazon-s3-overview"&gt;
  &lt;/a&gt;
  Amazon S3 overview
&lt;/h2&gt;

&lt;p&gt;Amazon S3 is designed to allow users to build highly scalable applications with infinite but inexpensive storage. S3 being a fast, inexpensive, and reliable option allows it to be used as a backbone for a large number of cloud-based applications and is also an integral service in the AWS cloud infrastructure with integration options available for most of the services. Users can store or retrieve any amount of data as per their needs at any time of day from around the globe.&lt;/p&gt;

&lt;p&gt;In S3, everything is stored like an object which is mainly used for storing text-based data like server logs or multi-media data like images, videos, or mp3 files. The data is stored with &lt;strong&gt;99.99% availability&lt;/strong&gt; which sums to just 53 mins of downtime in a year and 99.999999999% durability which means that a single object is lost every 10,000 years. The service can be easily accessed via the management console providing the users with a well built and easy to use interface to easily manage all the different features and options. In addition to the console, the AWS CLI and SDKs for S3 are also available for more programmatic access.&lt;/p&gt;

&lt;p&gt;Some more advanced features that S3 offers are &lt;strong&gt;object encryption for data security, versioning and replication for backup and durability&lt;/strong&gt;, storage classes for cost optimization based on object access patterns, auditing, monitoring, and compliance features, permissions, and access management at the user, bucket, and even object level for restricted access, query in-place support for other AWS services to allow direct query on the objects.&lt;br&gt;
We’ll cover most of the details of these features in the coming sections.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#s3-buckets-and-objects-overview"&gt;
  &lt;/a&gt;
  S3 Buckets and Objects overview
&lt;/h2&gt;

&lt;p&gt;With a general overview of the S3 service, we can dig into how the objects are structured in the S3 service. S3 follows the convention of buckets and objects.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#buckets"&gt;
  &lt;/a&gt;
  Buckets:
&lt;/h2&gt;

&lt;p&gt;A bucket in S3 is just like a directory that contains an unlimited number of objects(files). Each account can have 100 buckets(soft limit and can be increased by request to AWS) by default but there's no cap on the number of objects in one bucket but each object can only be 5TB in size.&lt;/p&gt;

&lt;p&gt;S3 is a regional service and buckets are saved at the regional level. Each bucket has a globally unique name (bucket names follow a convention)meaning that only one bucket can have a given name at a time in the entire AWS infrastructure unless deleted by the bucket owner. Buckets are created in a specific region that we choose so choosing geographically closer regions can help minimize latency.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#objects"&gt;
  &lt;/a&gt;
  Objects:
&lt;/h2&gt;

&lt;p&gt;An object in S3 is just a file you store. Ojects consists of data and metadata. Each object has a unique key that consists of a prefix and the object name.&lt;br&gt;
E.g. s3://s3bucket/some_folder/s3_object.txt&lt;/p&gt;

&lt;p&gt;The bucket name, key, version ID, and the object name itself all together uniquely identify the object. Although I mentioned earlier that buckets are like directories and even the UI on the management console will show a directory structure, there’s no concept of directories within buckets nor do any directories exists like in a Linux file system. &lt;/p&gt;

&lt;p&gt;The directories in buckets are only there for data organization purposes. S3 works entirely with keys. S3 objects can be 5TB in size but unlimited in number. Objects also have additional attributes like metadata, version, and tags.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#objects-consistency-model"&gt;
  &lt;/a&gt;
  Objects Consistency Model
&lt;/h2&gt;

&lt;p&gt;The S3 service due to its high availability and durability provides atomic updates to objects meaning the objects are never partially updated. The consistency model for S3 is based on two approaches:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Read after write consistency for new objects&lt;/strong&gt; — means that if we request new objects right after creation, S3 might return 404 but eventually the objects become available.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Eventual Consistency for objects overwrites&lt;/strong&gt; — If an object is retrieved right after the update, S3 might return the old copy or the new one but never a partially updated object.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Buckets, objects, and keys&lt;/strong&gt; together make up the entire working structure of the S3 service. The advanced features for buckets and objects are discussed in the next section.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#s3-advance-features"&gt;
  &lt;/a&gt;
  S3 Advance features.
&lt;/h2&gt;

&lt;p&gt;S3 although being a very foundational service offers many advanced features that are listed as follows:&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#s3-storage-classes-and-life-cycle-management"&gt;
  &lt;/a&gt;
  S3 Storage Classes and Life Cycle Management
&lt;/h4&gt;

&lt;p&gt;Not all objects in a bucket have the same access patterns some are accessed more frequently than the others. Considering this, the S3 service allows objects to be transitioned into different storage classes depending upon their access patterns to help reduce the cost of storage. This can be either done manually via the management console or the SDKs or we can set life cycle configuration on buckets to transition objects in a different storage class.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#storage-classes"&gt;
  &lt;/a&gt;
  Storage Classes
&lt;/h2&gt;

&lt;p&gt;S3 offers a range of different storage classes that can be used depending upon the S3 popular use cases. object's access patterns.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;S3 Standard&lt;/strong&gt; — This is the default storage class for all objects. This storage class is suitable for frequently accessed objects (such as images)and for performance-sensitive use cases.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;S3 Reduced Redundancy Storage(RRS)&lt;/strong&gt;— This storage class is also for the frequently accessed objects but more suitable for non-critical data that are easily reproducible if lost. AWS recommends not using RRS.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;S3 Intelligent-Tiering&lt;/strong&gt; — This storage class is suitable for use cases when want to automatically optimize the storage costs. Depending upon the changes in object access patterns, the S3 Intelligent-Tiering moves data automatically to a frequent access tier or low-cost infrequent access tier. A small monthly automation and monitoring fee is associated with each object for this storage class. &lt;br&gt;
No additional tiering fee or object retrieval fees are associated with this storage class. Ideal for use cases having long-lived data with unknown and unpredictable access patterns.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;S3 Standard-IA and S3 One Zone-IA&lt;/strong&gt; — These storage classes are suitable for long-lived infrequently accessed objects such as backup files. The objects are available at millisecond access times but an object retrival fee is associated with these storage classes. &lt;/p&gt;

&lt;p&gt;The difference between S3 Standard-IA and S3 One Zone-IA is that the former stores data across multiple availability zones redundantly while the latter stores data in only one AZ. &lt;/p&gt;

&lt;p&gt;Hence One Zone-IA is less expensive but less resilient and available and prone to the physical loss of data compared to Standard-IA.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;S3 Glacier and S3 Glacier Deep Archive&lt;/strong&gt; — These storage classes are suitable for archiving data and have the least cost from all of the above storage classes. Data in Glacier and Deep Glacier Archive is not readily available and data retrival can take from 1 minute to 12 hours in the case of Glacier and about 12 hours in the case of Deep Glacier Archive. These storage classes are suitable for data that needs to rarely need to be accessed.&lt;br&gt;
A detailed analysis of S3 storage classes by AWS is given below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZlSKg11c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9vttt9wh9i1u5i3nwuuo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZlSKg11c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9vttt9wh9i1u5i3nwuuo.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#s3-storage-classes-comparison"&gt;
  &lt;/a&gt;
  S3 Storage Classes Comparison
&lt;/h2&gt;

&lt;p&gt;For more details on S3 storage classes visit the S3 documentation.&lt;/p&gt;

&lt;p&gt;Life Cycle Management&lt;/p&gt;

&lt;p&gt;S3 provides transitioning of objects into different storage classes as per the need to reduce costs. We set the life cycle configuration(a set of rules) that is applied to the objects. S3 performs the actions as in the configurations. Two types of actions are performed:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Transition actions&lt;/strong&gt; — These actions transition objects from one storage class to the other after a specified time interval e.g. after 7 days or 15 days etc. Additional costs are associated with life cycle transition requests.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Expiration actions&lt;/strong&gt; — These actions delete the objects after the specified interval.&lt;/p&gt;

&lt;p&gt;For the configuration of life cycle management, we can either set it on a bucket via the management console or we can provide an excel document having predefined actions(stored as an S3 sub-resource) to be performed on objects via API operations.&lt;/p&gt;

&lt;p&gt;For more details on S3 life cycle management visit the &lt;a href="https://www.google.com/aclk?sa=L&amp;amp;ai=DChcSEwjtnuS73unvAhVHDCsKHSmEAEYYABAAGgJzZg&amp;amp;ae=2&amp;amp;sig=AOD64_2s39eC24U7dzTsQdskRQR6LMgmUQ&amp;amp;q&amp;amp;adurl&amp;amp;ved=2ahUKEwj-vNy73unvAhWQ7HMBHZ3IAA4Q0Qx6BAgDEAE"&gt;S3 documentation.&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#s3-object-versioning"&gt;
  &lt;/a&gt;
  S3 Object Versioning
&lt;/h2&gt;

&lt;p&gt;Another cool feature the S3 service provides is &lt;strong&gt;object versioning&lt;/strong&gt;. Versions is enabled at bucket level and buckets with versioning enabled(disabled by default) have a version ID( auto-generated and noneditable) attached with each S3 object in that bucket. Objects present before versioning is enabled are assigned a null version ID while new objects each have a unique version ID. &lt;strong&gt;S3 versioning&lt;/strong&gt; allows us to store multiple versions of an object and prevents the accidental deletions and overwrites of an object. Can also be used for archival purposes. The following images show the behavior of versioning for overwrites and delete:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6XBCYEs6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/srbafmxl0hj0zb9en5rz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6XBCYEs6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/srbafmxl0hj0zb9en5rz.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The original version always remains in the bucket while a new copy of the same object is placed with a new and unique version ID that becomes the current version. &lt;/p&gt;

&lt;p&gt;For deletes, a delete marker is placed on the object deleted but in actual it is never deleted and S3 returns a 404 error if the deleted object is retrieved. &lt;/p&gt;

&lt;p&gt;For permanently deleting the object, version ID has to be passed along the request which deletes the current version and sets the current version to the next most recent version.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#s3-replication"&gt;
  &lt;/a&gt;
  S3 Replication
&lt;/h2&gt;

&lt;p&gt;S3 replication allows objects of one bucket to be copied to another bucket with the same or a different AWS account and within the same or a different region. We configure object replication by providing a replication configuration to the source bucket consists of at least the destination bucket and IAM role for S3 to copy the objects.&lt;/p&gt;

&lt;p&gt;For &lt;strong&gt;objects replication&lt;/strong&gt;, we have &lt;strong&gt;cross-region object replication (CRR)&lt;/strong&gt; and same &lt;strong&gt;region object replication (SRR)&lt;/strong&gt;. Other than data redundancy purposes we can use S3 replication for various use cases such as:&lt;/p&gt;

&lt;p&gt;Replication of objects with different storage classes.&lt;br&gt;
Object replication with different ownership.&lt;/p&gt;

&lt;p&gt;S3 Replication Time Control (S3 RTC) to copy 99.99% objects within the same or a different region in 15mins or less.&lt;/p&gt;

&lt;p&gt;Some vital considerations we must consider are: object versioning must be enabled for source and destination buckets for replication. &lt;br&gt;
All objects present before the replication configuration is set for the bucket are not copied and we have to contact AWS support for their replication.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#s3-security-and-encryption"&gt;
  &lt;/a&gt;
  S3 Security and Encryption
&lt;/h2&gt;

&lt;h4&gt;
  &lt;a href="#security"&gt;
  &lt;/a&gt;
  Security
&lt;/h4&gt;

&lt;p&gt;S3 durability and reliability are one of its most attractive features providing 99.999999999% (eleven 9s)durability and 99.99% availability. Along with a highly secure and fault-tolerant infrastructure provided by AWS data in S3 is replicated across multiple availability zones to sustain the concurrent loss of data in two AZs.&lt;/p&gt;

&lt;p&gt;S3 also provides user-based and resource-based security options to restrict access to specific users, buckets, and even objects.&lt;br&gt;
user-based restriction: We can set IAM policies to define specific actions a user can perform on S3.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;resource-based restriction&lt;/strong&gt;: Resource-based actions can either be on buckets or objects within buckets for even finer control. These are done via &lt;strong&gt;bucket policies&lt;/strong&gt; and &lt;strong&gt;access control lists (ACLs)&lt;/strong&gt; respectively. By default, S3 buckets are private and we specifically allow pubic access on the bucket and objects via the bucket policies and ACLs respectively.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#encryption"&gt;
  &lt;/a&gt;
  Encryption
&lt;/h2&gt;

&lt;p&gt;Data in S3 can be made more secure using the encryption options available in S3. Encryption can be either:&lt;br&gt;
&lt;strong&gt;Server-Side&lt;/strong&gt; — Unencrypted data is uploaded on S3 and encrypted first before physically stored by S3 and decrypted on access. The keys used for encryption are managed by the S3 service. S3 also provides options for the client to use its own encryption keys in this case as well.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--a0B0NNw---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6kkwla2bd38pddhv9s95.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a0B0NNw---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6kkwla2bd38pddhv9s95.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Client-Side&lt;/strong&gt; — Data is encrypted at clients' end and uploaded to S3 in encrypted form. The client is responsible for key management in this case.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#s3-popular-use-cases"&gt;
  &lt;/a&gt;
  S3 popular use cases
&lt;/h2&gt;

&lt;p&gt;Some really popular use case which AWS S3 can be used for can be:&lt;br&gt;
&lt;strong&gt;Data backups&lt;/strong&gt;, &lt;strong&gt;data storage&lt;/strong&gt;, and &lt;strong&gt;hybrid cloud storage&lt;/strong&gt;.&lt;br&gt;
Media such as images, music and videos, application hosting, and Static Website Hosting.&lt;br&gt;
&lt;strong&gt;Data archiving&lt;/strong&gt;.&lt;br&gt;
&lt;strong&gt;Data Lakes building and data analytics on data lakes.&lt;br&gt;
Disaster recovery.&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;The article summarizes the working model of S3 and the various features offered by the service. S3 being a very foundational service can be used for a number of different applications. The features provided in S3 are very lucrative and the cost at which an infinite amount of data can be stored with high durability and accessibility makes it one of the most go-to services for any architecture.&lt;/p&gt;

&lt;p&gt;I would love to hear your thoughts about amazon s3. I hope this guide was helpful in understanding more about amazon s3. feel free to contact me on &lt;a href="https://www.linkedin.com/in/adit-modi-2a4362191/"&gt;LinkedIn.&lt;/a&gt;&lt;br&gt;
You can view my badges &lt;a href="https://www.youracclaim.com/users/adit-modi/badges"&gt;here.&lt;/a&gt;&lt;br&gt;
If you are interested in learning more about AWS then follow me on &lt;a href="https://github.com/AditModi"&gt;github.&lt;/a&gt;&lt;br&gt;
If you liked this content then do clap and share it . Thank You .&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>cloud</category>
      <category>career</category>
      <category>devops</category>
    </item>
    <item>
      <title>5 Persuasive reasons to join developer communities</title>
      <author>Fum</author>
      <pubDate>Wed, 05 May 2021 06:59:32 +0000</pubDate>
      <link>https://dev.to/inspirezone/5-persuasive-reasons-to-join-developer-communities-4jah</link>
      <guid>https://dev.to/inspirezone/5-persuasive-reasons-to-join-developer-communities-4jah</guid>
      <description>&lt;p&gt;If you’re a developer looking to grow your skills, being an active member of a community is one of the best ways to go about it. Join a developer community, connect with others and share your knowledge and experiences with developers on a similar journey path as you!&lt;/p&gt;

&lt;p&gt;Developer communities provide several advantages that will help you become a better programmer. In this article we’ll cover 5 reasons why being part of a community matters.&lt;/p&gt;

&lt;p&gt;If you're reading this post as a guest, hopefully you'll be convinced as to why you should consider joining the DEV.to community! If you're already a member of DEV.to, this will highlight the benefits of actively participating and also why you should consider joining other communities 😁  &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#1-for-support-and-motivation"&gt;
  &lt;/a&gt;
  1. For support and motivation
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sJlBpgn4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lp8699o0ewgs9p0eyif0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sJlBpgn4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lp8699o0ewgs9p0eyif0.png" alt="support-and-motivation"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Most developer communities act as a place for you to connect with others you can relate to. Through the environment provided by such communities you can connect with developers going through similar challenges as you.&lt;/p&gt;

&lt;p&gt;As a result, you’re more likely to stay motivated and stay on track with your current development goals.&lt;/p&gt;

&lt;p&gt;The journey of a developer can be tough, especially if you’re on the journey solo. Whether as a newbie, switching to a different field or by growing your existing skills, having a support network goes a long way in making you feel that you’re not on the journey alone.&lt;/p&gt;

&lt;p&gt;For the newbies out there, a message that you should not shy away from developer communities!&lt;/p&gt;

&lt;p&gt;The journey of learning to code is likely to be overwhelming at some stage. This is a key reason why you should find a supportive network from the beginning so you don’t feel isolated in your struggles.&lt;/p&gt;

&lt;p&gt;Join a developer community that provides support for newbies and share your struggles. It’s likely we’ve all gone through similar challenges and hearing from others can act as encouragement.&lt;/p&gt;

&lt;p&gt;Share new things you’ve learned, programming memes or whatever! It’s all about finding people you can share things with that you know are going through similar experiences as you.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#2-knowledge-sharing"&gt;
  &lt;/a&gt;
  2. Knowledge sharing
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--g53hX1Jj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/97h31c37nzbishhoaqsh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g53hX1Jj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/97h31c37nzbishhoaqsh.png" alt="share-knowledge"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Developer communities encourage sharing of what you know with others. Through this knowledge exchange, we can all learn from each other and grow our skills. &lt;/p&gt;

&lt;p&gt;Communities are a great way to share developer tips, tools, resources, coding snippets, tutorials or to have in-depth discussions on programming languages and all things dev related.&lt;/p&gt;

&lt;p&gt;Being part of a developer community is like having an extended network of colleagues where you can help each other out. Use these communities to learn from people who are more experienced than you in your field.&lt;/p&gt;

&lt;p&gt;This is another reason why I believe it’s essential for newbies to join a developer community.&lt;/p&gt;

&lt;p&gt;You’ll gain a lot by simply participating and learning from others in the field of software development you’re interested in.&lt;/p&gt;

&lt;p&gt;You can also open discussions with others to gain more insight into where their experiences have led them and learn from these experiences.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#3-networking-opportunities"&gt;
  &lt;/a&gt;
  3. Networking opportunities
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eNpfES8H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8jvvn38otg1ur254bfiw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eNpfES8H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8jvvn38otg1ur254bfiw.png" alt="networking"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Being part of a developer community also opens up opportunities to form closer connections with developers in your field.&lt;/p&gt;

&lt;p&gt;Job opportunities may also arise and especially applies if you join a developer community that meets up locally in your area. In this case, as you meet with the same people at each meetup you'll eventually get to know them and their backgrounds. &lt;/p&gt;

&lt;p&gt;This also opens up chances to find mentors in your field or potentially meet developers with similar interests willing to collaborate with you on projects.&lt;/p&gt;

&lt;p&gt;As companies also tend to be involved in supporting developer communities, there's also the opportunity to network with them. This can in turn increase your chances of being considered for positions as companies can see you are active in a developer community.&lt;/p&gt;

&lt;p&gt;The networking possibilities that can arise simply by being active in communities and conversing with others on a similar journey path is another powerful reason why you should join a developer community.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#4-expand-your-areas-of-expertise"&gt;
  &lt;/a&gt;
  4. Expand your areas of expertise
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Q_PYjTfG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cvmhyac5ss70momqmu23.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q_PYjTfG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cvmhyac5ss70momqmu23.png" alt="expand-interests"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When you join a developer community you come across people with different backgrounds and expertise. As a result, you’re constantly being exposed to topics and discussions that may not be directly related to your field of interest.&lt;/p&gt;

&lt;p&gt;Just by being active in such communities you can pick up technical terms and knowledge relating to software development outside your direct area of expertise.&lt;/p&gt;

&lt;p&gt;This is advantageous in allowing you to become more aware of what’s going on in other areas and potentially increase your interest in those areas as you learn more about them.&lt;/p&gt;

&lt;p&gt;I personally found this the case when I joined the DEV.to, as I’ve come across all kinds of posts relating to fields I had no previous experience with.&lt;/p&gt;

&lt;p&gt;By reading posts on areas of software development I’m not familiar with I’ve become more aware of technologies, frameworks and even programming languages that I’m now exploring to help with some side projects.&lt;/p&gt;

&lt;p&gt;The more involved you get with a diverse range of developer communities, the more you’ll realise just how vast software development is and how much there is to learn!&lt;/p&gt;

&lt;p&gt;By choosing the right communities to be active on, you can expand your interest and knowledge in ways that can help you in the future, sometimes unexpectedly.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#5-it-will-challenge-you"&gt;
  &lt;/a&gt;
  5. It will challenge you
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AOur0B8W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lb9z1w1236boy9pvnr3u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AOur0B8W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lb9z1w1236boy9pvnr3u.png" alt="challenge-yourself"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This point depends on the type of community you join. The opportunity for challenges relates to certain developer communities that are focused on having you take part in a challenge or project.&lt;/p&gt;

&lt;p&gt;For example, &lt;a href="https://www.freecodecamp.org/"&gt;freeCodeCamp&lt;/a&gt; is great for newbies as you can learn the fundamentals of several programming languages by completing coding challenges. &lt;/p&gt;

&lt;p&gt;You can also join communities that focus on running hackathons and challenges to be completed within a time frame.&lt;/p&gt;

&lt;p&gt;An example of deadline-based developer challenges are &lt;a href="https://en.wikipedia.org/wiki/Game_jam"&gt;Game jams&lt;/a&gt;. In Game jams, developers work on a video game for submission to a competition either solo or part of a team.&lt;/p&gt;

&lt;p&gt;Usually, the Game jam sets a theme and rules the game should follow. The games are then submitted and sometimes ranked by other competitors. The winners may receive badges, prizes or simply bragging rights!&lt;/p&gt;

&lt;p&gt;Check out &lt;a href="https://itch.io/jams"&gt;itch.io&lt;/a&gt; which is a Game jam community hosting challenges all year round.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;Developer communities provide a supportive environment that encourages exchange of knowledge and experiences.&lt;/p&gt;

&lt;p&gt;Being part of a community is a great way to keep motivated in your goals and have discussions with others passionate about software development. &lt;/p&gt;

&lt;p&gt;Join a developer community and you may be surprised at just how much it will help you grow!&lt;/p&gt;

&lt;p&gt;Check out &lt;a href="https://www.freecodecamp.org/news/best-developer-communities-to-be-part-of-in-2020/"&gt;this list&lt;/a&gt; from freeCodeCamp to view other kinds of developer communities you can be a part of. &lt;/p&gt;

&lt;p&gt;I would like to know in the comments what developer communities you're a member of? (Apart from DEV!)&lt;/p&gt;




&lt;p&gt;I'm creating a developer community that is focused on encouraging active coding practice and reaching your goals through accountability with other devs in a close-knit community. If this sounds interesting to you read more about the inspirezone community 😃&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/funbeedev" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ls-S8Zoy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--6nTSlYfM--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/451342/745b9200-9a73-40ed-af7c-30e174b9a3c4.jpg" alt="funbeedev image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/inspirezone/a-developer-community-encouraging-active-coding-practice-4koh" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;A Developer Community Encouraging Active Coding Practice 🏁 &lt;/h2&gt;
      &lt;h3&gt;Fum ・ Apr 24 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#productivity&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#github&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


</description>
      <category>motivation</category>
      <category>career</category>
      <category>productivity</category>
      <category>community</category>
    </item>
    <item>
      <title>How to start with streamlit web framework.</title>
      <author>Rishabh Dwivedi</author>
      <pubDate>Wed, 05 May 2021 06:37:05 +0000</pubDate>
      <link>https://dev.to/rishabh062/how-to-start-with-streamlit-web-framework-5eij</link>
      <guid>https://dev.to/rishabh062/how-to-start-with-streamlit-web-framework-5eij</guid>
      <description>&lt;p&gt;Sometimes you make a &lt;em&gt;data science&lt;/em&gt; , &lt;em&gt;machine learning&lt;/em&gt; or &lt;em&gt;computer vision&lt;/em&gt; projects but suddenly you stuck with a thought that how to show it to the world, what type of clear technology I can use, so that everyone can see and understand your model.&lt;br&gt;
Then here comes the &lt;strong&gt;Streamlit&lt;/strong&gt; web framework. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What is streamlit?&lt;/strong&gt;&lt;br&gt;
&lt;em&gt;Streamlit&lt;/em&gt; is an open-source app framework for creating and deploying data science applications. &lt;em&gt;Streamlit&lt;/em&gt; helps data scientists and machine learning engineers to develop applications in a few hours.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Best resources to learn streamlit.&lt;/strong&gt;&lt;br&gt;
Often confused about resources, don't worry &lt;em&gt;streamlit forum&lt;/em&gt; has made it very easy for you.&lt;/p&gt;

&lt;p&gt;You can check their blogs, where they have arranged and covered everything you need to know about it.&lt;br&gt;
&lt;a href="https://docs.streamlit.io/en/stable/getting_started.html"&gt;Getting started&lt;/a&gt; with streamlit. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Create your first streamlit app.&lt;/strong&gt;&lt;br&gt;
1) Create new python file with &lt;strong&gt;first_app.py&lt;/strong&gt;&lt;br&gt;
2) Import libraries.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import streamlit as st
# To make things easier later, we're also importing numpy and pandas for
# working with sample data.
import numpy as np
import pandas as pd
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;3)Run your app&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;streamlit run first_app.py
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For more information visit their documentation &lt;a href="https://docs.streamlit.io/en/stable/getting_started.html"&gt;Doc&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What streamlit can do?&lt;/strong&gt;&lt;br&gt;
1)Streamlit supports several popular data charting libraries like Matplotlib, Altair, deck.gl, and more.&lt;/p&gt;

&lt;p&gt;2)With &lt;strong&gt;st.map()&lt;/strong&gt; you can display data points on a map, which is really useful.&lt;/p&gt;

&lt;p&gt;3)with &lt;strong&gt;st.sidebar()&lt;/strong&gt; you can move your widget into a sidebar.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Create a model using streamlit.(Uber pickups in NYC)&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://docs.streamlit.io/en/stable/tutorial/create_a_data_explorer_app.html"&gt;Uber pickup analysis&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#thats-a-complete-beginner-guide-for-getting-started-with-streamlit"&gt;
  &lt;/a&gt;
  That's a complete beginner guide for getting started with streamlit.
&lt;/h4&gt;

&lt;p&gt;Hope you like this post.&lt;br&gt;
&lt;strong&gt;Thank you&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Rishabh Dwivedi&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>streamlit</category>
      <category>machinelearning</category>
      <category>webframework</category>
      <category>computervision</category>
    </item>
    <item>
      <title>What's your startup success rate?</title>
      <author>Madza</author>
      <pubDate>Wed, 05 May 2021 05:52:40 +0000</pubDate>
      <link>https://dev.to/madza/what-s-your-startup-success-rate-cnl</link>
      <guid>https://dev.to/madza/what-s-your-startup-success-rate-cnl</guid>
      <description>&lt;p&gt;Startups are young companies founded to develop a unique product or service, bring it to market and make it appealing for customers.&lt;/p&gt;

&lt;p&gt;How many startups have you launched and how many of them would you say were successful? &lt;/p&gt;

&lt;p&gt;What were the main reasons for success and what were the key takeaways from failures? Would love to hear your stories!&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>career</category>
      <category>startup</category>
    </item>
    <item>
      <title>Common Mistakes React Developers Make – And How to Fix Them</title>
      <author>Yogesh Chavan</author>
      <pubDate>Wed, 05 May 2021 05:37:48 +0000</pubDate>
      <link>https://dev.to/myogeshchavan97/common-mistakes-react-developers-make-and-how-to-fix-them-57eo</link>
      <guid>https://dev.to/myogeshchavan97/common-mistakes-react-developers-make-and-how-to-fix-them-57eo</guid>
      <description>&lt;p&gt;In this article, we'll see some of the common mistakes made by React developers and ways to avoid them.&lt;/p&gt;

&lt;p&gt;So let's get started.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dont-forget-that-every-route-change-mounts-and-unmounts-a-component"&gt;
  &lt;/a&gt;
  Don't Forget that Every Route Change Mounts and Unmounts a Component
&lt;/h2&gt;

&lt;p&gt;Whenever we're using routing in React application, we declare routes inside the &lt;code&gt;Switch&lt;/code&gt; component so at a time only one component with the matching route is displayed.&lt;/p&gt;

&lt;p&gt;Therefore, whenever we go from one route to another, the previously displayed component is unmounted and the component with the new matching route is mounted.&lt;/p&gt;

&lt;p&gt;If you need to persist some data across route change, you need to declare it in the component which encapsulates the routes such as the &lt;code&gt;App&lt;/code&gt; component in the following Code Sandbox or some other way of persisting data like using &lt;a href="https://javascript.plainenglish.io/everything-you-need-to-know-about-html5-local-storage-and-session-storage-479c63415c0a?source=friends_link&amp;amp;sk=f429aa5008683a3b0359db43f976efb3"&gt;local storage or session storage&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe src="https://codesandbox.io/embed/hqz9x"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;As you can see in the above Code Sandbox, whenever we change the route by clicking on the links, we get the corresponding &lt;code&gt;console.log&lt;/code&gt; displayed on the console to indicate that the previous component is unmounted and a new component is mounted.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dont-use-the-wrong-setstate-syntax"&gt;
  &lt;/a&gt;
  Don't Use the Wrong setState Syntax
&lt;/h2&gt;

&lt;p&gt;Whenever we declare a state inside the class-based component, it's always an object like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="na"&gt;counter&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;so whenever we use the updater form of setState syntax to update the state, it looks like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setState&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;prevState&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;counter&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;prevState&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;counter&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As the state is an object, &lt;code&gt;prevState&lt;/code&gt; is also an object so we access the &lt;code&gt;counter&lt;/code&gt; using &lt;code&gt;prevState.counter&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;But when we're using functional component using React Hooks the state can be an object or a non-object value as shown below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;counter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setCounter&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, the value of &lt;code&gt;counter&lt;/code&gt; is not an object but it's a number so to update the state using updater syntax we write the code like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;setCounter&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;prevCounter&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;prevCounter&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, the &lt;code&gt;prevCounter&lt;/code&gt; is a number so we don't use &lt;code&gt;prevCounter.counter&lt;/code&gt; but just &lt;code&gt;prevCounter&lt;/code&gt; or it can be simplified as shown below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;setCounter&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;counter&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;counter&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Check out my &lt;a href="https://www.freecodecamp.org/news/what-is-state-in-react-explained-with-examples/"&gt;this article&lt;/a&gt; for complete introduction to React State&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#dont-call-hooks-from-class-components"&gt;
  &lt;/a&gt;
  Don't Call Hooks from Class Components
&lt;/h2&gt;

&lt;p&gt;Starting with React version 16.8.0, React has introduced Hooks that allow us to write better React code&lt;br&gt;
and make use of state and component life cycle methods inside functional components.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Check out my &lt;a href="https://levelup.gitconnected.com/an-introduction-to-react-hooks-50281fd961fe?source=friends_link&amp;amp;sk=89baff89ec8bc637e7c13b7554904e54"&gt;this article&lt;/a&gt; for an Introduction to React Hooks.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;To make coding easy, there are many hooks provided by React like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;useParams&lt;/code&gt; hook to access URL parameters when using React Routing&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;useHistory&lt;/code&gt; hook to get access to history API inside any component&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;useRef&lt;/code&gt; hook to get access to DOM element&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;and many other hooks.&lt;/p&gt;

&lt;p&gt;But all of these hooks which usually starts with the &lt;code&gt;use&lt;/code&gt; keyword work only inside the functional components. &lt;/p&gt;

&lt;p&gt;If you're having a class-based component then you can't use these hooks. You need to refactor your code to convert it to functional components otherwise, you might get an error as can be seen in the below screenshot:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jYXtCED1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620192585791/GDcHT4dfV.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jYXtCED1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620192585791/GDcHT4dfV.png" alt="hook_error.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#dont-forget-to-add-a-key-prop-when-using-the-array-map-method"&gt;
  &lt;/a&gt;
  Don't Forget to Add a Key Prop When Using the Array map Method
&lt;/h2&gt;

&lt;p&gt;Take a look at &lt;a href="https://codesandbox.io/s/quirky-shockley-bjd6z?file=/src/index.js"&gt;this Code Sandbox Demo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Here, for displaying a list of items, we're using the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Items&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;items&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ol&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;items&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Item&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;))}&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/ol&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In React, for displaying a list of items stored in an array, usually, the array &lt;code&gt;map&lt;/code&gt; method is used.&lt;/p&gt;

&lt;p&gt;But as soon as you add an item to the list in the above Code Sandbox, you will see a missing key warning displayed in the console.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dJXJuyMp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620192605840/gTyypza_9.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dJXJuyMp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620192605840/gTyypza_9.gif" alt="missing-key.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is because every time you're using the array &lt;code&gt;map&lt;/code&gt; method to loop over the items, you need to provide a unique &lt;code&gt;key&lt;/code&gt; prop which React uses to identify which elements on the screen need to be re-rendered and adding &lt;code&gt;key&lt;/code&gt; prop helps to avoids unnecessary re-rendering in your app.&lt;/p&gt;

&lt;p&gt;Here's an updated &lt;a href="https://codesandbox.io/s/boring-greider-olko7?file=/src/index.js"&gt;Code Sandbox Demo&lt;/a&gt; with the added &lt;code&gt;key&lt;/code&gt; prop.&lt;/p&gt;

&lt;p&gt;Here, we've provided a unique &lt;code&gt;key&lt;/code&gt; prop to each element we're looping over like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Item&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Therefore, If you try adding some items, you will not get any warning in the console.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wlR2y2tE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620192629303/oH_ikIDU6.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wlR2y2tE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620192629303/oH_ikIDU6.gif" alt="added-key.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: In the above code, as the elements not re-ordered or removed, using &lt;code&gt;index&lt;/code&gt; as &lt;code&gt;key&lt;/code&gt; works fine but If you're removing or changing the displayed elements order then you need to provide a unique key instead of using &lt;code&gt;index&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#dont-use-inline-functions-the-wrong-way"&gt;
  &lt;/a&gt;
  Don't Use Inline Functions the Wrong Way
&lt;/h2&gt;

&lt;p&gt;Take a look at &lt;a href="https://codesandbox.io/s/stupefied-breeze-66nyr?file=/src/index.js"&gt;this Code Sandbox Demo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Here, we've added some items to the state:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;items&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setItems&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;one&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;two&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and we're looping over them to display on the screen:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;items&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt; &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;handleRemoveItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Remove&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;))}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you check the application, you will see that no items are displayed on the screen and adding new items also does not work as can be seen below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5ZIWj__r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620192648610/g4ABKv5xH.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5ZIWj__r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620192648610/g4ABKv5xH.gif" alt="wrong_inline.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is because of the &lt;code&gt;onClick&lt;/code&gt;  handler for the button:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;handleRemoveItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Remove&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, we're calling the &lt;code&gt;handleRemoveItem&lt;/code&gt; method when the user clicks on the button but the way we're calling the method is wrong.&lt;/p&gt;

&lt;p&gt;So If we don't need to pass any parameter we use the following syntax:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;handleRemoveItem&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Remove&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But later If we decide to pass some parameter to the function, we need to call the handler inside inline function like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;handleRemoveItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Remove&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Most React developers forget to add an inline function and then it takes hours of debugging to understand why something does not work.&lt;/p&gt;

&lt;p&gt;Here's an updated working &lt;a href="https://codesandbox.io/s/polished-moon-02iug?file=/src/index.js"&gt;Code Sandbox Demo&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thanks-for-reading"&gt;
  &lt;/a&gt;
  Thanks for reading!
&lt;/h3&gt;

&lt;p&gt;Starting with ES6, there are many useful additions to JavaScript like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ES6 Destructuring&lt;/li&gt;
&lt;li&gt;Import and Export Syntax&lt;/li&gt;
&lt;li&gt;Arrow functions&lt;/li&gt;
&lt;li&gt;Promises&lt;/li&gt;
&lt;li&gt;Async/await&lt;/li&gt;
&lt;li&gt;Optional chaining operator
and a lot more.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;You can learn everything about all the ES6+ features in detail in my &lt;a href="https://modernjavascript.yogeshchavan.dev/"&gt;Mastering Modern JavaScript&lt;/a&gt; book.&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Check out free preview contents of the book &lt;a href="https://www.freecodecamp.org/news/learn-modern-javascript/"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Also, you can check out my &lt;strong&gt;free&lt;/strong&gt; &lt;a href="https://yogeshchavan1.podia.com/react-router-introduction"&gt;Introduction to React Router&lt;/a&gt; course to learn React Router from scratch.&lt;/p&gt;

&lt;p&gt;Want to stay up to date with regular content regarding JavaScript, React, Node.js? &lt;a href="https://www.linkedin.com/in/yogesh-chavan97/"&gt;Follow me on LinkedIn&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bit.ly/3w0DGum"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Taa9-Eif--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gist.github.com/myogeshchavan97/98ae4f4ead57fde8d47fcf7641220b72/raw/c3e4265df4396d639a7938a83bffd570130483b1/banner.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/myogeshchavan97"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xG4nnUnu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/default-yellow.png"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Which React hooks do you use the most?</title>
      <author>Madza</author>
      <pubDate>Wed, 05 May 2021 05:29:42 +0000</pubDate>
      <link>https://dev.to/madza/which-react-hooks-do-you-use-the-most-52l6</link>
      <guid>https://dev.to/madza/which-react-hooks-do-you-use-the-most-52l6</guid>
      <description>&lt;p&gt;Hooks were first introduced in React v.16.8, so that we could use state and other React features without writing a class.&lt;/p&gt;

&lt;p&gt;Some of the built-in ones include &lt;code&gt;useState&lt;/code&gt;, &lt;code&gt;useEffect&lt;/code&gt;, &lt;code&gt;useRef&lt;/code&gt;, &lt;code&gt;useCallback&lt;/code&gt;, &lt;code&gt;useMemo&lt;/code&gt;, &lt;code&gt;useContext&lt;/code&gt; and &lt;code&gt;useReducer&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Which ones do you use the most? And how often do you write your own custom hooks?&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>react</category>
      <category>webdev</category>
      <category>hooks</category>
    </item>
  </channel>
</rss>
