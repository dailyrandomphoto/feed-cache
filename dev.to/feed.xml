<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>ReactQuill with NextJS</title>
      <author>A7U</author>
      <pubDate>Sun, 02 May 2021 17:32:34 +0000</pubDate>
      <link>https://dev.to/a7u/reactquill-with-nextjs-478b</link>
      <guid>https://dev.to/a7u/reactquill-with-nextjs-478b</guid>
      <description>&lt;p&gt;Hey everyone, just wanted to share this with you. So I've been trying to find rich editors that were compatible with NextJS. Couldn't find any but I found a way to get ReactQuill working.&lt;/p&gt;

&lt;p&gt;Import dynamic&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;dynamic&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react/dynamic&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After that import ReactQuill using dynamic&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ReactQuill&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;dynamic&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;import&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react-quill&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;ssr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now you can easily use it!&lt;br&gt;
Example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;dynamic&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;next/dynamic&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ReactQuill&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;dynamic&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;import&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react-quill&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;ssr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-quill/dist/quill.snow.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setValue&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
       &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ReactQuill&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;onChange&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;setValue&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I hope this helps 😊&lt;/p&gt;

</description>
      <category>nextjs</category>
      <category>markdown</category>
      <category>editor</category>
      <category>react</category>
    </item>
    <item>
      <title>Automatic Configuration Reloading in Java Applications on Kubernetes</title>
      <author>Frank Rosner</author>
      <pubDate>Sun, 02 May 2021 17:29:36 +0000</pubDate>
      <link>https://dev.to/frosnerd/automatic-configuration-reloading-in-java-applications-on-kubernetes-1li7</link>
      <guid>https://dev.to/frosnerd/automatic-configuration-reloading-in-java-applications-on-kubernetes-1li7</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;Applications developed for Kubernetes following the &lt;a href="https://12factor.net/"&gt;twelve-factor methodology&lt;/a&gt; are typically straightforward to operate. The third factor governs &lt;a href="https://12factor.net/config"&gt;application configuration&lt;/a&gt;. Twelve-factor apps should strictly separate configuration from code, making it easy to deploy them to different environments without code changes. They should also store configuration as environment variables, since they are language- and OS-agnostic.&lt;/p&gt;

&lt;p&gt;If there are special quality requirements however, you might want to deviate from that principle. Let's take a stateful, highly available application, such as a distributed database, for example. Since Linux assigns environment variables to a process on startup, it is not (easily) possible to change them without restarting the process.&lt;/p&gt;

&lt;p&gt;In Kubernetes terms, this means any change to the environment variables of a deployment will roll its pods. If your application is stateful, this can be costly, since state has to be migrated when pods get restarted, making a configuration change a non-trivial operation.&lt;/p&gt;

&lt;p&gt;Luckily, there are other ways to implement configuration changes that do not require pod restarts. One of them is to store your application configuration in a config map and mount it into your containers. When you update the config map, Kubernetes will eventually update the mounted files as well and your application can read the updated configuration.&lt;/p&gt;

&lt;p&gt;In this blog post we want to take a look at how to implement that mechanism inside a Java application. The remainder of the post is structured as follows. First, we will implement our Java application which supports automatic configuration reloading. The following section describes how to deploy it to Kubernetes. We are closing the post by discussing and summarizing the findings. The &lt;a href="https://github.com/FRosner/k8s-java-config-reload"&gt;source code&lt;/a&gt; is available on GitHub.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#implementation"&gt;
  &lt;/a&gt;
  Implementation
&lt;/h1&gt;

&lt;p&gt;When it comes to configuration management on the JVM, there are many options. One of the "old hands" in the business is &lt;a href="https://commons.apache.org/proper/commons-configuration/index.html"&gt;Apache Commons Configuration&lt;/a&gt;. It provides a generic configuration interface to manage Java application configuration coming from various sources since 2005.&lt;/p&gt;

&lt;p&gt;Apache Commons Configuration also supports &lt;a href="https://commons.apache.org/proper/commons-configuration/userguide/howto_reloading.html"&gt;automatic reloading&lt;/a&gt; of configuration sources, which is what we are going to use to reload the changes to our configuration file which will be mounted inside the container.&lt;/p&gt;

&lt;p&gt;First, let's define a &lt;code&gt;ConfigReloader&lt;/code&gt; class that encapsulates the periodic configuration reloading and exposes a method to retrieve the latest configuration. To accomplish periodic reloading, we need two components: A &lt;code&gt;ReloadingFileBasedConfigurationBuilder&lt;/code&gt; and a &lt;code&gt;PeriodicReloadingTrigger&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;ReloadingFileBasedConfigurationBuilder&lt;/code&gt; is responsible for reloading the configuration file and we will set it up to work with a given properties file. The &lt;code&gt;PeriodicReloadingTrigger&lt;/code&gt; triggers the builder to check for modifications on the file and reload it if necessary at a given interval. The following code snippet shows our implementation of the &lt;code&gt;ConfigReloader&lt;/code&gt; class.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.io.File&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.util.concurrent.TimeUnit&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.apache.commons.configuration2.Configuration&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.apache.commons.configuration2.FileBasedConfiguration&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.apache.commons.configuration2.PropertiesConfiguration&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.apache.commons.configuration2.builder.ReloadingFileBasedConfigurationBuilder&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.apache.commons.configuration2.builder.fluent.Parameters&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.apache.commons.configuration2.ex.ConfigurationException&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.apache.commons.configuration2.reloading.PeriodicReloadingTrigger&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ConfigReloader&lt;/span&gt; &lt;span class="kd"&gt;implements&lt;/span&gt; &lt;span class="nc"&gt;AutoCloseable&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

  &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="nc"&gt;PeriodicReloadingTrigger&lt;/span&gt; &lt;span class="n"&gt;trigger&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="nc"&gt;ReloadingFileBasedConfigurationBuilder&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;FileBasedConfiguration&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;builder&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

  &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;ConfigReloader&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;configFilePath&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nc"&gt;Parameters&lt;/span&gt; &lt;span class="n"&gt;params&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Parameters&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
    &lt;span class="nc"&gt;File&lt;/span&gt; &lt;span class="n"&gt;propertiesFile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;File&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;configFilePath&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;builder&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;ReloadingFileBasedConfigurationBuilder&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;FileBasedConfiguration&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;(&lt;/span&gt;
        &lt;span class="nc"&gt;PropertiesConfiguration&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
        &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;configure&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;fileBased&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;setFile&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;propertiesFile&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
    &lt;span class="n"&gt;trigger&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;PeriodicReloadingTrigger&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;builder&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getReloadingController&lt;/span&gt;&lt;span class="o"&gt;(),&lt;/span&gt;
        &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;TimeUnit&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;SECONDS&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;trigger&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;start&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;

  &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nc"&gt;Configuration&lt;/span&gt; &lt;span class="nf"&gt;getConfig&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;builder&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getConfiguration&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;ConfigurationException&lt;/span&gt; &lt;span class="n"&gt;cex&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;RuntimeException&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cex&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;

  &lt;span class="nd"&gt;@Override&lt;/span&gt;
  &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;close&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;trigger&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;stop&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Note that in order to return the latest configuration, we must query the builder on each request. Internally, it will keep a reference to the current configuration that gets updated atomically after a successful reload. This way, we guarantee to the callers of &lt;code&gt;ConfigReloader.getConfig&lt;/code&gt; that the returned configuration does not update while it is in use.&lt;/p&gt;

&lt;p&gt;Next, let's implement a main class that will print something to the standard output stream based on the current configuration value. First, we initialize the &lt;code&gt;ConfigReloader&lt;/code&gt; with a path to a properties file that will later be mounted inside the container. Then we endlessly print a greeting message to a configurable user at a configurable interval. Here goes the code.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.util.Date&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;org.apache.commons.configuration2.Configuration&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;App&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

  &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="kd"&gt;throws&lt;/span&gt; &lt;span class="nc"&gt;InterruptedException&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;ConfigReloader&lt;/span&gt; &lt;span class="n"&gt;configReloader&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;ConfigReloader&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/config/config.properties"&lt;/span&gt;&lt;span class="o"&gt;))&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;Configuration&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;configReloader&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getConfig&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getString&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"name"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;sleepInterval&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getInt&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"sleepIntervalMillis"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;format&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Hello %s, it is %s"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;()));&lt;/span&gt;
        &lt;span class="nc"&gt;Thread&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;sleep&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sleepInterval&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
      &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h1&gt;
  &lt;a href="#deployment"&gt;
  &lt;/a&gt;
  Deployment
&lt;/h1&gt;

&lt;p&gt;In order to deploy our application to Kubernetes, we first need to bake it into a Docker image. We are going to utilize the Jib Maven plugin:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight xml"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;plugin&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;com.google.cloud.tools&lt;span class="nt"&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;jib-maven-plugin&lt;span class="nt"&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;version&amp;gt;&lt;/span&gt;3.0.0&lt;span class="nt"&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;to&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;image&amp;gt;&lt;/span&gt;k8s-java-config-reload&lt;span class="nt"&gt;&amp;lt;/image&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/to&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/plugin&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;To test it, we can start a minikube cluster and build the image directly with the minikube Docker daemon:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;minikube start
&lt;span class="nb"&gt;eval&lt;/span&gt; &lt;span class="si"&gt;$(&lt;/span&gt;minikube docker-env&lt;span class="si"&gt;)&lt;/span&gt;
mvn compile jib:dockerBuild
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Next, we create a new config map manifest containing the properties file.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;apiVersion&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;v1&lt;/span&gt;
&lt;span class="na"&gt;kind&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ConfigMap&lt;/span&gt;
&lt;span class="na"&gt;metadata&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;k8s-java-config-reload-configmap&lt;/span&gt;
&lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="s"&gt;config.properties&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;|-&lt;/span&gt;
    &lt;span class="s"&gt;name=Frank&lt;/span&gt;
    &lt;span class="s"&gt;sleepIntervalMillis=1000&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;We then create a pod manifest and tell Kubernetes to mount the config map into the container. Note that in production, you probably want to use a more sophisticated mechanism to deploy your application, such as a deployment. But for the sake of this example, a pod is perfectly fine.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;apiVersion&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;v1&lt;/span&gt;
&lt;span class="na"&gt;kind&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Pod&lt;/span&gt;
&lt;span class="na"&gt;metadata&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;k8s-java-config-reload-pod&lt;/span&gt;
&lt;span class="na"&gt;spec&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;containers&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;k8s-java-config-reload&lt;/span&gt;
      &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;k8s-java-config-reload&lt;/span&gt;
      &lt;span class="na"&gt;imagePullPolicy&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;IfNotPresent&lt;/span&gt;
      &lt;span class="na"&gt;volumeMounts&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;config-volume&lt;/span&gt;
          &lt;span class="na"&gt;mountPath&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;/config&lt;/span&gt;
  &lt;span class="na"&gt;volumes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;config-volume&lt;/span&gt;
      &lt;span class="na"&gt;configMap&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;k8s-java-config-reload-configmap&lt;/span&gt;
  &lt;span class="na"&gt;restartPolicy&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Always&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;We can then deploy both resources using &lt;code&gt;kubectl&lt;/code&gt; and the application should load the configuration file and start greeting Frank. When following the container logs and updating the config map we can observe how the greetings change.&lt;/p&gt;


&lt;div class="ltag_asciinema"&gt;
  
&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#discussion-and-summary"&gt;
  &lt;/a&gt;
  Discussion and Summary
&lt;/h1&gt;

&lt;p&gt;As you can see from the demo, it takes a bit of time until the config change is propagated entirely. The reason for this is that kubelet syncs the mounted config maps in the pod once every minute (see &lt;a href="https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet/"&gt;&lt;code&gt;--sync-frequency&lt;/code&gt;&lt;/a&gt;). It also caches existing config map data which has to be invalidated before the new value becomes visible to the container. Additionally, we have the periodic reloading delay inside our Java program. Note that you can trigger an immediate reload of the config map by updating one of the pod's annotations, e.g. by storing a hash of the config map contents in a pod annotation.&lt;/p&gt;

&lt;p&gt;If you need your configuration changes to be rolled out more immediate, there are other options as well. Rather than reading from a properties file, you could use a key-value store such as &lt;a href="https://www.consul.io/"&gt;Consul&lt;/a&gt;, &lt;a href="https://etcd.io/"&gt;etcd&lt;/a&gt;, or &lt;a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-parameter-store.html"&gt;AWS Systems Manager Parameter Store&lt;/a&gt;. While this gives you more direct control of configuration changes, it introduces new challenges. First, managing your configuration as code might require additional tooling, such as defining them as Terraform resources. Additionally, your application will have to know how to speak to the configuration services, including a proper authentication mechanism.&lt;/p&gt;

&lt;p&gt;Another use case where the mounted configmap approach falls short is when you want to reload application secrets, such as credentials, without restarting the pod. In this case, using a central configuration store / secrets manager in combination with an application-internal cache is a good option. The cache can be invalidated once a 401 is hit. This way, rotating the secret inside the secrets manager will eventually propagate to all pods and you do not have to store your secrets in files.&lt;/p&gt;

&lt;p&gt;To summarize, I would suggest following the twelve-factor methodology and passing your configuration as environment variables if possible. If you need to support hot reloading of configuration, and you are fine that this happens with a bit of delay, choosing the config map file mount based solution described in this post is a good option. It relies only on Kubernetes internal mechanisms and basic file system operations from within your application, without the need for special protocols or authentication. Central configuration stores are a viable alternative as well, especially when managing application secrets.&lt;/p&gt;




&lt;p&gt;Cover image by &lt;a href="https://unsplash.com/@guibolduc?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Guillaume Bolduc&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/container?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

</description>
      <category>java</category>
      <category>kubernetes</category>
      <category>cloud</category>
      <category>devops</category>
    </item>
    <item>
      <title>Weekly Digest 17/2021 - Top of the Week</title>
      <author>Marco Biedermann</author>
      <pubDate>Sun, 02 May 2021 17:16:31 +0000</pubDate>
      <link>https://dev.to/worldindev/weekly-digest-17-2021-4a69</link>
      <guid>https://dev.to/worldindev/weekly-digest-17-2021-4a69</guid>
      <description>&lt;p&gt;Welcome to my Weekly Digest #17 which is the first one for May.&lt;/p&gt;

&lt;p&gt;This weekly digest contains a lot of interesting and inspiring articles, videos, tweets, podcasts, and designs I consumed during this week.&lt;/p&gt;




&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#giveaway"&gt;
  &lt;/a&gt;
  🎉 Giveaway
&lt;/h2&gt;

&lt;p&gt;We are giving away any course you need on Udemy. Any price any course.&lt;br&gt;
To enter you have to do the following:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;👍 React to this post&lt;/li&gt;
&lt;li&gt;✉️ Subscribe to our &lt;a href="https://worldindev.ck.page"&gt;newsletter&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You will receive &lt;a href="https://dev.to/worldindev"&gt;our articles&lt;/a&gt; directly to your &lt;a href="https://worldindev.ck.page"&gt;inbox&lt;/a&gt; 📬.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#interesting-articles-to-read"&gt;
  &lt;/a&gt;
  Interesting articles to read
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#css-hell"&gt;
  &lt;/a&gt;
  CSS Hell
&lt;/h3&gt;

&lt;p&gt;Collection of common CSS mistakes, and how to fix them.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://csshell.dev/"&gt;CSS Hell - To Hell with bad CSS!&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#faster-builds-for-large-sites-on-netlify-with-ondemand-builders"&gt;
  &lt;/a&gt;
  Faster builds for large sites on Netlify with On-demand Builders
&lt;/h3&gt;

&lt;p&gt;Learn how On-demand Builders improve build times for large sites on Netlify. They help the Jamstack support larger websites and more dynamic apps across any JavaScript framework.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.netlify.com/blog/2021/04/14/faster-builds-for-large-sites-on-netlify-with-on-demand-builders-now-in-early-access/"&gt;Get Faster Builds for Large Sites on Netlify: On-demand Builders&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#what-questions-should-you-ask-in-a-software-engineer-interview"&gt;
  &lt;/a&gt;
  What Questions Should You Ask in a Software Engineer Interview?
&lt;/h3&gt;

&lt;p&gt;Often, we focus on acing the interview; however, we need to remember that the process is a two-way street.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://typeofnan.dev/what-questions-should-you-ask-in-a-software-engineer-interview/"&gt;What Questions Should You Ask in a Software Engineer Interview?&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#javascript-temporal-api-a-fix-for-the-date-api"&gt;
  &lt;/a&gt;
  JavaScript Temporal API- A Fix for the Date API
&lt;/h3&gt;

&lt;p&gt;JavaScript has a bad date handling API because the Date object implementation was copied directly from Java’s Date Class. Java maintainers eventually deprecated many of Date class methods and created the Calendar Class in 1997 to replace it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://blog.bitsrc.io/javascript-temporal-api-a-fix-for-the-date-api-aa8381a4234c"&gt;JavaScript Temporal API- A Fix for the Date API&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#some-great-videos-i-watched-this-week"&gt;
  &lt;/a&gt;
  Some great videos I watched this week
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#console-is-more-than-just-log"&gt;
  &lt;/a&gt;
  Console is more than just log!
&lt;/h3&gt;

&lt;p&gt;We're going to cover &lt;code&gt;console.count&lt;/code&gt;, &lt;code&gt;assert&lt;/code&gt;, &lt;code&gt;table&lt;/code&gt;, &lt;code&gt;time&lt;/code&gt;, &lt;code&gt;group&lt;/code&gt; and &lt;code&gt;trace&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/stjI3P0qcTU"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://twitter.com/leighchalliday"&gt;Leigh Halliday&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#css-container-queries-polyfill"&gt;
  &lt;/a&gt;
  CSS Container Queries Polyfill
&lt;/h3&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/WKIzq6vcO3s"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://twitter.com/leveluptuts"&gt;LevelUpTuts&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#sass-in-100-seconds"&gt;
  &lt;/a&gt;
  Sass in 100 Seconds
&lt;/h3&gt;

&lt;p&gt;Learn the basics of Sass (SCSS) or syntactically awesome stylesheets. Sass is a language and compiler the can make your CSS code more efficient and programmatic&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/akDIJa0AP5c"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://twitter.com/fireship_dev"&gt;Fireship&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lets-defer-generating-400-pages-in-our-build-using-eleventy-cloud-and-ondemand-builders"&gt;
  &lt;/a&gt;
  Let’s defer generating 400+ pages in our build using Eleventy Cloud and On-demand Builders
&lt;/h3&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/bENDCw9aLV0"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://twitter.com/zachleat"&gt;Zach Leatherman&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#using-context-to-build-a-lightdark-theme"&gt;
  &lt;/a&gt;
  Using Context to Build a Light/Dark Theme
&lt;/h3&gt;

&lt;p&gt;In this lesson, we'll leverage context and hooks to build a global light/dark theme in our app.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/L6iIBkrMFUE"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://www.youtube.com/c/ReactNativeSchool"&gt;React Native School&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#is-this-the-best-javascript-extension"&gt;
  &lt;/a&gt;
  Is This The Best JavaScript Extension?
&lt;/h3&gt;

&lt;p&gt;Quokka.js is an extension available for multiple editors that allows you to write JavaScript code on a scratchpad. This scratchpad will auto-update whenever you make changes which makes it the perfect tool for learning, writing, or debugging code. I highly recommend you give it a shot.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/TQXUeGYs8u0"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://twitter.com/DevSimplified"&gt;Web Dev Simplified&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#useful-github-repositories"&gt;
  &lt;/a&gt;
  Useful GitHub repositories
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#design-resources-for-developers"&gt;
  &lt;/a&gt;
  Design Resources for Developers
&lt;/h3&gt;

&lt;p&gt;A curated list of design and UI resources from stock photos, web templates, CSS frameworks, UI libraries, tools, and much more&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/bradtraversy"&gt;
        bradtraversy
      &lt;/a&gt; / &lt;a href="https://github.com/bradtraversy/design-resources-for-developers"&gt;
        design-resources-for-developers
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Curated list of design and UI resources from stock photos, web templates, CSS frameworks, UI libraries, tools and much more
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/bradtraversy/design-resources-for-developers/master/readme.md/headerimage.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--U37hNx6S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/bradtraversy/design-resources-for-developers/master/readme.md/headerimage.png" alt="Repository Banner"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;
Please read &lt;a href="https://raw.githubusercontent.com/bradtraversy/design-resources-for-developers/master/readme.md/./contributing.md"&gt;&lt;code&gt;contributing guidelines&lt;/code&gt;&lt;/a&gt; before submitting new resources.&lt;/h4&gt;
&lt;h2&gt;
Table of Contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bradtraversy/design-resources-for-developers/master/readme.md/#ui-graphics"&gt;UI Graphics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bradtraversy/design-resources-for-developers/master/readme.md/#fonts"&gt;Fonts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bradtraversy/design-resources-for-developers/master/readme.md/#colors"&gt;Colors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bradtraversy/design-resources-for-developers/master/readme.md/#icons"&gt;Icons&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bradtraversy/design-resources-for-developers/master/readme.md/#logos"&gt;Logos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bradtraversy/design-resources-for-developers/master/readme.md/#favicons"&gt;Favicons&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bradtraversy/design-resources-for-developers/master/readme.md/#icon-fonts"&gt;Icon Fonts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bradtraversy/design-resources-for-developers/master/readme.md/#stock-photos"&gt;Stock Photos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bradtraversy/design-resources-for-developers/master/readme.md/#stock-videos"&gt;Stock Videos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bradtraversy/design-resources-for-developers/master/readme.md/#stock-music--sound-effects"&gt;Stock Music &amp;amp; Sound Effects&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bradtraversy/design-resources-for-developers/master/readme.md/#vectors--clip-art"&gt;Vectors &amp;amp; Clipart&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bradtraversy/design-resources-for-developers/master/readme.md/#product--image-mockups"&gt;Product &amp;amp; Image Mockups&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bradtraversy/design-resources-for-developers/master/readme.md/#html--css-templates"&gt;HTML &amp;amp; CSS Templates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bradtraversy/design-resources-for-developers/master/readme.md/#css-frameworks"&gt;CSS Frameworks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bradtraversy/design-resources-for-developers/master/readme.md/#css-methodologies"&gt;CSS Methodologies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bradtraversy/design-resources-for-developers/master/readme.md/#css-animations"&gt;CSS Animations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bradtraversy/design-resources-for-developers/master/readme.md/#javascript-animation-libraries"&gt;Javascript Animations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bradtraversy/design-resources-for-developers/master/readme.md/#ui-components--kits"&gt;UI Components &amp;amp; Kits&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bradtraversy/design-resources-for-developers/master/readme.md/#react-ui"&gt;React UI Libraries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bradtraversy/design-resources-for-developers/master/readme.md/#vue-ui"&gt;Vue UI Libraries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bradtraversy/design-resources-for-developers/master/readme.md/#angular-ui"&gt;Angular UI Libraries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bradtraversy/design-resources-for-developers/master/readme.md/#svelte-ui"&gt;Svelte UI Libraries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bradtraversy/design-resources-for-developers/master/readme.md/#react-native-ui"&gt;React Native UI Libraries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bradtraversy/design-resources-for-developers/master/readme.md/#design-systems--style-guides"&gt;Design Systems &amp;amp; Style Guides&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bradtraversy/design-resources-for-developers/master/readme.md/#online-design-tools"&gt;Online Design Tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bradtraversy/design-resources-for-developers/master/readme.md/#downloadable-design-software"&gt;Downloadable Design Software&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bradtraversy/design-resources-for-developers/master/readme.md/#design-inspiration"&gt;Design Inspiration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bradtraversy/design-resources-for-developers/master/readme.md/#image-compression"&gt;Image Compression&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bradtraversy/design-resources-for-developers/master/readme.md/#chrome-extensions"&gt;Chrome Extensions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bradtraversy/design-resources-for-developers/master/readme.md/#others"&gt;Others&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
UI Graphics&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Websites and resources with modern UI components in different formats such as PSD, Sketch, Figma, etc. They are great for ideas for web components/UI&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Website                           &lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://uidesigndaily.com/" rel="nofollow"&gt;UI Design Daily&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Awesome UI Components of all types&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://100dailyui.webflow.io/" rel="nofollow"&gt;100 Daily UI&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Free Figma library of products, elements, and screens&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.sketchappsources.com/" rel="nofollow"&gt;Sketch App Sources&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Sketch UIs, wireframes, icons and much more&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://www.humaaans.com/" rel="nofollow"&gt;Humaaans&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Cool illustrations of people with&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;…&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/bradtraversy/design-resources-for-developers"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#react-navigation-5"&gt;
  &lt;/a&gt;
  React Navigation 5
&lt;/h3&gt;

&lt;p&gt;Routing and navigation for your React Native apps&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/react-navigation"&gt;
        react-navigation
      &lt;/a&gt; / &lt;a href="https://github.com/react-navigation/react-navigation"&gt;
        react-navigation
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Routing and navigation for your React Native apps
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
React Navigation 5&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://circleci.com/gh/react-navigation/react-navigation" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/24eac8bc1064665a50b378dba41be2b73fa5ec2d9c4026df6ee9c58b36c2f6c0/68747470733a2f2f696d672e736869656c64732e696f2f636972636c6563692f70726f6a6563742f6769746875622f72656163742d6e617669676174696f6e2f72656163742d6e617669676174696f6e2f6d61696e2e7376673f7374796c653d666c61742d737175617265" alt="Build Status"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/github/react-navigation/react-navigation" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9270f7d74579489a3fbd33777eb4214f7bcae306dd6e6f6008be0054be998021/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f6769746875622f72656163742d6e617669676174696f6e2f72656163742d6e617669676174696f6e2e7376673f7374796c653d666c61742d737175617265" alt="Code Coverage"&gt;&lt;/a&gt;
&lt;a href="https://opensource.org/licenses/MIT" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ee73e97cf6a2314b6e96c2ef61cf5b3169ec2014ac773840b59fe3a1edd282d2/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f6c2f4072656163742d6e617669676174696f6e2f636f72652e7376673f7374796c653d666c61742d737175617265" alt="MIT License"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Routing and navigation for your React Native apps.&lt;/p&gt;
&lt;p&gt;Documentation can be found at &lt;a href="https://reactnavigation.org/" rel="nofollow"&gt;reactnavigation.org&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you are looking for version 4, the code can be found in the &lt;a href="https://github.com/react-navigation/react-navigation/tree/4.x"&gt;4.x branch&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
Package Versions&lt;/h2&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Latest Version&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://raw.githubusercontent.com/react-navigation/react-navigation/main//packages/core"&gt;@react-navigation/core&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/@react-navigation/core" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e3ad162db446455a91cdb24f0855651925b2820874ac8f2e94b912594013806f/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f4072656163742d6e617669676174696f6e2f636f72652e7376673f7374796c653d666c61742d737175617265" alt="badge"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://raw.githubusercontent.com/react-navigation/react-navigation/main//packages/native"&gt;@react-navigation/native&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/@react-navigation/native" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/56770ab3bd119a9e1e938bbd89b537542e79720fcf7f794dd88008ad4e5f5550/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f4072656163742d6e617669676174696f6e2f6e61746976652e7376673f7374796c653d666c61742d737175617265" alt="badge"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://raw.githubusercontent.com/react-navigation/react-navigation/main//packages/routers"&gt;@react-navigation/routers&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/@react-navigation/routers" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0475d723275a03f7475ab5903f2c52b8cb1a63cbdb5f98da5f02a1a55a0a5631/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f4072656163742d6e617669676174696f6e2f726f75746572732e7376673f7374796c653d666c61742d737175617265" alt="badge"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://raw.githubusercontent.com/react-navigation/react-navigation/main//packages/stack"&gt;@react-navigation/stack&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/@react-navigation/stack" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7cb95517e92ffff05bd57c1ffc8eca26c9930114e8edeecf15591c84ea2433de/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f4072656163742d6e617669676174696f6e2f737461636b2e7376673f7374796c653d666c61742d737175617265" alt="badge"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://raw.githubusercontent.com/react-navigation/react-navigation/main//packages/drawer"&gt;@react-navigation/drawer&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/@react-navigation/drawer" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f53074342a380caf8741e673a02278cb119917e7cc2d4111567105de120828f0/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f4072656163742d6e617669676174696f6e2f6472617765722e7376673f7374796c653d666c61742d737175617265" alt="badge"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://raw.githubusercontent.com/react-navigation/react-navigation/main//packages/material-top-tabs"&gt;@react-navigation/material-top-tabs&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/@react-navigation/material-top-tabs" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6ce574eb7ec63e56fa5c9b99ae7f31966252bab6dee12b5b3ac8530a7a110d01/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f4072656163742d6e617669676174696f6e2f6d6174657269616c2d746f702d746162732e7376673f7374796c653d666c61742d737175617265" alt="badge"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://raw.githubusercontent.com/react-navigation/react-navigation/main//packages/material-bottom-tabs"&gt;@react-navigation/material-bottom-tabs&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/@react-navigation/material-bottom-tabs" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fb3d31cfc0c92a4155f8a22b513e1da733ab24cd294c3390d2e457e86f5eaebc/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f4072656163742d6e617669676174696f6e2f6d6174657269616c2d626f74746f6d2d746162732e7376673f7374796c653d666c61742d737175617265" alt="badge"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://raw.githubusercontent.com/react-navigation/react-navigation/main//packages/bottom-tabs"&gt;@react-navigation/bottom-tabs&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/@react-navigation/bottom-tabs" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a91ffef0fc761cb35d4c6387c79508df6d3c53c03443c6ff3d89915e59ebaebf/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f4072656163742d6e617669676174696f6e2f626f74746f6d2d746162732e7376673f7374796c653d666c61742d737175617265" alt="badge"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://raw.githubusercontent.com/react-navigation/react-navigation/main//packages/devtools"&gt;@react-navigation/devtools&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/@react-navigation/devtools" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/aa214880f2e914c07200da1339fa8ac1ec833a7c61f374fa8b4db7befa54efaf/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f4072656163742d6e617669676174696f6e2f646576746f6f6c732e7376673f7374796c653d666c61742d737175617265" alt="badge"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;h2&gt;
Contributing&lt;/h2&gt;
&lt;p&gt;Please read through our &lt;a href="https://raw.githubusercontent.com/react-navigation/react-navigation/main/CONTRIBUTING.md"&gt;contribution guide&lt;/a&gt; to get started!&lt;/p&gt;
&lt;h2&gt;
Installing from a fork on GitHub&lt;/h2&gt;
&lt;p&gt;Since we use a monorepo, it's not possible to install a package from the repository URL. If you need to install a forked version from Git, you can use &lt;a href="https://github.com/ramasilveyra/gitpkg"&gt;&lt;code&gt;gitpkg&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;First install &lt;code&gt;gitpkg&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell js-code-highlight"&gt;
&lt;pre&gt;yarn global add gitpkg&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Then follow these steps to publish and install a forked package:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Fork this repo to your account and clone the forked repo to your local machine&lt;/li&gt;
&lt;li&gt;Open a Terminal and &lt;code&gt;cd&lt;/code&gt; to the location of the cloned repo&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;yarn&lt;/code&gt; to install any dependencies&lt;/li&gt;
&lt;li&gt;If you…&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/react-navigation/react-navigation"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#the-algorithms-python"&gt;
  &lt;/a&gt;
  The Algorithms - Python
&lt;/h3&gt;

&lt;p&gt;All Algorithms implemented in Python&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/TheAlgorithms"&gt;
        TheAlgorithms
      &lt;/a&gt; / &lt;a href="https://github.com/TheAlgorithms/Python"&gt;
        Python
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      All Algorithms implemented in Python
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
The Algorithms - Python&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://gitpod.io/#https://github.com/TheAlgorithms/Python" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5a5932d597950fc5cf0b9b9977274c3fba64bedc8a46431e0ce34d244a27326b/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f476974706f642d52656164792d2d746f2d2d436f64652d626c75653f6c6f676f3d676974706f64267374796c653d666c61742d737175617265" alt="Gitpod Ready-to-Code"&gt;&lt;/a&gt; 
&lt;a href="https://discord.gg/c7MnfGFGa6" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1de46c8a86db708e5b8709e4c0f6c38f82e38e3bb26e94e256a1c8a123eee549/68747470733a2f2f696d672e736869656c64732e696f2f646973636f72642f3830383034353932353535363638323738322e7376673f6c6f676f3d646973636f726426636f6c6f72423d373238394441267374796c653d666c61742d737175617265" alt="Discord chat"&gt;&lt;/a&gt; 
&lt;a href="https://gitter.im/TheAlgorithms" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d5016c1148a779d02ff6c85e0c361ceb3c7705ab965a634f697ac5201599aa3e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f436861742d4769747465722d6666363962342e7376673f6c6162656c3d43686174266c6f676f3d676974746572267374796c653d666c61742d737175617265" alt="Gitter chat"&gt;&lt;/a&gt; 
&lt;a href="https://github.com/TheAlgorithms/Python/actions"&gt;&lt;img src="https://camo.githubusercontent.com/eca47f8fd3cdd136fce0e30a8a43994934cb4fb58a98b4189db4321ec4ebdbfa/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f776f726b666c6f772f7374617475732f546865416c676f726974686d732f507974686f6e2f6275696c643f6c6162656c3d4349266c6f676f3d676974687562267374796c653d666c61742d737175617265" alt="GitHub Workflow Status"&gt;&lt;/a&gt; 
&lt;a href="https://lgtm.com/projects/g/TheAlgorithms/Python/alerts" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e6f6de374a2c01435ca231727996e1bcb0b7b2c513ab52cecab8c4e55089796a/68747470733a2f2f696d672e736869656c64732e696f2f6c67746d2f616c657274732f6769746875622f546865416c676f726974686d732f507974686f6e2e7376673f6c6162656c3d4c47544d266c6f676f3d4c47544d267374796c653d666c61742d737175617265" alt="LGTM"&gt;&lt;/a&gt; 
&lt;a href="https://github.com/TheAlgorithms/Python/blob/master/CONTRIBUTING.md"&gt;&lt;img src="https://camo.githubusercontent.com/67eb7c8b1ed6c9019f25d5ac1331577db2b42f15303a452aa91e94fc4565019a/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76312e7376673f6c6162656c3d436f6e747269627574696f6e73266d6573736167653d57656c636f6d6526636f6c6f723d303035396233267374796c653d666c61742d737175617265" alt="contributions welcome"&gt;&lt;/a&gt; 
&lt;a href="https://www.paypal.me/TheAlgorithms/100" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d04feeb457617ce3a3887e02318bdd52cdf761939a6f5ebf82ff2cdd07ccba76/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f446f6e6174652d50617950616c2d677265656e2e7376673f6c6f676f3d70617970616c267374796c653d666c61742d737175617265" alt="Donate"&gt;&lt;/a&gt; 
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/175bb7d6cc4bf57107c582c15f2ad49f90b724dea9da1735edcc3b3bdb9d0ee8/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f7265706f2d73697a652f546865416c676f726974686d732f507974686f6e2e7376673f6c6162656c3d5265706f25323073697a65267374796c653d666c61742d737175617265"&gt;&lt;img src="https://camo.githubusercontent.com/175bb7d6cc4bf57107c582c15f2ad49f90b724dea9da1735edcc3b3bdb9d0ee8/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f7265706f2d73697a652f546865416c676f726974686d732f507974686f6e2e7376673f6c6162656c3d5265706f25323073697a65267374796c653d666c61742d737175617265" alt=""&gt;&lt;/a&gt; 
&lt;a href="https://github.com/pre-commit/pre-commit"&gt;&lt;img src="https://camo.githubusercontent.com/9836c03e8f5b62f3ffeea14c4c9daf181100bd4c20e2dea5b12c4b6afccbe635/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f7072652d2d636f6d6d69742d656e61626c65642d627269676874677265656e3f6c6f676f3d7072652d636f6d6d6974266c6f676f436f6c6f723d7768697465267374796c653d666c61742d737175617265" alt="pre-commit"&gt;&lt;/a&gt; 
&lt;a href="https://github.com/psf/black"&gt;&lt;img src="https://camo.githubusercontent.com/f40afe5b2d215ac2c293f4cfcd66b165ecc9b64bcc1f631274801f9a8186677e/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f6c6162656c3d636f64652532307374796c65266d6573736167653d626c61636b26636f6c6f723d626c61636b267374796c653d666c61742d737175617265" alt="code style: black"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
All algorithms implemented in Python (for education)&lt;/h3&gt;
&lt;p&gt;These implementations are for learning purposes only. Therefore they may be less efficient than the implementations in the Python standard library.&lt;/p&gt;
&lt;h2&gt;
Contribution Guidelines&lt;/h2&gt;
&lt;p&gt;Read our &lt;a href="https://raw.githubusercontent.com/TheAlgorithms/Python/master/CONTRIBUTING.md"&gt;Contribution Guidelines&lt;/a&gt; before you contribute.&lt;/p&gt;
&lt;h2&gt;
Community Channel&lt;/h2&gt;
&lt;p&gt;We're on &lt;a href="https://gitter.im/TheAlgorithms" rel="nofollow"&gt;Gitter&lt;/a&gt;!  Please join us.&lt;/p&gt;
&lt;h2&gt;
List of Algorithms&lt;/h2&gt;
&lt;p&gt;See our &lt;a href="https://raw.githubusercontent.com/TheAlgorithms/Python/master/DIRECTORY.md"&gt;directory&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/TheAlgorithms/Python"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;





&lt;h2&gt;
  &lt;a href="#dribbble-shots"&gt;
  &lt;/a&gt;
  dribbble shots
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#job-finder-app"&gt;
  &lt;/a&gt;
  Job Finder App
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XUTZqVWZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.dribbble.com/users/4684322/screenshots/15534544/media/116accf0cc1e5e16db2c29f08d17de5a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XUTZqVWZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.dribbble.com/users/4684322/screenshots/15534544/media/116accf0cc1e5e16db2c29f08d17de5a.png" alt="https://cdn.dribbble.com/users/4684322/screenshots/15534544/media/116accf0cc1e5e16db2c29f08d17de5a.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://dribbble.com/shots/15534544-Job-Finder-App"&gt;Andri&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#crypter%C2%AE-nft-marketplace"&gt;
  &lt;/a&gt;
  Crypter® – NFT marketplace
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--A49feAmg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.dribbble.com/users/427857/screenshots/15543783/crypter_-_diagonal_16.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--A49feAmg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.dribbble.com/users/427857/screenshots/15543783/crypter_-_diagonal_16.png" alt="https://cdn.dribbble.com/users/427857/screenshots/15543783/crypter_-_diagonal_16.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://dribbble.com/shots/15543783-Crypter-NFT-marketplace"&gt;Tran Mau Tri Tam&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#educora-web-ui-kit"&gt;
  &lt;/a&gt;
  Educora - Web UI Kit
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TKeMCe-a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.dribbble.com/users/3010014/screenshots/15580824/media/7f53fba6ed5beda6c1977904b998c6c3.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TKeMCe-a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.dribbble.com/users/3010014/screenshots/15580824/media/7f53fba6ed5beda6c1977904b998c6c3.jpg" alt="https://cdn.dribbble.com/users/3010014/screenshots/15580824/media/7f53fba6ed5beda6c1977904b998c6c3.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://dribbble.com/shots/15580824--Educora-Web-UI-Kit"&gt;Yousuf Saymon&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#learner-app"&gt;
  &lt;/a&gt;
  Learner app
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Mm7lbXJN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.dribbble.com/users/2285351/screenshots/15573152/media/a5c9e66e3480c1ceaab2cba7b35a3c9a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Mm7lbXJN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.dribbble.com/users/2285351/screenshots/15573152/media/a5c9e66e3480c1ceaab2cba7b35a3c9a.png" alt="https://cdn.dribbble.com/users/2285351/screenshots/15573152/media/a5c9e66e3480c1ceaab2cba7b35a3c9a.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://dribbble.com/shots/15573152-Learner-app"&gt;Asish Sunny&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#delivery-food-mobile-apps"&gt;
  &lt;/a&gt;
  Delivery Food Mobile Apps
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8yf5-XWC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.dribbble.com/users/2162070/screenshots/15574753/media/ac08f2e2baded76f9983eac2a95da0f9.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8yf5-XWC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.dribbble.com/users/2162070/screenshots/15574753/media/ac08f2e2baded76f9983eac2a95da0f9.jpg" alt="https://cdn.dribbble.com/users/2162070/screenshots/15574753/media/ac08f2e2baded76f9983eac2a95da0f9.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://dribbble.com/shots/15574753-Delivery-Food-Mobile-Apps"&gt;Indah Ratna Sari&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#tweets"&gt;
  &lt;/a&gt;
  Tweets
&lt;/h2&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media ltag__twitter-tweet__media__video-wrapper"&gt;
        &lt;div class="ltag__twitter-tweet__media--video-preview"&gt;
          &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j-bf7tTF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/ext_tw_video_thumb/1386683863108362249/pu/img/p0ijJAfaM5nWxhp1.jpg" alt="unknown tweet media content"&gt;
          &lt;img src="/assets/play-butt.svg" class="ltag__twitter-tweet__play-butt" alt="Play butt"&gt;
        &lt;/div&gt;
        &lt;div class="ltag__twitter-tweet__video"&gt;
          
            
          
        &lt;/div&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--JkYP1OI0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1055142255722344448/xhqy_EUP_normal.jpg" alt="StackBlitz profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        StackBlitz
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @stackblitz
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Browsers are awesome! (3):&lt;br&gt;&lt;br&gt;`&amp;lt;input type="file"&amp;gt;` permits a user to select only a single file at a time... but that's only its default behavior! &lt;br&gt;&lt;br&gt;You can also allow selecting multiple files, and even specify the supported file types!&lt;br&gt;Just add `multiple` and `accept` attributes: 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      14:18 PM - 26 Apr 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1386686096940179460" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1386686096940179460" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1386686096940179460" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;



&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---uanvVsZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/Ez_EAZnVoAQKHLB.png" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--tB0fWGN_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/846106819391115264/iZAxk4qr_normal.jpg" alt="🔎Julia Evans🔍 profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        🔎Julia Evans🔍
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @b0rk
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      I just learned that there's a terminal version of Wireshark called termshark?!?!?! this is incredible &lt;a href="https://t.co/fa5z9T9kCr"&gt;termshark.io&lt;/a&gt; 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      13:55 PM - 27 Apr 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1387042731709501444" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1387042731709501444" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1387042731709501444" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;



&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f4d48DAi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/E0EipLuVoAERDN_.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--NuBM9PDy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1385883291744575488/KOKJ3k8L_normal.jpg" alt="Addy Osmani profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Addy Osmani
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/addyosmani"&gt;@addyosmani&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      📣 Introducing "Image Optimization": a fresh 528 page Print + eBook on modern formats, compression, automation and more: &lt;a href="https://t.co/NBQIG4P0da"&gt;bit.ly/smashing-images&lt;/a&gt; 🖼️&lt;br&gt;&lt;br&gt;2+ years in the making. With thanks to &lt;a href="https://twitter.com/smashingmag"&gt;@smashingmag&lt;/a&gt;, &lt;a href="https://twitter.com/colinbendell"&gt;@colinbendell&lt;/a&gt;, &lt;a href="https://twitter.com/ari4nne"&gt;@ari4nne&lt;/a&gt;, &lt;a href="https://twitter.com/bibydigital"&gt;@bibydigital&lt;/a&gt;, &lt;a href="https://twitter.com/jonsneyers"&gt;@jonsneyers&lt;/a&gt; &amp;amp; countless others :) 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      15:41 PM - 28 Apr 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1387431906359185408" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1387431906359185408" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1387431906359185408" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;



&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media ltag__twitter-tweet__media__video-wrapper"&gt;
        &lt;div class="ltag__twitter-tweet__media--video-preview"&gt;
          &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--R2BOtLIn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/E0PtdpkWEAAd3fP.jpg" alt="unknown tweet media content"&gt;
          &lt;img src="/assets/play-butt.svg" class="ltag__twitter-tweet__play-butt" alt="Play butt"&gt;
        &lt;/div&gt;
        &lt;div class="ltag__twitter-tweet__video"&gt;
          
            
          
        &lt;/div&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--1ade2nZ6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1338344493234286592/C_ujKIUa_normal.png" alt="GitHub profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        GitHub
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @github
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Something changed? No worries - we've just made it a bit easier to view a single file in history. 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      19:30 PM - 30 Apr 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1388214209339707399" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1388214209339707399" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1388214209339707399" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;



&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media ltag__twitter-tweet__media__video-wrapper"&gt;
        &lt;div class="ltag__twitter-tweet__media--video-preview"&gt;
          &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TPzRGMcz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/tweet_video_thumb/E0PPKUXWQAUkH4R.jpg" alt="unknown tweet media content"&gt;
          &lt;img src="/assets/play-butt.svg" class="ltag__twitter-tweet__play-butt" alt="Play butt"&gt;
        &lt;/div&gt;
        &lt;div class="ltag__twitter-tweet__video"&gt;
          
            
          
        &lt;/div&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--khgR4x9u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1362432748011536385/vRY-trfG_normal.jpg" alt="Josh W. Comeau profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Josh W. Comeau
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/joshwcomeau"&gt;@joshwcomeau&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      My CSS course features a nifty tool that helps you find the perfect font-size value for fluid headings.&lt;br&gt;&lt;br&gt;I used to solve this through trial-and-error with semi-random numbers. Now I have a system for it 😄&lt;br&gt;&lt;br&gt;(Context in the tweets below! 👇) 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      17:41 PM - 30 Apr 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1388186884946415624" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1388186884946415624" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1388186884946415624" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;



&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media ltag__twitter-tweet__media__video-wrapper"&gt;
        &lt;div class="ltag__twitter-tweet__media--video-preview"&gt;
          &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z031Al-M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/ext_tw_video_thumb/1388112414747602949/pu/img/v8rnW_Rd2fLaXree.jpg" alt="unknown tweet media content"&gt;
          &lt;img src="/assets/play-butt.svg" class="ltag__twitter-tweet__play-butt" alt="Play butt"&gt;
        &lt;/div&gt;
        &lt;div class="ltag__twitter-tweet__video"&gt;
          
            
          
        &lt;/div&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--ph3vfkoQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/799913500600598528/z4Wctlai_normal.jpg" alt="Tomek Sułkowski profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Tomek Sułkowski
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/sulco"&gt;@sulco&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      The `gap` CSS property is a convenient way to set the spacing between not only the grid but also flex items!&lt;br&gt;&lt;br&gt;And now, with the just-released Safari 14.1, you can use it in every major browser! 🥳 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      12:52 PM - 30 Apr 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1388113988534341634" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1388113988534341634" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1388113988534341634" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;



&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kfSwkVzO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/E0M4jp7VEAIguLz.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--NuBM9PDy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1385883291744575488/KOKJ3k8L_normal.jpg" alt="Addy Osmani profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Addy Osmani
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/addyosmani"&gt;@addyosmani&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      The &amp;lt;img&amp;gt; element now supports lazy-loading, async decoding and many other features: &lt;a href="https://t.co/QcbvWLQfT7"&gt;bit.ly/img-cwv&lt;/a&gt; I wrote about how to optimize UX &amp;amp; the Core Web Vitals with it. 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      07:25 AM - 30 Apr 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1388031656355794945" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1388031656355794945" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1388031656355794945" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;





&lt;h2&gt;
  &lt;a href="#picked-pens"&gt;
  &lt;/a&gt;
  Picked Pens
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#iphone-12-purple"&gt;
  &lt;/a&gt;
  iPhone 12 purple
&lt;/h3&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/ece_mina/embed/poRGeKO?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://codepen.io/ece_mina"&gt;Mina&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#apple-keynote-animation"&gt;
  &lt;/a&gt;
  Apple Keynote animation
&lt;/h3&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/Mamboleoo/embed/ZELqMOg?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://twitter.com/Mamboleoo"&gt;Louis Hoebregts&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#make-the-web-less-boring"&gt;
  &lt;/a&gt;
  Make the web less boring
&lt;/h3&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/piccalilli/embed/QWdJgJQ?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://twitter.com/piccalilli_"&gt;Andy Bell&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#peters-blinds-with-css"&gt;
  &lt;/a&gt;
  Peter's Blinds with CSS
&lt;/h3&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/jh3y/embed/KKajeyy?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://twitter.com/jh3yy"&gt;Jhey&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#podcasts-worth-listening"&gt;
  &lt;/a&gt;
  Podcasts worth listening
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#kent-c-dodds-software-engineer-educator-at-kent-c-dodds-tech"&gt;
  &lt;/a&gt;
  Kent C. Dodds - Software Engineer Educator at Kent C. Dodds Tech
&lt;/h3&gt;

&lt;p&gt;Kent goes through his journey from full-time software engineer to full-time SE educator, the mindset of a junior dev, ways to solidify one's knowledge, and best ways to get a job.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="100%" height="232px" src="https://open.spotify.com/embed/episode/40Y2RZ9feIyqS4evUtxR4j"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#hasty-treat-git-rebase-explained"&gt;
  &lt;/a&gt;
  Hasty Treat - Git Rebase Explained
&lt;/h3&gt;

&lt;p&gt;In this Hasty Treat, Scott and Wes talk about Git Rebase — what it is and how and when to use it!&lt;/p&gt;

&lt;p&gt;&lt;iframe width="100%" height="232px" src="https://open.spotify.com/embed/episode/0Sxv86yBWWA9RJRisMUj7C"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-css-podcast-fontface"&gt;
  &lt;/a&gt;
  The CSS Podcast - @font-face
&lt;/h3&gt;

&lt;p&gt;In this episode, Una and Adam talk about font adjustments when being used within @font-face. When fonts are loaded, there's an opportunity to provide default values and fine-tunings.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="100%" height="232px" src="https://open.spotify.com/embed/episode/2lOl1RG3deF4JbuJQfQffd"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#typescript-fundamentals-getting-a-bit-deeper"&gt;
  &lt;/a&gt;
  TypeScript Fundamentals — Getting a Bit Deeper
&lt;/h3&gt;

&lt;p&gt;In this episode of Syntax, Scott and Wes continue their discussion of TypeScript Fundamentals with a deeper diver into more advanced use cases.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="100%" height="232px" src="https://open.spotify.com/embed/episode/5fype60x1ZLwMQHYrfMM0h"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;Thank you for reading, talk to you next week, and stay safe! 👋&lt;/p&gt;




&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Make sure to subscribe to our &lt;a href="https://worldindev.ck.page"&gt;newsletter&lt;/a&gt; 💌 to receive our weekly recap directly on your email and react to this post to automatically participate in our giveaway 🎁&lt;/p&gt;

&lt;p&gt;If you would like to join our discussions, you can find us on &lt;a href="https://discord.gg/aWS2YKk6"&gt;Discord&lt;/a&gt; 📣.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

</description>
      <category>css</category>
      <category>javascript</category>
      <category>react</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Logging to a Docker Container stdout from a Background Process</title>
      <author>Anna Aitchison</author>
      <pubDate>Sun, 02 May 2021 17:05:13 +0000</pubDate>
      <link>https://dev.to/ara225/logging-to-a-docker-container-stdout-from-a-background-process-3dkg</link>
      <guid>https://dev.to/ara225/logging-to-a-docker-container-stdout-from-a-background-process-3dkg</guid>
      <description>&lt;p&gt;Background processes in Docker containers can be a bit of a pain for logging, however they can't always be avoided. For instance, I was working on a container for a legacy CGI application at work recently, which required both a FastCGI wrapper and a Nginx webserver in the same container, with Nginx running as the foreground process and logging to the container's stdout. The CGI application does a lot of logging and we didn't really want to have to manage those logs separately from the Nginx logs. The CGI wrapper we were stuck with doesn't pass on stderr (with CGI stdout goes to the browser so that's pointless also) so we had to resort to more devious means.&lt;/p&gt;

&lt;p&gt;Linking a file/logging to /dev/stdout (or /dev/stderr) doesn't work because these are merely references to the current process's stdout/stderr and logging to a terminal device similarly doesn't work because in production, there won't really be a terminal. &lt;/p&gt;

&lt;p&gt;So, I was stuck and gave up on the idea for a bit until I realized that in Linux process can write to other processs' stdin and stderr. There are 'files' in  /proc/TARGET_PROCESS_PID/fd that represent stdin and stderr for that process, and you can write to them just like any other file if you have the right permissions. Processes can only write to these 'files' if they're running under the same user and group as the target process, and if the user is not root, you might have to change the permissions of the 'files' further down the link chain. Of course, in in my situation, the master nginx process was owned by root and the CGI scripts were running under an unprivileged user. However, I worked around this by writing to the stdout of a nginx worker processes, which would then be picked up by the master process. &lt;/p&gt;

&lt;p&gt;Unfortunately, due to the way we set up the container in the end, this solution hasn't found it's way into production, but I hope it's useful to you.&lt;/p&gt;

</description>
      <category>docker</category>
      <category>container</category>
      <category>logging</category>
    </item>
    <item>
      <title>Get an Awesome website! 😄️</title>
      <author>CristoferK</author>
      <pubDate>Sun, 02 May 2021 17:01:51 +0000</pubDate>
      <link>https://dev.to/cristoferk/get-an-awesome-website-kjd</link>
      <guid>https://dev.to/cristoferk/get-an-awesome-website-kjd</guid>
      <description>&lt;p&gt;Get an Awesome website! 😄️&lt;/p&gt;

&lt;p&gt;The Fiverr link: &lt;a href="https://www.fiverr.com/cristoferk29/make-an-awesome-website-for-you"&gt;https://www.fiverr.com/cristoferk29/make-an-awesome-website-for-you&lt;/a&gt;&lt;/p&gt;

</description>
      <category>css</category>
      <category>website</category>
      <category>webdev</category>
      <category>awesome</category>
    </item>
    <item>
      <title>Web components in 2021: the Good, the Bad and the Ugly</title>
      <author>Émile Perron</author>
      <pubDate>Sun, 02 May 2021 16:42:47 +0000</pubDate>
      <link>https://dev.to/emileperron/web-components-in-2021-the-good-the-bad-and-the-ugly-3kg</link>
      <guid>https://dev.to/emileperron/web-components-in-2021-the-good-the-bad-and-the-ugly-3kg</guid>
      <description>&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/Web_Components"&gt;Web components&lt;/a&gt; are a native set of features that provides outstanding scoping of styles and functionalities. They can be used in a regular, framework-free web page, but also with any Javascript framework of your choice (e.g. React, Vue, Angular, Svelte, etc.). This makes web components excellent for building reusable elements that need to be shared publicly or reused across multiple projets. At least, in theory.&lt;/p&gt;

&lt;p&gt;In reality, there are some drawbacks that can make web components almost unusable in some projects. &lt;/p&gt;

&lt;p&gt;In this article, I will explain what makes web components great, what their drawbacks are, and I will provide some guidance to help you decide whether or not you should use them in your projects.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#the-good"&gt;
  &lt;/a&gt;
  The Good
&lt;/h2&gt;

&lt;p&gt;The two main features that make web components powerful are the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements"&gt;Custom Elements API&lt;/a&gt;, and the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_shadow_DOM"&gt;Shadow DOM&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The Custom Elements API is what allows you to create and register your components as new HTML elements. It also allows you to define lifecycle callbacks for your new element. Overall, it is pretty great and fairly simple to understand and get into, for both novice and experienced developers alike.&lt;/p&gt;

&lt;p&gt;The Shadow DOM is what provides all of the encapsulation of styles. It gives your components their own DOM, which is separate from the rest of your document. This means that global styles cannot affect it (except for CSS custom properties / variables), and that its own styles cannot affect other elements in the parent document. &lt;/p&gt;

&lt;p&gt;The HTML &lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;slot&amp;gt;&lt;/code&gt; elements are also used in most custom elements, allowing you to easily create templates with dynamic content without having to reach for a third-party templating system or language.&lt;/p&gt;

&lt;p&gt;Browser support for all of these features is great: unless you're still supporting Internet Explorer, you're unlikely to run into any deal-breakers. There is one exception to this, which will be explained later in "The Bad" section.&lt;/p&gt;

&lt;p&gt;Plus, as mentioned at the start of the article, not only are web components compatible with just about every Javascript framework out there, but they can also be used in good old vanilla Javascript, without a framework. That's because web components are basically just ES6 classes extending the native HTMLElement. That means you can share components across your project or your company's entire ecosystem.&lt;/p&gt;

&lt;p&gt;Additionally, there are some &lt;a href="https://www.webcomponents.org/introduction#libraries-for-building-web-components"&gt;great libraries and packages to make building web components easier&lt;/a&gt;, as well as an online platform where you can find and share web components with others: &lt;a href="https://www.webcomponents.org/"&gt;webcomponents.org&lt;/a&gt;.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#the-bad"&gt;
  &lt;/a&gt;
  The Bad
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#flash-of-unstyled-content"&gt;
  &lt;/a&gt;
  Flash of Unstyled Content
&lt;/h3&gt;

&lt;p&gt;Let's start with the Custom Elements API. The only drawback I have experienced with custom elements is the potential for a Flash of Unstyled Content. Since custom elements are declared and registered in Javascript, it can take a few milliseconds for them to be loaded, processed, registered, and finally rendered. While this is happening, your custom element are left unstyled or hidden.&lt;/p&gt;

&lt;p&gt;This could be a major drawback for a marketing website where you have just a few seconds to engage with your visitors in order to keep their attention, but in web applications, it's not really a deal-breaker, especially since your browser's cache dramatically dampens the issue after the initial loading.&lt;/p&gt;

&lt;p&gt;Here's an example of FOUC with a "tabbed container" web component on a reload without cache (on a local development server):&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BaET009X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n7k4mxzjahpuz0rjf3gp.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BaET009X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n7k4mxzjahpuz0rjf3gp.gif" alt="Web component flashing unstyled content for a few milliseconds before rendering correctly"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here is the same component rendering on reload, with browser cache (still on a local development server):&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D3E3Yc2k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vjd21un6mf1lbnjz4ay5.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D3E3Yc2k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vjd21un6mf1lbnjz4ay5.gif" alt="Web component loading immediately without any visual glitches or FOUC"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see, browser cache makes this a non-issue for repeat visits.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#shadow-dom-doesnt-play-well-with-native-forms"&gt;
  &lt;/a&gt;
  Shadow DOM doesn't play well with native forms
&lt;/h3&gt;

&lt;p&gt;The biggest issue I have encountered with web components is the fact that they do not play well at all with native form functionalities. This is due to two things:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Custom elements cannot extend elements other than &lt;code&gt;HTMLElement&lt;/code&gt; &lt;em&gt;(without tedious workarounds and major drawbacks)&lt;/em&gt;;&lt;/li&gt;
&lt;li&gt;Form elements inside the Shadow DOM are not considered as such by the component's parent form.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Remember how the Shadow DOM doesn't use global styles? This means that if you want to use a &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; inside a web component, you will have to re-define the styles of every &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;fieldset&amp;gt;&lt;/code&gt;, and more, within your component's styles.&lt;/p&gt;

&lt;p&gt;Of course, you could make each of these elements their own web component, so they each encapsulate their own styles. However, because form elements such as &lt;code&gt;HTMLInputElement&lt;/code&gt; cannot be extended by custom elements, your custom input component has to include the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; in its Shadow DOM. And this is where you run into the next issue: inputs (and other form elements) within the Shadow DOM are not considered part of the form.&lt;/p&gt;

&lt;p&gt;For example, if a form's submit button is inside the Shadow DOM, the form cannot be submitted by pressing Enter inside an input anymore, unless you add your own &lt;code&gt;keydown&lt;/code&gt; event listener to replicate this feature yourself. &lt;/p&gt;

&lt;p&gt;Here is another example that is a little more complex and telling. If you want to make a custom input, you have three solutions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You can generate a &lt;code&gt;&amp;lt;input type="hidden"&amp;gt;&lt;/code&gt; in the regular DOM, beside your custom element, and manually replicate a bunch of built-in features to ensure your input is synchronized correctly at all times, triggers the right events, is validated correctly, is accessible, looks good, and works well.&lt;/li&gt;
&lt;li&gt;You can make every form element, including the &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; itself, its own web component, and forego native &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; elements for your entire project.&lt;/li&gt;
&lt;li&gt;Handle every form who uses this custom input element with Javascript&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you are already in a Javascript-heavy environment, where every single form is handled via Javascript, and every component implementation already requires a lot of work in order to be usable and accessible, this might not seem like a major issue.&lt;/p&gt;

&lt;p&gt;However, if you are more vanilla-oriented, newer to web development, or simply like simple solutions and environments, this is likely to be a MAJOR deal-breaker.&lt;/p&gt;

&lt;p&gt;A non-negligible percentage of the web components I would like to build are meant to work with forms or form elements in one way or an other, and I expect it is the same for most other developers. &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#the-ugly"&gt;
  &lt;/a&gt;
  The Ugly
&lt;/h2&gt;

&lt;p&gt;The worst part is that there isn't much information on the web about what is being done to fix or circumvent this issue of incompatibility with native forms. &lt;/p&gt;

&lt;p&gt;Web component libraries like &lt;a href="https://shoelace.style/"&gt;Shoelace&lt;/a&gt; simply implement their own custom form element, which must be handled manually in Javascript.&lt;/p&gt;

&lt;p&gt;Librairies that aim to help build web components, such as Google's &lt;a href="https://lit.dev"&gt;Lit&lt;/a&gt;, cannot allow extending built-in elements &lt;a href="https://github.com/lit/lit-element/issues/879#issuecomment-575236461"&gt;because Safari doesn't support customization of built-ins&lt;/a&gt;.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#where-we-stand-and-whether-should-you-use-them"&gt;
  &lt;/a&gt;
  Where we stand, and whether should you use them
&lt;/h2&gt;

&lt;p&gt;Overall, just a few weeks/months after embarking on my web component journey with a big smile and sparkling eyes, I find myself not pessimistic, but slightly disappointed about the current state of web components and their future outside of Javascript framework projects and ecosystems.&lt;/p&gt;

&lt;p&gt;I still believe the idea and general implementation of web components is great. But the drawbacks when it comes to native forms make them much less easy to learn and to implement into. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#you-should-use-web-components"&gt;
  &lt;/a&gt;
  You should use web components...
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;if you're already handling all your forms manually in Javascript&lt;/li&gt;
&lt;li&gt;if you have (or plan on having) multiple projects or ecosystems with different technology stacks in which you need to share/reuse components&lt;/li&gt;
&lt;li&gt;if you don't mind taking a lot of time to reimplement built-in functionalities and accessibility before you can really start working on your own business-related features (or if you can use an existing component library like &lt;a href="https://shoelace.style/"&gt;Shoelace&lt;/a&gt; to save on the initial development time and costs)&lt;/li&gt;
&lt;li&gt;... or if you don't need your components to interact with forms or form elements&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#you-should-not-use-web-components"&gt;
  &lt;/a&gt;
  You should not use web components...
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;if you want to retain the ability to use native forms &lt;/li&gt;
&lt;li&gt;if you need to support legacy browsers&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#a-light-in-the-distance"&gt;
  &lt;/a&gt;
  A light in the distance
&lt;/h2&gt;

&lt;p&gt;Just after I initially published this article, &lt;a class="mentioned-user" href="https://dev.to/westbrook"&gt;@westbrook&lt;/a&gt;
 commented to let me know about the &lt;a href="https://html.spec.whatwg.org/multipage/custom-elements.html#the-elementinternals-interface"&gt;ElementInternals spec&lt;/a&gt; which is currently implemented in Google Chrome (not in Safari or Firefox yet however). Once available in every browser, this could be a valid solution to the form-related problems I mentioned in the article. &lt;/p&gt;

&lt;p&gt;Check out the following articles to learn more about this spec, its implementations, and the available polyfills: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://web.dev/more-capable-form-controls/"&gt;More capable form controls (web.dev)&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://css-tricks.com/creating-custom-form-controls-with-elementinternals/"&gt;Creating Custom Form Controls with ElementInternals (CSS-Tricks)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#one-last-thing"&gt;
  &lt;/a&gt;
  One last thing...
&lt;/h2&gt;

&lt;p&gt;If you are not in a Javascript-heavy environment but would still like to use web components for your forms (e.g.: you're building a Laravel or Symfony web app), you always have to possibility of developing a universal form handler to overcome the problems that are described in this article.&lt;/p&gt;

&lt;p&gt;Sure, it's more complicated than just using native forms, and it will require you to do some more development and testing before you can get started, but it's probably the simplest workaround.&lt;/p&gt;

&lt;p&gt;If you do have any other workaround or solutions in mind, I'd love to see them here in the comments or on Twitter. &lt;/p&gt;

</description>
      <category>webdev</category>
      <category>webcomponents</category>
      <category>javascript</category>
      <category>html</category>
    </item>
    <item>
      <title>Have you experimented with CSS container queries?</title>
      <author>Stephanie Eckles</author>
      <pubDate>Sun, 02 May 2021 16:26:55 +0000</pubDate>
      <link>https://dev.to/5t3ph/have-you-experimented-with-css-container-queries-3goh</link>
      <guid>https://dev.to/5t3ph/have-you-experimented-with-css-container-queries-3goh</guid>
      <description>&lt;p&gt;CSS container queries have landed as an experiment in Chrome Canary! You can enable them under &lt;code&gt;chrome://flags&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Have you had a chance to experiment with them yet&lt;/strong&gt;? How do you feel about them being available in CSS?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xrZNX1Lj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6cyo7o480u92lqe4ed6b.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xrZNX1Lj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6cyo7o480u92lqe4ed6b.gif" alt="demo of using container queries within a flexbox grid layout, using color and CSS content to note when flex children are rendered as small, medium, or large container sizes."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Resources if you're just hearing about them now:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Miriam Suzanne is the proposal author, and you should &lt;a href="https://css.oddbird.net/rwd/query/explainer/"&gt;start with her explainer&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Check out her &lt;a href="https://codepen.io/collection/XQrgJo"&gt;CodePen collection of demos&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;You might like highlights from &lt;a href="https://www.twitch.tv/collections/8k9OzUpxdxb9VA"&gt;my Twitch stream of exploring them&lt;/a&gt; for the first and second time&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.oddbird.net/2021/04/05/containerqueries/"&gt;A quick start guide&lt;/a&gt; from David A. Herron&lt;/li&gt;
&lt;li&gt;Ahmad Shadeed's excellent &lt;a href="https://ishadeed.com/article/say-hello-to-css-container-queries/"&gt;overview with practical examples&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;And links to more within Stu Robson's repo &lt;a href="https://github.com/sturobson/Awesome-Container-Queries"&gt;Awesome-Container-Queries&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>discuss</category>
      <category>css</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Content &amp; Community- A Cheatsheet for Open Source projects. ( Part 1: Content 🎨)</title>
      <author>Mathew J Padayatty</author>
      <pubDate>Sun, 02 May 2021 16:16:26 +0000</pubDate>
      <link>https://dev.to/aviyel/content-community-a-cheatsheet-for-open-source-projects-part-1-content-5he7</link>
      <guid>https://dev.to/aviyel/content-community-a-cheatsheet-for-open-source-projects-part-1-content-5he7</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;“Software built on pride and love of the subject is superior to software built for profit.”&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
- Ravi Simhambhatla&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;There are over 80 million repos on Github, open stack has over 49 teams working on 1,525 project repos.  Every Open Source project is trying to capture the attention and resources of the developer community in a crowded and attention-deficit world.&lt;/p&gt;

&lt;p&gt;To rise above the noise, You need to be able to communicate what your project is doing, attract independent contributors and companies that offer material support. In Open Source, you’re selling &lt;strong&gt;&lt;em&gt;ideas not stuff&lt;/em&gt;&lt;/strong&gt; and you need users and contributors to spend their &lt;strong&gt;&lt;em&gt;time and attention&lt;/em&gt;&lt;/strong&gt; on your projects.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;“In Open Source, marketing is about getting people to exchange their time &amp;amp; attention for your ideas.”&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
- Deirdre Straughan, AWS, Open Source lead.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Conventional marketing tactics, slick ads, videos and other materials don’t have the same impact when it comes to the Open Source community. Authenticity, transparency, and a real solution to a real problem carry more weight in the community. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;“Everything that touches your customer, everything! Is marketing.”&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So where do you begin? How can a small crew leverage content marketing around Open Source projects to grow a community in the early days? The steps are pretty straightforward, as with most things execution is the key differentiator.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#step-1"&gt;
  &lt;/a&gt;
  Step 1:
&lt;/h4&gt;

&lt;h2&gt;
  &lt;a href="#understand-your-key-content-levers"&gt;
  &lt;/a&gt;
  Understand your key content levers.
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#documentation"&gt;
  &lt;/a&gt;
  Documentation
&lt;/h3&gt;

&lt;p&gt;Open source doesn’t have as great a set of training manuals and resources as the paid-and-packaged stuff. The OSS documentation is the &lt;strong&gt;SALES PITCH&lt;/strong&gt;. It’s what will convince the engineers, at first glance that your project is worth contributing to and what will convince users of its advantages. &lt;/p&gt;

&lt;p&gt;The documentation needs to convey&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;How to install the library.&lt;/li&gt;
&lt;li&gt;The background behind the project.&lt;/li&gt;
&lt;li&gt;Code examples.&lt;/li&gt;
&lt;li&gt;Deep dive into underlying software logic.&lt;/li&gt;
&lt;li&gt;Effective benchmarking versus nearest neighbor libraries. &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#visualization-gallery"&gt;
  &lt;/a&gt;
  Visualization Gallery
&lt;/h3&gt;

&lt;p&gt;Product visualizations/ Walkthroughs in the forms of videos and .gifs with appropriate feature shout-outs, and accompanying use case descriptions can be an effective way to get the user's buy-in.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Emphasis on reliability, access, and ease of use.&lt;/li&gt;
&lt;li&gt;Guides the eyes to moot points along with the landing page.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#comparison-charts"&gt;
  &lt;/a&gt;
  Comparison charts
&lt;/h3&gt;

&lt;p&gt;A chart/ table capturing the pros and cons of the OSS software in comparison with other players OSS and proprietary is invaluable to a developer's decision-making. A full picture on the product stack with features and its advantages.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#nudge-content"&gt;
  &lt;/a&gt;
  Nudge Content
&lt;/h3&gt;

&lt;p&gt;Content beyond the product capabilities, useful for the ideal user profile in the form of Tips, insights, case studies, podcasts and webinars can further drive resonance and inclination to spend more time on the website...which in turn correlates to product adoption and product evangelism. &lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#step-2"&gt;
  &lt;/a&gt;
  Step 2:
&lt;/h4&gt;

&lt;h2&gt;
  &lt;a href="#build-a-content-strategy"&gt;
  &lt;/a&gt;
  Build a content strategy.
&lt;/h2&gt;

&lt;p&gt;Now that you have your levers in place let's look at breaking down the different components of an effective OSS content strategy-&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Building your content strategy.&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Education &amp;amp; Support Category&lt;/li&gt;
&lt;li&gt;Product Showcase &lt;/li&gt;
&lt;li&gt;Validation&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#education-amp-support-category"&gt;
  &lt;/a&gt;
  Education &amp;amp; Support Category
&lt;/h3&gt;

&lt;p&gt;This is the most crucial aspect of the effectiveness of any OSS content strategy. There is a list of hygiene requirements here that is an absolute must. Which includes User guides, architecture guides, Online courses, documentation, and engineering blogs.&lt;/p&gt;

&lt;p&gt;A key thing to note here is although a lot of OSS platforms make this available, the real challenge here is the seamless accessibility and user-friendliness of the content. The ‘Nudge content’ around case studies, user stories, podcasts, Industry reports, comparison charts, and webinars also come within this segment.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#product-showcase"&gt;
  &lt;/a&gt;
  Product Showcase
&lt;/h3&gt;

&lt;p&gt;The most underutilized segment within OSS content is the proper visualization of the product and highlighting all its unique features, UI, and maneuverability. This can include product demos, product screenshots, product .gifs, etc&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#validation"&gt;
  &lt;/a&gt;
  Validation
&lt;/h3&gt;

&lt;p&gt;Community, user, and Industry validation is a crucial aspect of building trust and confidence in the user.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#step-3"&gt;
  &lt;/a&gt;
  Step 3:
&lt;/h4&gt;

&lt;h2&gt;
  &lt;a href="#optimise-using-tools"&gt;
  &lt;/a&gt;
  Optimise using tools.
&lt;/h2&gt;

&lt;p&gt;After putting together a content strategy, use content tools to execute and A/B test different content for the cohorts you're reaching out to.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#content-creation-tools"&gt;
  &lt;/a&gt;
  Content creation tools
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://hemingwayapp.com/"&gt;&lt;strong&gt;Hemingway app (Text)&lt;/strong&gt;&lt;/a&gt; - For Written content, it helps review your blog post and highlights readability aspects that can be useful in making your blog post or content more accessible. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.canva.com/photos/"&gt;&lt;strong&gt;Canva (Image &amp;amp; Video)&lt;/strong&gt;&lt;/a&gt; - One of the easiest design platforms out there, making designing posts videos for quick content creation seamless.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://placeit.net/"&gt;&lt;strong&gt;Placeit(Image &amp;amp; Video)&lt;/strong&gt;&lt;/a&gt; - Create logos, freebies and other content on the go from a large repository of mockups.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://nimbusweb.me/screenshot.php"&gt;&lt;strong&gt;Nimbus Screenshot and Screen Video Recording Chrome Extension&lt;/strong&gt;&lt;/a&gt; - A useful tool while you’re making ‘How-to’ and ‘DIY’ or ‘Product walkthroughs’ videos to helps users understand how to navigate your product.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://unsplash.com/"&gt;&lt;strong&gt;Unsplash&lt;/strong&gt;&lt;/a&gt; - Find usable images for your content. A great repository that's a good alternative to Shutterstock.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://piktochart.com/"&gt;&lt;strong&gt;Picktochart&lt;/strong&gt;&lt;/a&gt; - Data visualizations are always helpful when you're trying to communicate certain aspects of product usage in relation to something else.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.audacityteam.org/download/"&gt;&lt;strong&gt;Audacity&lt;/strong&gt;&lt;/a&gt; - Podcasting tool, is an easy-to-use multitrack audio recording and editing platform that can help you get started on your first podcast.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://streamyard.com/"&gt;&lt;strong&gt;Streamyard&lt;/strong&gt;&lt;/a&gt; - A great tool for webinars and hosting live sessions that helps you to go live across Facebook, YouTube, LinkedIn, and other platforms.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://carbon.now.sh/"&gt;&lt;strong&gt;Carbon&lt;/strong&gt;&lt;/a&gt; - Carbon is the easiest way to create and share beautiful images of your source code.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://codeimg.io/"&gt;&lt;strong&gt;CodeImg&lt;/strong&gt;&lt;/a&gt; -Create and share beautiful images of your source code.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://getterms.io/"&gt;&lt;strong&gt;Getterms&lt;/strong&gt;&lt;/a&gt; - Generate a simple Terms of Service and Privacy Policy statement for your website&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://beefree.io/"&gt;&lt;strong&gt;Beefree&lt;/strong&gt;&lt;/a&gt; - BEE is an email editor to build beautiful, responsive emails quickly and easily. Our objective is to build the Best Email Editor. Use it online or embed it into your application.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#content-management-amp-analytics"&gt;
  &lt;/a&gt;
  Content management &amp;amp; Analytics
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://tweetdeck.twitter.com/"&gt;&lt;strong&gt;Tweetdeck&lt;/strong&gt;&lt;/a&gt; - Schedule your content on Twitter, engage your twitter profile, messages and trends through a comprehensive dashboard.  &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://buzzsumo.com/"&gt;&lt;strong&gt;Buzzsumo&lt;/strong&gt;&lt;/a&gt;- A cloud-based platform that helps you discover new keywords, trending stories, customer questions, and content success.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.semrush.com/"&gt;&lt;strong&gt;Semrush&lt;/strong&gt;&lt;/a&gt; – Keyword Research, SEO, PPC, SMM, PR, Content Marketing, Competitive Research, Campaign Management, Semrush is an all-in-one for improve visibility and discovered marketing insight.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://ahrefs.com/"&gt;&lt;strong&gt;Ahrefs&lt;/strong&gt;&lt;/a&gt; – Ahrefs is one of the largest database for live link because it is know for its backlink checker. it helps for understanding your website so you can optimize your website for search engine.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://neilpatel.com/ubersuggest/"&gt;&lt;strong&gt;Ubersuggest&lt;/strong&gt;&lt;/a&gt; – Ubersuggest is a free SEO tool that can be used to analyze search engine optimization. Its current version is provided by Neil Patel, a well-known SEO expert from around the world.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;These are a few tools to help you get started, Open Source deserves amazing content on par with it's pro-profit and SaaS equivalents.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Open source to us is the right way to build the future of the web- Transparent and empowering smaller groups of developers rather than large monolithic cooperations.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We've been building tools to help Open source projects create and manage their content, community, and code. &lt;br&gt;
Check out &lt;a href="http://aviyel.com/"&gt;&lt;strong&gt;Aviyel&lt;/strong&gt;&lt;/a&gt; and sign up for early access.&lt;/p&gt;

&lt;p&gt;We'd love to hear from you and work towards making Open Source sustainable.&lt;/p&gt;

&lt;p&gt;May the FOSS be with you! :)&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>opensource</category>
      <category>startup</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Why is /usr/bin/test 4Kb smaller than /usr/bin/[?</title>
      <author>Mags Guru</author>
      <pubDate>Sun, 02 May 2021 15:50:12 +0000</pubDate>
      <link>https://dev.to/magsguru/why-is-usr-bin-test-4kb-smaller-than-usr-bin-491g</link>
      <guid>https://dev.to/magsguru/why-is-usr-bin-test-4kb-smaller-than-usr-bin-491g</guid>
      <description>&lt;p&gt;A Reddit user named mathisweirdaf shared some interesting observations:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; $ ls -lh /usr/bin/{test,[}
-rwxr-xr-x 1 root root 59K  Sep  5  2019 '/usr/bin/['
-rwxr-xr-x 1 root root 55K  Sep  5  2019  /usr/bin/test
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;[ and test should be aliases of each other, and yet there is a 4Kb difference between the GNU coreutils that execute them. Why?&lt;/p&gt;

&lt;p&gt;First of all, for all those who were wondering: yes, there is /usr/bin/[. On this topic I have a separate article, but I will explain briefly:&lt;br&gt;
When you write if [ -e /etc/passwd ]; then . this parenthesis does not act as a shell syntax, but just a standard command with a fancy name. It is usually built into the shell, but can sometimes be implemented through /usr/bin/[. This explains much of its mysterious behavior, such as why it is sensitive to spaces: [1=2] turns out to be no more valid than ls-l/tmp.&lt;/p&gt;

&lt;p&gt;Nevertheless, where does the difference in size come from? You can compare the objdump output to see where the data fits. Here is an excerpt from objdump -h /usr/bin/[:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;              size                                          offset
15 .text         00006e82  0000000000002640  0000000000002640  00002640  2**4
16 .fini         0000000d  00000000000094c4  00000000000094c4  000094c4  2**2
17 .rodata       00001e4c  000000000000a000  000000000000a000  0000a000  2**5
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But objdump -h /usr/bin/test:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;15 .text         000068a2  0000000000002640  0000000000002640  00002640  2**4
16 .fini         0000000d  0000000000008ee4  0000000000008ee4  00008ee4  2**2
17 .rodata       00001aec  0000000000009000  0000000000009000  00009000  2**5
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we see that the .text segment (the compiled executable code) is 1504 bytes larger, while the .rodata (constant values and strings) is 864 bytes larger.&lt;/p&gt;

&lt;p&gt;The bottom line is that the increased size of the .text segment forces it to move from 8000 to 9000, crossing the page size boundary of 0x1000 (4096) and therefore shifting all other segments by 4096 bytes. It is this difference in size that we observe.&lt;/p&gt;

&lt;p&gt;The only nominal difference between [ and test is that [ requires ] as a final argument. Testing this would require a minimal amount of code, so why are those ~1500 bytes used after all?&lt;/p&gt;

&lt;p&gt;Since it's hard to review compiled binaries, I put together a copy of coreutils and compared the list of functions in each:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ diff -u &amp;lt;(nm -S --defined-only src/[ | cut -d ' ' -f 2-) &amp;lt;(nm -S --defined-only src/test | cut -d ' ' -f 2-)
--- /dev/fd/63      2021-02-02 20:21:35.337942508 -0800
+++ /dev/fd/62      2021-02-02 20:21:35.341942491 -0800
@@ -37,7 +37,6 @@
 D __dso_handle
 d _DYNAMIC
 D _edata
-0000000000000099 T emit_bug_reporting_address
 B _end
 0000000000000004 D exit_failure
 0000000000000008 b file_name
@@ -63,7 +62,7 @@
 0000000000000022 T locale_charset
 0000000000000014 T __lstat
 0000000000000014 t lstat
-0000000000000188 T main
+00000000000000d1 T main
 000000000000000b T make_timespec
 0000000000000004 d nslots
 0000000000000022 t one_argument
@@ -142,16 +141,10 @@
 0000000000000032 T umaxtostr
 0000000000000013 t unary_advance
 00000000000004e5 t unary_operator
-00000000000003d2 T usage
+0000000000000428 T usage
 0000000000000d2d T vasnprintf
 0000000000000013 T verror
 00000000000000ae T verror_at_line
-0000000000000008 D Version
-00000000000000ab T version_etc
-0000000000000018 T version_etc_ar
-000000000000042b T version_etc_arn
-000000000000002f R version_etc_copyright
-000000000000007a T version_etc_va
 000000000000001c r wide_null_string.2840
 0000000000000078 T x2nrealloc
 000000000000000e T x2realloc
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The main contributors are the version_etc* functions. What do they do?&lt;br&gt;
Let's take a look:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;/* The three functions below display the --version information the
   standard way [...]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;These are the 260 lines of expanded, internalized, conditional data formatting methods that make up the --version output. All together they take up about bc &amp;lt;&amp;lt; "ibase=16; 7A+2F+42B+18+AB+8+99" = 1592 bytes.&lt;/p&gt;

&lt;p&gt;What does it mean? It's simple. The extra 4Kb goes to this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ /usr/bin/[ --version
[ (GNU coreutils) 8.30
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later &amp;lt;https://gnu.org/licenses/gpl.html&amp;gt;.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Kevin Braunsdorf and Matthew Bradburn.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;[ --version is missing the final ], so the call is invalid and the result is determined by the implementation. GNU quietly allows version information to be output.&lt;/p&gt;

&lt;p&gt;Meanwhile, /usr/bin/test --version turns out to be a valid call and POSIX dictates that it should return success when the first parameter (--version) is a nonempty string.&lt;/p&gt;

&lt;p&gt;This difference is even mentioned in the documentation:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Note: [ is responsible for --help and --version options, while test is not.
test treats each of them simply as a non-empty string.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The puzzle is solved!&lt;/p&gt;

</description>
      <category>linux</category>
      <category>unix</category>
      <category>bash</category>
    </item>
    <item>
      <title>Front-end v/s Back-end</title>
      <author>Kaiwalya Koparkar</author>
      <pubDate>Sun, 02 May 2021 15:49:45 +0000</pubDate>
      <link>https://dev.to/kaiwalyakoparkar/front-end-v-s-back-end-2fkk</link>
      <guid>https://dev.to/kaiwalyakoparkar/front-end-v-s-back-end-2fkk</guid>
      <description>&lt;p&gt;Hello everyone, are you amongst the ones who really get confused while listening to this term. No worries today I am going to explain this to you super quickly using a story. After the end of this blog you will understand the following :&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Front-end&lt;/li&gt;
&lt;li&gt;Api's&lt;/li&gt;
&lt;li&gt;Server (Back-end)&lt;/li&gt;
&lt;li&gt;Database (Back-end)&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#pushpin-storytime"&gt;
  &lt;/a&gt;
  📌 Storytime!
&lt;/h2&gt;

&lt;p&gt;Okay! so take a daily life example of you being hungry and there's no food at home (Or you are super bored to cook one yourself). So you get your phone give an order to the delivery boy (of any food delivery application). That boy delivery boy goes to the hotel asks the manager for your order. The kitchen prepares your order and hands it over to the manager. Then the manager does the billing tasks and hands it over to the delivery boy. Then the delivery boy delivers it to you and you enjoy your food. 😃&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#now-how-is-this-story-relevant-to-frontend-and-backend"&gt;
  &lt;/a&gt;
  Now how is this story relevant to Front-end and Back-end?
&lt;/h3&gt;

&lt;p&gt;Replace the entities of this story with the techs.&lt;/p&gt;

&lt;p&gt;You -&amp;gt; Front-end&lt;br&gt;
Delivery boy -&amp;gt; API&lt;br&gt;
Hotel - Backend (Manager -&amp;gt; server , Kitchen -&amp;gt; Database)&lt;/p&gt;

&lt;p&gt;Front-end gives a call to API. Then API asks the server for the required data is received from the call. The server processes the information and fetches the data from the database. Then server returns the data to the API call. Then the frontend fetches the data from the API.&lt;/p&gt;

&lt;p&gt;Hopefully, you have got a clear picture of how this thing actually works.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;If I have explained anything wrong, please do let me know in the comments below. I am still learning and would love to improve my knowledge 😄&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#thank-you-for-reading"&gt;
  &lt;/a&gt;
  ❤️ Thank you for reading ❤️
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;🌏 Like | Follow | Share 🌏&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>todayilearned</category>
      <category>programming</category>
      <category>weeklylearning</category>
    </item>
    <item>
      <title>💪 "#ComeAtMeBro" tag suggestion and 📈 "filter by top comments" - two  quick dev.to suggestions! 💡</title>
      <author>InHuOfficial</author>
      <pubDate>Sun, 02 May 2021 15:42:07 +0000</pubDate>
      <link>https://dev.to/inhuofficial/comeatmebro-tag-suggestion-and-filter-by-top-comments-two-quick-dev-to-suggestions-44o5</link>
      <guid>https://dev.to/inhuofficial/comeatmebro-tag-suggestion-and-filter-by-top-comments-two-quick-dev-to-suggestions-44o5</guid>
      <description>&lt;p&gt;The title is a bit tongue in cheek, but I do have two serious suggestions and wanted to see what people thought!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-the-comeatmebro-tag"&gt;
  &lt;/a&gt;
  1. The "ComeAtMeBro" tag
&lt;/h2&gt;

&lt;p&gt;The idea is a tag that you can add to your posts that says "I am open to criticism, in fact I welcome it". (or better yet a checkbox you can tick when creating an article so you don't have to waste a precious tag!) &lt;/p&gt;

&lt;p&gt;This lets people know that they can make suggestions to your posts or even call you out on things you have gotten wrong and you won't delete their comment as it offended you.&lt;/p&gt;

&lt;p&gt;You see for me I find I learn best when I make an assertion ("The Earth is flat") and someone calls me out as an idiot and shows me a load of information that proves me wrong. &lt;/p&gt;

&lt;p&gt;Thanks to people correcting me I now believe, like most people, that the Earth is a sphere (although some girl keeps trying to tell me the Earth is actually an oblate spheroid! I mean she doesn't seriously think I am going to fall for that doe she? 😉)&lt;/p&gt;

&lt;p&gt;Now I am not actually suggesting we use "#ComeAtMeBro" but something more inclusive, slightly less combatitve and more descriptive like "#OpenToCriticism" or "#AllCommentsWelcome". (Although I have to admit the child in me really wants to see a feed scattered with #comeAtMeBro tags!!)&lt;/p&gt;

&lt;p&gt;This idea was brought about after a few comments I made got deleted, but in particular after I posted a comment on this article (go give the author some love as they are the sort of person we need writing on this site!!):&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/koolkishan" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V39YyZy3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--YFtqQq5H--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/521478/00d5a904-1821-4368-80d6-6a63e6f7469f.jpg" alt="koolkishan image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/koolkishan/what-is-virtual-dom-how-virtual-dom-works-what-is-reconciliation-what-is-diffing-algorithm-what-makes-react-so-fast-327a" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;What is Virtual DOM? How Virtual DOM works ? What is Reconciliation ? What is diffing algorithm? What makes React so fast ?&lt;/h2&gt;
      &lt;h3&gt;Kishan Sheth ・ Apr 27 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#react&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#node&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;My comment was deleted (the "tone" of my comment did look like I was attacking the author to be fair). Now luckily I reposted with a disclaimer at the start to say I enjoyed the article and the author left it up, but it made me wonder how many good comments (not trying to be big headed 😋) get deleted as the author is offended by them.&lt;/p&gt;

&lt;p&gt;I may be part of a dying breed but I would prefer you call me out on being wrong so that I don't spread misinformation. (something dev.to sadly has a lot of, without any mechanism other than comments to point out incorrect information it is down to people to do their own fact checking....and I am sick of looking like an a$$hole when I try and point it out...I promise I am not actually as much of an a$$hole as I appear to be in my comments! 🤣)&lt;/p&gt;

&lt;p&gt;Anyway that is idea one, a tag for people who want to engage with people who disagree / they can learn from! That leads me nicely on to idea 2:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-sort-by-most-commented"&gt;
  &lt;/a&gt;
  2. Sort by most commented
&lt;/h2&gt;

&lt;p&gt;Now this one I imagine will be more popular, I can't be the only one who wants to see "where the action is at". &lt;/p&gt;

&lt;p&gt;I might have missed it but as far as I can tell there is no way to sort posts on dev.to by "most commented".&lt;/p&gt;

&lt;p&gt;Now personally I think the comments are where the real magic happens most of the time. &lt;/p&gt;

&lt;p&gt;Someone will make a one line suggestion that completely changes the way you think about something.&lt;/p&gt;

&lt;p&gt;I also find it a great way to "get a barometer" of how people feel about something.&lt;/p&gt;

&lt;p&gt;Take this post from yesterday I wrote:&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/inhuofficial" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VQXAgM3l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--GddQJU2N--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_66%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/551686/52e35d4c-a986-401b-9bca-6ace4c8947d1.gif" alt="inhuofficial image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/inhuofficial/w1y-d2s-a11y-h2e-to-be-so-b4y-c9d-a1d-i10e-38no" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;🤷‍♂️ W1y d2s a11y h2e to be so b4y c9d a1d i10e? 👿&lt;/h2&gt;
      &lt;h3&gt;InHuOfficial ・ May  1 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#discuss&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#a11y&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#watercooler&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#codenewbie&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;There are some great insights into the problems we have in accessibility and inclusion, the sort of knowledge that I find invaluable! Now the post itself was only mildly popular (which is fine) so some people may miss it and people who want to add to the discussion might just pass it by.&lt;/p&gt;

&lt;p&gt;On the flip side if an article has 200 likes and no comments it makes me think it is a good resource to bookmark but not something that I can "get involved with" (which is great to add to my reading list depending on my mood!)&lt;/p&gt;

&lt;p&gt;More than anything though, I like a "good fight", by which I mean a productive and well structured argument between two people with opposing viewpoints, not a slanging match! Lots of comments normally means "a healthy debate" is going on (and I am aware of the #healthydebate tag, but a lot of the good debates happen where they are not intended!)&lt;/p&gt;

&lt;p&gt;A "good fight" can really be an eye opener no matter which side of the argument you personally agree with, especially when people smarter than me are arguing those points!&lt;/p&gt;

&lt;p&gt;So that is why I want an "order by most commented" option as I think it points to interesting and entertaining articles as well as seeing where the interesting discussions are.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-end"&gt;
  &lt;/a&gt;
  The end
&lt;/h2&gt;

&lt;p&gt;That is it, I only have two ideas floating around in my empty skull at the moment! &lt;/p&gt;

&lt;p&gt;I look forward to seeing what you all think!&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>watercooler</category>
      <category>healthydebate</category>
      <category>webdev</category>
    </item>
    <item>
      <title>SPACE INVADERS GAME</title>
      <author>Arwaz Khan </author>
      <pubDate>Sun, 02 May 2021 15:38:06 +0000</pubDate>
      <link>https://dev.to/arwazkhan189/space-invaders-game-2hi7</link>
      <guid>https://dev.to/arwazkhan189/space-invaders-game-2hi7</guid>
      <description>&lt;p&gt;&lt;strong&gt;Hello Dev's&lt;/strong&gt;&lt;br&gt;
Finally Completed the SPACE INVADERS Game ...&lt;br&gt;
Download the game from this link: &lt;a href="https://arwazkhan189.github.io/SPACE-INVADERS/"&gt;https://arwazkhan189.github.io/SPACE-INVADERS/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iQjxFv6N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7bbo3rajqyhl1tbhh6d2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iQjxFv6N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7bbo3rajqyhl1tbhh6d2.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Please give your feedback to improve the game.&lt;/p&gt;

</description>
      <category>python</category>
      <category>pygame</category>
      <category>spaceinvaders</category>
    </item>
  </channel>
</rss>
