<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Top 20 JavaScript tips and tricks to increase your Speed and Efficiency </title>
      <author>Tips and Tricks</author>
      <pubDate>Tue, 31 Aug 2021 10:03:52 +0000</pubDate>
      <link>https://dev.to/csshacker/top-20-javascript-tips-and-tricks-to-increase-your-speed-and-efficiency-4of9</link>
      <guid>https://dev.to/csshacker/top-20-javascript-tips-and-tricks-to-increase-your-speed-and-efficiency-4of9</guid>
      <description>&lt;h3&gt;Convenient and useful techniques to reduce the lines of code and pace up your Dev Work!&lt;/h3&gt;
&lt;p&gt;In our daily tasks, we get to write functions such as sorting, searching, finding unique values, passing parameters, swapping values etc, so here I present my list of shorthand techniques to write all of them as a Pro!‚úåüèª&lt;/p&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WgxQe1g9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vh2m04o3fgw3a6i8bzha.jpg"&gt;&lt;img alt="Increase Your Performance" src="https://res.cloudinary.com/practicaldev/image/fetch/s--ftNfvGUp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--WgxQe1g9--/c_limit%252Cf_auto%252Cfl_progressive%252Cq_auto%252Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vh2m04o3fgw3a6i8bzha.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;JavaScript is truly an awesome languageüíõ to learn and work with. And there can be more than one approach to reach to the same solution for given problem. In this article, we will discuss only the quickest ones.üöÄ&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;These approaches will definitely help you in:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Reducing the number of LOC(lines of code),&lt;/li&gt;
&lt;li&gt;Coding Competitions,&lt;/li&gt;
&lt;li&gt;Hackathons or&lt;/li&gt;
&lt;li&gt;Other time bound tasks.‚è±&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Most of these JavaScript Hacks uses techniques from ECMAScript6(ES2015) onwards, though the latest version is ECMAScript11(ES2020).&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note: All below tricks have been tested on the Console of Google Chrome.&lt;/em&gt;&lt;/p&gt;
&lt;br&gt;Read More: &lt;span&gt;&lt;b&gt;&lt;a href="https://www.codelivly.com/top-20-javascript-tips-and-tricks/"&gt;Top 20 JavaScript tips and tricks to increase your Speed and Efficiency&lt;/a&gt;&lt;/b&gt;&lt;/span&gt;

</description>
    </item>
    <item>
      <title>Web Designer Roadmap 2021</title>
      <author>Tips and Tricks</author>
      <pubDate>Tue, 31 Aug 2021 10:00:15 +0000</pubDate>
      <link>https://dev.to/csshacker/web-designer-roadmap-2021-4i8a</link>
      <guid>https://dev.to/csshacker/web-designer-roadmap-2021-4i8a</guid>
      <description>&lt;h2 id="what-is-a-web-designer"&gt;What is a Web Designer?&lt;/h2&gt;
&lt;p&gt;Are you both creative and technically inclined? You may want to consider a career as a web designer!&lt;/p&gt;
&lt;p&gt;Web designers build or redesign websites. They understand what it takes to make a website functional and easy to use, but also understand what is needed to make it aesthetically appealing to the user.&lt;/p&gt;
&lt;p&gt;Web design is a rapidly growing industry, as digital media has become part of everyone's lives and people rely on the web for their communications, information, shopping, social life, and more.&lt;/p&gt;
&lt;p&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/web-designers-roadmap-2021/&amp;amp;ved=2ahUKEwjqlebL7qryAhUF7HMBHVCiCxQQFnoECBoQAQ&amp;amp;usg=AOvVaw2Oo-ikwNXhEKOFAMaulAH4"&gt;Web Designer Roadmap&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;









</description>
    </item>
    <item>
      <title>AWS Batch</title>
      <author>Ajit Singh</author>
      <pubDate>Tue, 31 Aug 2021 09:57:00 +0000</pubDate>
      <link>https://dev.to/this-is-learning/aws-batch-ai5</link>
      <guid>https://dev.to/this-is-learning/aws-batch-ai5</guid>
      <description>&lt;p&gt;AWS Batch enables developers, scientists, and engineers to easily and efficiently run hundreds of thousands of batch computing jobs on AWS. AWS Batch dynamically provisions the optimal quantity and type of compute resources (e.g., CPU or memory optimized instances) based on the volume and specific resource requirements of the batch jobs submitted.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-a-batch-job"&gt;
  &lt;/a&gt;
  what is a batch job?
&lt;/h2&gt;

&lt;p&gt;A batch job is a job with a start and end to it as opposed to a continuous job that runs 24X7&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#aws-batch-features"&gt;
  &lt;/a&gt;
  AWS batch features
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Batch processing service at any scale.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It provision the right amount of EC2 instances or Spot instances for processing the batch job based on the volume and the requirements&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You submit or schedule batch jobs and AWS manages the rest&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;There run as Docker images.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#use-cases"&gt;
  &lt;/a&gt;
  Use cases
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Pulling data form somewhere at night&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Backups at midnight&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Financial data processing each day&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>aws</category>
      <category>cloud</category>
      <category>devops</category>
    </item>
    <item>
      <title>Best CSS Shorthand properties </title>
      <author>Tips and Tricks</author>
      <pubDate>Tue, 31 Aug 2021 09:56:43 +0000</pubDate>
      <link>https://dev.to/csshacker/best-css-shorthand-properties-381p</link>
      <guid>https://dev.to/csshacker/best-css-shorthand-properties-381p</guid>
      <description>&lt;h1&gt;Shorthand properties&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Shorthand properties&lt;/em&gt;&lt;/strong&gt;¬†are CSS properties that let you set the values of multiple other CSS properties simultaneously. Using a shorthand property, you can write more concise (and often more readable) style sheets, saving time and energy.&lt;/p&gt;
&lt;p&gt;The CSS specification defines shorthand properties to group the definition of common properties acting on the same theme. For instance, the CSS¬†&lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/background"&gt;&lt;code&gt;background&lt;/code&gt;&lt;/a&gt;¬†property is a shorthand property that's able to define the values of¬†&lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/background-color"&gt;&lt;code&gt;background-color&lt;/code&gt;&lt;/a&gt;,¬†&lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/background-image"&gt;&lt;code&gt;background-image&lt;/code&gt;&lt;/a&gt;,¬†&lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/background-repeat"&gt;&lt;code&gt;background-repeat&lt;/code&gt;&lt;/a&gt;, and¬†&lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/background-position"&gt;&lt;code&gt;background-position&lt;/code&gt;&lt;/a&gt;. Similarly, the most common font-related properties can be defined using the shorthand¬†&lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/font"&gt;&lt;code&gt;font&lt;/code&gt;&lt;/a&gt;, and the different margins around a box can be defined using¬†&lt;span&gt;¬†the&lt;/span&gt;&lt;span&gt;¬†&lt;/span&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/margin"&gt;&lt;code&gt;margin&lt;/code&gt;&lt;/a&gt;&lt;span&gt;¬†&lt;/span&gt;&lt;span&gt;shorthand.¬†¬†&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/best-css-shorthand-properties/&amp;amp;ved=2ahUKEwjIoPCc99DyAhU7-nMBHUxQDrYQFnoECEAQAQ&amp;amp;usg=AOvVaw23jKjWtvmnvAtDmQi7vhZp&amp;amp;cshid=1630058051965"&gt;CSS Shorthand properties for Web Developer&lt;/a&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Trending Javascript Projects for Frontend Developer on GitHub</title>
      <author>Tips and Tricks</author>
      <pubDate>Tue, 31 Aug 2021 09:54:26 +0000</pubDate>
      <link>https://dev.to/csshacker/trending-javascript-projects-for-frontend-developer-on-github-33c8</link>
      <guid>https://dev.to/csshacker/trending-javascript-projects-for-frontend-developer-on-github-33c8</guid>
      <description>&lt;p&gt;The best way to learn a new programming language is to build projects.&lt;/p&gt;
&lt;p&gt;I have created a list of 40 beginner friendly project tutorials in Vanilla JavaScript, React, and TypeScript.&lt;/p&gt;
&lt;p&gt;My advice for tutorials would be to watch the video, build the project, break it apart and rebuild it your own way. Experiment with adding new features or using different methods.&lt;/p&gt;
&lt;p&gt;That will test if you have really learned the concepts or not.&lt;/p&gt;
&lt;p&gt;You can click on any of the projects listed below to jump to that section of the article.&lt;/p&gt;
&lt;br&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/the-best-beginner-javascript-projects-for-2021/&amp;amp;ved=2ahUKEwikjqzp_tryAhW9ppUCHbDuBT8QtwJ6BAgkEAE&amp;amp;sqi=2&amp;amp;usg=AOvVaw16eIeKYPB8xzH6B1hMi2E6"&gt;Trending Javascript Projects for Frontend Developer¬†on GitHub&lt;/a&gt;&lt;/b&gt;

</description>
    </item>
    <item>
      <title>Web Developer Roadmap 2021</title>
      <author>Tips and Tricks</author>
      <pubDate>Tue, 31 Aug 2021 09:51:10 +0000</pubDate>
      <link>https://dev.to/csshacker/web-developer-roadmap-2021-39dg</link>
      <guid>https://dev.to/csshacker/web-developer-roadmap-2021-39dg</guid>
      <description>&lt;p&gt;&lt;br&gt;A web developer looking at some code on his computer screenHow to Become a Web Developer in 2Technology plays a huge role in our daily lives, from the simplest of apps to the most groundbreaking inventions. Every website or piece of software that we encounter has been built by a web developer‚Äîbut what exactly is web development, and what do they do‚Äîall of this will be answered in this guide to how to become a web developer.&lt;br&gt;To the outside eye, it can seem like a complicated, confusing and somewhat inaccessible field. So, to shed some light on this fascinating industry, we‚Äôve put together the ultimate introduction to web development and what it takes to become a fully-fledged web developer.&lt;br&gt;In this guide, we‚Äôll go through the basics of web development in detail, and show you the essential skills and tools you‚Äôll need to break into the industry. If you decide web development is for you, the next step is to start learning those essential skills, which you can do in this free, online short course designed for beginners.&lt;br&gt;&lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/backend-web-developer-roadmap/&amp;amp;ved=2ahUKEwjOmpvK2NLyAhVJ7HMBHdogAs0QFnoECAwQAQ&amp;amp;usg=AOvVaw0wwwwOEMbJgRlh0aWNwnCj"&gt;Backend Developer Roadmap¬†&lt;/a&gt;&lt;/b&gt;&lt;br&gt;&lt;b&gt;&lt;a href="https://www.codelivly.com/frontend-web-developer-roadmap/"&gt;Frontend Developer Roadmap¬†&lt;/a&gt;¬†&lt;/b&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;b&gt;&lt;a href="https://www.codelivly.com/web-developer-roadmap-2021/"&gt;Web Developer Roadmap 2021&lt;/a&gt;¬†&lt;/b&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;b&gt;&lt;a href="https://www.codelivly.com/web-designers-roadmap-2021/"&gt;Web Designer Roadmap 2021&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Exploring Dart Collection Types : Part 1 ‚Äî Lists
</title>
      <author>Motabar Javaid</author>
      <pubDate>Tue, 31 Aug 2021 09:08:41 +0000</pubDate>
      <link>https://dev.to/iizmotabar/exploring-dart-collection-types-part-1-lists-3ocj</link>
      <guid>https://dev.to/iizmotabar/exploring-dart-collection-types-part-1-lists-3ocj</guid>
      <description>&lt;p&gt;Collections in any programming language are fundamentals.It allows us to store, retrieve data in the form of a collection per say. Just like in any other programming lanaguage, Dart provides us with built-in Collection types including Lists, Set, Map and Queue and more.&lt;/p&gt;

&lt;p&gt;All the collection types are available with &lt;a href="https://api.dart.dev/stable/2.13.4/dart-collection/dart-collection-library.html"&gt;dart:collection&lt;/a&gt; package. One thing that is common between these collection types is that all of them implements an Iterable. An Iterable is just another object capable of returning its element in iterations or in easy words, one-by-one.&lt;/p&gt;

&lt;p&gt;We‚Äôll go through each of the Collection one by one. Let‚Äôs start off with the probably the most common amongst all, The List Collection Type.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#list"&gt;
  &lt;/a&gt;
  List:
&lt;/h1&gt;

&lt;p&gt;List, also known as an Array in some languages is simply is an ordered collection of objects which has a length. The list can be iterated through indices, starting off with the zero index and ending at length-1. To define a list in Dart, we enclose its elements with square brackets []. Let‚Äôs see that in code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
void main()
{

  List listOfFruits = ['Apple', 'Orange', 'Banana', 'Strawberry', 'Pineapple'];
  //We can also have a list having elements of different types.
  List listOfDifferentTypes = ['Bag', 1, 4, 'Mouse', 3.14 ]; 

  //To print the list as a whole, we can do: 
  print(listOfFruits);  //Returns the whole list of fruits

  //Lets say we want to print some specific element from the list. For that, we can make use of the index as such:
  print(listOfDifferentTypes[0]); //Returns 'Bag'as its the first element in the list.

}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If we want our List to be of specific types, we can restrict the element types using the angle brackets&amp;lt;&amp;gt; as such:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
void main()
{
  // The list will only contain the elements of Integer type.
  List&amp;lt;int&amp;gt; listOfIntegers = [1,2,4,5,6,7];

  // The list is restricted to only elements of boolean type.
  List&amp;lt;bool&amp;gt; listOfBooleans = [false, true, true, true];

  // We can also have a list of elements having different types by setting 
  // its type to dynamic as such
  List&amp;lt;dynamic&amp;gt; listOfDynamicElements = ["String", 12, 45];

  //We can still use the indices to get a specific element from the list
  print(listOfIntegers[3]);  //Returns '5' .

 //To get last element from the list we can use the length method,
 // and then subtract 1 from it as follows:

  print(listOfDynamicElements[listOfDynamicElements.length - 1]); 

}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let‚Äôs get to the interesting part, We can not only create lists and iterate through them to get the element we want but we can also perform operations on it. Dart Lists offers a bunch of functions. Let‚Äôs go through them one by one:&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#reversed"&gt;
  &lt;/a&gt;
  reversed():
&lt;/h1&gt;

&lt;p&gt;Let‚Äôs start things off with the reverse() method. I remember, when I started learning Programming with an OG language like C, how complex it was just to reverse a list or an Array as I should say. Dart makes the process so much easier with its reverse() method. You just call it on a List and it returns a reversed version back to you. That simple. Let‚Äôs have a look at the code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
void main()
{ 
  //Declaring a list of integers
  List&amp;lt;int&amp;gt; listOfIntegers = [1,2,4,5,6,7,8,9];

  //Reversing the list and storing it in a variable
  var reversedList = listOfIntegers.reversed;

  //Let's print the reversed String
  print(reversedList);  //returns [9,8,7,6,5,4,3,2,1]



}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#shuffle"&gt;
  &lt;/a&gt;
  shuffle():
&lt;/h1&gt;

&lt;p&gt;The shuffle method like the name tells, shuffles a given list. The method takes an optional parameter where you can define how you want to shuffle the list. Bear in mind, since the Shuffle method does not returns anything, It manipulates the original List on which it is being called on. Let‚Äôs see the shuffle() method in action:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
void main()
{ 
  //Declaring a list of integers
  List&amp;lt;String&amp;gt; listOfNames = ['John', 'Maisie', 'Barack', 'Bob'];

 //Shuffles the listOfNames List
  listOfNames.shuffle();

  print(listOfNames);  // prints a new shuffled list everytime it is called 

}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#sublist"&gt;
  &lt;/a&gt;
  subList():
&lt;/h1&gt;

&lt;p&gt;The subList() method returns a new list SubList from the List of elements on which it is called on. The subList() method takes in two parameters: start and end. The sublist contains elements starting from start (inclusive) and ends at ending index with that index being exclusive. Let‚Äôs dive into the code to see its magic:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
void main()
{ 
  List footballClubs = ["FC Barcelona", 'Real Madrid', "Bayern Munich", "PSG", "Manchester City", "Juventus"];

  //Returns the elements between from 0 index(inclding 0 index) to 3 (excluding element at index 3)

  print(footballClubs.sublist(0, 3));  //Returns ["FC Barcelona", "Real Madrid", "Bayern Munich"]

}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#asmap"&gt;
  &lt;/a&gt;
  asMap():
&lt;/h1&gt;

&lt;p&gt;asMap() returns the Map(A key-value pair representation of data) - representation of the given String. In that Map, the indices serve as the keys and the values are the corresponding elements of the List. We can further call the getter methods on asMap().keys if we just want to get the keys or asMap().values if we want to only get the values. Let‚Äôs have a look at the method in code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
void main()
{ 

  List footballClubs = ["FC Barcelona", 'Real Madrid', "Bayern Munich", "PSG", "Manchester City", "Juventus"];

  //If we want the whole map to be printed, we just call the asMap() function
  print(footballClubs.asMap()); //prints the whole Map as: {0: FC Barcelona, 1: Real Madrid, 2: Bayern Munich, 3: PSG, 4: Manchester City, 5: Juventus}

  //To get just the keys or just the values,we call the corresponding getter as:

  print(footballClubs.asMap().keys); //returns just the keys as: (0, 1, 2, 3, 4, 5)

  print(footballClubs.asMap().values); //returns just the values as:  (FC Barcelona, Real Madrid, Bayern Munich, PSG, Manchester City, Juventus)

}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#fold"&gt;
  &lt;/a&gt;
  fold():
&lt;/h1&gt;

&lt;p&gt;The return value of fold() function is a single value. The value is determined by the function which is being performed with the fold() function. For instance, It can be used to get a sum of elements in a list as:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
void main()
{ 
 var listOfNumbers = [2,4,6];

 int result = listOfNumbers.fold(5, (i, j) =&amp;gt; i+j);

 print('Resultant value is: ${result}'); //returns 17

}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Fold takes two parameters, the initialValue and a function. In this example, we iterate through the list with 5 being the initialValue and add up list elements into the initialValue so that:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;In the first iteration, the element at Index 0 is 2, so 5+2 = 7 which now the new value of i.&lt;/li&gt;
&lt;li&gt;In the second iteration i+j, 7+4 = 11 =i;&lt;/li&gt;
&lt;li&gt;In the third of i+j, 11+6= 17 and there is no more element left in the list so the function evaluatation completes and it returns 17.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#isempty-amp-isnotempty"&gt;
  &lt;/a&gt;
  isEmpty() &amp;amp; isNotEmpty():
&lt;/h1&gt;

&lt;p&gt;isEmpty() and isNotEmpty() are two very important functions on Dart Lists which as their name suggests checks if a List is Empty or if a List is not empty respectively.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;isEmpty(): It returns true is the list is empty and false otherwise.&lt;/li&gt;
&lt;li&gt;isNotEmpty(): In case of isNotEmpty(), the situation is other way round, where is returns true in case of list having some elements and false otherwise.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
void main()
{ 
 List&amp;lt;int&amp;gt; listOfNumbers = [];

 List&amp;lt;int&amp;gt; anEmptyList =  [2,4,6,8,10];

 listOfNumbers.isEmpty ? print('A lie!') : print('A nobel man indeed.'); //prints 'A lie!' 
 if (anEmptyList.isNotEmpty)  //prints 'Am I a joke to you?'
 {
   print('Am I a joke to you?');
 }
 else
 {
    print('I see a man of virtue');
 }

}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#add"&gt;
  &lt;/a&gt;
  add():
&lt;/h1&gt;

&lt;p&gt;add() is the method that is used to add elements into the list. It takes in the element as a parameter and adds it up into the list on which it is called on as:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
void main()
{ 
 List&amp;lt;int&amp;gt; listOfNumbers = [];

  listOfNumbers.add(1); //adds 1 to the empty listOfNumber List
  listOfNumbers.add(2); //adds 2 so the list becomes [1,2]
  listOfNumbers.add(3); //adds 3 so the list becomes [1,2,3]
  listOfNumbers.add(4); //adds 4, list becomes [1,2,3,4]
  listOfNumbers.add(5); //list is now [1,2,3,4,5]

  print(listOfNumbers); //prints [1,2,3,4,5]


}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#reduce"&gt;
  &lt;/a&gt;
  reduce():
&lt;/h1&gt;

&lt;p&gt;reduce() method works pretty much the same as the fold method. The only difference between the two is that fold() method has an initial value while the reduce method does not. Let‚Äôs see that in code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
void main()
{ 
 List&amp;lt;int&amp;gt; listOfNumbers = [1,2,3,4,5];

  // We call reduce on the listOfNumbers list and call fold, which multiplies 
  // the elements within the list one by one and return a single value 
  var returnValue = listOfNumbers.reduce((i,j)=&amp;gt; i*j);

  print(returnValue);  // returns 120 as (1*2)*(2*3)*(6*4)*(24*5) = 120

}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#any"&gt;
  &lt;/a&gt;
  any():
&lt;/h1&gt;

&lt;p&gt;any() is the method that takes in a function as a parameter and based on that function returns a boolean in the form or a true or a false. Let‚Äôs suppose we want to check if the list contain any negative number. We can use any() in that case as:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
void main()
{ 
 List&amp;lt;int&amp;gt; listOfNumbers = [1,2,3,4,5];

  //Checking if there is any negative number in the list at any index
  var returnValue = listOfNumbers.any((element)=&amp;gt; element.isNegative);

  print(returnValue);  // prints false as there is no negative number in the list
}


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#every"&gt;
  &lt;/a&gt;
  every():
&lt;/h1&gt;

&lt;p&gt;every() works pretty much the same as any. The only difference is that any evaulates to a boolean value if even a element satisfies the condition but in case of every(), every element in the list has to satisfy the condition. Let‚Äôs see that in code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
void main()
{ 
 List&amp;lt;int&amp;gt; listOfNumbers = [1,2,3,4,5];

  //Checking if every element of the list is an even number
  var returnValue = listOfNumbers.every((element)=&amp;gt; element.isEven);

  print(returnValue);  // prints false as there are odd numbers in the list aswell.
}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#getrange"&gt;
  &lt;/a&gt;
  getRange():
&lt;/h1&gt;

&lt;p&gt;As the name suggests, the getRange method returns elements from the list which lie in the specific range. The range function takes in two parameters: start and end where start is inclusive and end is exclusive. Since the range function returns an iterable, we call toList() to typeCast the Iterable to a List as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
void main()
{ 
  List listOfColors = ['Red','Green','Blue','Yellow','Orange','Violet','Indigo','Black'];

  // getRange will only get the elements from index 1(including element at that index) to index 4 (while excluding element at index 4)
  print(listOfColors.getRange(1,4).toList()); // prints a list of [Green, Blue, Yellow]

}


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#replacerange"&gt;
  &lt;/a&gt;
  replaceRange():
&lt;/h1&gt;

&lt;p&gt;Need help updating an element within a specific range? The replaceRange() method got you covered. The method takes in 3 parameters, 2 of which are just like getRange() where its the start and end point of range while the third being the value that is to be replaced in the place of the desired element.The element that lies between the two ranges gets replaced. If there is no element withtin the two ranges, the element at start gets replaced. Let‚Äôs see that in an example as:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
void main()
{ 
  List listOfColors = ['Red','Green','Blue','Yellow','Orange','Violet','Indigo','Black'];
  //replace the element between range(3,4) with purple, and that is Yellow in this case so, yellow is replaced with Purple
  listOfColors.replaceRange(3,4,['Purple']); 
  print(listOfColors); //prints [Red, Green, Blue, Purple, Orange, Violet, Indigo, Black]
}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#firstwhere"&gt;
  &lt;/a&gt;
  firstWhere():
&lt;/h1&gt;

&lt;p&gt;firstWhere() is the method that takes in a function as a paramater and returns the first element where the condition is satisfied as:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;

void main()
{ 
  List listOfColors = ['Red','Green','Blue','Yellow','Orange','Violet','Indigo','Black'];

  // returns the first element where the pattern matches for 'ang' and the list contains Orange that matches the pattern
  print(listOfColors.firstWhere((element)=&amp;gt; element.contains('ang'),),); //prints Orange as it satifies the condition


}


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#first-amp-last"&gt;
  &lt;/a&gt;
  first() &amp;amp; last():
&lt;/h1&gt;

&lt;p&gt;Like the name speaks for itself, the first() method is used to get the first element from the list and the last() method returns the last element from the list. Let‚Äôs see that in code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
void main()
{ 
  List listOfColors = ['Red','Green','Blue','Yellow','Orange','Violet','Indigo','Black'];

  //Returns the first element from the list
  print(listOfColors.first); //returns 'Red'

  //returns the last element from the list
  print(listOfColors.last); // returns 'Black'


}


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That‚Äôs all for now Folks! Thanks for reading this article ‚ù§Ô∏è Will soon be posting the next parts. Stay tuned!&lt;/p&gt;

&lt;p&gt;Feel free to post any queries or corrections you think are required ‚úî&lt;br&gt;
Do leave a feedback so I can improve on my content. Thankyou! üòÉ&lt;br&gt;
If you‚Äôre interested, here are some of my other here on &lt;a href="https://dev.to/iizmotabar/the-beauty-of-dart-string-methods-1nje"&gt;Dart String Methods&lt;/a&gt;&lt;/p&gt;

</description>
      <category>flutter</category>
      <category>dart</category>
      <category>android</category>
      <category>programming</category>
    </item>
    <item>
      <title>Stats for all stories
‚ùå10 LIES that COMPANIES tell about CYBERSECURITY</title>
      <author>Dotnetsafer</author>
      <pubDate>Tue, 31 Aug 2021 08:59:49 +0000</pubDate>
      <link>https://dev.to/dotnetsafer/stats-for-all-stories-10-lies-that-companies-tell-about-cybersecurity-nd1</link>
      <guid>https://dev.to/dotnetsafer/stats-for-all-stories-10-lies-that-companies-tell-about-cybersecurity-nd1</guid>
      <description>&lt;p&gt;How many times have we heard:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;‚ÄúOur employees know about cibersecurity‚Äù üòé&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;or better yet‚Ä¶&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;‚ÄúWe are a small company, they will not hack us‚Äù ü§ì&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tell me &lt;strong&gt;HOW MANY TIMES??&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The other question I ask myself is:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-do-many-companies-go-bankrupt-after-a-cyber-attack-wasnt-it-that-they-had-everything-under-control"&gt;
  &lt;/a&gt;
  Why do many companies go bankrupt after a cyber attack? Wasn‚Äôt it that they had ‚Äúeverything under control‚Äù? ü§î
&lt;/h2&gt;

&lt;p&gt;These are one of the few &lt;strong&gt;lies&lt;/strong&gt; that companies tell about cybersecurity. These lies are great for self-delusion and great for cybercriminals.&lt;/p&gt;

&lt;p&gt;Cyber attacks are nothing new and with the arrival of the pandemic they have increased a lot. The reason for this is simple: &lt;strong&gt;Businesses have gone the digitization path with outdated security measures.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Another reason is that although it has been more than a year and a half since the beginning of the pandemic, many employees prefer to continue telecommuting while the company continues to invest the same &lt;strong&gt;OR LESS&lt;/strong&gt; in its cybersecurity plan despite being an easier target for an attacker.&lt;/p&gt;

&lt;p&gt;The severity is so great that according to data from Sophos, one of the world‚Äôs leading cybersecurity companies and collected by the startup NUUBB, specialized in cloud services for companies, shows the &lt;strong&gt;top 10 reasons why companies do not invest in cybersecurity.&lt;/strong&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#we-are-a-small-company-i-dont-think-we-are-the-target-of-a-hacker"&gt;
  &lt;/a&gt;
  We are a small company, I don‚Äôt think we are the target of a Hackerü§ì
&lt;/h2&gt;

&lt;p&gt;This is the &lt;strong&gt;first lie&lt;/strong&gt; that companies tell to deceive themselves. Most of the organizations that have been victims of cyberattacks are precisely because they believe that they are not ‚Äúattractive‚Äù to an attacker. The reality is that &lt;strong&gt;ANY&lt;/strong&gt; company (both large and small) with which it has a minimum of digital presence, is already a &lt;strong&gt;good target&lt;/strong&gt; for a cybercriminal.&lt;/p&gt;

&lt;p&gt;Another reason is that most small business &lt;strong&gt;cyberattacks are not carried out by professional hackers&lt;/strong&gt;, but by ‚Äúopportunists‚Äù looking for easy prey, such as small companies that have a low cybersecurity investment believing that &lt;strong&gt;they are not attractive to a cybercriminal.&lt;/strong&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#we-dont-need-advanced-security-technologies-installed-everywhere"&gt;
  &lt;/a&gt;
  We don‚Äôt need advanced security technologies installed everywhere ü§ì
&lt;/h2&gt;

&lt;p&gt;Many IT teams still believe that security software is more than enough to stop attacks and they don‚Äôt need security for their servers. The reality is that the list of attack techniques that try to avoid detection by IT security teams is growing. Some of the clearest examples are &lt;strong&gt;social engineering, memory injected malware, compressed malicious code&lt;/strong&gt; or &lt;strong&gt;‚Äúfileless‚Äù malware attacks.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Another bad habit is to leave the servers unprotected. The reality of this is that &lt;strong&gt;servers are the main target&lt;/strong&gt; of cyber attackers, since it would simply be enough for them to steal access credentials with social engineering. And this doesn‚Äôt just apply to Windows, in fact, cybercriminals often install backdoors on Linux machines to use as safe havens and maintain access to a target‚Äôs network.&lt;/p&gt;

&lt;p&gt;For all these reasons, &lt;strong&gt;cloud experts&lt;/strong&gt; continue to insist that, even having security policies, an antivirus, a firewall and a 24/7 operations center ‚Ä¶ the probability that a cyber attacker will find a way to hack the system, &lt;strong&gt;is high.&lt;/strong&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#we-have-very-good-security-policies"&gt;
  &lt;/a&gt;
  We have very good security policiesü§ì
&lt;/h2&gt;

&lt;p&gt;Clearly a company &lt;strong&gt;must have&lt;/strong&gt; security and user policies. But they must be reviewed and updated every time changes are made or new devices connected to the network are added. The best way to verify these policies, experts say, is to test them using control sessions, pentesting tests, and tests of disaster recovery plans.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#servers-can-be-protected-by-changing-the-service-ports-and-with-double-authentication"&gt;
  &lt;/a&gt;
  Servers can be protected by changing the service ports and with double authentication ü§ì
&lt;/h2&gt;

&lt;p&gt;Yes, we know that the &lt;strong&gt;RDP&lt;/strong&gt; default port is &lt;strong&gt;3389&lt;/strong&gt;, that the &lt;strong&gt;SSH&lt;/strong&gt; port is &lt;strong&gt;22&lt;/strong&gt; and that the &lt;strong&gt;SMB&lt;/strong&gt; port is &lt;strong&gt;445&lt;/strong&gt;. At first glance, changing that default port seems like a VERY good way to prevent attackers from finding open ports, But reality is not like that.&lt;/p&gt;

&lt;p&gt;Computer or network scans will identify any open services, regardless of port. Let‚Äôs see an example üëá&lt;/p&gt;

&lt;p&gt;We are going to use the &lt;strong&gt;nmap&lt;/strong&gt; tool to scan a computer on our network to see what it returns.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;nmap &lt;span class="nt"&gt;-sS&lt;/span&gt; 192.168.1.200
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wo3wnvxz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/690/1%2A72Kff823KOWJemxgtxuEEg.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wo3wnvxz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/690/1%2A72Kff823KOWJemxgtxuEEg.jpeg" alt="nmap"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We can see that in 40 seconds, &lt;strong&gt;nmap&lt;/strong&gt; has scanned the entire range of ports, returning only the open ones.&lt;/p&gt;

&lt;p&gt;This change the default ports, it is only a waste of time since the level of protection it offers is null.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#we-block-ips-from-russia-china-and-north-korea-that-seem-dangerous"&gt;
  &lt;/a&gt;
  We block IPs from Russia, China and North Korea that seem dangerous ü§ì
&lt;/h2&gt;

&lt;p&gt;Have you heard of &lt;strong&gt;Proxy&lt;/strong&gt; or &lt;strong&gt;VPN?&lt;/strong&gt; Their main function is to avoid the direct connection of the user with the server, that is, they allow to &lt;strong&gt;hide the user‚Äôs IP&lt;/strong&gt; so that the server to which they are connecting cannot know it.&lt;/p&gt;

&lt;p&gt;This would allow an attacker from Russia (for example) to connect to a VPN by obtaining an IP address from another country, so blocking would no longer do any good.&lt;/p&gt;

&lt;p&gt;Besides, &lt;strong&gt;blocking IPs from some countries is unlikely to cause any harm&lt;/strong&gt;, but it could give a false sense of security. Cybercriminals can be found anywhere in the world, with access points that include the US, the Netherlands, and the rest of Europe.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#we-have-updated-backups-in-case-of-ransomware"&gt;
  &lt;/a&gt;
  We have updated backups in case of Ransomware ü§ì
&lt;/h2&gt;

&lt;p&gt;It is clear that backups are very important for the company and above all update them on a daily basis. The problem comes when in most companies, those backup copies are connected to the network. With that they are vulnerable to any Ransomware that can erase or encrypt them. In this case, from &lt;strong&gt;Dotnetsafer&lt;/strong&gt; we always recommend following the &lt;strong&gt;3:2:1 SYSTEM&lt;/strong&gt; üëá&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;3&lt;/strong&gt; copies of everything&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Using &lt;strong&gt;2&lt;/strong&gt; different systems&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Of which &lt;strong&gt;1&lt;/strong&gt; is always disconnected from the network&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#our-workers-know-about-security"&gt;
  &lt;/a&gt;
  Our workers know about securityü§ì
&lt;/h2&gt;

&lt;p&gt;According to the State of Ransomware 2021, &lt;strong&gt;22% of organizations&lt;/strong&gt; believe they will be affected by ransomware in the next 12 months because it is difficult to prevent end users from compromising security.&lt;/p&gt;

&lt;p&gt;The easiest techniques are &lt;strong&gt;phishing emails and social engineering&lt;/strong&gt;. Many times these messages are handwritten and addressed to the right person.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Will a worker really know how to detect that message among the thousands that can reach him per month? ü§î&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h2&gt;
  &lt;a href="#we-have-recovery-systems-in-case-of-ransomware"&gt;
  &lt;/a&gt;
  We have recovery systems in case of Ransomware ü§ì
&lt;/h2&gt;

&lt;p&gt;Attackers today &lt;strong&gt;make far fewer mistakes&lt;/strong&gt; and the encryption process has improved, so relying on experts to find a loophole that can undo the damage is extremely rare. Automatic backups such as Windows Volume Shadow Copies are also removed by most modern ransomware and &lt;strong&gt;overwrite the original data stored on the disk&lt;/strong&gt;, making recovery impossible beyond ransom payment.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#we-can-pay-the-ransom-of-a-ransomware"&gt;
  &lt;/a&gt;
  We can pay the ransom of a Ransomware ü§ì
&lt;/h2&gt;

&lt;p&gt;Other data emerging from the 2021 ransomware state, a ransom-paying organization recovers on average around 65% of its data. A meager 8% recovered all their data and 29% recovered less than half. Therefore, paying the ransom, even when it seems like the easiest option and is covered by the cyber insurance policy, is not an easy solution to recover. Similarly, restoring data is only part of the recovery process. In most cases, ransomware &lt;strong&gt;completely disables&lt;/strong&gt; computers, and software and systems must be rebuilt from scratch before data can be restored.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#if-we-survive-a-ransomware-we-will-be-fine"&gt;
  &lt;/a&gt;
  If we survive a Ransomware we will be fine ü§ì
&lt;/h2&gt;

&lt;p&gt;Ransomware is just the point where criminals want the company to know that they are there and what they have done. Adversaries have likely been on a network for days, before &lt;strong&gt;launching ransomware, exploring, disabling or deleting backups, finding machines&lt;/strong&gt; with high-value data or applications to target for encryption, &lt;strong&gt;deleting information&lt;/strong&gt;, and &lt;strong&gt;installing payloads&lt;/strong&gt;. additional tools such as rear doors. Maintaining a presence on the victim‚Äôs networks allows attackers to launch a second attack if they choose.&lt;/p&gt;




&lt;p&gt;In the words of &lt;strong&gt;Nicolas Blasyk&lt;/strong&gt;, CEO of &lt;strong&gt;NUUBB&lt;/strong&gt;, ‚Äúit is very important to be clear that we live with cybercriminals, becoming more present and stronger after the pandemic, taking advantage of those security gaps that SMEs have suffered due to the forced acceleration of digitization. At NuuBB We believe it is essential to raise the awareness of employees about the types of attacks they may suffer, since some of them we can avoid ourselves, such as phishing, malicious emails that most of the time we do not realize, we click on the link and we fall into the trap. One of the best solutions to prevent these attacks that we always recommend is the outsourced Backup service with data recovery ‚Äú.&lt;/p&gt;

</description>
      <category>cybersecurity</category>
      <category>security</category>
      <category>dotnet</category>
      <category>ransomware</category>
    </item>
    <item>
      <title>Show me your main.dart - Flutter research </title>
      <author>Keff</author>
      <pubDate>Tue, 31 Aug 2021 08:56:14 +0000</pubDate>
      <link>https://dev.to/nombrekeff/show-me-what-you-got-in-your-main-dart-4l15</link>
      <guid>https://dev.to/nombrekeff/show-me-what-you-got-in-your-main-dart-4l15</guid>
      <description>&lt;p&gt;Do you work on a Flutter project? If so, please share your &lt;code&gt;main.dart&lt;/code&gt; file with me (&lt;em&gt;if you want and can&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;I'm researching how people organize their &lt;code&gt;main.dart&lt;/code&gt; files for a new post for my series &lt;a href="https://dev.to/nombrekeff/series/14292"&gt;Let's learn Flutter&lt;/a&gt;. I might want to include some of the entries in the post (&lt;em&gt;and credit you of course&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;So, if you're up to it, please share you main.dart file and a little overview on why you organized it that way. &lt;/p&gt;

</description>
      <category>dart</category>
      <category>flutter</category>
    </item>
    <item>
      <title>How to Filter an Array with JavaScript ‚òï</title>
      <author>Ga√´l Thomas</author>
      <pubDate>Tue, 31 Aug 2021 08:53:04 +0000</pubDate>
      <link>https://dev.to/gaelgthomas/how-to-filter-an-array-with-javascript-31kg</link>
      <guid>https://dev.to/gaelgthomas/how-to-filter-an-array-with-javascript-31kg</guid>
      <description>&lt;p&gt;A practical tutorial on how to filter arrays in JavaScript using the Array Filter method.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#filter-an-array-using-the-array-filter-method"&gt;
  &lt;/a&gt;
  Filter an array using the Array Filter Method
&lt;/h2&gt;

&lt;p&gt;In JavaScript, all arrays have a filter method that you can use in your programs. This built-in method creates a new array based on your instructions.&lt;br&gt;
You will give these instructions as a parameter of the filter method. Each time the filter method iterates on the array, it will call your function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;colors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;blue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;yellow&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;red&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;green&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;yellow&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;red&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;blue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;yellowArray&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;colors&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;color&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;yellow&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;yellowArray&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// Output: ['yellow', 'yellow']&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#create-your-own-function-to-filter-an-array"&gt;
  &lt;/a&gt;
  Create your own function to filter an array
&lt;/h3&gt;

&lt;p&gt;If you want to understand better how the filter method works, you can create your own function.&lt;br&gt;
Let's take the example above, but we will replace the second line with our function call.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arrayToFilter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;elementToFilter&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;newArray&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;

  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;element&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;arrayToFilter&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;element&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;elementToFilter&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;newArray&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;newArray&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;colors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;blue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;yellow&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;red&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;green&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;yellow&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;red&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;blue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;yellowArray&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;colors&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;yellow&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;yellowArray&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// Output: ['yellow', 'yellow']&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see, if you want only to compare strings or numbers, you can re-create this function pretty fast!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#filter-an-array-of-objects-using-the-array-filter-method"&gt;
  &lt;/a&gt;
  Filter an array of objects using the Array Filter Method
&lt;/h2&gt;

&lt;p&gt;If you want to filter an array of objects, you can still use the built-in method. The only difference will be in the comparison. You will need to select the object property value to compare.&lt;/p&gt;

&lt;p&gt;In the example below, we now have books. Each book is an object and has a color property. As in the previous parts, we want to create a new array for yellow books.&lt;/p&gt;

&lt;p&gt;Let's see how we can do that!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;books&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;You don't know JS&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;yellow&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Eloquent JavaScript&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;yellow&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;JavaScript: The Definitive Guide&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;white&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;yellowBooksArray&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;books&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;book&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;book&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;yellow&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;yellowBooksArray&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// Output: [&lt;/span&gt;
&lt;span class="c1"&gt;//  { name: "You don't know JS", color: 'yellow' },&lt;/span&gt;
&lt;span class="c1"&gt;//  { name: 'Eloquent JavaScript', color: 'yellow' },&lt;/span&gt;
&lt;span class="c1"&gt;//]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Thanks for reading until here!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I hope you learned from it! üéâ&lt;/p&gt;

&lt;p&gt;I'm starting to tweet more consistently! If you want to get more tips and resources about web programming -&amp;gt; &lt;a href="https://twitter.com/gaelgthomas"&gt;Find me on my Twitter üê¶&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>tutorial</category>
      <category>beginners</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>The importance of a design system and why you should be using Storybook in all of your projects</title>
      <author>Andrew Baisden</author>
      <pubDate>Tue, 31 Aug 2021 08:53:00 +0000</pubDate>
      <link>https://dev.to/andrewbaisden/the-importance-of-a-design-system-and-why-you-should-be-using-storybook-in-all-of-your-projects-d1o</link>
      <guid>https://dev.to/andrewbaisden/the-importance-of-a-design-system-and-why-you-should-be-using-storybook-in-all-of-your-projects-d1o</guid>
      <description>&lt;p&gt;JavaScript Developers and Designers are very familiar with design systems. It is essentially the guidelines and specifications that relate to the project that you are working on. It is a subject that is very important when it comes to following brand guidelines for a company that you are working for. In the case of a Designer they are likely to be working with a design system which has a specification for the typography, colours, spacing, content and other design related information. Typically designers would have all of this managed in a design tool like Figma, Adobe XD, Sketch or something similar.&lt;/p&gt;

&lt;p&gt;Now when it comes to the development side of things we don't usually a development design system setup. If we are using a framework like React for example then it is common practice to use a component driven development methodology. So basically creating lots of reusable components that can be used across the application meaning that we cut down on duplicate code and everything becomes modular, dynamic and interchangeable. As good as this is there was still no easy way for us to see these components in a design system. This is where the tool Storybook comes in.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-storybook"&gt;
  &lt;/a&gt;
  What is Storybook
&lt;/h2&gt;

&lt;p&gt;On the &lt;a href="https://storybook.js.org/"&gt;Storybook&lt;/a&gt; website they say that:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Storybook is an open source tool for building UI components and pages in isolation. It streamlines UI development, testing, and documentation.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Essentially it is a development design system where you can showcase and test all of your components in a really cool user interface. All of your contents are laid out nicely it is fully interactive. You can see changes instantly for example how a button would look with different background colours. Or how font would look inside of a call to action component. The list is limitless.&lt;/p&gt;

&lt;p&gt;Storybook takes your reusable components and organises them in a nice tidy library so that you can play around with them as you see fit before you integrate them into your application. What makes this tool even more amazing is the fact that it is always up to date and supports most of the popular JavaScript frameworks out there. The list includes, React, Vue, Angular, Svelte and much more! They have the top JavaScript frameworks covered so there is no excuse for you not trying it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-should-i-use-storybook"&gt;
  &lt;/a&gt;
  Why should I use Storybook
&lt;/h2&gt;

&lt;p&gt;Storybook is user friendly and a very powerful tool that gives teams the freedom and ability to design, develop and organise all of their component assets allowing for a consistent design throughout projects. When you have a design system setup with ready made components you don't have to worry about having to recreate assets from scratch because they are already there and ready to use.&lt;/p&gt;

&lt;p&gt;This article is only scratching the surface if you want to learn more then you should visit the &lt;a href="https://storybook.js.org/"&gt;Storybook&lt;/a&gt; website. The Storybook tool is already in use at many popular companies and it's a skill that tons of companies are looking for with new candidates. A few of the companies already using Storybook include GitHub, Adobe, Microsoft, BBC, IBM, Auth0, gov.uk, Atlassian, Lyft, airbnb and many more!&lt;/p&gt;

&lt;p&gt;You can find &lt;a href="https://storybook.js.org/use-cases/"&gt;use cases&lt;/a&gt; and &lt;a href="https://storybook.js.org/docs/react/get-started/examples"&gt;examples&lt;/a&gt; which show more.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-thoughts"&gt;
  &lt;/a&gt;
  Final Thoughts
&lt;/h2&gt;

&lt;p&gt;I really hope that you enjoyed reading this article and learned something from it. As a content creator and technical writer I am passionate about sharing my knowledge and helping other people reach their goals. Let's connect across social media you can find all of my social media profiles and blogs on &lt;a href="https://linktr.ee/andrewbaisden"&gt;linktree&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Peace ‚úåÔ∏è&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>react</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Learning Python- Intermediate course: Day 17, Tkinter ‚Äî a fast and easy way to create GUI applications.</title>
      <author>Aatmaj</author>
      <pubDate>Tue, 31 Aug 2021 08:51:57 +0000</pubDate>
      <link>https://dev.to/aatmaj/learning-python-intermediate-course-day-17-tkinter-a-fast-and-easy-way-to-create-gui-applications-1if</link>
      <guid>https://dev.to/aatmaj/learning-python-intermediate-course-day-17-tkinter-a-fast-and-easy-way-to-create-gui-applications-1if</guid>
      <description>&lt;h2&gt;
  &lt;a href="#today-we-will-begin-with-gui-in-python"&gt;
  &lt;/a&gt;
  Today we will begin with GUI in Python!
&lt;/h2&gt;




&lt;p&gt;Python has a inbuilt package for GUI handling known as 'Tkinter'. This GUI toolkit is available on most Unix platforms, including macOS, as well as on Windows systems.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note- Tkinter provides a powerful object-oriented interface to the Tk-GUI toolkit. GUI requires a lot of OOP stuff. OOP python is still not covered in this course, and would be subsequently covered after GUI is completed. So till that time, don't worry if OOP things are not 100% clear. While learning GUI it is important to understand how to design things rather than how they are implemented by python. Learning OOP concepts will throw light upon how they are implemented and things will start getting clearer and clearer.&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#but-what-is-tkinter"&gt;
  &lt;/a&gt;
  But what is Tkinter?
&lt;/h3&gt;

&lt;p&gt;The Tkinter package is actually an interface to the GUI toolkit, called as Tk-GUI. However, Tkinter is not the only GUI Programming toolkit for Python. It is one of the most common and easy to learn interface. It is the only framework that‚Äôs built into the Python standard library. Other notable interfaces are &lt;a href="https://wxpython.org/"&gt;wxPython&lt;/a&gt; and JPython (&lt;a href="https://www.jython.org/"&gt;Jython&lt;/a&gt;. wxPython is an open-source Python interface for wxWindows, while JPython is a Python port for Java. JPython boasts of giving Python scripts a seamless access to Java class libraries on the local machine. Other alternatives include-  &lt;a href="https://en.wikipedia.org/wiki/PyQt"&gt;PyQt&lt;/a&gt;, &lt;a href="https://en.wikipedia.org/wiki/PySide"&gt;PySide&lt;/a&gt;, &lt;a href="https://en.wikipedia.org/wiki/Pygame"&gt;Pygame&lt;/a&gt;, &lt;a href="https://en.wikipedia.org/wiki/Pyglet"&gt;Pyglet&lt;/a&gt;, and &lt;a href="https://en.wikipedia.org/wiki/PyGTK"&gt;PyGTK&lt;/a&gt;. You can check them out at the wiki links provided.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The name Tkinter comes from Tk interface. Tkinter was written by Fredrik Lundh. It is free software released under a &lt;a href="https://en.wikipedia.org/wiki/Python_license"&gt;Python license&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Advantages of Tkinter&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Tkinter is lightweight and a bit easier to use than others.&lt;/li&gt;
&lt;li&gt;Tkinter is cross-platform, so the same code works on all systems ( Windows, macOS, and Linux)&lt;/li&gt;
&lt;li&gt;Moreover, Tkinter elements are built using native operating system elements, So they easy camouflage to the system &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Disadvantage of Tkinter&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Tkinter is outdated... No Expired might be the right word. The UI looks old, or rather ancient. If you want to build a good looking shiny application, then Tkinter is not for you!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is why Tkinter is ideal for just studying and exploring GUI in Python.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#checking-if-tkinter-is-properly-installed-or-not"&gt;
  &lt;/a&gt;
  Checking if Tkinter is properly installed or not.
&lt;/h4&gt;

&lt;p&gt;Let's see how to check if Tkinter is properly installed on the system, and which version is installed.&lt;br&gt;
We can do that by typing the command &lt;code&gt;python -m tkinter&lt;/code&gt; in the command line. This opens a small box with two buttons as shown below. Inside the box, the version of the Tcl/Tk is shown.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--P7bARoE8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ck11zv8wg3sw46bsx90c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P7bARoE8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ck11zv8wg3sw46bsx90c.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kwDd5B4T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9kr167dc5gwoa6cvcevx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kwDd5B4T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9kr167dc5gwoa6cvcevx.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Didn't work for you? Well it didn't work for me either.&lt;br&gt;
&lt;/p&gt;


&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;C:\Users\aatma&amp;gt;python -m tkinter
Python was not found; run without arguments to install from the Microsoft Store, or disable this shortcut from Settings &amp;gt; Manage App Execution Aliases.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In my device, the &lt;code&gt;py&lt;/code&gt; keyword opens python, so typing in &lt;code&gt;py -m tkinter&lt;/code&gt; worked for me.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Common mistake-- We need to type this in the command prompt, and not the python command line!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This won't work-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;C:\Users\aatma&amp;gt;py
Python 3.9.5 (tags/v3.9.5:0a7dcbd, May  3 2021, 17:27:52) [MSC v.1928 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
&amp;gt;&amp;gt;&amp;gt; python -m tkinter
  File "&amp;lt;stdin&amp;gt;", line 1
    python -m tkinter
              ^
SyntaxError: invalid syntax
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When we click on the click me button, The click me is surrounded with square brackets as shown.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5wTMZbRs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hbgmqgksth2riywg8k0o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5wTMZbRs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hbgmqgksth2riywg8k0o.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
 Each time we click it, an additional pair of paranthesis encloses the text on the button-clickme&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Fo4uXXJq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/chy3zziimshi2x3p8e9c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Fo4uXXJq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/chy3zziimshi2x3p8e9c.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bLUzYoCC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bdtwz2xsetocmma0yn4j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bLUzYoCC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bdtwz2xsetocmma0yn4j.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
Clicking the 'quit' button closes the box.&lt;/p&gt;




&lt;p&gt;That's all for this part. Excited? Before you even realize, we will be making applications much more powerful and exciting than this one. So stay tuned for the next parts of the &lt;a href="https://github.com/Aatmaj-Zephyr/Learning-Python"&gt;Learning Python&lt;/a&gt; Course.&lt;/p&gt;

&lt;p&gt;üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•&lt;br&gt;
Follow me on GitHub for updates.......&lt;/p&gt;

</description>
      <category>learningpython</category>
      <category>python</category>
      <category>programming</category>
    </item>
  </channel>
</rss>
