<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How to score 100 on Google PageSpeed Insights on Mobile</title>
      <author>Mi≈°ko Hevery</author>
      <pubDate>Mon, 23 Aug 2021 15:08:55 +0000</pubDate>
      <link>https://dev.to/mhevery/how-to-score-100-on-google-pagespeed-insights-on-mobile-2e0i</link>
      <guid>https://dev.to/mhevery/how-to-score-100-on-google-pagespeed-insights-on-mobile-2e0i</guid>
      <description>&lt;p&gt;&lt;a href="https://developers.google.com/speed/pagespeed/"&gt;Google PageSpeed Insights&lt;/a&gt; is a tool you can use to measure the perceived latency of your website. Getting a good score here is vital because Google has announced that it will use these scores as an input into its search ranking algorithm. &lt;/p&gt;

&lt;p&gt;We set out to see what it would take to score 100 on PageSpeed Insights on mobile. When we embarked on this effort, we already scored 100 on desktop, but modern commerce is mobile commerce, and there we only scored in the mid-60s. In this blog post, we share ways to get your site scoring 100 on mobile as well. Many companies claim 100 on desktop, but 100 on mobile is a bit of a unicorn. So let's dive in.&lt;/p&gt;

&lt;p&gt;Builder.io is a standard Next.js site. Because the site itself is running on the Builder content platform, the content already adheres to all of the best practices for image sizes, preloading, etc. Yet, it still only scored in the 60s. Why?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0DMRzttv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iy8vyp90ed82l4kmhshx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0DMRzttv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iy8vyp90ed82l4kmhshx.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It helps to look at the breakdown which makes up the score.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eTUcudeP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aeaoni0mhgjyttr3utm5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eTUcudeP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aeaoni0mhgjyttr3utm5.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The problem can be broken down to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;TBT/TTI: The JavaScript is causing too much blocking time on the page.&lt;/li&gt;
&lt;li&gt;FCP/LCP: The page has too much content to render for mobile browsers.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So we should aim to:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Decrease the amount of JavaScript.&lt;/li&gt;
&lt;li&gt;Decrease the amount of content for the initial render.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#why-so-much-javascript"&gt;
  &lt;/a&gt;
  Why so much JavaScript?
&lt;/h2&gt;

&lt;p&gt;Our homepage is essentially a static page. Why does it need JavaScript? Well, the homepage is a Next.js site, which means it is a React application (We use &lt;a href="https://github.com/BuilderIO/mitosis"&gt;Mitosis&lt;/a&gt; to convert the output of our drag and drop editor into React). While the vast majority of the site is static, there are three things that require JavaScript:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Navigation system: Menus require interactivity and hence JavaScript. Also, different menus are used for desktop and mobile devices. &lt;/li&gt;
&lt;li&gt;We need to load a chat widget&lt;/li&gt;
&lt;li&gt;We need Google analytics.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Let's dive into each one separately.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#application-bootstrap"&gt;
  &lt;/a&gt;
  Application bootstrap
&lt;/h2&gt;

&lt;p&gt;Even though this is primarily a static site, it is still an application. To make the menus work, the application needs to be bootstrapped. Specifically, it needs to run rehydration where the framework compares the templates against the DOM and installs all of the DOM listeners. This process makes existing frameworks &lt;a href="https://dev.to/mhevery/a-first-look-at-qwik-the-html-first-framework-af"&gt;replayable&lt;/a&gt;. In other words, even though 95% of the page is static, the framework must download all of the templates and re-execute them to determine listeners' presence. The implication is that the site is downloaded twice, once as HTML and then again in the form of JSX in JavaScript. &lt;/p&gt;

&lt;p&gt;To make matters worse, the rehydration process is slow. The framework must visit each DOM node and reconcile it against the VDOM, which takes time. And the rehydration process can't be delayed, as it is the same process that installs DOM listeners. Delaying rehydration would mean that the menus would not work. &lt;/p&gt;

&lt;p&gt;What we are describing above is a fundamental limitation of every existing framework. You see, they are all &lt;a href="https://dev.to/mhevery/a-first-look-at-qwik-the-html-first-framework-af"&gt;replayable&lt;/a&gt;. This also means that no existing framework will allow you to score 100 on mobile on a real-world site. The amount of HTML and JavaScript is simply too great to fit into the tiny sliver that PageSpeed allots for it on mobile.&lt;/p&gt;

&lt;p&gt;We need to fundamentally rethink the problem. Since most of the site is static, we should not have to re-download that portion in JavaScript, or pay for rehydration of something we don't need. This is where &lt;a href="https://github.com/builderio/qwik"&gt;Qwik&lt;/a&gt; truly shines. Qwik is &lt;a href="https://dev.to/mhevery/a-first-look-at-qwik-the-html-first-framework-af"&gt;resumable not replayable&lt;/a&gt;, and that makes all the difference. As a result, Qwik does not need to:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Be bootstrapped on page load&lt;/li&gt;
&lt;li&gt;Walk the DOM to determine where the listeners are&lt;/li&gt;
&lt;li&gt;Eagerly download and execute JavaScript to make the menus work&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;All of the above means that there is practically no JavaScript to execute a site load, and yet we can retain all of the interactivity of the site.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#intercom"&gt;
  &lt;/a&gt;
  Intercom
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--On4okiXm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v8v1uurp49y7nlkh7fr3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--On4okiXm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v8v1uurp49y7nlkh7fr3.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Intercom is a third-party widget running on our site which allows us to interact with our customers. The standard way of installing it is to drop a piece of JavaScript into your HTML, like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text/javascript"&lt;/span&gt; &lt;span class="na"&gt;async=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://widget.intercom.io/widget/abcd1234"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;async&lt;/span&gt; &lt;span class="na"&gt;defer&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nx"&gt;Intercom&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;boot&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;app_id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;abcd1234&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;However, there are two issues with the above:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;It adds JavaScript that needs to be downloaded and executed. This will count against our TBT/TTI.&lt;/li&gt;
&lt;li&gt;It may cause layout shifts, which counts against CLS. This is because the UI is first rendered without the widget and then again with it as the JavaScript is downloaded and executed. &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Qwik solves both issues at the same time. &lt;/p&gt;

&lt;p&gt;First, it grabs the DOM that Intercom uses to render the widget. Next, the DOM is inserted into the actual page, like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"intercom-lightweight-app"&lt;/span&gt; &lt;span class="na"&gt;aria-live=&lt;/span&gt;&lt;span class="s"&gt;"polite"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt;
    &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"intercom-lightweight-app-launcher intercom-launcher"&lt;/span&gt;
    &lt;span class="na"&gt;role=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;
    &lt;span class="na"&gt;tabIndex=&lt;/span&gt;&lt;span class="s"&gt;{0}&lt;/span&gt;
    &lt;span class="na"&gt;arial-abel=&lt;/span&gt;&lt;span class="s"&gt;"Open Intercom Messenger"&lt;/span&gt;
    &lt;span class="na"&gt;on:click=&lt;/span&gt;&lt;span class="s"&gt;'ui:boot_intercom'&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    ...
 &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;style &lt;/span&gt;&lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"intercom-lightweight-app-style"&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text/css"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The benefit of this is that the widget renders instantly with the rest of the application. There is no delay or flicker while the browser downloads the Intercom JavaScript and executes the creation of the widget. The result is a better user experience and a faster bootstrap of the website. (It also saves bandwidth on mobile devices.)&lt;/p&gt;

&lt;p&gt;However, we still need a way to detect a click on the widget and some code to replace the mock widget with the actual Intercom widget when the user interacts with it. This is achieved with the &lt;code&gt;on:click="ui:boot_intercom"&lt;/code&gt; attribute. The attribute tells Qwik to download &lt;code&gt;boot_intercom.js&lt;/code&gt; if the user clicks on the mock widget.&lt;/p&gt;

&lt;p&gt;Content of: &lt;code&gt;boot_intercom.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="k"&gt;import&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://widget.intercom.io/widget/abcd1234&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
 &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;container&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parentElement&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
 &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;body&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;container&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parentElement&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
 &lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;removeChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;container&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
 &lt;span class="nx"&gt;Intercom&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;boot&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;app_id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;abcd1234&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
 &lt;span class="nx"&gt;Intercom&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;show&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The file above downloads the real Intercom widget, removes the mock, and bootstraps Intercom. All of this happens naturally, without the user ever noticing the switcheroo. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#google-analytics"&gt;
  &lt;/a&gt;
  Google Analytics
&lt;/h2&gt;

&lt;p&gt;So far, we have fought a good fight in delaying JavaScript and hence improving the website‚Äôs performance. Analytics is different, as we can't delay it and must bootstrap it immediately. Bootstrapping analytics alone would prevent us from scoring a 100 on PageSpeed Insights for mobile. To fix this, we will be running GoogleAnalytics in a Web Worker using &lt;a href="https://github.com/adamdbradley/partytown"&gt;PartyTown&lt;/a&gt;. More about this in a later post&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#javascript-delayed"&gt;
  &lt;/a&gt;
  JavaScript delayed
&lt;/h2&gt;

&lt;p&gt;The work described above lowers the amount of JavaScript the website has to download and execute to about 1KB, which takes a mere 1ms to execute. Essentially, no time. Such a minimal amount of JavaScript is what allows us to score a perfect score on TBT/TTI.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#html-delayed"&gt;
  &lt;/a&gt;
  HTML delayed
&lt;/h2&gt;

&lt;p&gt;However, even with essentially no JavaScript we still can't score 100 for mobile if we don't fix the amount of HTML sentto the client for the above fold rendering. To improve FCP/LCP we simply must shrink that to a minimum. This is done by only sending the above the fold HTML.&lt;/p&gt;

&lt;p&gt;This is not a new idea, but it is tough to execute. Theexisting frameworks make this difficult, as there is no easy way to break up your application into pieces that are above and below the fold. VDOM does not help here because the application generates a whole VDOM, even if only a portion of it is projected. The framework would re-create the whole site on rehydration if part of it was missing,would resulting in even more work on the initial bootstrap. &lt;/p&gt;

&lt;p&gt;Ideally, we‚Äôd like to not ship the HTML that is below the fold, while  maintaining a fully interactive menu system above the fold. In practice, this is hard to do, as can be seen by the lack of such best practices in the wild. It‚Äôs too hard to do, so no one does it.&lt;/p&gt;

&lt;p&gt;Qwik is DOM-centric, which makes all the difference. The entire page is rendered on the server. Then, the portion of the page that does not need to be shipped is located and removed. As the user  scrolls, the missing portion is lazy downloaded and inserted. Qwik doesn‚Äôt mind these kind of DOM manipulations, because it is stateless and DOM-centric.&lt;/p&gt;

&lt;p&gt;Here is the actual code on our server that enables lazy loading of the site below the fold:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;  &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;void&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;vmSandbox&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./server-index&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;ServerIndexModule&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;serverIndex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;lazyNode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;section[lazyload=true]&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;lazyNode&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;lazyHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;lazyNode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nx"&gt;lazyNode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;lazyNode&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;HTMLElement&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;999em&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nx"&gt;lazyNode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;on:document:scroll&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ui:/lazy&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;transpiledEsmFiles&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;lazy.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`
        export default (element) =&amp;gt; {
          element.removeAttribute('on:document:scroll');
          element.style.height = null;
          element.innerHTML = &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;lazyHTML&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="s2"&gt;;
        };`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The code is simple and to the point, yet it would be difficult to achieve with any of the existing frameworks. &lt;/p&gt;

&lt;p&gt;Check out the below fold lazy loading in action:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--o48jE9q6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/565yei3n8jydkkvs81yr.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--o48jE9q6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/565yei3n8jydkkvs81yr.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Notice that the page first loads without content below the fold; as soon as the user scrolls, the content is populated. This populationis near-instant since there is no complex code to execute. Just a fast and straightforward &lt;code&gt;innerHTML&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#try-it-out"&gt;
  &lt;/a&gt;
  Try it out
&lt;/h2&gt;

&lt;p&gt;Experience the page for yourself here: &lt;a href="https://www.builder.io/?render=qwik"&gt;https://www.builder.io/?render=qwik&lt;/a&gt;. We are still missing analytics, but that is coming soon. &lt;/p&gt;

&lt;p&gt;Like what you see? Our plan is to make Qwik available for every Builder.io customer, so that their sites are supercharged for speed out of the box. You have never seen a platform that is this fast before.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h9e9yDZo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/omha3jqf9hoh9l3vvcgn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h9e9yDZo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/omha3jqf9hoh9l3vvcgn.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ii5M-zIi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2rgulo7ew94yp06dyevs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ii5M-zIi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2rgulo7ew94yp06dyevs.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wrV7rC5p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/of1f2ztyoiodypiu6kxl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wrV7rC5p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/of1f2ztyoiodypiu6kxl.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Do you find the above exciting? Then &lt;a href="https://builder-io.rippling-ats.com"&gt;join our team&lt;/a&gt; and help us make the web fast!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Try it on &lt;a href="https://stackblitz.com/edit/qwik-todo-demo"&gt;StackBlitz&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Star us on &lt;a href="https://github.com/builderio/qwik"&gt;github.com/builderio/qwik&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Follow us on &lt;a href="https://twitter.com/QwikDev"&gt;@QwikDev&lt;/a&gt; and &lt;a href="https://twitter.com/builderio"&gt;@builderio&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Chat us on &lt;a href="https://discord.gg/JHVpZmqSs4"&gt;Discord&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Join &lt;a href="https://builder-io.rippling-ats.com/"&gt;builder.io&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>performance</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Deploy Ethereum network on AWS</title>
      <author>Shivani Aggarwal</author>
      <pubDate>Mon, 23 Aug 2021 15:02:43 +0000</pubDate>
      <link>https://dev.to/aws-builders/deploy-ethereum-network-on-aws-19jo</link>
      <guid>https://dev.to/aws-builders/deploy-ethereum-network-on-aws-19jo</guid>
      <description>&lt;p&gt;In my  previous post Blockchain on AWS (&lt;a href="https://dev.to/aws-builders/blockchain-on-aws-i6o"&gt;https://dev.to/aws-builders/blockchain-on-aws-i6o&lt;/a&gt; ) we discussed various services provided by AWS to work with blockchain technology. In this article we will explore how to use AWS Blockchain Templates to configure and create blockchain based networks.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#aws-blockchain-templates"&gt;
  &lt;/a&gt;
  AWS Blockchain Templates
&lt;/h2&gt;

&lt;p&gt;Using popular open source frameworks, AWS Blockchain Templates makes it quick and easy to develop and deploy secure Blockchain networks. Instead of wasting time and resources manually setting up your Blockchain network, you can focus on building your Blockchain apps with these templates.&lt;br&gt;
The Blockchain framework you pick is deployed as containers on an Amazon Elastic Container Service (ECS) cluster or directly on an EC2 host running Docker. You may leverage your VPC subnets and network Access Control Lists to build your blockchain network on your own Amazon VPC.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FKOU78hk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vpqpjx288z3tpj7jreek.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FKOU78hk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vpqpjx288z3tpj7jreek.PNG" alt="AWS Blockchain Template"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AWS offers two different templates: &lt;strong&gt;Blockchain for Ethereum&lt;/strong&gt; and &lt;strong&gt;Blockchain for Hyperledger Fabric&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We will use AWS Blockchain Template for Ethereum to create a private Ethereum network on AWS through AWS CloudFormation. The network that we will create has two Ethereum clients and one miner running on Amazon EC2 instances in an Amazon ECS cluster. Amazon ECS runs these services in Docker containers pulled from Amazon ECR. &lt;br&gt;
Before proceeding, as a prerequisite set up an IAM user and create a key pair . For help refer , &lt;a href="https://docs.aws.amazon.com/blockchain-templates/latest/developerguide/blockchain-templates-setting-up.html"&gt;https://docs.aws.amazon.com/blockchain-templates/latest/developerguide/blockchain-templates-setting-up.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After prerequisites are met , the next steps would be as below:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create a VPC and subnets&lt;/li&gt;
&lt;li&gt;Create security groups&lt;/li&gt;
&lt;li&gt;Create an IAM Role for Amazon ECS and an EC2 Instance Profile&lt;/li&gt;
&lt;li&gt;Create bastion host&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now we will walkthrough each step in detail below:&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#creating-a-vpc-and-subnets"&gt;
  &lt;/a&gt;
  Creating a VPC and subnets
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;First we will create Elastic IP address to be used for VPC creation

&lt;ul&gt;
&lt;li&gt;Open the Amazon VPC console at &lt;a href="https://console.aws.amazon.com/vpc/"&gt;https://console.aws.amazon.com/vpc/&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Choose Elastic IPs, Allocate new address, Allocate&lt;/li&gt;
&lt;li&gt;Make a note of the Elastic IP address that you create and choose Close.&lt;/li&gt;
&lt;li&gt;In the list of Elastic IP addresses, find the Allocation ID for the Elastic IP address created earlier. We use this when we create the VPC.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Select the same Region for VPC in which you created your key pair in and where you are launching the Ethereum stack&lt;/li&gt;
&lt;li&gt;To create a VPC , on the VPC dashboard choose Launch VPC Wizard
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lM8pwx0w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7uq40l9l5p5rwihcds8i.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;On Select a VPC Configuration page, choose VPC with Public and Private Subnets. Click on Select
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PXbXLAiH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pv1xegdxkv52popnkwey.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;Enter VPC name, name for public and private subnet , select elastic allocation ID created earlier . Click on Create VPC
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DkzfSsuJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wtg6aw8wau22n5qjvzps.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;To create second subnet, Choose &lt;strong&gt;Subnets&lt;/strong&gt; and then select the public subnet that you created earlier from the list. Select the &lt;strong&gt;Route Table&lt;/strong&gt; tab and note the Route table ID. We specify this same route table for the second public subnet we will create.&lt;/li&gt;
&lt;li&gt;Choose Create Subnet, choose a different availability zone , enter a name and click on create subnet
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h6z_8qMJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h3jnzg91ali0q0aacq6p.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;With the subnet selected from the list, choose Subnet Actions, Modify auto-assign IP settings. Select Auto-assign IPs, Save, Close. This allows the bastion host to obtain a public IP address when you create it in this subnet.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NBwnPRIm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bi7q120a8l09jndnevuz.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;On the &lt;strong&gt;Route Table&lt;/strong&gt; tab, choose &lt;strong&gt;Edit&lt;/strong&gt;. For &lt;strong&gt;Change to&lt;/strong&gt;, select the route table ID that you noted earlier and choose &lt;strong&gt;Save&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#creating-security-groups"&gt;
  &lt;/a&gt;
  Creating Security groups
&lt;/h4&gt;

&lt;p&gt;We need to create two security groups one for EC2 instance and for Load balancer&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Open the EC2 Console , choose &lt;strong&gt;Security Groups, Create Security Group&lt;/strong&gt; and enter a name for security group to be created for EC2 instance and select the VPC we created earlier
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UZDciUKy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dqnedrpm9mwxp58iv9xy.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;Repeat same step and create one more security group for load balancer&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add inbound rules to the security group for EC2 instances&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Select the EC2 instance security group&lt;/li&gt;
&lt;li&gt;On the Inbound tab, choose Edit and For Type, choose All traffic. For Source, leave Custom selected, and then choose the security group you are currently editing from the list&lt;/li&gt;
&lt;li&gt;Add one more rule and For Type, choose All traffic. For Source, leave Custom selected, and then choose the security group we created for load balancer&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;Add inbound and edit outbound rules for the security group for the Application Load Balancer&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Select the Application Load balancer security group&lt;/li&gt;
&lt;li&gt;On the Inbound tab, choose Edit and For Type, choose All traffic. For Source, leave Custom selected, and then choose the security group you are currently editing from the list&lt;/li&gt;
&lt;li&gt;Add one more rule and For Type, choose All traffic. For Source, leave Custom selected, and then choose the security group we created for EC2 instance&lt;/li&gt;
&lt;li&gt;Add one more rule and For Type, choose SSH. For Source, select My IP, which detects your computer's IP CIDR and enters it.&lt;/li&gt;
&lt;li&gt;On the Outbound tab, choose Edit and delete the rule that was automatically created to allow outbound traffic to all IP addresses.&lt;/li&gt;
&lt;li&gt;Add one more rule and For Type, choose All traffic. For Source, leave Custom selected, and then choose the security group you are currently editing from the list.&lt;/li&gt;
&lt;li&gt;Add one more rule and For Type, choose All traffic. For Source, leave Custom selected, and then choose the security group we created for EC2 instance&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;By this time , you are already half done :) &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#creating-an-iam-role-for-amazon-ecs-and-an-ec2-instance-profile"&gt;
  &lt;/a&gt;
  Creating an IAM Role for Amazon ECS and an EC2 Instance Profile
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Open the IAM console at &lt;a href="https://console.aws.amazon.com/iam/"&gt;https://console.aws.amazon.com/iam/&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Choose Roles and Select Elastic Container Service as service ,  enter a Name and choose Create role. &lt;/li&gt;
&lt;li&gt;Select the role that you just created from the list. If your account has many roles, you can search for the role name&lt;/li&gt;
&lt;li&gt;Copy the Role ARN value and save it so that you can copy it again. You need this ARN when you create the Ethereum network
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7qNA4Ovf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gx49os7w0l3lxd8jlg6s.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;To create an EC2 instance profile

&lt;ul&gt;
&lt;li&gt;Choose Policies in the navigation pane, Create policy. Enter policy name and, choose create policy&lt;/li&gt;
&lt;li&gt;Choose Roles ,Choose EC2 , In the Search field, enter the name of the permissions policy that you created earlier&lt;/li&gt;
&lt;li&gt;Select the check mark for the policy that you created earlier, and choose Next: Review
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6AUUSO-E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4g05k9qk6saam0y7pwzl.PNG" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;li&gt;For Role name, enter a value that helps you identify the role&lt;/li&gt;
&lt;li&gt;Select the role that you just created from the list and Copy the Instance Profile ARN value and save it.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#creating-a-bastion-host"&gt;
  &lt;/a&gt;
  Creating a Bastion Host
&lt;/h4&gt;

&lt;p&gt;To be able to access the Ethereum network, trusted clients need to be set up to connect through the bastion host. For more information, see Connect to EthStats and EthExplorer Using the Bastion Host. A bastion host is one approach. You can use any approach that provides access from trusted clients to private resources within a VPC.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create an EC2 linux instance ( for help refer &lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EC2_GetStarted.html#ec2-launch-instance"&gt;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EC2_GetStarted.html#ec2-launch-instance&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Choose Edit Instance Details. For Network, choose the VPC you created earlier, for Subnet select the second public subnet that you created earlier. Leave all other settings to their defaults.&lt;/li&gt;
&lt;li&gt;Confirm the change when prompted, and then choose Review and Launch.&lt;/li&gt;
&lt;li&gt;Choose Edit Security Groups. For Assign a security group, choose Select an existing security group.&lt;/li&gt;
&lt;li&gt;From the list of security groups, select the security group for the Application Load Balancer that you created earlier, and then choose Review and Launch.&lt;/li&gt;
&lt;li&gt;Choose Launch.&lt;/li&gt;
&lt;li&gt;Note the instance ID. You need it later when you &lt;a href="https://docs.aws.amazon.com/blockchain-templates/latest/developerguide/blockchain-bastion-host-connect.html"&gt;Connect to EthStats and EthExplorer&lt;/a&gt; using the Bastion Host&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And the final stage is here ,&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#creating-the-ethereum-network"&gt;
  &lt;/a&gt;
  Creating the Ethereum Network
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;See Getting Started with AWS Blockchain Templates, and open the latest AWS Blockchain Template for Ethereum in the AWS CloudFormation console using the quick-links for your AWS Region.&lt;/li&gt;
&lt;li&gt;Choose create stack and enter a name for stack.
Under EC2 configuration, select options according to the following guidelines:

&lt;ul&gt;
&lt;li&gt;For EC2 Key Pair, select a key pair. &lt;/li&gt;
&lt;li&gt;For EC2 Security Group, select the security group you created earlier in Create Security Groups.&lt;/li&gt;
&lt;li&gt;For EC2 Instance Profile ARN, enter the ARN of the instance profile that you created earlier in Create an IAM Role for Amazon ECS and an EC2 Instance Profile.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Under VPC network configuration, select options according to the following guidelines:

&lt;ul&gt;
&lt;li&gt;For VPC ID, select the VPC that you created earlier in Create a VPC and Subnets.&lt;/li&gt;
&lt;li&gt;For Ethereum Network Subnet IDs, select the single private subnet that you created earlier in the procedure To create the VPC.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Under ECS cluster configuration, leave the defaults. This creates an ECS cluster of three EC2 instances.&lt;/li&gt;
&lt;li&gt;Under Application Load Balancer configuration (ECS only), select options according to the following guidelines:

&lt;ul&gt;
&lt;li&gt;For Application Load Balancer Subnet IDs, select two public subnets from the &lt;a href="https://docs.aws.amazon.com/blockchain-templates/latest/developerguide/blockchain-template-getting-started-prerequisites.html#list-of-subnets"&gt;list of subnets&lt;/a&gt; that you noted earlier&lt;/li&gt;
&lt;li&gt;For Application Load Balancer Security Group, select the security group for the Application Load Balancer that you created earlier in &lt;a href="https://docs.aws.amazon.com/blockchain-templates/latest/developerguide/blockchain-template-getting-started-prerequisites.html#blockchain-templates-create-security-group"&gt;Create Security Groups&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;For IAM Role, enter the ARN of the ECS role that you created earlier in &lt;a href="https://docs.aws.amazon.com/blockchain-templates/latest/developerguide/blockchain-template-getting-started-prerequisites.html#blockchain-templates-iam-roles"&gt;Create an IAM Role for Amazon ECS and an EC2 Instance Profile&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Under EthStats, select options according to the following guidelines:

&lt;ul&gt;
&lt;li&gt;For Deploy EthStats, leave the default setting, which is true.&lt;/li&gt;
&lt;li&gt;For EthStats Connection Secret, type an arbitrary value that is at least six characters.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Under EthExplorer, leave the default setting for Deploy EthExplorer, which is true.&lt;/li&gt;
&lt;li&gt;Under Other parameters, leave the default value for Nested Template S3 URL Prefix and make a note of it. This is where you can find nested templates.&lt;/li&gt;
&lt;li&gt;Choose Create Stack&lt;/li&gt;
&lt;li&gt;When all stacks show CREATE_COMPLETE for Status, you can connect to Ethereum user interfaces to verify that the network is running and accessible. When you use the ECS container platform, URLs for connecting to EthStats, EthExplorer, and EthJsonRPC through the Application Load Balancer are available on the Outputs tab of the root stack.&lt;/li&gt;
&lt;li&gt;The Output tab of the root stack provides links to services running on the Application Load Balancer. These URLs are not directly accessible for security reasons. To connect, you can set up and use a bastion host to proxy connections to them
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vE3e31vj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/loodrz5e2p1ug6y7hy1a.PNG" alt="Alt Text"&gt;
After completing this tutorial, don't forget to clean up your AWS resources. You can use AWS cloudformation to delete all resources. For more details follow on &lt;a href="https://docs.aws.amazon.com/blockchain-templates/latest/developerguide/blockchain-templates-cleanup.html"&gt;&lt;/a&gt;&lt;a href="https://docs.aws.amazon.com/blockchain-templates/latest/developerguide/blockchain-templates-cleanup.html"&gt;https://docs.aws.amazon.com/blockchain-templates/latest/developerguide/blockchain-templates-cleanup.html&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>aws</category>
      <category>blockchain</category>
      <category>beginners</category>
      <category>digitaltechnologies</category>
    </item>
    <item>
      <title>How FirstPort are leveraging the power of Open Source to drive continuous code quality</title>
      <author>Andrew</author>
      <pubDate>Mon, 23 Aug 2021 14:47:59 +0000</pubDate>
      <link>https://dev.to/ghostinthewire5/how-firstport-are-leveraging-the-power-of-open-source-to-drive-continuous-code-quality-fd0</link>
      <guid>https://dev.to/ghostinthewire5/how-firstport-are-leveraging-the-power-of-open-source-to-drive-continuous-code-quality-fd0</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--A9Gm7ilV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q1fp4jhzbjv26f2mjli7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--A9Gm7ilV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q1fp4jhzbjv26f2mjli7.png" alt="SonarQube"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;As many of you will already know, I am Head of Technology at &lt;a href="https://www.firstport.co.uk/"&gt;FirstPort&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A key part of my role is delivering FirstPort‚Äôs vision of ‚ÄòPeople First‚Äô technology. To do this, it is imperative that I select the right technology to underpin the delivery of services that help make customers‚Äô lives easier.&lt;/p&gt;

&lt;p&gt;Today I want to talk about my selection of &lt;a href="https://www.sonarqube.org/"&gt;SonarQube&lt;/a&gt; (and a whole host of other cool tools &amp;amp; services such as GitHub Actions, Terraform, Caddy, Let's Encrypt, Docker &amp;amp; more)&lt;/p&gt;

&lt;p&gt;SonarQube is the leading tool for continuously inspecting the Code Quality and Security of your codebases and guiding development teams during Code Reviews &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#building-our-container-image"&gt;
  &lt;/a&gt;
  Building our Container Image
&lt;/h2&gt;

&lt;p&gt;I did not want to use &lt;a href="https://www.sonarqube.org/"&gt;SonarCloud&lt;/a&gt; nor did I want to host this on a VM. So I decided on ACI (Azure Container Instances) &lt;/p&gt;

&lt;p&gt;However, when trying to use ACI with an external database I found that any version of SonarQube after 7.7 throws an error:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ERROR: [1] bootstrap checks failed
[1]: max virtual memory areas vm.max_map_count [65530] is too low, increase to at least [262144]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I found this was because SonarQube uses an embedded &lt;a href="https://www.elastic.co/elasticsearch/"&gt;Elasticsearch&lt;/a&gt;, therefore you need to ensure that your Docker host configuration complies with the &lt;a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/docker.html#_set_vm_max_map_count_to_at_least_262144"&gt;Elasticsearch production mode requirements&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As the requirements above suggest, in order to fix this it would mean changing the host OS settings to increase the max_map_count, on a Linux OS this would be changing the /etc/sysctl.conf file to update the max_map_count&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;vm.max_map_count=262144
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The problem with ACI is that there is no access to the host, so how can the latest SonarQube (latest version at the time of writing was 9.0.1) be ran in ACI if this cannot be changed.&lt;/p&gt;

&lt;p&gt;In this blog I am going to detail the way we run SonarQube in Azure Container Instances with an external Azure SQL database.&lt;/p&gt;

&lt;p&gt;Here at FirstPort, we also use &lt;a href="https://www.terraform.io/"&gt;Terraform&lt;/a&gt; to build the Azure infrastructure and of course GitHub Actions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#next-steps"&gt;
  &lt;/a&gt;
  Next Steps
&lt;/h2&gt;

&lt;p&gt;The first thing is to address the max_map_count issue, for this we need a sonar.properties file that contains the following setting:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sonar.search.javaAdditionalOpts=-Dnode.store.allow_mmap=false
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This setting provides the ability to disable memory mapping in elastic search, which is needed when running SonarQube inside containers where you cannot change the hosts vm.max_map_count. (See &lt;a href="https://www.elastic.co/guide/en/elasticsearch/reference/7.9/index-modules-store.html#allow-mmap"&gt;Elasticsearch documentation&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;Now we have our sonar.properties file we need to create a custom container so we can add that into the setup. A small dockerfile can achieve this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;FROM sonarqube:9.0.1-community
COPY sonar.properties /opt/sonarqube/conf/sonar.properties
RUN chown sonarqube:sonarqube /opt/sonarqube/conf/sonar.properties
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This dockerfile is now ready to be built using Docker and pushed to an ACR (Azure Container Registry). &lt;/p&gt;

&lt;p&gt;For more info on how to build a container and/or push to an ACR then have a look at the &lt;a href="https://docs.docker.com/engine/reference/commandline/build/"&gt;Docker&lt;/a&gt; and &lt;a href="https://docs.microsoft.com/en-us/azure/container-registry/container-registry-get-started-docker-cli?tabs=azure-cli"&gt;Microsoft&lt;/a&gt; documentation which have easy to follow instructions.&lt;/p&gt;

&lt;p&gt;We first build the ACR using Terraform:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;resource "azurerm_container_registry" "acr" {
  name                = join("", [var.product, "acr", var.location, var.environment])
  resource_group_name = azurerm_resource_group.rg.name
  location            = azurerm_resource_group.rg.location
  admin_enabled       = true
  sku                 = "Standard"

  tags = local.tags
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and our standard workflow for running Terraform in &lt;a href="https://dev.to/ghostinthewire5/how-firstport-manage-github-using-code-stored-in-github-41f6#github-actions"&gt;GitHub Actions&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next we use GitHub Actions to build &amp;amp; push our container image to the ACR setup above. Note the &lt;code&gt;cd container&lt;/code&gt; line. This is because we have our dockerfile and sonar.properties files in a folder called container (the sonar folder contains all the Terraform files for the rest of the infrastructure):&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---BiRGCGD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xufscn5gpiie9203lgu7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---BiRGCGD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xufscn5gpiie9203lgu7.png" alt="repo"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;name: Build Container Image &amp;amp; Push to ACR
on:
  workflow_dispatch:

jobs:
  build:
    name: Build Container &amp;amp; Push to ACR
    runs-on: ubuntu-latest

    steps:

      - name: Checkout
        uses: actions/checkout@master

      - name: ACR build
        uses: azure/docker-login@v1
        with:
          login-server: acrname.azurecr.io
          username: acrusername
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - run: |
          cd container &amp;amp;&amp;amp; docker build . -t acrname.azurecr.io/acrrepo:${{ github.sha }}
          docker push acrname.azurecr.io/acrrepo:${{ github.sha }}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#building-the-sonarqube-infrastructure"&gt;
  &lt;/a&gt;
  Building the SonarQube Infrastructure
&lt;/h2&gt;

&lt;p&gt;So now that we have a container image uploaded to ACR we can look at the rest of the configuration.&lt;/p&gt;

&lt;p&gt;There are a number of parts to create:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;File shares&lt;/li&gt;
&lt;li&gt;External Database&lt;/li&gt;
&lt;li&gt;Container Group

&lt;ul&gt;
&lt;li&gt;SonarQube&lt;/li&gt;
&lt;li&gt;Reverse Proxy&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;At FirstPort our default is to use IaC (Infrastructure as Code), so I will show you how I use Terraform to configure the SonarQube infrastructure.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#file-shares"&gt;
  &lt;/a&gt;
  File Shares
&lt;/h2&gt;

&lt;p&gt;The SonarQube &lt;a href="https://docs.sonarqube.org/latest/setup/install-server/"&gt;documentation&lt;/a&gt; mentions setting up volume mounts for data, extensions and logs, for this I use an Azure Storage Account and Shares.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;resource "azurerm_storage_account" "storage" {
  name                     = join("", [var.product, "strg", var.location, var.environment])
  location                 = azurerm_resource_group.rg.location
  resource_group_name      = azurerm_resource_group.rg.name
  account_tier             = "Standard"
  account_replication_type = "RAGZRS"
  min_tls_version          = "TLS1_2"
  tags                     = local.tags
}

resource "azurerm_storage_share" "data-share" {
  name                 = "data"
  storage_account_name = azurerm_storage_account.storage.name
  quota                = 50
}

resource "azurerm_storage_share" "extensions-share" {
  name                 = "extensions"
  storage_account_name = azurerm_storage_account.storage.name
  quota                = 50
}

resource "azurerm_storage_share" "logs-share" {
  name                 = "logs"
  storage_account_name = azurerm_storage_account.storage.name
  quota                = 50
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#external-database"&gt;
  &lt;/a&gt;
  External Database
&lt;/h2&gt;

&lt;p&gt;For the external database part I am using Azure SQL Server, a SQL Database and setup a firewall rule to allow azure services to access the database.&lt;/p&gt;

&lt;p&gt;By using the random_password resource to create a SQL password no secrets are included and there is no need to know the password as long as the SonarQube Server does.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;resource "azurerm_mssql_server" "sql_server" {
  name                         = join("", [var.product, "sql", var.location, var.environment])
  location                     = azurerm_resource_group.rg.location
  resource_group_name          = azurerm_resource_group.rg.name
  version                      = "12.0"
  administrator_login          = "sonaradmin"
  administrator_login_password = random_password.sql_admin_password.result
  minimum_tls_version          = "1.2"

  identity {
    type = "SystemAssigned"
  }

  tags = local.tags
}

resource "azurerm_mssql_server_transparent_data_encryption" "sql_tde" {
  server_id = azurerm_mssql_server.sql_server.id
}

resource "azurerm_sql_firewall_rule" "sql_firewall_azure" {

  name                = "AllowAccessToAzure"
  resource_group_name = azurerm_resource_group.rg.name
  server_name         = azurerm_mssql_server.sql_server.name
  start_ip_address    = "0.0.0.0"
  end_ip_address      = "0.0.0.0"
}

resource "azurerm_mssql_database" "sonar" {
  name      = "sonar"
  server_id = azurerm_mssql_server.sql_server.id
  collation = "SQL_Latin1_General_CP1_CS_AS"
  sku_name  = "S2"

  tags = local.tags
}

resource "random_password" "sql_admin_password" {
  length           = 32
  special          = true
  override_special = "/@\" "
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#container-group"&gt;
  &lt;/a&gt;
  Container Group
&lt;/h2&gt;

&lt;p&gt;Setting up the container group requires credentials to access to the Azure Container Registry to run the custom SonarQube container. Using the data resource allows retrieval of the details without passing them as variables:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;data "azurerm_container_registry" "registry" {
  name                = "acrname"
  resource_group_name = "acr-rg-name"
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For this setup we are going to have two containers the custom SonarQube container and a Caddy container. &lt;a href="https://caddyserver.com/"&gt;Caddy&lt;/a&gt; can be used as a reverse proxy and is small, lightweight and provides management of certificates automatically with &lt;a href="https://letsencrypt.org/"&gt;Let‚Äôs Encrypt&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The SonarQube container configuration connects the SQL Database and Azure Storage Account Shares configured earlier.&lt;/p&gt;

&lt;p&gt;The Caddy container configuration sets up the reverse proxy to the SonarQube instance:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;resource "azurerm_container_group" "container" {
  name                = "containergroupname"
  location            = azurerm_resource_group.rg.location
  resource_group_name = azurerm_resource_group.rg.name
  ip_address_type     = "public"
  dns_name_label      = "acrdnslabel"
  os_type             = "Linux"
  restart_policy      = "OnFailure"
  tags                = local.tags

  image_registry_credential {
    server   = data.azurerm_container_registry.registry.login_server
    username = data.azurerm_container_registry.registry.admin_username
    password = data.azurerm_container_registry.registry.admin_password
  }

  container {
    name   = "sonarqube-server"
    image  = "${data.azurerm_container_registry.registry.login_server}/acrrepo:latest"
    cpu    = "2"
    memory = "4"
    environment_variables = {
      WEBSITES_CONTAINER_START_TIME_LIMIT = 400
    }
    secure_environment_variables = {
      SONARQUBE_JDBC_URL      = "jdbc:sqlserver://${azurerm_mssql_server.sql_server.name}.database.windows.net:1433;database=${azurerm_mssql_database.sonar.name};user=${azurerm_mssql_server.sql_server.administrator_login}@${azurerm_mssql_server.sql_server.name};password=${azurerm_mssql_server.sql_server.administrator_login_password};encrypt=true;trustServerCertificate=false;hostNameInCertificate=*.database.windows.net;loginTimeout=30;"
      SONARQUBE_JDBC_USERNAME = azurerm_mssql_server.sql_server.administrator_login
      SONARQUBE_JDBC_PASSWORD = random_password.sql_admin_password.result
    }

    ports {
      port     = 9000
      protocol = "TCP"
    }

    volume {
      name                 = "data"
      mount_path           = "/opt/sonarqube/data"
      share_name           = "data"
      storage_account_name = azurerm_storage_account.storage.name
      storage_account_key  = azurerm_storage_account.storage.primary_access_key
    }

    volume {
      name                 = "extensions"
      mount_path           = "/opt/sonarqube/extensions"
      share_name           = "extensions"
      storage_account_name = azurerm_storage_account.storage.name
      storage_account_key  = azurerm_storage_account.storage.primary_access_key
    }

    volume {
      name                 = "logs"
      mount_path           = "/opt/sonarqube/logs"
      share_name           = "logs"
      storage_account_name = azurerm_storage_account.storage.name
      storage_account_key  = azurerm_storage_account.storage.primary_access_key
    }
  }

  container {
    name     = "caddy-ssl-server"
    image    = "caddy:latest"
    cpu      = "1"
    memory   = "1"
    commands = ["caddy", "reverse-proxy", "--from", "acrrepo.azurecontainer.io", "--to", "localhost:9000"]

    ports {
      port     = 443
      protocol = "TCP"
    }

    ports {
      port     = 80
      protocol = "TCP"
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#final-configuration"&gt;
  &lt;/a&gt;
  Final Configuration
&lt;/h2&gt;

&lt;p&gt;Just follow the SonarQube &lt;a href="https://docs.sonarqube.org/latest/analysis/github-integration/"&gt;documentation&lt;/a&gt; for your specific source control. Then add the required steps to your application code GitHub Actions workflows, then you will see something like this within the SonarQube dashboard:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KGyxbfy8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kq7zku00ri66jwlxer3i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KGyxbfy8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kq7zku00ri66jwlxer3i.png" alt="SonarQube"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#next-steps"&gt;
  &lt;/a&gt;
  Next Steps
&lt;/h2&gt;

&lt;p&gt;Once the container instance is running you probably do not want it running 24/7 so using an Azure Function or Logic App to stop and start the instance when its not needed will definitely save money. I plan to run an Azure Logic App to start the container at 08:00 and stop the container at 18:00 Monday to Friday (I can feel another blog post coming on!)&lt;/p&gt;

&lt;p&gt;I hope I could help you learn something new today, and share how we do things here at &lt;a href="https://www.firstport.co.uk/"&gt;FirstPort&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Any questions, get in touch on &lt;a href="https://twitter.com/GhostInTheWire5"&gt;Twitter&lt;/a&gt;  &lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media ltag__twitter-tweet__media__video-wrapper"&gt;
        &lt;div class="ltag__twitter-tweet__media--video-preview"&gt;
          &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5fcZFt77--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/tweet_video_thumb/EIRun9ZXYAAsMCs.jpg" alt="unknown tweet media content"&gt;
          &lt;img src="/assets/play-butt.svg" class="ltag__twitter-tweet__play-butt" alt="Play butt"&gt;
        &lt;/div&gt;
        &lt;div class="ltag__twitter-tweet__video"&gt;
          
            
          
        &lt;/div&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--GXR7wJds--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1266114810590179328/at1PK_qL_normal.jpg" alt="Andrew [MVP] profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Andrew [MVP]
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/ghostinthewire5"&gt;@ghostinthewire5&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      ‚ú®Azure Readiness Checklist‚ú®&lt;br&gt;&lt;br&gt;Are you ready to go to prod on Azure? Use this checklist to find out: &lt;a href="https://t.co/TtL66YS3nX"&gt;azurechecklist.com&lt;/a&gt;&lt;br&gt;&lt;br&gt;Call for &lt;a href="https://twitter.com/hashtag/contributors"&gt;#contributors&lt;/a&gt;! - Help make this THE go to list for &lt;a href="https://twitter.com/hashtag/Azure"&gt;#Azure&lt;/a&gt; &lt;br&gt;&lt;br&gt;&lt;a href="https://twitter.com/hashtag/Azure"&gt;#Azure&lt;/a&gt;DevOps &lt;a href="https://twitter.com/hashtag/OpenSource"&gt;#OpenSource&lt;/a&gt; - PLS RT ‚ù§Ô∏è 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      09:24 AM - 01 Nov 2019
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1190197872404377600" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1190197872404377600" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1190197872404377600" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


</description>
      <category>azure</category>
      <category>github</category>
      <category>devops</category>
      <category>terraform</category>
    </item>
    <item>
      <title>How to make instagram clone using HTML, CSS. Fully responsive.</title>
      <author>Modern Web</author>
      <pubDate>Mon, 23 Aug 2021 14:04:51 +0000</pubDate>
      <link>https://dev.to/kunaal438/how-to-make-instagram-clone-using-html-css-fully-responsive-49co</link>
      <guid>https://dev.to/kunaal438/how-to-make-instagram-clone-using-html-css-fully-responsive-49co</guid>
      <description>&lt;p&gt;Hello, Today we'll see how to instagram UI clone using HTML, css. No library. Our clone looks very similar to instagram and has post element. With status, and recommendation section.&lt;/p&gt;

&lt;p&gt;To see demo or you want coding tutorial. You can watch the tutorial below.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#video-tutorial"&gt;
  &lt;/a&gt;
  Video Tutorial
&lt;/h1&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/f9fqiNM30ik"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I appreciate if you can support me by subscribing my youtube channel. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So, without wasting more time let's see how to code this.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#code"&gt;
  &lt;/a&gt;
  Code
&lt;/h1&gt;

&lt;p&gt;So to start, we have two files, &lt;code&gt;index.html&lt;/code&gt; and &lt;code&gt;style.css&lt;/code&gt;. And an image folder contains all icons and post images. You can download image folder from &lt;a href="https://drive.google.com/drive/folders/1ePPSYC_SUS19gJq4fFQhdtwP_pOugbAy?usp=sharing"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;So let's start writing code. Let's make navbar first.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#navbar"&gt;
  &lt;/a&gt;
  Navbar
&lt;/h3&gt;

&lt;p&gt;Start with writing basic HTML structure. And link &lt;code&gt;style.css&lt;/code&gt;. After that make navbar like this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;nav&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"navbar"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"nav-wrapper"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"img/logo.PNG"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"brand-img"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"search-box"&lt;/span&gt; &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"search"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"nav-items"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"img/home.PNG"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"icon"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"img/messenger.PNG"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"icon"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"img/add.PNG"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"icon"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"img/explore.PNG"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"icon"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"img/like.PNG"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"icon"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"icon user-profile"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/nav&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Add styles to it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@import&lt;/span&gt; &lt;span class="sx"&gt;url('https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700;900&amp;amp;display=swap')&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;box-sizing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;border-box&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nd"&gt;:focus&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;outline&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fafafa&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;'roboto'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.navbar&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;fixed&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#dfdfdf&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.nav-wrapper&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;70%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1000px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;space-between&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.brand-img&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.search-box&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translateX&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-50%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;200px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;25px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fafafa&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#dfdfdf&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;text-transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;capitalize&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.search-box&lt;/span&gt;&lt;span class="nd"&gt;::placeholder&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.nav-items&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;22px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.icon&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;inline-block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.user-profile&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;22px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background-image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sx"&gt;url(img/profile-pic.png)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;cover&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h6&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  Output
&lt;/h6&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5y8U-IlA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4b3dcnoz67vz3vgon5vv.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5y8U-IlA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4b3dcnoz67vz3vgon5vv.PNG" alt="Capture"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now let's make status section. For that code HTML structure like this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;section&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"main"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"wrapper"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"left-col"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"status-wrapper"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"status-card"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"profile-pic"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"img/cover 1.png"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"username"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;user_name_1&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"status-card"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"profile-pic"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"img/cover 2.png"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"username"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;user_name_2&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"status-card"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"profile-pic"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"img/cover 3.png"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"username"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;user_name_3&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                // +5 more status card elements.
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.main&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;40px&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.wrapper&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;70%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1000px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="py"&gt;grid-template-columns&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;60%&lt;/span&gt; &lt;span class="m"&gt;40%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="py"&gt;grid-gap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;30px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.left-col&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;flex-direction&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;column&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.status-wrapper&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;120px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#dfdfdf&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding-right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;overflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;overflow-x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.status-wrapper&lt;/span&gt;&lt;span class="nd"&gt;::-webkit-scrollbar&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.status-card&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;80px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;80px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;flex-direction&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;column&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin-right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;15px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.profile-pic&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;70px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;70px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;overflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;3px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;linear-gradient&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;45deg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;rgb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;230&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;rgb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;128&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="m"&gt;80%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.profile-pic&lt;/span&gt; &lt;span class="nt"&gt;img&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;object-fit&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;cover&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.username&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;overflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;12px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h6&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  Output
&lt;/h6&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Avjm0v2R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xiulk5wieg2od9rs8emt.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Avjm0v2R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xiulk5wieg2od9rs8emt.PNG" alt="Capture2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now make posts inside &lt;code&gt;left-col&lt;/code&gt; element.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;section class="main"&amp;gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"wrapper"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"left-col"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            // status wrappers

            &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"post"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"info"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"user"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"profile-pic"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"img/cover 1.png"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"username"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;modern_web_channel&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"img/option.PNG"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"options"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"img/cover 1.png"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"post-image"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"post-content"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"reaction-wrapper"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"img/like.PNG"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"icon"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"img/comment.PNG"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"icon"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"img/send.PNG"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"icon"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"img/save.PNG"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"save icon"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"likes"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;1,012 likes&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"description"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;span&amp;gt;&lt;/span&gt;username &lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt; Lorem ipsum dolor sit amet consectetur, adipisicing elit. Pariatur tenetur veritatis placeat, molestiae impedit aut provident eum quo natus molestias?&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"post-time"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;2 minutes ago&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"comment-wrapper"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"img/smile.PNG"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"icon"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"comment-box"&lt;/span&gt; &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"Add a comment"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"comment-btn"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;post&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"post"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"info"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"user"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"profile-pic"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"img/cover 2.png"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"username"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;modern_web_channel&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"img/option.PNG"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"options"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"img/cover 2.png"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"post-image"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"post-content"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"reaction-wrapper"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"img/like.PNG"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"icon"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"img/comment.PNG"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"icon"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"img/send.PNG"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"icon"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"img/save.PNG"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"save icon"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"likes"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;1,012 likes&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"description"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;span&amp;gt;&lt;/span&gt;username &lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt; Lorem ipsum dolor sit amet consectetur, adipisicing elit. Pariatur tenetur veritatis placeat, molestiae impedit aut provident eum quo natus molestias?&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"post-time"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;2 minutes ago&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"comment-wrapper"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"img/smile.PNG"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"icon"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"comment-box"&lt;/span&gt; &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"Add a comment"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"comment-btn"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;post&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
            // +5 more post elements
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.post&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#dfdfdf&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;40px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.info&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;60px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;space-between&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.info&lt;/span&gt; &lt;span class="nc"&gt;.username&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bold&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;14px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin-left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.info&lt;/span&gt; &lt;span class="nc"&gt;.options&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.info&lt;/span&gt; &lt;span class="nc"&gt;.user&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.info&lt;/span&gt; &lt;span class="nc"&gt;.profile-pic&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;40px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;40px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.info&lt;/span&gt; &lt;span class="nc"&gt;.profile-pic&lt;/span&gt; &lt;span class="nt"&gt;img&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.post-image&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;500px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;object-fit&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;cover&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.post-content&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.likes&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bold&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.description&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;14px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;line-height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.description&lt;/span&gt; &lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bold&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin-right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.post-time&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;12px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.comment-wrapper&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#dfdfdf&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;space-between&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.comment-wrapper&lt;/span&gt; &lt;span class="nc"&gt;.icon&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;30px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.comment-box&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;80%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;outline&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;14px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.comment-btn&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="nc"&gt;.action-btn&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;70px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;outline&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;text-transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;capitalize&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;16px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;rgb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;162&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.reaction-wrapper&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.reaction-wrapper&lt;/span&gt; &lt;span class="nc"&gt;.icon&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;25px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin-right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.reaction-wrapper&lt;/span&gt; &lt;span class="nc"&gt;.icon.save&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;margin-left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;You can see &lt;code&gt;action-btn&lt;/code&gt; on the style. Don't worry we'll make that next.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h5&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  Output
&lt;/h5&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0fdesfMJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cds2zbpzsqqfrr1iul8o.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0fdesfMJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cds2zbpzsqqfrr1iul8o.PNG" alt="Capture3"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now last last thing we want to make recommendations.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;section&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"main"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"wrapper"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; 
        // left col element
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"right-col"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"profile-card"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"profile-pic"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"img/profile-pic.png"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"username"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;modern_web_channel&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"sub-text"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;kunaal kumar&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"action-btn"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;switch&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"suggestion-text"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Suggestions for you&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"profile-card"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"profile-pic"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"img/cover 9.png"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"username"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;modern_web_channel&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"sub-text"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;followed bu user&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"action-btn"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;follow&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"profile-card"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"profile-pic"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"img/cover 10.png"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"username"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;modern_web_channel&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"sub-text"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;followed bu user&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"action-btn"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;follow&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"profile-card"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"profile-pic"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"img/cover 11.png"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"username"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;modern_web_channel&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"sub-text"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;followed bu user&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"action-btn"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;follow&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"profile-card"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"profile-pic"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"img/cover 12.png"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"username"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;modern_web_channel&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"sub-text"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;followed bu user&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"action-btn"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;follow&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"profile-card"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"profile-pic"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"img/cover 13.png"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"username"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;modern_web_channel&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"sub-text"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;followed bu user&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"action-btn"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;follow&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.right-col&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.profile-card&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;fit-content&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin-bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.profile-card&lt;/span&gt; &lt;span class="nc"&gt;.profile-pic&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;40px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;40px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin-right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.profile-card&lt;/span&gt;&lt;span class="nd"&gt;:first-child&lt;/span&gt; &lt;span class="nc"&gt;.profile-pic&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;70px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;70px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.profile-card&lt;/span&gt; &lt;span class="nc"&gt;.profile-pic&lt;/span&gt; &lt;span class="nt"&gt;img&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.profile-card&lt;/span&gt; &lt;span class="nc"&gt;.username&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;500&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;14px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.sub-text&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;12px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;500&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.action-btn&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;700&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;12px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.suggestion-text&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;14px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;700&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;@media&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1100px&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="nc"&gt;.right-col&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;.search-box&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nc"&gt;.nav-wrapper&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
    &lt;span class="nc"&gt;.wrapper&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;90%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nc"&gt;.wrapper&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;@media&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;500px&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="nc"&gt;.nav-items&lt;/span&gt; &lt;span class="nc"&gt;.icon&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nc"&gt;.post-image&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;300px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h6&gt;
  &lt;a href="#final-output"&gt;
  &lt;/a&gt;
  Final Output
&lt;/h6&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7M9GwxEO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xavdbzb40k2xvr42wy57.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7M9GwxEO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xavdbzb40k2xvr42wy57.PNG" alt="Capture4"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So that's it. I hope you understood each and everything. If you have doubt or I missed something let me know in the comments.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#tutorials-you-may-find-useful"&gt;
  &lt;/a&gt;
  Tutorials you may find Useful
&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://dev.to/kunaal438/css-the-best-css-effects-of-all-time-most-underrated-web-ux-2chj"&gt;Best CSS Effect&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://youtu.be/4UZXco8rZSE"&gt;Music Player App&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://youtu.be/ZeY9RicS2js"&gt;Disney+ Clone&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://youtu.be/fOKgHld96mU"&gt;Youtube API - Youtube Clone&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://youtu.be/FoD33gwhu00"&gt;TMDB - Netflix Clone&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://youtu.be/MCJPHmh_8aQ"&gt;Responsive Portfolio with contact form&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://youtu.be/AWHGQfzfHxI"&gt;Fully working Blogging website with backend&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I really appreciate if you can subscribe my youtube channel. I create awesome web contents.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/c/modern_web?sub_confirmation=1"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5gs5zBA7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jeitpawvax07cx7r9yoa.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks For reading.  &lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Java Community Starts to Find More Common Ground</title>
      <author>Otmane Riad</author>
      <pubDate>Mon, 23 Aug 2021 14:02:49 +0000</pubDate>
      <link>https://dev.to/nexteventideas/java-community-starts-to-find-more-common-ground-h76</link>
      <guid>https://dev.to/nexteventideas/java-community-starts-to-find-more-common-ground-h76</guid>
      <description>&lt;p&gt;The Java community appears to be rallying around efforts to bridge some of the rifts that have emerged in recent years while at the same time trying to encourage developers to adopt the latest version of the venerable programming language.&lt;/p&gt;

&lt;p&gt;The Eclipse Foundation has made available the 2021-06 release of the open-source Eclipse integrated development environment (IDE), which among other capabilities, adds support for Java 16. The IDE for Java developers also supports the Mac AArch64 instruction set used in Apple M1-based systems, along with support for more mundane innovations such as additional cleanup tools.&lt;/p&gt;

&lt;p&gt;At the same time, a working group has been created to promote the Eclipse IDE brand and its value in the marketplace. Founding members include Bosch, EclipseSource, IBM, Kichwa Coders, Renesas, SAP, VMware, and Yatta Solutions. &lt;/p&gt;

&lt;p&gt;Microsoft, meanwhile, has become a strategic member of the Eclipse Foundation, while IBM has launched IBM Semeru Runtimes to provide developers with class libraries that can be deployed either on OpenJDK or the Eclipse OpenJ9 Java Virtual Machine. IBM contributed its J9 Java Virtual Machine to the Eclipse Foundation back in 2016 to make available a faster Java runtime. OpenJDK is an open-source edition of Java Platform, Standard Edition that IBM has also been supporting since 2010. &lt;/p&gt;

&lt;p&gt;OpenJDK Java&lt;br&gt;
IBM Semeru Runtimes will be available in two editions with different licenses. The IBM Semeru Runtime Open Edition has an open-source license, while IBM Semeru Runtime Certified Edition has an IBM license. ‚ÄúThere are still enterprises that want a more traditional support license,‚Äù says Tom Moore, vice president for open technology at IBM.&lt;/p&gt;

&lt;p&gt;Both of the IBM Semeru Runtimes pass the Eclipse AQAvit quality assurance test suite to provide a stable and supportable engine that can run any kind of Java application. The IBM Semeru Runtime Certified Edition is has also certified by the technology compatibility kit (TCK) that is used to certify Java runtimes. The Eclipse Adoptium project was recently formed to created pre-built binaries of OpenJDK.&lt;/p&gt;

&lt;p&gt;Platforms such as IBM WebSphere Liberty and IBM WebSphere Application Server will going forward support IBM Semeru Runtimes, says Moore.&lt;/p&gt;

&lt;p&gt;All this peace, love, and understanding is arriving at a time when rival programming languages have been gaining adherents. Java may still be the most widely employed programming language for building enterprise applications, but there is now a fair amount of interest in not just multiple JavaScript frameworks but also Go and Rust. The vendors that have contributed so much to Java over the years appear to be starting to realize that internecine squabbles don‚Äôt necessarily encourage new developers to embrace a programming language that has been around in one form or another since 1995.&lt;/p&gt;

&lt;p&gt;Hopefully, the rate at which arguments over various types of Java virtual machines (JVMs) can also soon be put to rest. As important as performance might be, there‚Äôs simply not enough differentiated value at that level of the proverbial stack. None of this means Java is by any means obsolete. It just means the tenor of the conversation needs to shift to what types of great new applications can be built using the latest and greatest versions of a programming language that before too long with be celebrating its 30th birthday.&lt;/p&gt;

</description>
      <category>java</category>
      <category>programming</category>
    </item>
    <item>
      <title>Top 9 observability tools in 2021 perfect for microservices</title>
      <author>Ankit Anand ‚ú®</author>
      <pubDate>Mon, 23 Aug 2021 14:02:10 +0000</pubDate>
      <link>https://dev.to/signoz/top-9-observability-tools-in-2021-perfect-for-microservices-1keg</link>
      <guid>https://dev.to/signoz/top-9-observability-tools-in-2021-perfect-for-microservices-1keg</guid>
      <description>&lt;p&gt;In microservices architecture, observability tools enable you to create central dashboards to gauge the health of your distributed systems. Let's explore some top observability tools which can help you in meeting the increasing demands of today's users.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/SigNoz/signoz"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---bkYFgEJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i3iokwnsjpkiad1dh51y.png" alt="SigNoz GitHub repo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In today's digital economy, distributed architectures have become the norm. Organizations are also opting for polyglot microservices to boost developer productivity. But how do you manage the operational challenges of such systems?&lt;br&gt;
Customer experience is the key to the success of tech companies of any size, be it startups, mid or large-level enterprises. You need to proactively solve for things like availability and performance of your applications in production.&lt;/p&gt;

&lt;p&gt;And that's where observability comes into the picture. A robust observability framework is now critical for maintaining your systems in fine health. Observability is powered by telemetry data - a combination of logs, metrics, and traces.&lt;/p&gt;

&lt;p&gt;A good observability tool has many components:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;It should enable you to generate, sample, process, and emit telemetry data.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It should have a good storage system for fast retrieval and long-term retention.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It should have a good visualization layer for your teams to consume and take action.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In this article, let's explore the top 9 observability tools in 2021 which can be perfect for your microservice application.&lt;/p&gt;

&lt;p&gt;List of Top 9 observability tools in 2021&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#signoz"&gt;SigNoz&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#instana"&gt;Instana&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#dynatrace"&gt;Dynatrace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#grafana-labs"&gt;Grafana Labs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#honeycomb"&gt;Honeycomb&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lightstep"&gt;Lightstep&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#new-relic"&gt;New Relic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#datadog"&gt;Datadog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#splunk"&gt;Splunk&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#top-observability-tools-in-2021"&gt;
  &lt;/a&gt;
  Top observability tools in 2021
&lt;/h2&gt;

&lt;p&gt;Now let's explore the top observability tools in 2021.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#signoz"&gt;
  &lt;/a&gt;
  SigNoz
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://signoz.io/"&gt;SigNoz&lt;/a&gt; is a full-stack open-source APM and observability tool. It captures both metrics and traces with log management currently in the product roadmap. One of the advantages of SigNoz is that it is open-source, so you are not locked in with a SaaS vendor. It can also be hosted within your infra. As such, you don't need to send your data to any third party.&lt;/p&gt;

&lt;p&gt;SigNoz enables a full-stack observability stack for your microservice application. Let's see what does a full-stack observability tool entails:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Generation of telemetry data(logs, metrics &amp;amp; traces)&lt;/li&gt;
&lt;li&gt;A storage backend to store the telemetry data, which is often huge&lt;/li&gt;
&lt;li&gt;A visualization layer for your engineering teams to consume and take actions&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;SigNoz uses OpenTelemetry - a vendor-agnostic instrumentation library for generating telemetry data. OpenTelemetry is a project under Cloud Native Computing Foundation and is becoming the industry standard for creating portable telemetry data.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9rxPgdV_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9mq81tiwjspbh43wg885.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9rxPgdV_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9mq81tiwjspbh43wg885.png" alt="SigNoz UI showing RED metrics"&gt;&lt;/a&gt;SigNoz Dashboard with visualization of the popular RED metrics for your application (Number of requests, rate of error &amp;amp; duration)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eUouI2yO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1h4e36q2afjkywkdgn81.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eUouI2yO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1h4e36q2afjkywkdgn81.png" alt="Flamegraphs &amp;amp; gantt charts on SigNoz dashboard"&gt;&lt;/a&gt;SigNoz also has Flamegraphs and Gantt charts to visualize distributed tracing for your microservice application&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#instana"&gt;
  &lt;/a&gt;
  Instana
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.instana.com/" rel="noopener noreferrer nofollow"&gt;&lt;b&gt;Instana&lt;/b&gt;&lt;/a&gt;¬†is enterprise observability and automated application monitoring tool. It uses an agent to discover and monitor components. This agent needs to be installed on every host that is to be monitored.&lt;/p&gt;

&lt;p&gt;The agents deploy sensors crafted to capture data from different technologies. Sensors automatically collect configuration, changes, metrics, and events.&lt;/p&gt;

&lt;p&gt;Instana charges $75 per host/per month if billed annually. It also supports open standards like Prometheus, StatsD, OpenTracing, and Opencensus.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fEEgjeVW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2atanwqzhac37do56oc6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fEEgjeVW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2atanwqzhac37do56oc6.png" alt="Instana dashboard"&gt;&lt;/a&gt;Instana Dashboard. (Source: Instana Docs)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dynatrace"&gt;
  &lt;/a&gt;
  Dynatrace
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.dynatrace.com/" rel="noopener noreferrer nofollow"&gt;&lt;b&gt;Dynatrace&lt;/b&gt;&lt;/a&gt;¬†is an extensive SaaS enterprise tool targeting a broad spectrum of monitoring needs of large-scale enterprises. It provides an AI engine called Davis to automate things like root cause analysis and anomaly detection.&lt;/p&gt;

&lt;p&gt;Dynatrace also provides a different solution for infrastructure monitoring, application security, and cloud automation. The pricing depends on the product you want to opt for.&lt;/p&gt;

&lt;p&gt;Full-stack monitoring, the product aimed to provide observability for apps, is priced at $69 per month for 8 GB per host if billed annually.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ziqzLXBm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/av89iw0hb2h6jnx9ikxe.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ziqzLXBm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/av89iw0hb2h6jnx9ikxe.png" alt="Dynatrace dashboard"&gt;&lt;/a&gt;Dynatrace dashboard (Source: Dynatrace website)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#grafana-labs"&gt;
  &lt;/a&gt;
  Grafana Labs
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://grafana.com/" rel="noopener noreferrer nofollow"&gt;&lt;b&gt;Grafana&lt;/b&gt;&lt;/a&gt;¬†is popular open-source analytics and interactive visualization web layer. It supports many different storage backends for time-series data. It can be connected to data sources like Graphite, InfluxDB, ElasticSearch, Prometheus, and many more. For traces, it supports Jaeger, Tempo, X-Ray, and Zipkin data sources.&lt;/p&gt;

&lt;p&gt;Grafana offers plugins, dashboards, alerts, and different user-level access for governance as an observability tool. In addition, it provides two versions of services:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Grafana cloud - You can send your data to Grafana cloud dashboards. It provides solutions such as Grafana Cloud Logs, Grafana Cloud Metrics, and Grafana Cloud Traces.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Grafana Enterprise stack - It provides support for metrics and logs with Grafana installed within your infrastructure. It also comes with expert support.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pJhCyIGF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wo34szgvqki55shr3hib.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pJhCyIGF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wo34szgvqki55shr3hib.png" alt="Grafana dashboard"&gt;&lt;/a&gt;Grafana dashboard (Source: Grafana website)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#honeycomb"&gt;
  &lt;/a&gt;
  Honeycomb
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.honeycomb.io/" rel="noopener noreferrer nofollow"&gt;&lt;b&gt;Honeycomb&lt;/b&gt;&lt;/a&gt; is an observability tool that aims to provide the visibility needed by engineering teams to troubleshoot problems in distributed systems. It is a full-stack cloud-based observability tool with support for events, logs, and traces.&lt;/p&gt;

&lt;p&gt;If your code is not already instrumented, Honeycomb provides an automatic instrumentation agent called Honeycomb beelines, which can instrument your code. It also supports OpenTelemetry for generating instrumentation data.&lt;/p&gt;

&lt;p&gt;Honeycomb offers a free tier of service, and its pro tier starts at $100. The pricing is based on data retention and event volume captured.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cT8HNLhM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uz29hkzpcck2osvlcgqt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cT8HNLhM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uz29hkzpcck2osvlcgqt.png" alt="Honeycomb dashboard"&gt;&lt;/a&gt;Snapshot of Honeycomb dashboard (Source: Honeycomb documentation)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lightstep"&gt;
  &lt;/a&gt;
  Lightstep
&lt;/h3&gt;

&lt;p&gt;As an observability tool, &lt;a href="https://lightstep.com/" rel="noopener noreferrer nofollow"&gt;&lt;b&gt;Lightstep&lt;/b&gt;&lt;/a&gt;¬†automatically detects changes to your application, infrastructure, and user experience. It can then highlight the specific causes for the changes.&lt;/p&gt;

&lt;p&gt;For instrumentation, Lightstep uses OpenTelemetry to generate and send telemetry data to what it calls Lightstep Microsatellites. The microsatellites collect and forward the data to Lightstep SaaS for analysis. Lightstep also has its own time-series database to store the telemetry data.&lt;/p&gt;

&lt;p&gt;The observability platform provided by Lightstep analyzes the data, builds traces, and creates service diagrams to monitor any change in performance.&lt;/p&gt;

&lt;p&gt;Lightstep offers three plans of service:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Community edition - Free version to help you get started.&lt;/li&gt;
&lt;li&gt;Teams edition - Starts at $100 per month and is based on the number of monthly active services.&lt;/li&gt;
&lt;li&gt;Enterprise edition - Offered to large enterprises with discounts based on volume.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XRJS-Wqc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8sco04yy3awgeysyufad.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XRJS-Wqc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8sco04yy3awgeysyufad.png" alt="Lighstep dashboard"&gt;&lt;/a&gt;Lightstep dashboard (Source: Lightstep sandbox environment)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#new-relic"&gt;
  &lt;/a&gt;
  New Relic
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://newrelic.com/" rel="noopener noreferrer nofollow"&gt;&lt;b&gt;New Relic&lt;/b&gt;&lt;/a&gt;¬†is one of the oldest companies in the observability domain. Its observability tool enables you to visualize, analyze and troubleshoot your software stack in one platform. It also supports auto-instrumentation for eight popular programming languages.&lt;/p&gt;

&lt;p&gt;New Relic can connect your application performance with your infrastructure health to provide you better insights for quick troubleshooting.&lt;/p&gt;

&lt;p&gt;Standard offering includes plans for teams up to 5 full users. Their pricing depends on the amount of data ingested with 100 GB free data ingest and $0.25 per extra GB.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NGcHoHLR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lmjgvcp9pbze5tdonwu5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NGcHoHLR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lmjgvcp9pbze5tdonwu5.png" alt="New Relic dashboard"&gt;&lt;/a&gt;New Relic dashboard (Source: New Relic website)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#datadog"&gt;
  &lt;/a&gt;
  DataDog
&lt;/h3&gt;

&lt;p&gt;With the &lt;a href="https://www.datadoghq.com/" rel="noopener noreferrer nofollow"&gt;&lt;b&gt;DataDog&lt;/b&gt;&lt;/a&gt; observability tool, you can do a range of things like infrastructure monitoring, log management, application performance monitoring, and security monitoring. For providing full visibility into distributed applications, DataDog allows you to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Trace requests from end to end across distributed systems&lt;/li&gt;
&lt;li&gt;Charts of latency percentiles(p95, p99, etc.)&lt;/li&gt;
&lt;li&gt;Instrumentation with open-source libraries&lt;/li&gt;
&lt;li&gt;seamless navigation between logs, metrics, and traces&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The pricing depends on the product you opt for. For example, the APM solution provides end-to-end distributed tracing, starts at $31 per host per month if billed annually.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V6hZuVen--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a8udb6kohjs9cbu132wl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V6hZuVen--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a8udb6kohjs9cbu132wl.png" alt="DataDog dashboard"&gt;&lt;/a&gt;DataDog dashboard (Source: DataDog website)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#splunk"&gt;
  &lt;/a&gt;
  Splunk
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.splunk.com/" rel="noopener noreferrer nofollow"&gt;&lt;b&gt;Splunk&lt;/b&gt;&lt;/a&gt; is a comprehensive observability tool that offers multiple products, including:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;infrastructure monitoring&lt;/li&gt;
&lt;li&gt;Application performance monitoring&lt;/li&gt;
&lt;li&gt;Log Observer&lt;/li&gt;
&lt;li&gt;Real User monitoring&lt;/li&gt;
&lt;li&gt;Synthetic monitoring, and&lt;/li&gt;
&lt;li&gt;Incident response management&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Splunk allows you to collect all traces instead of a sample set. It also provides service maps to offer DevOps teams visibility into interactions between different services, dependencies, and performance.&lt;/p&gt;

&lt;p&gt;Splunk's observability Cloud for Enterprise editions starts at $95 per host per month if billed annually.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--w-8x85oW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8sot0hz2274tix0u1trm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w-8x85oW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8sot0hz2274tix0u1trm.png" alt="Splunk dashboard"&gt;&lt;/a&gt;DataDog dashboard (Source: DataDog website)&amp;lt;/figcaption&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-choose-the-right-observability-tool"&gt;
  &lt;/a&gt;
  How to choose the right observability tool?
&lt;/h2&gt;

&lt;p&gt;For applications with microservices architecture, observability tools have become critical to meet operational challenges at scale. Without observability, it is almost impossible for your engineering teams to troubleshoot bugs and assess the performance of your applications. Hence choosing the right observability tool for your application is important. A few questions to ask yourself before selecting an observability tool are as follows:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Are there any privacy laws that you need to take care of while sharing user's data with a third-party tool?&lt;/li&gt;
&lt;li&gt;Does the pricing suit your budget?&lt;/li&gt;
&lt;li&gt;How easy is it to get started with things like instrumentation?&lt;/li&gt;
&lt;li&gt;How much data do you want to retain?&lt;/li&gt;
&lt;li&gt;Does the tool provide seamless integration between metrics, logs, and traces?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;An open-source tool like¬†&lt;a href="https://signoz.io/"&gt;SigNoz&lt;/a&gt;, can be your best option in today's privacy-driven digital economy. Moreover, SigNoz uses open-source standards for instrumentation, and its code can be assessed for quality from its¬†&lt;a href="https://github.com/SigNoz/signoz"&gt;GitHub repo&lt;/a&gt;. Finally, as the tool is open-sourced, you get the support of the community while having access to out-of-box features like a SaaS vendor.&lt;/p&gt;

&lt;p&gt;Check out SigNoz GitHub repo:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/SigNoz/signoz"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---bkYFgEJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i3iokwnsjpkiad1dh51y.png" alt="SigNoz GitHub repo"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>devops</category>
      <category>monitoring</category>
      <category>observability</category>
      <category>docker</category>
    </item>
    <item>
      <title>Design to Duty: The Accounting and Reporting Systems at Adyen</title>
      <author>Willem Pino</author>
      <pubDate>Mon, 23 Aug 2021 13:51:43 +0000</pubDate>
      <link>https://dev.to/adyen/design-to-duty-the-accounting-and-reporting-systems-at-adyen-3fae</link>
      <guid>https://dev.to/adyen/design-to-duty-the-accounting-and-reporting-systems-at-adyen-3fae</guid>
      <description>&lt;p&gt;In this blog, we will have a closer look at how we make decisions around our accounting system and how it evolved as a consequence. We will do the same for our reporting and analysis frameworks.&lt;/p&gt;

&lt;p&gt;This is part two of a series. So, if you have not done so already, it might be nice to start with the &lt;a href="https://www.adyen.com/blog/design-to-duty-adyen-architecture"&gt;first blog&lt;/a&gt;. In that one, we talked about what Adyen does at a high level, how we think about choosing between home-grown and open-source software, and how this shaped our edge services.&lt;/p&gt;

&lt;p&gt;The themes that were laid out in &lt;a href="https://www.adyen.com/blog/design-to-duty-adyen-architecture"&gt;part one&lt;/a&gt; will return and be referenced in this blog. If you didn‚Äôt read the first one, it might be that some context is missing.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#accounting-system"&gt;
  &lt;/a&gt;
  Accounting system
&lt;/h1&gt;

&lt;p&gt;Once we have processed a payment, the next step is accounting for it. This is needed because after processing transactions, we receive the money from our partners and we need to determine how much to settle to each merchant. Of course, we also need it for reporting.&lt;/p&gt;

&lt;p&gt;For every payment that enters the system, we do double-entry bookkeeping. The way we ensure that we do so correctly is quite unique to Adyen. The only way to add new records to the accounting system is by means of templates. A template in this context is a recipe that takes certain amounts and accounts as input and converts them into specific journals that can be inserted into the ledger.&lt;/p&gt;

&lt;p&gt;These templates are mathematically verified. To achieve this, we represent the amounts that serve as inputs by logical entities and prove that every combination of amounts will result in a net sum of 0. This verification is fully automated and runs on every change to the templates.&lt;/p&gt;

&lt;p&gt;All of this means we can guarantee that if at any time, we sum up all the records in the accounting system, the result will always be 0. Combine this with the aforementioned double-entry bookkeeping, and it means for every euro that ever went through Adyen, we know exactly where it came from and where it went.&lt;/p&gt;

&lt;p&gt;We leverage this same system of accounting for our banking platform.&lt;/p&gt;

&lt;p&gt;It might be superfluous to mention it, but our accounting framework is also written in-house. Here the choice was evident, it is as core as can be to our business, and nothing in the open-source landscape came close to what we wanted.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#underlying-database"&gt;
  &lt;/a&gt;
  Underlying Database
&lt;/h2&gt;

&lt;p&gt;Having all these nice things does come with some cost. Over the lifetime of a payment transaction, about 50 rows have to be inserted into the accounting database. This means that per second, just for the accounting system, the amount of inserts is an order of magnitude higher than the hundreds of transactions we process every second. Some time ago these thousands of inserts a second started to cause issues for our PostgreSQL database. &lt;a href="https://www.adyen.com/blog/updating-a-50-terabyte-postgresql-database"&gt;This blog&lt;/a&gt; has more information on maintaining such large PostgreSQL databases.&lt;/p&gt;

&lt;p&gt;We had already split a reporting database from our accounting database to minimize reads (more on this below), but at some point, even with mainly inserts and updates, the database didn‚Äôt scale anymore. This is when we decided to shard our accounting database into several accounting clusters.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IslpLLFM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/0%2ArTo_S_8bcqd66hRP.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IslpLLFM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/0%2ArTo_S_8bcqd66hRP.png" alt="accounting DB"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sharding-strategy"&gt;
  &lt;/a&gt;
  Sharding strategy
&lt;/h2&gt;

&lt;p&gt;Now we have several accounting databases, or clusters, processing side-by-side. We considered incorporating domain knowledge into the sharding strategy, but, for several reasons, eventually decided to go for a simple round-robin strategy with some parameters we can adjust.&lt;/p&gt;

&lt;p&gt;First of all, every rule we considered would bring its own problems. For example, if we would put each processing merchant in one database, you still need to go to every shard when you need aggregate data to send to our payment method partners. The same holds the other way around. If you split by payment method you still need to go to every shard when you need aggregate data on the merchant level.&lt;/p&gt;

&lt;p&gt;Incorporating business logic would also complicate the routing, a round-robin strategy is very simple and robust and you do not have to think about balancing your shards. Finally, you lose a lot of flexibility. At the moment we can just add a new cluster whenever we need more capacity or remove one from the routing when we see strange behavior we want to investigate.&lt;/p&gt;

&lt;p&gt;In the end, we decided the benefits domain knowledge routing would offer were not worth the loss of flexibility and increased complexity.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#migration"&gt;
  &lt;/a&gt;
  Migration
&lt;/h2&gt;

&lt;p&gt;The migration to a sharded accounting database was quite painful. This was due to two things. First of all, the accounting logic in the code, pretty heavily embedded in any payments processor, working on the assumption there was just one accounting database. This had to be rewritten.&lt;/p&gt;

&lt;p&gt;As an example, consider a payout to a merchant. This needs to come from one account. However, because you processed these transactions on different clusters, the money needs to be transferred from one cluster to the other in order to end up in the same account. To do this without compromising on the strict correctness requirement was quite difficult. In the end, we created several jobs and processes that use back and forth messages between the clusters to keep everything aligned.&lt;/p&gt;

&lt;p&gt;The second complicating factor was that, if we received reports on processed transactions from our partners, we needed to match them to transactions in different clusters. Instead of parsing a file and matching it directly to the transactions, we introduced a two-step framework that would first parse a file and then split it into the relevant parts for each cluster. The second step was to match the relevant transactions within the clusters.&lt;/p&gt;

&lt;p&gt;Whereas the first problem was solvable in a generic way, the reconciliation needs to happen for a lot of different very custom integrations so this was a real team effort.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#future-challenges"&gt;
  &lt;/a&gt;
  Future challenges
&lt;/h2&gt;

&lt;p&gt;From a scaling perspective, the risk that this approach introduces is that any process that depends on all accounting databases being up to date or available becomes a potential liability.&lt;/p&gt;

&lt;p&gt;Historically, processes such as our back office (admin area) would interface directly with the accounting databases to display data or to make corrections. If one of the accounting clusters is not reachable this cannot be done anymore.&lt;/p&gt;

&lt;p&gt;This is not a problem when there are only a few clusters, but as the number of accounting clusters grows, the chance of any of them being unavailable, planned or unplanned, grows with it. This means that instead of interacting with it directly, we need to do so with an intermediate that will mitigate this risk.&lt;/p&gt;

&lt;p&gt;Also, rebalancing the clusters is something that is essential for traditional sharding (inside one database) but has not been implemented yet for this setup. If we add a new cluster, it will be empty while the old clusters keep growing. How do we avoid the original clusters becoming too big?&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#connecting-the-edge-services-with-the-accounting-system"&gt;
  &lt;/a&gt;
  Connecting the edge services with the accounting system
&lt;/h1&gt;

&lt;p&gt;Talking so casually about the downtime of our accounting clusters hints at different priorities in this part of the system compared to our edge systems discussed earlier. Whereas for the latter the priority was uptime, for the accounting systems we don‚Äôt mind if they are down for a little bit as long as we can guarantee their reliability and consistency. For me, it was interesting to see how these systems are tied together.&lt;/p&gt;

&lt;p&gt;In a very naive solution, these conflicting principles cause a conflict. The PAL would forward the payment to the accounting system to save it. If something goes wrong, do you still save the payments with a risk of inconsistent data, compromising on the consistency priority of the accounting system? Or do you stop processing, compromising on the uptime priority of the frontend? We went for a failsafe in between.&lt;/p&gt;

&lt;p&gt;The Payment Processing Layer (or PAL, see part one) saves the payment in a local database and a separate process picks it up when possible. This process will run behind if we have doubt about whether we can guarantee consistency in the accounting or if an accounting database is not available but that will not impact the availability of the PAL itself. An added benefit of this setup is that if the PAL crashes, no payments are lost because the queue is stored in a database and not in memory.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--t4K1kKUe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/0%2A9Y9apDUCsAkJiMMt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t4K1kKUe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/0%2A9Y9apDUCsAkJiMMt.png" alt="Queue processor"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.adyen.com/blog/The-Adyen-way-of-engineering--we-design-for-20x"&gt;In another blog of ours&lt;/a&gt;, you can find more info on how this asynchronous queue between the different layers works.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#technology-choices"&gt;
  &lt;/a&gt;
  Technology choices
&lt;/h2&gt;

&lt;p&gt;The large accounting database and the short-lived queue both use a PostgreSQL database. This was again a pragmatic choice. In the beginning, the requirements on the system were not that high, so we went for a one-size-fits-all solution for databases. It might be that better solutions for queueing were available at that time or since, but we felt that it was not worth the additional complexity they would add to our system.&lt;/p&gt;

&lt;p&gt;We have since been pleasantly surprised by how well PostgreSQL has performed for both use cases. At this point, we have dozens of local databases that can be instantiated dynamically at application startup and transactional databases of hundreds of terabytes running on the same technology.&lt;/p&gt;

&lt;p&gt;This shows that specialized solutions that were designed to tackle specific problems that occur at very large scales might not be needed for smaller applications (or even quite large ones) while they often do add a lot of complexity. Of course, this is always a balancing act, because the solution might have nice specialized features and it is comforting to know that it will definitely scale.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#reporting"&gt;
  &lt;/a&gt;
  Reporting
&lt;/h1&gt;

&lt;p&gt;Creating separate accounting clusters creates a new challenge. Namely, how do you generate reports for every merchant and payment method every day from all these data sources?&lt;/p&gt;

&lt;p&gt;We did have a reporting database where we saved the relevant data in a denormalized form. Initially created to minimize reads on the accounting database. However, relying on this might work for a while, but eventually, it would be just another bottleneck.&lt;/p&gt;

&lt;p&gt;For this part of the system, the priority was throughput. We decided to stream the data from the clusters and to have specialized processes consume and preprocess the data for specific use cases. This way there are only a limited number of processes that have to read the stream and when the report is generated a lot of the work is already done.&lt;/p&gt;

&lt;p&gt;The reporting tables can be split over as many databases as needed.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S6IITZ2F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/0%2AtjrZULUnc1zNeTdU.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S6IITZ2F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2000/0%2AtjrZULUnc1zNeTdU.png" alt="Reporting DB"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;At the time a lot of different technologies were considered for this, especially Kafka. Our current processes were under quite some pressure so time was of the essence. We needed a high throughput, low latency streaming framework that could ensure exactly-once processing, even if processes crashed.&lt;/p&gt;

&lt;p&gt;We scoped a lot of open source technologies but none offered the feature set we were looking for. For example, exactly-once delivery was not yet supported by Kafka.&lt;/p&gt;

&lt;p&gt;On the other hand, we had a lot of familiarity with another technology that was close at hand and had proven very reliable. At this point, you might not be surprised to learn that this was PostgreSQL. For the same reasons, we used Java to write the application code on top of it.&lt;/p&gt;

&lt;p&gt;Even though we did have to do some rounds of optimizations and we are missing some features, such as topics, we are happy with our choice. The setup stood the test of time even though traffic increased by an order of magnitude.&lt;/p&gt;

&lt;p&gt;Even though we initially chose to write something ourselves, this is not a definite choice. In fact, there is an ongoing discussion whether this framework will allow us to scale another 20x or whether we should swap it out for an open-source solution such as Kafka. The 20x scaling factor is a rule of thumb we often use internally when designing a solution or determining whether we are still satisfied with it.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#analysis"&gt;
  &lt;/a&gt;
  Analysis
&lt;/h1&gt;

&lt;p&gt;For our data analysis setup, we did not build much in-house but chose to adopt industry standards. We run a Spark Hadoop cluster combined with Airflow. Deploying it on our own servers was an effort but now it is running smoothly. There is &lt;a href="https://www.adyen.com/blog/building-our-data-science-platform-with-spark-and-jupyter"&gt;a blog about the initial shift&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Remarkable about the setup is that we still use our custom streaming system to verify all the information is actually consumed and correct.&lt;/p&gt;

&lt;p&gt;With the Spark Hadoop cluster in place, the main struggle was to feed the results back into the synchronous systems. &lt;a href="https://www.adyen.com/blog/predicting-and-monitoring-payment-volumes-with-spark-and-elasticsearch"&gt;Here&lt;/a&gt; we describe how we did this for monitoring. After this worked for that use case, we expanded it into a generic framework that can also score the machine learning models in real-time.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;The focus of this blog was on payments processing but, as mentioned before, the concepts translate almost perfectly to the other business contexts such as the bank. This is because all systems have high availability and latency requirements on the edge services and strong consistency and reliability on the accounting layer. In the reporting and analysis frameworks, we tie all of the systems together.&lt;/p&gt;

&lt;p&gt;This similarity in architecture, together with our conservative tech stack, allows developers to easily switch between teams. They already know the general design and the technologies used, even if the business context is completely different.&lt;/p&gt;

&lt;p&gt;We hope that this blog made both our architecture and the way we arrived at it clearer. Perhaps it will also influence how you evaluate design choices for your own company in the future.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#technical-careers-at-adyen"&gt;
  &lt;/a&gt;
  Technical careers at Adyen
&lt;/h2&gt;

&lt;p&gt;We are on the lookout for talented engineers and technical people to help us build the infrastructure of global commerce!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.adyen.com/careers/vacancies/development"&gt;Check out developer vacancies&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#developer-newsletter"&gt;
  &lt;/a&gt;
  Developer newsletter
&lt;/h2&gt;

&lt;p&gt;Get updated on new blog posts and other developer news.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.adyen.com/newsletter/developers"&gt;Subscribe now&lt;/a&gt;&lt;/p&gt;

</description>
      <category>architecture</category>
      <category>fintech</category>
      <category>adyen</category>
    </item>
    <item>
      <title>Day 10 : links to important things I learnt today</title>
      <author>Gaurav-Shekhawat</author>
      <pubDate>Mon, 23 Aug 2021 13:45:22 +0000</pubDate>
      <link>https://dev.to/gauravshekhawat/day-10-links-to-important-things-i-learnt-today-3bbo</link>
      <guid>https://dev.to/gauravshekhawat/day-10-links-to-important-things-i-learnt-today-3bbo</guid>
      <description>&lt;p&gt;I am summarising everything that I have learnt today. If you also want to go through the same topic, I believe the article links I am providing is one of the best available on the web available for that topic.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;DOM tree basics :- &lt;a href="https://javascript.info/dom-nodes#an-example-of-the-dom"&gt;java-script-info&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;




&lt;ul&gt;
&lt;li&gt;The essential guide to javascript Iterators (the for-of loop guide) :- &lt;a href="https://www.javascripttutorial.net/es6/javascript-iterator/"&gt;javascriptutorial.net&lt;/a&gt; 
and &lt;a href="https://www.educative.io/courses/step-up-your-js-a-comprehensive-guide-to-intermediate-javascript/m27Yx11KPMG"&gt;Educative&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;




&lt;ul&gt;
&lt;li&gt;Walking through the DOM :- &lt;a href="https://javascript.info/dom-navigation#the-sibling-question"&gt;javascript-info&lt;/a&gt; . In this article, you may feel some problem at the last with the table properties. Just see the properties being used in the example, ignore others (we will search for them whenever needed, as we know what to search for).&lt;/li&gt;
&lt;/ul&gt;




&lt;ul&gt;
&lt;li&gt;Searching element in DOM :- &lt;a href="https://javascript.info/searching-elements-dom"&gt;javascript-info&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;




&lt;ul&gt;
&lt;li&gt;Debugging javascript in dev tools :-  &lt;a href="https://developer.chrome.com/docs/devtools/javascript/"&gt;Google&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;




</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>webdev</category>
      <category>100daysofcode</category>
    </item>
    <item>
      <title>What Programming Books are Developers Reading?</title>
      <author>Otmane Riad</author>
      <pubDate>Mon, 23 Aug 2021 13:34:29 +0000</pubDate>
      <link>https://dev.to/nexteventideas/what-programming-books-are-developers-reading-7fk</link>
      <guid>https://dev.to/nexteventideas/what-programming-books-are-developers-reading-7fk</guid>
      <description>&lt;p&gt;Many programmers and technology professionals continuously educate themselves as technology changes and to expand their knowledge base. Many of today‚Äôs top programming languages have been popular for the past ten years (or longer in some cases), so having an understanding of each can be valuable for a developer interested in maintaining their flexibility and employability in the industry.&lt;br&gt;
According to the Tiobe Index, today‚Äôs most popular languages include:&lt;/p&gt;

&lt;p&gt;C&lt;br&gt;
Java&lt;br&gt;
Python&lt;br&gt;
C++&lt;br&gt;
C#&lt;br&gt;
Visual Basic&lt;br&gt;
JavaScript&lt;br&gt;
PHP&lt;br&gt;
SQL&lt;br&gt;
Assembly language&lt;/p&gt;

&lt;p&gt;read more: &lt;a href="https://hitechnoloy.ca/what-programming-books-are-developers-reading/"&gt;https://hitechnoloy.ca/what-programming-books-are-developers-reading/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>programming</category>
      <category>javascript</category>
      <category>python</category>
      <category>php</category>
    </item>
    <item>
      <title>Tina Cloud -  a headless CMS backed by Git</title>
      <author>Tomek Poniatowicz</author>
      <pubDate>Mon, 23 Aug 2021 13:04:14 +0000</pubDate>
      <link>https://dev.to/tomekponiat/tina-a-headless-cms-backed-by-git-3j80</link>
      <guid>https://dev.to/tomekponiat/tina-a-headless-cms-backed-by-git-3j80</guid>
      <description>&lt;p&gt;A common problem when trying to convince someone to use Jamstack tools is the learning curve and that‚Äôs understandable, not everyone wants to spend time on learning and more importantly not everyone needs to. After all, it's a bit unfair to expect a blogger, content creator or someone who just isn't that much on the dev side of things to jump at the idea of sitting through courses and tutorials and learning to code. Well thankfully there‚Äôs a little something that can help with that and it's called Tina.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#realtime-editor"&gt;
  &lt;/a&gt;
  Real-time editor
&lt;/h2&gt;

&lt;p&gt;What is Tina? Well first let‚Äôs look at TinaCMS released by Forestry in late 2019. Despite its name it‚Äôs actually not a Content Management System. A typical CMS has an attached frontend and looks something like WordPress, where everything you create has to fit its templates. This is great when you‚Äôre starting out, but can be a major hindrance as you‚Äôre limited in terms of design which makes it hard to stand out. TinaCMS is a Headless CMS, it operates purely on the backend and reaches the frontend through an API which means you‚Äôre free to design your website and display your content any way you like. But that‚Äôs just the inner workings, the actual features are much more enticing&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Real-time visual editor&lt;/strong&gt;: This is where TinaCMS really shines, it's basically an open source real-time website editor. This approach is perfect for content creators who can simply add or edit content on the fly and see how it looks on the website in real time. Want to add a post on your site or maybe just fix a couple typos in an existing one? It's as simple as logging in, using the editor to do it and clicking save. No coding needed.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Storage agnostic&lt;/strong&gt;: It's entirely up to you how you want to store content Google Sheets, Airtable, Github or even another Headless CMS&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Supports&lt;/strong&gt;: React, GraphQL, REST, Gatsby, Next.js Javascript, PHP, Android, iOS, Python, Java Ruby and .Net&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fnrHr7vy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xzsgzeroq00a4wjbkdyk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fnrHr7vy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xzsgzeroq00a4wjbkdyk.png" alt="Tina CMS"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#source-tinaio"&gt;
  &lt;/a&gt;
  Source: &lt;a href="https://tina.io/"&gt;tina.io&lt;/a&gt;
&lt;/h5&gt;

&lt;h2&gt;
  &lt;a href="#into-the-cloud"&gt;
  &lt;/a&gt;
  Into the cloud
&lt;/h2&gt;

&lt;p&gt;TinaCMS started out as a simple React library on GitHub, if you wanted to do something with it you had to have an account there as it handled authentication. That‚Äôs not ideal when your focus is reaching content creators and not developers. On the other hand while the website editor was great for content creators it was somewhat lacking for admins who prefer working with a more traditional admin panel. Another problem was storing data as TinaCMS while agnostic didn't have any dedicated solution for that. So Forestry came up with a new tool: &lt;strong&gt;Tina Cloud&lt;/strong&gt;. It combines the TinaCMS content editor with the power of GraphQL. It's still in alpha but you can already see its key features.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Easier access&lt;/strong&gt;: GitHub account no longer needed, now accessible to everyone&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Database-like&lt;/strong&gt;: as mentioned before TinaCMS lets you use another Headless CMS for storage and that‚Äôs exactly where Tina Cloud comes in. It provides you with a GraphQL interface for interacting with your content stored in open formats like Markdown and JSON. This basically makes it work like a database which you can query with GraphQL&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Admin dashboard&lt;/strong&gt;: TinaCloud uses the TinaCMS editor but it also provides admins with a dashboard letting them manage different sites and collaborators.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4-qa18Sw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n7ageiewi26mfapm9vvv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4-qa18Sw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n7ageiewi26mfapm9vvv.png" alt="Tina in Cloud"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h5&gt;
  &lt;a href="#source-tinaio"&gt;
  &lt;/a&gt;
  Source: &lt;a href="https://tina.io/"&gt;tina.io&lt;/a&gt;
&lt;/h5&gt;

&lt;h2&gt;
  &lt;a href="#patience-please"&gt;
  &lt;/a&gt;
  Patience please
&lt;/h2&gt;

&lt;p&gt;As you can see TinaCMS is already a great tool for those working with someone who isn't into coding or if you‚Äôre just looking for something that will help you manage your own site or blog. Now with Tina Cloud it's even more functional and useful for diverse teams with admins and content creators and all that despite it all being less than 2 years old. It's definitely something worth keeping an eye on as it's still in development and will definitely get more features down the road.&lt;/p&gt;




&lt;p&gt;&lt;em&gt;A guest blog post for &lt;a href="https://blog.graphqleditor.com/"&gt;GraphQL Editor blog&lt;/a&gt; by Micha≈Ç Tyszkiewicz&lt;/em&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#speed-up-your-graphql-api-development"&gt;
  &lt;/a&gt;
  Speed up your GraphQL API development
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;GraphQL Editor&lt;/strong&gt; is a supportive tool for both advanced GraphQL users as well as those taking their first steps with GraphQL APIs. Our all-in-one development environment for GraphQL will help you build, manage &amp;amp; deploy your GraphQL API much faster. &lt;strong&gt;&lt;a href="https://graphqleditor.com"&gt;Try GraphQL Editor for free!&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>github</category>
      <category>webdev</category>
      <category>graphql</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Welcome to Creative Tim New Visual Identity</title>
      <author>Creative Tim</author>
      <pubDate>Mon, 23 Aug 2021 12:26:14 +0000</pubDate>
      <link>https://dev.to/creativetim_official/welcome-to-creative-tim-new-visual-identity-1iah</link>
      <guid>https://dev.to/creativetim_official/welcome-to-creative-tim-new-visual-identity-1iah</guid>
      <description>&lt;p&gt;Hello Web Design lovers,&lt;/p&gt;

&lt;p&gt;Huge news! Today is a big day for Creative Tim, as we are saying goodbye to the logo that defined our brand identity and work for 8 years. This way, we are happy to welcome the new Creative Tim visual identity that better defines our new vision and evolution.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-new-visual-identity"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Why new Visual Identity&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;We loved our old logo, and probably you did the same. However, this breakup does not have to be sad. Here we are to explain why we decided to move forward.&lt;/p&gt;

&lt;p&gt;Creative Tim is growing and evolving since we launched our first product, &lt;a href="https://www.creative-tim.com/product/get-shit-done-kit"&gt;Get Shit Done&lt;/a&gt;, which was embraced by more than 60,000 developers and designers worldwide. Now we have over 1.6 million people that use our products each year.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.creative-tim.com/product/get-shit-done-kit"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jfrJOK9V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2021/08/image-1-min.jpg" alt="get shit done"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;
&lt;center&gt;&lt;a href="https://www.creative-tim.com/product/get-shit-done-kit"&gt;Get Shit Done Kit&lt;/a&gt;&lt;/center&gt;
&lt;br&gt;
&lt;br&gt;

&lt;p&gt;After 8 years and a closer look at who Creative Tim is and who our brand became, we felt it is time for a change. &lt;br&gt;
In the last years, we've been through many changes, starting from the way we develop our products, the design we implement, the services we offer to a major change in our business strategy that our team is currently hard-working on.&lt;/p&gt;

&lt;p&gt;Therefore, the last months we've worked in collaboration with &lt;a href="https://www.vrln.studio/"&gt;Studio VRLN&lt;/a&gt; on refreshing our logo to express who we are today and to symbolize our future.&lt;/p&gt;

&lt;p&gt;Let's see how it came together.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-old-logo"&gt;
  &lt;/a&gt;
  &lt;strong&gt;The Old Logo&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Our previous logo was created when the company launched. It was distinctive, innocent, "nice" and was to describe the positivity of a young team of web design enthusiasts. Our first logo did a really great job for our beginnings, but we've grown mature, experienced, and the time has come to move on.&lt;/p&gt;

&lt;p&gt;As amusing the old Tim seems, as naive and static in communication it actually is. Even if the team behind Creative Tim smiles and appears laid-back, this is solely because of its expertise and creativity self-awareness. The Creative Tim products have a crisp and clean design, they are easy to use and easy to customize and precisely these attributes should be conveyed in the brand communication.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Bz0W1Txd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2021/08/black_center.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Bz0W1Txd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2021/08/black_center.png" alt="old logo"&gt;&lt;/a&gt;&lt;br&gt;
Moreover, the limits of the old logo set out the limits of brand communication. The Creative Tim logo used to be just a logo, without any visual style or font of its own. The apparently easygoing look &amp;amp; feel of the logo failed to meet the needs of our brand which was evolving rapidly and was in need of a real set of communication tools for the products.&lt;/p&gt;

&lt;p&gt;Though everyone loved it, the old logo wasn‚Äôt able anymore to adapt to the new rhythm of life. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-new-logo"&gt;
  &lt;/a&gt;
  &lt;strong&gt;The New Logo&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;The talented designer Paul Virlan from &lt;a href="https://www.vrln.studio/"&gt;Studio VRLN&lt;/a&gt; was the designer on this project. Let's see Paul's creation stages of our new brand identity.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Research Stage&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The first thing that drew the designer's attention to the old logo was Tim‚Äôs face expression, that particular smile he wanted to keep at all costs. Well, that smile was about to embody all the brand information we have collected during a discussion with Alex, the Creative Tim founder. That smile would have had a dominant presence and a reassuring effect, unless covered in unnecessary details.&lt;/p&gt;

&lt;p&gt;Keeping that smile in mind, Paul went back to the research stage and he looked up if math and computer science could ever seem fun. He ultimately understood that real intelligence without a sense of humor doesn‚Äôt exist and so he bumped into Homological Identities among Yangian-invariants and Brainfuck. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kLYg_yeL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2021/08/image-3-min.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kLYg_yeL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2021/08/image-3-min.jpg" alt="Homological Identities"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WNHYa_zf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2021/08/image-4-min.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WNHYa_zf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2021/08/image-4-min.jpg" alt="Brainfuck"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then, back to the drawing board.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 1: Try&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The designer started by simplifying forms and expressions. He tried different concepts, different solutions to make a modular and engaging system. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zRcxjXYh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2021/08/image-5-min.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zRcxjXYh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2021/08/image-5-min.jpg" alt="new logo try stage"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Step 2: Investigation&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Passing through dozens of ideas, Paul understood what works and what doesn‚Äôt and kept only a couple of them on which to build the graphic elements.&lt;/p&gt;

&lt;p&gt;Many of them were just amusing, other ideas would have had a chance to be smart as well, but they eventually failed the originality test. For example:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mq8Y1dlt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2021/08/image-6-min.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mq8Y1dlt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2021/08/image-6-min.jpg" alt="new logo investigation stage"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 3: Make&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#concept-development"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Concept Development&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Then, finally, he had the solution! A robot! A ‚ÄúT‚Äù robot made with UI elements. A modular system that conveys the main values of those behind Creative Tim: being engaged and being creative. This system now satisfies everybody's needs and also helps the brand to communicate in social media through a special language and a wide variety of emotions. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4ZpZa2UF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2021/08/8a.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4ZpZa2UF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2021/08/8a.gif" alt="robot ui elements"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;
&lt;center&gt;Robot made with UI elements&lt;/center&gt;
&lt;br&gt;
&lt;br&gt;
&lt;h3&gt;
  &lt;a href="#font"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Font&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Now that we have a powerful story-driven logomark with a lot of visual potential, it‚Äôs time to invest some time in the logotype as well. After a wide research, he has discovered Roboto Slab Typeface and he wasn‚Äôt able to move forward anymore. (Because of its name and the T Robot; we could make that Roboto joke). &lt;br&gt;
Unfortunately, Roboto Slab was similar to a monospaced font used in a programming console (we really liked that), but the alliance between the logomark and his logotype was really bad and the ‚Äúcreative and fun‚Äù part could have easily became ‚Äúboring and sad‚Äù. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Sj3oQpUb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2021/08/image-7-min.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Sj3oQpUb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2021/08/image-7-min.jpg" alt="new logo roboto slab"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;
&lt;center&gt;New Logo using Roboto Slab typography&lt;/center&gt;
&lt;br&gt;
&lt;br&gt;&lt;br&gt;
The designer continued to search for something super clean and not too formal that could be easily integrated into my concept. Montserrat (created by Julieta Ulanovsky) satisfied the needs and it was love at first sight with the capital letters, the clean letter design, and the wide array of characters. 

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EuMiof3H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2021/08/image-16.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EuMiof3H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2021/08/image-16.jpg" alt="new logo typography example"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;
&lt;center&gt;New Logo Typography Examples&lt;/center&gt;
&lt;br&gt;
&lt;br&gt;&lt;br&gt;
After some minimal interventions, it looked perfect. Moreover, we decided to keep this typeface as a brand font as well, because of its versatility in weights and sizes and its modern look that could be easily associated with the new Tim. 

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S1Vud29Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2021/08/image-8-min.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S1Vud29Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2021/08/image-8-min.jpg" alt="new logo monttserrat"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;
&lt;center&gt;New Logo using Montserrat typography&lt;/center&gt;
&lt;br&gt;
&lt;br&gt;
&lt;h3&gt;
  &lt;a href="#the-result"&gt;
  &lt;/a&gt;
  &lt;strong&gt;The result&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;In conclusion, we decided to keep the old logo' soul and upgrade it to a new rhythm of life. It became a robot with a human smile that can now find solutions to any problems and communicate with all of us. The new Tim is still amusing but no longer naive. Tim has now an emotional intelligence that conveys more inner life than any other human being.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KyoGbtXm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2021/08/image-20.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KyoGbtXm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2021/08/image-20.jpg" alt="new vs old logo"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;
&lt;center&gt;Old Logo vs. New Logo&lt;/center&gt;
&lt;br&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g5z9FPnY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2021/08/image-12.jpg" alt="variants of new logo"&gt;&lt;br&gt;
&lt;center&gt;Variants of Creative Tim New Logo&lt;/center&gt;
&lt;br&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jkNG_IP9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2021/08/image-15.jpg" alt="new logo emotions"&gt;&lt;br&gt;
&lt;center&gt;New Logo Emotions&lt;/center&gt;
&lt;br&gt;
&lt;br&gt;&lt;br&gt;
And let's see some brand communication:&lt;br&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zViN-Wik--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2021/08/image-14.jpg" alt="business cards"&gt;&lt;br&gt;
&lt;center&gt;Creative Tim Business Cards&lt;/center&gt;
&lt;br&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--A2ye_7CN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2021/08/image-17.jpg" alt="smart devices"&gt;&lt;br&gt;
&lt;center&gt;Creative Tim Smart Devices&lt;/center&gt;
&lt;br&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z3Ef11do--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2021/08/image-13-1.jpg" alt="shirts"&gt;&lt;br&gt;
&lt;center&gt;Creative Tim T-shirts&lt;/center&gt;
&lt;br&gt;
&lt;br&gt;
&lt;h3&gt;
  &lt;a href="#final-thoughts"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Final Thoughts&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TlSW7ycs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2021/08/image-19.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TlSW7ycs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2021/08/image-19.jpg" alt="smart devices"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nOjfWI-v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2021/08/image-18.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nOjfWI-v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2021/08/image-18.jpg" alt="shirts"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Enough with the details for now. We just wanted to share with you this important change around our company. Also, we are very happy with the new Tim and we hope you will embrace it as well. &lt;/p&gt;

&lt;p&gt;The task in the upcoming period will be to align other visuals around Creative Tim to the new logo. We've already started with our &lt;a href="https://www.creative-tim.com/"&gt;website&lt;/a&gt;, &lt;a href="https://www.creative-tim.com/blog/"&gt;blog&lt;/a&gt;, social media accounts (&lt;a href="https://www.facebook.com/CreativeTim"&gt;Facebook&lt;/a&gt;, &lt;a href="https://twitter.com/CreativeTim"&gt;Twitter&lt;/a&gt;, &lt;a href="https://instagram.com/creativetimofficial/"&gt;Instagram&lt;/a&gt;, &lt;a href="https://www.tiktok.com/@creative.tim?lang=en"&gt;TikTok&lt;/a&gt;), where you can see it in action.&lt;/p&gt;

&lt;p&gt;Share your thoughts about the rebranding on our &lt;a href="https://twitter.com/CreativeTim/status/1428627756787585027"&gt;social media&lt;/a&gt;, and Thank You for being with us ‚ù§Ô∏è&lt;/p&gt;

&lt;p&gt;Cheers,&lt;br&gt;
Creative Tim team&lt;/p&gt;

</description>
    </item>
    <item>
      <title>What Is Green Hat Files?</title>
      <author>Green Hat Files Softwares</author>
      <pubDate>Mon, 23 Aug 2021 12:02:49 +0000</pubDate>
      <link>https://dev.to/greenhatfiles/what-is-green-hat-files-2055</link>
      <guid>https://dev.to/greenhatfiles/what-is-green-hat-files-2055</guid>
      <description>&lt;p&gt;GreenHatFiles is a very unique website that offers a service called Green Hat Files. This is a marketing concept that involves organic SEO (search engine optimization) techniques. If you want to make your online business stand out from the crowd, you need to get the word out about your site and services or products. The way to do this is to get on the first page of Google when people search for a particular keyword.&lt;/p&gt;

&lt;p&gt;By using organic SEO techniques you can get a good page rank and then your site will rank higher for longer. This will create a very high bounce rate (the percentage of people visiting your site who leave within a few minutes). This means that your bounce rate is more than 50%! You are not going to get this kind of results by using normal SEO methods.&lt;/p&gt;

&lt;h2&gt;Is Green Hat Files Legit?&lt;/h2&gt;

&lt;p&gt;Yes, GreenHatFiles Games is a great service for two reasons. First, they have thousands of websites already in place with content already optimized for SEO purposes. This makes it easy for you to get your website listed immediately and start driving traffic immediately. They have tools that allow you to quickly identify the keywords people are using to find your site. This allows you to target those keywords and build content around them.&lt;/p&gt;

&lt;p&gt;The second reason why GreenHatApps is such an excellent service for your website is that they offer an amazing amount of free advice. They have several active forums where you can get expert advice. Some of the topics include building a business website, generating web traffic, optimizing pages etc. They are also a great source for support.&lt;/p&gt;

&lt;h2&gt;Is GreenHatFiles Safe?&lt;/h2&gt;

&lt;p&gt;Many people have asked questions about GreenHatFiles review and the way they work. There have been reviews and discussions on Yahoo Answers. There are many places online where you can ask questions to help you learn how to use this technology for your business. Most people seem to be very pleased with the answers they get. If you do some digging, you will soon find out that people love the help.&lt;/p&gt;

&lt;p&gt;I believe that everyone should at least give it a try. I have had success with it and I am sure other people have had success as well. I personally managed to create my first website using the GreenHat Files. I used it as a base for learning and development and managed to turn it into a very successful business. You never know how far you can go until you try it.&lt;/p&gt;

&lt;h2&gt;How To Download Software From Greenhatfiles?&lt;/h2&gt;

&lt;p&gt;GreenHat Files provides extremely high quality, and in some cases, higher than high SEO standards information software, apps and games. The information is broken down into categories and subcategories so you can get the most benefit for your money. In many cases you can get lifetime value from these sites.&lt;/p&gt;

&lt;p&gt;I have found that using this information has helped me generate more traffic and has helped me make more sales. As an internet marketer, I believe that having good quality information and putting it in front of people who need it can make the world of difference. Sometimes a little knowledge can go a long way. So, if you have questions, you may want to consider Green Hat Files to help your web site.&lt;/p&gt;

&lt;h2&gt;How To Download Games From Greenhatfiles?&lt;/h2&gt;

&lt;p&gt;One great thing about GreenHatFiles Software is the fact that they are completely free. They provide high quality information, but don't cost anything &lt;a href="https://greenhatfiles.com/"&gt;&lt;/a&gt;&lt;a href="https://greenhatfiles.com/"&gt;https://greenhatfiles.com/&lt;/a&gt; . I love that they don't expect you to pay any money to get the information. This is important because many of the paid services tend to place ads on your web page and can be a huge annoyance. With GreenHat Files games, you will only see banners of information that you can view for free.&lt;/p&gt;

&lt;p&gt;Another great thing about GreenHatFiles Apps is that they do a lot of research to get information out there. This information helps to build a community around your site and helps site visitors feel more comfortable about transacting business with you. You can even get special offers and discounts from GreenHatFiles because they monitor and track everything.&lt;/p&gt;

&lt;p&gt;I hope that this little bit of information has helped you understand a little more about what is greenhatamines? I have been using these services for quite some time and they have saved me a TON of money and time. &lt;/p&gt;

&lt;h2&gt;Final Words&lt;/h2&gt;

&lt;p&gt;If you are in need of marketing information that helps to build community awareness, or just general information that can help you learn what is green, then make sure to check out my web site. There are many free reports that you can download, that discuss everything from how to stop drinking caffeine to the latest trends in greenware.&lt;/p&gt;

</description>
      <category>greenhatfiles</category>
      <category>softwares</category>
      <category>gamedev</category>
    </item>
  </channel>
</rss>
