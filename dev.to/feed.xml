<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>20 JavaScript Job Interview Questions to Know with Answers</title>
      <author>Kingsley Ubah</author>
      <pubDate>Mon, 03 May 2021 22:50:03 +0000</pubDate>
      <link>https://dev.to/ubahthebuilder/20-javascript-job-interview-questions-to-know-with-answers-1cmc</link>
      <guid>https://dev.to/ubahthebuilder/20-javascript-job-interview-questions-to-know-with-answers-1cmc</guid>
      <description>&lt;p&gt;You applied for a job as a web developer few days back. An interview was scheduled and you're worried that your knowledge of JavaScript is sub-par. &lt;/p&gt;

&lt;p&gt;If that is the case, well you're in luck! If not, you are still going to gain some information for any future interviews you are part of.&lt;/p&gt;

&lt;p&gt;Below are 20 common job interview questions on JavaScript, along with their respective answers:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-javascript"&gt;
  &lt;/a&gt;
  What is JavaScript
&lt;/h3&gt;

&lt;p&gt;Well let's be honest, You probably will be thinking this is such an easy question. But you may be surprised at how bad you'll fumble when trying to explain what JavaScript is to your potential boss. JavaScript is  the language used to write programs on websites and web apps. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-the-dom"&gt;
  &lt;/a&gt;
  What is the DOM
&lt;/h3&gt;

&lt;p&gt;The Document Object Model (DOM) is a tree-like, top down representation of your web page and all it's elements. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TLiKmCVC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bwqm3v7nwavmni35za6j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TLiKmCVC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bwqm3v7nwavmni35za6j.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#mention-5-javascript-methods-for-dom-manipulation-and-explain-their-uses"&gt;
  &lt;/a&gt;
  Mention 5 JavaScript methods for DOM manipulation and explain their uses
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;createElement()&lt;/strong&gt;: This method creates a new HTML element in the web page. It takes a single parameter, which is the name of the element to be created.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;querySelector()&lt;/strong&gt;: this method is used to target elements based on any CSS selector. It always returns the first element that matches one or more CSS selectors. It takes the selector as parameter.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;querySelectorAll()&lt;/strong&gt;: while querySelector returns only the first instance that matches, this method returns all the elements that matches one or more CSS selectors. The elements are returned in a nodelist, which is similar to a JavaScript object.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;getElementById()&lt;/strong&gt;: as it's name suggests, this method gets an element based on it's unique id attribute.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;addEventListener()&lt;/strong&gt;: This method attaches an event listener to an element in the DOM. It takes a function as an additional parameter. When that element gets triggered by the set event, the callback function will run.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#what-are-variables"&gt;
  &lt;/a&gt;
  What are Variables
&lt;/h3&gt;

&lt;p&gt;All programming languages work with data and variables are simply containers for that data. When assigned to a variable, that data becomes the 'value'&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;variable&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#define-and-explain-the-variable-declarations-in-javascript"&gt;
  &lt;/a&gt;
  Define and explain the variable declarations in JavaScript
&lt;/h3&gt;

&lt;p&gt;The difference between var, let, and const in JavaScript:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Var&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It is globally scoped&lt;/li&gt;
&lt;li&gt;When used to define a variable within a function, that variable is inaccessible outside that function&lt;/li&gt;
&lt;li&gt;It is reassignable&lt;/li&gt;
&lt;li&gt;It's not block scoped&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Const&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It is used to store immutable/unchanging values.&lt;/li&gt;
&lt;li&gt;It is not globally scoped&lt;/li&gt;
&lt;li&gt;When used to define a variable within a function, that variable is inaccessible outside that function&lt;/li&gt;
&lt;li&gt;It is block scoped. That is, it's inaccessible outside blocks like if conditionals and for loops.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Let&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It is not globally scoped&lt;/li&gt;
&lt;li&gt;It is reassignable&lt;/li&gt;
&lt;li&gt;When used to define a variable within a function, that variable is inaccessible outside that function&lt;/li&gt;
&lt;li&gt;It is block scoped.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;N/B: If you're interested in learning more about modern JavaScript, I'll recommend  &lt;a href="https://gumroad.com/a/834147443"&gt;HTML To React,: The Ultimate Guide by Sleepless Yogi&lt;/a&gt; &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#what-is-asynchronous-programming"&gt;
  &lt;/a&gt;
  What is Asynchronous programming
&lt;/h3&gt;

&lt;p&gt;Asynchronous programming is the principle of making code run later and not immediately/sequentially. This is achieved with Callbacks, Promises and other Async patterns.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#explain-global-scoping-and-local-scoping"&gt;
  &lt;/a&gt;
  Explain Global scoping and local scoping
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Global variables can be accessed from anywhere in the script.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Local variables, on the other hand, have function scoping. This means that a variable define in a function is not accessible outside that function. &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#what-is-nodejs-and-what-does-it-do"&gt;
  &lt;/a&gt;
  What is Node.js and what does it do
&lt;/h3&gt;

&lt;p&gt;Node.js is an open-source, cross-platform, back-end JavaScript runtime environment that runs on the V8 engine for executing JavaScript code. Remember that before JavaScript used to run only on browsers. You couldn't run JavaScript in any other environments. However, with the coming of Node.js, you could now run JavaScript on web servers independent of a web browser.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#list-all-the-data-types-in-javascript"&gt;
  &lt;/a&gt;
  List all the data types in JavaScript
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;String&lt;/li&gt;
&lt;li&gt;Number&lt;/li&gt;
&lt;li&gt;Boolean&lt;/li&gt;
&lt;li&gt;Null&lt;/li&gt;
&lt;li&gt;Object&lt;/li&gt;
&lt;li&gt;Undefined&lt;/li&gt;
&lt;li&gt; Symbol (ES6)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#what-is-currying"&gt;
  &lt;/a&gt;
  What is Currying
&lt;/h3&gt;

&lt;p&gt;Currying is a technique which happens when you take a function that would require multiple arguments and return a series of functions that take exactly one argument&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;program&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Presenting Research&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
&lt;span class="na"&gt;room&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;415&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
&lt;span class="na"&gt;hours&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;3 - 6&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
&lt;span class="p"&gt;};&lt;/span&gt; 
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;exhibit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Emerging Scholarship&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
&lt;span class="na"&gt;contact&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Dyan&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
&lt;span class="p"&gt;};&lt;/span&gt; 

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;setStrongHallProgram&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;program&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;defaults&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
&lt;span class="na"&gt;hours&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;6 a.m. - 6 p.m.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
&lt;span class="na"&gt;address&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;jally Ave&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;kingsley&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
&lt;span class="na"&gt;phone&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;555-555-5555&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt; 
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;defaults&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;program&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt; 
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;programs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;setStrongHallProgram&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;program&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;exhibit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;setStrongHallProgram&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;exhibit&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#list-and-explain-all-array-iterator-methods"&gt;
  &lt;/a&gt;
  List and explain all array iterator methods
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Map()&lt;/strong&gt;: This method loops through an array and always returns an array. You can then define some action which will be applied to all items in the array. For example, you could say that all numbers in an array be divided by two.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;filter ()&lt;/strong&gt;: This method loops through an array collection and returns another array based on the filter condition. For example, you say that it should filter only ages which is below 50 and all numbers above 50 will not be included.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;find ()&lt;/strong&gt;: This is quite similar to filter(). The main difference is that this method returns only the first instance that matches the condition. Every subsequent match will be ignored.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;sort()&lt;/strong&gt;: This method loops through an array and returns another re-ordered array. The new order is based on the condition stipulated. For example, you can sort all names alphabetically, either in an ascending or descending order.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;forEach()&lt;/strong&gt;: This method loops through an array and performs a consistent action on all items in it. It doesn't return a new array. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;reduce()&lt;/strong&gt;: This method is used to  transform an array into a completely new one, making radical changes to it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#list-any-5-new-features-you-know-in-es6"&gt;
  &lt;/a&gt;
  List any 5 new features you know in ES6
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;JavaScript Classes&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Arrow functions&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Introduction of let and const keywords for variable declarations.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The for/of loop. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Default Parameter&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Rest and Spread Operators&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#what-is-react"&gt;
  &lt;/a&gt;
  What is React
&lt;/h3&gt;

&lt;p&gt;React is a modern, u opinionated JavaScript library used to build modular and resusable UI Components like buttons as well as single-page applications. React utilitizes the virtual DOM.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-the-virtual-dom"&gt;
  &lt;/a&gt;
  What is the virtual DOM
&lt;/h3&gt;

&lt;p&gt;A virtual DOM is a lightweight JavaScript representation of the DOM used in declarative web frameworks such as React and Vue.js, . Updating the virtual DOM is comparatively faster than updating the real DOM, since nothing has to be rendered onto the screen. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-are-classes-write-a-typical-syntax-for-defining-a-class"&gt;
  &lt;/a&gt;
  What are classes. Write a typical syntax for defining a class
&lt;/h3&gt;

&lt;p&gt;Classes are blueprints for objects.  To illustrate, you can think of an architectural plan for a building as a class, and the final building gotten from that plan as an object. The architectural plan won't have properties such as its color, kind of furniture to be used etc. All of those properties will be supplied when "constructing" the building, which is the object.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Rectangle&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="c1"&gt;// Getter&lt;/span&gt;
  &lt;span class="kd"&gt;get&lt;/span&gt; &lt;span class="nx"&gt;area&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;calcArea&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="c1"&gt;// Method&lt;/span&gt;
  &lt;span class="nx"&gt;calcArea&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#what-are-objects"&gt;
  &lt;/a&gt;
  What are Objects
&lt;/h3&gt;

&lt;p&gt;When a class gets "instantiated", an object is constructed. Objects are data structures which have attributes that came in name: value pairs.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#distinguish-arrow-function-from-named-function"&gt;
  &lt;/a&gt;
  Distinguish arrow function from named function
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;namedFunction&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;this is a named function&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;This is an arrow function&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#what-are-libraries"&gt;
  &lt;/a&gt;
  What are Libraries
&lt;/h3&gt;

&lt;p&gt;Libraries are already-made packages of code/modules which can be imported into another program to perform a specific task.&lt;/p&gt;

&lt;p&gt;Example of this is lodash, which contains a set of utility functions for some common tasks in programming like sorting etc.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-typescript-and-when-should-i-use-it"&gt;
  &lt;/a&gt;
  What is Typescript and when should I use it
&lt;/h3&gt;

&lt;p&gt;Typescript is a superset of JavaScript; it contains all of JavaScript's syntax plus some additional functionality. It is used to write strongly typed JavaScript with type checking mechanisms.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#buy-me-a-pineapple"&gt;
  &lt;/a&gt;
  Buy me a pineapple 😋
&lt;/h3&gt;

&lt;p&gt;Yep! If you liked this article, I'll appreciate you buying me my favorite fruit:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/ubahthebuilder"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kc5Aqnyc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.buymeacoffee.com/button-api/%3Ftext%3DBuy%2520me%2520a%2520pineapple%26emoji%3D%25F0%259F%258D%258D%26slug%3Dubahthebuilder%26button_colour%3De0b51a%26font_colour%3D000000%26font_family%3DCookie%26outline_colour%3D000000%26coffee_colour%3DFFDD00"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Thank you!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;See you soon!&lt;/em&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>50 Free Online Resources To Improve Your Technical Skills</title>
      <author>Jemima Abu</author>
      <pubDate>Mon, 03 May 2021 22:44:23 +0000</pubDate>
      <link>https://dev.to/jemimaabu/online-resources-to-improve-technical-skills-56ma</link>
      <guid>https://dev.to/jemimaabu/online-resources-to-improve-technical-skills-56ma</guid>
      <description>&lt;p&gt;Online courses are a popular choice for learning technical skills and advancing your career, mostly due to their easy access and multiple options.&lt;/p&gt;

&lt;p&gt;In this article, we've compiled 50 online courses on topics ranging from artificial intelligence to prepping for interviews. &lt;/p&gt;

&lt;p&gt;And the best part is: they're all free.&lt;/p&gt;

&lt;p&gt;(Until May 23, 2021 at least. You can read &lt;a href="https://www.udacity.com/legal/en-eu/one-month-free-access"&gt;this article&lt;/a&gt; for more information.)&lt;/p&gt;

&lt;p&gt;The courses listed in this article are sorted into the following fields:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://imp.i115008.net/b3ONV9"&gt;Artificial Intelligence&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://imp.i115008.net/OReKbQ"&gt;Autonomous Systems&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://imp.i115008.net/3PJZEK"&gt;Business&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://imp.i115008.net/vnPjVd"&gt;Cloud Computing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://imp.i115008.net/yRqbkV"&gt;Cybersecurity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://imp.i115008.net/Ke0Xzn"&gt;Data Science&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://imp.i115008.net/QOjnnP"&gt;Programming &amp;amp; Development&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://imp.i115008.net/rnaDDQ"&gt;Career&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#free-artificial-intelligence-courses-5"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Free Artificial Intelligence Courses (5)&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---NJrW99T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u8twffmwk4n2r43jvkza.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---NJrW99T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u8twffmwk4n2r43jvkza.png" alt="School of Artificial Intelligence"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://imp.i115008.net/WDyddP"&gt; &lt;strong&gt;AI Programming with Python&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Learn Python, NumPy, pandas, Matplotlib, PyTorch, Calculus, and Linear Algebra—the foundations for building your own neural network.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Level:&lt;/strong&gt; Beginner&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://imp.i115008.net/oe4L09"&gt; &lt;strong&gt;Become an AI Product Manager&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Learn to develop AI products that deliver business value. Build skills that help you compete in the new AI-powered world.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Level:&lt;/strong&gt; Beginner&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://imp.i115008.net/jWeyZe"&gt;&lt;strong&gt;Artificial Intelligence for Trading&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Complete real-world projects designed by industry experts, covering topics from asset management to trading signal generation. Master AI algorithms for trading, and build your career-ready portfolio.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Level:&lt;/strong&gt; Intermediate&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://imp.i115008.net/AoP321"&gt;&lt;strong&gt;Become a Machine Learning Engineer&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Learn advanced machine learning techniques and algorithms -- including how to package and deploy your models to a production environment.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Level:&lt;/strong&gt; Intermediate&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://imp.i115008.net/7maOOA"&gt;&lt;strong&gt;Expand Your Knowledge of Artificial Intelligence&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Learn to write programs using the foundational AI algorithms powering everything from NASA's Mars Rover to DeepMind's AlphaGo Zero.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Level:&lt;/strong&gt; Advanced&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#free-autonomous-system-courses-4"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Free Autonomous System Courses (4)&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--q5RHVy6_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0dxn5yxy55ycysau4bun.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q5RHVy6_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0dxn5yxy55ycysau4bun.png" alt="School of Autonomous Systems"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://imp.i115008.net/7maOny"&gt;&lt;strong&gt;Become a C++ Developer&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Learn C++, a high-performance programming language used in the world's most exciting engineering jobs -- from self-driving cars and robotics, to web browsers, media platforms, servers, and even video games.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Level:&lt;/strong&gt; Intermediate&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://imp.i115008.net/kjOM9N"&gt;&lt;strong&gt;Intro to Self-Driving Cars&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In this program, you'll sharpen your Python skills, apply C++, apply matrices and calculus in code, and touch on computer vision and machine learning.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Level:&lt;/strong&gt; Intermediate&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://imp.i115008.net/rnaDLR"&gt;&lt;strong&gt;Become a Self-Driving Car Engineer&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Learn the skills and techniques used by self-driving car teams at the most advanced technology companies in the world.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Level:&lt;/strong&gt; Advanced&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://imp.i115008.net/DVyeOn"&gt;&lt;strong&gt;Become a Robotics Software Engineer&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Build hands-on projects to acquire core robotics software engineering skills: ROS, Gazebo, Localization, Mapping, SLAM, Navigation, and Path Planning.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Level:&lt;/strong&gt; Advanced&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#free-business-courses-6"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Free Business Courses (6)&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cfiCoV0R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5t7fjme0pitkgjf2vdhq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cfiCoV0R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5t7fjme0pitkgjf2vdhq.png" alt="School of Business"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://imp.i115008.net/9WLzyy"&gt;&lt;strong&gt;Become a UX Designer&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Design impactful user experiences for products in today's digital world. Build a portfolio that showcases your ability to transform user research to high-fidelity interactive designs.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Level:&lt;/strong&gt; Beginner&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://imp.i115008.net/x9L5zv"&gt;&lt;strong&gt;Become a Digital Marketer&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Gain real-world experience to run live campaigns as you learn from top experts in the field. Launch your career with a 360-degree understanding of digital marketing.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Level:&lt;/strong&gt; Beginner&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://imp.i115008.net/3PJZYd"&gt;&lt;strong&gt;Learn SQL&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Master SQL, the core language for Big Data analysis, and enable insight-driven decision-making and strategy for your business.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Level:&lt;/strong&gt; Beginner&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://imp.i115008.net/9WLzy3"&gt;&lt;strong&gt;Agile Software Development&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Learn best practices for using the Agile framework to build better products faster and more efficiently.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Level:&lt;/strong&gt; Beginner&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://imp.i115008.net/kjOMJd"&gt;&lt;strong&gt;Become a Product Manager&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Envision and lead the product strategy of industry-defining products, and learn to successfully bring them to market.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Level:&lt;/strong&gt; Beginner&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://imp.i115008.net/gbO6a9"&gt;&lt;strong&gt;Business Analytics&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Gain foundational data skills applicable to any industry. Collect and analyze data, model business scenarios, and communicate your findings with SQL, Excel, and Tableau&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Level:&lt;/strong&gt; Beginner&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#free-cloud-computing-courses-5"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Free Cloud Computing Courses (5)&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--55hcGups--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3zmwq7t6yl9teqh4xnnq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--55hcGups--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3zmwq7t6yl9teqh4xnnq.png" alt="School of Cloud Computing"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://imp.i115008.net/QOjnGo"&gt;&lt;strong&gt;Intro to Cloud Computing&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In this course, you'll learn foundational cloud computing skills that will set you on your path to a career in cloud computing.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Level:&lt;/strong&gt; Beginner&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://imp.i115008.net/5b5Zq2"&gt;&lt;strong&gt;Become a Cloud Developer&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Enroll now to build and deploy production-ready full stack apps at scale on AWS, an essential skill for advancing your web development career.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Level:&lt;/strong&gt; Intermediate&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://imp.i115008.net/JrKVoq"&gt;&lt;strong&gt;Become a Cloud DevOps Engineer&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Enroll now to operationalize infrastructure at scale and deliver applications and services at high velocity, an essential skill for advancing your career.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Level:&lt;/strong&gt; Intermediate&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://imp.i115008.net/0J9jXR"&gt;&lt;strong&gt;Become a Cloud Developer using Microsoft Azure&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Learn to build cloud-based applications on Microsoft Azure, the cloud services platform used by 95% of Fortune 500 companies.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Level:&lt;/strong&gt; Intermediate&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://imp.i115008.net/BXnyey"&gt;&lt;strong&gt;Become an AWS Cloud Architect&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Lead your organization's cloud computing strategy as an AWS Cloud Architect. Plan, design, and build secure, high availability cloud infrastructure.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Level:&lt;/strong&gt; Advanced&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#free-cybersecurity-courses-6"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Free Cybersecurity Courses (6)&lt;/strong&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://imp.i115008.net/vnPj1v"&gt;&lt;strong&gt;Introduction to Cybersecurity&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Get your start in the high growth field of Cybersecurity by building foundational skills in how to evaluate, maintain, and monitor the security of computer systems.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Level:&lt;/strong&gt; Beginner&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://imp.i115008.net/x9L5X1"&gt;&lt;strong&gt;Network Security&lt;/strong&gt;&lt;/a&gt; by &lt;em&gt;Georgia Institute of Technology&lt;/em&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This course provides an introduction to computer and network security.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Level:&lt;/strong&gt; Intermediate&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://imp.i115008.net/a1OA6R"&gt;&lt;strong&gt;Intro to Information Security&lt;/strong&gt;&lt;/a&gt; by &lt;em&gt;Georgia Institute of Technology&lt;/em&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This course touches on the importance of management and administration, the place information security holds in overall business risk, social issues such as individual privacy, and the role of public policy.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Level:&lt;/strong&gt; Intermediate&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://imp.i115008.net/Ke0X2N"&gt;&lt;strong&gt;Become A Security Engineer&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Gain the highly sought-after skills to protect an organization's computer networks and systems from security threats or attacks.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Level:&lt;/strong&gt; Intermediate&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://imp.i115008.net/JrKVQq"&gt;&lt;strong&gt;Become A Security Analyst&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You'll master the skills necessary to become a successful Security Analyst and learn to identify, correct and respond to security weaknesses and incidents.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Level:&lt;/strong&gt; Intermediate&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://imp.i115008.net/doOV3j"&gt;&lt;strong&gt;Become An Ethical Hacker&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Meet the growing demand for cybersecurity professionals by gaining the offensive security skills to protect an organization's computer networks and systems.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Level:&lt;/strong&gt; Advanced&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#free-data-science-courses-7"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Free Data Science Courses (7)&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yJ5dCdHv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6ngrebiyj59dty4318x0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yJ5dCdHv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6ngrebiyj59dty4318x0.png" alt="School of Data Science"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://imp.i115008.net/MXABjq"&gt;&lt;strong&gt;Programming for Data Science with Python&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Prepare for a data science career by learning the fundamental data programming tools: Python, SQL, command line, and git.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Level:&lt;/strong&gt; Beginner&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://imp.i115008.net/x9L5b1"&gt;&lt;strong&gt;Programming for Data Science with R&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Prepare for a data science career by learning the fundamental data programming tools: R, SQL, command line, and git.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Level:&lt;/strong&gt; Beginner&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://imp.i115008.net/9WLzQ5"&gt;&lt;strong&gt;Data Analysis and Visualization with Power BI&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Meet the growing demand for data analysis and visualization professionals by gaining the Power BI skills that top companies want.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Level:&lt;/strong&gt; Beginner&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://imp.i115008.net/n1XEbA"&gt;&lt;strong&gt;Become a Data Engineer&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Data Engineering is the foundation for the new world of Big Data. Enroll now to build production-ready data infrastructure, an essential skill for advancing your data career.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Level:&lt;/strong&gt; Intermediate&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://imp.i115008.net/4eGmKn"&gt;&lt;strong&gt;Become a Data Analyst&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Use Python, SQL, and statistics to uncover insights, communicate critical findings, and create data-driven solutions.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Level:&lt;/strong&gt; Intermediate&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://imp.i115008.net/NK90PV"&gt;&lt;strong&gt;Become a Data Scientist&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Gain real-world data science experience with projects designed by industry experts. Build your portfolio and advance your data science career.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Level:&lt;/strong&gt; Advanced&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://imp.i115008.net/e41EBO"&gt;&lt;strong&gt;Become a Data Architect&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Learn how to plan, design and implement enterprise data infrastructure solutions and create the blueprints for your organization's data success.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Level:&lt;/strong&gt; Advanced&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#free-programming-amp-development-courses-10"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Free Programming &amp;amp; Development Courses (10)&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pi4OqlfD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hxmspjwonkvhnejr8jy3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pi4OqlfD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hxmspjwonkvhnejr8jy3.png" alt="School of Programming"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://imp.i115008.net/P0OVW6"&gt;&lt;strong&gt;Learn to Code&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This course is your first step towards careers in Web and App Development, Machine Learning, Data Science, AI, and more!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Level:&lt;/strong&gt; Beginner&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://imp.i115008.net/a1OA4j"&gt;&lt;strong&gt;Become A Front End Web Developer&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Learn how to build high-quality websites and dynamic applications to create stunning user experiences for the web.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Level:&lt;/strong&gt; Intermediate&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://imp.i115008.net/Zd6KRR"&gt;&lt;strong&gt;Introduction to Backend Development&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This course presents an overview of a variety of Web backend topics: handling user input, producing templated output, storing information in databases and data stores, and building systems with secure user accounts.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Level:&lt;/strong&gt; Intermediate&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://imp.i115008.net/mgOE0D"&gt;&lt;strong&gt;Become A Full Stack Web Developer&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Learn to design and develop powerful modern web applications that form the foundation for the apps, websites, and systems that people and businesses use every day.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Level:&lt;/strong&gt; Intermediate&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://imp.i115008.net/MXABWP"&gt;&lt;strong&gt;Become a Blockchain Developer&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Demand for blockchain developers is skyrocketing. In this program, you'll work with the Bitcoin and Ethereum protocols, build projects for real-world application, and gain the essential skills for a career in this dynamic space.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Level:&lt;/strong&gt; Intermediate&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://imp.i115008.net/EaEeAX"&gt;&lt;strong&gt;Become a Java Web Developer&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Learn enterprise scale back-end development with Java, and be prepared for the software engineering jobs that are in demand at a majority of Fortune 500 companies like Google, Amazon, Netflix, and more.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Level:&lt;/strong&gt; Intermediate&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://imp.i115008.net/OReKEA"&gt;&lt;strong&gt;Become a React Developer&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;React is completely transforming Front-End Development! Master this powerful UI library from Facebook with this course.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Level:&lt;/strong&gt; Intermediate&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://imp.i115008.net/vnPjmA"&gt;&lt;strong&gt;Become an iOS Developer&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Master the Swift programming language, and create a portfolio of iOS apps for iPhone and iPad to showcase your skills!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Level:&lt;/strong&gt; Intermediate&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://imp.i115008.net/yRqboD"&gt;&lt;strong&gt;Android Basics&lt;/strong&gt;&lt;/a&gt; by &lt;em&gt;Google&lt;/em&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This course is for aspiring Android developers who are new to programming to ensure that you get the real-world skills you need to know how to build and accelerate your journey towards becoming a professional Android Developer.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Level:&lt;/strong&gt; Intermediate&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://imp.i115008.net/vnPjOA"&gt;&lt;strong&gt;Data Structures and Algorithms&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Get hands-on practice with over 100 data structures and algorithm exercises and technical mentor support when needed to help prepare you for interviews and on-the-job scenarios.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Level:&lt;/strong&gt; Intermediate&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#free-career-courses-7"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Free Career Courses (7)&lt;/strong&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://imp.i115008.net/BXnyBq"&gt;&lt;strong&gt;Refresh Your Resume&lt;/strong&gt;&lt;/a&gt; by &lt;em&gt;Grow With Google&lt;/em&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Your resume is the first step in the job search. Through this course, you will identify the companies you want to work for, and showcase your key achievements to align with their roles.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://imp.i115008.net/OReKan"&gt;&lt;strong&gt;Strengthen Your LinkedIn Network &amp;amp; Brand&lt;/strong&gt;&lt;/a&gt; by &lt;em&gt;Grow With Google&lt;/em&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Networking is an essential job search skill. In this course, you'll learn strategies and tactics for effective networking.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://imp.i115008.net/vnPj0j"&gt;&lt;strong&gt;Craft Your Cover Letter&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Introduce yourself with a memorable cover letter. In this short course, you'll use proven writing techniques to show why you are the best person for the job.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://imp.i115008.net/rnaDWG"&gt;&lt;strong&gt;Front-End Interview Prep&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You will review common Front-End Web Developer interview topics ranging from palindrome functions to closures, and learn best practices for behavioral questions and whiteboard problems.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://imp.i115008.net/5b5Zzn"&gt;&lt;strong&gt;Android Interview Prep&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You'll work through common Android Developer interview topics ranging from explicit and implicit intents to designing a min stack.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://imp.i115008.net/AoP35R"&gt;&lt;strong&gt;Data Science Interview Prep&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In this course, you'll review the common questions asked in data science, data analyst, and machine learning interviews.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://imp.i115008.net/XxmnE5"&gt;&lt;strong&gt;Full-Stack Interview Prep&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You'll review common Full Stack Web Developer interview topics like palindrome functions and data structures.&lt;/p&gt;

</description>
      <category>career</category>
      <category>programming</category>
      <category>beginners</category>
      <category>resources</category>
    </item>
    <item>
      <title>Get to know Redux in 2021</title>
      <author>Semir Teskeredzic</author>
      <pubDate>Mon, 03 May 2021 21:42:30 +0000</pubDate>
      <link>https://dev.to/semirteskeredzic/get-to-know-redux-in-2021-226c</link>
      <guid>https://dev.to/semirteskeredzic/get-to-know-redux-in-2021-226c</guid>
      <description>&lt;p&gt;Redux is something you really need to know if you are going to do anything professionally with JS and especially React. For some time it seemed quite complex with a lot of boilerplate so I mostly used MobX and more recently React context.&lt;br&gt;
However, my curiosity got better of me and I had to dig a bit deeper to comprehend the great Redux. In this post I will try to simplify basic concepts of how Redux works so you can try and not just build but also comprehend a React-Redux app.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What is Redux?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;"Redux is a predictable state container for JavaScript apps." (&lt;a href="https://redux.js.org/introduction/getting-started"&gt;https://redux.js.org/introduction/getting-started&lt;/a&gt;). It is a place that manages the state and makes changes according to the provided actions.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What is it for?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;For use cases when you need to have data available across the application i.e. when passing data through props is not possible.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Why is it powerful?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Redux is highly predictable which makes debugging much easier since you know what is happening where. It is also scalable so it is a good fit for production grade apps.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Brief overview&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Let's say you're making an app that increments the count. This app has:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Count value,&lt;/li&gt;
&lt;li&gt;Increment button,&lt;/li&gt;
&lt;li&gt;Decrement button,&lt;/li&gt;
&lt;li&gt;Change with value,&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;What is then happening?&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;When you want to increment a count, you dispatch an action. This action then through special function called reducer takes the previous state, increments it and returns it. Component that listens through &lt;code&gt;Selector&lt;/code&gt; re-renders on change of state.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Let's go to the code&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In order to create the "Counter" app with React and Redux, we need to add following packages to your React app (I will assume you know how to create a basic Create React App):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yarn add @reduxjs/toolkit react-redux
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now the first thing we will do is to create a Store and provide it to the entry point of your App, in this case it is Index.js&lt;/p&gt;

&lt;p&gt;&lt;em&gt;/src/app/store.js&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { configureStore } from "@reduxjs/toolkit";

export const Store = configureStore({
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we are using &lt;code&gt;configureStore&lt;/code&gt; from Redux toolkit which is a function that requires passing a reducer. We will get back to it in a second.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;/index.js&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { StrictMode } from "react";
import ReactDOM from "react-dom";
import { Provider } from "react-redux";

import App from "./App";
import { Store } from "./app/store";

const rootElement = document.getElementById("root");
ReactDOM.render(
  &amp;lt;StrictMode&amp;gt;
    &amp;lt;Provider store={Store}&amp;gt;
      &amp;lt;App /&amp;gt;
    &amp;lt;/Provider&amp;gt;
  &amp;lt;/StrictMode&amp;gt;,
  rootElement
);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we are using &lt;code&gt;Provider&lt;/code&gt; to provide our Redux store to all wrapped Components.&lt;br&gt;
Believe it or not, we are half way there! &lt;/p&gt;

&lt;p&gt;Next, we need to populate the core of our Redux logic and that is the Slice. You can think of Slice as a collection of Redux reducer logic &amp;amp; actions for a single feature in the app.&lt;br&gt;
(in a blogging app there would be separate Slices for users, posts, comments etc.).&lt;br&gt;
Our Slice will contain:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Initial value&lt;/li&gt;
&lt;li&gt;Increment logic&lt;/li&gt;
&lt;li&gt;Decrement logic&lt;/li&gt;
&lt;li&gt;Change by value logic
Let's go:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;/src/features/counterSlice.js&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { createSlice } from "@reduxjs/toolkit";

export const Slice = createSlice({
  name: "counter",
  initialState: {

  },
  reducers: {

  }
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;First we have a named import for &lt;code&gt;createSlice&lt;/code&gt; from toolkit. In this function we are giving it a name, setting initial state, and providing logic as reducers.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;/src/features/counterSlice.js&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;...
export const Slice = createSlice({
  name: "counter",
  initialState: {
    value: 0
  },
...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we set the initial state to 0, every time we refresh our application it will be defaulted to 0. More likely scenario here would be fetching the data from external source via async function. We won't be covering that here but you can read more about async logic with &lt;code&gt;Thunks&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;In our reducers object we will have increment, decrement, and changeByValue:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;/src/features/counterSlice.js&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;...
reducers: {
    increment: state =&amp;gt; {
      state.value += 1;
    },
    decrement: state =&amp;gt; {
      state.value -= 1;
    },
    changeByValue: (state, action) =&amp;gt; {
      state.value += action.payload;
    }
  }
...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now it starts to make sense. When we dispatch an action from our component we are referencing one of these in the reducers object. Reducer is acting as an "event listener" that handles events based on received action type while Dispatching actions is "triggering events".&lt;br&gt;
With &lt;code&gt;increment&lt;/code&gt; and &lt;code&gt;decrement&lt;/code&gt; we are updating state value, while &lt;code&gt;changeByValue&lt;/code&gt; takes action payload to determine the exact value of that update.&lt;br&gt;
Only thing left to do in the slice is to export Actions, State reducer, and state value. Here is a complete file&lt;/p&gt;

&lt;p&gt;&lt;em&gt;/src/features/counterSlice.js&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { createSlice } from "@reduxjs/toolkit";

export const Slice = createSlice({
  name: "counter",
  initialState: {
    value: 0
  },
  reducers: {
    increment: state =&amp;gt; {
      state.value += 1;
    },
    decrement: state =&amp;gt; {
      state.value -= 1;
    },
    changeByValue: (state, action) =&amp;gt; {
      state.value += action.payload;
    }
  }
});
export const selectCount = (state) =&amp;gt; state.counter.value;

export const { increment, decrement, changeByValue } = Slice.actions;
export default Slice.reducer;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Important note here is that Reducers are not allowed to modify existing state. They have to make immutable updates which basically means copying the state and modifying that copy. Here &lt;code&gt;createSlice()&lt;/code&gt; does the heavy-lifting for us and creates immutable updates, so as long you are inside &lt;code&gt;createSlice()&lt;/code&gt; you are good with immutability rule 👌&lt;/p&gt;

&lt;p&gt;We now need to update our store with reducers we made:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;/src/app/store.js&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { configureStore } from "@reduxjs/toolkit";
import counterReducer from "../features/counterSlice";

export const Store = configureStore({
  reducer: {
    counter: counterReducer
  }
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The only thing left to do is to create a component that will be the UI for our app:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;/src/features/Counter.js&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import React, { useState } from "react";

const Counter = () =&amp;gt; {
return (
    &amp;lt;&amp;gt;
      &amp;lt;h1&amp;gt;Counter app&amp;lt;/h1&amp;gt;
      &amp;lt;p&amp;gt;Count: &amp;lt;/p&amp;gt;
      &amp;lt;button&amp;gt;Increment&amp;lt;/button&amp;gt;
      &amp;lt;button&amp;gt;Decrement&amp;lt;/button&amp;gt;
      &amp;lt;button&amp;gt;
        Change by Value
      &amp;lt;/button&amp;gt;
      &amp;lt;input/&amp;gt;
    &amp;lt;/&amp;gt;
  );
};

export default Counter;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We are starting from this base. We will need a way to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Show current count status &lt;/li&gt;
&lt;li&gt;Increment on click of button&lt;/li&gt;
&lt;li&gt;Decrement on click of button&lt;/li&gt;
&lt;li&gt;Input value for change&lt;/li&gt;
&lt;li&gt;Apply value to the count&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We have already exported the current state from the Slice like this:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;/src/features/Counter.js&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;export const selectCount = (state) =&amp;gt; state.counter.value;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can now use this to show current value using &lt;code&gt;useSelector()&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;...
import { useSelector } from "react-redux";
import { selectCount } from "./counterSlice";

const Counter = () =&amp;gt; {
  const count = useSelector(selectCount);

return (
    &amp;lt;&amp;gt;
      ...
      &amp;lt;p&amp;gt;Count: {count}&amp;lt;/p&amp;gt;
      ...
    &amp;lt;/&amp;gt;
  );
...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As we mentioned earlier, we will use &lt;code&gt;useDispatch()&lt;/code&gt; to dispatch actions we need -&amp;gt; increment, decrement, changeByValue:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;/src/features/Counter.js&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;...
import { useDispatch, useSelector } from "react-redux";
import {
  increment,
  decrement,
  changeByValue,
  selectCount
} from "./counterSlice";

const Counter = () =&amp;gt; {
  const count = useSelector(selectCount);
  const dispatch = useDispatch();

  return (
    &amp;lt;&amp;gt;
      ...
      &amp;lt;p&amp;gt;Count: {count}&amp;lt;/p&amp;gt;
      &amp;lt;button onClick={() =&amp;gt; dispatch(increment())}&amp;gt;Increment&amp;lt;/button&amp;gt;
      &amp;lt;button onClick={() =&amp;gt; dispatch(decrement())}&amp;gt;Decrement&amp;lt;/button&amp;gt;
      &amp;lt;button onClick={() =&amp;gt; dispatch(changeByValue(value))}&amp;gt;
        Change by Value
      &amp;lt;/button&amp;gt;
      ...
    &amp;lt;/&amp;gt;
  );
};
...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Increment and Decrement are pretty much self-explanatory, but with changeByValue we have a variable &lt;code&gt;value&lt;/code&gt; that we need to define in order to send it as a payload. We will use React local state for this with &lt;code&gt;onChange&lt;/code&gt; and &lt;code&gt;handleChange()&lt;/code&gt; to set this value properly. With those additions we have a complete component:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;/src/features/Counter.js&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import React, { useState } from "react";
import { useDispatch, useSelector } from "react-redux";
import {
  increment,
  decrement,
  changeByValue,
  selectCount
} from "./counterSlice";

const Counter = () =&amp;gt; {
  const count = useSelector(selectCount);
  const dispatch = useDispatch();
  const [value, setValue] = useState();

  const handleChange = (e) =&amp;gt; {
    const num = parseInt(e.target.value);
    setValue(num);
  };

  return (
    &amp;lt;&amp;gt;
      &amp;lt;h1&amp;gt;Counter app&amp;lt;/h1&amp;gt;
      &amp;lt;p&amp;gt;Count: {count}&amp;lt;/p&amp;gt;
      &amp;lt;button onClick={() =&amp;gt; dispatch(increment())}&amp;gt;Increment&amp;lt;/button&amp;gt;
      &amp;lt;button onClick={() =&amp;gt; dispatch(decrement())}&amp;gt;Decrement&amp;lt;/button&amp;gt;
      &amp;lt;button onClick={() =&amp;gt; dispatch(changeByValue(value))}&amp;gt;
        Change by Value
      &amp;lt;/button&amp;gt;
      &amp;lt;input onChange={(e) =&amp;gt; handleChange(e)} /&amp;gt;
    &amp;lt;/&amp;gt;
  );
};

export default Counter;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With this addition, we have a working React Redux app. Congrats! You can install Redux dev tools to your browser to see what is exactly happening and how actions mutate the state.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Recap&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;After seeing how everything connects together, here is the recap of the update cycle that happens when the user clicks a button to increment/decrement count:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;User clicks a button&lt;/li&gt;
&lt;li&gt;App dispatches an action to Redux store&lt;/li&gt;
&lt;li&gt;Store runs reducer function with previous state and current action after which it saves return value as the new state&lt;/li&gt;
&lt;li&gt;Store notifies all subscribed parts of the UI&lt;/li&gt;
&lt;li&gt;Each UI component that needs data checks if it is what it needs&lt;/li&gt;
&lt;li&gt;Each UI component that has its data changed forces re-render with the new data&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Diving into Redux might seem daunting but once you get hang of basic principles it becomes a powerful weapon in your coding arsenal. &lt;/p&gt;

&lt;p&gt;Thank you for reading,&lt;/p&gt;

&lt;p&gt;'Take every chance to learn something new'&lt;/p&gt;

</description>
      <category>redux</category>
      <category>react</category>
      <category>javascript</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>JavaScript Made Easy: Part 7</title>
      <author>David Tetreau</author>
      <pubDate>Mon, 03 May 2021 21:38:18 +0000</pubDate>
      <link>https://dev.to/dtetreau/javascript-made-easy-part-7-3gld</link>
      <guid>https://dev.to/dtetreau/javascript-made-easy-part-7-3gld</guid>
      <description>&lt;p&gt;For Part 7, we will continue talking about functions. During Part 6, we learned about inner variables (local variables) and outer variables (global variables). This is the first topic I will expand on. Open up your repl and code along! &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#function-scope"&gt;
  &lt;/a&gt;
  Function scope
&lt;/h2&gt;

&lt;p&gt;It is important to know that variables defined inside a function cannot be accessed from anywhere outside the function. Take this example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
// A function with local variables
function incrementLocalVariables() {
  let num1 = 2//local variable
  let num2 = 3//local variable
  num1++;//increments num1
  num2++;//increments num2
  return num1 + num2;//returns the variables added together
}

incrementLocalVariables();//calls the function


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Notice that in the example above, the function has local variables. If you wanted to console.log(num1) or console.log(num2) from outside the function you could not do it. Go ahead and try it in your repl. The local variables can only be used inside of the function. You can also try putting a console.log after num1++ and num2++ to see that the variables were increased by one i.e. console.log(num1) after the variables are incremented. Now, try to copy and paste num1 and num2 outside the function and remove them from inside the function. Also, put a console.log outside the function to see the results. Like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
let num1 = 2//a global variable
let num2 = 3//a global variable

// A function with local variables
function incrementLocalVariables() {
  num1++;//increments num1
  num2++;//increments num2
  return num1 + num2;//returns the variables added together
}

incrementLocalVariables();//calls the function
console.log(num1);//shows the value of num1 was changed

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Because programs run top to bottom and left to right this program has a certain order to it. For example, num1 and num2 were declared outside the function, then the function ran because it was called by incrementLocalVariables(). Then, the global variables were incremented by the function, then we logged the global variables after they were incremented. Go ahead and experiment with this function and moving local and global variables around. Also, try to figure out what value was returned when we ran the function. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#nested-functions"&gt;
  &lt;/a&gt;
  Nested Functions
&lt;/h2&gt;

&lt;p&gt;Now that we have a better understanding of scope, I would like to move on to a more advanced topic regarding scope. First, a function defined inside another function can also access all variables defined in its parent function, and any other variables to which the parent function has access. Example(inspired by the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Functions"&gt;MDN Web Docs&lt;/a&gt;):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
// The following variables are defined in the global scope
let name = 'David';

// A nested function example
function getScore() {
  let num1 = 2;//local variable
  let num2 = 3;//local variable

  //inner function
  function add() {
    return name + ' scored ' + (num1 + num2);
  }

  return add();
}

getScore(); // Returns "David scored 5"

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There is a lot going on here:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Starting from the top, look at how the name variable is declared. This variable is in the global scope. That means it can be accessed by the inner and the outer function. &lt;/li&gt;
&lt;li&gt;&lt;p&gt;Then, we get to the getScore function which is the outer function. This function has two local variables inside of it. Those variables are num1 and num2. Both of these variables can be accessed by the inner and the outer function. However, you cannot access them and use them outside of the function. - The inner function returns a concatenated string that consists of:&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;the value stored in the global variable&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;the string ' scored' with a space in it&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;both local variables added together&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Notice that when the local variables were added together they were put inside of parenthesis. This is similar to what you would see in arithmetic. This signifies that this operation is set apart from others. Since those variables are concatenated with the (+) operator, the result becomes part of the string. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Finally, the return statement in the outer function consists of calling the inner function. Therefore, whatever the inner function returns becomes the return for the outer function. This is a lot to take in. Please take time to fully understand everything and experiment with it in your repl. &lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#further-reading"&gt;
  &lt;/a&gt;
  Further Reading
&lt;/h2&gt;

&lt;p&gt;Because functions are so important, here is some additional reading on the topics we discussed in this post:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.geeksforgeeks.org/javascript-nested-functions/"&gt;https://www.geeksforgeeks.org/javascript-nested-functions/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Functions"&gt;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.tutorialspoint.com/javascript/javascript_nested_functions.htm"&gt;https://www.tutorialspoint.com/javascript/javascript_nested_functions.htm&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I hope you have enjoyed this post! Please check out the entire "JavaScript Made Easy" series by David Tetreau. There will be a new post daily.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>javascript</category>
    </item>
    <item>
      <title>SPA JWT stateless authorization</title>
      <author>Tomasz</author>
      <pubDate>Mon, 03 May 2021 21:23:38 +0000</pubDate>
      <link>https://dev.to/tomaszgaluszka/spa-jwt-stateless-authorization-34c7</link>
      <guid>https://dev.to/tomaszgaluszka/spa-jwt-stateless-authorization-34c7</guid>
      <description>&lt;p&gt;Hello,&lt;/p&gt;

&lt;p&gt;I've been recently learning different ways to secure SPA's.&lt;/p&gt;

&lt;p&gt;The first one which took my attention was the Oauth 2.0 extension called PKCSE. I liked it, but it has some disadvantages: where to securely store the access_token and long lived refresh_token ...(local storage in memory etc. is not a case because of XSS)&lt;/p&gt;

&lt;p&gt;The second approach was to use a back-end for front-end server under the same domain (same nginx with routing all /api/* calls into my backend server). In this case the Oauth client will be my back-end server which can just implement the authorization flow.&lt;br&gt;
At the end of it it will redirect browser to the SPA home page with the following COOKIE:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ACCESS_TOKEN=API_ACCESS_TOKEN&lt;/li&gt;
&lt;li&gt;secure: true&lt;/li&gt;
&lt;li&gt;httpOnly: true&lt;/li&gt;
&lt;li&gt;SameSite: secure&lt;/li&gt;
&lt;li&gt;expire: API_ACCESS_TOKEN_EXPIRE&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The cookie from the above will be included into the all AJAX requests from SPA to my back-end api (via nginx - same domain). Also it will mitigate the risk of XSS and CSRF attacks.&lt;/p&gt;

&lt;p&gt;What do you think about this approach, do you have any better ideas of securing SPA ? Please share your thoughts.&lt;/p&gt;

&lt;p&gt;Links:&lt;br&gt;
&lt;a href="https://www.pingidentity.com/en/company/blog/posts/2021/refresh-token-rotation-spa.html"&gt;https://www.pingidentity.com/en/company/blog/posts/2021/refresh-token-rotation-spa.html&lt;/a&gt;&lt;br&gt;
&lt;a href="https://stackoverflow.com/questions/20963273/spa-best-practices-for-authentication-and-session-management"&gt;https://stackoverflow.com/questions/20963273/spa-best-practices-for-authentication-and-session-management&lt;/a&gt;&lt;br&gt;
&lt;a href="https://curity.io/resources/learn/spa-best-practices/"&gt;https://curity.io/resources/learn/spa-best-practices/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>jwt</category>
      <category>oauth</category>
      <category>authorization</category>
      <category>stateless</category>
    </item>
    <item>
      <title>Proxy Pattern in JavaScript</title>
      <author>Beto Muniz</author>
      <pubDate>Mon, 03 May 2021 21:03:24 +0000</pubDate>
      <link>https://dev.to/obetomuniz/proxy-pattern-in-javascript-egn</link>
      <guid>https://dev.to/obetomuniz/proxy-pattern-in-javascript-egn</guid>
      <description>&lt;p&gt;Just a catch up about how the Proxy object works on JavaScript to allow us to implement Proxy patterns.&lt;/p&gt;

&lt;p&gt;📌 JavaScript's Proxy object allows us to intercept and modifies any JavaScript object.&lt;/p&gt;

&lt;p&gt;📌 JavaScript's Proxy object is an elegant and safe way for creating or extending libraries, caching, error handling, and complex data manipulation on JavaScript.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;b&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;arrProxy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Proxy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;property&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hasOwnProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;property&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;property&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;default value&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;arrProxy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;z&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// "default value"&lt;/span&gt;
&lt;span class="nx"&gt;arrProxy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// 1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;💡 What are the use cases that you most liked to use such a JavaScript feature? &lt;/p&gt;

&lt;p&gt;📚 Still, for a detailed API spec of Proxy's object in JavaScript, take a look in the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy"&gt;MDN docs&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;💌 If you thought this brief content useful for your web dev studies and want to receive more, &lt;a href="https://www.getrevue.co/profile/obetomuniz"&gt;subscribe to my newsletter&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>React Best Practices</title>
      <author>awedis</author>
      <pubDate>Mon, 03 May 2021 20:09:20 +0000</pubDate>
      <link>https://dev.to/awedis/react-best-practices-4l4m</link>
      <guid>https://dev.to/awedis/react-best-practices-4l4m</guid>
      <description>&lt;p&gt;In this article, I want to share some details to take care of, which will make us better React developers&lt;/p&gt;




&lt;h5&gt;
  &lt;a href="#separate-logic-from-jsx"&gt;
  &lt;/a&gt;
  Separate logic from JSX
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;It's always good to spread the logic (or functional part) from the JSX, the code will be cleaner and more editable, check the example below how to handle an onClick event instead of putting it directly inside the element
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Todo&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;condition&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;addHandler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;condition&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;//do api call&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt;
        &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;addHandler&lt;/span&gt;&lt;span class="p"&gt;()}&lt;/span&gt;
      &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Add&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Todo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#split-into-small-components-amp-make-them-reusable"&gt;
  &lt;/a&gt;
  Split into small components &amp;amp; make them reusable
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;In this part let's try to split a UI component from a real project
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vnz_y1hW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hjwrnj4w423y3t0tgjbm.png" alt="c5781d72c1298dc869b74702b4ee42a0"&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
&lt;li&gt;NavBar: Top navbar container which contains the HamBtn&lt;/li&gt;
&lt;li&gt;HamBtn: The 3 horizontal lines button, that can be used in other parts &lt;/li&gt;
&lt;li&gt;TodoRow: Todo row, containing the text, and other action buttons&lt;/li&gt;
&lt;li&gt;RadioBtn: Toggle button&lt;/li&gt;
&lt;li&gt;DeleteBtn: Delete button for todo&lt;/li&gt;
&lt;li&gt;Button: Generic button component with several dynamic props&lt;/li&gt;
&lt;li&gt;Container: The whole container for the Todo list.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;All these will be separate components, this will help us in the long run, if the project becomes bigger almost all the components can be reused 😎&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#state-management-redux-or-context"&gt;
  &lt;/a&gt;
  State Management (Redux or Context)
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;In the case of using Redux Library, I highly recommend using Sagas which will help you to make async API calls &lt;br&gt;
&lt;em&gt;Redux: Perfect for larger applications where there are high-frequency state updates&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;And for Context Api, its much simple than the Redux, and you don't need to download any library&lt;br&gt;
&lt;em&gt;Context API: Resourceful and ideal for small applications where state changes are minimal&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h5&gt;
  &lt;a href="#hooks-and-functional-components"&gt;
  &lt;/a&gt;
  Hooks and Functional Components
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;No more "this"&lt;/li&gt;
&lt;li&gt;Fewer lines of code&lt;/li&gt;
&lt;li&gt;It's easier to debug, test &amp;amp; refactor it&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I think the majority of developers are already using all their projects based on these two, but I just wanted to mention it 😁 &lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#styledcomponents"&gt;
  &lt;/a&gt;
  Styled-Components
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;Styled-Components is one of the new ways to use CSS in modern JavaScript&lt;/li&gt;
&lt;li&gt;It is meant to be a successor of CSS Modules, a way to write CSS that's scoped to a single component, and not leak to any other element on the page
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Text&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./SubTitle.styled&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;SubTitle&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Hello&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Text&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;SubTitle&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;styled-components&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt;&lt;span class="s2"&gt;`
  color: #AAA;
  font-size: 20px;
`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#testing"&gt;
  &lt;/a&gt;
  Testing
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;Unit Testing - (to check a single component of an application, for more critical functions)&lt;/li&gt;
&lt;li&gt;Integration Testing - (to check if different pieces of the modules are working together)&lt;/li&gt;
&lt;li&gt;End-to-End Testing - (involves testing an application's workflow from beginning to end, aims to replicate real user scenarios)&lt;/li&gt;
&lt;/ul&gt;

&lt;h5&gt;
  &lt;a href="#typescript"&gt;
  &lt;/a&gt;
  Typescript
&lt;/h5&gt;

&lt;p&gt;&lt;em&gt;TypeScript is a “typed superset of JavaScript that compiles to plain JavaScript.”&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Using Typescript in React will help you to develop more stable components, that are strongly typed and are faster to be integrated, lets check the simplest example&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;Props&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Button&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;label&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt; &lt;span class="p"&gt;}:&lt;/span&gt; &lt;span class="nx"&gt;Props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt;
      &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;label&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Button&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hPbkfg3z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/82nq5vtk5a6k51ues9b5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hPbkfg3z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/82nq5vtk5a6k51ues9b5.png" alt="12345"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;React is an awesome library, you can split &amp;amp; organize your code in a way to become very flexible &amp;amp; scalable, wanted to keep it simple &amp;amp; high-level&lt;/p&gt;

&lt;p&gt;Wish it was helpful and that's it 😊&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>reactnative</category>
      <category>typescript</category>
    </item>
    <item>
      <title>How to Translate English to Mandalorian with Twilio Serverless and SMS</title>
      <author>Lizzie Siegle</author>
      <pubDate>Mon, 03 May 2021 20:09:14 +0000</pubDate>
      <link>https://dev.to/twilio/how-to-translate-english-to-mandalorian-with-twilio-serverless-and-sms-4mbc</link>
      <guid>https://dev.to/twilio/how-to-translate-english-to-mandalorian-with-twilio-serverless-and-sms-4mbc</guid>
      <description>&lt;p&gt;Celebrate Star Wars Day on May 4th by texting a sentence to +14807573107 to translate it into the Mandalorian language and read on to learn how to build the app using the &lt;a href="https://funtranslations.com/api/mandalorian"&gt;Mandalorian Translator API&lt;/a&gt;, &lt;a href="https://www.twilio.com/docs/runtime/functions"&gt;Twilio Functions&lt;/a&gt;, and the &lt;a href="https://www.twilio.com/docs/labs/serverless-toolkit"&gt;Twilio Serverless Toolkit&lt;/a&gt;.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--X6tBKAPD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://twilio-cms-prod.s3.amazonaws.com/images/1Y6xmX3R4bH3gbLIshNcHyjT4ccm6bwr9K9sXx4eh8nLr.width-1000.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X6tBKAPD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://twilio-cms-prod.s3.amazonaws.com/images/1Y6xmX3R4bH3gbLIshNcHyjT4ccm6bwr9K9sXx4eh8nLr.width-1000.png" alt="sms example"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;A Twilio account - &lt;a href="http://www.twilio.com/referral/iHsJ5D"&gt;sign up for a free one here and receive an extra $10 if you upgrade through this link&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;A Twilio phone number with SMS capabilities - &lt;a href="https://support.twilio.com/hc/en-us/articles/223135247-How-to-Search-for-and-Buy-a-Twilio-Phone-Number-from-Console"&gt;configure one here&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.postman.com/downloads/"&gt;Postman&lt;/a&gt; (you could alternatively make cURL requests from the command line)&lt;/li&gt;
&lt;li&gt;Node.js installed - &lt;a href="https://nodejs.org/en/download/"&gt;download it here&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;
  &lt;a href="#make-an-api-request-to-fun-translations"&gt;
  &lt;/a&gt;
  Make an API Request to Fun Translations
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jMhTJipX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://twilio-cms-prod.s3.amazonaws.com/original_images/lOJ9DpnZR7HE-C4-hd1dsZz7VZXVke3MQ7trtIJIsPQ4Y_6gim7voifGQyJedsUZbh9kK3M5_dl2fz" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jMhTJipX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://twilio-cms-prod.s3.amazonaws.com/original_images/lOJ9DpnZR7HE-C4-hd1dsZz7VZXVke3MQ7trtIJIsPQ4Y_6gim7voifGQyJedsUZbh9kK3M5_dl2fz" alt="kylo approves gif"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://funtranslations.com/"&gt;Fun Translations&lt;/a&gt; offers multiple translator APIs--in addition to the Mandalorian, there's a Yoda translator, pirate speak translator, Dothraki speak translator, and more. To use the Mandalorian translator API, we need to hit this URL: &lt;code&gt;https://api.funtranslations.com/translate/mandalorian&lt;/code&gt; passing it some text to translate by appending &lt;code&gt;?text="&amp;lt;TEXT_TO_TRANSLATE_HERE&amp;gt;"&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Open Postman and paste that URL along with some text in the &lt;code&gt;&amp;lt;TEXT_TO_TRANSLATE_HERE&amp;gt;&lt;/code&gt; part such as "this is fun" into the URL bar.&lt;/p&gt;

&lt;p&gt;Click &lt;strong&gt;Send&lt;/strong&gt; to hit it with a GET request to see the following data returned as seen below: &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--P6xWqM1A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://twilio-cms-prod.s3.amazonaws.com/images/d4M0HW8jHEaZ2P8mUzjhw8TpXaPSyQItjEhu1DmoCBb4r.width-1600.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P6xWqM1A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://twilio-cms-prod.s3.amazonaws.com/images/d4M0HW8jHEaZ2P8mUzjhw8TpXaPSyQItjEhu1DmoCBb4r.width-1600.png" alt="postman"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"success"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"total"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"contents"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"translated"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Ibic is nuhur"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"text"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"this is fun"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"translation"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"mandalorian"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The free tier only lets you make five API requests an hour. You would need to request an API key in order to use the paid version. The URL would then turn into &lt;code&gt;https://api.funtranslations.com/translate/mandalorian.json?text=${&amp;lt;TEXT_TO_TRANSLATE_HERE&amp;gt;}&amp;amp;X-Funtranslations-Api-Secret=${YOUR_API_KEY}&lt;/code&gt;, returning data in the same matter as shown below:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dzH5Fux4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/babuih4e8wdqldwn25x1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dzH5Fux4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/babuih4e8wdqldwn25x1.png" alt="postman with api key"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"success"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"total"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"contents"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"translated"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Nynir url ti api key"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"text"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"hit url with api key"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"translation"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"mandalorian"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can &lt;a href="https://funtranslations.com/api/mandalorian#subscribe"&gt;upgrade to a paid plan where you can make more HTTP requests here&lt;/a&gt;, but it's not necessary for this blog post.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#get-started-with-the-twilio-serverless-toolkit"&gt;
  &lt;/a&gt;
  Get Started with the Twilio Serverless Toolkit
&lt;/h3&gt;

&lt;p&gt;The Serverless Toolkit is CLI tooling that helps you develop locally and deploy to &lt;a href="https://www.twilio.com/docs/runtime"&gt;Twilio Runtime&lt;/a&gt;. The best way to work with the Serverless Toolkit is through the &lt;a href="https://www.twilio.com/docs/twilio-cli/quickstart"&gt;Twilio CLI&lt;/a&gt;. If you don't have the Twilio CLI installed yet, run the following commands on the command line to install it and the Serverless Toolkit:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install &lt;/span&gt;twilio-cli &lt;span class="nt"&gt;-g&lt;/span&gt;
twilio login
twilio plugins:install @twilio-labs/plugin-serverless
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create your new project and install our lone requirement &lt;code&gt;superagent&lt;/code&gt;, an HTTP client library to make HTTP requests in Node.js, by running:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;twilio serverless:init mandalorian-translation
&lt;span class="nb"&gt;cd &lt;/span&gt;mandalorian-translation
npm &lt;span class="nb"&gt;install &lt;/span&gt;superagent
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you are on a paid subscription with Fun Translations, open the &lt;code&gt;.env&lt;/code&gt; file and add an environment variable for your API key. In this blog post below, the API key is called &lt;code&gt;FUNTRANSLATIONS_API_SECRET&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#make-a-twilio-function-with-javascript"&gt;
  &lt;/a&gt;
  Make a Twilio Function with JavaScript
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;cd&lt;/code&gt; into the &lt;code&gt;\functions&lt;/code&gt; directory and make a new file called &lt;code&gt;translate.js&lt;/code&gt; containing the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;superagent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;superagent&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;apiurl&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://api.funtranslations.com/translate/mandalorian.json&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="nx"&gt;exports&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;handler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;twiml&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Twilio&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;twiml&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;MessagingResponse&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;twiml&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; 
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;msgToTranslate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toLowerCase&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;trim&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="nx"&gt;superagent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;apiurl&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;?text=&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;msgToTranslate&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
  &lt;span class="c1"&gt;//.set('X-Funtranslations-Api-Secret',context.FUNTRANSLATIONS_API_SECRET) // use this line to reference your API key from a paid Fun Translations plan if you have one&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;end&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`"&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;msgToTranslate&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;" in Mandalorian translates to "&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;contents&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;translated&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;". May the 4th be with you!`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;media&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://cdn.pixabay.com/photo/2015/09/04/18/55/yoda-922520_1280.png&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;twiml&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This code imports &lt;code&gt;superagent&lt;/code&gt;, makes a &lt;a href="https://www.twilio.com/docs/sms/api/message-resource"&gt;Twilio Messaging Response object&lt;/a&gt;, retrieves the inbound text message and appends it to the URL we wish to make a HTTP request to. Then the code parses the response from the endpoint (as seen in Postman earlier), to return a text message containing the translated text and an image of Yoda!&lt;/p&gt;

&lt;p&gt;You can view the &lt;a href="https://github.com/elizabethsiegle/mandalorian-language-translator"&gt;complete app on GitHub here&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#configure-the-function-with-a-twilio-phone-number"&gt;
  &lt;/a&gt;
  Configure the Function with a Twilio Phone Number
&lt;/h3&gt;

&lt;p&gt;To open up our app to the web with a public-facing URL, go back to the &lt;em&gt;mandalorian-translation&lt;/em&gt; root directory and run &lt;code&gt;twilio serverless:deploy&lt;/code&gt;. You should see this at the bottom of your terminal:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LYxo0Lmw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/62b0pvvllxw775otme8y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LYxo0Lmw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/62b0pvvllxw775otme8y.png" alt="Function URLs"&gt;&lt;/a&gt;&lt;br&gt;
In the &lt;a href="https://www.twilio.com/console/phone-numbers/incoming"&gt;phone numbers section of your Twilio Console&lt;/a&gt;, select the Twilio number you purchased and scroll down to the &lt;em&gt;Messaging&lt;/em&gt; section. Under &lt;em&gt;A MESSAGE COMES IN&lt;/em&gt; change &lt;em&gt;Webhook&lt;/em&gt; to &lt;em&gt;Function&lt;/em&gt; and then under &lt;em&gt;Service&lt;/em&gt; select &lt;em&gt;Mandalorian-Translation&lt;/em&gt;, for &lt;em&gt;Environment&lt;/em&gt; select &lt;em&gt;dev-environment&lt;/em&gt;, and then for &lt;em&gt;Function Path&lt;/em&gt; select &lt;em&gt;/translate&lt;/em&gt;.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UBeJhWwB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zpfuic8rd1yvpnmjh3em.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UBeJhWwB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zpfuic8rd1yvpnmjh3em.png" alt="Messaging section of phone number"&gt;&lt;/a&gt;&lt;br&gt;
Click the &lt;strong&gt;Save&lt;/strong&gt; button below and tada! You can now text your Twilio number a phrase and receive the phrase translated from the Mandalorian language back in a response.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#whats-next-for-twilio-serverless-apis-and-star-wars"&gt;
  &lt;/a&gt;
  What's Next for Twilio Serverless, APIs, and Star Wars?
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QMiNeej8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.pinimg.com/originals/a0/90/cc/a090cc71d7d9ef95b22b18b9acc281f0.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QMiNeej8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.pinimg.com/originals/a0/90/cc/a090cc71d7d9ef95b22b18b9acc281f0.gif" alt="lol gif"&gt;&lt;/a&gt;&lt;br&gt;
How are you celebrating May Fourth? Twilio's Serverless Toolkit makes it possible to deploy web apps quickly, and Twilio Runtime seamlessly handles servers for you.&lt;/p&gt;

&lt;p&gt;Let me know online what you're building with Serverless and what your favorite Star Wars quote is! Some of mine include "Never tell me the odds", "Do. Or do not. There is no try", and "Strike me down, and I will become more powerful than you could possibly imagine".&lt;br&gt;
-Twitter: &lt;a href="http://twitter.com/lizziepika"&gt;@lizziepika&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;GitHub: &lt;a href="http://github.com/elizabethsiegle"&gt;elizabethsiegle&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Email: &lt;a href="mailto:lsiegle@twilio.com"&gt;lsiegle@twilio.com&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Livestreams: &lt;a href="http://twitch.tv/lizziepikachu"&gt;twitch.tv/lizziepikachu&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>serverless</category>
      <category>javascript</category>
      <category>twilio</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>How To Easily Use Animations From Cool Designers In Your Web App?</title>
      <author>Mohmed Ishak</author>
      <pubDate>Mon, 03 May 2021 20:06:21 +0000</pubDate>
      <link>https://dev.to/ishakmohmed/how-to-easily-use-animations-from-cool-designers-in-your-web-app-l6b</link>
      <guid>https://dev.to/ishakmohmed/how-to-easily-use-animations-from-cool-designers-in-your-web-app-l6b</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gZ_wOdTF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/06bu2bvrww2wdznfqgam.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gZ_wOdTF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/06bu2bvrww2wdznfqgam.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The truth is, to have cool animations in your web app like loading animation, you don't need to be a good designer cause we've got designers who do that and you just need to get some help from them.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ever-heard-of-lottie-files"&gt;
  &lt;/a&gt;
  Ever Heard Of Lottie Files?
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MwwQVCqU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zjfdu97mxt1aacg924tg.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MwwQVCqU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zjfdu97mxt1aacg924tg.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Lottie Files is an animation library from Airbnb where it is web developers' go-to site to look for awesome animations and then pretend like we did it from scratch to non-techies.&lt;/p&gt;

&lt;p&gt;Anyway, here's how to use it in your React project.&lt;/p&gt;
&lt;h5&gt;
  &lt;a href="#step-1"&gt;
  &lt;/a&gt;
  Step 1:
&lt;/h5&gt;

&lt;p&gt;Add this package to your dependency&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="nx"&gt;react&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;lottie&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#step-2"&gt;
  &lt;/a&gt;
  Step 2:
&lt;/h5&gt;

&lt;p&gt;Head over to &lt;a href="https://lottiefiles.com/search?q=loading&amp;amp;category=animations"&gt;https://lottiefiles.com/search?q=loading&amp;amp;category=animations&lt;/a&gt; and select any animation. Download the file in JSON format and keep it in your project file, preferably in a folder named assets.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#step-3"&gt;
  &lt;/a&gt;
  Step 3:
&lt;/h5&gt;

&lt;p&gt;Create an animation component- in this case a loader component (you can literally copy &amp;amp; paste the code snippet below and it'll work but be sure to import the right JSON file).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Lottie&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react-lottie&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;animationData&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../assets/6472-loading.json&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Loader&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;defaultOptions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;autoplay&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;animationData&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;animationData&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;rendererSettings&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;preserveAspectRatio&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;xMidYMid slice&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Lottie&lt;/span&gt; &lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;defaultOptions&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Loader&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#step-4"&gt;
  &lt;/a&gt;
  Step 4:
&lt;/h5&gt;

&lt;p&gt;You probably know how to use this now. One common use case is to have a boolean variable like isVisible and show this component depending on the value like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;isVisible&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Loader&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>react</category>
      <category>uiweekly</category>
    </item>
    <item>
      <title>A Comment on code comments</title>
      <author>Ahmad khatab</author>
      <pubDate>Mon, 03 May 2021 19:50:36 +0000</pubDate>
      <link>https://dev.to/rockwell/a-comment-on-code-comments-abb</link>
      <guid>https://dev.to/rockwell/a-comment-on-code-comments-abb</guid>
      <description>&lt;p&gt;Growing up in my junior years of development, i was convinced that code comments are evil and they are the bane of our existence, i got this impression through reading various articles, books, blog-posts on why you had to do every thing but doing code comments. &lt;/p&gt;

&lt;p&gt;But, after many trial and errors, i have came to the conclusion that code comments are sometimes necessary to the sustainability of a project. But, that doesn't negate the fact that you should always be careful with your code comments, sometimes comments can be expressed through the code itself.&lt;/p&gt;

&lt;p&gt;Some examples of where i would comments some piece of code, the language in focus will be Ruby, and ERB templates.&lt;/p&gt;

&lt;p&gt;I have started commenting various parts of my &lt;code&gt;.erb&lt;/code&gt; files. One area where comments stand out are with icons. You've seen icon, and you know how they look good and that extra touch to the UI and UX. Well, that same icon would something like this in code&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight erb"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;svg&lt;/span&gt; &lt;span class="na"&gt;xmlns=&lt;/span&gt;&lt;span class="s"&gt;"http://www.w3.org/2000/svg"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"h-6 w-6"&lt;/span&gt; &lt;span class="na"&gt;fill=&lt;/span&gt;&lt;span class="s"&gt;"none"&lt;/span&gt; &lt;span class="na"&gt;viewBox=&lt;/span&gt;&lt;span class="s"&gt;"0 0 24 24"&lt;/span&gt; &lt;span class="na"&gt;stroke=&lt;/span&gt;&lt;span class="s"&gt;"currentColor"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;path&lt;/span&gt; &lt;span class="na"&gt;stroke-linecap=&lt;/span&gt;&lt;span class="s"&gt;"round"&lt;/span&gt; &lt;span class="na"&gt;stroke-linejoin=&lt;/span&gt;&lt;span class="s"&gt;"round"&lt;/span&gt; &lt;span class="na"&gt;stroke-width=&lt;/span&gt;&lt;span class="s"&gt;"2"&lt;/span&gt; &lt;span class="na"&gt;d=&lt;/span&gt;&lt;span class="s"&gt;"M6 18L18 6M6 6l12 12"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Can you tell me what icon is this just by looking at the code? Probably not, and most of the times you find multiple &lt;code&gt;svg&lt;/code&gt;s on a file, what would you do to find out what &lt;code&gt;svg&lt;/code&gt; are you editing? You might need to boot up your server and pray what you have removed is the correct one. And, here comments excel. Let's take the same code and add a comment to it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight erb"&gt;&lt;code&gt;#&lt;span class="cp"&gt;&amp;lt;%&lt;/span&gt; &lt;span class="n"&gt;close&lt;/span&gt; &lt;span class="n"&gt;icon&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;svg&lt;/span&gt; &lt;span class="na"&gt;xmlns=&lt;/span&gt;&lt;span class="s"&gt;"http://www.w3.org/2000/svg"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"h-6 w-6"&lt;/span&gt; &lt;span class="na"&gt;fill=&lt;/span&gt;&lt;span class="s"&gt;"none"&lt;/span&gt; &lt;span class="na"&gt;viewBox=&lt;/span&gt;&lt;span class="s"&gt;"0 0 24 24"&lt;/span&gt; &lt;span class="na"&gt;stroke=&lt;/span&gt;&lt;span class="s"&gt;"currentColor"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;path&lt;/span&gt; &lt;span class="na"&gt;stroke-linecap=&lt;/span&gt;&lt;span class="s"&gt;"round"&lt;/span&gt; &lt;span class="na"&gt;stroke-linejoin=&lt;/span&gt;&lt;span class="s"&gt;"round"&lt;/span&gt; &lt;span class="na"&gt;stroke-width=&lt;/span&gt;&lt;span class="s"&gt;"2"&lt;/span&gt; &lt;span class="na"&gt;d=&lt;/span&gt;&lt;span class="s"&gt;"M6 18L18 6M6 6l12 12"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;One line there, and some other developer, or even yourself after two months will be gratefull, because this saves you the pain of swithing to browser and seeing what is the &lt;code&gt;svg&lt;/code&gt; you are looking for. Let's illustrate one more example.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight erb"&gt;&lt;code&gt;#&lt;span class="cp"&gt;&amp;lt;%&lt;/span&gt; &lt;span class="n"&gt;close&lt;/span&gt; &lt;span class="n"&gt;icon&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;svg&lt;/span&gt; &lt;span class="na"&gt;xmlns=&lt;/span&gt;&lt;span class="s"&gt;"http://www.w3.org/2000/svg"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"h-6 w-6"&lt;/span&gt; &lt;span class="na"&gt;fill=&lt;/span&gt;&lt;span class="s"&gt;"none"&lt;/span&gt; &lt;span class="na"&gt;viewBox=&lt;/span&gt;&lt;span class="s"&gt;"0 0 24 24"&lt;/span&gt; &lt;span class="na"&gt;stroke=&lt;/span&gt;&lt;span class="s"&gt;"currentColor"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;path&lt;/span&gt; &lt;span class="na"&gt;stroke-linecap=&lt;/span&gt;&lt;span class="s"&gt;"round"&lt;/span&gt; &lt;span class="na"&gt;stroke-linejoin=&lt;/span&gt;&lt;span class="s"&gt;"round"&lt;/span&gt; &lt;span class="na"&gt;stroke-width=&lt;/span&gt;&lt;span class="s"&gt;"2"&lt;/span&gt; &lt;span class="na"&gt;d=&lt;/span&gt;&lt;span class="s"&gt;"M6 18L18 6M6 6l12 12"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;

#&lt;span class="cp"&gt;&amp;lt;%&lt;/span&gt; &lt;span class="n"&gt;tick&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;check&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;icon&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;svg&lt;/span&gt; &lt;span class="na"&gt;xmlns=&lt;/span&gt;&lt;span class="s"&gt;"http://www.w3.org/2000/svg"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"h-6 w-6"&lt;/span&gt; &lt;span class="na"&gt;fill=&lt;/span&gt;&lt;span class="s"&gt;"none"&lt;/span&gt; &lt;span class="na"&gt;viewBox=&lt;/span&gt;&lt;span class="s"&gt;"0 0 24 24"&lt;/span&gt; &lt;span class="na"&gt;stroke=&lt;/span&gt;&lt;span class="s"&gt;"currentColor"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;path&lt;/span&gt; &lt;span class="na"&gt;stroke-linecap=&lt;/span&gt;&lt;span class="s"&gt;"round"&lt;/span&gt; &lt;span class="na"&gt;stroke-linejoin=&lt;/span&gt;&lt;span class="s"&gt;"round"&lt;/span&gt; &lt;span class="na"&gt;stroke-width=&lt;/span&gt;&lt;span class="s"&gt;"2"&lt;/span&gt; &lt;span class="na"&gt;d=&lt;/span&gt;&lt;span class="s"&gt;"M5 13l4 4L19 7"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;

#&lt;span class="cp"&gt;&amp;lt;%&lt;/span&gt; &lt;span class="n"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;trash&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;icon&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;svg&lt;/span&gt; &lt;span class="na"&gt;xmlns=&lt;/span&gt;&lt;span class="s"&gt;"http://www.w3.org/2000/svg"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"h-6 w-6"&lt;/span&gt; &lt;span class="na"&gt;fill=&lt;/span&gt;&lt;span class="s"&gt;"none"&lt;/span&gt; &lt;span class="na"&gt;viewBox=&lt;/span&gt;&lt;span class="s"&gt;"0 0 24 24"&lt;/span&gt; &lt;span class="na"&gt;stroke=&lt;/span&gt;&lt;span class="s"&gt;"currentColor"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;path&lt;/span&gt; &lt;span class="na"&gt;stroke-linecap=&lt;/span&gt;&lt;span class="s"&gt;"round"&lt;/span&gt; &lt;span class="na"&gt;stroke-linejoin=&lt;/span&gt;&lt;span class="s"&gt;"round"&lt;/span&gt; &lt;span class="na"&gt;stroke-width=&lt;/span&gt;&lt;span class="s"&gt;"2"&lt;/span&gt; &lt;span class="na"&gt;d=&lt;/span&gt;&lt;span class="s"&gt;"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Code comments are there to help us, they are a sharp knife and we must be careful on how we use this tool and not injure ourselves while using it.&lt;/p&gt;

&lt;p&gt;Lastly, Huge shoutout to &lt;a href="https://twitter.com/davetron5000"&gt;David&lt;/a&gt; on his book &lt;a href="https://sustainable-rails.com/"&gt;Sustainable rails&lt;/a&gt;, it's really a well written book containing practical solution for your daily Ruby and Rails code.&lt;/p&gt;

&lt;p&gt;In future blog posts i will be writing on why you should comment your Ruby and Rails code.&lt;/p&gt;

&lt;p&gt;Thank you for taking the time to read this, have a great day!.&lt;/p&gt;

&lt;p&gt;Related Links:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://heroicons.com/"&gt;Heroicons&lt;/a&gt;&lt;br&gt;
&lt;a href="https://sustainable-rails.com/"&gt;Sustainable Rails&lt;/a&gt;&lt;/p&gt;

</description>
      <category>ruby</category>
      <category>computerscience</category>
      <category>rails</category>
    </item>
    <item>
      <title>Part 1: Basics of Hashing</title>
      <author>Mo Shoaib</author>
      <pubDate>Mon, 03 May 2021 19:50:15 +0000</pubDate>
      <link>https://dev.to/shoaib0023/part-1-basics-of-hashing-2fib</link>
      <guid>https://dev.to/shoaib0023/part-1-basics-of-hashing-2fib</guid>
      <description>&lt;p&gt;Hashing is the process of converting a given key into another value. A hash function is used to generate the new value according to the mathematical function. The result of the hash function is known as the hash value. Let's understand this with the help of an example - &lt;/p&gt;

&lt;p&gt;You have been provided a set S of numbers. You have to perform 3 kinds of&lt;br&gt;&lt;br&gt;
queries :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Check if element X is present in the set.&lt;/li&gt;
&lt;li&gt;Add a new element X to this set, if not present&lt;/li&gt;
&lt;li&gt;Delete an element X from this set, if present&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Constraints :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Each element of the set is distinct&lt;/li&gt;
&lt;li&gt;0 &amp;lt;= X &amp;lt;= 10 power 5&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Come on, think about the way how you will solve this problem?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Solution 1: Naive Approach&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This approach is generally the first hit of our mind. Here, we will loop over the set (you can assume the set as an array) and can easily check the element, add the element and delete an element.&lt;/p&gt;

&lt;p&gt;The complexity of the queries -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    O(N) [Linear Search]
    O(N) [Loop over all the elements in the worst case, add after the last element]
    O(N) [Create a new array excluding that element]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Solution 2: Direct addressing Scheme&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Create a boolean array of the size of the constraint. Initialize all the elements as False. Take the set of given numbers and change to True the corresponding elements in the array.&lt;/p&gt;

&lt;p&gt;Let's say the given set is S = [0, 3, 8, 10, 12]&lt;/p&gt;

&lt;p&gt;A = [T, F, F, T, F, F, F, F, T, F, T, F, T, ................. , F]  &amp;lt;-- dummy boolean array &lt;/p&gt;

&lt;p&gt;The complexity of the queries -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    O(1) [check the value of Xth index of the array, if True then present else not present]
    O(1) [change the value of Xth index to True]
    O(1) [change the value of Xth index to False]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The catch here is that the initialization of this boolean array is O(N) where N is the set's length as we have to loop over the set and populate the boolean dummy array also called the Addressing table. After initialization, all required queries will take O(1) right?&lt;/p&gt;

&lt;p&gt;Downsides of this approach - &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Memory Limitation: In some cases, constraints can be too large to store &lt;/li&gt;
&lt;li&gt;Wastage of memory: If our set S has 5 elements, we still have to initialize an array of size of the constraint&lt;/li&gt;
&lt;li&gt;Limited to only positive integers: Can be used for negative integers with little modification. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Solution 3: Hashing&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;The difference between direct addressing and hashing is instead of directly putting an element in the addressing table we will now pass the element first from the hash function (f(x)) then will store the output of that function in the addressing table.&lt;/p&gt;

&lt;p&gt;ex. f(x) = x % 11 where x is the element of set S&lt;/p&gt;

&lt;p&gt;Now whatever the input is the output of this hash function will be in [0,10]. So, our boolean dummy array will be of length 11&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A = [F, F, F, F, F, F, F, F, F, F, F, F]
Let's take S = {1, 2, 14, 20, 99} and hash function f(x) = x % 11

Calculate the value of hash function for every element of S - 
-  f(1) = 1 % 11 = 1
-  f(2) = 2 % 11 = 2
-  f(14) = 14 % 11 = 3
-  f(20) = 20 % 11 = 9
-  f(99) = 99 % 11 = 0

Now, we know in A only index 1, 2, 3, 9, 0 will be True

So, A = [T, T, T, T, F, F, F, F, F, T, F]

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;All three downsides are direct addressing approach is resolved here. &lt;strong&gt;The only catch here is to get the hash function right&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Note: The hash function f(x) = x % 11 is just an example taken for you guys to understand. It's not a good hash function as you can see the collision rate is too high. ex: for x = 3 and x = 25 this hash function will return the same output&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Hashing&lt;/strong&gt; - A hash function should follow the mathematical definition of functions (either one to one or many to one) and should be consistent with respect to their outputs. A good hash function distributes the keys as uniformly as possible&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Collision&lt;/strong&gt; - It happens when two or more different inputs to the hash function return the same output. Let's take a hash function,  f(x) = x % 11&lt;/p&gt;

&lt;p&gt;For x = 3 and x = 25 the value of f(x) is same i.e 3. This is known as a collision or a hit.&lt;br&gt;
Less number of hits corresponds to a good hash function.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Collision Resolution&lt;/strong&gt; - To resolve or reduced collision certain methods are used. Two well known used algorithms are &lt;strong&gt;Chaining&lt;/strong&gt; and &lt;strong&gt;Double Hashing Technique&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is just the prerequisite to get started on the real problems of hashing. In the next part, we will understand the String Hashing, performance load factor, and other sub-concepts that will give you a solid understanding of hashing and its real-world use case.&lt;/p&gt;

&lt;p&gt;Hope you like this knowledge, please like or comment, cheers. Thanks&lt;/p&gt;

</description>
      <category>algorithms</category>
      <category>programming</category>
      <category>productivity</category>
      <category>functional</category>
    </item>
    <item>
      <title>Intro to API Gateway</title>
      <author>Michael Liendo</author>
      <pubDate>Mon, 03 May 2021 19:49:16 +0000</pubDate>
      <link>https://dev.to/mtliendo/intro-to-api-gateway-g8e</link>
      <guid>https://dev.to/mtliendo/intro-to-api-gateway-g8e</guid>
      <description>&lt;p&gt;We’re halfway through and we have already discussed so much! Today, we’re going to start tying our knowledge together so that we can create practical applications.&lt;/p&gt;

&lt;p&gt;Kicking things off, we’re going to talk about API Gateway.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#api-gateway-need-to-know-terms"&gt;
  &lt;/a&gt;
  API Gateway + Need to Know Terms
&lt;/h2&gt;

&lt;p&gt;This service allows us to quickly create endpoints for us to retrieve data.&lt;/p&gt;

&lt;p&gt;Much like the post on S3, API Gateway is a service that can help quite a bit once you get up and running. However, in practical terms, we’ll be focusing on how we can quickly use it in our frontend applications.&lt;/p&gt;

&lt;p&gt;API Gateway comes in 3 flavors: REST, WebSocket, and the more newly announced HTTP. As usual, now is a pretty good time to knock out some definitions.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Method&lt;/strong&gt;: The action that should be applied when interacting with your data endpoint ie) PUT, POST, GET, DELETE&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Resource&lt;/strong&gt;: A user-named item regarding your data. Ie, if you are creating an API about pets, then /pets is a likely resource. Each resource has one or more methods attached to it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;REST Endpoint&lt;/strong&gt;: A URL that will perform  This allows full customization over how we would like to create our APIs.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;WebSocket Endpoint&lt;/strong&gt;: Creates an open connection to allow for near-real-time communication.&lt;/p&gt;

&lt;p&gt;🔥Protip: AWS has better options if you’re considering WebSockets with API Gateway.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;HTTP Endpoint&lt;/strong&gt;: Slightly less flexible than REST Endpoints, while offering 40% of the cost savings and much of main functionality.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Stage&lt;/strong&gt;: An environment where your API lives. Typically used to keep separate production and development environments.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-our-api"&gt;
  &lt;/a&gt;
  🏗️ Creating our API
&lt;/h2&gt;

&lt;p&gt;🗒️ This section assumes that you have completed the previous day’s task of creating a pet Lambda. If not, refer back to that email before continuing. However, if you just need a quick refresher, we created and deployed the following lambda function:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LEe0r8V4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d95v1x7ixqmzauubjohe.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LEe0r8V4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d95v1x7ixqmzauubjohe.jpeg" alt="basic lambda creation"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Log into your account and search for API Gateway from the top search bar.&lt;/p&gt;

&lt;p&gt;Next, follow the steps below:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Under HTTP API, select “Build”&lt;/li&gt;
&lt;li&gt;Select “Add Integration”, then select Lambda&lt;/li&gt;
&lt;li&gt;Select the region you used to create your Lambda function&lt;/li&gt;
&lt;li&gt;Click in the “Lambda Function” box and select your lambda&lt;/li&gt;
&lt;li&gt;In the “API name” field, name your API pets-api&lt;/li&gt;
&lt;li&gt;When you're done, select “Next”&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Almost done!&lt;/p&gt;

&lt;p&gt;On the next page, we’ll be configuring our API endpoint. Go ahead and follow these steps:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;For the Method field, change it to GET&lt;/li&gt;
&lt;li&gt;For the Resource Path, change that to /pets&lt;/li&gt;
&lt;li&gt;Click Next&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;We’re not going to configure another stage, so go ahead and click next.&lt;/p&gt;

&lt;p&gt;If all went well, your screen should look just like mine in the screenshot below&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aeJ6jhr8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i494cqcvama7b8qwrew8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aeJ6jhr8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i494cqcvama7b8qwrew8.png" alt="Review and create screen"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🎉 Congratulations! You just created an API endpoint on AWS without writing any code!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#testing-your-endpoint"&gt;
  &lt;/a&gt;
  Testing your endpoint
&lt;/h2&gt;

&lt;p&gt;With your API selected, you should see an “Invoke URL”. If you were hasty and clicked it, you already know it doesn’t work 😅&lt;/p&gt;

&lt;p&gt;That’s because we didn’t assign anything to the root or / resource. Our resource is /pets.&lt;/p&gt;

&lt;p&gt;Copy the Invoke URL paste it in your browser’s search bar, ensuring that you appends /pets to it. You should now see your list of pets!&lt;/p&gt;

&lt;p&gt;If you’re just wanting to use this endpoint on your server, then you’re all done! However, chances are you want to use this in your frontend applications too. Unfortunately, if you try that now, you’ll be greeted by a friend that we’ve all met:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;CORS&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MpoHQX2h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9tu3ydojwnnet99vfge0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MpoHQX2h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9tu3ydojwnnet99vfge0.png" alt="CORS"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It’s saying “hey, server to server is fine, but server to the browser isn’t configured”.&lt;/p&gt;

&lt;p&gt;Let’s fix that.&lt;/p&gt;

&lt;p&gt;Back in the AWS Console:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Select the CORS tab on the left-hand side (under Develop)&lt;/li&gt;
&lt;li&gt;Select the Configure button Under Access-Control-Allow-Origin enter an asterisk&lt;/li&gt;
&lt;li&gt;Click Add, then Save&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;🗒️ Access-Control-Allow-Origin with an asterisk as the value allows anyone to call our endpoint. In many scenarios, you’ll want to lock that down to just your website’s domain.&lt;/p&gt;

&lt;p&gt;🎉 Congratulations! You just enabled CORS for your publicly available API endpoint. Feel free to test it out in a &lt;a href="https://codesandbox.io/"&gt;Codesandbox&lt;/a&gt;!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pricing"&gt;
  &lt;/a&gt;
  Pricing
&lt;/h2&gt;

&lt;p&gt;API Gateway &lt;strong&gt;doesn’t charge for the first one million API calls&lt;/strong&gt;. In my region (and most others) pricing after the free amount is $1.00 for every million requests.&lt;/p&gt;

&lt;p&gt;Not bad at all!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws.amazon.com/api-gateway/pricing/"&gt;https://aws.amazon.com/api-gateway/pricing/&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Over the course of a few posts, we have already covered a lot! Next time, we’ll learn how to persist data to a NoSQL database by taking a look at DynamoDB.&lt;/p&gt;

&lt;p&gt;See ya then!&lt;/p&gt;

</description>
      <category>aws</category>
      <category>serverless</category>
      <category>beginners</category>
    </item>
  </channel>
</rss>
