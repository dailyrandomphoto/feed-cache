<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>EVOLVING TECHNOLOGY AND IT'S IMPORTANCE </title>
      <author>Avinash Kumar</author>
      <pubDate>Wed, 01 Dec 2021 01:57:56 +0000</pubDate>
      <link>https://dev.to/darkxenium/evolving-technology-and-its-importance-22gm</link>
      <guid>https://dev.to/darkxenium/evolving-technology-and-its-importance-22gm</guid>
      <description>&lt;h5&gt;
  &lt;a href="#the-main-goal-of-technology-which-brings-together-tools-to-promote-development-use-and-information-exchange-is-to-make-tasks-easier-and-to-solve-many-of-humanitys-problems-we-must-emphasise-how-beneficial-technology-is-to-our-lives-as-it-advances-and-makes-our-lives-even-more-convenient"&gt;
  &lt;/a&gt;
  The main goal of technology, which brings together tools to promote development, use, and information exchange, is to make tasks easier and to solve many of humanity's problems. We must emphasise how beneficial technology is to our lives as it advances and makes our lives even more convenient.
&lt;/h5&gt;

&lt;p&gt;Some technologies that can be worked upon:-&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Controlled Artificial Intelligence&lt;/li&gt;
&lt;li&gt;Better machine learning and Nano tech&lt;/li&gt;
&lt;li&gt;Secured networks&lt;/li&gt;
&lt;/ol&gt;

&lt;h5&gt;
  &lt;a href="#also-technology-is-evolving-according-to-the-law-of-demand-we-basically-build-and-improve-what-the-market-wants-to-buy-for-me-this-is-an-outofcontrol-way-of-evolving-we-become-more-and-more-disconnected-from-nature-and-rely-more-on-dependable-tech-for-example-thanks-to-technological-advances-humans-now-are-more-educated-than-ever-before-but-that-knowledge-is-not-generally-used-whereas-a-few-decades-and-even-centuries-ago-people-where-less-educated-but-were-wiser-they-could-make-better-use-of-the-knowledge-they-had-and-better-use-of-their-mental-and-physical-abilities"&gt;
  &lt;/a&gt;
  Also, technology is evolving according to the law of demand! We basically build and improve what the market wants to buy! For me this is an 'out-of-control' way of evolving. We become more and more disconnected from nature and rely more on "dependable" tech. For example, thanks to technological advances humans now are more educated than ever before. But that knowledge is not generally used. Whereas a few decades and even centuries ago, people where less educated, but were wiser, they could make better use of the knowledge they had, and better use of their mental and physical abilities.
&lt;/h5&gt;

&lt;h5&gt;
  &lt;a href="#technology-also-helps-us-communicate-more-efficiently-and-effectively-with-others-who-are-spread-out-over-large-distances-and-its-always-developing-new-ways-of-doing-things-that-make-life-easier-or-bring-us-closer-together-whether-its-through-video-chat-social-media-or-even-just-taking-pictures-with-your-phone-and-posting-them-online-but-on-the-other-hand-there-are-some-people-who-think-technology-should-be-used-less-so-we-can-spend-more-time-interacting-with-each-other-facetoface-or-in-real-life-as-they-call-it-they-argue-that-technology-is-making-us-lazier-because-we-dont-have-to-make-as-much-effort-to-contact-people-or-do-things-and-they-also-say-that-the-new-way-we-communicate-online-can-lead-to-misunderstandings-and-fights-because-it-is-so-easy-for-others-to-misinterpret-the-way-you-mean-something"&gt;
  &lt;/a&gt;
  Technology also helps us communicate more efficiently and effectively with others who are spread out over large distances. And it's always developing new ways of doing things that make life easier or bring us closer together whether it's through video chat, social media, or even just taking pictures with your phone and posting them online. But on the other hand, there are some people who think technology should be used less so we can spend more time interacting with each other face-to-face, or "in real life" as they call it. They argue that technology is making us lazier because we don't have to make as much effort to contact people or do things. And they also say that the new way we communicate online can lead to misunderstandings and fights because it is so easy for others to misinterpret the way you mean something.
&lt;/h5&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qQ4WelUA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://thumbs.gfycat.com/PortlyGraveHen-size_restricted.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qQ4WelUA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://thumbs.gfycat.com/PortlyGraveHen-size_restricted.gif" alt="person panting" width="338" height="249"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>techtalks</category>
      <category>beginners</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Things to know about Artificial intelligence</title>
      <author>Mark Vassilevskiy</author>
      <pubDate>Wed, 01 Dec 2021 01:50:38 +0000</pubDate>
      <link>https://dev.to/markfusion/things-to-know-about-artificial-intelligence-5dc7</link>
      <guid>https://dev.to/markfusion/things-to-know-about-artificial-intelligence-5dc7</guid>
      <description>&lt;p&gt;In the future, Artificial Intelligence will be everywhere. AI is a &lt;br&gt;
computer system that can think for itself and make decisions about how to solve problems. It's becoming more advanced as time goes on. In this blog post, we will look at some of the things you need to know before AI becomes a part of your everyday life before it's too late.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#ai-is-not-humankind-robot"&gt;
  &lt;/a&gt;
  AI is not Humankind Robot
&lt;/h2&gt;

&lt;p&gt;If you think that AI thinks and growing as fast as people do, so you're wrong, it's doing it much faster than you can even imagine. To be what you're right now you need several years, while AI doing it probably in 1 day or even in a less period of time. &lt;/p&gt;

&lt;p&gt;AI can help you much more than you think. For example, AI currently helps doctors to diagnose diseases better, or AI researchers helping scientists from NASA to do something that they couldn't even imagine before the AI era.&lt;/p&gt;

&lt;p&gt;Why I'm telling you this? Because time will run fast and you won't even notice how AI will be implemented in all spheres of your life and work. I'm not saying that it will be an apocalypse and there will be terminators walking on the street (However, it can be so) AI will surely make your life much easier, for instance, you can already use some services like Upscaler of Image, Generator of Music, and even AI that is helping you to write articles like this one.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#you-have-to-catch-the-train"&gt;
  &lt;/a&gt;
  You have to catch the train
&lt;/h2&gt;

&lt;p&gt;Probably this information could sound too futuristic and AI will not be everywhere, but I'm telling you that it's already here. So before AI takes your job think twice about what can be done with AI in this sphere if there is such an opportunity. &lt;/p&gt;

&lt;p&gt;There're still many things that we can't do with AI such as a great design for your website. Yeah, you can say that there's already one but it's horrible and can't replace usual freelances who are making designs&lt;/p&gt;

&lt;p&gt;There are many specialties that you can choose from, including but not limited to: Security, Blockchain Technology &amp;amp; More, Trading and Investing Strategies. There's a strong emphasis on security this year as well since it was last year's theme. In addition, there are several directions in which the term "Neural Network" might be used - these&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#be-prepared-for-the-future"&gt;
  &lt;/a&gt;
  Be prepared for the future
&lt;/h2&gt;

&lt;p&gt;As we discussed AI doing everything faster than Humankind, so probably prepare yourself to live in the AI era. AI will help to do everything much easier and faster, so old technologies like PCs or laptops won't be needed probably soon. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dont-forget-about-ethics"&gt;
  &lt;/a&gt;
  Don't forget about ethics
&lt;/h2&gt;

&lt;p&gt;One of the things that you need to know before AI is taking over our lives completely is ethical issues with AI. AI doing it fast, but not always correctly. It can easily make a mistake and learn from it, but if AI starts doing unethical things just stop working. So probably think about ethical issues.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#fears"&gt;
  &lt;/a&gt;
  Fears
&lt;/h2&gt;

&lt;p&gt;We don't know what will be in the future and maybe terminators will destroy all humans or something like that. For example, such influencers like Elon Musk, Bill Gates, and others think that AI can be a very dangerous thing because if it's growing so fast, it can easily rethink itself and several rules that it had in original code, and who knows that will be next.  AI already doing all the crazy things, like AI that is flying drones or AI that beat humans in games.&lt;/p&gt;

&lt;p&gt;So these are some of the important things to know about AI before it's everywhere and you can't do anything about it anymore. Before AI takes over our life we should understand what AI really is and how helpful it will be for us? So think twice if this technology helps people or destroy them especially old technologies.&lt;/p&gt;

&lt;p&gt;AI will probably take your job so try to learn something new because soon there won't be any jobs at least not with the usual salary. Think carefully about which area suits you best so when AI comes out you can use its benefits instead of getting into trouble.&lt;/p&gt;




</description>
      <category>ai</category>
      <category>machinelearning</category>
      <category>career</category>
      <category>computerscience</category>
    </item>
    <item>
      <title>You DON'T need these to be a web dev</title>
      <author>Nitzan Hen</author>
      <pubDate>Wed, 01 Dec 2021 00:18:43 +0000</pubDate>
      <link>https://dev.to/nitzanhen/you-dont-need-these-to-be-a-web-dev-c3b</link>
      <guid>https://dev.to/nitzanhen/you-dont-need-these-to-be-a-web-dev-c3b</guid>
      <description>&lt;p&gt;&lt;em&gt;"If you don't know all of these, don't call yourself a web developer"&lt;/em&gt;, followed by some list of web dev related terms. Have you encountered one of these posts before? I come across them every once in a while on social media.&lt;/p&gt;

&lt;p&gt;These sorts of divisive claims bring about nothing but toxicity to our community, and only alienate the junior developers who are new to it. Especially for the profit of some traffic on Twitter or elsewhere, it's despicable.&lt;/p&gt;

&lt;p&gt;They paint a completely wrong image of the web dev scene, too - being a web developer is much more about the perpetual process of self-improving, learning new tools &amp;amp; technologies and experimenting with methods to combine them in the best way, rather than knowing some constant list of terms (which are often occasionally useful at best). And, built on top of the open-source industry, the web dev industry is one of the most welcoming industries out there, to programmers of any caliber.&lt;/p&gt;

&lt;p&gt;So, to be perfectly clear - &lt;strong&gt;you don't need to know &lt;a href="https://stackoverflow.com/questions/111102/how-do-javascript-closures-work"&gt;closures&lt;/a&gt;, &lt;a href="https://nodejs.org/en/docs/guides/event-loop-timers-and-nexttick/"&gt;the event loop&lt;/a&gt;, &lt;a href="https://www.digitalocean.com/community/tutorials/understanding-hoisting-in-javascript"&gt;hoisting&lt;/a&gt;, etc. to be a web developer&lt;/strong&gt;. The same goes for non-niche concepts &amp;amp; technologies - you can be a good dev without knowing &lt;a href="https://docs.docker.com/get-started/overview/"&gt;Docker&lt;/a&gt;, &lt;a href="https://www.infoworld.com/article/3613715/what-is-functional-programming-a-practical-guide.html"&gt;FP&lt;/a&gt;/&lt;a href="https://searchapparchitecture.techtarget.com/definition/object-oriented-programming-OOP"&gt;OOP&lt;/a&gt; or &lt;a href="https://azure.microsoft.com/en-us/overview/what-is-cloud-computing/"&gt;cloud computing&lt;/a&gt;, for example. Knowledge is always good to have, so if you're not familiar with them you should aspire to learn them sometime, but you can also be a damn good developer without them.&lt;/p&gt;

&lt;p&gt;I think my personal journey is a good indication to this point: I was met with web development close to three years ago, when I began my mandatory service; beforehand I knew some Java, from school and from coding as a hobby. The "tutoring" I received consisted of one half-baked, 30 minute lesson about the basics of HTML, and my "training period" consisted of watching some YouTube tutorials for close to two weeks, after which I was already being assigned tasks (that I was obviously not ready for). &lt;br&gt;
Virtually all of my knowledge and experience was gained on-the-job, much of it through ad-hoc googling, and it was months before I actually went back and strengthened my knowledge on the fundamentals. And, for an even longer time, concepts like &lt;a href="https://www.youtube.com/watch?v=4KHiSt0oLJ0"&gt;CORS&lt;/a&gt;, &lt;a href="https://owasp.org/www-community/attacks/xss/"&gt;XSS&lt;/a&gt; and &lt;a href="https://reactjs.org/docs/faq-internals.html"&gt;Virtual DOM&lt;/a&gt; remained unclear to me.&lt;/p&gt;

&lt;p&gt;It's not like I'm at the top of the industry today (still working on it!) but I've definitely gained a lot of experience and knowledge as a web developer, and have created some awesome projects along the way. &lt;strong&gt;And you can too!&lt;/strong&gt; don't let anybody deter you from it.&lt;/p&gt;

&lt;p&gt;My bottom line is - don't let any random list of technical terms discredit your journey as a developer. &lt;em&gt;Be proud of what you know&lt;/em&gt;, and be curious in what you don't. &lt;/p&gt;

&lt;p&gt;And, perhaps most importantly, be a good person; see people, not their labels, and invest energy in helping them improve instead of discouraging them from doing so.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>javascript</category>
      <category>programming</category>
    </item>
    <item>
      <title>It's Advent time</title>
      <author>Chris Jarvis</author>
      <pubDate>Wed, 01 Dec 2021 00:10:04 +0000</pubDate>
      <link>https://dev.to/jarvisscript/its-advent-time-43in</link>
      <guid>https://dev.to/jarvisscript/its-advent-time-43in</guid>
      <description>&lt;p&gt;December is here at that means Advent calendar time. Advent calendars count down till Christmas. They often have candy or small toys. I've used a LEGO Advent calendar the past few years. That was my inspiration for my CSS ugly sweater posts.&lt;/p&gt;

&lt;p&gt;Some developers wanted to join in on the Advent fun so they have made their own software related advents. You can join them, solve some daily puzzles, and learn something new.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Advent of Code&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The most well known is the &lt;a href="https://twitter.com/ericwastl"&gt;Eric Wastl's&lt;/a&gt; &lt;a href="https://adventofcode.com/"&gt;Advent of Code&lt;/a&gt; it will start dropping daily challenges at midnight EST December 1. The puzzles are language agnostic. You can solve them in whatever language you want. &lt;/p&gt;

&lt;p&gt;There's usually two brain teasers a day you have to solve the first one to unlock the second. But you don't have to solve December 1 before you open December 2. Coders can jump in at any point to solve a problem. There's a story that join the puzzles together. &lt;/p&gt;

&lt;p&gt;There's a leaderboard and a subreddit. People will be blogging their solutions as well. There's a big community that participates, check your community if you want to collaborate or encourage each other.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Advent of Cyber&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://tryhackme.com/room/adventofcyber3"&gt;Advent of Cyber&lt;/a&gt; is a Cyber Security daily challenge. You can learn about cyber security in this challenge. You can also win prizes. For each task you solve, you earn a raffle ticket. Prizes will be drawn on the 26th.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Advent of CSS&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;New this year is &lt;a href="https://www.adventofcss.com/"&gt;Advent of CSS&lt;/a&gt;. A daily CSS challenge by &lt;a href="https://twitter.com/selfteachme_"&gt;Amy Dutton&lt;/a&gt;. The challenges are emailed and you build and share your solutions. The email includes a Figma file, style guide, and hints to help. The basic tier is free but there's a $24 tier that includes the final solution and tutorial. You can order a Bundle with Advent of JS for $39.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Advent of JS&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Also new is &lt;a href="https://www.adventofjs.com/"&gt;Advent of JS&lt;/a&gt; by &lt;a href="https://twitter.com/jamesqquick"&gt;James Quick&lt;/a&gt;. A daily email challenge for JavaScript. The free tier includes, all the HTML and CSS you need to get started, allowing you to focus on the JavaScript. Plus a brief on how to get started and ways to push yourself.&lt;br&gt;
The $24 level includes final solutions and instructions. You can bundle with the Advent of CSS for $39.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dev Advent Calendar&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;by &lt;a href="https://twitter.com/themarcba"&gt;Marc Backes&lt;/a&gt; &lt;a href="https://github.com/devadvent/readme"&gt;Dev Advent Calendar&lt;/a&gt; will have daily challenges with a chance for a daily prize. Solutions will be submitted via GitHub. Puzzles will be beginner friendly and Christmas themed.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;UX Mas&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.uxmas.com/"&gt;UX Mas&lt;/a&gt; ran a few years ago. It wasn't a challenge but was a UX Calendar with a new UX article posted each day. The site is still up if you want to read about UX.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How am I Participating&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I thought about trying a 24-day blog event with some short posts each day but the job search needed more of my time. I haven't created anything ahead of time. I will do some CSS Ugly sweaters, and some small things but not everyday. &lt;/p&gt;

&lt;p&gt;I am participating in the Advent of CSS and JS but that will be my solutions to the daily challenge and not original content. I may or may not post my solutions daily.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#your-submissions"&gt;
  &lt;/a&gt;
  Your Submissions
&lt;/h2&gt;

&lt;p&gt;Do you know of any more developer related advents? Put them in the comments.&lt;br&gt;
Will you be participating in any of these challenges? Where will you share your solutions?&lt;/p&gt;

&lt;p&gt;Follow the people that built these advent Challenges.&lt;/p&gt;

</description>
      <category>adventofcode</category>
    </item>
    <item>
      <title>When are microservices appropriate?</title>
      <author>Ted Ngeene</author>
      <pubDate>Tue, 30 Nov 2021 23:52:25 +0000</pubDate>
      <link>https://dev.to/tngeene/when-are-microservices-appropriate-g2n</link>
      <guid>https://dev.to/tngeene/when-are-microservices-appropriate-g2n</guid>
      <description>&lt;p&gt;Lately, I've been tending to lean more towards employing a monolithic approach in system architecture. On paper, using micro-services seems like an ideal solution. The fact that you can decouple a project into smaller manageable bits is good. However, from experience and a couple of blog posts and videos I've watched, they do introduce a lot of complexities. Just to mention a few would be; giving database access to a microservice poses major security risks if not properly implemented, error handling, and especially if the said microservice is down would essentially make the system fail, connection error, read timeout, resource not found...you have to deal with many error scenarios.&lt;/p&gt;

&lt;p&gt;I'm not completely against them, for example I believe a microservice should do one thing and do it really well. A good example would be sending sms notifications. This wouldn't really need to interact with any database. Just accept a list of phone numbers and send out the messages.&lt;/p&gt;

&lt;p&gt;So my question is; when are my microservices appropriate and do we really need them as much as folks preach?&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>distributedsystems</category>
      <category>watercooler</category>
      <category>codequality</category>
    </item>
    <item>
      <title>Developing A Game Engine with Perl : Part  2 - Mouse Input</title>
      <author>Shawn Holland</author>
      <pubDate>Tue, 30 Nov 2021 23:43:03 +0000</pubDate>
      <link>https://dev.to/ansigameengine/developing-a-game-engine-with-perl-part-2-mouse-input-43nj</link>
      <guid>https://dev.to/ansigameengine/developing-a-game-engine-with-perl-part-2-mouse-input-43nj</guid>
      <description>&lt;p&gt;Let me start by saying.... &lt;strong&gt;I DO NOT KNOW WHAT I AM DOING.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Literally, developing a game engine is not on my resume... yet! So any code or ways of doing anything you read here, is just what I've figured out and works for me, which by no means should suggest to you that it is the proper way to do what ever it may be. Please consult your local guru first.&lt;/p&gt;

&lt;p&gt;OK, now that we have that established... Please consider the following as entertainment and should you lean along the way with me, that's wonderful!&lt;/p&gt;

&lt;p&gt;Now, by the time of writing this article, I am several months into this undertaking. I'll describe in future posts what the engine is capable of, but for today, let me tell you about what happened over the last 2 weeks. I will likely break them up into separate posts for easier consumption.&lt;/p&gt;

&lt;p&gt;Here's a quick list of the accomplishments, disasters and discoveries.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Mouse Input Support&lt;/li&gt;
&lt;li&gt;Hardware Failure&lt;/li&gt;
&lt;li&gt;Server Upgrade&lt;/li&gt;
&lt;li&gt;UEFI vs OpenSuSE Installer&lt;/li&gt;
&lt;li&gt;32bit -&amp;gt; 64bit &amp;amp; Perl's Storable&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#mouse-input-support"&gt;
  &lt;/a&gt;
  Mouse Input Support
&lt;/h2&gt;

&lt;p&gt;Yes, that's right, &lt;a href="https://fb.watch/9CgSmojbM1/"&gt;ANSI Game Engine games will be able to use a mouse&lt;/a&gt;. Seems like such a simple concept, that a game engine should have mouse support. And as it turns out, it is. I just hadn't gotten to it until now. You see, my mind-set up to now has been on the idea of &lt;a href="https://en.wikipedia.org/wiki/List_of_BBS_door_games"&gt;BBS door games&lt;/a&gt; So keyboard only input was something I never questioned.... until &lt;a href="https://fb.watch/9Cf-UjDA41/"&gt;I started developing the engine's Editor&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;At some point I realized the only way to have the capabilities I wanted in the engine, was to design a graphics &amp;amp; meta editor. Which so far turns out to be basically an MSPaint program that draws in ANSI and contains game meta information. Up until now, I have been relying on procedural code / command line utilities (&lt;a href="https://github.com/cslarsen/jp2a"&gt;jp2a&lt;/a&gt;, &lt;a href="https://github.com/hit9/img2txt"&gt;img2txt&lt;/a&gt;) to convert jpeg's, gif's &amp;amp; png's images into ANSI, or 3rd party &lt;a href="http://wiki.synchro.net/resource:ansi_editors"&gt;ANSI drawing programs&lt;/a&gt; like &lt;a href="https://blocktronics.github.io/moebius/"&gt;Moebius ANSI Art Editor&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;These tools are great for what they can do, unfortunately, they were never intended for such uses as a game engine. So a purpose built ANSI graphics editor that can also store meta and game information was needed.&lt;/p&gt;

&lt;p&gt;I very quickly realized that editing graphics and meta information by keyboard alone was slooooooooooooow!!! Not gonna work, I thought. I mean, yeah, it could be done, but even a single scene image is 132x57 "pixels". And to edit 7,524 cells with just arrow keys... nah son, that aint gonna happen. So time to start reading about mouse input via telnet/terminal.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.xfree86.org/current/ctlseqs.html#Mouse%20Tracking"&gt;As it turns out, it's quite a simple process.&lt;/a&gt; All you need to do is send/print one of a few &lt;a href="https://en.wikipedia.org/wiki/ANSI_escape_code"&gt;ANSI Escape Codes&lt;/a&gt; to the telnet/terminal client and you can get varying levels of detailed mouse input information in return.&lt;/p&gt;

&lt;p&gt;For my application, I needed the most detail, which includes mouse movement, button press, button release and X/Y coordinate information. &lt;/p&gt;

&lt;p&gt;Sending/printing these ANSI escape codes to the telnet/terminal client enables/disables exactly (almost, see limitation on Mouse Button 3 below) what I need.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;my $turn_mouse_on = "\033[?1003h";&lt;/code&gt;&lt;br&gt;
&lt;code&gt;my $turn_mouse_off = "\033[?1003l";&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;In Perl, \033 is the escape key. The return I started getting from enabling this was perfect.&lt;/p&gt;

&lt;p&gt;It looked something like this:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;input: ^[[M 5&amp;lt;&lt;br&gt;
Mouse Button: 0, Line: 28, Column: 21&lt;/p&gt;

&lt;p&gt;input: ^[[M!5&amp;lt;&lt;br&gt;
Mouse Button: 1, Line: 28, Column: 21&lt;/p&gt;

&lt;p&gt;input: ^[[M"5&amp;lt;&lt;br&gt;
Mouse Button: 2, Line: 28, Column: 21&lt;/p&gt;

&lt;p&gt;input: ^[[M#5&amp;lt;&lt;br&gt;
Mouse Button: 3, Line: 28, Column: 21&lt;/p&gt;

&lt;p&gt;input: ^[[M&amp;lt;80&amp;gt;5&amp;lt;&lt;br&gt;
Mouse Button: 96, Line: 28, Column: 21&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;First character &lt;code&gt;^[&lt;/code&gt; is escape (\033) followed by [M followed by the mouse button number and X/Y coordinates, all offset by +32.&lt;/p&gt;

&lt;p&gt;What this offset +32 means is, if you take the first example:&lt;br&gt;
&lt;code&gt;input: ^[[M 5&amp;lt;&lt;/code&gt;&lt;br&gt;
you see the first character after [M is a space. If we look up what space is in Dec from an &lt;a href="https://www.ascii-codes.com/#standard_character_set"&gt;ASCII chart&lt;/a&gt; we find space is Dec 32. If we adjust for offset, by subtracting 32, it is a 0. Mouse button 0 is the main left mouse button on my mouse.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Mouse Button 0: Left Mouse Click&lt;br&gt;
Mouse Button 1: Middle Mouse Click&lt;br&gt;
Mouse Button 2: Right Mouse Click&lt;br&gt;
Mouse Button 3: Mouse button release&lt;br&gt;
Mouse Button 96: Mouse Move&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Not sure if you see the limitation, but Mouse Button 3 is all we get to let us know that a mouse button was let go. Not which mouse button was let go, just that one was. Unfortunately, this is the best I have been able to discover, and works good enough for now.&lt;/p&gt;

&lt;p&gt;Here is a quick snip of code I use to extract the necessary information. Sometimes they come in a string with multiple mouse inputs back to back, especially on mouse movements when buffered over telnet. So I &lt;a href="https://perldoc.perl.org/functions/split"&gt;split the string&lt;/a&gt; on &lt;code&gt;\033[M&lt;/code&gt; first to get an array of mouse inputs, then split each mouse input on every character to get the mouse button and coordinate information. I use &lt;a href="https://perldoc.perl.org/functions/ord"&gt;ord()&lt;/a&gt; to get the Dec value of each ASCII character, then adjust for the offset:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;input: ^[[M&amp;lt;80&amp;gt;3&amp;lt;^[[M&amp;lt;80&amp;gt;4&amp;lt;&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;my @mouse = split(/\033\[M/,$input);
foreach my $mouse_input (@mouse) {
    my @button_and_coords = split(//, $mouse_input);
    my $mouse_button = ord($button_and_coords[0]) - 32;
    my $column       = ord($button_and_coords[1]) - 32;
    my $line         = ord($button_and_coords[2]) - 32;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I've &lt;a href="https://man7.org/linux/man-pages/man4/console_codes.4.html"&gt;read somewhere in a man page&lt;/a&gt; that you shouldn't put terminal controls into code, and should opt for using a &lt;a href="https://en.wikipedia.org/wiki/Ncurses"&gt;library, such as ncurses&lt;/a&gt;. I probably should as well, but I'm still learning and enjoy working directly with the codes today.&lt;/p&gt;

&lt;p&gt;Let me know if you have had any experience coding for using mouse in a terminal and if you've used a library like &lt;a href="https://metacpan.org/pod/Curses"&gt;Curses cpan module for Perl&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you have any suggestions or comments please share constructively. Also please visit our social media pages for lots of fun videos and pictures showing the game engine in action. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.instagram.com/ANSIGameEngine/"&gt;ANSI Game Engine on Instagram&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.facebook.com/ANSIGameEngine"&gt;ANSI Game Engine on Facebook&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Cheers!&lt;br&gt;
Shawn&lt;/p&gt;

</description>
      <category>perl</category>
      <category>gamedev</category>
      <category>linux</category>
      <category>devjournal</category>
    </item>
    <item>
      <title>Get your open source project featured on GitHub</title>
      <author>Michelle Mannering</author>
      <pubDate>Tue, 30 Nov 2021 23:28:48 +0000</pubDate>
      <link>https://dev.to/github/get-your-open-source-project-featured-on-github-1n06</link>
      <guid>https://dev.to/github/get-your-open-source-project-featured-on-github-1n06</guid>
      <description>&lt;p&gt;Each month, GitHub publishes a &lt;a href="https://github.blog/?s=release+radar"&gt;Release Radar&lt;/a&gt;. Top community projects who have shipped major version releases during the previous month are featured on the blog post.&lt;/p&gt;

&lt;p&gt;Now, this is your chance to submit your project to be featured. We've launched an open source repo where you can find information on the Release and submit your open source project to be considered.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-be-featured-on-the-release-radar"&gt;
  &lt;/a&gt;
  How to be featured on the Release Radar
&lt;/h2&gt;

&lt;p&gt;If you are a maintainer or contributor of an open source project, or you come across an awesome open source project, submit it! Head over to the new &lt;a href="https://releaseradar.github.com"&gt;GitHub Release Radar repo&lt;/a&gt; and &lt;a href="https://github.com/github/release-radar/issues/new?assignees=MishManners&amp;amp;labels=&amp;amp;template=release-radar-request.yml&amp;amp;title=%5BRelease+Radar+Request%5D+%3Ctitle%3E"&gt;open an issue&lt;/a&gt;. &lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/github"&gt;
        github
      &lt;/a&gt; / &lt;a href="https://github.com/github/release-radar"&gt;
        release-radar
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Repo for submission of projects to consider for the GitHub Release Radar 📡
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
GitHub Release Radar&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/mishmanners/github-release-radar/issues/new?assignees=MishManners&amp;amp;labels=&amp;amp;template=release-radar-request.yml&amp;amp;title=%5BRelease+Radar+Request%5D+%3Ctitle%3E"&gt;Submit your release for consideration&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This repo is designed to collect projects to consider for the &lt;a href="https://github.blog/?s=release+radar" rel="nofollow"&gt;GitHub Release Radar&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/36594527/141879290-ffbc7a47-6843-4122-990b-684c4b885dbf.png"&gt;&lt;img width="700" src="https://res.cloudinary.com/practicaldev/image/fetch/s--mcin9T0q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/36594527/141879290-ffbc7a47-6843-4122-990b-684c4b885dbf.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The GitHub Release Radar is a post written on the GitHub blog each month to showcase community projects that have shipped major version releases. A post is shipped at the start of the month showcasing community projects from the previous month.&lt;/p&gt;
&lt;p&gt;If you're a maintainer, or a contributor of an open source project, and you have a major version release that shipped, we'd love to hear from you.&lt;/p&gt;
&lt;p&gt;We can't promise we can feature all projects, but we would love to consider your project.&lt;/p&gt;
&lt;p&gt;Fill out this &lt;a href="https://github.com/mishmanners/github-release-radar/issues/new?assignees=MishManners&amp;amp;labels=&amp;amp;template=release-radar-request.yml&amp;amp;title=%5BRelease+Radar+Request%5D+%3Ctitle%3E"&gt;issue&lt;/a&gt; to be considered.&lt;/p&gt;
&lt;p&gt;If you have questions, check out the &lt;a href="https://github.com/mishmanners/github-release-radar/blob/main/faq.md"&gt;FAQs&lt;/a&gt;, or get in touch.&lt;/p&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/github/release-radar"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


&lt;p&gt;In the issue, fill out as much information as possible. The more information you include, the more likely we are to feature you. Side note, we're using &lt;a href="https://docs.github.com/en/communities/using-templates-to-encourage-useful-issues-and-pull-requests/syntax-for-issue-forms"&gt;GitHub Issue forms&lt;/a&gt; to collect information. &lt;a href="https://dev.to/github/how-to-build-google-like-forms-with-github-3ig2"&gt;You can create these forms too&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We get a lot of submissions each month. So while we can't promise we can feature all projects, we would love to consider your project. There are other opportunities to be featured on GitHub videos, &lt;a href="https://twitter.com/github/status/1465410387134849027"&gt;social media posts&lt;/a&gt;, and more.&lt;/p&gt;

&lt;p&gt;We also have a video released which goes out as part of the Release Radar each month. So there's lots of platforms for you to get eyes on your project 👀.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/7d50L0kJncw"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;So if you're thinking about it, don't think. Just &lt;a href="https://github.com/github/release-radar/issues/new?assignees=MishManners&amp;amp;labels=&amp;amp;template=release-radar-request.yml&amp;amp;title=%5BRelease+Radar+Request%5D+%3Ctitle%3E"&gt;submit&lt;/a&gt; 💥&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-a-major-version-release"&gt;
  &lt;/a&gt;
  What's a major version release?
&lt;/h2&gt;

&lt;p&gt;The question we get asked the most, is "what's a major version". Each month we feature projects who shipped major version releases. Major version releases are usually x.0, ie. 1.0, 2.0 etc. But not everyone's major versions will follow this format.&lt;/p&gt;

&lt;p&gt;We also get loads of submissions, so we'll often favour x.0 releases. However, if you have a x.x release with major (or big) changes we'll also consider it.&lt;/p&gt;

&lt;p&gt;What's considered a "major" or "big" change is up to you. It's your open source project; whether you're a maintainer or contributor. If you think it's big, &lt;a href="https://github.com/github/release-radar/issues/new?assignees=MishManners&amp;amp;labels=&amp;amp;template=release-radar-request.yml&amp;amp;title=%5BRelease+Radar+Request%5D+%3Ctitle%3E"&gt;submit it&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For more answers regarding submissions and the Release Radar, please check out the &lt;a href="https://github.com/github/release-radar/blob/main/faq.md"&gt;FAQs on the repo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;✨ Looking forward to seeing your submissions coming through ✨&lt;/p&gt;

</description>
      <category>contributorswanted</category>
      <category>opensource</category>
      <category>github</category>
      <category>news</category>
    </item>
    <item>
      <title>A Deep Dive Into Video Auto-Tagging
</title>
      <author>Prosper Otemuyiwa</author>
      <pubDate>Tue, 30 Nov 2021 22:49:39 +0000</pubDate>
      <link>https://dev.to/unicodeveloper/a-deep-dive-into-video-auto-tagging-3i4k</link>
      <guid>https://dev.to/unicodeveloper/a-deep-dive-into-video-auto-tagging-3i4k</guid>
      <description>&lt;p&gt;Video is one of the best ways for capturing audience attention. Product demonstrations, property tours, tutorials, and keynotes all make great content—provided that they’re readily searchable by your team and visitors alike. Even though tagging and categorization help organize videos and make them easy to find, the labeling process is labor intensive, taking time away from key tasks like creating new videos.&lt;/p&gt;

&lt;p&gt;The solution? Automation. Through machine learning (ML) algorithms, Cloudinary’s  &lt;a href="https://cloudinary.com/blog/new_google_powered_add_on_for_automatic_video_categorization_and_tagging"&gt;video-tagging&lt;/a&gt; feature &lt;strong&gt;automatically&lt;/strong&gt; detects video content. Video tagging extends image classification to image sequences, capable of detecting types of scenes (cities, mountains, the seaside) and objects (people, cars), and even inferring whether the content is appropriate for public viewing. Additionally, with video auto-tagging supplemented by detailed labels, you can moderate videos and automatically determine the minimum age for viewers.&lt;/p&gt;

&lt;p&gt;Video auto-tagging benefits a wide range of apps. For example: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;For a basketball game, auto-tagging can identify which player has the ball and for how long. The team can then make use of that information in optimizing its game strategy.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;For personal protective equipment, such as face masks or hand covers, auto-tagging can help you pinpoint and recognize human emotions, automatically detecting if the people in a video are happy or sad, for example.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Those capabilities might be highly challenging to implement, however. Gratifyingly, many major IT companies have recognized the need, offering various cloud services with AI-powered image and video analysis. Nonetheless, because each provider has its own programming interfaces or SDKs, you must use several completely different toolsets, complicating the workflow.&lt;/p&gt;

&lt;p&gt;Cloudinary’s convenient API simplifies video tagging through automation. You can decide which underlying tagging engine to use through the API and combine various services to further improve the tagging performance. This tutorial cites several use cases to which video tagging adds value, and steps you through an example that explains how to use Cloudinary’s API with the JavaScript client library. To follow this tutorial, you just need basic familiarity with HTML and JavaScript.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#organization-of-media-library"&gt;
  &lt;/a&gt;
  Organization of Media Library
&lt;/h2&gt;

&lt;p&gt;Large companies often store hundreds or even thousands of videos in their website’s media library, which is a pain to organize. Organizing by file name or upload date is straightforward but unhelpful. Organizing through tagging, i.e., grouping videos by category, is much more effective. Instead of sorting videos into a single folder structure based on one basic property, you organize them by tag category, sorting footage by attribute, such as the featured product, location type, and color scheme. &lt;/p&gt;

&lt;p&gt;The process of manually adding descriptions and tagging is arduous and time consuming, however. Auto-tagging categorizes videos automatically, making it easy to quickly find what you and your app users are looking for. The technology, which relies on artificial intelligence (AI) trained on large datasets, automatically recognizes and labels objects, such as cars and animals; attributes, such as color; and sentiments, such as adventure. Cloudinary, for example, combines AI from Google and other sources to automatically label the objects in your videos as you upload them, making tagging as simple and efficient as possible. &lt;/p&gt;

&lt;p&gt;To work with the Cloudinary API, start by &lt;a href="https://cloudinary.com/documentation/upload_images"&gt;uploading your media assets&lt;/a&gt;. (Note that even though that post refers to examples on image upload, they apply to videos, too.) During the upload, you can specify the public identifier (ID) of your assets and divide them into folders to create structured delivery URLs. Alternatively, you can group the assets in folders and subfolders, organizing the media library according to the same structure as your on-premise server.&lt;/p&gt;

&lt;p&gt;While uploading media to Cloudinary, you can also apply transformations, e.g., on-the-fly video encoding and delivery, transcoding, resizing, and cropping, which can convert videos to animated images and even add blurred backgrounds. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#useruploaded-content"&gt;
  &lt;/a&gt;
  User-Uploaded Content
&lt;/h2&gt;

&lt;p&gt;For all that user-uploaded content enhances your website, you cannot assume that your users are as knowledgeable and skilled as your internal team or that they would mount the level of effort for tagging and descriptions. For instance, if you’re running a real-estate website, users would upload videos of their property but might not accurately tag all the elements in the video. Instead, you can rely on auto-tagging to find objects like "pool" and "palm tree," which certain house shoppers might be looking for. Those tags greatly improve the listing’s discoverability and searchability. &lt;/p&gt;

&lt;p&gt;Another example: Consider an animal shelter that posts videos of animals that are up for adoption. Instead of having to manually type in a comprehensive set of tags for each animal, the staff needs to enter only the basic information, based on which the auto-tagging capability can figure out the animal type (like cat, dog, hamster, or horse), color, and other attributes.&lt;/p&gt;

&lt;p&gt;Any web app into which users can upload their media can benefit from the Cloudinary API, saving you the time and effort of building the capabilities yourself: upload, transformation, storage, and so on. Another alternative is to adopt serverless approaches like AWS Lambda or Azure Functions, which is easier than manual tagging. However, processing large videos with those services is either impossible (Lambda has an execution-time limit) or expensive (you pay for the execution time—the long tasks incur significantly higher costs). Ultimately, Cloudinary is the best answer for processing and tagging videos.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#autotagging-in-action"&gt;
  &lt;/a&gt;
  Auto-Tagging in Action
&lt;/h2&gt;

&lt;p&gt;The demo below, which makes use of a &lt;a href="https://www.pexels.com/video/a-giraffe-walking-in-the-wilderness-5220298/"&gt;Pexels video&lt;/a&gt; of a giraffe in the wild, shows you how to use Cloudinary’s video-tagging feature with the JavaScript SDK. &lt;/p&gt;

&lt;p&gt;First, upload the video with the &lt;a href="https://cloudinary.com/documentation/image_upload_api_reference"&gt;upload method&lt;/a&gt; or the &lt;a href="https://cloudinary.com/documentation/upload_widget"&gt;Cloudinary upload widget&lt;/a&gt; on the Cloudinary portal. Here, you use the upload widget to access the advanced video uploader. Integrate the upload widget with your site by referencing the &lt;a href="https://widget.cloudinary.com/v2.0/global/all.js"&gt;JavaScript&lt;/a&gt;. Afterwards, you can use the various &lt;a href="https://cloudinary.com/documentation/upload_widget_reference#initialization_methods"&gt;widget initialization methods&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;The upload widget supports signed and unsigned uploads. For this demo, use unsigned uploads, which require the upload preset. See the &lt;a href="https://cloudinary.com/documentation/upload_presets"&gt;related documentation&lt;/a&gt; on how to create an unsigned preset in the Cloudinary management console.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YyVrh903--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/cloudinary-marketing/image/upload/f_auto%2Cq_auto/Web_Assets/blog/upload_preset_auto_tag.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YyVrh903--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/cloudinary-marketing/image/upload/f_auto%2Cq_auto/Web_Assets/blog/upload_preset_auto_tag.png" alt="Upload preset" width="704" height="450"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When configuring the upload preset, you can also enable video auto-tagging on upload, setting your preference for how “confident” you want the algorithm to be before applying a tag.To do so, click the &lt;strong&gt;Media analysis and AI&lt;/strong&gt; tab of your preset, choose a categorization engine (for example, Google Automatic Video Tagging), and set the auto-tagging threshold (0.5), which denotes 50% confidence, as shown below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--k5RHNFI6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/cloudinary-marketing/image/upload/f_auto%2Cq_auto/Web_Assets/blog/edit-auto-tagging_preset.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k5RHNFI6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/cloudinary-marketing/image/upload/f_auto%2Cq_auto/Web_Assets/blog/edit-auto-tagging_preset.png" alt="Edit Preset" width="512" height="329"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next, proceed to implementation. See the complete source code &lt;a href="https://github.com/dawidborycki/Cloudinary-VideoAutoTagging-JS"&gt;on GitHub&lt;/a&gt;. Follow these steps:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; Create a simple HTML page that references the Cloudinary widget scripts and that contains a button serving as the upload widget’s opener. For example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;Video auto-tagging&amp;lt;/title&amp;gt;

    …
    &amp;lt;script src="https://widget.cloudinary.com/v2.0/global/all.js" type="text/javascript"&amp;gt;&amp;lt;/script&amp;gt;        
&amp;lt;/head&amp;gt;

&amp;lt;body class="w3-black"&amp;gt;
    &amp;lt;div class="w3-container"&amp;gt;
       &amp;lt;h1&amp;gt;Video auto-tagging&amp;lt;/h1&amp;gt;
       &amp;lt;hr /&amp;gt;

       &amp;lt;button id="upload_widget_opener" class="w3-button w3-orange"&amp;gt;
           Upload video file...
       &amp;lt;/button&amp;gt;        

       &amp;lt;a id="info_link" href="" target="_blank"&amp;gt;Click to get info&amp;lt;/p&amp;gt;       
    &amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now add custom JavaScript to handle the logic. Here, you create the upload widget and then store the reference to it under the &lt;code&gt;uploadWidget&lt;/code&gt; variable:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var uploadWidget = cloudinary.createUploadWidget({
    cloudName: '&amp;lt;YOUR_CLOUD_NAME&amp;gt;',
    uploadPreset: 'autotagging-preset',
    sources: [
        'local'
    ],
    cropping: false,
    multiple: false,
    styles: {
    palette: {
        window: "#10173a",
            sourceBg: "#20304b",
            windowBorder: "#7171D0",
            tabIcon: "#79F7FF",
            inactiveTabIcon: "#8E9FBF",
            menuIcons: "#CCE8FF",
            link: "#72F1FF",
            action: "#5333FF",
            inProgress: "#00ffcc",
            complete: "#33ff00",
            error: "#cc3333",
            textDark: "#000000",
            textLight: "#ffffff"
        }
    }
}, (error, result) =&amp;gt; uploadCallback(error, result));
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt; Generate the above code on Cloudinary’s &lt;a href="https://demo.cloudinary.com/uw/#/"&gt;Upload Widget Demo page&lt;/a&gt; to visually configure the widget and get the corresponding configuration code. &lt;/p&gt;

&lt;p&gt;Show the widget by calling the &lt;code&gt;open&lt;/code&gt; method, like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$('#upload_widget_opener').click(() =&amp;gt; { 
    uploadWidget.open();        
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;3.&lt;/strong&gt; Click the &lt;strong&gt;Upload video file&lt;/strong&gt; button. The app then displays the upload widget:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--d7l4CzBe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/cloudinary-marketing/image/upload/f_auto%2Cq_auto/Web_Assets/blog/upload-widget.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--d7l4CzBe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/cloudinary-marketing/image/upload/f_auto%2Cq_auto/Web_Assets/blog/upload-widget.png" alt="upload widget" width="512" height="357"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4.&lt;/strong&gt; Implement the &lt;code&gt;uploadCallback&lt;/code&gt; function, which is invoked by the upload widget for specific events, for example, when the asset is uploaded.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function uploadCallback(error, result) {         
    if (!error &amp;amp;&amp;amp; result &amp;amp;&amp;amp; result.event === "success") {   

        // Cloudinary API info
        const apiKey = '&amp;lt;YOUR_API_KEY&amp;gt;';
        const apiSecret = '&amp;lt;YOUR_SECRET&amp;gt;';
        const baseUrl ='api.cloudinary.com/v1_1/&amp;lt;YOUR_CLOUD_NAME&amp;gt;/resources/video/upload/';

        const url = 'https://' + apiKey +':' + apiSecret 
            + '@' + baseUrl + result.info.public_id;

        $infoLink.attr("href", url);
        $infoLink.show();
    }    
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, the callback creates the URL to upload resources. The URL is supplemented by basic authorization (Cloudinary’s API and secret) and is displayed as an HTML tag next to the &lt;strong&gt;Upload video file&lt;/strong&gt; button (see the screenshot above). &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5.&lt;/strong&gt; Click the generated URL for details on the resource along with the video tags in JSON format, for example: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BT4fYKMa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/cloudinary-marketing/image/upload/f_auto%2Cq_auto/Web_Assets/blog/auto-tag_json.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BT4fYKMa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/cloudinary-marketing/image/upload/f_auto%2Cq_auto/Web_Assets/blog/auto-tag_json.png" alt="JSON" width="880" height="205"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As shown, Cloudinary successfully tagged the giraffe video with the appropriate keywords, from the type of animal to the type of environment, and to helpful words like the activity “safari” and the sentiment “adventure.” With those useful tags, giraffe fans, students who are studying grasslands, and adventure-seeking travelers can all readily find and enjoy the video.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Initially, the categorization section might be pending since the tagging might take some time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#next-steps"&gt;
  &lt;/a&gt;
  Next Steps
&lt;/h2&gt;

&lt;p&gt;Tools like Cloudinary save you innumerable hours of manual labor. Not only does auto-tagging enable you and your team to stay organized, it also helps your audience find videos through which they can become acquainted with your goods and services on a deeper level than with images and text alone.&lt;/p&gt;

&lt;p&gt;Now that you know how easy it is to use Cloudinary’s upload widget to automatically tag videos, why not incorporate this feature into your own app? Uploading your videos and encouraging your users to share theirs helps the audience find what they need: from adventure seekers in search of wildlife to homeowners looking for decorative trim and picture windows, and to pet lovers finding their lifelong companion.&lt;/p&gt;

&lt;p&gt;Do give auto-tagging a try and discover how Cloudinary can enhance your app’s videos. Start by &lt;a href="https://cloudinary.com/users/register/free"&gt;signing up for a free account&lt;/a&gt; along with free credits.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>video</category>
      <category>media</category>
      <category>programming</category>
    </item>
    <item>
      <title>Top 7 Featured DEV Posts from the Past Week</title>
      <author>Gracie Gregory (she/her)</author>
      <pubDate>Tue, 30 Nov 2021 21:17:44 +0000</pubDate>
      <link>https://dev.to/devteam/top-7-featured-dev-posts-from-the-past-week-5hj5</link>
      <guid>https://dev.to/devteam/top-7-featured-dev-posts-from-the-past-week-5hj5</guid>
      <description>&lt;p&gt;&lt;em&gt;Every Tuesday we round up the previous week's top posts based on traffic, engagement, and a hint of editorial curation. The typical week starts on Monday and ends on Sunday, but don't worry, we take into account posts that are published later in the week.&lt;/em&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#honesty-amp-exhaustion"&gt;
  &lt;/a&gt;
  Honesty &amp;amp; Exhaustion
&lt;/h2&gt;

&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/aliofonzy43"&gt;@aliofonzy43&lt;/a&gt;
, we wanted to give you a massive kudos for bravely sharing your story of exhaustion throughout the interviewing process. I invite everyone reading this roundup to take a look at Sam's post as I'm sure we can all relate to the feelings shared there. DEV is a place to be vulnerable and we're honored when you feel supported enough to do so. &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/aliofonzy43" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9woU2Rhq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--uTbX4QZZ--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/682557/ed8056a2-b5fa-4b60-a81a-e7b941ed3e87.jpg" alt="aliofonzy43"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/aliofonzy43/exhaustion-from-tech-hiring-process-2geb" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Exhaustion From Tech Hiring Process&lt;/h2&gt;
      &lt;h3&gt;Sam ・ Nov 24 ・ 7 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#mentalhealth&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#career&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#codenewbie&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#stepping-back-to-see-the-big-picture"&gt;
  &lt;/a&gt;
  Stepping back to see the big picture
&lt;/h2&gt;

&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/kvyshh"&gt;@kvyshh&lt;/a&gt;
 walks us through an exercise of career-related self-interviewing that's really valuable for everyone, regardless of their role or industry. Read on to do this meaningful work yourself! &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/kvyshh" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZV6JXzn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--Kn_PYaCb--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/745261/b5792ea5-7eac-4344-8bdb-01047c9fdf07.png" alt="kvyshh"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/kvyshh/roadmap-to-learning-what-kind-of-developerprogrammerengineer-you-are-2m2j" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;What kind of Developer do I want to be?&lt;/h2&gt;
      &lt;h3&gt;Kindred ・ Nov 24 ・ 11 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#career&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#all-about-amazon-linux"&gt;
  &lt;/a&gt;
  All about Amazon Linux!
&lt;/h2&gt;

&lt;p&gt;As &lt;a class="mentioned-user" href="https://dev.to/ssennettau"&gt;@ssennettau&lt;/a&gt;
 explains, "there's a lot of interesting nuances [with Amazon Linux 2022] compared to Amazon Linux 2." If you're looking for a clear comparison between the two as well as some (informed) personal opinions, you've come to the right post!&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/aws-builders" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__org__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5zuWf912--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--Z-NQNKRG--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/organization/profile_image/2794/88da75b6-aadd-4ea1-8083-ae2dfca8be94.png" alt="AWS Community Builders " width="150" height="150"&gt;
      &lt;div class="ltag__link__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9fSqHOMq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--bdXerw40--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/645925/6468bc44-8961-4198-a757-fdcd385adc32.jpeg" alt="" width="150" height="150"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/aws-builders/whats-different-about-amazon-linux-2022-ilb" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;What's different about Amazon Linux 2022?&lt;/h2&gt;
      &lt;h3&gt;Stephen Sennett for AWS Community Builders  ・ Nov 24 ・ 6 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#aws&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#linux&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#getting-sassy"&gt;
  &lt;/a&gt;
  Getting SaSSy
&lt;/h2&gt;

&lt;p&gt;Don't miss this super detailed look at Sass — "a preprocessor scripting language that is interpreted or compiled into Cascading Style Sheets (CSS)." Thanks, &lt;a class="mentioned-user" href="https://dev.to/daaahailey"&gt;@daaahailey&lt;/a&gt;
!&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/daaahailey" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wA0s5ptc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--5qBQd6oH--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/617504/235fe1d0-1f41-4415-9a31-d231e8d68b45.jpeg" alt="daaahailey"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/daaahailey/sassscss-for-beginners-2aci" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Sass(SCSS) for beginners&lt;/h2&gt;
      &lt;h3&gt;Dahye Ji ・ Nov 25 ・ 9 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#sass&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#scss&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#fighting-legacy"&gt;
  &lt;/a&gt;
  Fighting legacy
&lt;/h2&gt;

&lt;p&gt;The heading I added to this section sounds like the name of an epic novel about a battle to inherit a throne or something 😂 &lt;a class="mentioned-user" href="https://dev.to/matteokov"&gt;@matteokov&lt;/a&gt;
's post is NOT about that, but it &lt;em&gt;is&lt;/em&gt; about a situation wherein their team created a legacy application before the first release! Really interesting takeaways in here. &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/bornfightcompany" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__org__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5rw_0Fqf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--BddQSFwo--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/organization/profile_image/1897/01c118d8-0fe8-43ae-a918-b0a3c2a75f60.jpg" alt="Bornfight" width="150" height="150"&gt;
      &lt;div class="ltag__link__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZOBD3qSR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--RS-5Tdux--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/346707/220661b5-e203-474b-9fb8-19c2ca0b6117.jpeg" alt="" width="150" height="150"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/bornfightcompany/5-reasons-why-we-ended-up-rewriting-the-whole-application-before-its-release-1dch" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;5 reasons why we ended up rewriting the whole application before its release&lt;/h2&gt;
      &lt;h3&gt;Matteo Kovačić for Bornfight ・ Nov 22 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#engineeringmonday&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#architecture&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#no-more-term-daunt"&gt;
  &lt;/a&gt;
  No more "term daunt"!
&lt;/h2&gt;

&lt;p&gt;Unfortunately, tech is filled with daunting-sounding terms and as an industry, we don't do enough to abolish this kind of esotericism.  Folks like &lt;a class="mentioned-user" href="https://dev.to/amyoulton"&gt;@amyoulton&lt;/a&gt;
 are doing a really important thing when they seek to simply define basic tech terms instead of just using them liberally without explanation for early-career developers. Nice work!&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/amyoulton" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--URMcwv1z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--rz8uVdo6--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/618716/985cdde0-41c2-4924-9c59-23cd90ce5294.jpeg" alt="amyoulton"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/amyoulton/understanding-basic-coding-terminology-industry-basics-43p7" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Understanding Basic Coding Terminology: Industry Basics ✏️&lt;/h2&gt;
      &lt;h3&gt;Amy Oulton ・ Nov 24 ・ 5 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#devops&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#making-it-harder-to-do-the-wrong-thing"&gt;
  &lt;/a&gt;
  Making it harder to do the wrong thing
&lt;/h2&gt;

&lt;p&gt;... That's the philosophy &lt;a class="mentioned-user" href="https://dev.to/austingil"&gt;@austingil&lt;/a&gt;
 has about accessibility. It would be incredible if we could all be a11y experts, but that's just not possible. Instead, we need to make it easier for dev teams to do the right thing and vice versa. More fantastic accessibility insights in this post. &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/austingil" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Jiy-MsZv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--tIU8QoXU--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/183813/b2a62452-2570-4bfb-9bae-f047ec689bb8.png" alt="austingil"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/austingil/making-accessibility-more-accessible-1gej" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Making Accessibility More Accessible&lt;/h2&gt;
      &lt;h3&gt;Austin Gil ・ Nov 26 ・ 11 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#a11y&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#development&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#devops&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;&lt;em&gt;That's it for our weekly wrap up! Keep an eye on dev.to this week for daily content and discussions...and if you miss anything, we'll be sure to recap it next Tuesday!&lt;/em&gt;&lt;/p&gt;

</description>
      <category>icymi</category>
    </item>
    <item>
      <title>Cleaning up Async Functions in React's useEffect Hook (Unsubscribing)</title>
      <author>Elijah Trillionz</author>
      <pubDate>Tue, 30 Nov 2021 21:11:19 +0000</pubDate>
      <link>https://dev.to/elijahtrillionz/cleaning-up-async-functions-in-reacts-useeffect-hook-unsubscribing-3dkk</link>
      <guid>https://dev.to/elijahtrillionz/cleaning-up-async-functions-in-reacts-useeffect-hook-unsubscribing-3dkk</guid>
      <description>&lt;p&gt;Functional components in React are most beautiful because of &lt;strong&gt;React Hooks&lt;/strong&gt;. With Hooks, we can change state, perform actions when components are mounted and unmounted, and much more.&lt;/p&gt;

&lt;p&gt;While all these are beautiful, there is a little caveat (or maybe not) that is a little bit frustrating when working with useEffect hook.&lt;/p&gt;

&lt;p&gt;Before we look at this issue let's do a quick recap on the useEffect hook.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#effect-hook"&gt;
  &lt;/a&gt;
  Effect Hook
&lt;/h2&gt;

&lt;p&gt;The useEffect hook allows you to perform actions when components mount and unmount.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// actions performed when component mounts&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// actions to be performed when component unmounts&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The callback function of the &lt;code&gt;useEffect&lt;/code&gt; function is invoked depending on the second parameter of the &lt;code&gt;useEffect&lt;/code&gt; function.&lt;/p&gt;

&lt;p&gt;The second parameter is an array of dependencies. You list your dependencies there.&lt;/p&gt;

&lt;p&gt;So whenever there is an update on any of the dependencies, the callback function will be called.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;loading&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;setUsername&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Stranger&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;loading&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If the array of dependencies is empty like in our first example, React will only invoke the function once and that is when the component mounts.&lt;/p&gt;

&lt;p&gt;But you may wonder, "what about when it unmounts, doesn't React call the function too"?.&lt;/p&gt;

&lt;p&gt;Uhmmm no. The returned function is a closure and you do really not need to call the parent function (the callback function now) when you have access to the scope of the parent function right in the function you need (the returned function now).&lt;/p&gt;

&lt;p&gt;If this isn't clear to you, just take out 7 mins of your time to take a look at an article on &lt;a href="https://dev.to/elijahtrillionz/learn-javascript-closures-in-7-mins-324n"&gt;JavaScript closures&lt;/a&gt; I wrote.&lt;/p&gt;

&lt;p&gt;So now we have gone through the basics as a recap, let's take a look at the issue with async functions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#async-functions-in-react"&gt;
  &lt;/a&gt;
  Async functions in React
&lt;/h2&gt;

&lt;p&gt;There is no doubt that you may have once used an async function inside the useEffect hook. If you haven't you are eventually going to do so soon.&lt;/p&gt;

&lt;p&gt;But there is a warning from React that appears most times when we unmount and mount a component when we have an async function in the useEffect hook. This is the warning&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Vrk9SRLr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0w170s4uwa0itjb8yte5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Vrk9SRLr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0w170s4uwa0itjb8yte5.png" alt="Can't perform a React state update on an unmounted component. This is a no-op, but it indicates a memory leak in your application. To fix, cancel all subscriptions and asynchronous tasks in a useEffect cleanup function." width="632" height="184"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you can't see the image, here is the warning&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Can't perform a React state update on an unmounted component. 
This is a no-op, but it indicates a memory leak in your application. 
To fix, cancel all subscriptions and asynchronous tasks in a useEffect cleanup function.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The instruction is pretty clear and straightforward, "cancel all subscriptions and asynchronous tasks in a useEffect cleanup function". Alright, I hear you React! But how do I do this?&lt;/p&gt;

&lt;p&gt;It's simple. Very simple. The reason React threw that warning was because I used a setState inside the async function.&lt;/p&gt;

&lt;p&gt;That's not a crime. But React will try to update that state even when the component is unmounted, and that's kind of a crime (a leakage crime).&lt;/p&gt;

&lt;p&gt;This is the code that led to the warning above&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;setUsername&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;hello world&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="mi"&gt;4000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;How do we fix this? We simply tell React to try to update any state in our async function when we are mounted.&lt;/p&gt;

&lt;p&gt;So we thus have&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;mounted&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;mounted&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;setUsername&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;hello world&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="mi"&gt;4000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Ok, now we have progressed a little. Right now we are only telling React to perform an update if &lt;code&gt;mounted&lt;/code&gt; (you can call it subscribed or whatever) is true.&lt;/p&gt;

&lt;p&gt;But the &lt;code&gt;mounted&lt;/code&gt; variable will always be true, and thus doesn't prevent the warning or app leakage. So how and when do we make it false?&lt;/p&gt;

&lt;p&gt;When the component unmounts we can and should make it false. So we now have&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;mounted&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;mounted&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;setUsername&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;hello world&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="mi"&gt;4000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;mounted&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So when the component unmounts the &lt;code&gt;mounted&lt;/code&gt; variable changes to false and thus the &lt;code&gt;setUsername&lt;/code&gt; function will not be updated when the component is unmounted.&lt;/p&gt;

&lt;p&gt;We can tell when the component mounts and unmounts because of the first code we saw i.e&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// actions performed when component mounts&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// actions to be performed when component unmounts&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is how you unsubscribe from async functions, you can do this in different ways like&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;t&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;setUsername&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;hello world&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="mi"&gt;4000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;clearTimeout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here is an example with an async function with the &lt;code&gt;fetch&lt;/code&gt; API.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;mounted&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;example.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;mounted&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// only try to update if we are subscribed (or mounted)&lt;/span&gt;
      &lt;span class="nx"&gt;setUsername&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;})();&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;mounted&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// cleanup function&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;When I was still new in React, I used to struggle with this warning a lot. But this turned things around.&lt;/p&gt;

&lt;p&gt;If you are wondering, "why does it only happen with async functions or tasks"? Well, that's because of the JavaScript event loop. If you don't know what that means, then check out this &lt;a href="https://youtu.be/8aGhZQkoFbQ"&gt;YouTube Video by Philip Roberts&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Thanks for reading. I hope to see you next time. Please kindly like and follow me on Twitter &lt;a href="https://twitter.com/elijahtrillionz"&gt;@elijahtrillionz&lt;/a&gt; to stay connected.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Aprenda a usar o Github para aumentar suas oportunidades profissionais</title>
      <author>Arthur Nascimento Assunção</author>
      <pubDate>Tue, 30 Nov 2021 21:09:32 +0000</pubDate>
      <link>https://dev.to/arthurassuncao/aprenda-a-usar-o-github-para-aumentar-suas-oportunidades-profissionais-440j</link>
      <guid>https://dev.to/arthurassuncao/aprenda-a-usar-o-github-para-aumentar-suas-oportunidades-profissionais-440j</guid>
      <description>&lt;p&gt;Se torne um profissional bem visto e almejado aplicando essas dicas sobre Github.&lt;/p&gt;

&lt;p&gt;George, Agatha, Jennifer e James estudam computação. George faz todos os seus trabalhos bem feitos. Agatha realiza muito bem seus trabalhos e os hospeda no site de repositórios Github. Enquanto isso, Jennifer faz bons trabalhos, hospeda seus códigos no Github e, ainda, escreve boas descrições (README) em seus projetos, para mostrar que o projeto é interessante e bem feito. Por fim, James realiza bons trabalhos, hospeda no Github, monta bons READMEs e ainda utiliza boas práticas em seus códigos, geralmente indo além do que foi pedido e publica no LinkedIn para divulgar seus projetos.&lt;/p&gt;

&lt;p&gt;A partir dessa história, qual dos quatro alunos parece ter maiores chances de conseguir estágios e empregos ao longo da vida? George que cria bons trabalhos, mas apenas o professor fica sabendo? Agatha que hospeda seus códigos no Github, mas não descreve seus trabalhos? Jennifer que escreve bons READMEs, mas não vai além do que foi pedido nem pensa em utilizar boas práticas ou o James que utiliza boas práticas em seus trabalhos, além de divulgá-los muito bem no Github e LinkedIn?&lt;/p&gt;

&lt;p&gt;Obviamente, o mercado de trabalho não é exato e depende de cada processo seletivo, contudo as chances de George, mesmo sendo um ótimo aluno são menores que as chances dos outros alunos e é bem provável que as chances de James sejam as maiores.&lt;/p&gt;

&lt;p&gt;Empresas de tecnologia vão olhar sites como LinkedIn, Github e outros sites para portfólio, como Pinterest, Dribble. Afinal, como a empresa saberá que você é um bom profissional? Um bom programador? Um bom designer? Vendo projetos que você já fez, mesmo em sua época de curso (técnico ou graduação).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-o-que-%C3%A9-git-e-github"&gt;
  &lt;/a&gt;
  1. O que é Git e Github
&lt;/h2&gt;

&lt;p&gt;Antes de sabermos o que é Github, precisamos saber o que é &lt;strong&gt;Git&lt;/strong&gt;. Mostrarei dois memes para você começar a entender.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KmQ23z8b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c4lkgz80az8tl3xprwf4.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KmQ23z8b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c4lkgz80az8tl3xprwf4.jpg" alt="Meme sobre Git e como voltar a um código anterior" width="799" height="671"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lngEWOI6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/puo49gwn7ez6u4ekg1a0.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lngEWOI6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/puo49gwn7ez6u4ekg1a0.jpg" alt="Meme sobre um motivo de usar Git" width="500" height="701"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Agora contarei uma história para isso.&lt;/p&gt;

&lt;p&gt;Você está desenvolvendo um código e precisa enviar o código ao seu colega, como você faz? Envia o código pelo email? E se atualizar o código? Envia novamente e novamente?&lt;br&gt;
E se você alterar o código e alguma coisa parar de funcionar (um novo bug)? Como você volta a versão que funcionava? Agora imagine esses problemas em uma equipe, você trabalha com mais três pessoas, como a alteração de um será enviada aos outros? &lt;br&gt;
Para resolver esses e outros problemas, foram criados os &lt;strong&gt;Sistemas de Controle de Versão&lt;/strong&gt;. Um dos primeiros era o SVN, porém era muito ruim, era centralizado, então novos sistemas foram criados, como o Mercurial e o Git, esse último criado pelo Linus Torvalds, criador do Linux. Os atuais são *&lt;em&gt;Sistemas de Controle de Versões Distribuído&lt;/em&gt;, pois permitem códigos distribuidos por diversos repositórios. Atualmente o Git é o mais famoso.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Sistema de controle de versão gerência diversos aspectos referentes aos códigos, não apenas alterações.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;
  &lt;a href="#2-e-o-github-o-que-%C3%A9"&gt;
  &lt;/a&gt;
  2. E o Github, o que é?
&lt;/h2&gt;

&lt;p&gt;Esses sistemas servem para controlar as versões de códigos, mas onde ficam os códigos? Os códigos são armazenados em repositórios de códigos. Esses repositórios podem estar na sua máquina ou em uma máquina remota, na internet, aí entra o Github. Ele é um site de repositórios de códigos, cada repositório é para um projeto ou parte de um. &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#3-como-o-git-e-github-funcionam"&gt;
  &lt;/a&gt;
  3. Como o Git e Github funcionam
&lt;/h2&gt;

&lt;p&gt;Básicamente ao usar o Git você segue os seguintes passos, a Figura abaixo apresenta de forma visual:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Inicia um repositório local (na sua máquina) para armazenar o código e gerenciar os códigos;&lt;/li&gt;
&lt;li&gt;Indica qual será o repositório remoto, opcional, mas muito usado;&lt;/li&gt;
&lt;li&gt;Realiza alterações no código;&lt;/li&gt;
&lt;li&gt;Registra as alterações no código;&lt;/li&gt;
&lt;li&gt;Gera e registra uma mensagem (&lt;em&gt;commit&lt;/em&gt;) com essas alterações realizadas no repositório local;&lt;/li&gt;
&lt;li&gt;Envia esse &lt;em&gt;commit&lt;/em&gt; para os demais repositórios, como o repositório remoto (opcional);&lt;/li&gt;
&lt;li&gt;Repete os passos do 3 ao 5 ou 6 até que o &lt;em&gt;software&lt;/em&gt; morra (pare de ser atualizado).&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Z_TmZ0ta--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cmo30gmx6yf3qoxcysel.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z_TmZ0ta--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cmo30gmx6yf3qoxcysel.png" alt="Git - Fluxo simplificado" width="661" height="829"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;O repositório remoto geralmente é criado no Github, podendo ser criado no bitbucket, gitlab ou outro servidor Git. No Github você tem uma interface para visualizar o repositório, inclusive a descrição do repositório, como o README.md, um arquivo contendo informações sobre o repositório.&lt;br&gt;
Agora que você sabe um pouco do funcionamento, vamos detalhar tudo isso abaixo.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#4-instalando-o-git-em-seu-computador"&gt;
  &lt;/a&gt;
  4. Instalando o Git em seu computador
&lt;/h2&gt;

&lt;p&gt;O Git é um programa que costuma ser usado via terminal (linha de comando), o famoso prompt de comando do Windows, porém também existem interfaces gráficas para ele, contudo já aviso que 99% dos desenvolvedores usam o Git por linha de comando, inclusive a maior parte dos desenvolvedores usam distribuições Linux (Sistema Operacional que usa o Kernel Linux), pois é muito mais fácil configurar o ambiente de trabalho nesse sistema. O MacOS é outro sistema fantástico para desenvolvedores, pois une o melhor do Linux com a facilidade gráfica do Windows.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#41-git-no-windows"&gt;
  &lt;/a&gt;
  4.1. Git no Windows
&lt;/h3&gt;

&lt;p&gt;Assim, para instalar o Git no Windows temos algumas opções, normalmente é simples baixar e instalar:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://gitforwindows.org/"&gt;Git for Windows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git-scm.com/book/en/v2/Getting-Started-Installing-Git"&gt;Git SCM&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Caso queira também interface gráfica, temos algumas opções, dentre elas as mais famosas são:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://desktop.github.com/"&gt;GitHub Desktop&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.gitkraken.com/"&gt;GitKraken&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#42-git-no-linux"&gt;
  &lt;/a&gt;
  4.2. Git no Linux
&lt;/h3&gt;

&lt;p&gt;Instalação do Git no Linux geralmente é muito simples, inclusive algumas distribuições já contam com o Git instalado, mas caso não seja o seu caso basta ir no terminal e realizar a instalação do pacote git, algo como:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;apt &lt;span class="nb"&gt;install &lt;/span&gt;git &lt;span class="c"&gt;# distribuições baseadas em Debian&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;pacman &lt;span class="nt"&gt;-S&lt;/span&gt; git &lt;span class="c"&gt;# distribuições baseadas em Arch Linux&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#5-criando-uma-conta-no-github"&gt;
  &lt;/a&gt;
  5. Criando uma conta no Github
&lt;/h2&gt;

&lt;p&gt;Criar uma conta no Github é bastante fácil, acesse o site &lt;a href="https://github.com/"&gt;github.com&lt;/a&gt; e verá uma página como esta abaixo.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--k5_trGAy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/390b5b4u3o38lw2mkyo8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k5_trGAy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/390b5b4u3o38lw2mkyo8.png" alt="Github - Página inicial" width="880" height="429"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Vá em &lt;code&gt;Sign up&lt;/code&gt; (criar conta) e preencha seus dados, normalmente basta um e-mail, senha e nome de usuário, o nome de usuário é importante, crie um nome que reflita seu nome, o meu é ArthurAssuncao, então para acessar o meu perfil no Github basta acessar o &lt;a href="https://github.com/ArthurAssuncao"&gt;Github.com/ArthurAssuncao&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QEcrbRI6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wmsgmaglryegzjjdqllk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QEcrbRI6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wmsgmaglryegzjjdqllk.png" alt="Github - Página de cadastro de usuário" width="880" height="363"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Sign up&lt;/em&gt; e &lt;em&gt;Sign in&lt;/em&gt; são termos muito parecidos que tem significados diferentes, mas podem causar engano, principalmente em pessoas que não são de TI, cuidado ao usar esses termos em seu site, eu prefiro Register/Cadastro/Cadastre-se e Log in/Login/Logar/Entrar e variações desses termos. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#6-criando-um-reposit%C3%B3rio-no-github"&gt;
  &lt;/a&gt;
  6. Criando um repositório no Github
&lt;/h2&gt;

&lt;p&gt;Abra a página do &lt;a href="https://github.com/"&gt;Github&lt;/a&gt; e faça seu login (&lt;code&gt;Sign in&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6x1RomQy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dmwlabucdf68k90q6f97.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6x1RomQy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dmwlabucdf68k90q6f97.png" alt="Github - Página de login" width="330" height="452"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Agora você está na página do seu perfil, clique no sinal de soma (+) no canto superior direito e clique em &lt;code&gt;New repository&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qZ3qldA_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d7vi46o6ipfoe08l88j0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qZ3qldA_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d7vi46o6ipfoe08l88j0.png" alt="Github - Criação de repositório" width="880" height="232"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Agora você deve informar algumas informações sobre o novo repositório para que ele seja criado, são elas:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;&lt;em&gt;Repository name&lt;/em&gt;&lt;/strong&gt;: Indique o nome do seu repositório, o nome gerado não terá espaços nem acentos, portanto aconselho usar apenas letras, números e traço. Coloque o nome do projeto que você irá criar.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;em&gt;Description&lt;/em&gt;&lt;/strong&gt;: Descreva em poucas palavras sobre o que é este projeto/repositório.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;em&gt;Public&lt;/em&gt;&lt;/strong&gt; ou &lt;strong&gt;&lt;em&gt;Private&lt;/em&gt;&lt;/strong&gt;: Diz respeito a visibilidade do repositório. Um repositório público pode ser acessado por qualquer pessoa na internet, isso inclui todo o código, mídias (fotos, vídeos, PDFs etc) e todo histórico do repositório. Enquanto privado apenas você tem acesso. Prefira projetos públicos, exceto se realmente precisar de privacidade quanto aos dados do projeto. De toda forma, depois você pode alterar o projeto para público.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;em&gt;Initialize this repository with&lt;/em&gt;&lt;/strong&gt;: Aqui temos algumas opções para indicar no seu projeto, temos:

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;&lt;em&gt;Add a README file&lt;/em&gt;&lt;/strong&gt;: &lt;code&gt;README&lt;/code&gt; é um arquivo escrito em linguagem &lt;code&gt;Markdown&lt;/code&gt; (é bem simples, mais para frente explico um pouco) e neste arquivo ficam informações sobre o projeto. Este é um arquivo muito importante para divulgar o seu repositório/projeto. Marque se quiser que o repositório já inicie com um &lt;code&gt;README&lt;/code&gt;, mas depois você pode criá-lo.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;em&gt;Add .gitignore&lt;/em&gt;&lt;/strong&gt;: .Gitignore é um arquivo que indica arquivos e pastas/diretórios que não serão armazenados nos repositórios do projeto, sabe aquele arquivo com dados sensíveis do servidor? Você indica esse arquivo no &lt;code&gt;.gitignore&lt;/code&gt; para que ele seja ignorado, portanto salve o arquivo sensível em outro lugar, como o seu e-mail. Você também pode criar este arquivo depois, mas sugiro fortemente que já inicie o projeto com este arquivo.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;em&gt;Choose a license&lt;/em&gt;&lt;/strong&gt;: Escolher uma licença de software para o seu projeto, geralmente são licenças de software livre, desde as mais permissívas, como a &lt;code&gt;Do What The F*ck You Want To Public License&lt;/code&gt; até licenças que forçam qualquer código copiado a ser também &lt;em&gt;open-source&lt;/em&gt;, como a &lt;em&gt;GNU General Public License v3.0&lt;/em&gt;. Se o projeto for privado, use a licença &lt;code&gt;UNLICENSED&lt;/code&gt;. Eu costumo usar a licença &lt;code&gt;MIT&lt;/code&gt;. Leia mais sobre licenças em &lt;a href="https://gist.github.com/nicolasdao/a7adda51f2f185e8d2700e1573d8a633"&gt;Open-Source Licenses by Nicolas Dao&lt;/a&gt; ou veja mais sobre quase todas existentes em &lt;a href="https://spdx.org/licenses/"&gt;SPDX Licenses&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Zs6KBflc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p7l7x7oewlid546yc92o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Zs6KBflc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p7l7x7oewlid546yc92o.png" alt="Github - Criação de repositório" width="733" height="723"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Você irá ser apresentado a página do novo repositório, como esta abaixo que criei para o repositório de nome &lt;code&gt;teste-palestra&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jDoNCi2P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b165zstnfdtef10paxv8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jDoNCi2P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b165zstnfdtef10paxv8.png" alt="Github - Página do repositório recentemente criado" width="880" height="522"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Nesta página você percebe diversas coisas, há como criar um novo arquivo ou fazer upload de um arquivo, mas não use essas opções, vamos fazer por linha de comando.&lt;br&gt;
E três tutoriais com comandos para enviar códigos ao repositório, o primeiro &lt;code&gt;…or create a new repository on the command line&lt;/code&gt; tem o foco em um projeto que será desenvolvido, o segundo &lt;code&gt;…or push an existing repository from the command line&lt;/code&gt; para projetos que já existem no seu computador e o terceiro &lt;code&gt;…or import code from another repository&lt;/code&gt; para importar projetos de outros Sistema de Controle de Versão.&lt;br&gt;
Não faça nada por enquanto, vamos fazer isso na próxima seção.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#7-fazendo-seu-primeiro-commit-reposit%C3%B3rio"&gt;
  &lt;/a&gt;
  7. Fazendo seu primeiro commit repositório
&lt;/h2&gt;

&lt;p&gt;Nosso repositório está vazio. Vamos fazer tudo do nosso computador.&lt;br&gt;
Abra o prompt de comando ou shell ou bash ou terminal ou power shell ou outro programa semelhante, como esse abaixo:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zePbyxxd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9jilb3ehr1lnvri1mzpq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zePbyxxd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9jilb3ehr1lnvri1mzpq.png" alt="Terminal do Linux com Oh My Zsh e tema agnoster" width="657" height="365"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Digite &lt;code&gt;mkdir teste-palestra&lt;/code&gt; e aperte &lt;code&gt;enter&lt;/code&gt;, isso criará o diretório &lt;code&gt;teste-palestra&lt;/code&gt;.&lt;br&gt;
Agora digite &lt;code&gt;cd teste-palestra/&lt;/code&gt;, com este comando vamos entrar na pasta &lt;code&gt;teste-palestra&lt;/code&gt; pelo nosso terminal.&lt;br&gt;
Então abra um editor de código ou texto de sua preferência, como o Notepad/Bloco de notas ou o VSCode. Digite dentro do arquivo o texto abaixo:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;## Teste Palestra

Projeto para a palestra sobre Github
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Por fim, salve o arquivo com o nome &lt;code&gt;README.md&lt;/code&gt; e o salve dentro da pasta &lt;code&gt;teste-palestra&lt;/code&gt;.&lt;br&gt;
Você acabou de criar um arquivo em &lt;code&gt;Markdown&lt;/code&gt;, ainda nesse texto vou explicar melhor essa linguagem.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--t24TJgvd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8qpwuaghivqcai5fct2h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t24TJgvd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8qpwuaghivqcai5fct2h.png" alt="Terminal - Comandos mkdir e cd" width="657" height="365"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#71-configurando-o-git-na-sua-m%C3%A1quina"&gt;
  &lt;/a&gt;
  7.1. Configurando o Git na sua máquina
&lt;/h3&gt;

&lt;p&gt;Antes de tudo vamos configurar o Git, esses passos serão feitos apenas uma vez, pois ficam configurados na sua máquina, assim só os repita caso mude de computador ou se reinstalar o Git. Execute os comandos em seu terminal, como a figura abaixo. Além disso, substitua os meus dados pelos seus dados. &lt;br&gt;
O primeiro irá definir o usuário padrão da máquina como o usuário indicado e o segundo informa o e-mail do usuário padrão.&lt;br&gt;
Enquanto o terceiro comando informa que as credenciais, senha e usuário, podem ser armazenados no computador. Só use essa opção se estiver usando o seu computador, mas fique tranquilo que ele não irá armazenar sua senha no computador, apenas na memória RAM, de forma segura. Por fim, o quarto comando informa o tempo de armazenamento dessas credenciais, por padrão o tempo é 900 segundos, ou seja, 15 minutos, porém recomendo aumentar para 3600, assim ele armazenará seu usuário e senha (token) por uma hora, isso significa que você não irá precisar digitar novamente essas informações caso faça um novo &lt;code&gt;pull&lt;/code&gt; ou &lt;code&gt;push&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git config --global user.name "ArthurAssuncao"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git config --global user.email "meuemail@arthurassuncao.com"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git config --global credential.helper store
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git config credential.helper 'cache --timeout=3600'
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--expXESNe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j96br4obynwjgz5yqk8p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--expXESNe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j96br4obynwjgz5yqk8p.png" alt="Git - Comandos de configuração de usuário" width="657" height="365"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#72-usando-os-comandos-git"&gt;
  &lt;/a&gt;
  7.2. Usando os comandos Git
&lt;/h3&gt;

&lt;p&gt;O primeiro comando não-configurável que você precisa conhecer é o comando &lt;code&gt;git init&lt;/code&gt;, este comando inicia um repositório local Git na pasta/diretório onde for executado. Saiba que poderíamos ter usado esse comando antes de criar o arquivo &lt;code&gt;README.md&lt;/code&gt;, mas não muda nada. Apenas saiba que esse comando só é usado uma vez, pois ele inicia o repositório local na sua máquina, você só executaria novamente se replicasse o repositório em outro diretório ou outro computador.&lt;br&gt;
Então execute:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git init
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Você irá receber a mensagem semelhante a esta abaixo dizendo que o repositório foi inicializado.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Initialized empty Git repository in /home/arthur/teste-palestra/.git/
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Agora vamos ver quais foram as nossas modificações no repositório usando o comando &lt;code&gt;git status&lt;/code&gt;, como acabamos de criar um repositório vazio, o nosso arquivo &lt;code&gt;README.md&lt;/code&gt; será considerado um arquivo novo, ou seja, uma alteração no repositório. Digite o comando e tecle enter.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git status
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A saída mostrada no terminal será esta abaixo, perceba que ele deixa claro que o arquivo &lt;code&gt;README.md&lt;/code&gt; é um arquivo novo (untracked) e recomenda que usemos &lt;code&gt;git add &amp;lt;file&amp;gt;&lt;/code&gt; para incluir ele em um &lt;code&gt;commit&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;On branch main

No commits yet

Untracked files:
  (use "git add &amp;lt;file&amp;gt;..." to include in what will be committed)
    README.md

nothing added to commit but untracked files present (use "git add" to track)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Então vamos adicionar o arquivo &lt;code&gt;README.md&lt;/code&gt; para nosso futuro &lt;code&gt;commit&lt;/code&gt;, mas, antes, o que é um &lt;code&gt;commit&lt;/code&gt;?&lt;/p&gt;

&lt;p&gt;Um &lt;code&gt;commit&lt;/code&gt; é um pacote com uma mensagem e outras informações que indica as alterações realizadas. Antes do &lt;code&gt;commit&lt;/code&gt; nós temos o &lt;code&gt;stage&lt;/code&gt; que é um &lt;code&gt;"commit" temporário&lt;/code&gt;.&lt;br&gt;
Agora que você já sabe, vamos adicionar o arquivo ao &lt;code&gt;Stage&lt;/code&gt; que será nosso futuro &lt;code&gt;commit&lt;/code&gt;. Para isso use o comando &lt;code&gt;git add README.md&lt;/code&gt;, você também pode usar a opção &lt;code&gt;git add .&lt;/code&gt;, nesse caso adicionaria todos arquivos novos e alterados e não apenas o arquivo indicado.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git add README.md
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#73-realizando-o-commit"&gt;
  &lt;/a&gt;
  7.3. Realizando o &lt;em&gt;commit&lt;/em&gt;
&lt;/h3&gt;

&lt;p&gt;Com arquivos adicionados em nosso &lt;code&gt;staging&lt;/code&gt;, vamos criar um &lt;code&gt;commit&lt;/code&gt;, para isso use o comando abaixo, perceba que passamos uma mensagem para ele, pois é uma forma visual de sabermos quais alterações foram realizadas.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git commit -m "first commit"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A saída será algo como esta abaixo, indicando que um novo arquivo README.md foi criado com um arquivo alterado e três linhas inseridas.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[main (root-commit) 4e3ec95] first commit
 1 file changed, 3 insertions(+)
 create mode 100644 README.md
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As mensagem de &lt;code&gt;commit&lt;/code&gt; podem seguir padrões, um muito recomendado é o &lt;a href="https://www.conventionalcommits.org/en/v1.0.0/"&gt;Conventional Commits&lt;/a&gt;, usá-lo pode te ajudar a mostrar que é um bom desenvolvedor.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#74-boas-pr%C3%A1ticas-ao-criar-commits"&gt;
  &lt;/a&gt;
  7.4. Boas práticas ao criar &lt;em&gt;commits&lt;/em&gt;
&lt;/h3&gt;

&lt;p&gt;Além do uso do &lt;strong&gt;Conventional Commits&lt;/strong&gt; recomendo que crie pequenos &lt;code&gt;commits&lt;/code&gt;, o que seria isso? A cada alteração em seu código, como uma nova funcionalidade ou nova configuração, faça um &lt;code&gt;commit&lt;/code&gt;, não espere terminar todo o projeto para fazer um commit com milhares de alterações, pois isso é mal visto uma vez que não é assim que se faz no mercado de trabalho.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#75-criando-uma-liga%C3%A7%C3%A3o-entre-o-github-e-seu-computador"&gt;
  &lt;/a&gt;
  7.5. Criando uma ligação entre o Github e seu computador
&lt;/h3&gt;

&lt;p&gt;Para criarmos uma ligação entre o repositório remoto no Github e o repositório local em seu computador, vamos configurar um &lt;code&gt;remote&lt;/code&gt;, execute a linha abaixo, perceba o nome do projeto e o nome do usuário, portanto não copie, adapte ao seu contexto ou simplesmente copie a linha parecida com essa do tópico &lt;strong&gt;7. Criando um repositório no Github&lt;/strong&gt;.&lt;br&gt;
Neste comando vamos adicionar o nome &lt;code&gt;origin&lt;/code&gt; como uma referência ao repositório remoto, é tipo um &lt;em&gt;link&lt;/em&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git remote add origin https://github.com/ArthurAssuncao/teste-palestra.git
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#76-enviando-o-commit-ao-reposit%C3%B3rio-remoto-no-github"&gt;
  &lt;/a&gt;
  7.6. Enviando o &lt;em&gt;commit&lt;/em&gt; ao repositório remoto no Github
&lt;/h3&gt;

&lt;p&gt;Para enviarmos o nosso &lt;code&gt;commit&lt;/code&gt; com nosso código e demais informações ao Github devemos usar o comando &lt;code&gt;git push&lt;/code&gt;, no primeiro uso faça como na linha abaixo, indicando o &lt;code&gt;-u&lt;/code&gt;, nas próximas vezes não precisará desse &lt;code&gt;-u&lt;/code&gt;.&lt;br&gt;
No comando, o &lt;code&gt;origin&lt;/code&gt; indica o repositório remoto, aquele que configuramos acima e o &lt;code&gt;main&lt;/code&gt; indica a &lt;code&gt;branch&lt;/code&gt; que receberá o código. Não se preocupe com o conceito de &lt;code&gt;branch&lt;/code&gt; agora, mas sugiro fortemente que aprenda sobre organização de um repositório com uso de &lt;code&gt;branchs&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git push -u origin main
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Será pedido que digite o seu usuário, em seguida pedirá para digitar a sua senha.&lt;/p&gt;

&lt;p&gt;A saída será um erro, como este abaixo:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Username for 'https://github.com': ArthurAssuncao
Password for 'https://ArthurAssuncao@github.com': 
remote: Support for password authentication was removed on August 13, 2021. Please use a personal access token instead.
remote: Please see https://github.blog/2020-12-15-token-authentication-requirements-for-git-operations/ for more information.
fatal: Authentication failed for 'https://github.com/ArthurAssuncao/teste-palestra.git/'
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Isso acontece, pois em agosto de 2021 o suporte a senha foi descontinuado por questões de segurança, agora precisamos configurar um &lt;em&gt;Access Token&lt;/em&gt;, vamos então fazer isso para enviarmos o &lt;code&gt;commit&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#77-criando-um-access-token"&gt;
  &lt;/a&gt;
  7.7. Criando um &lt;em&gt;Access Token&lt;/em&gt;
&lt;/h3&gt;

&lt;p&gt;Volte ao site &lt;a href="https://github.com/"&gt;Github.com&lt;/a&gt; e vá em &lt;code&gt;Settings&lt;/code&gt; acessando o menu no canto superior direito ou acesse direto a página de configurações em &lt;a href="https://github.com/settings/profile"&gt;https://github.com/settings/profile&lt;/a&gt;. Acesse &lt;code&gt;Developer settings&lt;/code&gt;, abrirá uma página como essa abaixo:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1d0i2Nsi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4zwb4gx94kjk6k7r31vd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1d0i2Nsi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4zwb4gx94kjk6k7r31vd.png" alt="Github - Configuração de Token" width="880" height="267"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Agora clique em &lt;code&gt;Personal access tokens&lt;/code&gt; e em &lt;code&gt;Generate new token&lt;/code&gt;, abrirá uma nova tela, como essa abaixo:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--P5-wI8my--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j49dojwcvbk21fx04wsk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P5-wI8my--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j49dojwcvbk21fx04wsk.png" alt="Github - Página New personal access token" width="880" height="605"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;No campo &lt;code&gt;Note&lt;/code&gt; escreva o nome dele, como meu-computador. Em &lt;code&gt;Expiration&lt;/code&gt; coloque o tempo que queira que esse token expire, pode ser &lt;code&gt;No expiration&lt;/code&gt;, então ele nunca irá ser removido.&lt;br&gt;
Agora marque todas opções em &lt;code&gt;Select scopes&lt;/code&gt;.&lt;br&gt;
Pronto agora você terá um token que é um texto com vários caracteres sem qualquer sentido. Token é como uma senha, não compartilhe com ninguém.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#78-enviando-o-commit-com-access-token"&gt;
  &lt;/a&gt;
  7.8. Enviando o &lt;em&gt;commit&lt;/em&gt; com Access Token
&lt;/h3&gt;

&lt;p&gt;Agora vamos repetir os passos do item 8.6. Enviando o &lt;em&gt;commit&lt;/em&gt; ao repositório remoto no Github. Execute o comando abaixo:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git push -u origin main
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Será pedido que digite o seu usuário, em seguida pedirá a senha, mas digite o token (pode copiar e colar no terminal) no lugar da senha. Pronto, o código será enviado e a saída será como esta da figura abaixo.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NYFifKth--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4t19c0v76ao4mex3q1lx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NYFifKth--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4t19c0v76ao4mex3q1lx.png" alt="Github - Envio de commit com access token" width="657" height="365"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#79-nosso-reposit%C3%B3rio-no-github"&gt;
  &lt;/a&gt;
  7.9. Nosso repositório no Github
&lt;/h3&gt;

&lt;p&gt;Vamos ao nosso projeto no github, aquele que você criou, atualize a página e ele estará como na figura abaixo.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SgNJ3rOQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8whoc8s2z0t1quzw6qsz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SgNJ3rOQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8whoc8s2z0t1quzw6qsz.png" alt="Github - Projeto com um commit" width="880" height="336"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-comandos-mais-comuns-do-git"&gt;
  &lt;/a&gt;
  8. Comandos mais comuns do Git
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;git add &lt;/strong&gt;: adiciona um arquivo ao staging.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;git commit -m "mensagem"&lt;/strong&gt;: cria um &lt;code&gt;commit&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;git push origin main&lt;/strong&gt;: envia os &lt;code&gt;commits&lt;/code&gt; criados para o &lt;code&gt;origin&lt;/code&gt; na branch &lt;code&gt;main&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;git pull origin main&lt;/strong&gt;: faz o download das alterações com base no repositório &lt;code&gt;origin&lt;/code&gt; e sua &lt;em&gt;branch&lt;/em&gt; &lt;code&gt;main&lt;/code&gt;. Ótimo para quando se quer baixar as atualizações que estão no repositório remoto, mas que ainda não estão na sua máquina.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;git status&lt;/strong&gt;: verifica os arquivos novos e alterados do repositório local.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;git diff&lt;/strong&gt;: verifica as alterações realizadas, aqui são mostradas as alterações dentro dos arquivos.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;git log&lt;/strong&gt;: mostra o &lt;code&gt;log&lt;/code&gt; de commits já realizados.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#9-deixe-seu-reposit%C3%B3rio-mais-atraente"&gt;
  &lt;/a&gt;
  9. Deixe seu repositório mais atraente
&lt;/h2&gt;

&lt;p&gt;Sempre que criar um projeto hospede no Github, faça muitos commits, quantos forem necessários, nada de apenas um commit.&lt;/p&gt;

&lt;p&gt;Além disso, inclua no README de seus projetos:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Logo do projeto (crie logos mesmo que simples);&lt;/li&gt;
&lt;li&gt;Nome do projeto (sempre dê um nome);&lt;/li&gt;
&lt;li&gt;Indique tecnologias usadas com &lt;code&gt;badges&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;Coloque um link para acesso ao projeto online, caso possível;&lt;/li&gt;
&lt;li&gt;Insira &lt;em&gt;screenshots&lt;/em&gt; do projeto, animações em GIF podem ser muito interessantes;&lt;/li&gt;
&lt;li&gt;Coloque um índice, caso o texto fique extenso;&lt;/li&gt;
&lt;li&gt;Tópicos

&lt;ul&gt;
&lt;li&gt;O que o projeto faz?&lt;/li&gt;
&lt;li&gt;Se for um projeto de um curso, o que você fez para torná-lo melhor, mais único?&lt;/li&gt;
&lt;li&gt;Quais tecnologias usou? Onde e por quê cada tecnologia foi utilizada?&lt;/li&gt;
&lt;li&gt;Mais &lt;em&gt;layouts&lt;/em&gt;, se for necessário.&lt;/li&gt;
&lt;li&gt;Aprendizado com o projeto (caso você não tenha muita experiência)&lt;/li&gt;
&lt;li&gt;Como executar o projeto?&lt;/li&gt;
&lt;li&gt;Licença do projeto.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Veja alguns exemplos:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ArthurAssuncao/pomoTraining"&gt;Projeto PomoTraining&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ArthurAssuncao/TrainRailHackathonBrasil.com.br"&gt;Projeto Landing Page do Trainrail Hackathon Brasil&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#10-deixe-seu-perfil-no-github-mais-chamativo"&gt;
  &lt;/a&gt;
  10. Deixe seu perfil no Github mais chamativo
&lt;/h2&gt;

&lt;p&gt;Para deixar o seu perfil mais interessante crie um &lt;code&gt;README&lt;/code&gt; para ele, estilo o Sobre do LinkedIn, além disso indique seus melhores projetos para facilitar o trabalho de Recrutadores Técnicos.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#101-criar-readme-para-seu-perfil"&gt;
  &lt;/a&gt;
  10.1. Criar README para seu perfil
&lt;/h3&gt;

&lt;p&gt;Para isso:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Crie um repositório com o mesmo nome do seu usuário. Meu usuário é ArthurAssuncao, então criei um repositório chamado ArthurAssuncao.&lt;/li&gt;
&lt;li&gt;Adicione um arquivo &lt;code&gt;README.md&lt;/code&gt; e edite colocando:&lt;/li&gt;
&lt;li&gt;Informações de contato e link para currículo e LinkedIn no topo;&lt;/li&gt;
&lt;li&gt;Texto sobre você, especifique as tecnologias/linguagens que você usa;&lt;/li&gt;
&lt;li&gt;Coloque o que você faz;&lt;/li&gt;
&lt;li&gt;Suas últimas experiências;&lt;/li&gt;
&lt;li&gt;Descreva seus aprendizados;&lt;/li&gt;
&lt;li&gt;Seja bem técnico, pois quem irá ler será alguém mais técnico, possivelmente até outro desenvolvedor.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;O meu está como mostram as figuras abaixo:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EwHV_GzL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h3qmhhntir4vyq6kqf5q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EwHV_GzL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h3qmhhntir4vyq6kqf5q.png" alt="Github - Exemplo README Perfil parte 1" width="834" height="615"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--L1w6mvsI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oyfidcgy4zsv4poat5hm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L1w6mvsI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oyfidcgy4zsv4poat5hm.png" alt="Github - Exemplo README Perfil parte 2" width="834" height="675"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1_8O0FHH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ryb46270lxde620bpg3d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1_8O0FHH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ryb46270lxde620bpg3d.png" alt="Github - Exemplo README Perfil parte 3" width="834" height="744"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#11-ideias-para-projetos"&gt;
  &lt;/a&gt;
  11. Ideias para projetos
&lt;/h2&gt;

&lt;p&gt;Para tornar o seu Github mais interessante mesmo sem ter experiência profissional basta criar projetos, assim você mostra que sabe.&lt;/p&gt;

&lt;p&gt;Tipos de projetos para mostrar?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Clone perfil de rede social: use HTML, CSS, JavaScript e outras tecnologias;&lt;/li&gt;
&lt;li&gt;Copie o layout de algum site conhecido: use HTML, CSS, JavaScript e outras tecnologias;&lt;/li&gt;
&lt;li&gt;Monte um Jogo da velha: use HTML, CSS, JavaScript e outras tecnologias;&lt;/li&gt;
&lt;li&gt;Crie seu site pessoal/portfólio: use HTML, CSS, JavaScript e outras tecnologias;&lt;/li&gt;
&lt;li&gt;Monte compoenntes como pequenos códigos (snippets) com animações, eventos e outras funções chamativas.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#12-markdown"&gt;
  &lt;/a&gt;
  12. Markdown
&lt;/h2&gt;

&lt;p&gt;Markdown é uma linguagem muito simples para marcação e formatação de textos, sabe quando você coloca negrito ou itálico no whatsapp e usa asterisco ou til? O markdown é semelhante a isso, por isso a sua simplicidade.&lt;/p&gt;

&lt;p&gt;As formatações do markdown são:&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Tipo&lt;/th&gt;
&lt;th&gt;Sintaxe&lt;/th&gt;
&lt;th&gt;Resultado&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Título 1&lt;/td&gt;
&lt;td&gt;&lt;code&gt;# Seu título&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;..&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Título 2&lt;/td&gt;
&lt;td&gt;&lt;code&gt;## Seu título&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;..&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Título 3&lt;/td&gt;
&lt;td&gt;&lt;code&gt;### Seu título&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;..&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Título 4&lt;/td&gt;
&lt;td&gt;&lt;code&gt;#### Seu título&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;..&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Título 5&lt;/td&gt;
&lt;td&gt;&lt;code&gt;##### Seu título&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;..&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Título 6&lt;/td&gt;
&lt;td&gt;&lt;code&gt;###### Seu título&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;..&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Título 6&lt;/td&gt;
&lt;td&gt;&lt;code&gt;###### Seu título&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;..&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Itálico&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;*texto*&lt;/code&gt; ou &lt;code&gt;_texto_&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;&lt;em&gt;texto&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Negrito&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;**texto**&lt;/code&gt; ou &lt;code&gt;__texto__&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;texto&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Riscado&lt;/td&gt;
&lt;td&gt;&lt;code&gt;~~texto~~&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;del&gt;texto&lt;/del&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Bloco de citação&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;gt; citação&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&amp;gt; citação&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Lista ordenada&lt;/td&gt;
&lt;td&gt;&lt;code&gt;1. item&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;1. item&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Lista não ordenada&lt;/td&gt;
&lt;td&gt;&lt;code&gt;- item&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;- item&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Código inline&lt;/td&gt;
&lt;td&gt;&lt;code&gt;texto\&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;texto&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Link&lt;/td&gt;
&lt;td&gt;&lt;code&gt;[nome link](https://www.example.com)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.example.com"&gt;nome link&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Imagem&lt;/td&gt;
&lt;td&gt;&lt;code&gt;![descrição](https://avatars.githubusercontent.com/u/583231)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tR_KxYfQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars.githubusercontent.com/u/583231%3Fv%3D4" alt="descrição" width="460" height="460"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Tabela&lt;/td&gt;
&lt;td&gt;apresento abaixo&lt;/td&gt;
&lt;td&gt;..&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Bloco de código&lt;/td&gt;
&lt;td&gt;apresento abaixo&lt;/td&gt;
&lt;td&gt;..&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Abaixo apresento mais algumas formatações, ainda detalho melhor algumas e mostro como ficam. Se quiser ver todas formatações possíveis acesse &lt;a href="https://www.markdownguide.org/cheat-sheet/"&gt;Markdown Cheat Sheet&lt;/a&gt;.&lt;br&gt;
&lt;strong&gt;A. Título de nível 1&lt;/strong&gt;&lt;br&gt;
Adicione &lt;code&gt;#&lt;/code&gt; antes do título e ele será um título de nível 1, seria como o título maior do texto.&lt;br&gt;
Abaixo apresento o código e em seguida como ele fica.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# Seu Título
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#seu-t%C3%ADtulo"&gt;
  &lt;/a&gt;
  Seu Título
&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;B. Título de nível 2&lt;/strong&gt;&lt;br&gt;
Adicione &lt;code&gt;##&lt;/code&gt; antes do título e ele será um título de nível 2.&lt;br&gt;
Abaixo apresento o código e em seguida como ele fica.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;## Seu Título
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#seu-t%C3%ADtulo"&gt;
  &lt;/a&gt;
  Seu Título
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;C. Título de nível 3&lt;/strong&gt;&lt;br&gt;
Adicione &lt;code&gt;###&lt;/code&gt; antes do título e ele será um título de nível 3.&lt;br&gt;
Abaixo apresento o código e em seguida como ele fica.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;### Seu Título
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#seu-t%C3%ADtulo"&gt;
  &lt;/a&gt;
  Seu Título
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;D. Título de nível 4&lt;/strong&gt;&lt;br&gt;
Adicione &lt;code&gt;####&lt;/code&gt; antes do título e ele será um título de nível 4.&lt;br&gt;
Abaixo apresento o código e em seguida como ele fica.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#### Seu Título
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#seu-t%C3%ADtulo"&gt;
  &lt;/a&gt;
  Seu Título
&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;E. Título de nível 5&lt;/strong&gt;&lt;br&gt;
Adicione &lt;code&gt;#####&lt;/code&gt; antes do título e ele será um título de nível 5.&lt;br&gt;
Abaixo apresento o código e em seguida como ele fica.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;##### Seu Título
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#seu-t%C3%ADtulo"&gt;
  &lt;/a&gt;
  Seu Título
&lt;/h5&gt;

&lt;p&gt;&lt;strong&gt;F. Título de nível 6&lt;/strong&gt;&lt;br&gt;
Adicione &lt;code&gt;######&lt;/code&gt; antes do título e ele será um título de nível 6.&lt;br&gt;
Abaixo apresento o código e em seguida como ele fica.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;###### Seu Título
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h6&gt;
  &lt;a href="#seu-t%C3%ADtulo"&gt;
  &lt;/a&gt;
  Seu Título
&lt;/h6&gt;

&lt;p&gt;&lt;strong&gt;G. Lista ordenada&lt;/strong&gt;&lt;br&gt;
Para fazer uma lista ordenada basta usar números com ponto.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;1. Item 1
2. Item 2
3. Item 3
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Item 1&lt;/li&gt;
&lt;li&gt;Item 2&lt;/li&gt;
&lt;li&gt;Item 3&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;H. Lista não ordenada&lt;/strong&gt;&lt;br&gt;
Para fazer uma lista não ordenada basta iniciar os itens com traço (&lt;code&gt;-&lt;/code&gt;) ou asterisco (&lt;code&gt;*&lt;/code&gt;).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;- Item 1
- Item 2
- Item 3

* Item 1
* Item 2
* Item 3
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Item 1&lt;/li&gt;
&lt;li&gt;Item 2&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Item 3&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Item 1&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Item 2&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Item 3&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;I. Tabela&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Tabela é um pouco mais complicado, veja a sintaxe abaixo.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;| Nome | Descrição |
| ----------- | ----------- |
| Whatsapp | Aplicativo para troca de mensagens |
| Instagram | Rede social para compartilhamento de fotos e vídeos |
| LinkedIn | Rede social para contatos profissionais |
| Github | Repositório e rede social de códigos |
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Nome&lt;/th&gt;
&lt;th&gt;Descrição&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Whatsapp&lt;/td&gt;
&lt;td&gt;Aplicativo para troca de mensagens&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Instagram&lt;/td&gt;
&lt;td&gt;Rede social para compartilhamento de fotos e vídeos&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;LinkedIn&lt;/td&gt;
&lt;td&gt;Rede social para contatos profissionais&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Github&lt;/td&gt;
&lt;td&gt;Repositório e rede social de códigos&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;J. Bloco de código&lt;/strong&gt;&lt;br&gt;
Se quiser apresentar um bloco de código basta fazer como mostra abaixo:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JSl466KX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nnywo4xpjwhz4qltqcmr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JSl466KX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nnywo4xpjwhz4qltqcmr.png" alt="Markdown - bloco de código" width="605" height="162"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;nome&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Github&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;descricao&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Repositório e rede social de códigos&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#13-ao-infinito-e-al%C3%A9m"&gt;
  &lt;/a&gt;
  13. Ao infinito e além...
&lt;/h2&gt;

&lt;p&gt;Agora que você já sabe um pouco de Git e Github, vamos pensar em como melhorar nossas práticas? Seguem algumas dicas do que procurar aprender.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Aprenda como utilizar SSH com chave pública para não precisar digitar o &lt;code&gt;Access Token&lt;/code&gt; ao realizar uma ação no Github pelo terminal.&lt;/li&gt;
&lt;li&gt;Aprenda sobre &lt;code&gt;Pull Requests&lt;/code&gt; e &lt;code&gt;Branchs&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Aprenda a manipular as branchs de um repositório. Normalmente fazemos &lt;code&gt;commits&lt;/code&gt; em uma branch de desenvolvimento, fazemos Pull Requests para a branch &lt;code&gt;main&lt;/code&gt; e realizamos um &lt;code&gt;Code Review&lt;/code&gt; (revisão do código para encontrar erros ou falta de padrões).&lt;/li&gt;
&lt;li&gt;Treine bastante e "commite" muito.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#refer%C3%AAncias"&gt;
  &lt;/a&gt;
  Referências
&lt;/h2&gt;

&lt;p&gt;A STEP-BY-STEP guide to Git. Disponível em: &lt;a href="https://opensource.com/article/18/1/step-step-guide-git"&gt;https://opensource.com/article/18/1/step-step-guide-git&lt;/a&gt;. Acesso em: 28 nov. 2021.&lt;br&gt;
GIT CHEAT Sheets. Disponível em: &lt;a href="https://training.github.com/"&gt;https://training.github.com/&lt;/a&gt;. Acesso em: 28 nov. 2021.&lt;br&gt;
GIT DOWNLOADS. Disponível em: &lt;a href="https://git-scm.com/downloads"&gt;https://git-scm.com/downloads&lt;/a&gt;. Acesso em: 28 nov. 2021.&lt;br&gt;
GIT FOR Windows. Disponível em: &lt;a href="https://gitforwindows.org/"&gt;https://gitforwindows.org/&lt;/a&gt;. Acesso em: 28 nov. 2021.&lt;br&gt;
GIT GUIDES. Disponível em: &lt;a href="https://github.com/git-guides"&gt;https://github.com/git-guides&lt;/a&gt;. Acesso em: 28 nov. 2021.&lt;br&gt;
GITHUB Git Cheatsheet. Disponível em: &lt;a href="https://training.github.com/downloads/pt_BR/github-git-cheat-sheet.pdf"&gt;https://training.github.com/downloads/pt_BR/github-git-cheat-sheet.pdf&lt;/a&gt;. Acesso em: 28 nov. 2021.&lt;br&gt;
MARKDOWN Cheat Sheet. Disponível em: &lt;a href="https://www.markdownguide.org/cheat-sheet/"&gt;https://www.markdownguide.org/cheat-sheet/&lt;/a&gt;. Acesso em: 28 nov. 2021.&lt;/p&gt;

</description>
      <category>git</category>
      <category>github</category>
      <category>mercadodetrabalho</category>
      <category>portfólio</category>
    </item>
    <item>
      <title>Announcing the Chingu Holiday Hackathon</title>
      <author>Jim Medlock</author>
      <pubDate>Tue, 30 Nov 2021 20:50:41 +0000</pubDate>
      <link>https://dev.to/chingu/announcing-the-chingu-holiday-hackathon-25ba</link>
      <guid>https://dev.to/chingu/announcing-the-chingu-holiday-hackathon-25ba</guid>
      <description>&lt;p&gt;The Holiday Season is a time to celebrate with family and friends, a time to reflect on the past year, and a time to relax and have fun.&lt;/p&gt;

&lt;p&gt;And for Developers what better way to have fun than by participating in a holiday themed hackathon to both test and extend your skills?&lt;/p&gt;

&lt;p&gt;This year &lt;a href="https://chingu.io"&gt;Chingu&lt;/a&gt; is sponsoring a Holiday Hackathon so you can do just that! Read on to learn how to enter, compete, and celebrate the Season with a little code!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-participate"&gt;
  &lt;/a&gt;
  How to Participate
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BOhzYxGa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ch31iof5z8x8tnt4tha7.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BOhzYxGa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ch31iof5z8x8tnt4tha7.jpeg" alt="Banner" width="880" height="130"&gt;&lt;/a&gt;&lt;br&gt;
This hackathon will run from &lt;strong&gt;Wednesday, December 1st through Sunday, December 19th&lt;/strong&gt;. You can &lt;a href="https://github.com/chingu-hackathons/holidayhackathon2021/discussions"&gt;learn about the specifics here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You may join as a solo Developer or as a team by signing up &lt;a href="https://airtable.com/shrzef3NVWMl9PiKt"&gt;here&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Be sure to &lt;a href="https://airtable.com/shrtPfnx6eX96AJxt"&gt;submit your completed project&lt;/a&gt; before the deadline. We will recognize your contribution in our &lt;a href="https://twitter.com/ChinguCollabs"&gt;Twitter&lt;/a&gt; and &lt;a href="https://www.linkedin.com/company/chingu-os"&gt;LinkedIn&lt;/a&gt; feeds.&lt;/p&gt;

&lt;p&gt;We'll also award &lt;a href="https://chingu.myspreadshop.com/"&gt;Chingu swag&lt;/a&gt; to the top three projects chosen by a panel of judges. Members of the top three teams will receive a &lt;a href="https://tinyurl.com/yyaub5gh"&gt;Chingu water bottle&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Winners will be announced on &lt;em&gt;&lt;em&gt;Wednesday, December 22.&lt;/em&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;All are welcome to participate&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8Ge2W_cI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8v920zdeub6ioeb63qao.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8Ge2W_cI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8v920zdeub6ioeb63qao.jpg" alt="Santa" width="880" height="240"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>career</category>
      <category>hackathon</category>
      <category>contributorswanted</category>
    </item>
  </channel>
</rss>
