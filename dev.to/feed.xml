<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>BaseCamp Community Intro + Resources🎉</title>
      <author>Suraj Vishwakarma</author>
      <pubDate>Sun, 18 Apr 2021 15:54:28 +0000</pubDate>
      <link>https://dev.to/basecampxd/basecamp-community-intro-resources-51pm</link>
      <guid>https://dev.to/basecampxd/basecamp-community-intro-resources-51pm</guid>
      <description>&lt;h1&gt;
  &lt;a href="#basecamp-community"&gt;
  &lt;/a&gt;
  BaseCamp Community
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#motivation"&gt;
  &lt;/a&gt;
  Motivation
&lt;/h2&gt;

&lt;p&gt;When I started my programming journey as a newbie, I literally had no idea about "How to kickstart in the right way?". Having a roadmap is good but sometimes it may not be enough. We need more engagement and discussion.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D4U_Q8oh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j523v1n8pma1b0viztvd.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D4U_Q8oh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j523v1n8pma1b0viztvd.gif" alt="Confused"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After finding a way for myself, I am here, writing code and blog on a regular basis. To solve this problem of getting started in the right direction and helping them with the right tool and resources regarding coding, getting started, open sources, joining the different community, etc. Me and my friend &lt;a href="https://dev.to/mindninjax"&gt;Risabh Singh&lt;/a&gt; have started BaseCamp Community to help the newbies who are passionate about learning to code and becoming better programmers eventually.&lt;/p&gt;

&lt;p&gt;We are currently in starting phases where we are creating videos on YouTube to teach open sources contribution through GitHub. We have repositories on GitHub, where new developers can contribute easily and learn Github working and contributing on GitHub.&lt;/p&gt;

&lt;p&gt;Now we are writing blogs.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#dev-blog"&gt;
  &lt;/a&gt;
  Dev Blog
&lt;/h2&gt;

&lt;p&gt;BaseCamp is now on dev.to to help reach more people through our blogs &amp;amp; share our knowledge. We have a lot of ideas already. here are some we have decided to get started with:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Dev Discuss -A healthy discussion on developing community as well as off-topic.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Open Source -Introduction to open source and encouraging people to join open source. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Languages -We will focus on the different programming languages to help newbie developers.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Resources and Roadmap -Series of resources and roadmap for the different professions from web development(Frontend/Backend/Full Stack) to mobile development.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Much More......&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#connect-with-us"&gt;
  &lt;/a&gt;
  Connect with Us
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Twitter - &lt;a href="https://twitter.com/basecampXD"&gt;@basecampXD&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;YouTube - &lt;a href="https://www.youtube.com/channel/UCJzWrm8hN4cYt2-rgbryVHQ"&gt;@Basecamp&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;GitHub - &lt;a href="https://github.com/Basecamp-Community"&gt;@Basecamp-Community&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;




&lt;h1&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  Resources
&lt;/h1&gt;

&lt;p&gt;As you get excited about BaseCamp, we are going to start with some resources to set up for you for future projects and learning.&lt;/p&gt;

&lt;p&gt;Let's start with the resources list&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#notion"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.notion.so/"&gt;Notion&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1PFlEFh8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mj8kzcpevc9zn4yww2p1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1PFlEFh8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mj8kzcpevc9zn4yww2p1.png" alt="Notion"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A new tool that blends your everyday work apps into one. It's the all-in-one workspace for you and your team.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h3&gt;
  &lt;a href="#trello"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.notion.so/"&gt;Trello&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--86b2oUuh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3knatu1i6fopz6eqllwo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--86b2oUuh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3knatu1i6fopz6eqllwo.png" alt="Trello"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Collaborate, manage projects and reach new productivity peaks. From high rises to the home office, the way your team works is unique—accomplish it all with Trello.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h3&gt;
  &lt;a href="#freecodecamp"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.freecodecamp.org/"&gt;freeCodeCamp&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qnhaqytZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3idj6nt6nko4a34wui33.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qnhaqytZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3idj6nt6nko4a34wui33.png" alt="freeCodeCamp"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;freeCodeCamp is a non-profit organization that consists of an interactive learning web platform, an online community forum, chat rooms, online publications. They accomplish this by creating thousands of videos, articles, and interactive coding.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h3&gt;
  &lt;a href="#replit"&gt;
  &lt;/a&gt;
  &lt;a href="https://replit.com/"&gt;Replit&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wVc_N7jM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pc8xkyxgojwilsy4p8bn.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wVc_N7jM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pc8xkyxgojwilsy4p8bn.PNG" alt="Replit"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Replit is a simple yet powerful online IDE, Editor, Compiler, Interpreter, and REPL. Code, compile, run, and host in 50+ programming languages.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h3&gt;
  &lt;a href="#graphicmaker"&gt;
  &lt;/a&gt;
  &lt;a href="https://designs.ai/graphicmaker/"&gt;Graphicmaker&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_bMmtxbk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rah4zv7g96e65tfgw8u9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_bMmtxbk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rah4zv7g96e65tfgw8u9.png" alt="Graphicmaker"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Get beautiful and customizable SVG, PNG, and Vector illustrations that match your brand identity. Brought to you by Designs.ai.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h3&gt;
  &lt;a href="#heroku"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.heroku.com/"&gt;Heroku&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XoBjsaCC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/484urjx43pa6g5nizalo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XoBjsaCC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/484urjx43pa6g5nizalo.png" alt="Heroku"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Heroku is a platform as a service (PaaS) that enables developers to build, run, and operate applications entirely in the cloud.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h1&gt;
  &lt;a href="#last-note"&gt;
  &lt;/a&gt;
  Last Note
&lt;/h1&gt;

&lt;p&gt;Thank you for reading and always remember that you are amazing. &lt;/p&gt;

&lt;p&gt;Make sure to follow us on &lt;a href="https://dev.to/basecampxd"&gt;dev.to&lt;/a&gt; to stay updated with our latest blog posts.&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>beginners</category>
      <category>codenewbie</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Top 10 Javascript projects for Resume 🚀🚀</title>
      <author>Kiran Sethumadhavan</author>
      <pubDate>Sun, 18 Apr 2021 15:30:15 +0000</pubDate>
      <link>https://dev.to/kiransethu46/top-5-javascript-projects-for-resume-8d6</link>
      <guid>https://dev.to/kiransethu46/top-5-javascript-projects-for-resume-8d6</guid>
      <description>&lt;ol&gt;
&lt;li&gt;Facebook Clone&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/B-kxUMHBxNo"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Instagram Clone
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/f7T48W0cwXM"&gt;
&lt;/iframe&gt;
&lt;/li&gt;
&lt;li&gt;Whatsapp Clone
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/pUxrDcITyjg"&gt;
&lt;/iframe&gt;
 &lt;/li&gt;
&lt;li&gt;Linkedin Clone
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/QaYts9sPmcY"&gt;
&lt;/iframe&gt;
&lt;/li&gt;
&lt;li&gt;Amazon Clone
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/RDV3Z1KCBvo"&gt;
&lt;/iframe&gt;
&lt;/li&gt;
&lt;li&gt;Spotify Clone
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/pnkuI8KXW_8"&gt;
&lt;/iframe&gt;
&lt;/li&gt;
&lt;li&gt;Netflix Clone
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/1TCw9wO1neA"&gt;
&lt;/iframe&gt;
&lt;/li&gt;
&lt;li&gt;Hotstar + Disney Clone
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/4pjpHUN28kk"&gt;
&lt;/iframe&gt;
&lt;/li&gt;
&lt;li&gt;Google Drive clone
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/ljuCH6_jrYE"&gt;
&lt;/iframe&gt;
 &lt;/li&gt;
&lt;li&gt;Signal Clone 
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/MJzmZ9qmdaE"&gt;
&lt;/iframe&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Do you want to Kick-start a career in Cyber Security and want to know how hackers hack in real life ☠️☠️&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Join Now 200+ Members already Joined &lt;/p&gt;

&lt;p&gt;&lt;a href="https://t.me/infosecbugbounty"&gt;https://t.me/infosecbugbounty&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>devops</category>
      <category>programming</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Mi configuración de Neovim.</title>
      <author>Francisco</author>
      <pubDate>Sun, 18 Apr 2021 15:15:09 +0000</pubDate>
      <link>https://dev.to/franciscode/mi-configuracion-de-neovim-48o0</link>
      <guid>https://dev.to/franciscode/mi-configuracion-de-neovim-48o0</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WvW8D-3r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/77551844/115131396-dcfeec80-9fc5-11eb-8bb7-ae7b4a57296a.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WvW8D-3r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/77551844/115131396-dcfeec80-9fc5-11eb-8bb7-ae7b4a57296a.jpg" alt="My Config"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;El Github del repositorio esta &lt;a href="https://github.com/FrancisCode13/NeoVim-Config"&gt;aquí&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#neovimconfig"&gt;
  &lt;/a&gt;
  NeoVim-Config
&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;Antes de empezar me gustaría aclarar que casi toda la configuración esta hecha por un dev llamado Teo, todos los créditos son para él, y te dejo su Github &lt;a href="https://github.com/TeoDev1611"&gt;aquí&lt;/a&gt;. Mas que nada lo tengo en este github como copia de respaldo por si le pasa algo a mi Vim.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#inicio"&gt;
  &lt;/a&gt;
  Inicio
&lt;/h2&gt;

&lt;p&gt;Esta configuración es para Neovim (Fork de Vim) tiene Plugins bastante útiles, un tema muy bonito para mi gusto (siempre puedes cambiarselo) atajos bastante útiles, una terminal integrada, entre otros.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---5UMECWg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/77551844/115130586-d751d880-9fbe-11eb-9f7b-e0b66d68c1a6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---5UMECWg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/77551844/115130586-d751d880-9fbe-11eb-9f7b-e0b66d68c1a6.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#atajos-b%C3%A1sicos"&gt;
  &lt;/a&gt;
  Atajos Básicos
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Cabe aclarar que &lt;code&gt;&amp;lt;leader&amp;gt;&lt;/code&gt; es la tecla espacio en Windows 10.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;1.- &lt;code&gt;&amp;lt;leader&amp;gt;w&lt;/code&gt;   Guardar el archivo&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yEdHn8Ed--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/77551844/115130631-30217100-9fbf-11eb-8279-7acb83a96739.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yEdHn8Ed--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/77551844/115130631-30217100-9fbf-11eb-8279-7acb83a96739.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
3.- &lt;code&gt;&amp;lt;leader&amp;gt;q&lt;/code&gt;   Salir del archivo&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XdESzG9F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/77551844/115130637-3c0d3300-9fbf-11eb-95e2-a857172bcb7c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XdESzG9F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/77551844/115130637-3c0d3300-9fbf-11eb-95e2-a857172bcb7c.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
5.- &lt;code&gt;&amp;lt;leader&amp;gt;wq&lt;/code&gt;  Guardar y salir del archivo&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vvarU_as--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/77551844/115130655-6e1e9500-9fbf-11eb-9bf1-99156af6eee5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vvarU_as--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/77551844/115130655-6e1e9500-9fbf-11eb-9bf1-99156af6eee5.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
7.- &lt;code&gt;&amp;lt;leader&amp;gt;so&lt;/code&gt;  Actualizar&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CXCHusyC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/77551844/115130667-7c6cb100-9fbf-11eb-94fd-9ad6ecedfa2c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CXCHusyC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/77551844/115130667-7c6cb100-9fbf-11eb-94fd-9ad6ecedfa2c.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
9.- &lt;code&gt;&amp;lt;leader&amp;gt;pi&lt;/code&gt;  Instalar los plugins&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--t0BBB6og--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/77551844/115130674-87274600-9fbf-11eb-8efb-44133ee2a824.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t0BBB6og--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/77551844/115130674-87274600-9fbf-11eb-8efb-44133ee2a824.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
11.- &lt;code&gt;&amp;lt;leader&amp;gt;n&lt;/code&gt;   CocExplorer Lateral&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0nANj8PV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/77551844/115130680-93ab9e80-9fbf-11eb-9600-3160e78c756f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0nANj8PV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/77551844/115130680-93ab9e80-9fbf-11eb-9600-3160e78c756f.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
13.- &lt;code&gt;&amp;lt;leader&amp;gt;p&lt;/code&gt;  CocExplorer Flotante&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i5Emangy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/77551844/115130691-9d350680-9fbf-11eb-98a2-c5d32962862f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i5Emangy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/77551844/115130691-9d350680-9fbf-11eb-98a2-c5d32962862f.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
14.- &lt;code&gt;&amp;lt;leader&amp;gt;t&lt;/code&gt;  Floaterm&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WdXnJ2jG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/77551844/115130709-bd64c580-9fbf-11eb-8ce6-844496acb45d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WdXnJ2jG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/77551844/115130709-bd64c580-9fbf-11eb-8ce6-844496acb45d.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Entre otros comandos.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#movimiento-en-vim"&gt;
  &lt;/a&gt;
  Movimiento en Vim
&lt;/h2&gt;

&lt;p&gt;Para moverte en Vim debes utilizar las teclas &lt;em&gt;L,K,J y H&lt;/em&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;J = Abajo
K = Arriba
H = Izquierda
L = Derecha
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#uso-de-esta-configuraci%C3%B3n"&gt;
  &lt;/a&gt;
  Uso de esta configuración
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Clona este repositorio&lt;/li&gt;
&lt;li&gt;Pegalo en tu carpeta donde esta tu nvim&lt;/li&gt;
&lt;li&gt;Ejecuta :PlugInstall&lt;/li&gt;
&lt;li&gt;Actualiza con :so$ o simplemente sal de nvim o y vuelve a entrar&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Créditos a Teo por la mayoría de la configuración 😄&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Migrating from NPM to Yarn</title>
      <author>Sunny Golovine</author>
      <pubDate>Sun, 18 Apr 2021 15:10:38 +0000</pubDate>
      <link>https://dev.to/sgolovine/migrating-from-npm-to-yarn-2ih3</link>
      <guid>https://dev.to/sgolovine/migrating-from-npm-to-yarn-2ih3</guid>
      <description>&lt;p&gt;Say you have a project that uses NPM for dependency management. How would you convert that project to use Yarn?&lt;/p&gt;

&lt;p&gt;For the longest time the way I did it was just deleting the &lt;code&gt;package-lock.json&lt;/code&gt; and running &lt;code&gt;yarn&lt;/code&gt; to generate a new lockfile. While this works well on small projects, dependency pinning is there for a reason and trying to do this on a larger project may land you in hot water. So how do you do it safely? It's simple:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
yarn import

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's it! When you run &lt;code&gt;yarn import&lt;/code&gt;, yarn will read your &lt;code&gt;package-lock.json&lt;/code&gt; and generate a &lt;code&gt;yarn.lock&lt;/code&gt; file based on it. It's a much safer way to migrate from one package manager to the other.&lt;/p&gt;

&lt;p&gt;If you enjoyed this post check out some of my &lt;a href="https://sunnygolovine.com/blog"&gt;other writing&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>npm</category>
      <category>angular</category>
    </item>
    <item>
      <title>Weekly Challenge 108</title>
      <author>Simon Green</author>
      <pubDate>Sun, 18 Apr 2021 14:47:53 +0000</pubDate>
      <link>https://dev.to/simongreennet/weekly-challenge-108-3di2</link>
      <guid>https://dev.to/simongreennet/weekly-challenge-108-3di2</guid>
      <description>&lt;p&gt;&lt;a href="https://perlweeklychallenge.org/blog/perl-weekly-challenge-108/"&gt;Tasks&lt;/a&gt;, &lt;a href="https://github.com/manwar/perlweeklychallenge-club/tree/master/challenge-108/sgreen"&gt;My solutions&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#task-1-locate-memory"&gt;
  &lt;/a&gt;
  TASK #1 › Locate Memory
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#task"&gt;
  &lt;/a&gt;
  Task
&lt;/h2&gt;

&lt;p&gt;Write a script to declare a variable or constant and print it’s[sic] location in the memory.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#my-solution"&gt;
  &lt;/a&gt;
  My solution
&lt;/h2&gt;

&lt;p&gt;One good thing about Perl (and most modern languages) is that you don't really need to worry about memory management. Perl will automatically reclaim memory when a variable is no longer used.&lt;/p&gt;

&lt;p&gt;For this task, I take the reference to the variable (for example &lt;code&gt;SCALAR(0x559184ba5890)&lt;/code&gt; and use regular expression to display the location (the bit between the parenthesis).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#minified"&gt;
  &lt;/a&gt;
  Minified
&lt;/h2&gt;

&lt;p&gt;In 22 characters, this can be minified to the below example.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;» perl -E 'say\$a=~/(0x[0-9a-f]+)/'
0x555668d2a3f8
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#example"&gt;
  &lt;/a&gt;
  Example
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;» ./ch-1.pl 
0x555668d2a3f8
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#task-2-bell-numbers"&gt;
  &lt;/a&gt;
  TASK #2 › Bell Numbers
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#task"&gt;
  &lt;/a&gt;
  Task
&lt;/h2&gt;

&lt;p&gt;Write a script to display top 10 &lt;a href="https://en.wikipedia.org/wiki/Bell_number"&gt;Bell Numbers&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#my-solution"&gt;
  &lt;/a&gt;
  My solution
&lt;/h2&gt;

&lt;p&gt;In tackling this task, the &lt;a href="https://en.wikipedia.org/wiki/Bell_number#/media/File:BellNumberAnimated.gif"&gt;animated gif&lt;/a&gt; is very helpful. I use the &lt;code&gt;@bell&lt;/code&gt; array to reproduce this. I start by seeding the table with a single value, and then use the copy and add functions to generate the subsequent values. Finally I use a foreach loop to display the last number in each row to display the list of bell numbers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#example"&gt;
  &lt;/a&gt;
  Example
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;» ./ch-2.pl
1
2
5
15
52
203
877
4140
21147
115975
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>perl</category>
      <category>perlweeklychallenge</category>
      <category>weeklychallenge</category>
    </item>
    <item>
      <title>My 8 favorite VS Code Shortcut #1</title>
      <author>CodeOzz</author>
      <pubDate>Sun, 18 Apr 2021 14:38:11 +0000</pubDate>
      <link>https://dev.to/codeozz/my-8-favorite-vs-code-shortcut-1-1lpf</link>
      <guid>https://dev.to/codeozz/my-8-favorite-vs-code-shortcut-1-1lpf</guid>
      <description>&lt;p&gt;Hey ! Welcome here, I'm CodeOz and I'm sharing with you my favorite VS Code shortcut !&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#indent-the-whole-line"&gt;
  &lt;/a&gt;
  Indent the whole line
&lt;/h3&gt;

&lt;p&gt;By default when you are indenting a line on VSCode, the entire line is not indented, so there is a option for this :&lt;/p&gt;

&lt;p&gt;&lt;code&gt;editor.action.indentLines&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="go"&gt;    {
        "key": "tab",
        "command": "editor.action.indentLines",
        "when": "editorTextFocus &amp;amp;&amp;amp; !editorReadonly"
    },
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h4&gt;
  &lt;a href="#before"&gt;
  &lt;/a&gt;
  Before
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HwhTu7Yv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fh3ng6dx4eaztdf8m9ht.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HwhTu7Yv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fh3ng6dx4eaztdf8m9ht.gif" alt="Webp.net-gifmaker"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#after"&gt;
  &lt;/a&gt;
  After
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2h1D7sW9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cjj99su8gfc8xq578aeq.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2h1D7sW9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cjj99su8gfc8xq578aeq.gif" alt="Webp.net-gifmaker (1)"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#rename-variable-in-all-files"&gt;
  &lt;/a&gt;
  Rename variable in all files
&lt;/h3&gt;

&lt;p&gt;If you want to rename a variable from a file you will need to update the name in all other file where you need to use this variable, thanks to this shortcut, it will be more easier to rename your variable across your project !&lt;/p&gt;

&lt;p&gt;&lt;code&gt;editor.action.rename&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="go"&gt;    {
        "key": "shift+f2",
        "command": "editor.action.rename",
        "when": "editorHasRenameProvider &amp;amp;&amp;amp; editorTextFocus &amp;amp;&amp;amp; !editorReadonly"
    },
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---vAYpHrD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ylkildoyjncuqkase2qb.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---vAYpHrD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ylkildoyjncuqkase2qb.gif" alt="ezgif.com-gif-maker"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#select-all-word-in-the-file"&gt;
  &lt;/a&gt;
  Select all word in the file
&lt;/h3&gt;

&lt;p&gt;You can also select all word from a word !&lt;/p&gt;

&lt;p&gt;&lt;code&gt;editor.action.changeAll&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="go"&gt;    {
        "key": "ctrl+shift+f2",
        "command": "editor.action.changeAll",
        "when": "editorTextFocus &amp;amp;&amp;amp; editorTextFocus &amp;amp;&amp;amp; !editorReadonly"
    },
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wLFjT85p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rvoj12aboqlixesr7x9w.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wLFjT85p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rvoj12aboqlixesr7x9w.gif" alt="select-all-word"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#navigation-back-forward-and-last-edit"&gt;
  &lt;/a&gt;
  Navigation back, forward and last edit
&lt;/h3&gt;

&lt;p&gt;One of my favorite ! You can navigate across your mouse's historical, from back to forward and from your last edit, it can be very very usefull&lt;/p&gt;

&lt;p&gt;&lt;code&gt;workbench.action.navigateBack&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;workbench.action.navigateForward&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;workbench.action.navigateToLastEditLocation&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="go"&gt;    {
        "key": "f1",
        "command": "workbench.action.navigateBack"
    },
    {
        "key": "f2",
        "command": "workbench.action.navigateForward"
    },
    {
        "key": "f3",
        "command": "workbench.action.navigateToLastEditLocation"
    },
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JX8nw7mw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p6wislhezj8gw0h27wwr.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JX8nw7mw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p6wislhezj8gw0h27wwr.gif" alt="naviguate"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#navigation-at-the-start-and-the-end-of-a-line"&gt;
  &lt;/a&gt;
  Navigation at the start and the end of a line
&lt;/h3&gt;

&lt;p&gt;You will earn a lot of time of using this, as mentioned in the title, you can navigate from the start or the end of a line !&lt;/p&gt;

&lt;p&gt;&lt;code&gt;cursorLineStart&lt;/code&gt; &lt;/p&gt;

&lt;p&gt;&lt;code&gt;cursorLineEnd&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="go"&gt;    {
        "key": "alt+left",
        "command": "cursorLineStart"
    },
    {
        "key": "alt+right",
        "command": "cursorLineEnd"
    }
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CyHhK1C1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dhdeje15sjlqhlki4339.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CyHhK1C1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dhdeje15sjlqhlki4339.gif" alt="ezgif.com-gif-maker"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



</description>
      <category>vscode</category>
      <category>webdev</category>
      <category>codenewbie</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Create responsive images with gulp-sharp-responsive</title>
      <author>Khalyomede</author>
      <pubDate>Sun, 18 Apr 2021 14:30:50 +0000</pubDate>
      <link>https://dev.to/khalyomede/create-responsive-images-with-gulp-sharp-responsive-9c6</link>
      <guid>https://dev.to/khalyomede/create-responsive-images-with-gulp-sharp-responsive-9c6</guid>
      <description>&lt;p&gt;Hello everyone, and welcome to this tutorial. Today I would like to introduce a new plugin for Gulp that I created to optimize images for our web browser users.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introducting-gulpsharpresponsive"&gt;
  &lt;/a&gt;
  Introducting gulp-sharp-responsive
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.npmjs.com/package/gulp-sharp-responsive"&gt;gulp-sharp-responsive&lt;/a&gt; is based on the &lt;a href="https://www.npmjs.com/package/sharp"&gt;Sharp NPM package&lt;/a&gt;, a fast image processing library, and aims to simplify this tedious task. Making images responsive and declined for differents format becomes simple because we only have to configure it and the rest is done automatically for us.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#context"&gt;
  &lt;/a&gt;
  Context
&lt;/h2&gt;

&lt;p&gt;For this tutorial, let's imagine we have the following folder:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.
├── src/
│   └── img/
│       └── lion.jpg
├── .gitignore
├── gulpfile.js
└── package.json
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Let's say We want to output our lion.jpg image into the folder &lt;code&gt;dist/img&lt;/code&gt;. We also would like to have images in differents sizes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;640 (mobile)&lt;/li&gt;
&lt;li&gt;768 (tablet)&lt;/li&gt;
&lt;li&gt;1024 (desktop)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And differents formats:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;jpeg&lt;/li&gt;
&lt;li&gt;webp&lt;/li&gt;
&lt;li&gt;avif&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#using-gulpsharpresponsive"&gt;
  &lt;/a&gt;
  Using gulp-sharp-responsive
&lt;/h2&gt;

&lt;p&gt;To this purpose, here is how you can use this library. &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h3&gt;

&lt;p&gt;First, let's install Gulp and this plugin:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;--save-dev&lt;/span&gt; gulp gulp-sharp-responsive
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#usage"&gt;
  &lt;/a&gt;
  Usage
&lt;/h3&gt;

&lt;p&gt;Next, head on your &lt;code&gt;gulpfile.js&lt;/code&gt; file and append this code:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// gulpfile.js&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;dest&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;gulp&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;sharpResponsive&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;gulp-sharp-responsive&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Then, let's write our "img" task:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// gulpfile.js&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;dest&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;gulp&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;sharpResponsive&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;gulp-sharp-responsive&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;img&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;src/img/*.jpg&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pipe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sharpResponsive&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;formats&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="c1"&gt;// jpeg&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;640&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;format&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;jpeg&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;rename&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;suffix&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;-sm&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;768&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;format&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;jpeg&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;rename&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;suffix&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;-md&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1024&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;format&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;jpeg&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;rename&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;suffix&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;-lg&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="c1"&gt;// webp&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;640&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;format&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;webp&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;rename&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;suffix&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;-sm&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;768&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;format&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;webp&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;rename&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;suffix&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;-md&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1024&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;format&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;webp&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;rename&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;suffix&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;-lg&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="c1"&gt;// avif&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;640&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;format&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;avif&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;rename&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;suffix&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;-sm&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;768&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;format&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;avif&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;rename&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;suffix&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;-md&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1024&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;format&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;avif&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;rename&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;suffix&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;-lg&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;}))&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pipe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dist/img&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Finally, let's expose this task so that we can use it through &lt;code&gt;npm run img&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// gulpfile.js&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;dest&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;gulp&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;sharpResponsive&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;gulp-sharp-responsive&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;img&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;src/img/*.jpg&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pipe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sharpResponsive&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;formats&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="c1"&gt;// jpeg&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;640&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;format&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;jpeg&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;rename&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;suffix&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;-sm&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;768&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;format&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;jpeg&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;rename&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;suffix&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;-md&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1024&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;format&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;jpeg&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;rename&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;suffix&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;-lg&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="c1"&gt;// webp&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;640&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;format&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;webp&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;rename&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;suffix&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;-sm&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;768&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;format&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;webp&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;rename&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;suffix&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;-md&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1024&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;format&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;webp&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;rename&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;suffix&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;-lg&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="c1"&gt;// avif&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;640&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;format&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;avif&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;rename&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;suffix&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;-sm&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;768&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;format&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;avif&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;rename&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;suffix&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;-md&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1024&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;format&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;avif&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;rename&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;suffix&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;-lg&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;}))&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pipe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dist/img&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;img&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="err"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;package.json&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"scripts"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"img"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"gulp img"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Now, let's run this task once. In your terminal, run this command:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm run img
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;You should see something printed in the console like this:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;npm run img

&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; img     
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; gulp img

&lt;span class="o"&gt;[&lt;/span&gt;14:11:00] Using gulpfile /home/khalyomede/gulpfile.js
&lt;span class="o"&gt;[&lt;/span&gt;14:11:01] Starting &lt;span class="s1"&gt;'build'&lt;/span&gt;...
&lt;span class="o"&gt;[&lt;/span&gt;14:11:01] Starting &lt;span class="s1"&gt;'img'&lt;/span&gt;...
&lt;span class="o"&gt;[&lt;/span&gt;14:11:02] Finished &lt;span class="s1"&gt;'img'&lt;/span&gt; after 1.92 s
&lt;span class="o"&gt;[&lt;/span&gt;14:11:02] Finished &lt;span class="s1"&gt;'build'&lt;/span&gt; after 1.93 s
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;And if we inspect our folder tree this is what we should get now:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.
├── dist/
│   └── img/
│       ├── lions-lg.avif
│       ├── lions-lg.jpg
│       ├── lions-lg.webp
│       ├── lions-md.avif
│       ├── lions-md.jpg
│       ├── lions-md.webp
│       ├── lions-sm.avif
│       ├── lions-sm.jpg
│       └── lions-sm.webp
├── src/
│   └── img/
│       └── lion.jpg
├── .gitignore
├── gulpfile.js
└── package.json
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Image responsiveness can be of a good use when you want to improve your web page speed using this HTML technique:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;picture&amp;gt;&lt;/span&gt;
  &lt;span class="c"&gt;&amp;lt;!-- avif --&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;source&lt;/span&gt; &lt;span class="na"&gt;srcset=&lt;/span&gt;&lt;span class="s"&gt;"/img/lion-sm.avif"&lt;/span&gt; &lt;span class="na"&gt;media=&lt;/span&gt;&lt;span class="s"&gt;"(max-width: 640px)"&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"image/avif"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;source&lt;/span&gt; &lt;span class="na"&gt;srcset=&lt;/span&gt;&lt;span class="s"&gt;"/img/lion-md.avif"&lt;/span&gt; &lt;span class="na"&gt;media=&lt;/span&gt;&lt;span class="s"&gt;"(max-width: 768px)"&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"image/avif"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;source&lt;/span&gt; &lt;span class="na"&gt;srcset=&lt;/span&gt;&lt;span class="s"&gt;"/img/lion-lg.avif"&lt;/span&gt; &lt;span class="na"&gt;media=&lt;/span&gt;&lt;span class="s"&gt;"(max-width: 1024px)"&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"image/avif"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="c"&gt;&amp;lt;!-- webp --&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;source&lt;/span&gt; &lt;span class="na"&gt;srcset=&lt;/span&gt;&lt;span class="s"&gt;"/img/lion-sm.webp"&lt;/span&gt; &lt;span class="na"&gt;media=&lt;/span&gt;&lt;span class="s"&gt;"(max-width: 640px)"&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"image/webp"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;source&lt;/span&gt; &lt;span class="na"&gt;srcset=&lt;/span&gt;&lt;span class="s"&gt;"/img/lion-md.webp"&lt;/span&gt; &lt;span class="na"&gt;media=&lt;/span&gt;&lt;span class="s"&gt;"(max-width: 768px)"&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"image/webp"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;source&lt;/span&gt; &lt;span class="na"&gt;srcset=&lt;/span&gt;&lt;span class="s"&gt;"/img/lion-lg.webp"&lt;/span&gt; &lt;span class="na"&gt;media=&lt;/span&gt;&lt;span class="s"&gt;"(max-width: 1024px)"&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"image/webp"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="c"&gt;&amp;lt;!-- jpeg --&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;source&lt;/span&gt; &lt;span class="na"&gt;srcset=&lt;/span&gt;&lt;span class="s"&gt;"/img/lion-sm.jpeg"&lt;/span&gt; &lt;span class="na"&gt;media=&lt;/span&gt;&lt;span class="s"&gt;"(max-width: 640px)"&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"image/jpeg"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;source&lt;/span&gt; &lt;span class="na"&gt;srcset=&lt;/span&gt;&lt;span class="s"&gt;"/img/lion-md.jpeg"&lt;/span&gt; &lt;span class="na"&gt;media=&lt;/span&gt;&lt;span class="s"&gt;"(max-width: 768px)"&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"image/jpeg"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;source&lt;/span&gt; &lt;span class="na"&gt;srcset=&lt;/span&gt;&lt;span class="s"&gt;"/img/lion-lg.jpeg"&lt;/span&gt; &lt;span class="na"&gt;media=&lt;/span&gt;&lt;span class="s"&gt;"(max-width: 1024px)"&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"image/jpeg"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="c"&gt;&amp;lt;!-- original --&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"/img/lion.jpeg"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"img-responsive"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"A lion in the jungle."&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/picture&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This way, you are asking the browser:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;To load the most modern image first&lt;/li&gt;
&lt;li&gt;Load an image that fits the viewport width&lt;/li&gt;
&lt;li&gt;Fallback to the &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; if a browser doesn't support it&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you check the sizes of each files, we can see users will benefit from newest files format small sizes:&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Image&lt;/th&gt;
&lt;th&gt;Size&lt;/th&gt;
&lt;th&gt;Weight&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;lion.jpg&lt;/td&gt;
&lt;td&gt;Original&lt;/td&gt;
&lt;td&gt;1 330 Ko&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;lions-lg.avif&lt;/td&gt;
&lt;td&gt;1024px&lt;/td&gt;
&lt;td&gt;52 Ko&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;lions-lg.jpg&lt;/td&gt;
&lt;td&gt;1024px&lt;/td&gt;
&lt;td&gt;141 Ko&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;lions-lg.webp&lt;/td&gt;
&lt;td&gt;1024px&lt;/td&gt;
&lt;td&gt;118 Ko&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;lions-md.avif&lt;/td&gt;
&lt;td&gt;768px&lt;/td&gt;
&lt;td&gt;30 Ko&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;lions-md.jpg&lt;/td&gt;
&lt;td&gt;768px&lt;/td&gt;
&lt;td&gt;81 Ko&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;lions-md.webp&lt;/td&gt;
&lt;td&gt;768px&lt;/td&gt;
&lt;td&gt;67 Ko&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;lions-sm.avif&lt;/td&gt;
&lt;td&gt;640px&lt;/td&gt;
&lt;td&gt;23 Ko&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;lions-sm.jpeg&lt;/td&gt;
&lt;td&gt;640px&lt;/td&gt;
&lt;td&gt;60 Ko&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;lions-sm.webp&lt;/td&gt;
&lt;td&gt;640px&lt;/td&gt;
&lt;td&gt;51 Ko&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Learn more in this detail post:&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/khalyomede" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6gAe1QUz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s---zv6BRxh--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/92477/7058dc10-e68e-49fe-a72d-0afd22be74f8.png" alt="khalyomede image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/khalyomede/speed-up-your-web-page-loading-with-webp-24bk" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Speed up your web page loading with WebP&lt;/h2&gt;
      &lt;h3&gt;Khalyomede ・ Feb 25 '19 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#image&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#performance&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;p&gt;Thanks for reading this tutorial, I hope you enjoyed it as much as I enjoyed writting for Dev.to!&lt;/p&gt;

&lt;p&gt;You can learn more about this library, like how to keep the original file in the output images and much more!&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/khalyomede"&gt;
        khalyomede
      &lt;/a&gt; / &lt;a href="https://github.com/khalyomede/gulp-sharp-responsive"&gt;
        gulp-sharp-responsive
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A gulp plugin to generate responsives images.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
gulp-sharp-responsive&lt;/h1&gt;
&lt;p&gt;A gulp plugin to generate responsives images.&lt;/p&gt;
&lt;h2&gt;
Summary&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/khalyomede/gulp-sharp-responsive/master/#about"&gt;About&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/khalyomede/gulp-sharp-responsive/master/#features"&gt;Features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/khalyomede/gulp-sharp-responsive/master/#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/khalyomede/gulp-sharp-responsive/master/#examples"&gt;Examples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/khalyomede/gulp-sharp-responsive/master/#options"&gt;Options&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
About&lt;/h2&gt;
&lt;p&gt;I make web apps and I often need to generate images of multi formats and size from a single image. For example, an image "lion.jpeg", that is declined like this:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;lion-sm.jpeg&lt;/li&gt;
&lt;li&gt;lion-sm.webp&lt;/li&gt;
&lt;li&gt;lion-sm.avif&lt;/li&gt;
&lt;li&gt;lion-lg.jpeg&lt;/li&gt;
&lt;li&gt;lion-lg.webp&lt;/li&gt;
&lt;li&gt;lion-lg.avif&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Sharp can do this, and since I use Gulp for my everyday tasks, I created a plugin to automatize this task.&lt;/p&gt;
&lt;h2&gt;
Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Based on &lt;a href="https://github.com/lovell/sharp"&gt;Sharp&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Takes options to generate images by sizes and format&lt;/li&gt;
&lt;li&gt;Supports theses formats
&lt;ul&gt;
&lt;li&gt;jpeg&lt;/li&gt;
&lt;li&gt;png&lt;/li&gt;
&lt;li&gt;gif&lt;/li&gt;
&lt;li&gt;webp&lt;/li&gt;
&lt;li&gt;avif&lt;/li&gt;
&lt;li&gt;heif&lt;/li&gt;
&lt;li&gt;tiff&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Can pass Sharp specific options to customize even more the image generation&lt;/li&gt;
&lt;li&gt;Written in TypeScript, so you get type hints for the options&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Installation&lt;/h2&gt;
&lt;p&gt;In your terminal:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell js-code-highlight"&gt;
&lt;pre&gt;npm install --save-dev gulp-sharp-responsive&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;With Yarn:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell js-code-highlight"&gt;
&lt;pre&gt;yarn add --dev gulp-sharp-responsive&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
Examples&lt;/h2&gt;
&lt;p&gt;Sidenote: all the following example uses the TS version of gulpfile. This is why you will see…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/khalyomede/gulp-sharp-responsive"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;Happy optimizations!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>node</category>
      <category>tutorial</category>
      <category>productivity</category>
    </item>
    <item>
      <title>#7 of 100DaysOfCode</title>
      <author>atulit023</author>
      <pubDate>Sun, 18 Apr 2021 14:25:29 +0000</pubDate>
      <link>https://dev.to/icecoffee/7-of-100daysofcode-2lbi</link>
      <guid>https://dev.to/icecoffee/7-of-100daysofcode-2lbi</guid>
      <description>&lt;p&gt;Seventh Day.&lt;br&gt;
😄 Today I learned some really nice features that React provides and I learned how to include Tailwind CSS in a Next.js application. &lt;/p&gt;

&lt;p&gt;Anyway here are my today's learnings:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Render props method&lt;/strong&gt; 
In the continuation of the &lt;a href="https://dev.to/icecoffee/6-of-100daysofcode-47ge"&gt;HOC&lt;/a&gt; that I learned yesterday, today I learned more about the render prop method that can be used to optimize our code.

&lt;ul&gt;
&lt;li&gt;It's a pretty long concept so here is a gist:
A component with a  render prop takes a function that returns a React element and calls it instead of implementing its own rendering logic.&lt;/li&gt;
&lt;li&gt;In layman's terms 
Think of render props as a component that surrounds our existing component and provides our existing component property and values it can use.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Context and useContext() hooks&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;This API was designed to share data across the multiple layers of child components without using props drilling.&lt;/li&gt;
&lt;li&gt;This API contains a Provider to which we can pass a value that can be accessed by all its child components.&lt;/li&gt;
&lt;li&gt;we also need a reference to this Context that we created that we need to pass in useContext() as an argument to access the values given to the provider.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Components styling&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;I haven't used it by myself at all till now but I learned how to include Tailwind CSS in a Next js project.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;I learned about "dev dependencies" inside the package.json file.&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;@apply&lt;/em&gt; directive offered by Tailwind CSS to combine lots of different small classes to make a big usable class.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can check out &lt;a href="https://dev.to/icecoffee/6-of-100daysofcode-47ge"&gt;HOC&lt;/a&gt; (Higher Order Components) in my yesterday's post if you wanna know more.😄&lt;/p&gt;

&lt;p&gt;If any would like to suggest me something since I'm new to React and Next.js or if there are some mistakes in the post, please let me know.&lt;br&gt;
I'll really appreciate that.&lt;/p&gt;

&lt;p&gt;Thanks for reading it.😊&lt;br&gt;
Have a beautiful day.🌼&lt;/p&gt;

</description>
      <category>react</category>
      <category>100daysofcode</category>
      <category>nextjs</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Richardson Maturity Model</title>
      <author>Ahmed Ehab Abdul-Aziz</author>
      <pubDate>Sun, 18 Apr 2021 13:54:11 +0000</pubDate>
      <link>https://dev.to/ahmedabdulaziz/richardson-maturity-model-237l</link>
      <guid>https://dev.to/ahmedabdulaziz/richardson-maturity-model-237l</guid>
      <description>&lt;h2&gt;
  &lt;a href="#are-you-restful"&gt;
  &lt;/a&gt;
  Are you RESTful?
&lt;/h2&gt;

&lt;p&gt;So, right now everyone and their mother is creating REST APIs. However, are all REST APIs created as equals?&lt;br&gt;
As I said in my &lt;a href="https://ahmedabdulaziz.com/rest-fundamentals"&gt;rest fundamentals article&lt;/a&gt;, &lt;strong&gt;Roy Fielding&lt;/strong&gt; the creator of REST &lt;a href="https://roy.gbiv.com/untangled/2008/rest-apis-must-be-hypertext-driven"&gt;is &lt;em&gt;getting frustrated by the number of people calling any HTTP-based interface a REST API&lt;/em&gt;&lt;/a&gt;.&lt;br&gt;
Nonetheless, a black or white scale for whether an API is RESTful can be misleading. Thus, &lt;strong&gt;Leonard Richardson&lt;/strong&gt; designed a way to define how much an API conforms to the RESTful standards, therefore creating the Richardson Maturity Model or RMM.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#rmm"&gt;
  &lt;/a&gt;
  RMM
&lt;/h2&gt;

&lt;p&gt;RMM aims to describe a specific grade for how much an API conforms to the RESTful standards. Maturity here means conformity to RESTful standards.&lt;br&gt;
It has 4 levels of maturity levels from level 0 to level 3.&lt;/p&gt;

&lt;p&gt;The great thing is that it doesn't shun away from any API that is not fully RESTful plus it has some specific measurements that will allow engineers to easily assess how scalable by RESTful standards are their endpoints and what can be improved to reach a higher level.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AA-j6zs---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6zxyn2wx79f9xojzgi1r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AA-j6zs---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6zxyn2wx79f9xojzgi1r.png" alt="RMM Model"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#level-0-swamp-of-pox"&gt;
  &lt;/a&gt;
  Level 0 (Swamp of POX)
&lt;/h2&gt;

&lt;p&gt;In this level, a single URI can serve multiple resources and actions, HTTP verbs are not used correctly (mostly only POST is used).&lt;/p&gt;

&lt;p&gt;For example, you can have a URI that looks like this &lt;code&gt;/usersManagement&lt;/code&gt; which will serve to query, update, delete and create users using only &lt;code&gt;POST&lt;/code&gt; HTTP verb. To differentiate between the various obscure actions that endpoint can do at this level, the body of the request will have to have the specific requirements of the request.&lt;/p&gt;

&lt;p&gt;This level is not considered RESTful by RMM and it mostly exists in the SOAP Web Services world where XML is used extensively. That's why it's called the Swamp of POX as POX means Plain Old XML and the level of coupling and obscurity of the endpoints in this level led to it being called a Swamp.&lt;/p&gt;

&lt;p&gt;I have experienced integrating with SOAP services and let me tell you that this level is very bad and leads to a lot of confusion and mistakes.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#level-1-resources"&gt;
  &lt;/a&gt;
  Level 1 (Resources)
&lt;/h2&gt;

&lt;p&gt;At level 1, we will use different URIs for different resources but still with only using one HTTP verb (generally &lt;code&gt;POST&lt;/code&gt; as well), leading to better decoupling in the API.&lt;/p&gt;

&lt;p&gt;So using the previous example, instead of having one &lt;code&gt;/usersManagement&lt;/code&gt; endpoint, we will have &lt;code&gt;/usersCreate&lt;/code&gt;, &lt;code&gt;/usersUpdate&lt;/code&gt;, &lt;code&gt;/usersDelete&lt;/code&gt; and &lt;code&gt;/usersQuery&lt;/code&gt; while using only &lt;code&gt;POST&lt;/code&gt; HTTP verb for all of them, we won't be using the body to define the action, though.&lt;/p&gt;

&lt;p&gt;Although, this is much better than the previous level. This is still not considered RESTful enough by RMM. I have worked at the start of my career on a project that had an API that would mostly reside in this level and it was extremely cumbersome to keep creating and integrating with APIs like this. Furthermore, the whole suffix I used in this example is not standardized, it was basically whatever the developer would think is correct, which of course would differ wildly per developer.&lt;/p&gt;

&lt;p&gt;For example, someone would query users with &lt;code&gt;/usersQuery&lt;/code&gt; but for address querying the endpoint would be &lt;code&gt;/addressRetrieval&lt;/code&gt; and someone else would retrieve departments using &lt;code&gt;/getDepartments&lt;/code&gt; leading to an extremely fragmented API.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#level-2-http-verbs"&gt;
  &lt;/a&gt;
  Level 2 (HTTP Verbs)
&lt;/h2&gt;

&lt;p&gt;Here we are at a level that is considered RESTful by a lot of RMM advocates. However, Roy Fielding doesn't consider it RESTful enough. I side with the opinion that this level is RESTful and can provide the requirements of a RESTful API.&lt;/p&gt;

&lt;p&gt;Anyway, now we will put HTTP verbs to actual use. Let's use the previous example, now the users will have the following endpoint &lt;code&gt;/users&lt;/code&gt;. Then to retrieve users we will create a request with &lt;code&gt;GET&lt;/code&gt; HTTP verb to the users endpoint. To delete a user we will use &lt;code&gt;DELETE&lt;/code&gt; HTTP verb in the request to indicate the action we want to take. To update you can use &lt;code&gt;PUT&lt;/code&gt; or &lt;code&gt;PATCH&lt;/code&gt;. We can use &lt;code&gt;GET&lt;/code&gt;, &lt;code&gt;POST&lt;/code&gt;, &lt;code&gt;PUT&lt;/code&gt;, &lt;code&gt;DELETE&lt;/code&gt;, and more for other endpoints like that of address or departments and so on.&lt;/p&gt;

&lt;p&gt;The majority of Web APIs never pass this level and generally we that's not a bad thing, this level can provide almost all of RESTful requirements and the only thing it is lacking is a self-descriptive API, where the client doesn't need to be provided beforehand with how to do different actions on the resource it retrieves. Thus it will require documentation too to define the required endpoints to do various actions on the retrieved entity.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#level-3-hateoas"&gt;
  &lt;/a&gt;
  Level 3 (HATEOAS)
&lt;/h2&gt;

&lt;p&gt;Finally, we arrive at the last level here, in this level the HATEOAS principles are used.&lt;br&gt;
When we get the users from &lt;code&gt;/users&lt;/code&gt; endpoint with &lt;code&gt;GET&lt;/code&gt; HTTP verb the response for getting a user would look like the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Ahmed Ehab Abdulaziz"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"email"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"ahmed.ehab.abdulaziz@gmail.com"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"links"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"self"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"href"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"https://ahmedabdulaziz.com/user/1"&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"update"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"href"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"https://ahmedabdulaziz.com/user/1"&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"delete"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"href"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"https://ahmedabdulaziz.com/user/1"&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"report"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"href"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"https://ahmedabdulaziz.com/user/1/report/default"&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"tax-report"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"href"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"https://ahmedabdulaziz.com/user/1/report/tax"&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see, we don't need to have the update, delete, report or tax-report actions to be hardcoded in our code.&lt;br&gt;
When we get the users array, we will be getting the API to do the various actions with the endpoint per user through the response as in the example.&lt;/p&gt;

&lt;p&gt;I don't want to go over HATEOAS a lot as it deserves its article so you can find more about it in &lt;a href="https://ahmedabdulaziz.com/hateoas"&gt;my article here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Lastly, this level is of course considered to be RESTful by everyone including &lt;strong&gt;Roy Fielding&lt;/strong&gt;, &lt;a href="https://roy.gbiv.com/untangled/2008/rest-apis-must-be-hypertext-driven"&gt;who consider it as a prerequisite to having a RESTful API&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#which-level-should-i-develop-for"&gt;
  &lt;/a&gt;
  Which level should I develop for?
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Level 0 and 1&lt;/strong&gt; are still in use today and a lot of web applications are being developed with only Level 0 or 1. However, I would say for almost every greenfield web API today, at least &lt;strong&gt;level 2&lt;/strong&gt; should be followed, regardless of calling it a RESTful API or not, it leads to a cleaner API and it is not putting overhead on the developers or the API architect.&lt;/p&gt;

&lt;p&gt;As for level 3, I believe you need to consider the bandwidth of the users. Also, the main purpose of HATEOAS is to deal with changes in the API easily, for internal applications this has never been an issue and generally, the new APIs are adapted to the old APIs, the other way around is much harder to happen for this type of projects. Besides, I have seen that a lot of developers don't really understand or even know what HATEOAS is, so some training might be required to onboard them.&lt;br&gt;
However for SaaS-based projects or other projects with an external API that's exposed to a plethora of different systems, HATEOAS and Level 3 can be of immense practicality, you can easily swap out old APIs with new APIs without having to change a line of code in the integrating services.&lt;/p&gt;

&lt;p&gt;P.S. You should totally read &lt;strong&gt;Roy Fielding&lt;/strong&gt; article that mentions that REST APIs must be hypertext, the discussions there are extremely interesting. You can visit it from &lt;a href="https://roy.gbiv.com/untangled/2008/rest-apis-must-be-hypertext-driven"&gt;here&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>rest</category>
      <category>architecture</category>
      <category>webdev</category>
      <category>api</category>
    </item>
    <item>
      <title>Publishing a blog using ReactJs , NodeJs and mongoDB</title>
      <author>irfanukani</author>
      <pubDate>Sun, 18 Apr 2021 13:53:38 +0000</pubDate>
      <link>https://dev.to/irfanukani/publishing-a-blog-using-reactjs-nodejs-and-mongodb-1ici</link>
      <guid>https://dev.to/irfanukani/publishing-a-blog-using-reactjs-nodejs-and-mongodb-1ici</guid>
      <description>&lt;p&gt;I recently created a blog using react Js and Mongo dB. It was a supper fun to do as I wanted my own blog website. &lt;/p&gt;

&lt;p&gt;You can visit my blog here : &lt;a href="https://irfanwritess.web.app"&gt;https://irfanwritess.web.app&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I implemented a subscription and view system too. &lt;/p&gt;

&lt;p&gt;Currently I'm looking for developing a content management system. What would be your favorite stack to do so? Leave it in the comment section! &lt;/p&gt;

&lt;p&gt;Every feedbacks appreciated! &lt;/p&gt;

</description>
      <category>react</category>
      <category>node</category>
      <category>mongodb</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Phase 1 Blog: Mass Assignment and Metaprogramming saved my life. </title>
      <author>Sumei C Kom</author>
      <pubDate>Sun, 18 Apr 2021 13:39:28 +0000</pubDate>
      <link>https://dev.to/sumeikom/phase-1-blog-mass-assignment-and-metaprogramming-saved-my-life-31g4</link>
      <guid>https://dev.to/sumeikom/phase-1-blog-mass-assignment-and-metaprogramming-saved-my-life-31g4</guid>
      <description>&lt;p&gt;Phase 1 is coming to a close and we were tasked with our CLI final project. For our final project, we were entrusted with creating a CLI project from scratch by using an API or scraping. &lt;br&gt;
When brainstorming what I wanted to create for my project I knew I wanted to do something anime-related. I wanted to create a CLI application that could pull along the lines by character or by anime title. I spoke to my cohort lead and she recommended that I started with an API rather than scraping. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Finding my API&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Finding the perfect API was challenging. Many APIs were close to what I wanted but not quite. Some APIs were either too complicated or lacking in providing the kind of information that I needed. At first, I thought I found what I needed. I found the Jikan API, which was an open-source PHP &amp;amp; REST API for the “most active online anime + manga community and database.” It seemed like a great fit but when conducting further research about this API it seemed better suited for different languages like Javascript. This API was also too intimidating for me because there were so many features such as searching by anime, manga, season, user, club, history, etc. I decided against this API for this project but maybe I’ll tackle it for fun later.&lt;/p&gt;

&lt;p&gt;Finally, I found the perfect API for me, the Studio Ghibli API. It was still anime-related by cataloged the people, places, and things found in the worlds of Ghibli but also it allowed for the kind of project I wanted to make. I wanted to create a project where I provided the user with different lists and they can pick what they want to learn more about. This API fit exactly what I wanted to do because it had many endpoints and huge arrays full of details about Studio Ghibli. &lt;/p&gt;

&lt;p&gt;After finding the API I wanted to use it was time to start coding! Here are a couple of things I would like to talk about that I had to implement to reach my final project:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Pushing Work to GitHub literally saved my life&lt;/li&gt;
&lt;li&gt;The holy grail that is Keyword Arguments and Mass Assignment&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Pushing Work to GitHub literally saved my life&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;When I began my project, my cohort lead showed me how to upload all of my work to GitHub. She talked about how this not only showed the progress of the many steps of building my CLI but it would come in handy if my code ever broke. This problem did happen to me and I was racking my brain trying to get my code to what it was before. I must have deleted something important by accident because no matter what I was doing my code refused to work. Luckily I remembered that I had my previous version on GitHub and I retraced my steps from there. After grabbing my old code from GitHub my code worked again! Honestly, I am still not 100% sure what went wrong but I’m really glad that I was able to get my project back up and running. It would have been a disaster and a waste of a week if I wasn’t able to restore my project. &lt;/p&gt;

&lt;p&gt;If you take anything from this blog is that you save all your hard work to GitHub and that you push frequently. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The holy grail that is Mass Assignment and Metaprogramming&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In my project I wanted you to be able to search by either film or by a specific character. These different classes had different variables that it needed to pull from its array. From my Film class, I only wanted to pull title, description, release_date, original_title, and director. For my Person class, I only wanted to pull a name, gender, age, eye color, and hair color. I could have hard-coded each class but that would become very tedious. After speaking to my cohort lead about it she suggested metaprogramming and mass assignment. &lt;/p&gt;

&lt;p&gt;Hard-coding is very tedious and very prone to breaking. At first my code looked like:&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;@@all = []&lt;br&gt;
attr_accessor :name, :gender, :age, :eye_color, :hair_color&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;



&lt;p&gt;&lt;code&gt;def initialize&lt;br&gt;
@name = name&lt;br&gt;
@gender = gender&lt;br&gt;
@age = age&lt;br&gt;
@eye_color = eye_color&lt;br&gt;
@hair_color = hair_color&lt;br&gt;
end&lt;br&gt;
@@all &amp;lt;&amp;lt; self&lt;br&gt;
End&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;But through the key/value pair, made my code much more flexible.&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;def initialize(person_hash)&lt;br&gt;
        person_hash.each do |key, value| &lt;br&gt;
            self.send("#{key}=", value) if self.respond_to?("#{key}=") &lt;br&gt;
        end &lt;br&gt;
        save &lt;br&gt;
    end&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;By doing this, I did not have to write out every piece of information I wanted to pull from my API.&lt;/p&gt;

&lt;p&gt;Thank you so much for taking your time for reading my blog, I hope you learned from my mistakes or found a better way of coding. If you want to see the final project please check out:&lt;br&gt;
&lt;a href="https://github.com/sumeikom/CLI_Final_Project"&gt;https://github.com/sumeikom/CLI_Final_Project&lt;/a&gt; &lt;br&gt;
Thank you so much! &lt;/p&gt;

</description>
      <category>ruby</category>
      <category>beginners</category>
    </item>
    <item>
      <title>How to render conditionals to action view with application helpers in Ruby on Rails</title>
      <author>AshakaE</author>
      <pubDate>Sun, 18 Apr 2021 13:37:03 +0000</pubDate>
      <link>https://dev.to/ashakae/how-to-render-conditionals-to-action-view-with-application-helpers-in-ruby-on-rails-4oj9</link>
      <guid>https://dev.to/ashakae/how-to-render-conditionals-to-action-view-with-application-helpers-in-ruby-on-rails-4oj9</guid>
      <description>&lt;p&gt;&lt;strong&gt;PROBLEM&lt;/strong&gt;: Writing if-else statements in your rails action view template does not look good or professional. You can use partials but they are still &lt;strong&gt;html.erb&lt;/strong&gt; which still is an action view. Take a look at the code below;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#menuhtmlerb"&gt;
  &lt;/a&gt;
  menu.html.erb
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight erb"&gt;&lt;code&gt;   &lt;span class="cp"&gt;&amp;lt;%&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;controller_name&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;'groups'&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;action_name&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;'show'&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"font-bold mr-3 text-md"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;small&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"font-medium mr-1"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;created by &lt;span class="nt"&gt;&amp;lt;/small&amp;gt;&lt;/span&gt; &lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;project&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;name&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
   &lt;span class="cp"&gt;&amp;lt;%&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight erb"&gt;&lt;code&gt; &lt;span class="cp"&gt;&amp;lt;%&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;upto&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;li&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"p-4 m-1"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
     &lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;radio_button&lt;/span&gt; &lt;span class="ss"&gt;:icon&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="vi"&gt;@icons&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;'link'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="ss"&gt;class: &lt;/span&gt;&lt;span class="s2"&gt;"focus:ring-secondary h-4 w-4 text-secondary border-gray-300"&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
     &lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;label&lt;/span&gt; &lt;span class="ss"&gt;:icon&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;value: &lt;/span&gt;&lt;span class="vi"&gt;@icons&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;'link'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="ss"&gt;class: &lt;/span&gt;&lt;span class="s2"&gt;"w-2 h-2 py-4"&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="vi"&gt;@icons&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;'link'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"w-14 h-14"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
       &lt;span class="cp"&gt;&amp;lt;%&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class="cp"&gt;&amp;lt;%&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and &lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#partialhtmlerb"&gt;
  &lt;/a&gt;
  _partial.html.erb
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight erb"&gt;&lt;code&gt;   &lt;span class="cp"&gt;&amp;lt;%&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;logged_in?&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"/users/&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;current_user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;id&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="cp"&gt;&amp;lt;%&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"/"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="cp"&gt;&amp;lt;%&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A much cleaner solution would be to use the helper methods inside &lt;strong&gt;application_helper.rb&lt;/strong&gt; to render these conditionals.&lt;/p&gt;

&lt;p&gt;Inside the helper file, create a method, set an empty string to a variable, and write your conditional statement like you would write it in ruby. Remove the erb tags and wrap HTML code in strings. Now push the string with your code into the variable and set it to &lt;em&gt;variable.html_safe&lt;/em&gt;. example;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#applicationhelperrb"&gt;
  &lt;/a&gt;
  application_helper.rb
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;   &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;show_proj_name&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;project&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;controller_name&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;'groups'&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;action_name&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;'show'&lt;/span&gt;
      &lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s2"&gt;"&amp;lt;p class='font-bold mr-3 text-md'&amp;gt;
                  &amp;lt;small class='font-medium mr-1'&amp;gt;
                  created by &amp;lt;/small&amp;gt;  &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;project&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &amp;lt;/p&amp;gt;"&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;html_safe&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;show_icons&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ico&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt;
    &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;upto&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
      &lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s2"&gt;"&amp;lt;li class='p-4 m-1'&amp;gt;
                  &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;ico&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;radio_button&lt;/span&gt; &lt;span class="ss"&gt;:icon&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="vi"&gt;@icons&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;'link'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="ss"&gt;class: &lt;/span&gt;&lt;span class="s1"&gt;'focus:ring-secondary h-4 w-4 text-secondary border-gray-300'&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
      &lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;ico&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;label&lt;/span&gt; &lt;span class="ss"&gt;:icon&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;value: &lt;/span&gt;&lt;span class="vi"&gt;@icons&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;'link'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="ss"&gt;class: &lt;/span&gt;&lt;span class="s1"&gt;'w-2 h-2 py-4'&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
                    &lt;span class="n"&gt;image_tag&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vi"&gt;@icons&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;'link'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="ss"&gt;class: &lt;/span&gt;&lt;span class="s1"&gt;'w-14 h-14'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                  &lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
      &lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s1"&gt;'&amp;lt;/li&amp;gt;'&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;html_safe&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;navlink&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt;
    &lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;logged_in?&lt;/span&gt;
                 &lt;span class="s2"&gt;"&amp;lt;a href='/users/ &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;current_user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;id&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;'&amp;gt;"&lt;/span&gt;
               &lt;span class="k"&gt;else&lt;/span&gt;
                 &lt;span class="s2"&gt;"&amp;lt;a href='/'&amp;gt;"&lt;/span&gt;
               &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;html_safe&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Because they're functions that need to be run, you call them directly in the action view with the erb tags that executes ruby code &lt;strong&gt;&amp;lt;%= %&amp;gt;&lt;/strong&gt;. see the finished result;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#menuhtmlerb"&gt;
  &lt;/a&gt;
  menu.html.erb
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight erb"&gt;&lt;code&gt;   &lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;show_proj_name&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;project&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;small&gt;&lt;br&gt;
&lt;strong&gt;N.B. &lt;/strong&gt; &lt;em&gt;f is passed as an argument because, in the action view, the form was built with that variable.&lt;/em&gt;&lt;br&gt;
&lt;/small&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight erb"&gt;&lt;code&gt;   &lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;show_icons&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#partialerb"&gt;
  &lt;/a&gt;
  _partial.erb
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight erb"&gt;&lt;code&gt;   &lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;navlink&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;logged_in?&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;&lt;br&gt;
You can now see less bulky and much cleaner code in your action views and, focus on writing more HTML code.&lt;/p&gt;

&lt;p&gt;Thanks for reading. &lt;/p&gt;

</description>
      <category>ruby</category>
      <category>rails</category>
      <category>webdev</category>
    </item>
  </channel>
</rss>
