<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Global Beverage Multipacks Market Overview: 2020-2026
</title>
      <author>Ram Vasekar</author>
      <pubDate>Fri, 16 Apr 2021 12:26:41 +0000</pubDate>
      <link>https://dev.to/ram_maximize/global-beverage-multipacks-market-overview-2020-2026-3al2</link>
      <guid>https://dev.to/ram_maximize/global-beverage-multipacks-market-overview-2020-2026-3al2</guid>
      <description>&lt;p&gt;Global Beverage Multipacks Market . 2019 has been considered as base year to estimate the market and same is forecasted through 2021 to 2026 by giving special focus and different treatment to 2020. The report forecast that by value Beverage Multipacks market will touch USD XX Bn. by 2026. The report has covered the market drivers, restraints and fluctuations in demand in different countries by region with special focus on demand and supply from China, India, Taiwan in Asia and USA, France, UK, Russia in western countries. Government regulations, different government’s special incentives and trade agreements in countries are going to have moderate impact on the demand and supply on Beverage Multipacks market.&lt;/p&gt;

&lt;p&gt;Global Beverage Multipacks Market&lt;/p&gt;

&lt;p&gt;The Beverage Multipacks faced several challenges in 2020 including Covid lock down and sudden decrease in demand for semiconductors, however, the demand is expected to normalize in 2021 and is expected to pick up in 2022, which is covered in the report in the growth drivers chapter.&lt;/p&gt;

&lt;p&gt;Request For View Sample Beverage Multipacks Market Report Page : &lt;a href="https://www.maximizemarketresearch.com/request-sample/86024"&gt;https://www.maximizemarketresearch.com/request-sample/86024&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Beverage Multipacks Market report is Segmented by&lt;/p&gt;

&lt;p&gt;Global Beverage Multipacks Market 2&lt;/p&gt;

&lt;p&gt;Global Beverage Multipacks Market Segmentation by Region&lt;/p&gt;

&lt;p&gt;• North America:&lt;br&gt;
o US&lt;br&gt;
o Canada&lt;br&gt;
o Mexico&lt;br&gt;
• South America&lt;br&gt;
o Brazil&lt;br&gt;
o Argentina&lt;br&gt;
o Colombia&lt;br&gt;
o Rest of South America&lt;br&gt;
• Europe&lt;br&gt;
o UK&lt;br&gt;
o Germany&lt;br&gt;
o France&lt;br&gt;
o Spain&lt;br&gt;
o Italy&lt;br&gt;
o Sweden&lt;br&gt;
o CIS countries&lt;br&gt;
o Rest of Europe&lt;br&gt;
• APAC&lt;br&gt;
o China&lt;br&gt;
o India&lt;br&gt;
o South Korea&lt;br&gt;
o Japan&lt;br&gt;
o Australia&lt;br&gt;
o Rest of APAC&lt;br&gt;
o ASEAN&lt;br&gt;
 Indonesia&lt;br&gt;
 Malaysia&lt;br&gt;
 Singapore&lt;br&gt;
 Philippines&lt;br&gt;
 Thailand&lt;br&gt;
 Vietnam&lt;br&gt;
• Middle East &amp;amp; Africa&lt;br&gt;
o GCC Countries&lt;br&gt;
o South Africa&lt;br&gt;
o Nigeria&lt;br&gt;
o Egypt&lt;br&gt;
o Rest of MEA&lt;br&gt;
• Latin America&lt;br&gt;
o Mexico&lt;br&gt;
o Brazil&lt;br&gt;
o Rest of Latin America&lt;/p&gt;

&lt;p&gt;Global Beverage Multipacks Market Major Players&lt;/p&gt;

&lt;p&gt;• World Label Holdings Inc.&lt;br&gt;
• Graphic Packaging&lt;br&gt;
• Pack Service S.A.&lt;br&gt;
• Pry-Pak Inc.&lt;br&gt;
• MeadWestvaco Corporation&lt;br&gt;
• Cott Beverages Ltd.&lt;br&gt;
• WestRock Company&lt;br&gt;
• Hi-Cone&lt;br&gt;
• Mayr-Melnhof Packaging&lt;br&gt;
• Coveris Holdings Sa&lt;br&gt;
• Ceisa Semo&lt;br&gt;
• Clondalkin Group&lt;br&gt;
• RKW&lt;br&gt;
• Amcor Plc&lt;br&gt;
• Berry Global Inc.&lt;br&gt;
• Plastotecnica SpA&lt;br&gt;
• Clearpack group&lt;br&gt;
• Sarkina&lt;br&gt;
• Baroda Packaging&lt;/p&gt;

&lt;p&gt;Do Inquiry Before Purchasing Market Beverage Multipacks Report Here : &lt;a href="https://www.maximizemarketresearch.com/inquiry-before-buying/86024"&gt;https://www.maximizemarketresearch.com/inquiry-before-buying/86024&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;By region, Beverage Multipacks Market is segmented by North America, South America, Europe, Middle East and APAC. The APAC market has further given the deep analysis of ASEAN countries separately in the report.&lt;/p&gt;

&lt;p&gt;The report has profiled key players in the market by their size and presence by regions. Since, there are limitation to profile all the kay player, representation is given to companies by region, sales revenue, expenditure on technology, expansion plans, investments received, involved in M&amp;amp;A.&lt;/p&gt;

&lt;p&gt;Browse Complete Beverage Multipacks Report details with ToC and List Of Figures Here: &lt;a href="https://www.maximizemarketresearch.com/market-report/global-beverage-multipacks-market/86024/"&gt;https://www.maximizemarketresearch.com/market-report/global-beverage-multipacks-market/86024/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;About Maximize Market Research:&lt;/p&gt;

&lt;p&gt;Maximize Market Research has served esteemed clients including Yamaha, Boeing, Sensata, Etnyre, Canada, ALCOR M&amp;amp;A, Microsoft, Harman, and other 200 MNCs worldwide. The Company provides B2B and B2C market research on 5000 high growth emerging technologies &amp;amp; opportunities in Transportation, Chemical, Healthcare, Pharmaceuticals, Electronics &amp;amp; Communications, Internet of Things, Food and Beverages, Aerospace and Defense and other manufacturing sectors.&lt;br&gt;
We, at Maximize Market Research, are a strong unified team of industry specialists and analysts across sectors to ensure entire Industry ecosystem is taken in perspective, factoring all recent development, latest trends and futuristic – the technological impact of uniquely specific industries. In line with the agreed scope and objective of the study, our approach is uniquely custom detailed&lt;/p&gt;

&lt;p&gt;Contact Us:&lt;br&gt;
Maximize Market Research Pvt ltd.&lt;br&gt;
Email: &lt;a href="mailto:sales@maximizemarketresearch.com"&gt;sales@maximizemarketresearch.com&lt;/a&gt;&lt;br&gt;
Website: &lt;a href="http://www.maximizemarketresearch.com"&gt;www.maximizemarketresearch.com&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Global Central Drive Thickener Market – Industry Analysis and Forecast (2020-2026)</title>
      <author>Ram Vasekar</author>
      <pubDate>Fri, 16 Apr 2021 12:22:55 +0000</pubDate>
      <link>https://dev.to/ram_maximize/global-central-drive-thickener-market-industry-analysis-and-forecast-2020-2026-323n</link>
      <guid>https://dev.to/ram_maximize/global-central-drive-thickener-market-industry-analysis-and-forecast-2020-2026-323n</guid>
      <description>&lt;p&gt;Global Central Drive Thickener Market . 2019 has been considered as base year to estimate the market and same is forecasted through 2021 to 2026 by giving special focus and different treatment to 2020. The report forecast that by value Central Drive Thickener market will touch USD XX Bn. by 2026. The report has covered the market drivers, restraints and fluctuations in demand in different countries by region with special focus on demand and supply from China, India, Taiwan in Asia and USA, France, UK, Russia in western countries. Government regulations, different government’s special incentives and trade agreements in countries are going to have moderate impact on the demand and supply on Central Drive Thickener market.&lt;/p&gt;

&lt;p&gt;Global Central Drive Thickener Market&lt;/p&gt;

&lt;p&gt;The Central Drive Thickener faced several challenges in 2020 including Covid lock down and sudden decrease in demand for semiconductors, however, the demand is expected to normalize in 2021 and is expected to pick up in 2022, which is covered in the report in the growth drivers chapter.&lt;/p&gt;

&lt;p&gt;Request For View Sample Central Drive Thickener Market Report Page : &lt;a href="https://www.maximizemarketresearch.com/request-sample/85874"&gt;https://www.maximizemarketresearch.com/request-sample/85874&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Central Drive Thickener Market report is Segmented by&lt;/p&gt;

&lt;p&gt;Global Central Drive Thickener Market 2&lt;/p&gt;

&lt;p&gt;Global Central Drive Thickener Market, by Region&lt;/p&gt;

&lt;p&gt;• North America&lt;br&gt;
• Europe&lt;br&gt;
• Asia Pacific&lt;br&gt;
• Middle East &amp;amp; Africa&lt;br&gt;
• South America&lt;/p&gt;

&lt;p&gt;Key Players of the Global Central Drive Thickener Market&lt;/p&gt;

&lt;p&gt;• Bio Tech Envirocare Systems Pvt. Ltd.&lt;br&gt;
• EUROPELEC&lt;br&gt;
• Hook Service s.r.l.&lt;br&gt;
• Hubert Stavoren B.V.&lt;br&gt;
• Outotec Oyj&lt;br&gt;
• Parason Machinery Pvt. Ltd.&lt;br&gt;
• SAVI S.r.l.&lt;br&gt;
• SERECO S.r.l.&lt;br&gt;
• Shandong Xinhai Mining Technology &amp;amp; Equipment Inc&lt;br&gt;
• Shivpad Thickeners&lt;/p&gt;

&lt;p&gt;Do Inquiry Before Purchasing Market Central Drive Thickener Report Here : &lt;a href="https://www.maximizemarketresearch.com/inquiry-before-buying/85874"&gt;https://www.maximizemarketresearch.com/inquiry-before-buying/85874&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;By region, Central Drive Thickener Market is segmented by North America, South America, Europe, Middle East and APAC. The APAC market has further given the deep analysis of ASEAN countries separately in the report.&lt;/p&gt;

&lt;p&gt;The report has profiled key players in the market by their size and presence by regions. Since, there are limitation to profile all the kay player, representation is given to companies by region, sales revenue, expenditure on technology, expansion plans, investments received, involved in M&amp;amp;A.&lt;/p&gt;

&lt;p&gt;Browse Complete Central Drive Thickener Report details with ToC and List Of Figures Here: &lt;a href="https://www.maximizemarketresearch.com/market-report/global-central-drive-thickener-market/85874/"&gt;https://www.maximizemarketresearch.com/market-report/global-central-drive-thickener-market/85874/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;About Maximize Market Research:&lt;/p&gt;

&lt;p&gt;Maximize Market Research has served esteemed clients including Yamaha, Boeing, Sensata, Etnyre, Canada, ALCOR M&amp;amp;A, Microsoft, Harman, and other 200 MNCs worldwide. The Company provides B2B and B2C market research on 5000 high growth emerging technologies &amp;amp; opportunities in Transportation, Chemical, Healthcare, Pharmaceuticals, Electronics &amp;amp; Communications, Internet of Things, Food and Beverages, Aerospace and Defense and other manufacturing sectors.&lt;br&gt;
We, at Maximize Market Research, are a strong unified team of industry specialists and analysts across sectors to ensure entire Industry ecosystem is taken in perspective, factoring all recent development, latest trends and futuristic – the technological impact of uniquely specific industries. In line with the agreed scope and objective of the study, our approach is uniquely custom detailed&lt;/p&gt;

&lt;p&gt;Contact Us:&lt;br&gt;
Maximize Market Research Pvt ltd.&lt;br&gt;
Email: &lt;a href="mailto:sales@maximizemarketresearch.com"&gt;sales@maximizemarketresearch.com&lt;/a&gt;&lt;br&gt;
Website: &lt;a href="http://www.maximizemarketresearch.com"&gt;www.maximizemarketresearch.com&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Why hiring Golang Development company from India is the best option?
</title>
      <author>Alexis Gilbert</author>
      <pubDate>Fri, 16 Apr 2021 12:20:21 +0000</pubDate>
      <link>https://dev.to/alexisdevs/why-hiring-golang-development-company-from-india-is-the-best-option-2n5l</link>
      <guid>https://dev.to/alexisdevs/why-hiring-golang-development-company-from-india-is-the-best-option-2n5l</guid>
      <description>&lt;p&gt;Since Golang was launched in 2009 it took a long way to get a significant place in the Developing community. However, by the time it has proven its place in concurrent programming.&lt;/p&gt;

&lt;p&gt;Often the beginner entrepreneurs have backend golang requirements and also have a significant budget to acquire the best talent across the globe but even having a strong backup of resources they cant get quality performance even after spending chunks of money and efforts after it.&lt;/p&gt;

&lt;p&gt;If we look at the global &lt;strong&gt;Golang development services&lt;/strong&gt;, India is emerging as a promising one-stop destination for all sorts of Golang development requirements, whether be it Golang mobile app development or full stack development with the Golang technology.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7NiYiDQq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lqxln9ihoxobife76mqf.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7NiYiDQq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lqxln9ihoxobife76mqf.jpeg" alt="Golang Development Services"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let’s discover what are some crucial factors which make India ranking at the top position in providing Golang Development companies.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#deployment-of-quality-resources"&gt;
  &lt;/a&gt;
  Deployment of quality resources:
&lt;/h1&gt;

&lt;p&gt;India has several Golang Development companies within the country itself. Therefore, if the potential companies have to sustain and have in-demand they have to top up their game and provide excellent resources to the service.&lt;/p&gt;

&lt;p&gt;This way to beat the competition the development companies must have to provide profound services so you should never worry regarding whether the resources will be worth enough the money you are spending or not because they will always be top of the game!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#saves-time-and-efforts"&gt;
  &lt;/a&gt;
  Saves time and efforts
&lt;/h1&gt;

&lt;p&gt;Hiring, training, and maintaining is a long and tedious process for employers and in such case, if your project doesn’t require much of the developing services, going through this entire process is clearly a waste of resources.&lt;/p&gt;

&lt;p&gt;To avoid such clumsy processes, hiring from a globally renowned Golang Development company is a comparatively convenient option as it saves your time efforts by providing exceptional results.&lt;/p&gt;

&lt;p&gt;Who doesn’t want that?&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#costeffective-hiring-solutions"&gt;
  &lt;/a&gt;
  Cost-effective Hiring solutions:
&lt;/h1&gt;

&lt;p&gt;The prices of European and American regions for Golang Development is quite expensive compared to East Europe and especially Indian Region.&lt;br&gt;
Once again the competition is so tight in India therefore prices have to be low or competitive to get ahead of other competitors.&lt;/p&gt;

&lt;p&gt;Apparently, often the Indian price ranges are tentatively less than half of the European developing companies are charging.&lt;/p&gt;

&lt;p&gt;This economic situation is proven to be advantageous to the Golang Development Service seekers.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#cultural-flexibility"&gt;
  &lt;/a&gt;
  Cultural Flexibility
&lt;/h1&gt;

&lt;p&gt;Most of the globally renowned and leading Golang Development Company in India is following Agile Culture, &lt;/p&gt;

&lt;p&gt;Yes, this is quite a popular culture in every leading fortune company around the globe.&lt;/p&gt;

&lt;p&gt;And imagine the Golang Development Service providers following the same professional culture can save you from doing a lot of efforts that you would have to do if you would have to face cultural differences!&lt;/p&gt;

&lt;p&gt;So who wouldn’t mind a little extra convenience!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#enormous-talent-pool"&gt;
  &lt;/a&gt;
  Enormous talent pool
&lt;/h1&gt;

&lt;p&gt;In Indian culture passing out from good  Engineering is considered a prestigious thing among Indian families therefore, since childhood they plan on providing higher education to their next generation.&lt;/p&gt;

&lt;p&gt;This upbringing naturally results in having expertise and high scale talent among Indian generations.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#exceptional-247-support"&gt;
  &lt;/a&gt;
  Exceptional 24/7 support
&lt;/h1&gt;

&lt;p&gt;In India, the IT sector is organized in such a way that they always have this belief about the industry that this is a time-sensitive industry if you don’t be there when your client wants you, he will turn his back to someone else.&lt;/p&gt;

&lt;p&gt;This keeps them always up with their game when it comes to serving their international clients with utmost dedication and hard work.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#english-speaking-programmers"&gt;
  &lt;/a&gt;
  English Speaking Programmers
&lt;/h1&gt;

&lt;p&gt;After USA, India is considered the second-largest English-speaking country where most of the people speak English fluently. &lt;/p&gt;

&lt;p&gt;The Golang Development companies in India always aspire fluent in English Golang Developers as they aim to serve international clients. Therefore, the hired experts are already been proficient with communication skills especially when it comes to English.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#all-golang-development-services-under-one-roof"&gt;
  &lt;/a&gt;
  All Golang Development services under one roof
&lt;/h1&gt;

&lt;p&gt;Most of the Golang Development Companies in India have a profoundly balanced blend of Golang Developers handling various functionalities like Golang AI development, Mobile app development, or Golang cloud and networking services.&lt;/p&gt;

&lt;p&gt;All of these functionalities under one roof that too with the flexibility of timezone, It’s like a cherry on the top!&lt;/p&gt;

&lt;p&gt;To wrap it up, there are multiple advantages of Hiring the &lt;strong&gt;Golang Development Services&lt;/strong&gt; from India. However, make sure you examine and verify the authenticity of the &lt;a href="https://www.bacancytechnology.com/golang-development"&gt;&lt;em&gt;Golang Development company&lt;/em&gt;&lt;/a&gt; by their past work and leverage their expert services by scheduling the interview with their senior Golang Developers and getting started with your business project! &lt;/p&gt;

</description>
      <category>devops</category>
      <category>go</category>
    </item>
    <item>
      <title>Insurtech Market To Witness The Highest Gains by 2025</title>
      <author>Shweta Karanjekar</author>
      <pubDate>Fri, 16 Apr 2021 12:19:37 +0000</pubDate>
      <link>https://dev.to/shwetakaranjek1/insurtech-market-to-witness-the-highest-gains-by-2025-3kne</link>
      <guid>https://dev.to/shwetakaranjek1/insurtech-market-to-witness-the-highest-gains-by-2025-3kne</guid>
      <description>&lt;p&gt;The global &lt;a href="https://www.millioninsights.com/industry-reports/global-insurtech-market/request-sample?utm_source=Dev&amp;amp;utm_medium=referral&amp;amp;utm_campaign=Shweta_16april2021"&gt;insurtech market&lt;/a&gt; size is anticipated to value USD 16.8 billion until 2025. It is also expected to register a CAGR of 43.0% over the forecasted years, 2019 to 2025. The rising usage of advanced technologies like AI (Artificial Intelligence) and ML (Machine Learning) across many insurance companies for targeting customers and maintaining their records is projected to drive market growth.&lt;/p&gt;

&lt;p&gt;The cloud computing technology segment is projected to witness significant growth due to rising consumer demand for hybrid and customized services related to insurance. While the blockchain technological segment is anticipated to register 44.9% CAGR from 2019 to 2025 due to the need for enhancing operational speed and transparency in the process of insurance claims.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Get Free PDF Sample Copy of the Report (Including Full TOC, List of Tables &amp;amp; Figures, Chart and Covid-19 Impact Analysis) : &lt;a href="https://bit.ly/3uYZV2j"&gt;https://bit.ly/3uYZV2j&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Key Questions Answered in this report :-&lt;br&gt;
• What are the sales or revenue produced by Organic Deodorant products beyond all sectors during the forecast period?&lt;br&gt;
• What are the key trends in the Organic Deodorant market?&lt;br&gt;
• What are the leading drivers, limitations, and probabilities in the industry?&lt;br&gt;
• Which segment will gain the highest revenue worldwide and which product segment will expand at the fastest CAGR during the forecast period?&lt;br&gt;
• In which region the Organic Deodorant market to project lucrative CAGR during the forecast period?&lt;/p&gt;

&lt;p&gt;Nykaa one of the leading brands aims to launch 30 physical stores across India by 2020, to widen its brand visibility. Additionally, the brand also plans to introduce 90 offline outlets for the Nykaa Luxe Nykaa On Trend outlets by 2020.&lt;/p&gt;

&lt;p&gt;Supermarkets/hypermarkets held a share of 57.9% in global revenue in 2018. Benefits such as physical display and verification attribute to the rising sales of supermarkets and hypermarkets. The multiple campaigns organized by renowned brands further contribute to increase in the sales of this segment.&lt;/p&gt;

&lt;p&gt;For example, Credo Beauty, in the U.S., had launched six outlets between 2017 and 2018. Moreover, the company aimed to introduce several offline stores in the upcoming years. The growing number of organic products oriented stores is predicted to have a positive impact on the organic deodorants market over the forecast period.&lt;/p&gt;

&lt;p&gt;Sprays held the largest market share of 46.5% in 2018. The growth is attributed to the products’ feature such as long durability and extensive adoption by Indians. Stick deodorants held the dominant position in the U.S. market in the past, however, with the shifting preference for sprays, the stick segment is expected to observe a decline in its sales in the future.&lt;/p&gt;

&lt;p&gt;A French company Laboratoire Saint Come, launched the Natural Body Deodorant that prevents odor through active molecules in its formulation by soaking them. The products contains 70% natural alcohol and are packed using a 100% recyclable bottle.&lt;/p&gt;

&lt;p&gt;Further key findings from the report suggest:&lt;br&gt;
• APAC is predicted to grow at the fastest rate due to the increased availability and product development of chemical-free products preferred by the customers in India.&lt;br&gt;
• Europe held a share of 34.8% in 2018 while North America held 22.9% share in the global revenue.&lt;br&gt;
• Based on type, sprays held the highest share of 46.5% in 2018 while sticks/creams are predicted to grow at the fastest rate from 2019 to 2025.&lt;/p&gt;

&lt;p&gt;Global Organic Deodorant Market: Key Players&lt;br&gt;
Unilever, Alverde, Elsa's Organic Skin Foods, SPEICK Natural Cosmetics, Lavera, Weleda, Sebamed, Indus Valley, Lavanila Laboratories, Truly's Natural Products, Erbaviva, Spirit Nest, Sky Organics, and EO Products.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Know More Insights @ &lt;a href="https://newsonmarketblog.wordpress.com"&gt;https://newsonmarketblog.wordpress.com&lt;/a&gt;&lt;/strong&gt; &lt;/p&gt;

</description>
      <category>globalinsurtechmarket</category>
    </item>
    <item>
      <title>One Missing Ingredient In Growing Twitter Account I Found After Went From 0 To 23,000 Followers</title>
      <author>Nick Bull</author>
      <pubDate>Fri, 16 Apr 2021 12:19:10 +0000</pubDate>
      <link>https://dev.to/nickbulljs/one-missing-ingredient-in-growing-twitter-account-i-found-after-went-from-0-to-23-000-followers-40m6</link>
      <guid>https://dev.to/nickbulljs/one-missing-ingredient-in-growing-twitter-account-i-found-after-went-from-0-to-23-000-followers-40m6</guid>
      <description>&lt;p&gt;Building a Twitter audience is a road to failure without one thing.&lt;/p&gt;

&lt;p&gt;What all “Twitter guides” tell you (saving you $100+):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Tweet high-quality content a couple of times per day&lt;/li&gt;
&lt;li&gt;  Engage with large accounts&lt;/li&gt;
&lt;li&gt;  Be always kind to your followers&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Honestly, it’ll work.&lt;/p&gt;

&lt;p&gt;Yet, you’ll fail.&lt;/p&gt;

&lt;p&gt;“Why?” you probably asking.&lt;/p&gt;

&lt;p&gt;Because you don’t want to build just an audience, it’s something else, am I right?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Your end goal is to build an audience that will help you to achieve your goals, not the audience itself.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Common goals I often see:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Increase personal brand awareness&lt;/li&gt;
&lt;li&gt;Build distribution channel and sell digital products&lt;/li&gt;
&lt;li&gt;Networking&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;But without one thing, a huge amount of followers won’t help you to achieve your goals.&lt;/p&gt;

&lt;p&gt;I learned it myself when I seriously started my audience-building journey in November 2020. I also blindly followed those “Twitter account growth” steps above. And the count of followers grew. But something was not right. I felt it.&lt;/p&gt;

&lt;p&gt;You know, it’s like when you do something by instruction but still feeling that something is missing. I have exact same feeling after a couple of months of building a Twitter account. Just the inner feeling that I couldn’t find even with deep reflection sessions. The funny thing is that I knew exactly what I was missing, but I didn't realize it. I was blind. I think because I was just building an audience not “full time”. But anyway, when I finally found what I was missing and applied it, things started to get better. My inner feeling of “something not right here” disappeared.&lt;/p&gt;

&lt;p&gt;So, what one thing did I miss?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Trust.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When you're just building an audience, you're disconnected from them and they're disconnected from you. Yeah, your audience subscribed to you because you are posting something useful or viral, and maybe some people even like you, but I’m betting most of them don't trust you.&lt;/p&gt;

&lt;p&gt;Why?&lt;/p&gt;

&lt;p&gt;Because when you &lt;em&gt;just&lt;/em&gt; build an audience with quality content and engaging with bigger accounts, you feel like another account that “growing here” for people. I can simply replace you with the good trained GPT-3 Twitter bot, and no one will understand that it’s a bot. People don’t &lt;em&gt;trust&lt;/em&gt; such accounts anymore. &lt;strong&gt;Now stop!&lt;/strong&gt; And re-read the previous sentence. Noticed this phrase? “people don’t trust such accounts” Getting the point? You are an “account” for them, not a person. That’s the problem. &lt;strong&gt;That’s why the audience doesn’t trust you.&lt;/strong&gt; That’s why so many accounts showing up every day and have almost zero followers. That’s why big accounts can’t sell a thing to their audience. They are accounts and not persons.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Trust is the key.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Of course, high-quality content is needed, but without trust*&lt;em&gt;, **you’ll *just&lt;/em&gt; build an audience and not an audience that will help you achieve your goals.&lt;/p&gt;

&lt;p&gt;“How to build &lt;em&gt;that&lt;/em&gt; trust and the audience that trusts you?”&lt;/p&gt;

&lt;p&gt;Good question.&lt;/p&gt;

&lt;p&gt;Ask yourself, what makes you buy from [PASTE HERE YOUR FAVORITE PERSONAL BRAND]?&lt;/p&gt;

&lt;p&gt;Like if you a fan of Kylie Jenner, what makes you buy Kylie Cosmetics? (my friend influenced this example)&lt;/p&gt;

&lt;p&gt;What makes you &lt;em&gt;trust&lt;/em&gt; Kylie that you actually go to her website and buy something from her?&lt;/p&gt;

&lt;p&gt;I will answer for you, it’s her &lt;strong&gt;personality.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You somehow share her views, values, and many other things that make you want to be like her or just help her in some way. Because her personality resonates with you, you trust this person.&lt;/p&gt;

&lt;p&gt;But how she built &lt;em&gt;that trust&lt;/em&gt;?&lt;/p&gt;

&lt;p&gt;By sharing her &lt;strong&gt;personality&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Sharing personal stories, views, and actions. You know about them, share them, and see that she is a real person because of them. And not just another IG account.&lt;/p&gt;

&lt;p&gt;If Kylie Jenner would share with you only beautiful photos, would you trust her and her brand?&lt;/p&gt;

&lt;p&gt;You will never buy a single item from her.&lt;/p&gt;

&lt;p&gt;So, &lt;strong&gt;if you want to build a Twitter audience that will help you achieve your goals, you should build trust.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;And the formula is simple: &lt;strong&gt;high-quality content + personality.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;“Nick, if I have a Twitter account, how can I tell if I have trust or not?”&lt;/p&gt;

&lt;p&gt;If you ask this question, you already lack it. But here’s the simple test:&lt;/p&gt;

&lt;p&gt;Imagine that some random person creates an account on Twitter and starts posting your content. Will your followers found a difference between you and this person? If the answer is NO, then you lack trust.&lt;/p&gt;




&lt;p&gt;Who knew that posting useful and high-quality content is not enough.&lt;/p&gt;




&lt;p&gt;If you like this article you need to know that every Monday, I send my "3-2-1" newsletter for Web Developers with 3 hand-picked articles from the tech world, 2 web development guides, and 1 best Tweet of the week&lt;/p&gt;

&lt;p&gt;Try to join 3,200+ web developers &lt;a href="https://nickbulljs.com/3-2-1/"&gt;here&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>twitter</category>
    </item>
    <item>
      <title>Solution: Remove All Adjacent Duplicates in String II</title>
      <author>seanpgallivan</author>
      <pubDate>Fri, 16 Apr 2021 12:17:29 +0000</pubDate>
      <link>https://dev.to/seanpgallivan/solution-remove-all-adjacent-duplicates-in-string-ii-431f</link>
      <guid>https://dev.to/seanpgallivan/solution-remove-all-adjacent-duplicates-in-string-ii-431f</guid>
      <description>&lt;p&gt;&lt;em&gt;This is part of a series of Leetcode solution explanations (&lt;a href="https://dev.to/seanpgallivan/leetcode-solutions-index-57fl"&gt;index&lt;/a&gt;). If you liked this solution or found it useful,&lt;/em&gt; &lt;strong&gt;&lt;em&gt;please like&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;this post and/or&lt;/em&gt; &lt;strong&gt;&lt;em&gt;upvote&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;&lt;a href="https://leetcode.com/problems/remove-all-adjacent-duplicates-in-string-ii/discuss/1161314"&gt;my solution post on Leetcode's forums&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#leetcode-problem-1209-medium-remove-all-adjacent-duplicates-in-string-ii"&gt;
  &lt;/a&gt;
  &lt;a href="https://leetcode.com/problems/remove-all-adjacent-duplicates-in-string-ii/"&gt;Leetcode Problem #1209 (&lt;em&gt;Medium&lt;/em&gt;): Remove All Adjacent Duplicates in String II&lt;/a&gt;
&lt;/h4&gt;




&lt;h4&gt;
  &lt;a href="#description"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Description:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt; || &lt;em&gt;Code&lt;/em&gt;: &lt;a href="#javascript-code"&gt;&lt;em&gt;JavaScript&lt;/em&gt;&lt;/a&gt; | &lt;a href="#python-code"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; | &lt;a href="#java-code"&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt; | &lt;a href="#c-code"&gt;&lt;em&gt;C++&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Given a string &lt;code&gt;s&lt;/code&gt;, a &lt;code&gt;k&lt;/code&gt; duplicate removal consists of choosing &lt;code&gt;k&lt;/code&gt; adjacent and equal letters from &lt;code&gt;s&lt;/code&gt; and removing them causing the left and the right side of the deleted substring to concatenate together.&lt;/p&gt;

&lt;p&gt;We repeatedly make &lt;code&gt;k&lt;/code&gt; duplicate removals on &lt;code&gt;s&lt;/code&gt; until we no longer can.&lt;/p&gt;

&lt;p&gt;Return the final string after all such duplicate removals have been made.&lt;/p&gt;

&lt;p&gt;It is guaranteed that the answer is unique.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#examples"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Examples:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 1:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;s = "abcd", k = 2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;"abcd"&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Explanation:&lt;/td&gt;
&lt;td&gt;There's nothing to delete.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 2:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;s = "deeedbbcccbdaa", k = 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;"aa"&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Explanation:&lt;/td&gt;
&lt;td&gt;First delete "eee" and "ccc", get "ddbbbdaa"&lt;br&gt;Then delete "bbb", get "dddaa"&lt;br&gt;Finally delete "ddd", get "aa"&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 3:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;s = "pbbcggttciiippooaais", k = 2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;"ps"&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#constraints"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Constraints:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= s.length &amp;lt;= 10^5&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;2 &amp;lt;= k &amp;lt;= 10^4&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;s&lt;/code&gt; only contains lower case English letters.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#idea"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Idea:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;em&gt;Code&lt;/em&gt;: &lt;a href="#javascript-code"&gt;&lt;em&gt;JavaScript&lt;/em&gt;&lt;/a&gt; | &lt;a href="#python-code"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; | &lt;a href="#java-code"&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt; | &lt;a href="#c-code"&gt;&lt;em&gt;C++&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;




&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;&lt;em&gt;(Note: This is part of a series of Leetcode solution explanations. If you like this solution or find it useful,&lt;/em&gt; &lt;strong&gt;&lt;em&gt;please upvote&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;this post.)&lt;/em&gt;&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#idea"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Idea:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;Whenever we have to iterate through a data type and remove potentially nested information, the natural thought is to use some kind of &lt;strong&gt;stack&lt;/strong&gt; or &lt;strong&gt;recursive&lt;/strong&gt; solution to keep track of the nesting data while we search for our matches.&lt;/p&gt;

&lt;p&gt;In a naive recursive solution, we can search for a pattern match by keeping track of the current &lt;strong&gt;count&lt;/strong&gt; of adjacent duplicates, then recursively call the main function again on the string with the pattern removed. This solution repeatedly iterates through most of the string, but otherwise has low overhead, so it tends to be competitively performant, especially for shorter strings.&lt;/p&gt;

&lt;p&gt;In an effort to achieve a more efficient solution for longer strings, we can instead use a stack to build our answer. To avoid having to backtrack up to the last &lt;strong&gt;K&lt;/strong&gt; elements of our stack after removing a match, we can keep a separate stack (&lt;strong&gt;st&lt;/strong&gt;) just specifically for index values of the start of each duplicate run.&lt;/p&gt;

&lt;p&gt;To save on space, we can also use an &lt;strong&gt;in-place stack&lt;/strong&gt; approach for the char array (&lt;strong&gt;SC&lt;/strong&gt;) formed from the input string (&lt;strong&gt;S&lt;/strong&gt;), rather than using a separate stack. To do so, we can use a &lt;strong&gt;two-pointer system&lt;/strong&gt; in which one pointer (&lt;strong&gt;i&lt;/strong&gt;) keeps track of the end of the in-place "stack", while the other pointer (&lt;strong&gt;j&lt;/strong&gt;) iterates through &lt;strong&gt;SC&lt;/strong&gt; normally.&lt;/p&gt;

&lt;p&gt;As we move &lt;strong&gt;j&lt;/strong&gt; through &lt;strong&gt;SC&lt;/strong&gt;, we write to the "stack" by overwriting &lt;strong&gt;SC[i]&lt;/strong&gt; with &lt;strong&gt;SC[j]&lt;/strong&gt;. When we want to remove &lt;strong&gt;K&lt;/strong&gt; elements from the "stack", we just move &lt;strong&gt;i&lt;/strong&gt; back by &lt;strong&gt;K&lt;/strong&gt;. Then, once we're done, we can &lt;strong&gt;return&lt;/strong&gt; the "stack", which is the first part of &lt;strong&gt;SC&lt;/strong&gt; through &lt;strong&gt;i&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;This solution has more overhead, but won't repeat as many iterations, so it should be more efficient for longer strings.&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#implementation"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Implementation:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;C++ alone has mutable strings and doesn't require &lt;strong&gt;S&lt;/strong&gt; to be split into a char array before processing as an &lt;strong&gt;in-place stack&lt;/strong&gt;.&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#javascript-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Javascript Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#w-recursion"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;w/ Recursion:&lt;/em&gt;&lt;/strong&gt;
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;removeDuplicates&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;S&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;K&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;S&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;S&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;charAt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;S&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;charAt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;K&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="nx"&gt;S&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;removeDuplicates&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;S&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;K&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;S&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nx"&gt;K&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;S&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#w-inplace-stack"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;w/ In-Place Stack:&lt;/em&gt;&lt;/strong&gt;
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;removeDuplicates&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;S&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;K&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;SC&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;S&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nx"&gt;st&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;S&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;SC&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;SC&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;SC&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="nx"&gt;SC&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="nx"&gt;st&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;st&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;st&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;K&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;st&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;SC&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#python-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Python Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#w-recursion"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;w/ Recursion:&lt;/em&gt;&lt;/strong&gt;
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;removeDuplicates&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;S&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;removeDuplicates&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:],&lt;/span&gt; &lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;S&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#w-inplace-stack"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;w/ In-Place Stack:&lt;/em&gt;&lt;/strong&gt;
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;removeDuplicates&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;SC&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;SC&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;SC&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;SC&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;SC&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
            &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
            &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SC&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#java-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Java Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#w-recursion"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;w/ Recursion:&lt;/em&gt;&lt;/strong&gt;
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="nf"&gt;removeDuplicates&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="no"&gt;S&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="no"&gt;K&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;S&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;S&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;charAt&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="no"&gt;S&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;charAt&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="no"&gt;K&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; 
                &lt;span class="no"&gt;S&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;removeDuplicates&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="no"&gt;S&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;substring&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="no"&gt;K&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="no"&gt;S&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;substring&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt; &lt;span class="no"&gt;K&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="no"&gt;S&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#w-inplace-stack"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;w/ In-Place Stack:&lt;/em&gt;&lt;/strong&gt;
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="nf"&gt;removeDuplicates&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="no"&gt;S&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="no"&gt;K&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="no"&gt;SC&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;S&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;toCharArray&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="nc"&gt;Stack&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Integer&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;st&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Stack&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
        &lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;S&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;++)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;chr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;SC&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;SC&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;chr&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="no"&gt;SC&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;])&lt;/span&gt; &lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="nf"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;peek&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="no"&gt;K&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;pop&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;String&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="no"&gt;SC&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#c-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;C++ Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#w-recursion"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;w/ Recursion:&lt;/em&gt;&lt;/strong&gt;
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;public:&lt;/span&gt;
    &lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="n"&gt;removeDuplicates&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
                &lt;span class="n"&gt;S&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;removeDuplicates&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#w-inplace-stack"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;w/ In-Place Stack:&lt;/em&gt;&lt;/strong&gt;
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;public:&lt;/span&gt;
    &lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="n"&gt;removeDuplicates&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;stack&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;top&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;top&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>algorithms</category>
      <category>javascript</category>
      <category>java</category>
      <category>python</category>
    </item>
    <item>
      <title>Global Urological Cancer Market- Industry Analysis, Growth, Segmentation, Trends and Forecast 2020-2026
</title>
      <author>Ram Vasekar</author>
      <pubDate>Fri, 16 Apr 2021 12:15:05 +0000</pubDate>
      <link>https://dev.to/ram_maximize/global-urological-cancer-market-industry-analysis-growth-segmentation-trends-and-forecast-2020-2026-kkg</link>
      <guid>https://dev.to/ram_maximize/global-urological-cancer-market-industry-analysis-growth-segmentation-trends-and-forecast-2020-2026-kkg</guid>
      <description>&lt;p&gt;Global Urological Cancer Market . 2019 has been considered as base year to estimate the market and same is forecasted through 2021 to 2026 by giving special focus and different treatment to 2020. The report forecast that by value Urological Cancer market will touch USD XX Bn. by 2026. The report has covered the market drivers, restraints and fluctuations in demand in different countries by region with special focus on demand and supply from China, India, Taiwan in Asia and USA, France, UK, Russia in western countries. Government regulations, different government’s special incentives and trade agreements in countries are going to have moderate impact on the demand and supply on Urological Cancer market.&lt;/p&gt;

&lt;p&gt;The Urological Cancer faced several challenges in 2020 including Covid lock down and sudden decrease in demand for semiconductors, however, the demand is expected to normalize in 2021 and is expected to pick up in 2022, which is covered in the report in the growth drivers chapter.&lt;/p&gt;

&lt;p&gt;Request For View Sample Urological Cancer Market Report Page : &lt;a href="https://www.maximizemarketresearch.com/request-sample/85866"&gt;https://www.maximizemarketresearch.com/request-sample/85866&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Urological Cancer Market report is Segmented by&lt;/p&gt;

&lt;p&gt;By Region:&lt;/p&gt;

&lt;p&gt;• North America&lt;br&gt;
• Europe&lt;br&gt;
• South America&lt;br&gt;
• MEA&lt;br&gt;
• APAC&lt;/p&gt;

&lt;p&gt;Key Players:&lt;/p&gt;

&lt;p&gt;• Pfizer Inc.&lt;br&gt;
• Novartis International AG&lt;br&gt;
• Johnson &amp;amp; Johnson Private Limited&lt;br&gt;
• Astellas Pharma Inc&lt;br&gt;
• AstraZeneca Plc.&lt;br&gt;
• GlaxoSmithKline plc&lt;br&gt;
• Sanofi S.A.&lt;br&gt;
• Celgene Corporation&lt;br&gt;
• Eli Lilly and Company&lt;br&gt;
• Bristol-Myers Squibb Company&lt;br&gt;
• F. Hoffmann-La Roche AG.&lt;br&gt;
• Kyowa Hakko Kirin Co., Ltd.&lt;br&gt;
• Boehringer Ingelheim GmbH&lt;br&gt;
• Ferring Pharmaceuticals&lt;br&gt;
• Dendreon Corporation&lt;br&gt;
• Abbott Laboratories&lt;br&gt;
• Roche Healthcare&lt;br&gt;
• Indevus Pharmaceuticals Inc&lt;br&gt;
• Ipsen&lt;/p&gt;

&lt;p&gt;Do Inquiry Before Purchasing Market Urological Cancer Report Here : &lt;a href="https://www.maximizemarketresearch.com/inquiry-before-buying/85866"&gt;https://www.maximizemarketresearch.com/inquiry-before-buying/85866&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;By region, Urological Cancer Market is segmented by North America, South America, Europe, Middle East and APAC. The APAC market has further given the deep analysis of ASEAN countries separately in the report.&lt;/p&gt;

&lt;p&gt;The report has profiled key players in the market by their size and presence by regions. Since, there are limitation to profile all the kay player, representation is given to companies by region, sales revenue, expenditure on technology, expansion plans, investments received, involved in M&amp;amp;A.&lt;/p&gt;

&lt;p&gt;Browse Complete Urological Cancer Report details with ToC and List Of Figures Here: &lt;a href="https://www.maximizemarketresearch.com/market-report/global-urological-cancer-market/85866/"&gt;https://www.maximizemarketresearch.com/market-report/global-urological-cancer-market/85866/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;About Maximize Market Research:&lt;/p&gt;

&lt;p&gt;Maximize Market Research has served esteemed clients including Yamaha, Boeing, Sensata, Etnyre, Canada, ALCOR M&amp;amp;A, Microsoft, Harman, and other 200 MNCs worldwide. The Company provides B2B and B2C market research on 5000 high growth emerging technologies &amp;amp; opportunities in Transportation, Chemical, Healthcare, Pharmaceuticals, Electronics &amp;amp; Communications, Internet of Things, Food and Beverages, Aerospace and Defense and other manufacturing sectors.&lt;br&gt;
We, at Maximize Market Research, are a strong unified team of industry specialists and analysts across sectors to ensure entire Industry ecosystem is taken in perspective, factoring all recent development, latest trends and futuristic – the technological impact of uniquely specific industries. In line with the agreed scope and objective of the study, our approach is uniquely custom detailed&lt;/p&gt;

&lt;p&gt;Contact Us:&lt;br&gt;
Maximize Market Research Pvt ltd.&lt;br&gt;
Email: &lt;a href="mailto:sales@maximizemarketresearch.com"&gt;sales@maximizemarketresearch.com&lt;/a&gt;&lt;br&gt;
Website: www.maximizemarketresearch.com&lt;/p&gt;

</description>
    </item>
    <item>
      <title>7 GitHub Repositories To Help You Crush Your Job Interviews</title>
      <author>The Code Lounge</author>
      <pubDate>Fri, 16 Apr 2021 12:10:32 +0000</pubDate>
      <link>https://dev.to/codeloungedev/7-github-repositories-to-help-you-crush-your-job-interviews-272o</link>
      <guid>https://dev.to/codeloungedev/7-github-repositories-to-help-you-crush-your-job-interviews-272o</guid>
      <description>&lt;p&gt;&lt;a href="https://codelounge.dev"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oZGLRauQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1617198357271/uoNdlXnwM.png" alt="cover (1).png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Originally posted on the codelounge.dev blog =&amp;gt; &lt;a href="https://codelounge.dev/7-github-repositories-to-help-you-crush-your-job-interviews"&gt;7 GitHub Repositories To Help You Crush Your Job Interviews&lt;/a&gt;!&lt;/strong&gt;&lt;/p&gt;




&lt;p&gt;"In tech, interviews are harder than the actual jobs". This is a joke, but it can be true in many cases. Thus, in this article, you will see 7 GitHub repositories that will help you ace the interviews.&lt;/p&gt;

&lt;p&gt;These repositories include information about:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;How the web works (DNS, HTTP, and many more subjects)&lt;/li&gt;
&lt;li&gt;Data Structures and Algorithms&lt;/li&gt;
&lt;li&gt;How to design large-scale systems (System Design)&lt;/li&gt;
&lt;li&gt;Application Security&lt;/li&gt;
&lt;li&gt;JavaScript Algorithms&lt;/li&gt;
&lt;/ul&gt;




&lt;h1&gt;
  &lt;a href="#1-coding-interview-university"&gt;
  &lt;/a&gt;
  1. Coding Interview University
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JPr8uZpD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/usns6b0d6stjf03ihhlg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JPr8uZpD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/usns6b0d6stjf03ihhlg.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
The Coding Interview repository is one of the most comprehensive resources for interview preparation. The repository started as a study plan of the repository owner, which he used to become a software engineer.&lt;/p&gt;

&lt;p&gt;In this repository, you can find information about Data Structures, Algorithms, Dynamic Programming, Object-Oriented Programming, Design Patterns and more.&lt;/p&gt;

&lt;p&gt;I recommend you to check the &lt;a href="https://github.com/jwasham/coding-interview-university"&gt;repository here&lt;/a&gt; and explore it on your own. Be aware that it's comprehensive and you do not have to learn everything or everything at once. Nonetheless, the resource is extremely handy to prepare for interviews.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#2-tech-interview-handbook"&gt;
  &lt;/a&gt;
  2. Tech Interview Handbook
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uaPaCr0W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/vxflp5wuhslele8pkoyo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uaPaCr0W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/vxflp5wuhslele8pkoyo.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Another useful resource is the Tech Interview Handbook. It covers information about technical interviews but not only. It also covers the job application (resume, cover letter), the interview process (behavioural questions, what questions to ask in the interview), and the post-interview (negotiation).&lt;/p&gt;

&lt;p&gt;Thus, you learn more than just Data Structures, Algorithms and other technical subjects. The Tech Interview Handbook is a handy resource, and I encourage you to &lt;a href="https://yangshun.github.io/tech-interview-handbook/"&gt;check it here&lt;/a&gt;.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#3-the-system-design-primer"&gt;
  &lt;/a&gt;
  3. The System Design Primer
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TmPVG9et--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/3kiiw3mrx1pmvp2nnlhd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TmPVG9et--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/3kiiw3mrx1pmvp2nnlhd.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
For small side projects, we might get away without planning or too much thinking. However, building large-scale systems is a different game. Learning how to design scalable systems will help you become a software engineer.&lt;/p&gt;

&lt;p&gt;Thus, the &lt;a href="https://github.com/donnemartin/system-design-primer"&gt;System Design Primer repository&lt;/a&gt; is a collection of materials and resources from the internet. The owner of the repository put together resources and materials from different sources. Besides, the repository is continuously updated, so keep an eye on it!&lt;/p&gt;

&lt;p&gt;The repo contains a study guide, how to approach system design questions, and solutions to the questions. I highly recommend it, and I use it as well to learn more about designing scalable applications.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#4-interview-resources"&gt;
  &lt;/a&gt;
  4. Interview Resources
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aB7sdqgb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/ejrw1e2gykmf67yx367i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aB7sdqgb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/ejrw1e2gykmf67yx367i.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
The &lt;a href="https://github.com/Olshansk/interview"&gt;Interview&lt;/a&gt; repository does not have a description or a guide on how you should use it. It only lists links to other resources, and it groups these links by their topic. For instance, there is the &lt;strong&gt;Algorithms&lt;/strong&gt; section that includes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Books&lt;/li&gt;
&lt;li&gt;Coding Practice&lt;/li&gt;
&lt;li&gt;Guides&lt;/li&gt;
&lt;li&gt;Misc&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I like this repository in particular, because of the number of resources included. Also, I like that they are categorised by type. Besides that, it deserves an extra point for having similar repositories at the end. That is additional resources to prepare for your interviews. Do check out the repository!&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#5-how-to-secure-anything"&gt;
  &lt;/a&gt;
  5. How To Secure Anything
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_TU0P-Id--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/gae1x8d6bp85k2aby2np.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_TU0P-Id--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/gae1x8d6bp85k2aby2np.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Security was, is, and will always be an essential topic when building applications. If your applications are not secure, it can result in disastrous consequences.&lt;/p&gt;

&lt;p&gt;Therefore, security is not something to take lightly. As a result, here we have the repository &lt;a href="https://github.com/veeral-patel/how-to-secure-anything"&gt;How To Secure Anything&lt;/a&gt;. The nice thing about this repository is that the information applies to securing anything, not only applications. The repository owner claims to "aim to document a process for securing anything, whether it's a medieval castle, an art museum, or a computer network".&lt;/p&gt;

&lt;p&gt;The repository is very well laid-out, and it includes a lot of extra materials to supplement your learning. I cannot recommend it enough!&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#6-how-the-web-works"&gt;
  &lt;/a&gt;
  6. How The Web Works
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--irziRC9l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/feqwwazk8z1x4kbp7qjd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--irziRC9l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/feqwwazk8z1x4kbp7qjd.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
In the interview for my first developer job, I was asked: &lt;em&gt;what happens when you type a URL in a browser?&lt;/em&gt;. Probably, you encountered the same question, or maybe you will in the future.&lt;/p&gt;

&lt;p&gt;Thus, you can find the answer to such questions in the repo called &lt;a href="https://github.com/vasanthk/how-web-works"&gt;How Web Works&lt;/a&gt;. You can find information about how DNS, HTTP protocol and server work or about DOM Tree, Render Tree, page painting and so on.&lt;/p&gt;

&lt;p&gt;It is a handy repository to learn the basics of how the web works. Moreover, the repository includes additional links to explore some subjects in-depth.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#7-javascript-algorithms"&gt;
  &lt;/a&gt;
  7. JavaScript Algorithms
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TU8cBpjk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/ew0yt6mh9si6tcb9maw9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TU8cBpjk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/ew0yt6mh9si6tcb9maw9.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
The &lt;a href="https://github.com/trekhleb/javascript-algorithms"&gt;JavaScript Algorithms repository&lt;/a&gt; is more tailored to JavaScript positions. Although, if you understand the concepts, and know how to implement them in JavaScript, you will most likely know how to implement them in other languages too.&lt;/p&gt;

&lt;p&gt;Each Data Structure and Algorithm comes with its separate README, and it also includes links to further material. Thus, if you do not understand a concept, you can always follow the additional material for extra information.&lt;/p&gt;

&lt;p&gt;Although I want to mention that some information might be scarce, and you might need additional learning material; nonetheless, the repository is excellent to practice Algorithms and Data Structures.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;I hope these resources help you ace your next technical interview. The resources from the article are super helpful; especially if you use them together.&lt;/p&gt;

&lt;p&gt;The list from the article is not exhaustive, but it should cover anything you might encounter in an interview. As always, I am open to suggestions. Thus, if you know other great resources, feel free to drop them in the comments!&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>codenewbie</category>
      <category>programming</category>
      <category>career</category>
    </item>
    <item>
      <title>Hugo: light syntax highlight</title>
      <author>Julien Maury</author>
      <pubDate>Fri, 16 Apr 2021 12:09:04 +0000</pubDate>
      <link>https://dev.to/jmau111/hugo-light-syntax-highlight-5496</link>
      <guid>https://dev.to/jmau111/hugo-light-syntax-highlight-5496</guid>
      <description>&lt;p&gt;Hugo has a built-in syntax highlight that uses &lt;a href="https://github.com/alecthomas/chroma"&gt;Chroma&lt;/a&gt;, a library written in go.&lt;/p&gt;

&lt;p&gt;As much as I love libraries such as &lt;code&gt;highlight.js&lt;/code&gt;, and even if they have plenty of crazy good options, I decided to drop them.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#you-dont-need-that-drop-it"&gt;
  &lt;/a&gt;
  You don't need that. Drop it.
&lt;/h2&gt;

&lt;p&gt;Performances are a common concern. To highlight code, you can use client-side libraries, but server-side can be a significant optimization.&lt;/p&gt;

&lt;p&gt;The great news is Hugo provides that.&lt;/p&gt;

&lt;p&gt;Instead of loading both CSS and JavaScript, I only need CSS. Fewer javaScript, fewer bytes, and, above all, with pretty much the same results.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to"&gt;
  &lt;/a&gt;
  How to
&lt;/h2&gt;

&lt;p&gt;I give you a sample config. Of course, feel free to make modifications. For example, I don't use line numbers because I think it's lame, especially for copy-paste, but that's just my opinion.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;guessSyntax&lt;/code&gt; parameter is crucial to me, as I don't use shortcodes to highlight code, only markdown tags.&lt;/p&gt;

&lt;p&gt;You can &lt;a href="https://gohugo.io/content-management/syntax-highlighting/"&gt;read the documentation&lt;/a&gt; to get all the details.&lt;/p&gt;

&lt;p&gt;As a starter, you can add the following in your &lt;code&gt;config.toml&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight toml"&gt;&lt;code&gt;&lt;span class="nn"&gt;[markup.highlight]&lt;/span&gt;
  &lt;span class="py"&gt;codeFences&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
  &lt;span class="py"&gt;guessSyntax&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
  &lt;span class="py"&gt;lineNos&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
  &lt;span class="py"&gt;tabWidth&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;
  &lt;span class="py"&gt;noClasses&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;hugo gen chromastyles --style=xcode &amp;gt; syntax.css
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And load &lt;code&gt;syntax.css&lt;/code&gt; to get your styles. Of course, you can choose another predefined stylesheet.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/alecthomas/chroma/tree/master/styles"&gt;See all predefined styles&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Chroma shares some base code with Pygments, an older library. You get many common settings, which is pretty cool to ease the transition.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#possible-caveats"&gt;
  &lt;/a&gt;
  Possible caveats
&lt;/h2&gt;

&lt;p&gt;As far as I know, Chroma seems a little less precise than hyper boosted client-side libraries such as Prism. &lt;/p&gt;

&lt;p&gt;I've noticed some minor glitches, such as a few inconsistencies with colors. However, that's tolerably rare.&lt;/p&gt;

&lt;p&gt;You won't get features such as "copy to clipboard", but that's not the most complicated feature to code in vanilla js if you have to provide it.&lt;/p&gt;

&lt;p&gt;You can read &lt;a href="https://github.com/alecthomas/chroma#supported-languages"&gt;the complete list of supported languages here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If that's the same for you, you can safely switch to Chroma highlighting.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#so-convenient"&gt;
  &lt;/a&gt;
  So convenient!
&lt;/h2&gt;

&lt;p&gt;Server-side highlighting with Chroma is smooth:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;the transition with Pygments is seamless&lt;/li&gt;
&lt;li&gt;it's extra-light as you only load CSS&lt;/li&gt;
&lt;li&gt;it supports an extensive range of languages &lt;/li&gt;
&lt;li&gt;there's &lt;a href="https://swapoff.org/chroma/playground/"&gt;an online playground to test predefined styles&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Happy Chroma highlighting ;)&lt;/p&gt;

</description>
      <category>hugo</category>
      <category>webdev</category>
      <category>go</category>
    </item>
    <item>
      <title>JavaScript Interview Question #33: Add two empty arrays and check the type</title>
      <author>Coderslang: Become a Software Engineer</author>
      <pubDate>Fri, 16 Apr 2021 12:09:00 +0000</pubDate>
      <link>https://dev.to/coderslang/javascript-interview-question-33-add-two-empty-arrays-and-check-the-type-ceh</link>
      <guid>https://dev.to/coderslang/javascript-interview-question-33-add-two-empty-arrays-and-check-the-type-ceh</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hypyVGrQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://learn.coderslang.com/js-test-33.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hypyVGrQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://learn.coderslang.com/js-test-33.png" alt="js-test-33"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Array? Object? Undefined? What’s the output?&lt;/p&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;In JavaScript, the &lt;code&gt;+&lt;/code&gt; operator doesn’t do the concatenation of arrays.&lt;/p&gt;

&lt;p&gt;Instead, it transforms them into strings and then does the string concatenation.&lt;/p&gt;

&lt;p&gt;Two empty arrays become two empty strings, and their sum unsurprisingly is still an empty string.&lt;/p&gt;

&lt;p&gt;What matters to us is the &lt;code&gt;typeof&lt;/code&gt; that will return &lt;code&gt;string&lt;/code&gt; in our case.&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;ANSWER&lt;/strong&gt;: the output will be &lt;code&gt;string&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://js.coderslang.com/sign-in"&gt;Learn Full-Stack JavaScript&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>webdev</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Memcached for Django with docker</title>
      <author>Pedro Escudero</author>
      <pubDate>Fri, 16 Apr 2021 12:07:40 +0000</pubDate>
      <link>https://dev.to/pedroescudero/memcached-for-django-with-docker-5hmn</link>
      <guid>https://dev.to/pedroescudero/memcached-for-django-with-docker-5hmn</guid>
      <description>&lt;h2&gt;
  &lt;a href="#why-memcached"&gt;
  &lt;/a&gt;
  Why Memcached?
&lt;/h2&gt;

&lt;p&gt;Are you tired of fighting with the performance of your application? Do you want to improve how you consume your resources? If so, applying a caching solution will help you, and Memcached is ideal for that.&lt;/p&gt;

&lt;p&gt;While there are other well spread caching solutions, like Redis or Varnish, Memcached combines the ability to handle the cache programmatically, and a native support from the Django framework (where it is defined as “&lt;a href="https://docs.djangoproject.com/en/3.0/topics/cache/#s-memcached"&gt;The fastest, most efficient type of cache supported natively by Django&lt;/a&gt;”).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-we-will-do"&gt;
  &lt;/a&gt;
  What we will do?
&lt;/h2&gt;

&lt;p&gt;For testing better the performance that Memcached can provide to your applications, you are going to build a middleware that calls four external APIs. Those calls are consolidated and presented in an endpoint of your application.&lt;/p&gt;

&lt;p&gt;I will try to keep this article updated, but if for any reason the links don’t work, you can use any other external open API of your choice. &lt;a href="https://github.com/public-apis/public-apis#index"&gt;In this GitHub repository, you can find several open APIs&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-code"&gt;
  &lt;/a&gt;
  The code
&lt;/h2&gt;

&lt;p&gt;I assume you have a basic knowledge of Django. Also that you have at least a basic installation of Django ready. If not, you can &lt;a href="https://docs.djangoproject.com/en/3.0/intro/tutorial01/"&gt;visit the Django official tutorial&lt;/a&gt; or &lt;a href="https://github.com/PedroEscudero/basic-django"&gt;clone an example from this repository&lt;/a&gt; (note that the necessary migrations are already done).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#preparing-your-dockercompose"&gt;
  &lt;/a&gt;
  Preparing your docker-compose
&lt;/h2&gt;

&lt;p&gt;First, create a Dockerfile at the root of your project.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;FROM python:3
RUN mkdir /python
WORKDIR /python
COPY requirements.txt /python/
RUN pip install -r requirements.txt
COPY . .
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What you are doing here is creating a docker container with the last version of Python 3, and loading the packages listed in the requirements file.&lt;br&gt;
Speaking about the requirements, let’s create a requirements.txt file, also in the root of your project with the following lines:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;python-memcached&amp;gt;=1.3
Django&amp;gt;=2.0,&amp;lt;3.0
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You are just adding Django and the needed libraries for Memcached. If your project is bigger and needs other packages, add them after these two lines.&lt;br&gt;
Next, let’s create the docker-compose.yml file. You will include the configuration for Django and Memcached.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;version: '3'
services:
  api:
    build: .
    container_name: django-memchached
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/python
    ports:
      - "8000:8000"
    depends_on:
      - cache
  cache:
   image: memcached
   ports:
     - "11211:11211"
   entrypoint:
    - memcached
    - -m 64
Django settings
You have to add the following configuration lines for Memcached to the settings.py file of your Django app.
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',
        'LOCATION': 'cache:11211',
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The main detail of this configuration that you have to be aware of is the entry ‘LOCATION’. It is composed of a direction and a port. Here the direction value is cache because it was named like that before in the docker-compose file (take a look at it). If you change that value in the Docker configuration, remember to change it here also. Usually, this entry has a DNS or an IP as a value.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#here-is-magic"&gt;
  &lt;/a&gt;
  Here is magic!
&lt;/h2&gt;

&lt;p&gt;First, create a connector.py file in your app folder.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import http.client
import json
class Connector(object):
    ENDPOINTS = [
        '/awardees.json',
        '/newspapers.json',
        '/lccn/sn86069873/1900-01-05/ed-1/seq-2.json',
        '/lccn/sn86069873/1900-01-05/ed-1/seq-3.json'
    ]
    DOMAIN = 'chroniclingamerica.loc.gov'
def __init__(self, endpoints = ENDPOINTS):
        self.endpoints = endpoints
def call_endpoints(self):
        response = []
        for endpoint in self.endpoints:
            response.append(self.request(endpoint))
        return response
def request(self, endpoint):
        headers = {
            'content-type': 'application/json',
            'Cache-Control': 'no-cache',
        }
        connection = http.client.HTTPSConnection(self.DOMAIN)
        connection.request('GET', endpoint, '', headers)
        response = connection.getresponse()
        json_string = response.read().decode('utf-8')
        data = json.loads(json_string)
        connection.close()
        return data
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There are three functions in the class:&lt;br&gt;
&lt;strong&gt;init&lt;/strong&gt; (self, endpoints = ENDPOINTS):&lt;br&gt;
The initialization of the class. Assigns to self.endpoints the value provided during the creation of the instance, or takes by default the value of the constant ENDPOINTS.&lt;br&gt;
call_endpoints(self):&lt;br&gt;
Iterates on the self.endpoints variable, calls the request function and aggregates all the responses of the calls.&lt;br&gt;
request(self, endpoint):&lt;br&gt;
It makes an HTTP request to the endpoint provided.&lt;br&gt;
Furthermore, you have the constants DOMAIN and ENDPOINTS. You can play with your preferred APIs changing these values.&lt;br&gt;
After the connector, you have to create the view. Add the following to the views.py file of your app:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;from django.shortcuts import render
from django.http import HttpResponse
from django.views import View
from django.core.cache import cache
import json
from thing.connector import Connector
class Middleware(View):
    def get(self, request):
        cache_key = 'sample_key' #identificative value
        cache_time = 7200 #time in seconds of the cache
        data = cache.get(cache_key)
        if not data:
            connector = Connector().call_endpoints()
            data = json.dumps(connector)
            cache.set(cache_key, data, cache_time)
        response = HttpResponse(data)
        response ['content-type'] = 'application/json'
        response ['Cache-Control'] =  'no-cache'
        return response
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here is where you apply the caching. The workflow is quite easy. The code checks if the data is cached for the key provided. If there is data in Memcached, then it gives that data. If not, it calls the Connector for taking the data and then cache it adding a key and the time that the resource should be stored.&lt;br&gt;
The next step is to create a urls.py also in the folder of your app.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;from django.urls import path
from . import views
from thing.views import Middleware
urlpatterns = [
    path('chroniclingamerica', Middleware.as_view(), name='middleware_endpoint'),
]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note that in the import path of the view, you must substitute “thing” by the name of your app (if you have cloned the example repository, you don’t need to change it).&lt;br&gt;
Then, you have to update the urls.py file of your project. Add there the path to the URLs file of your app (the line in bold below).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;from django.contrib import admin
from django.urls import include, path
urlpatterns = [
    path('middleware/v1/', include('thing.urls')),
    path('admin/', admin.site.urls),
]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#lets-run-it"&gt;
  &lt;/a&gt;
  Let’s run it!!!
&lt;/h2&gt;

&lt;p&gt;If you have followed all the instructions, now you have everything ready. Let’s up and build the docker containers. Execute the following command in the root of your Django App:&lt;br&gt;
docker-compose up --build -d&lt;br&gt;
With the webserver up and running, it’s the moment to check the response time of our endpoint. Go to the terminal and run this curl:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;curl -I -X GET  http://127.0.0.1:8000/middleware/v1/chroniclingamerica -w %{time_total}\\n
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You will obtain a time between 400 and 500 milliseconds. Now, repeat the command. You will have a response in around 15 milliseconds. Awesome, right!&lt;br&gt;
As you can see, the improvement in performance is remarkable. While in this example, we have caught the result of calls to a third party, you can use it for any element: responses from the database, inner processes, calls to your other microservices, etc.&lt;br&gt;
&lt;a href="https://github.com/PedroEscudero/django-memcache"&gt;You can find all the code exposed in this article in this Github repository&lt;/a&gt;.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Responsive Personal Portfolio Website HTML CSS and JavaScript</title>
      <author>Mystery Code</author>
      <pubDate>Fri, 16 Apr 2021 12:03:36 +0000</pubDate>
      <link>https://dev.to/foolishdeveloper/responsive-personal-portfolio-website-html-css-and-javascript-14pm</link>
      <guid>https://dev.to/foolishdeveloper/responsive-personal-portfolio-website-html-css-and-javascript-14pm</guid>
      <description>&lt;p&gt;Here you can learn how to create a responsive personal portfolio website using HTML, CSS, javascript, and bootstrap. This portfolio website has banners, about us, etc. sections.&lt;/p&gt;

&lt;p&gt;I have already designed many types of websites. I have made this new design for you to get a lot of responses from you in those tutorials. This is a fully responsive personal portfolio website for which I have used Bootstrap 4 code. In addition, common HTML and CSS programming codes have been used. It is designed in a completely modern way. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;video tutorial:&lt;/strong&gt;&lt;br&gt;
If you want to learn how to make it completely, you can watch the video tutorial below.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/-2ihchP6FuA"&gt;
&lt;/iframe&gt;
&lt;br&gt;
Hopefully, the above video tutorial has helped you to create this personal portfolio website. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What I used to make this Portfolio&lt;/strong&gt;&lt;br&gt;
I basically used HTML, CSS, and bootstrap programming code to make it. You can download all its code and necessary images for free by clicking on the download button below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cYRQVY_p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/etcam8u66yi8cirwo2mv.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cYRQVY_p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/etcam8u66yi8cirwo2mv.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you like the video tutorial, be sure to like the video and comment on it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://cutt.ly/uvjRWFd"&gt;Click Here To Download Source Code {Google Drive}&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/-2ihchP6FuA"&gt;Watch the video tutorial {Youtube}&lt;/a&gt;&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>webdev</category>
      <category>javascript</category>
    </item>
  </channel>
</rss>
