<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Beautiful Chase RGB Glow Effect CSS</title>
      <author>MysticZA</author>
      <pubDate>Mon, 26 Apr 2021 15:36:34 +0000</pubDate>
      <link>https://dev.to/mysticza/beautiful-chase-rgb-glow-effect-css-1h2p</link>
      <guid>https://dev.to/mysticza/beautiful-chase-rgb-glow-effect-css-1h2p</guid>
      <description>&lt;p&gt;As an extension to Nikhil's: &lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/nikhil27b" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L13Hplw---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--DVAuMQ0j--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/481802/ff897af1-c333-4e04-8f08-d6d1356a1c14.jpeg" alt="nikhil27b image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/nikhil27b/amazing-button-hover-with-css-5egi" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Amazing button hover with CSS&lt;/h2&gt;
      &lt;h3&gt;Nikhil Bobade  ・ Apr 15 ・ 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;
I have created a full 360° "chase" effect using an altered version of the original design.
&lt;h2&gt;
  &lt;a href="#with-text-effect"&gt;
  &lt;/a&gt;
  With text effect:
&lt;/h2&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/MysticZA/embed/qBRvjEX?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#without-text-effect-better-visual-accessibility"&gt;
  &lt;/a&gt;
  Without text effect (better visual accessibility):
&lt;/h2&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/MysticZA/embed/zYNbzrN?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Please be sure to check out Nikhil's original post.&lt;br&gt;
Comments welcome!&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>webdev</category>
      <category>rgb</category>
    </item>
    <item>
      <title>Best Tool To Design Graphics Instantly</title>
      <author>GoOnlineTools</author>
      <pubDate>Mon, 26 Apr 2021 15:33:21 +0000</pubDate>
      <link>https://dev.to/goonlinetools/best-tool-to-design-graphics-instantly-2g3c</link>
      <guid>https://dev.to/goonlinetools/best-tool-to-design-graphics-instantly-2g3c</guid>
      <description>&lt;p&gt;Hi,&lt;/p&gt;

&lt;p&gt;Today in this post I will introduce the best graphic designing tools for beginners.&lt;/p&gt;

&lt;p&gt;When I have started designing for Social Media &amp;amp; Website, experts suggest me tools like Coral, Photoshop, etc&lt;/p&gt;

&lt;p&gt;But my suggestion for people who want to start graphic designing &amp;amp; learn everything easily without some expertise then starts Graphic Designing using these online tools -&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-canva"&gt;
  &lt;/a&gt;
  1. &lt;a href="https://bit.ly/3sN9AaU"&gt;Canva&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kf5ja6Vk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c54ucom4aoeuh2wmou7d.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kf5ja6Vk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c54ucom4aoeuh2wmou7d.jpg" alt="Canva screenshot"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Canva is a graphic design platform, used to create social media graphics, presentations, posters, documents, videos, and other visual content. The app includes templates for users to use. The platform is free to use and offers paid subscriptions like Canva Pro and Canva for Enterprise for additional functionality.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Canva offers 30 days of free pro access for new users.&lt;/strong&gt; If you haven't used canva before then &lt;a href="https://bit.ly/3sN9AaU"&gt;click here&lt;/a&gt; to try.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-visme"&gt;
  &lt;/a&gt;
  2. &lt;a href="https://bit.ly/3ezabIg"&gt;Visme&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dpnyUM5U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pi2t497nho6yzi7iby5u.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dpnyUM5U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pi2t497nho6yzi7iby5u.jpg" alt="Visme screenshot"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Visme is an all-in-one visual content platform that allows everyone, including non-designers, to create beautiful presentations, infographics, reports and social media images in minutes.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-crello"&gt;
  &lt;/a&gt;
  3. &lt;a href="https://bit.ly/32OqoUj"&gt;Crello&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vbISayXY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k1q5vzmamjqa6nxovds4.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vbISayXY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k1q5vzmamjqa6nxovds4.jpg" alt="Crello screenshot"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Crello is a video and graphic design tool for everyone – it will help you create visuals for social media in just a few minutes (be it a post, video Story, or an ad), design a business card or a flyer, create marketing collateral for print, social and blogs, as well as create long-form content like presentations and more.&lt;/p&gt;

&lt;p&gt;I recommend Canva because in terms of features and simplicity.&lt;/p&gt;

&lt;p&gt;Which tool you are using now for graphics designing. Let me know in comment.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>design</category>
    </item>
    <item>
      <title>How Strapi triggers Nuxt static site generation for S3 bucket</title>
      <author>Liu Yu Zhou</author>
      <pubDate>Mon, 26 Apr 2021 15:10:56 +0000</pubDate>
      <link>https://dev.to/jacobliu/how-strapi-triggers-nuxt-static-site-generation-for-s3-bucket-1fg6</link>
      <guid>https://dev.to/jacobliu/how-strapi-triggers-nuxt-static-site-generation-for-s3-bucket-1fg6</guid>
      <description>&lt;p&gt;I have been working on ecommerce website, we just suppose to build the website as operational.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#i-choose-strapi-and-nuxt-algolia-for-search-engine"&gt;
  &lt;/a&gt;
  I choose Strapi and Nuxt, Algolia for search engine
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Strapi&lt;/strong&gt; is headless CMS, open-source, provides the large-scale of APIs without hard-coding.&lt;br&gt;
&lt;strong&gt;Nuxt&lt;/strong&gt; is SSR vue.js based framework, useful for pre-rendered pages for ecommerce.&lt;br&gt;
&lt;strong&gt;Algolia&lt;/strong&gt; is client-side search engine, very impressive tool to make high traffic in business.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#the-infrastructure-i-use"&gt;
  &lt;/a&gt;
  The infrastructure I use
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Source repositories on &lt;em&gt;Github&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;Strapi on AWS &lt;em&gt;EC2&lt;/em&gt; instance&lt;/li&gt;
&lt;li&gt;Nuxt on AWS &lt;em&gt;S3&lt;/em&gt; bucket&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;
  &lt;a href="#the-things-i-need"&gt;
  &lt;/a&gt;
  The things I need
&lt;/h2&gt;

&lt;p&gt;The static website should be generated again when &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The developer commit the code updates.&lt;/li&gt;
&lt;li&gt;The author upload own product.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;
  &lt;a href="#how-did-i-tweak-the-problems"&gt;
  &lt;/a&gt;
  How did I tweak the problems
&lt;/h2&gt;

&lt;p&gt;I solved all problems with GitHub Actions, it is the great tool for CI/CD.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&amp;gt; SSG : The developer commit the code updates.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It involves several steps:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Specify when the github action should be trigger&lt;/li&gt;
&lt;li&gt;Configure AWS Credentials&lt;/li&gt;
&lt;li&gt;Create ENV files&lt;/li&gt;
&lt;li&gt;Cache Packages&lt;/li&gt;
&lt;li&gt;Install Packages&lt;/li&gt;
&lt;li&gt;Generate Static Pages&lt;/li&gt;
&lt;li&gt;Deploy website on S3 bucket&lt;/li&gt;
&lt;li&gt;Cloudfront Invalidation&lt;/li&gt;
&lt;/ul&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;&amp;gt; SSG: The author upload own product.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;This is the tricky,&lt;/strong&gt; I was stuck on this for couple of days.&lt;br&gt;
There should be something to trigger S3 updates from Strapi,&lt;br&gt;
I had researched the solutions and found that Netlify is the best solution because it provides build hook for CI/CD.&lt;br&gt;
However, I wanted to take the challenge and decided not to use Netlify. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;How can I achieve the same behavior without Netlify, keep S3 bucket?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Make the custom node app for webhook&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;After a while, I noticed that Github has REST APIs to control resources. I can dispatches APIs to certain repository.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;https://api.github.com/repos/{ORG_NAME}/{REPO_NAME}/dispatches
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This is the key.&lt;br&gt;
In this node app, we just set headers to call github APIs.&lt;br&gt;
I named the event as &lt;em&gt;ssg&lt;/em&gt;.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const postData = Buffer.from(
  JSON.stringify({
    event_type: "ssg",
  })
);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;headers: {
    Authorization: "token *****************",
    Accept: "application/vnd.github.everest-preview+json",
    "Content-Type": "application/json",
    "Content-Length": Buffer.byteLength(postData),
    "User-Agent": "nodejs request",
  },
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Finally, upload nodejs app on EC2 instance. Here is the completed code.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;2. Configure CI/CD script&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Configure script to listen dispatch events from node app.&lt;br&gt;
Github action listens the nodejs app request and regenerate the static website, deploy updates on S3.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;name: CI/CD
on:
  repository_dispatch:
    types: ssg
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;3. Register webhook in Strapi dashboard&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Register webhook on EC2 in Strapi dashboard&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7JcXIPkJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lfgixyzmizbh2p1d19wq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7JcXIPkJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lfgixyzmizbh2p1d19wq.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That's all, long journey. Thanks for joining me. :)&lt;/p&gt;

</description>
      <category>strapi</category>
      <category>nuxt</category>
      <category>github</category>
      <category>webhook</category>
    </item>
    <item>
      <title>Soft UI Dashboard - Free Jinja Template</title>
      <author>Sm0ke</author>
      <pubDate>Mon, 26 Apr 2021 15:03:24 +0000</pubDate>
      <link>https://dev.to/sm0ke/soft-ui-dashboard-free-jinja-template-3b7k</link>
      <guid>https://dev.to/sm0ke/soft-ui-dashboard-free-jinja-template-3b7k</guid>
      <description>&lt;p&gt;Hello Coders,&lt;/p&gt;

&lt;p&gt;This article presents an open-source &lt;strong&gt;&lt;a href="https://appseed.us/jinja-template"&gt;Jinja Template&lt;/a&gt;&lt;/strong&gt; crafted on top of a modern &lt;strong&gt;Bootstrap 5&lt;/strong&gt; design: &lt;strong&gt;Soft UI Dashboard&lt;/strong&gt;. The project might help beginners to code simple presentation websites on top of the existing codebase OR migrate the &lt;code&gt;production-ready&lt;/code&gt; UI to a legacy Python-based project compatible with &lt;strong&gt;Jinja Template Engine&lt;/strong&gt;: &lt;em&gt;Flask&lt;/em&gt;, &lt;em&gt;Django&lt;/em&gt;, &lt;em&gt;Bottle&lt;/em&gt; of &lt;em&gt;FastAPI&lt;/em&gt;.  Thanks for reading!&lt;/p&gt;




&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://jinja-soft-ui-dashboard.appseed-srv1.com/"&gt;Soft UI Dashboard Jinja&lt;/a&gt; - LIVE Demo&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/app-generator/jinja-soft-ui-dashboard"&gt;Soft UI Dashboard Jinja&lt;/a&gt; - Source Code (MIT License)&lt;/li&gt;
&lt;li&gt;More &lt;a href="https://appseed.us/jinja-template"&gt;Jinja Templates&lt;/a&gt; - a curated index&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vIxU-JEF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6nzwr5aqqv948io4iqtn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vIxU-JEF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6nzwr5aqqv948io4iqtn.png" alt="Soft UI Dashboard - Jinja Template."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;The design is the latest and most innovative crafted by the Creative-Tim agency. Made of hundred of elements, designed blocks, and fully coded pages, &lt;strong&gt;Soft UI Dashboard&lt;/strong&gt; is ready to help you create stunning websites and webapps.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Fully Coded Elements&lt;/strong&gt; - Soft UI Dashboard is built with over 70 frontend individual elements, like buttons, inputs, navbars, navtabs, cards or alerts, giving you the freedom of choosing and combining. All components can take variations in colour, that you can easily modify using SASS files and classes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example Pages&lt;/strong&gt; - If you want to get inspiration or just show something directly to your clients, you can jump start your development with our pre-built example pages. You will be able to quickly set up the basic structure for your web project.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--liqs65Xf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ybwshf9d3lqfo16faz7a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--liqs65Xf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ybwshf9d3lqfo16faz7a.png" alt="Soft UI Dashboard - Billing Page."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Soft UI Dashboard&lt;/strong&gt; - UI Tables&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MpviYrjf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mlpsd5f1hg1c3gdexdip.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MpviYrjf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mlpsd5f1hg1c3gdexdip.png" alt="Soft UI Dashboard - UI Tables."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Soft UI Dashboard&lt;/strong&gt; - User Profile Page&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hwTAiG-n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8k0swso6r8xpitbiucf8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hwTAiG-n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8k0swso6r8xpitbiucf8.png" alt="Soft UI Dashboard - User Profile Page."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;To compile the project locally, Python3 and GIT should be installed and accessible via the terminal. Once we have this minimum tool-chain, we need to follow a simple setup as presented in the README file, saved on Github.&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;Step #1 - Clone the sources&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="c"&gt;# Clone the sources&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;git clone https://github.com/app-generator/jinja-soft-ui-dashboard.git
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;jinja-soft-ui-dashboard
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;&lt;strong&gt;Step #2 - Install Dependencies&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;virtualenv &lt;span class="nb"&gt;env&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;source env&lt;/span&gt;/bin/activate
&lt;span class="err"&gt;$&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="c"&gt;# Install requirements&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;pip3 &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-r&lt;/span&gt; requirements.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;&lt;strong&gt;Step #3 - Start the App&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="c"&gt;# Set the FLASK_APP environment variable&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;FLASK_ENV&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;development
&lt;span class="nv"&gt;$ &lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;flask run
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If all goes well, we should see the &lt;strong&gt;Soft UI Dashboard&lt;/strong&gt; running in the browser.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LUZQHCsr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f98ytwg6xxil824gkh9b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LUZQHCsr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f98ytwg6xxil824gkh9b.png" alt="Soft UI Dashboard - Login Page."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Thanks for reading!&lt;/strong&gt; For more resources, please access:&lt;/p&gt;
&lt;/blockquote&gt;




&lt;ul&gt;
&lt;li&gt;More starters styled with &lt;a href="https://appseed.us/ui-kit/soft-ui-design-system"&gt;Soft UI Design System&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;More &lt;a href="https://appseed.us/ui-kit/soft-ui-design-system"&gt;Free Admin Dashboards&lt;/a&gt; - provided by AppSeed &lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>webdev</category>
      <category>python</category>
      <category>flask</category>
    </item>
    <item>
      <title>5 Ideas to set your portfolio apart</title>
      <author>Paula Santamaría</author>
      <pubDate>Mon, 26 Apr 2021 15:01:17 +0000</pubDate>
      <link>https://dev.to/paulasantamaria/5-ideas-to-set-your-portfolio-apart-170c</link>
      <guid>https://dev.to/paulasantamaria/5-ideas-to-set-your-portfolio-apart-170c</guid>
      <description>&lt;p&gt;Tired of building TO-DO lists and e-commerce sites? One of these Chrome extension ideas could help you set your portfolio apart! 👩‍💻&lt;/p&gt;

&lt;p&gt;All you need to know to build your first Chrome Extension is the &lt;strong&gt;basics of HTML, JavaScript, and CSS&lt;/strong&gt;! These are a few fun ideas I came up with that can be created using only those technologies.&lt;/p&gt;

&lt;p&gt;If you're having doubts, check out my video &lt;a href="https://www.instagram.com/tv/CLIRDc4gWyz/"&gt;Creating a simple Chrome Extension in 2 minutes&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#1-dark-mode-for-your-favorite-website"&gt;
  &lt;/a&gt;
  1. Dark mode for your favorite website
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8O5PXWyK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/pd7BYKa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8O5PXWyK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/pd7BYKa.png" alt="Dark mode icon - The moon, some clouds and a few stars in the sky"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Do you regularly use a website that you love but doesn't have dark mode? &lt;/p&gt;

&lt;p&gt;With Chrome extensions, you can create your own CSS stylesheet that overrides some styles in a particular website. This allows you to apply dark mode styles over the website when your extension is enabled.&lt;/p&gt;

&lt;p&gt;To achieve that, you should use &lt;strong&gt;Content Scripts&lt;/strong&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Tip: Set &lt;code&gt;"run_at": "document_end"&lt;/code&gt;  in the &lt;code&gt;content_scripts&lt;/code&gt; object in the &lt;code&gt;manifest.json&lt;/code&gt; so your styles override the site's.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;For this project, you'll need to learn about:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.chrome.com/docs/extensions/mv3/content_scripts/"&gt;Content Scripts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#2-weather-app"&gt;
  &lt;/a&gt;
  2. Weather App
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MDe4-Hni--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/7XO2kWk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MDe4-Hni--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/7XO2kWk.png" alt="Weather icon - A cloud, rain and the sun behind it"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You could create an extension that shows the current weather for a particular location on your browser. &lt;/p&gt;

&lt;p&gt;You'll need to call an API to retrieve the weather info: &lt;a href="https://openweathermap.org/api/one-call-api"&gt;OpenWeatherMap API&lt;/a&gt; is a good option. They have a free plan.&lt;/p&gt;

&lt;p&gt;Get the latest weather updates every few minutes in the background using an alarm from the &lt;code&gt;chrome.alarms&lt;/code&gt; API handled by a Service Worker.&lt;/p&gt;

&lt;p&gt;Store the results using the &lt;code&gt;chrome.storage&lt;/code&gt; API and display them in your extension's Action Popup.&lt;/p&gt;

&lt;p&gt;To call the API, you can use &lt;code&gt;fetch&lt;/code&gt;, and you'll need to add something like the following to your &lt;code&gt;manifest.json&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="nl"&gt;"host_permissions"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"https://some-weather-api.com/*"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For this project you'll need to learn about:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.chrome.com/docs/extensions/reference/storage/"&gt;&lt;code&gt;chrome.storage&lt;/code&gt; API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.chrome.com/docs/apps/app_codelab_alarms/"&gt;&lt;code&gt;chrome.alarms&lt;/code&gt; API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.chrome.com/docs/extensions/reference/action/"&gt;&lt;code&gt;chrome.action&lt;/code&gt; API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.chrome.com/docs/extensions/mv3/background_pages/"&gt;Service Workers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#3-show-todays-calendar"&gt;
  &lt;/a&gt;
  3. Show today's calendar.
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--c9qriOGD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/1N4uIDX.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c9qriOGD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/1N4uIDX.png" alt="Calendar icon - A calendar with a clock"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You could get easy access to your Calendar events for the day, showing them in your Browser through an Extension. &lt;/p&gt;

&lt;p&gt;As with the previous idea, you'll need to get the data from an external API (Google Calendar's or your favorite calendar API) every few minutes in the background using an alarm from the &lt;code&gt;chrome.alarms&lt;/code&gt; API and a Service Worker. &lt;/p&gt;

&lt;p&gt;You'll also need to store the results of the API request using &lt;code&gt;chrome.storage&lt;/code&gt;. Remember that Service Workers can be unloaded when the extension goes idle, so you can't just store the calendar events in a variable declared in your Service Worker.&lt;/p&gt;

&lt;p&gt;Display the events with their title, time, guests, etc., in your extension's Action Popup.&lt;/p&gt;

&lt;p&gt;You can also use &lt;code&gt;chrome.notifications&lt;/code&gt; API to show a message to the user a few minutes before the event.&lt;/p&gt;

&lt;p&gt;For this project you'll need to learn about:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.chrome.com/docs/extensions/reference/storage/"&gt;&lt;code&gt;chrome.storage&lt;/code&gt; API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.chrome.com/docs/apps/app_codelab_alarms/"&gt;&lt;code&gt;chrome.alarms&lt;/code&gt; API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.chrome.com/docs/extensions/reference/action/"&gt;&lt;code&gt;chrome.action&lt;/code&gt; API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.chrome.com/docs/extensions/reference/notifications/"&gt;&lt;code&gt;chrome.notifications&lt;/code&gt; API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.chrome.com/docs/extensions/mv3/background_pages/"&gt;Service Workers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#4-daily-coffee"&gt;
  &lt;/a&gt;
  4. Daily coffee
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xwR_0DCB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/IaSq7MB.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xwR_0DCB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/IaSq7MB.png" alt="Coffee cup icon - A coffee cup with coffee"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Show the user a random coffee recipe to try every day.&lt;/p&gt;

&lt;p&gt;In this case, you don't need to call an external API (at least at first). You could just store a list of your favorite recipes in a JSON array in your extension and use a &lt;code&gt;Math.random()&lt;/code&gt; to get a random item from the array every day.&lt;/p&gt;

&lt;p&gt;Display the coffee recipe with a nice picture in the Action Popup.&lt;/p&gt;

&lt;p&gt;To make it more robust, you could use &lt;code&gt;chrome.storage&lt;/code&gt; to store the last coffee recipe shown and the date to make sure of two things:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A single coffee recipe is shown every day.&lt;/li&gt;
&lt;li&gt;We don't get the same recipe two days in a row.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For this project you'll need to learn about:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.chrome.com/docs/extensions/reference/action/"&gt;&lt;code&gt;chrome.action&lt;/code&gt; API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://developer.chrome.com/docs/extensions/reference/storage/"&gt;&lt;code&gt;chrome.storage&lt;/code&gt; API&lt;/a&gt; (optional)&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#5-ecommerce-wishlist"&gt;
  &lt;/a&gt;
  5. E-Commerce wishlist
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JZWSfaRK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/yTvftWv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JZWSfaRK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/yTvftWv.png" alt="Wishlist icon - A page with a list of items and a heart"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Allow users to add products from Amazon, eBay, etc., to their wishlist: When a user finds a product they're interested in, they add it to their wishlist using a keyboard shortcut or from the &lt;strong&gt;Action popup&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The Action popup also shows the previously added items and allows the user to remove them.&lt;/p&gt;

&lt;p&gt;The user should also be able to navigate to each product page in case they want to buy it. For this, you should use &lt;code&gt;chrome.tabs.create&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;You'll need to store links, name, and price for each product using &lt;code&gt;chrome.storage&lt;/code&gt; API. &lt;/p&gt;

&lt;p&gt;For this project you'll need to learn about:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.chrome.com/docs/extensions/reference/action/"&gt;&lt;code&gt;chrome.action&lt;/code&gt; API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://developer.chrome.com/docs/extensions/reference/storage/"&gt;&lt;code&gt;chrome.storage&lt;/code&gt; API&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://developer.chrome.com/docs/extensions/reference/tabs"&gt;&lt;code&gt;chrome.tabs&lt;/code&gt; API&lt;/a&gt; - Particularly the &lt;a href="https://developer.chrome.com/docs/extensions/reference/tabs/#method-create"&gt;&lt;code&gt;create&lt;/code&gt; method&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;I hope this post was helpful and inspires you to work on your next project! If you're interested in learning about Chrome extensions, check out &lt;a href="https://dev.to/paulasantamaria/creating-a-simple-chrome-extension-36m"&gt;my series about it&lt;/a&gt; where I create a simple chrome extension and gradually improve it. At the same time, I explore most of the &lt;code&gt;chrome&lt;/code&gt; APIs and concepts required to build the ideas mentioned in this post.&lt;/p&gt;

&lt;p&gt;You can also check out my video &lt;a href="https://www.instagram.com/tv/CLIRDc4gWyz/"&gt;Creating a simple Chrome Extension in 2 minutes&lt;/a&gt; to get a grasp of the process.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Icons by Smashicons &amp;amp; Freepik on Flaticon.com&lt;/em&gt;&lt;/p&gt;

</description>
      <category>chromeextension</category>
      <category>javascript</category>
      <category>portfolio</category>
      <category>beginners</category>
    </item>
    <item>
      <title>The Powers of AJAX</title>
      <author>ManuTheCoder</author>
      <pubDate>Mon, 26 Apr 2021 14:48:40 +0000</pubDate>
      <link>https://dev.to/manuthecoder/the-powers-of-ajax-3j41</link>
      <guid>https://dev.to/manuthecoder/the-powers-of-ajax-3j41</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Ajax is a set of web development techniques using many web &lt;br&gt;
technologies on the client-side to create asynchronous web applications. With Ajax, web applications can send and retrieve data from a server asynchronously without interfering with the display and behaviour of the existing page. (Wikipedia)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;AJAX is very useful for building single page apps. &lt;br&gt;
It's also very powerful because you can submit forms and send requests, without reloading the page!&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#how-to-use-ajax"&gt;
  &lt;/a&gt;
  How to use AJAX
&lt;/h3&gt;

&lt;p&gt;AJAX is very simple to use. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Just create an index.html file, and insert this code in a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag. &lt;/li&gt;
&lt;li&gt;Create another file named &lt;code&gt;ajax_is_awesome.php&lt;/code&gt;. Write whatever you want in that file!&lt;/li&gt;
&lt;li&gt;View your website!
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;ajax&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;XMLHttpRequest&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;ajax&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onreadystatechange&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;readyState&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;demo&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;ajax&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;responseText&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="nx"&gt;ajax&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;GET&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ajax_is_awesome.php&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;ajax&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Explained&lt;br&gt;
&lt;strong&gt;&lt;code&gt;var ajax&lt;/code&gt;&lt;/strong&gt; - Creates a new variable for the class &lt;strong&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/strong&gt; - XMLHttpRequest is an API in the form of an object whose methods transfer data between a web browser and a web server.  (Wikipedia)&lt;br&gt;
&lt;strong&gt;&lt;code&gt;onreadystatechange&lt;/code&gt;&lt;/strong&gt; - When the file has loaded&lt;br&gt;
&lt;strong&gt;&lt;code&gt;this.readyState == 4 &amp;amp;&amp;amp; this.status == 200&lt;/code&gt;&lt;/strong&gt; - If the document's status isn't 404, 500, etc. Must be 200&lt;br&gt;
&lt;strong&gt;&lt;code&gt;ajax.open("GET", "index.php", true);&lt;/code&gt;&lt;/strong&gt; - Opens the ajax file. Using GET this time. &lt;br&gt;
&lt;strong&gt;&lt;code&gt;ajax.send();&lt;/code&gt;&lt;/strong&gt; - Sends the request&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#how-to-use-ajax-in-jquery"&gt;
  &lt;/a&gt;
  How to use AJAX in jQuery
&lt;/h3&gt;

&lt;p&gt;Remember to include the &lt;code&gt;&amp;lt;script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"&amp;gt;&amp;lt;/script&amp;gt;&lt;/code&gt; line in your code&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#someform&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;submit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;preventDefault&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;form&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;action&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ajax&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
           &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;POST&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
           &lt;span class="na"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
           &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;serialize&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; 
           &lt;span class="na"&gt;success&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;          
            &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;demo&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
           &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;See? AJAX is cool! Implement it, and you won't have redirects when submitting forms, or doing very simple things, such as checking for new notifications every few seconds. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://manuthecoder.github.io/docjs/docs/"&gt;Example of a single page documentation I made using AJAX&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/manuthecoder/docjs"&gt;pls star it on github if you like this!&lt;/a&gt;&lt;/p&gt;

</description>
      <category>ajax</category>
      <category>html</category>
      <category>javascript</category>
    </item>
    <item>
      <title>LAMP Docker setup with PHP 8 and MariaDB for Symfony projects</title>
      <author>Goran Hrženjak</author>
      <pubDate>Mon, 26 Apr 2021 14:44:52 +0000</pubDate>
      <link>https://dev.to/bornfightcompany/lamp-docker-setup-with-php-8-and-mariadb-for-symfony-projects-5hic</link>
      <guid>https://dev.to/bornfightcompany/lamp-docker-setup-with-php-8-and-mariadb-for-symfony-projects-5hic</guid>
      <description>&lt;p&gt;Yet another one?!&lt;/p&gt;

&lt;p&gt;Well, either my searching skills are getting rusty or my request was too specific while at the same time being pretty basic, or something would crash and break during the build process after following available online tutorials or downloading existing projects... but I couldn't find a single solution which I could reuse for my exact needs with just a couple of changes in the configuration. &lt;br&gt;
I had to come up with my own, which is the result of bits and pieces taken from those that didn't fully work for me, as well as some knowledge and understanding of Docker I gained along the way. I'd like to share it; maybe it will be useful for someone else in this very format. &lt;/p&gt;

&lt;p&gt;I've decided to use Docker for my local development because different projects I'm working on require different versions of PHP, NodeJS and even different versions of Composer... and switching/upgrading/downgrading those versions whenever I switched my focus on another project became cumbersome. &lt;br&gt;
Docker can be really slow, but listing pros and cons of Docker is not the topic here.&lt;/p&gt;

&lt;p&gt;I don't intend to get into the details of each line of code and explain all used commands. What I can do is encourage you into having a look at this great &lt;a href="https://tech.osteel.me/posts/docker-for-local-web-development-part-1-a-basic-lemp-stack"&gt;"Docker for local web development" series&lt;/a&gt; where you can learn much more. This was my main resource as well.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#lets-get-started"&gt;
  &lt;/a&gt;
  Let's get started
&lt;/h3&gt;

&lt;p&gt;All my new projects will be using &lt;strong&gt;PHP 8&lt;/strong&gt; because of some great features I'd like to exploit which were not there prior to version 8. I think it's worth using the latest versions when starting fresh, so that's the stack I'm dealing with. &lt;strong&gt;Symfony 5.2&lt;/strong&gt; includes support for &lt;a href="https://stitcher.io/blog/attributes-in-php-8"&gt;PHP 8 attributes&lt;/a&gt; to define routes and required dependencies, and that's one more argument in favour of it. I'll also use &lt;strong&gt;Apache&lt;/strong&gt; for server and &lt;strong&gt;MariaDB&lt;/strong&gt; for database. &lt;br&gt;
On top of my Symfony project, I'll add PhpMyAdmin to save me some trouble when manually dealing with DB stuff.&lt;/p&gt;

&lt;p&gt;I intend to have multiple projects locally with this exact stack, so I had to come up with something simple enough and reusable to get me started quick, but something I can build on top of and extend when necessary.&lt;/p&gt;

&lt;p&gt;Prerequisites are installed &lt;a href="https://docs.docker.com/get-docker/"&gt;Docker&lt;/a&gt; and &lt;a href="https://docs.docker.com/compose/install/"&gt;Docker Compose&lt;/a&gt; (which, depending on your platform, might be a part of the Docker installation). If you're using Windows, make sure you have the WSL2 feature enabled.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#folder-structure-overview"&gt;
  &lt;/a&gt;
  Folder structure overview
&lt;/h3&gt;

&lt;p&gt;Maybe it will be easier to follow if I provide the final folder structure first, so here it is:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.
├── codebase/
├── docker/
│   ├── db/
│   │   └── mariadb/
│   │       └── my.cnf
│   └── server/
│       ├── apache/
│       │   └── sites-enabled/
│       │       └── site.conf
│       ├── php/
│       │   └── php.ini
│       └── Dockerfile
├── .env
└── docker-compose.yml
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;All folder names are arbitrary. Make sure, if you're going to rename them, to rename them accordingly in the configurations.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;codebase&lt;/code&gt; folder will hold all our project code. Since this will be a Symfony app, we will have &lt;code&gt;public&lt;/code&gt; folder with &lt;code&gt;index.php&lt;/code&gt; file within it and that's what we'll rely on throughout the setup. For starters, &lt;code&gt;codebase&lt;/code&gt; folder is empty.&lt;/p&gt;

&lt;p&gt;In &lt;code&gt;.env&lt;/code&gt; file, we'll have project-level Docker environment variables. As a part of this guide, I will not configure local machine's &lt;code&gt;hosts&lt;/code&gt; file to make site access more user friendly, but will access it over localhost:[PORT]. You must make sure that the port is not occupied already and map available ports from your local machine to container's port &lt;code&gt;80&lt;/code&gt;. In the same manner, I'll map a port for PhpMyAdmin. Stick with some convention and be consistent. &lt;br&gt;
E.G. use ports &lt;code&gt;8101&lt;/code&gt; and &lt;code&gt;8102&lt;/code&gt; for project A, &lt;code&gt;8103&lt;/code&gt; and &lt;code&gt;8104&lt;/code&gt; for project B and so on... &lt;br&gt;
The same applies for DB port. You might already have default port 3306 occupied on your local machine. &lt;br&gt;
I'm using &lt;code&gt;APP_NAME&lt;/code&gt; variable to avoid some extra copy-pasting in the configurations, but that's completely up to you.&lt;br&gt;
&lt;code&gt;MYSQL_*&lt;/code&gt; config variables are pretty self-explanatory.&lt;/p&gt;

&lt;p&gt;Here's what my &lt;code&gt;.env&lt;/code&gt; file looks like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;APP_NAME=symfony_project_2021
APP_PORT=8101
APP_DB_ADMIN_PORT=8102
DB_PORT=33016

MYSQL_ROOT_PASS=superSecr3t
MYSQL_USER=app_user
MYSQL_PASS=t3rceS
MYSQL_DB=symfony_project_2021
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#docker-compose"&gt;
  &lt;/a&gt;
  Docker Compose
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;docker-compose.yml&lt;/code&gt; YAML file is where our services are defined and based on it, Docker Compose will take care of building the images and starting the containers. We will connect all our services to internal network &lt;code&gt;symfony_project_2021_net&lt;/code&gt;, which is also defined in &lt;code&gt;docker-compose.yml&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;We will use 3 services:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;server&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;db_server&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;db_admin&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;version: '3.9'

networks:
  symfony_project_2021_net:

services:
  server:
    build:
      context: .
      dockerfile: ./docker/server/Dockerfile
    container_name: '${APP_NAME}-server'
    ports:
      - '${APP_PORT}:80'
    working_dir: /var/www/html
    environment:
      - 'DATABASE_URL=mysql://${MYSQL_USER}:${MYSQL_PASS}@db_server:3306/${MYSQL_DB}?serverVersion=10.5'
    volumes:
      - ./codebase:/var/www/html
      - ./docker/server/apache/sites-enabled:/etc/apache2/sites-enabled
      - ./docker/server/php/php.ini:/usr/local/etc/php/conf.d/extra-php-config.ini
    depends_on:
      db_server:
        condition: service_healthy
    networks:
      - symfony_project_2021_net

  db_server:
    image: mariadb:10.5.9
    container_name: '${APP_NAME}-db'
    restart: always
    ports:
      - '${DB_PORT}:3306'
    environment:
      MYSQL_ROOT_PASSWORD: '${MYSQL_ROOT_PASS}'
      MYSQL_USER: '${MYSQL_USER}'
      MYSQL_PASSWORD: '${MYSQL_PASS}'
      MYSQL_DATABASE: '${MYSQL_DB}'
    volumes:
      - db_data:/var/lib/mysql
      - ./docker/db/mariadb/my.cnf:/etc/mysql/conf.d/my.cnf
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u root --password=$$MYSQL_ROOT_PASSWORD
      interval: 5s
      retries: 5
    networks:
      - symfony_project_2021_net

  db_admin:
    image: phpmyadmin/phpmyadmin:5
    container_name: '${APP_NAME}-db-admin'
    ports:
      - '${APP_DB_ADMIN_PORT}:80'
    environment:
      PMA_HOST: db_server
    depends_on:
      db_server:
        condition: service_healthy
    volumes:
      - db_admin_data:/var/www/html
    networks:
      - symfony_project_2021_net

volumes:
  db_data:
  db_admin_data:

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We'll use official Docker images for building &lt;code&gt;db_server&lt;/code&gt; and &lt;code&gt;db_admin&lt;/code&gt; containers. You can find the official (and many other) container images on &lt;a href="https://hub.docker.com/"&gt;Docker Hub&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#server"&gt;
  &lt;/a&gt;
  Server
&lt;/h3&gt;

&lt;p&gt;We'll use our own Dockerfile to specify what the &lt;code&gt;server&lt;/code&gt; image looks like. &lt;br&gt;
Content of &lt;code&gt;/docker/server/Dockerfile&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;FROM php:8.0-apache

RUN a2enmod rewrite

RUN apt-get update &amp;amp;&amp;amp; apt-get install -y git unzip zip

WORKDIR /var/www/html

COPY --from=mlocati/php-extension-installer /usr/bin/install-php-extensions /usr/local/bin/
RUN install-php-extensions gd pdo_mysql bcmath zip intl opcache

COPY --from=composer:2.0 /usr/bin/composer /usr/local/bin/composer
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Docker &lt;a href="https://github.com/mlocati/docker-php-extension-installer"&gt;PHP extension installer&lt;/a&gt; script will install all the required APT/APK packages. At the end of the script execution, packages that are no longer needed will be removed, so the image will be much smaller.&lt;br&gt;
Using &lt;code&gt;docker-php-ext-install&lt;/code&gt; didn't always work for me, so I'm pulling this extra script. You can expand the list of extensions to install, if necessary.&lt;br&gt;
After that, we'll also pull the Composer. What do you think about setting up a separate container for Composer?&lt;/p&gt;

&lt;p&gt;Content of our local folder &lt;code&gt;codebase&lt;/code&gt; will be considered a volume mapped to &lt;code&gt;/var/www/html&lt;/code&gt;, which is the project root.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#apache"&gt;
  &lt;/a&gt;
  Apache
&lt;/h3&gt;

&lt;p&gt;Site is defined on Apache side, in &lt;code&gt;docker/server/apache/sites-enabled/site.conf&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;VirtualHost *:80&amp;gt;
  DocumentRoot /var/www/html/public
  &amp;lt;Directory /var/www/html/public&amp;gt;
      AllowOverride None
      Order Allow,Deny
      Allow from All

      &amp;lt;IfModule mod_rewrite.c&amp;gt;
          Options -MultiViews
          RewriteEngine On
          RewriteCond %{REQUEST_FILENAME} !-f
          RewriteRule ^(.*)$ index.php [QSA,L]
      &amp;lt;/IfModule&amp;gt;
  &amp;lt;/Directory&amp;gt;
&amp;lt;/VirtualHost&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Again, this is Symfony-specific (something very similar would be used for Laravel projects as well).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#configurations"&gt;
  &lt;/a&gt;
  Configurations
&lt;/h3&gt;

&lt;p&gt;Finally, there are some extra configurations for PHP and MariaDB in &lt;code&gt;/docker/server/php/php.ini&lt;/code&gt; and &lt;code&gt;/docker/db/mariadb/my.cnf&lt;/code&gt;, respectively.&lt;br&gt;
You can configure and overwrite defaults in those files if necessary.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;upload_max_filesize = 30M
post_max_size = 80M
short_open_tag = Off
memory_limit =  256M
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[mysqld]
collation-server = utf8mb4_unicode_ci
character-set-server = utf8mb4
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We'll use named volumes to persist data. We need such volumes because without them, every time the DB service container is destroyed the database is destroyed with it. This is what that final section in &lt;code&gt;docker-compose.yml&lt;/code&gt; is for. Volumes are referenced in &lt;code&gt;db_server&lt;/code&gt; and &lt;code&gt;db_admin&lt;/code&gt; services.&lt;/p&gt;

&lt;p&gt;Order in which containers are started is important and that's what we've set with &lt;code&gt;depends_on&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Specifying environment server variables is also completely up to you; you're free to use another &lt;code&gt;.env&lt;/code&gt; file in the Symfony project root folder. &lt;code&gt;DATABASE_URL&lt;/code&gt; variable is Symfony-specific, and if you display it on the server, you should get&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vA_DauAc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/94h4j7kpof12jtetw00d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vA_DauAc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/94h4j7kpof12jtetw00d.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Variables defined like this will have precedence over those defined in &lt;code&gt;.env&lt;/code&gt; files (in Symfony project root folder).&lt;br&gt;
You can do the same thing for Laravel project.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ready-set-"&gt;
  &lt;/a&gt;
  Ready, set, ...
&lt;/h3&gt;

&lt;p&gt;In your terminal, run &lt;code&gt;docker-compose up -d --build&lt;/code&gt; to start the containers. The process will take some time, but only the first time you're building containers.&lt;/p&gt;

&lt;p&gt;After this is done, check your containers by running &lt;code&gt;docker-compose ps&lt;/code&gt; in the terminal.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--O7ai4Qtt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wm2phchz1txvaf6idusk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--O7ai4Qtt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wm2phchz1txvaf6idusk.png" alt="Running containers"&gt;&lt;/a&gt;&lt;br&gt;
Also, in Docker Desktop app you should see:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qzeLMhKH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/06ea8ytp4cec2hblhw3k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qzeLMhKH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/06ea8ytp4cec2hblhw3k.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Everything from now on should be a walk in the park. Or that's what I thought when following all online resources I could find 😃&lt;/p&gt;

&lt;p&gt;Execute Bash on &lt;code&gt;server&lt;/code&gt; container (where &lt;code&gt;server&lt;/code&gt; is the name you've given to container) by running &lt;code&gt;docker-compose exec server bash&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;We've set our working directory on the server to &lt;code&gt;/var/www/html&lt;/code&gt;. While at it, run &lt;code&gt;composer create-project symfony/website-skeleton .&lt;/code&gt;. If you prefer, you can install Symfony installer as well (add it to &lt;code&gt;Dockerfile&lt;/code&gt;).&lt;br&gt;
This will install the Symfony project. &lt;br&gt;
It's important that you do this directly on the server because your local Composer and PHP versions might be different and you could run into compatibility issues. &lt;/p&gt;

&lt;p&gt;Now check &lt;a href="http://localhost:8101/"&gt;http://localhost:8101/&lt;/a&gt; and &lt;a href="http://localhost:8102/"&gt;http://localhost:8102/&lt;/a&gt;. Your site and PhpMyAdmin should be available!&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BNxovAJg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0ah7hix77tm91k1802kk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BNxovAJg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0ah7hix77tm91k1802kk.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Was this guide "yet another" that didn't fully work for your local setup? What would you improve or change completely? &lt;br&gt;
Which other containers do you usually use to get your projects up and running?&lt;/p&gt;

</description>
      <category>engineeringmonday</category>
      <category>docker</category>
      <category>symfony</category>
      <category>devops</category>
    </item>
    <item>
      <title>How to create a gradient drop shadow</title>
      <author>Stackfindover</author>
      <pubDate>Mon, 26 Apr 2021 14:42:07 +0000</pubDate>
      <link>https://dev.to/stackfindover/how-to-create-a-gradient-drop-shadow-1699</link>
      <guid>https://dev.to/stackfindover/how-to-create-a-gradient-drop-shadow-1699</guid>
      <description>&lt;p&gt;&lt;strong&gt;&lt;em&gt;Hello, guys In this tutorial we will try to solve the mentioned query. and also we will learn how to create a gradient drop shadow&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#common-query"&gt;
  &lt;/a&gt;
  Common Query
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;How to create a gradient drop shadow&lt;/li&gt;
&lt;li&gt;How to an awesome drop shadow&lt;/li&gt;
&lt;li&gt;How to create a drop shadow&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;See Also :-&lt;/strong&gt; &lt;a href="https://blogs.stackfindover.com/how-to-create-a-animated-button/"&gt;How to create a animated button&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-create-gradient-drop-shadow-step-by-step"&gt;
  &lt;/a&gt;
  How to create gradient drop shadow step by step
&lt;/h3&gt;

&lt;p&gt;First, we need to create two files index.html and style.css then we need to do code for it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step1"&gt;
  &lt;/a&gt;
  Step:#1
&lt;/h3&gt;

&lt;p&gt;Add below code inside index.html&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"UTF-8"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;How to create gradient shadow css&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width, initial-scale=1.0"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;http-equiv=&lt;/span&gt;&lt;span class="s"&gt;"X-UA-Compatible"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"ie=edge"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"style.css"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://fonts.googleapis.com/css2?family=IBM+Plex+Sans&amp;amp;display=swap"&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"box"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Stackfindover&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#step2"&gt;
  &lt;/a&gt;
  Step:#2
&lt;/h3&gt;

&lt;p&gt;Then we need to add code for style.css which code I provide in the below screen.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;'IBM Plex Sans'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;overflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#f2f4f6&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.box&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;320px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;230px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;linear-gradient&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="nb"&gt;top&lt;/span&gt; &lt;span class="nb"&gt;left&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;#0400ff&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;#ff3d00&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;h1&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.box&lt;/span&gt;&lt;span class="nd"&gt;:before&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;z-index&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;inherit&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translateY&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;scale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0.95&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;blur&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.7&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;opacity&lt;/span&gt; &lt;span class="m"&gt;0.3s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.box&lt;/span&gt;&lt;span class="nd"&gt;:hover:before&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#how-to-create-gradient-drop-shadow-video-output"&gt;
  &lt;/a&gt;
  How to create gradient drop shadow video output:
&lt;/h3&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/qAq5GNGmuFc"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-create-gradient-drop-shadow-codepen-output"&gt;
  &lt;/a&gt;
  How to create gradient drop shadow Codepen Output:
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;We will update soon:)&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>10 Bootstrap Search </title>
      <author>MD Bootstrap</author>
      <pubDate>Mon, 26 Apr 2021 14:20:57 +0000</pubDate>
      <link>https://dev.to/mdbootstrap/10-bootstrap-search-5do0</link>
      <guid>https://dev.to/mdbootstrap/10-bootstrap-search-5do0</guid>
      <description>&lt;p&gt;A stunning collection of Search templates built with the newest Bootstrap 5. Practical examples and usage in real projects.&lt;/p&gt;

&lt;p&gt;If you want to learn more about the construction of the Search and get to know the basic and advanced usage of this component - read &lt;a href="https://mdbootstrap.com/docs/standard/forms/search/"&gt;📄 Search documentation&lt;/a&gt; &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#intro-half-page"&gt;
  &lt;/a&gt;
  Intro half page
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://mdbootstrap.com/snippets/standard/mdbootstrap/2909390?view=side"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HW6llSin--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mdbootstrap.com/wp-content/themes/mdbootstrap4/content-gh/en/_mdb5/standard/web/docs/forms/search/examples/assets/img1.webp" alt="Intro half page"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#intro-colorful-background"&gt;
  &lt;/a&gt;
  Intro colorful background
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://mdbootstrap.com/snippets/standard/mdbootstrap/2909424?view=side"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0KDAVcgY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mdbcdn.b-cdn.net/wp-content/themes/mdbootstrap4/content-gh/en/_mdb5/standard/web/docs/forms/search/examples/assets/img2.jpg" alt="Intro colorful background"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#intro-light-card"&gt;
  &lt;/a&gt;
  Intro light card
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://mdbootstrap.com/snippets/standard/mdbootstrap/2909474?view=side"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mt03kGjn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mdbcdn.b-cdn.net/wp-content/themes/mdbootstrap4/content-gh/en/_mdb5/standard/web/docs/forms/search/examples/assets/img3.jpg" alt="Intro light card"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#intro-dark-card"&gt;
  &lt;/a&gt;
  Intro dark card
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://mdbootstrap.com/snippets/standard/mdbootstrap/2912504?view=side"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GFB9EEja--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mdbcdn.b-cdn.net/wp-content/themes/mdbootstrap4/content-gh/en/_mdb5/standard/web/docs/forms/search/examples/assets/img4.jpg" alt="Intro dark card"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#intro-color-of-the-year"&gt;
  &lt;/a&gt;
  Intro color of the year
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://mdbootstrap.com/snippets/standard/mdbootstrap/2912619?view=side"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NDg9dfhp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mdbcdn.b-cdn.net/wp-content/themes/mdbootstrap4/content-gh/en/_mdb5/standard/web/docs/forms/search/examples/assets/img5.jpg" alt="Intro color of the year"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#intro-gradient-input"&gt;
  &lt;/a&gt;
  Intro gradient input
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://mdbootstrap.com/snippets/standard/mdbootstrap/2912933?view=side"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Avu9TDxO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mdbcdn.b-cdn.net/wp-content/themes/mdbootstrap4/content-gh/en/_mdb5/standard/web/docs/forms/search/examples/assets/img6.jpg" alt="Intro gradient input"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#intro-vertical-image"&gt;
  &lt;/a&gt;
  Intro vertical image
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://mdbootstrap.com/snippets/standard/mdbootstrap/2909118?view=side"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--noNkxv6N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mdbcdn.b-cdn.net/wp-content/themes/mdbootstrap4/content-gh/en/_mdb5/standard/web/docs/forms/search/examples/assets/img7.jpg" alt="Intro vertical image"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#intro-with-glass-card"&gt;
  &lt;/a&gt;
  Intro with glass card
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://mdbootstrap.com/snippets/standard/mdbootstrap/2909145?view=side"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hKezEf9Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mdbcdn.b-cdn.net/wp-content/themes/mdbootstrap4/content-gh/en/_mdb5/standard/web/docs/forms/search/examples/assets/img8.jpg" alt="Intro with glass card"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#intro-full-page"&gt;
  &lt;/a&gt;
  Intro full page
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://mdbootstrap.com/snippets/standard/mdbootstrap/2909292?view=side"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--W4PqMTiM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mdbcdn.b-cdn.net/wp-content/themes/mdbootstrap4/content-gh/en/_mdb5/standard/web/docs/forms/search/examples/assets/img9.jpg" alt="Intro full page"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#intro-gradient-card"&gt;
  &lt;/a&gt;
  Intro gradient card
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://mdbootstrap.com/snippets/standard/mdbootstrap/2913069?view=side"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UyfxVlPl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mdbcdn.b-cdn.net/wp-content/themes/mdbootstrap4/content-gh/en/_mdb5/standard/web/docs/forms/search/examples/assets/img10.jpg" alt="Intro gradient card"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>bootstrap</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>html</category>
    </item>
    <item>
      <title>Create your personal website and host on the github page with travis</title>
      <author>Walter Nascimento</author>
      <pubDate>Mon, 26 Apr 2021 14:19:59 +0000</pubDate>
      <link>https://dev.to/walternascimentobarroso/create-your-personal-website-and-host-on-the-github-page-with-travis-27jj</link>
      <guid>https://dev.to/walternascimentobarroso/create-your-personal-website-and-host-on-the-github-page-with-travis-27jj</guid>
      <description>&lt;p&gt;&lt;a href="https://medium.com/walternascimentobarroso-pt/crie-seu-site-pessoal-e-hospede-no-github-page-com-o-travis-379548b3896d"&gt;[Clique aqui para ler em português]&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#creating-repository"&gt;
  &lt;/a&gt;
  Creating repository
&lt;/h1&gt;

&lt;p&gt;To have your website hosted for free on the github page, just go to your github account and create a repository with your username, in my case I created one like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;walternascimentobarroso.github.io
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;after creating any page that html you send will already work and you will have a website with the url like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="http://walternascimentobarroso.github.io/"&gt;http://walternascimentobarroso.github.io/&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#template"&gt;
  &lt;/a&gt;
  Template
&lt;/h1&gt;

&lt;p&gt;There are several free personal page templates on the internet, for this post I will use this one:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://startbootstrap.com/template/resume"&gt;https://startbootstrap.com/template/resume&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#creating-personal-website"&gt;
  &lt;/a&gt;
  Creating personal website
&lt;/h2&gt;

&lt;p&gt;After creating your repository, clone the project:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git clone https://github.com/&amp;lt;username&amp;gt;/&amp;lt;username&amp;gt;.github.io.git
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;It is best to avoid creating codes directly on the master, if you know git flow follow your flow, if you don’t know for the post not to get too big we will just use a separate branch.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git checkout -b development
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Then go to the website and download the template, extract the content and add it to your repository.&lt;/p&gt;

&lt;p&gt;open the index file and edit the information as you wish, if you master css you can adjust the template as you wish (remembering that this project uses the bootstrap, then if you master the bootstrap you can change the classes to be more in your style)&lt;/p&gt;

&lt;p&gt;after the changes made just send the information to the server&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git push — set-upstream origin development
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;Remembering that for the url (&lt;a href="http://walternascimentobarroso.github.io/"&gt;http://walternascimentobarroso.github.io/&lt;/a&gt;) to work the content has to be in the main branch, as in our case we created a branch for development, so we will use a CI tool to do the merge&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1&gt;
  &lt;a href="#travis"&gt;
  &lt;/a&gt;
  Travis
&lt;/h1&gt;

&lt;p&gt;Travis is a continuous integration tool for open source projects.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#getting-access"&gt;
  &lt;/a&gt;
  Getting access
&lt;/h2&gt;

&lt;p&gt;Get a Github access token so that Travis can send it back to his repository:&lt;/p&gt;

&lt;p&gt;Go to &lt;a href="https://github.com/settings/tokens/new"&gt;https://github.com/settings/tokens/new&lt;/a&gt; and create a new token&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7xGflm1g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bla09zopkfdv7c8cduqs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7xGflm1g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bla09zopkfdv7c8cduqs.png" alt="alt text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now follow the steps:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Copy the generated token&lt;/li&gt;
&lt;li&gt;Access the travis website &lt;a href="https://travis-ci.org"&gt;https://travis-ci.org&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Log in with your github account&lt;/li&gt;
&lt;li&gt;Access the repository page and enable your repository &lt;a href="https://travis-ci.org/account/repositories"&gt;https://travis-ci.org/account/repositories&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mQZ7zAHV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tawziisnzsqx5oiy679h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mQZ7zAHV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tawziisnzsqx5oiy679h.png" alt="alt text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Click on settings and go to Environment Variables&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let’s create a variable called GH_TOKEN&lt;/p&gt;

&lt;p&gt;GH_TOKEN = // paste the copied token here&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#sending-to-travis"&gt;
  &lt;/a&gt;
  Sending to travis
&lt;/h2&gt;

&lt;p&gt;In your project create a file with the name &lt;code&gt;.travis.yml&lt;/code&gt; and enter the settings.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;p&gt;with that when committing travis read the &lt;code&gt;.travis.yml&lt;/code&gt; file&lt;/p&gt;

&lt;p&gt;finally create a file called &lt;code&gt;package.json&lt;/code&gt; you don’t need to have anything in it just one {} is enough, as travis searches for dependencies within this file&lt;/p&gt;

&lt;p&gt;after all the configurations and changes are completed just send to the server and wait&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git push
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To make the project cooler, create a readme.md file and place&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[![Build Status](https://travis-ci.org/&amp;lt;username&amp;gt;/&amp;lt;username&amp;gt;.github.io.svg?branch=master)](https://travis-ci.org/&amp;lt;username&amp;gt;/&amp;lt;username&amp;gt;.github.io)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;changing for your user.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#thanks-for-reading"&gt;
  &lt;/a&gt;
  Thanks for reading!
&lt;/h2&gt;

&lt;p&gt;If you have any questions, complaints or tips, you can leave them here in the comments. I will be happy to answer!&lt;/p&gt;

&lt;p&gt;😊😊See you! 😊😊&lt;/p&gt;

</description>
      <category>github</category>
      <category>travis</category>
      <category>deploy</category>
      <category>website</category>
    </item>
    <item>
      <title>What JS Concept should I explain?</title>
      <author>Siddharth</author>
      <pubDate>Mon, 26 Apr 2021 14:19:26 +0000</pubDate>
      <link>https://dev.to/siddharthshyniben/what-js-concept-function-should-i-explain-51na</link>
      <guid>https://dev.to/siddharthshyniben/what-js-concept-function-should-i-explain-51na</guid>
      <description>&lt;p&gt;I've learned a lot from the DEV community and I would love to give back. For this reason I have created this Series.&lt;/p&gt;

&lt;p&gt;If you want an explanation of any JS concept, you've come to the right place! Comment what you want to learn about and I will try to respond to every request with a new post in this Series.&lt;/p&gt;

&lt;p&gt;Please don't be misled by the word "concept". I will try to do anything JS related, but no libraries!&lt;/p&gt;

&lt;p&gt;Happy Learning!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>codenewbie</category>
      <category>beginners</category>
    </item>
    <item>
      <title>A Brief Introduction to React</title>
      <author>Mark Mahoney</author>
      <pubDate>Mon, 26 Apr 2021 14:12:45 +0000</pubDate>
      <link>https://dev.to/markm208/a-brief-introduction-to-react-1i7g</link>
      <guid>https://dev.to/markm208/a-brief-introduction-to-react-1i7g</guid>
      <description>&lt;p&gt;This is a short introduction to &lt;a href="https://reactjs.org/"&gt;React&lt;/a&gt;. React is an incredibly popular front-end framework that allows you to create encapsulated components that manage their own state. React has helped transform web development and bring it inline with modern software development practices.&lt;/p&gt;

&lt;p&gt;You will be asked to follow along with the programs below. Just click on the links and a code playback page will load (you might want to open each one in a new tab). Then click on the comments on the left hand side of the playback screen or hit the play button to drive the development of the code. You can download the code at any point and run it on your machine. There are some controls in the top right hand side of the screen to make the text bigger or to switch to blog mode (which is good for small screens).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#react"&gt;
  &lt;/a&gt;
  React
&lt;/h3&gt;

&lt;p&gt;I start by showing a basic example of React and JSX. I will build a site to serve info about Computer Science legends in the first three examples. This program shows the beginning of the app:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://markm208.github.io/webdevbook/chapter4/01/playback.html"&gt;Basic React&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Next, I continue to build the CS Legends app in a React project:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://markm208.github.io/webdevbook/chapter4/02/playback.html"&gt;Creating a React App with create-react-app&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I complete the CS Legends app by creating a back-end to serve legend data:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://markm208.github.io/webdevbook/chapter4/03/playback.html"&gt;React with Express&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Finally, I show the beginnings of creating a scoreboard app for a kids hockey league. At the end you will be asked to download the code and add to it:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://markm208.github.io/webdevbook/chapter4/04/playback.html"&gt;Scoreboard React App&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#comments-and-feedback"&gt;
  &lt;/a&gt;
  Comments and Feedback
&lt;/h3&gt;

&lt;p&gt;You can find all of these code playbacks in my free 'book', &lt;a href="https://markm208.github.io/webdevbook/"&gt;An Introduction to Web Development from Back to Front&lt;/a&gt;. I am always looking for feedback so please feel free to comment here or to send me a message. You can follow me on twitter &lt;a href="https://twitter.com/markm208"&gt;@markm208&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>tutorial</category>
    </item>
  </channel>
</rss>
