<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Using Polywork to Break My Unconscious Biases</title>
      <author>Michael Jolley</author>
      <pubDate>Mon, 19 Jul 2021 13:02:00 +0000</pubDate>
      <link>https://dev.to/michaeljolley/using-polywork-to-break-my-unconscious-biases-1mli</link>
      <guid>https://dev.to/michaeljolley/using-polywork-to-break-my-unconscious-biases-1mli</guid>
      <description>&lt;p&gt;This past year I've been examining the communities I'm a part of. It didn't take long to notice that I was living in a bubble of people who look, act, and think like me. It was one of those unconscious things, that when recognized, seems obvious and repulsive. I have always valued diversity on my teams and I want my social connections to be equally diverse. That's why, when I was offered an invite to join Polywork, I knew this was an opportunity to ensure my "bubble" was diverse.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-polywork"&gt;
  &lt;/a&gt;
  What is Polywork?
&lt;/h2&gt;

&lt;p&gt;Before I get into what I did, let's talk about what Polywork is. First, I don't work for or represent Polywork, so don't take my explanation as their "official description." I see Polywork as a LinkedIn replacement that better represents technical and artistic communities. Whereas, LinkedIn focuses on what positions you've held and education you've completed, Polywork focuses on what you've done.&lt;/p&gt;

&lt;p&gt;Polywork recognizes that for many software developers, some of our most exciting projects take place outside of the office. Things like blog posts, conference &amp;amp; meetup talks, and YouTube/Twitch videos can all be highlighted on your profile. You can also use Polywork to find other individuals who are open to mentoring you, speaking at your event, and more.&lt;/p&gt;

&lt;p&gt;They also provide a "follow" feature which is similar to what you would be accustomed to on platforms like Twitter. This is where my journey to expanding my bubble begins.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#polywork-follows-the-way"&gt;
  &lt;/a&gt;
  Polywork Follows: The !== Way
&lt;/h2&gt;

&lt;p&gt;Whenever I see content, regardless of platform, I always follow or subscribe to the creator so I can see more content like that. I normally don't pay attention to who the person is, but I do notice what their role is, what company they work for, etc. But there are so many white guys in the tech space, it's hard not to quickly fill up a "following" list of the same people. This is the first place I changed my habits.&lt;/p&gt;

&lt;p&gt;Step one in operation Expand The Bubble was realizing that I have an unconscious inclination to follow content created by white guys, here on referred to as White Guy Creators (WGC). Does that mean I stop following creators who look like me? Nope. Instead, I decided to counteract this disposition by following 3 non-WGCs for every one WGC. So if I see content I enjoy from a WGC, I give them a follow/subscribe. Then I go on the hunt and don't leave the computer until I've identified 3 non-WGCs that had interesting content.&lt;/p&gt;

&lt;p&gt;What has been the result? Gold. Absolute gold. There are a plethora of amazing content creators out there that are never recommended to me, or whose content never reached my feed before. I don't know if this is due to the algorithms employed by Twitter/Instagram/TikTok/etc, but by actively counter-balancing who I follow, it appears I've broken through to this wonderland of amazing content that I had never seen before.&lt;/p&gt;

&lt;p&gt;For the first time, I actually enjoy logging into the timeline to see what new, amazing stuff I'll find.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#can-you-hear-them-now"&gt;
  &lt;/a&gt;
  Can You Hear Them Now?
&lt;/h2&gt;

&lt;p&gt;I'll admit, step two in my plans has been hampered. Soon after starting this journey, my mother was diagnosed with stage 4 cancer. Within 4 weeks of diagnosis, we had spent 2 weeks in the hospital and now a week at home on hospice trying to make her comfortable as she becomes more confused and less the amazing woman who raised me on her own. I only write this step because it was and still is in my plans moving forward. If anything, it will help me stay accountable.&lt;/p&gt;

&lt;p&gt;Back to step two: Amplification. Now that I'm getting to see this awesome content by non-WGC, I want to make a conscious effort to break existing algorithms and expose people who may follow me to these amazing creators. So each time I see content that inspires, teaches, or encourages me, I want to share it with my community.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#break-out-of-your-bubble"&gt;
  &lt;/a&gt;
  Break Out of Your Bubble
&lt;/h2&gt;

&lt;p&gt;If you'd like to join Polywork, they've given me a VIP code for anyone reading who'd like to get in on the action. Go to &lt;a href="https://polywork.com"&gt;https://polywork.com&lt;/a&gt; and use the code &lt;code&gt;baldbeardbuild&lt;/code&gt;. Once you're in, I highly recommend using the steps above to expand your bubble and amplify the amazing content you find.&lt;/p&gt;

&lt;p&gt;How do you actively combat your unconscious biases? Hit me up on &lt;a href="https://twitter.com/baldbeardbuild"&gt;Twitter&lt;/a&gt; and let me know.&lt;/p&gt;

</description>
      <category>diversity</category>
      <category>inclusion</category>
    </item>
    <item>
      <title>Validate CSV Input With ActiveModel::Validations</title>
      <author>Kevin Murphy</author>
      <pubDate>Mon, 19 Jul 2021 12:17:47 +0000</pubDate>
      <link>https://dev.to/thegnarco/validate-csv-input-with-activemodel-validations-15d8</link>
      <guid>https://dev.to/thegnarco/validate-csv-input-with-activemodel-validations-15d8</guid>
      <description>&lt;h2&gt;
  &lt;a href="#standard-library-parsing"&gt;
  &lt;/a&gt;
  Standard Library Parsing
&lt;/h2&gt;

&lt;p&gt;We're maintaining a system that tracks information about books, including their publication dates. On occasion, publishers will send us CSVs with updated publication dates, and we need to update our Rails application to have those dates.&lt;/p&gt;

&lt;p&gt;We want a repeatable process, so rather than updating these by hand, let's use Ruby's &lt;a href="https://ruby-doc.org/stdlib-3.0.1/libdoc/csv/rdoc/CSV.html"&gt;CSV class&lt;/a&gt; to parse this data.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="no"&gt;CSV&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;csv_text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;headers: &lt;/span&gt;&lt;span class="kp"&gt;true&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;map&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="n"&gt;book&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Book&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;find_by&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;isbn: &lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"ISBN"&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
  &lt;span class="n"&gt;book&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;publication_date: &lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"Pub Date"&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Four lines and we have a functionally complete parser that updates our system how we expect. That all seems great. Until, that is, we actually run it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#book-checked-out"&gt;
  &lt;/a&gt;
  Book Checked Out
&lt;/h2&gt;

&lt;p&gt;We execute our parser on the first data file we receive, and it quickly stops with the following error:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;NoMethodError: undefined method `update' for nil:NilClass
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;On inspecting the state of our database, we see that the first three books in the CSV file had their publication dates updated, but the rest didn't. Looking at the fourth row in the CSV, we discover that the ISBN for that row isn't in our database. In that case &lt;code&gt;find_by&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt;, and calling &lt;code&gt;update&lt;/code&gt; on &lt;code&gt;nil&lt;/code&gt; is exactly our problem. An exception is raised, and further rows of the CSV aren't parsed.&lt;/p&gt;

&lt;p&gt;We can fix that! If we don't find the book, let's log the error and move on to the next row, without calling &lt;code&gt;update&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="no"&gt;CSV&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;csv_text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;headers: &lt;/span&gt;&lt;span class="kp"&gt;true&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;map&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="n"&gt;book&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Book&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;find_by&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;isbn: &lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"ISBN"&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;book&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;blank?&lt;/span&gt;
    &lt;span class="no"&gt;Rails&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;logger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Could not find book"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;next&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="n"&gt;book&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;publication_date: &lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"Pub Date"&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now the entire CSV processes, our books are updated, and everyone's happy. Right?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#blank-pages"&gt;
  &lt;/a&gt;
  Blank Pages
&lt;/h2&gt;

&lt;p&gt;Days later, we discover that a book which previously had a publication date doesn't anymore. It's not unusual for a book to not have a publication date - we have records of books that haven't been published yet. However, books shouldn't &lt;em&gt;lose&lt;/em&gt; an existing publication date.&lt;/p&gt;

&lt;p&gt;We see that the book in question was in the CSV, and the Pub Date column was empty for that row. Turns out, that was an error from the publisher in preparing the CSV. Any book in that file should always have a publication date - the purpose of this process is to provide publication dates.&lt;/p&gt;

&lt;p&gt;We can prevent this from happening in the future by ensuring that a row has a publication date before attempting to process it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="no"&gt;CSV&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;csv_text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;headers: &lt;/span&gt;&lt;span class="kp"&gt;true&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;map&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"Pub Date"&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nf"&gt;blank?&lt;/span&gt;
    &lt;span class="no"&gt;Rails&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;logger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Skipped updating book with no publication date"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;next&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="n"&gt;book&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Book&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;find_by&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;isbn: &lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"ISBN"&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;book&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;blank?&lt;/span&gt;
    &lt;span class="no"&gt;Rails&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;logger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Could not find book"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;next&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="n"&gt;book&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;publication_date: &lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"Pub Date"&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#losing-the-plot"&gt;
  &lt;/a&gt;
  Losing The Plot
&lt;/h2&gt;

&lt;p&gt;Our "simple" parser is now a lot more complicated. Business rules about the shape, structure, and expectations of the data are now littered along with actions consuming the data to do things like find the book and update it with the appropriate publication date. It's harder to identify what the core responsibility of this snippet of code is.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#adding-chapters"&gt;
  &lt;/a&gt;
  Adding Chapters
&lt;/h2&gt;

&lt;p&gt;Let's try to increase the clarity of our code by separating out how to process an individual row of the CSV.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#first-act-establishing-a-new-character-class"&gt;
  &lt;/a&gt;
  First Act: Establishing A New Character (Class)
&lt;/h3&gt;

&lt;p&gt;We'll start by making a class that takes in the needed data from the CSV row and finds the book associated with the ISBN.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;BookPublicationDateImportRow&lt;/span&gt;
  &lt;span class="nb"&gt;attr_reader&lt;/span&gt; &lt;span class="ss"&gt;:isbn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;:publication_date&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;initialize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;isbn&lt;/span&gt;&lt;span class="p"&gt;:,&lt;/span&gt; &lt;span class="n"&gt;publication_date&lt;/span&gt;&lt;span class="p"&gt;:)&lt;/span&gt;
    &lt;span class="vi"&gt;@isbn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;isbn&lt;/span&gt;
    &lt;span class="vi"&gt;@publication_date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;publication_date&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;book&lt;/span&gt;
    &lt;span class="vi"&gt;@book&lt;/span&gt; &lt;span class="o"&gt;||=&lt;/span&gt; &lt;span class="no"&gt;Book&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;find_by&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;isbn: &lt;/span&gt;&lt;span class="n"&gt;isbn&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Perhaps you've heard of a &lt;a href="https://thoughtbot.com/blog/activemodel-form-objects"&gt;form object&lt;/a&gt; to represent data associated with a particular form on your web application. You can consider that's what we're doing here, except our input isn't from a form on a web page - it's a row from a CSV file.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#second-act-rising-validations"&gt;
  &lt;/a&gt;
  Second Act: Rising Validations
&lt;/h3&gt;

&lt;p&gt;Now, rather than rewriting validation logic, as we had in our procedural code initially, we can use ActiveModel's &lt;a href="https://api.rubyonrails.org/v6.1.3.1/classes/ActiveModel/Validations.html"&gt;Validations&lt;/a&gt; module. That'll allow us access to the validation &lt;a href="https://guides.rubyonrails.org/active_record_validations.html#validation-helpers"&gt;helpers&lt;/a&gt; we're used to using with other Rails ActiveRecord models.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;BookPublicationDateImportRow&lt;/span&gt;
  &lt;span class="kp"&gt;include&lt;/span&gt; &lt;span class="no"&gt;ActiveModel&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Validations&lt;/span&gt;

  &lt;span class="n"&gt;validates&lt;/span&gt; &lt;span class="ss"&gt;:book&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;presence: &lt;/span&gt;&lt;span class="kp"&gt;true&lt;/span&gt;
  &lt;span class="n"&gt;validates&lt;/span&gt; &lt;span class="ss"&gt;:publication_date&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;presence: &lt;/span&gt;&lt;span class="kp"&gt;true&lt;/span&gt;
  &lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We would have caught our last problem of losing publication dates if that validation were on the Book model itself - and we may be tempted to look to add it now. However, remember - having a book with no publication date is totally normal for our application. It's only in &lt;strong&gt;this&lt;/strong&gt; instance of receiving a publication date update from a publisher with no publication date where it's unacceptable to have a value for that attribute.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#third-act-update-resolution"&gt;
  &lt;/a&gt;
  Third Act: Update Resolution
&lt;/h3&gt;

&lt;p&gt;We'll also mirror ActiveRecord's API by adding in a &lt;code&gt;save&lt;/code&gt; method that makes sure our instance is passing its own validations before updating the book:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;BookPublicationDateImportRow&lt;/span&gt;
  &lt;span class="o"&gt;...&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;save&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kp"&gt;false&lt;/span&gt; &lt;span class="k"&gt;unless&lt;/span&gt; &lt;span class="n"&gt;valid?&lt;/span&gt;

    &lt;span class="n"&gt;book&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;publication_date: &lt;/span&gt;&lt;span class="vi"&gt;@publication_date&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#rewriting-the-intro"&gt;
  &lt;/a&gt;
  Rewriting The Intro
&lt;/h2&gt;

&lt;p&gt;Now that we have something that's responsible for managing an individual row, we can update our parsing code to be responsible for iterating through that CSV and pass off the details of how to manage that data to our new class.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="no"&gt;CSV&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;csv_text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;headers: &lt;/span&gt;&lt;span class="kp"&gt;true&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;map&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="n"&gt;book_import&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;BookPublicationDateImportRow&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="ss"&gt;isbn: &lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"ISBN"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="ss"&gt;publication_date: &lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"Pub Date"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;book_import&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;save&lt;/span&gt;
    &lt;span class="no"&gt;Rails&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;logger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;book_import&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;errors&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;full_messages&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;", "&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#epilogue"&gt;
  &lt;/a&gt;
  Epilogue
&lt;/h2&gt;

&lt;p&gt;By adding this new class, we've given ourselves an extension point for additional logic on the row. Any data transformation, like converting the publication date string to a date object, can be handled here (however, for CSV parsing, do take a look at the standard library's &lt;a href="https://ruby-doc.org/stdlib-3.0.1/libdoc/csv/rdoc/CSV.html#class-CSV-label-Built-In+Field+Converters"&gt;converters&lt;/a&gt; as well!).&lt;/p&gt;

&lt;p&gt;Any further validations that need to be exercised on the data can take place in this separate class. Moreover, we can use framework features and concepts that we're already familiar with, rather than rewriting our own business logic for validation.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This post originally published on &lt;a href="https://blog.thegnar.co/active-model-validations-csv"&gt;The Gnar Company blog&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>ruby</category>
      <category>rails</category>
    </item>
    <item>
      <title>Invest time into writing questions: Tips for writing better questions</title>
      <author>Tom Collins</author>
      <pubDate>Mon, 19 Jul 2021 12:11:58 +0000</pubDate>
      <link>https://dev.to/collinstommy/invest-time-into-writing-questions-tips-for-writing-better-questions-2e12</link>
      <guid>https://dev.to/collinstommy/invest-time-into-writing-questions-tips-for-writing-better-questions-2e12</guid>
      <description>&lt;p&gt;The essence of writing code is problem solving. This problem solving will often be a solitary task, you, the keyboard and a code editor. Not all problems are easily solved in this vacuum. For many problems we will benefit from the help of others.&lt;/p&gt;

&lt;p&gt;Every problem or task when writing code is a chance to learn from others. A complex task can usually benefit from the input of multiple developers. &lt;/p&gt;

&lt;p&gt;The more effort we put into asking a question, the more likely we will get an appropriate answer. When posing a question, whether this be over slack, email or in person, we should think of the time put into asking this question as an investment. A poorly framed question with little context will likely yield low quality answers, if any at all. &lt;strong&gt;A well structured question that describes the problem in full is far more likely to be answered well.&lt;/strong&gt; With that, let's look at how we can ask better questions.&lt;/p&gt;

&lt;p&gt;Asking good questions is all about context. We should frame the question with as much information as we can. When asking online you will likely need to give more context that when asking within a team. The same rules generally apply to either scenario though.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-include-information-on-the-environment"&gt;
  &lt;/a&gt;
  1. Include information on the environment
&lt;/h2&gt;

&lt;p&gt;A key piece of information will always be where this software is running. Is this a performance issue in production? Is this on your local machine? Documentation should be provided with any steps required to set up the environment.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-your-issue-should-be-reproducible"&gt;
  &lt;/a&gt;
  2. Your issue should be reproducible
&lt;/h2&gt;

&lt;p&gt;If there are some UI steps required to reproduce a bug, be specific about these. Include the branch name if relevant. Always have your code pushed to a remote repo.&lt;/p&gt;

&lt;p&gt;If you are asking online (stack overflow), create a reproducible code sample on Codepen, Code Sandbox or some other publicly available sandbox. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-include-errors"&gt;
  &lt;/a&gt;
  3. Include errors
&lt;/h2&gt;

&lt;p&gt;Don't stop at describing the issue. Include any stack traces from logs or console output. Check the network tab for any related network errors and include anything that is relevant&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-list-the-steps-you-have-taken"&gt;
  &lt;/a&gt;
  4. List the steps you have taken
&lt;/h2&gt;

&lt;p&gt;Give information on what you have already tried. What commands did you run? What code did you change? What debugging did you do? This will help frame the question and narrow the focus by eliminating these steps.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-link-to-code"&gt;
  &lt;/a&gt;
  5. Link to code
&lt;/h2&gt;

&lt;p&gt;When the question is on a specific piece of code, link to this in github or give a file path and line number. Don't just give a function name. Help other developers find the code you are referring to.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-explain-the-problem-in-full"&gt;
  &lt;/a&gt;
  6. Explain the problem in full
&lt;/h2&gt;

&lt;p&gt;For more general questions on what technology or a library to use, explain what you are trying to achieve. List the things that matter as well as what matters less. Include any constraints you may have.&lt;/p&gt;

&lt;p&gt;In summary:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Ensure you give enough information so that the same state can be reached in the application&lt;/li&gt;
&lt;li&gt;Add as much context as you can&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>beginners</category>
      <category>writing</category>
    </item>
    <item>
      <title>Delegating Effectively as a Tech Lead</title>
      <author>Tyler Hawkins</author>
      <pubDate>Mon, 19 Jul 2021 11:15:15 +0000</pubDate>
      <link>https://dev.to/thawkin3/delegating-effectively-as-a-tech-lead-3gge</link>
      <guid>https://dev.to/thawkin3/delegating-effectively-as-a-tech-lead-3gge</guid>
      <description>&lt;p&gt;Being a tech lead is difficult.&lt;/p&gt;

&lt;p&gt;As a tech lead, you’re often expected to continue to be a high performer as an individual contributor while also taking on additional responsibilities to help the team. These additional responsibilities may include breaking down work into clearly defined tasks, grooming the backlog, prioritizing work, mentoring junior engineers, and resolving blockers for the team.&lt;/p&gt;

&lt;p&gt;The hardest part of being a tech lead is learning to balance your individual work with the needs of the team.&lt;/p&gt;

&lt;p&gt;How do you get your own work done while helping the team remain productive? You can’t do it all, and you certainly don’t want to burn yourself out by working longer hours.&lt;/p&gt;

&lt;p&gt;One solution to managing this added workload lies in learning to delegate effectively. So the question is, when should you delegate and when should you do something yourself?&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#the-delegation-matrix"&gt;
  &lt;/a&gt;
  The Delegation Matrix
&lt;/h2&gt;

&lt;p&gt;Tasks can often be characterized along two spectrums — complexity and frequency. A task may be simple or complex, and a task may need to be performed frequently or infrequently. We can use these attributes to determine when work should or should not be delegated.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_rFy_WaS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d6bi4tj9r3cdpgu4raf6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_rFy_WaS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d6bi4tj9r3cdpgu4raf6.png" alt="The delegation matrix (empty)"&gt;&lt;/a&gt;&lt;/p&gt;
The delegation matrix (empty)






&lt;h2&gt;
  &lt;a href="#simple-and-frequent-tasks"&gt;
  &lt;/a&gt;
  Simple and Frequent Tasks
&lt;/h2&gt;

&lt;p&gt;Engineers love to automate tedious work. Ideally, anything that you have to do frequently should be automated as much as possible. For example, if you need to gather metrics for your team’s work each sprint, see if there’s a way to automate that process.&lt;/p&gt;

&lt;p&gt;In the event that the task cannot be automated, simple and frequent tasks should be delegated. These could be things like running standup meeting or performing simple code reviews. Simple and frequent tasks are things that anyone on the team should be able to do with little or no additional training, so don’t make the mistake of thinking you have to do everything yourself. You’re here to help your team, but your team is also here to help you.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#simple-and-infrequent-tasks"&gt;
  &lt;/a&gt;
  Simple and Infrequent Tasks
&lt;/h2&gt;

&lt;p&gt;If a task is easy and rarely needs to be done, just do it yourself. If it would take longer for you to explain to someone how to do the task than it would for you to just do it, then go ahead and tackle it on your own.&lt;/p&gt;

&lt;p&gt;Please don’t misunderstand. There is a lot of value in training team members and helping others grow. However, these kinds of simple and infrequent tasks generally are not core responsibilities of someone’s job and are not essential to anyone’s career progression.&lt;/p&gt;

&lt;p&gt;An example of a simple and infrequent task might be running a script once per quarter to generate a report. Or it could be purchasing tickets for an upcoming team activity — nothing too exciting, and nothing too time consuming.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#complex-and-frequent-tasks"&gt;
  &lt;/a&gt;
  Complex and Frequent Tasks
&lt;/h2&gt;

&lt;p&gt;Again, automate everything you can. If you can take a complex and frequent task and automate the process to complete it, you should!&lt;/p&gt;

&lt;p&gt;Assuming you can’t automate the task, complex and frequent tasks should be delegated to your team members to help them grow. As a tech lead, you are someone who is good at breaking down work, planning projects, resolving blockers, and handling incidents. Train your team members to develop these skills too!&lt;/p&gt;

&lt;p&gt;Ask a team member to lead the planning session for the next project your team is assigned. Delegate to a colleague  the exercise of breaking down complex work into smaller tasks. The next incident that occurs, invite a teammate to debug the problem with you.&lt;/p&gt;

&lt;p&gt;When you can train your team to handle these complex and frequent tasks, they will progress in their careers. It also frees you up to focus your time and energy elsewhere, as you are no longer the only person capable of doing this kind of work.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#complex-and-infrequent-tasks"&gt;
  &lt;/a&gt;
  Complex and Infrequent Tasks
&lt;/h2&gt;

&lt;p&gt;Complex and infrequent tasks are oftentimes the most difficult to delegate. These tasks don’t happen regularly, so they don’t consume too much of your time. They may be valuable for other team members to learn, but due to the infrequency of the task, the return on investment of training and delegating the work isn’t as high.&lt;/p&gt;

&lt;p&gt;Complex and infrequent tasks should be delegated to rising leaders on your team as stretch assignments. You might ask a senior engineer to help provide a performance review for the intern that they mentored last summer. Or you might ask a senior engineer to do some research and then give a high-level estimate for a new feature that product management is considering but hasn’t committed to yet.&lt;/p&gt;

&lt;p&gt;These types of tasks don’t come up often, but they can be good learning experiences for all involved.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;Let’s return to the delegation matrix. Here it is, all filled out:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1Y1CG6Tm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ky0o8qge4wxqzexwo88h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1Y1CG6Tm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ky0o8qge4wxqzexwo88h.png" alt="Delegation matrix (filled out)"&gt;&lt;/a&gt;&lt;/p&gt;
Delegation matrix (filled out)



&lt;p&gt;As you can see, much of your work can be delegated! Your role as tech lead is to help keep the team productive, and oftentimes the best way to do that is to invest some time up front to train your team members so that soon they can handle even the most complex tasks on their own.&lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;

</description>
      <category>leadership</category>
      <category>career</category>
      <category>productivity</category>
      <category>programming</category>
    </item>
    <item>
      <title>Run Docker commands inside Jenkins Docker container</title>
      <author>Kshitij (kd)</author>
      <pubDate>Mon, 19 Jul 2021 11:14:10 +0000</pubDate>
      <link>https://dev.to/dhingrachief/run-docker-commands-inside-jenkins-docker-k6d</link>
      <guid>https://dev.to/dhingrachief/run-docker-commands-inside-jenkins-docker-k6d</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;If you want to initiate docker containers from within you jenkin containers,this is what you have to do:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;In the Jenkins Dockerfile, add commands docker, docker-compose installed. &lt;/li&gt;
&lt;li&gt;bind mount the docker socket.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And thats it! This is how the Dockerfile looks like:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#jenkins-dockerfile"&gt;
  &lt;/a&gt;
  Jenkins Dockerfile
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;FROM jenkins/jenkins

# Docker install
USER root
RUN apt-get update &amp;amp;&amp;amp; apt-get install -y \
       apt-transport-https \
       ca-certificates \
       curl \
       gnupg2 \
       software-properties-common \


RUN curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -
RUN apt-key fingerprint 0EBFCD88
RUN add-apt-repository \
       "deb [arch=amd64] https://download.docker.com/linux/debian \
       $(lsb_release -cs) \
       stable"

RUN curl -L https://github.com/docker/compose/releases/download/1.27.4/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose \
&amp;amp;&amp;amp; chmod +x /usr/local/bin/docker-compose

RUN apt-get update &amp;amp;&amp;amp; apt-get install -y docker-ce-cli

USER jenkins

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now to build the image:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker build -t jenkins-docker .
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To run the docker-image, including the volume mounts:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; docker run -d --group-add $(stat -c '%g' /var/run/docker.sock) \
-v /var/run/docker.sock:/var/run/docker.sock -p 8080:8080 -p 50000:50000 \
-v `pwd`/jenkins:/var/jenkins_home --log-opt max-size=50k   --log-opt max-file=5   --name jenkins -P jenkins-docker
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here you can see docker.sock file has been mounted.Also, jenkins_home folder has been mounted so that you can persist the information regarding your pipeline/configuration/users etc.&lt;br&gt;
Dont forget to take backup of jenkins_home directory!&lt;/p&gt;

&lt;p&gt;I have uploaded a &lt;a href="https://github.com/kdsama/Jenkins-Docker/blob/main/makefile"&gt;makefile&lt;/a&gt; and a similar &lt;a href="https://github.com/kdsama/Jenkins-Docker/blob/main/Dockerfile"&gt;Dockerfile&lt;/a&gt; on github.&lt;/p&gt;

&lt;p&gt;And thats it! &lt;/p&gt;

</description>
      <category>docker</category>
      <category>jenkins</category>
      <category>devops</category>
    </item>
    <item>
      <title>Algorithm Problems - Baby Steps in Providing Solutions Using JavaScript</title>
      <author>NJOKU SAMSON EBERE</author>
      <pubDate>Mon, 19 Jul 2021 10:50:05 +0000</pubDate>
      <link>https://dev.to/ebereplenty/algorithm-problems-baby-steps-in-providing-solutions-using-javascript-1edp</link>
      <guid>https://dev.to/ebereplenty/algorithm-problems-baby-steps-in-providing-solutions-using-javascript-1edp</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;Recruiters who are interested in the problem solving skills of their candidate, present them problems and ask them to write an algorithm for that problem. By so doing, recruiters are able to separate those who just copy and paste codes from those who really understand the syntax and how it works. But What is an Algorithm?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#jump-to"&gt;
  &lt;/a&gt;
  JUMP TO:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#1"&gt;Steps in Solving an Algorithm Problem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#3"&gt;25 Algorithm to Sharpen Your Problem Solving Skills&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#4"&gt;Bonus&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#4"&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Algorithm (pronounced AL-go-rith-um) is a procedure or formula for solving a problem, based on conducting a sequence of specified actions. A computer program can be viewed as an elaborate algorithm. In mathematics and computer science, an algorithm usually means a small procedure that solves a recurrent problem - &lt;a href="https://whatis.techtarget.com/definition/algorithm"&gt;whatis&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;From the definition above, we can deduce that algorithm is used to solve problems and for one to build an effective algorithm, the person must have a good understanding of the problem being solved.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OAb-cqi_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xzto8gd1wyx01tjd1ieu.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OAb-cqi_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xzto8gd1wyx01tjd1ieu.jpg" alt="Solving Problems With Algorithm"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Algorithm or Problem Solving interviews are almost unavoidable today with the current trends in technology. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eYIbQ2nT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bujnnihdzgvm4icmxgk3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eYIbQ2nT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bujnnihdzgvm4icmxgk3.png" alt="Algorithm Interviews"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In view of this reality, how can you achieve an algorithm to solve a problem?&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#steps-in-solving-an-algorithm-problem"&gt;
  &lt;/a&gt;
  Steps in Solving an Algorithm Problem
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dzadx6fB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6gidy88wsnragk2h5qug.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dzadx6fB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6gidy88wsnragk2h5qug.jpg" alt="Steps in Problem Solving"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;UNDERSTAND&lt;/strong&gt; - Try to understand the problem and break it down into the smallest parts possible.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;STRATEGIZE&lt;/strong&gt; - Find out what tools are available for you in your programming language &lt;em&gt;(We are using JavaScript for the purpose of this article)&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;IMPLEMENT&lt;/strong&gt; - Solve each of the small problems with those tools and combine the solutions to form one solution to the whole problem.&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;For Example, if you are presented with a &lt;em&gt;word palindrome&lt;/em&gt; problem, how do you go about writing the algorithm to that problem?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#lets-apply-the-steps-above"&gt;
  &lt;/a&gt;
  Let's apply the steps above
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/3oz8xW1WD6hLm1oHHq/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/3oz8xW1WD6hLm1oHHq/giphy.gif" alt="Applying the Steps for problem Solving"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-a-understand"&gt;
  &lt;/a&gt;
  &lt;strong&gt;STEP A:&lt;/strong&gt; UNDERSTAND
&lt;/h3&gt;

&lt;p&gt;The big problem here is to check if the word we are given is the same if reversed. &lt;/p&gt;

&lt;p&gt;However, for us to make that happen, we have to provide solutions to smaller problems like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;How to keep a reference to the original word we are given.&lt;/li&gt;
&lt;li&gt;How to reverse the word.&lt;/li&gt;
&lt;li&gt;But for us to reverse the word we need to split the word into characters.&lt;/li&gt;
&lt;li&gt;If we eventually reverse it, we need to join the characters&lt;/li&gt;
&lt;li&gt;Finally, we need to compare the new word to the old one&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#step-b-strategize"&gt;
  &lt;/a&gt;
  &lt;strong&gt;STEP B:&lt;/strong&gt; STRATEGIZE
&lt;/h3&gt;

&lt;p&gt;Some of the tools We have at our displosal include the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;variables&lt;/li&gt;
&lt;li&gt;.split()&lt;/li&gt;
&lt;li&gt;spread operator&lt;/li&gt;
&lt;li&gt;if...else... conditional statement&lt;/li&gt;
&lt;li&gt;ternary operator&lt;/li&gt;
&lt;li&gt;.reverse()&lt;/li&gt;
&lt;li&gt;.join()&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#step-c-implement"&gt;
  &lt;/a&gt;
  &lt;strong&gt;STEP C:&lt;/strong&gt; IMPLEMENT
&lt;/h3&gt;

&lt;p&gt;Having broken down this problem into smaller bits, we have a way to keep a copy of the original word given to us using the &lt;code&gt;variable&lt;/code&gt; tool provided for us by JavaScript&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;orginalWord&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;word&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Since we cannot just reverse a string, we need to split the word and make it an array using the &lt;code&gt;.split("")&lt;/code&gt; method&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;splittedWord&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;word&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we can reverse the array using the &lt;code&gt;.reverse()&lt;/code&gt; like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;reversedWord&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;splittedWord&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reverse&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It is now reversed. But we need to return it to a string without anything separating the characters. So we can use the &lt;code&gt;.join("")&lt;/code&gt; to do that:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;newWord&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;reversedWord&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally, let's compare the word we were given initially, and the one we have now reversed&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
   &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;orginalWord&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;newWord&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
     &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#final-code"&gt;
  &lt;/a&gt;
  Final Code
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;palindrome&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;word&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;orginalWord&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;word&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;splittedWord&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;word&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;reversedWord&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;splittedWord&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reverse&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
   &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;newWord&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;reversedWord&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

   &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;orginalWord&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;newWord&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
     &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Someone else can solve the problem with the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;palindrome&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;word&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;word&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="p"&gt;[...&lt;/span&gt;&lt;span class="nx"&gt;word&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;reverse&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Notice how easy it is to Conquer any problem if you divide it. So basically, algorithm is all about how you can divide and conquer!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Practice, they say breeds perfection. So with that in mind, I am presenting you with the following series to help you get better in your problem solving skills. The series was made a while ago when I decided to embrace algorithm. That decision has improved my programming skills generally and I am sure that it will enhance yours too as well as you chances of winning at technical interviews.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;So please, enjoy the series...&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/3o7527WMiaRJmrWMTe/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/3o7527WMiaRJmrWMTe/giphy.gif" alt="enjoy the series"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#25-algorithm-to-sharpen-your-problem-solving-skills"&gt;
  &lt;/a&gt;
  25 Algorithm to Sharpen Your Problem Solving Skills
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/algorithm-101-7-ways-to-reverse-a-string-15cb"&gt;Algorithm 101: 7 Ways to Reverse a String&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/algorithm-101-13-ways-to-count-vowels-in-a-string-de5"&gt;Algorithm 101: 13 Ways to Count Vowels in a String&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/algorithm-101-6-ways-to-find-the-most-recurring-character-in-a-string-5036"&gt;Algorithm 101: 6 Ways to Find the Most Recurring Character in a String&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/algorithm-101-8-ways-to-capitalize-a-sentence-3bia"&gt;Algorithm 101: 8 Ways to Capitalize a Sentence&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/algorithm-101-6-ways-to-check-if-a-word-is-a-palindrome-40a3"&gt;Algorithm 101: 6 Ways to Check if a Word is a Palindrome&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/algorithm-101-3-ways-to-find-hamming-distance-45mo"&gt;Algorithm 101: 3 Ways to Find Hamming Distance&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/algorithm-101-6-ways-to-find-the-longest-word-in-a-sentence-3d89"&gt;Algorithm 101: 6 Ways to Find the Longest Word in a Sentence&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/algorithm-101-9-ways-to-search-and-replace-a-word-24jk"&gt;Algorithm 101: 9 Ways to Search and Replace a Word&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/algorithm-101-3-ways-to-check-if-two-words-are-anagrams-1j6l"&gt;Algorithm 101: 3 Ways to Check If Two Words are Anagrams&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/algorithm-101-3-ways-to-create-pig-latin-513m"&gt;Algorithm 101: 3 Ways to Create Pig Latin&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/algorithm-101-3-ways-to-check-if-two-sentences-are-anagrams-55jc"&gt;Algorithm 101: 3 Ways to Check if Two Sentences are Anagrams&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/algorithm-202-array-chunking-in-3-ways-1ank"&gt;Algorithm 202: Array Chunking in 3 Ways&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/algorithm-202-array-merging-without-duplicates-in-4-ways-17h3"&gt;Algorithm 202: Array Merging Without Duplicates in 4 Ways&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/algorithm-202-falsy-bouncer-in-4-ways-36p4"&gt;Algorithm 202: Falsy Bouncer in 4 Ways&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/algorithm-202-where-i-belong-in-3-ways-1chk"&gt;Algorithm 202: Where I Belong in 3 Ways&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/algorithm-101-3-ways-to-reverse-an-integer-24gn"&gt;Algorithm 101: 3 Ways to Reverse an Integer&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/algorithm-202-3-ways-to-sum-a-range-of-values-5g93"&gt;Algorithm 202: 3 Ways to Sum a Range of Values&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/algorithm-202-my-interview-question-grouping-anagrams-in-3-ways-49i4"&gt;Algorithm 202 (My Interview Question): Grouping Anagrams in 3 Ways&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/algorithm-101-4-ways-to-fizzbuzz-a-single-number-380d"&gt;Algorithm 101: 4 Ways to FizzBuzz a Single Number&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/algorithm-101-2-ways-to-fizzbuzz-a-range-of-numbers-8f8"&gt;Algorithm 101: 2 Ways to FizzBuzz a Range of Numbers&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/algorithm-101-3-ways-to-get-the-fibonacci-sequence-1i1c"&gt;Algorithm 101: 3 Ways to Get the Fibonacci Sequence&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/algorithm-101-2-ways-to-find-the-largest-product-yielded-by-3-integers-fpf"&gt;Algorithm 101: 2 Ways to Find the Largest Product Yielded by 3 Integers&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/algorithm-101-interview-question-2-ways-to-determine-if-2-words-are-isomorphic-11ap"&gt;Algorithm 101 (Interview Question): 2 Ways to Determine if 2 Words are Isomorphic &lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/algorithm-202-interview-question-matching-parenthesis-in-2-ways-3381"&gt;Algorithm 202 (Interview Question): Matching Parenthesis in 2 Ways&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/hackerrank-sock-merchant-1cgh"&gt;Algorithm 202: Sock Merchant&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/66c2LdxdRxu4E/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/66c2LdxdRxu4E/giphy.gif" alt="BONUS"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bonus"&gt;
  &lt;/a&gt;
  BONUS
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/how-many-tutorial-before-i-become-a-pro-newbie-asks-1fa"&gt;How Many Tutorials Before I become a Pro? - Newbie Asks&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/3-things-to-help-you-land-your-first-software-engineering-role-46hn"&gt;3 Things to Help You Land Your First Software Engineering Job&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;With the forgoing, you can see that algorithm isn't as difficult as it looks. Basically, it is all about solving day to day problems. However without practicing, it will not be easy to solve problems easily.&lt;/p&gt;

&lt;p&gt;So I encourage you to follow and practice with the algorithm series presented above for you.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/EBEREGIT/Algorithms"&gt;Check out some of the solutions on github&lt;/a&gt;&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>javascript</category>
      <category>algorithms</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Make a Discord Bot with Eris</title>
      <author>DET171</author>
      <pubDate>Mon, 19 Jul 2021 10:47:56 +0000</pubDate>
      <link>https://dev.to/canaris/make-a-discord-bot-with-eris-phi</link>
      <guid>https://dev.to/canaris/make-a-discord-bot-with-eris-phi</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;Hello there, this sentence will mark the beginning of my first ever article released to the public. In this article, I will be writing how to build a Discord bot with &lt;a href="https://abal.moe/Eris/"&gt;Eris&lt;/a&gt; and &lt;a href="https://eritbh.me/yuuko/"&gt;Yuuko&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In this tutorial, I will be using the following format for the code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="c1"&gt;// This line should be added to your code&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="c1"&gt;// This line should be removed from your code&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;A basic knowledge of JavaScript&lt;/li&gt;
&lt;li&gt;Node.js (v12) and NPM (v7) installed on your machine&lt;/li&gt;
&lt;li&gt;A basic knowledge of the &lt;a href="https://discord.com/developers/docs/intro"&gt;Discord API&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#background-info"&gt;
  &lt;/a&gt;
  Background Info
&lt;/h1&gt;

&lt;p&gt;So, what is Eris exactly?&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A lightweight NodeJS Discord Library.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;What is Yuuko, then?&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A Discord command framework for Javascript and Typescript.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I assume that if you've ever wanted to make a Discord Bot, you would have at least googled it up. The first and most common answer you'd see is probably "How to build a Discord Bot with Discord.js". What exactly is the difference between Eris and Discord.js?&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#features"&gt;
  &lt;/a&gt;
  Features
&lt;/h1&gt;

&lt;p&gt;D.js covers 100% of the Discord API while Eris does not. However, covering 100% of the Discord API has its disadvantages.&lt;br&gt;
D.js has a larger memory footprint, and when the bot is in many servers, it starts having performance issues. That is why many large bots, like &lt;a href="https://dankmemer.lol/"&gt;Dank Memer&lt;/a&gt; (The 4th largest Discord Bot), are made using Eris.&lt;/p&gt;

&lt;p&gt;However, there are some packages on NPM that can help with the functions that Eris lacks, for example, &lt;a href="https://www.npmjs.com/package/eris-additions"&gt;Eris Additions&lt;/a&gt;. There are even command handlers for Eris on NPM, like &lt;a href="https://www.npmjs.com/package/yuuko"&gt;Yuuko&lt;/a&gt; and &lt;a href="https://www.npmjs.com/package/eris-boiler"&gt;Eris Boiler&lt;/a&gt;. For developers moving from D.js to Eris, there is &lt;a href="https://www.npmjs.com/package/chariot.js"&gt;Chariot.js&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting started
&lt;/h1&gt;

&lt;p&gt;Now, without further delay, let us dive into the magical world of Discord Bots.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#creating-a-discord-bot-account"&gt;
  &lt;/a&gt;
  Creating a Discord Bot account
&lt;/h1&gt;

&lt;p&gt;Now, the first thing you need to do is to create a Discord Bot account.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Head over to the &lt;a href="https://discord.com/developers/applications"&gt;Discord Applications page&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Click the &lt;code&gt;New Application&lt;/code&gt; button on the top right corner.&lt;/li&gt;
&lt;li&gt;Now name your application (You can change it afterwards). Enter the name and hit &lt;code&gt;Create&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Now that you have created the application, now you need to create the bot account. Head over to &lt;code&gt;Bot&lt;/code&gt; and click on &lt;code&gt;Add Bot&lt;/code&gt;, and then click &lt;code&gt;Click on Yes, do it!&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Under the &lt;code&gt;TOKEN&lt;/code&gt; section, click &lt;code&gt;Copy&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Awesome! Now you have your Bot Token!&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Last but not least, do remember to invite your bot into your server in order to "talk" to it.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#set-up-your-project"&gt;
  &lt;/a&gt;
  Set up your project
&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;Create your project folder and &lt;code&gt;package.json&lt;/code&gt;.
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;mkdir&lt;/span&gt; &amp;lt;your-project-name&amp;gt;
&lt;span class="nb"&gt;cd&lt;/span&gt; &amp;lt;your-project-name&amp;gt;
npm init
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Ensure that the &lt;code&gt;main&lt;/code&gt; in your &lt;code&gt;package.json&lt;/code&gt; is set to &lt;code&gt;index.js&lt;/code&gt;.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Install the relevant dependencies now.
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm i eris yuuko dotenv
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Should you be using a version of NPM below 4.5 &lt;em&gt;(you shouldn't)&lt;/em&gt;, run the following instead:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm i eris yuuko dotenv &lt;span class="nt"&gt;--save&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Install &lt;code&gt;nodemon&lt;/code&gt; as well.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm i &lt;span class="nt"&gt;-g&lt;/span&gt; nodemon
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Create a &lt;code&gt;.env&lt;/code&gt; and &lt;code&gt;index.js&lt;/code&gt; file, and a &lt;code&gt;commands&lt;/code&gt; and &lt;code&gt;events&lt;/code&gt; folder.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#optional-steps"&gt;
  &lt;/a&gt;
  Optional Steps
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Install &lt;code&gt;bufferutil&lt;/code&gt;, &lt;code&gt;zlib-sync&lt;/code&gt; or &lt;code&gt;abalabahaha/erlpack&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Install a linter and create the config file
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt; npm i eslint &lt;span class="nt"&gt;-D&lt;/span&gt;
 &lt;span class="c"&gt;# -D is short for --save-dev&lt;/span&gt;
 npx eslint &lt;span class="nt"&gt;--init&lt;/span&gt;
 &lt;span class="c"&gt;# Just answer the prompts&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's about the end of setting up your project!&lt;br&gt;
Your project tree should look something like this now:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;|   .env
│   index.js
│   package-lock.json
│   package.json
│
├───commands
├───events
└───node_modules
    │   ...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#now-lets-start-coding"&gt;
  &lt;/a&gt;
  Now, let's start coding!
&lt;/h1&gt;

&lt;p&gt;Note: The final code will be included at the end :)&lt;/p&gt;

&lt;p&gt;First, open the project in you favourite text editor, and fill in the &lt;code&gt;.env&lt;/code&gt; file with the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;TOKEN=&amp;lt;your-token-here&amp;gt;
PREFIX=&amp;lt;your-bot-prefix&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Of course, replace &lt;code&gt;&amp;lt;your-token-here&amp;gt;&lt;/code&gt; with the Bot token you obtained earlier, and &lt;code&gt;&amp;lt;your-bot-prefix&amp;gt;&lt;/code&gt; with your bot prefix.&lt;br&gt;
If you do not understand &lt;code&gt;dotenv&lt;/code&gt; and &lt;code&gt;.env&lt;/code&gt; files,&lt;br&gt;
Now that we are no longer concerned with the bot configurations, let us write our basic bot code!&lt;br&gt;
Head over to your &lt;code&gt;index.js&lt;/code&gt; file, and insert the following at the top to require the packages.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Client&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;yuuko&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Imports the Client constructor&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;path&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// For joining paths&lt;/span&gt;
&lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dotenv&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// Imports the variables in the `.env` file&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see, we have imported the &lt;code&gt;Client&lt;/code&gt; constructor from &lt;code&gt;Yuuko&lt;/code&gt; but not the &lt;code&gt;Command&lt;/code&gt; constructor. Why? We will be putting the commands in &lt;code&gt;js&lt;/code&gt; files in the &lt;code&gt;command&lt;/code&gt; folder, so our &lt;code&gt;index.js&lt;/code&gt; file will not be crowded with commands. Neat!&lt;/p&gt;

&lt;p&gt;We can create a client with the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;bot&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;token&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;TOKEN&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;prefix&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PREFIX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;ignoreBots&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;ignoreBots: true&lt;/code&gt; in the code tells our bot to ignore all messages sent by other bots.&lt;br&gt;
If you want to allow commands to be used in only servers, you can set it using the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;globalCommandRequirements&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;guildOnly&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;However, if you want to allow commands to be used in only DMs, you can set it using the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;globalCommandRequirements&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;dmOnly&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To pass context/variables to the commands in other files, you can set in &lt;code&gt;index.js&lt;/code&gt; by doing&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;extendContext&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;variableOne&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Variable number 1!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The variables set here will be passed to commands and event listeners under &lt;code&gt;context.&amp;lt;variable-name&amp;gt;.&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now get you bot to scan the directories and import any event listeners and commands, and lastly, connect to Discord:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;bot&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addDir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;commands&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addDir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;events&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Your &lt;code&gt;index.js&lt;/code&gt; file should now look something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Client&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;yuuko&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;path&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;dotenv&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dotenv&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;env&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;dotenv&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;env&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;bot&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;token&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;TOKEN&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;prefix&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PREFIX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;ignoreBots&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;extendContext&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;variableOne&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Variable number 1!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="nx"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;editStatus&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dnd&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// edits bot status&lt;/span&gt;

&lt;span class="nx"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;error&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;globalCommandRequirements&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;guildOnly&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;bot&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addDir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;commands&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addDir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;events&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#the-raw-ready-endraw-event"&gt;
  &lt;/a&gt;
  The &lt;code&gt;Ready&lt;/code&gt; event
&lt;/h2&gt;

&lt;p&gt;Create a file in &lt;code&gt;./events&lt;/code&gt; and name it &lt;code&gt;ready.js&lt;/code&gt;.&lt;br&gt;
Require the EventListener:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;EventListener&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;yuuko&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and create an event listener:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;EventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ready&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// context.client = bot&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Logged in as &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;usename&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Alternatively, you may also do:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;EventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ready&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// client = bot&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Logged in as &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;usename&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;instead of importing the whole &lt;code&gt;context&lt;/code&gt;. You may be thinking:&lt;br&gt;
'Hey, I didn't define the &lt;code&gt;client&lt;/code&gt; variable in &lt;code&gt;bot.extendContext({})&lt;/code&gt;! Why can it be used here?'&lt;br&gt;
Well, Yuuko automatically sets the &lt;code&gt;client&lt;/code&gt; as the &lt;code&gt;bot&lt;/code&gt;, so you do not need to worry about it!&lt;/p&gt;

&lt;p&gt;Now, start your project:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;nodemon &lt;span class="nb"&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Your final &lt;code&gt;ready.js&lt;/code&gt; code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;EventListener&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;yuuko&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;EventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ready&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// client = bot&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Logged in as &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;usename&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#you-first-command"&gt;
  &lt;/a&gt;
  You first command
&lt;/h2&gt;

&lt;p&gt;Now, create a file in &lt;code&gt;./commands&lt;/code&gt;.&lt;br&gt;
What command should we create, then?&lt;br&gt;
Let's look to our dear friend Dank Memer for some inspiration:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_3I81xP6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/r700Hs1/2021-07-19.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_3I81xP6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/r700Hs1/2021-07-19.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There! Let's make this command then. Name the file you created &lt;code&gt;owo.js&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Open it, and put the following code inside:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Command&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;yuuko&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Command&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;owo&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;channel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;OwO&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and you're done! Your bot should now respond with 'OwO' when you type in the command. It's that easy!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;Eris is a great library to build Discord Bots, as it is lightweight and fast! I will be teaching you how to make a &lt;code&gt;meme&lt;/code&gt; command in my following post. Stay tuned!&lt;br&gt;
(PS You might have to wait quite a while as I have a lot of homework, and have upcoming National Exams to take.)&lt;/p&gt;

&lt;p&gt;Oops. I nearly forgot. The tree of your project folder should now be something like&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;│   .env
│   index.js
│   package-lock.json
│   package.json
│
├───commands
│       owo.js
│
├───events
│       ready.js
│
└───node_modules
    │   ...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Take care and goodbye for now!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>discord</category>
      <category>node</category>
    </item>
    <item>
      <title>8 Free Websites to learn Coding!</title>
      <author>SAIFULLAH🇮🇳</author>
      <pubDate>Mon, 19 Jul 2021 10:46:45 +0000</pubDate>
      <link>https://dev.to/saifullah/8-free-websites-to-learn-coding-3c5</link>
      <guid>https://dev.to/saifullah/8-free-websites-to-learn-coding-3c5</guid>
      <description>&lt;p&gt;Do you love reading more than watching tutorials, then my friend this post is for you. I'm going to reveal &lt;strong&gt;8 free websites&lt;/strong&gt; to learn &lt;strong&gt;Coding&lt;/strong&gt; or &lt;strong&gt;Programming&lt;/strong&gt; for free.&lt;br&gt;
If you want to know the difference between Coding and Programming than check out my previous post &lt;a href="https://dev.to/saifullah/are-you-a-programmer-then-you-must-know-this-differences-oea"&gt;https://dev.to/saifullah/are-you-a-programmer-then-you-must-know-this-differences-oea&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So, let's start.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-w3schools"&gt;
  &lt;/a&gt;
  1 W3schools
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--67MDkiqB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p9owohjnbaubxtj2et2g.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--67MDkiqB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p9owohjnbaubxtj2et2g.jpg" alt="Image of website"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;W3schools is an educational website for learning &lt;strong&gt;web technologies&lt;/strong&gt; online. Contents includes tutorials and references related to &lt;strong&gt;HTML, CSS, JS, JSON, PHP, PYTHON, JAVA, C++ and C#&lt;/strong&gt;&lt;br&gt;
All are present from scratch to advance with exercises in it.&lt;br&gt;
&lt;a href="https://www.w3schools.com/"&gt;W3Schools&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-freecodecamp"&gt;
  &lt;/a&gt;
  2 freeCodeCamp
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XCAi3p2N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zivfgopq6gc2661zd61a.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XCAi3p2N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zivfgopq6gc2661zd61a.jpg" alt="Website Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;freeCodeCamp is an organization that consist of an interactive learning web platform, an &lt;strong&gt;online community forum, chat rooms, online publications and local organization&lt;/strong&gt; that intend to make learning web development accessible to anyone.&lt;br&gt;
&lt;strong&gt;NOTE&lt;/strong&gt; : You can get free Certificate also after completing the tasks.&lt;br&gt;
&lt;a href="https://www.freecodecamp.org/"&gt;freeCodeCamp&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-sololearn"&gt;
  &lt;/a&gt;
  3 Sololearn
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f5WdUI53--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g9a0t3csbo5pibqe3eo1.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f5WdUI53--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g9a0t3csbo5pibqe3eo1.jpg" alt="Image of site"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Sololearn allows users to learn a variety of programming languages and concepts through &lt;strong&gt;short lessons.&lt;/strong&gt; Code Challenges and quizzes included.&lt;br&gt;
&lt;a href="https://www.sololearn.com/"&gt;Sololearn&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-upskill"&gt;
  &lt;/a&gt;
  4 Upskill
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vlrhJN2A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kyrtbvorc432hkb1015v.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vlrhJN2A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kyrtbvorc432hkb1015v.jpg" alt="Upskill website"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Learn how to code from &lt;strong&gt;scratch.&lt;/strong&gt; New contents added regularly to keep you update. &lt;strong&gt;Engaging&lt;/strong&gt; Teaching style. They offer over &lt;strong&gt;200 free lessons!&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://upskillcourses.com/"&gt;Upskill&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-programiz"&gt;
  &lt;/a&gt;
  5 Programiz
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DCz4QmUb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yazo6nd10eaag9oal7sm.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DCz4QmUb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yazo6nd10eaag9oal7sm.jpg" alt="Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Learn to code in &lt;strong&gt;Python, C/C++, Java and other popular programming languages&lt;/strong&gt; with their easy to follow tutorials, examples, online compiler and references.&lt;br&gt;
&lt;a href="https://www.programiz.com/"&gt;Programiz&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-geeksforgeeks"&gt;
  &lt;/a&gt;
  6 GeeksforGeeks
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DJmCy8jQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ccgwxb9doe8u8ghuedwk.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DJmCy8jQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ccgwxb9doe8u8ghuedwk.jpg" alt="image of geeks"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A Computer Science portal for geeks. It contains well written, well thought and well explained &lt;strong&gt;computer science and programming articles, quizzes and more.&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://www.geeksforgeeks.org/"&gt;GeeksforGeeks&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-studytonight"&gt;
  &lt;/a&gt;
  7 Studytonight
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--t04RI8gM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9ymkck75cx56qkk0quix.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t04RI8gM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9ymkck75cx56qkk0quix.jpg" alt="website image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Best place to learn &lt;strong&gt;Engineering subjects&lt;/strong&gt; like Core Java, C++, DBMS, Data Structures etc. Through Hand-written simple Tutorial, Tests, Video tutorials and more.&lt;br&gt;
&lt;a href="https://www.studytonight.com/"&gt;Studytonight&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-javatpoint"&gt;
  &lt;/a&gt;
  8 Javatpoint
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HfFOsUBf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9shgv1mesp652zwq7il3.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HfFOsUBf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9shgv1mesp652zwq7il3.jpg" alt="Java image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Free Online Tutorials, Javatpoint provides &lt;strong&gt;tutorials and interview questions of all technology&lt;/strong&gt; like java tutorial, android, java frameworks, javascript, etc.&lt;br&gt;
&lt;a href="https://www.javatpoint.com/"&gt;Javatpoint&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Happy learning!&lt;br&gt;
If you know something better learning platform comment below.&lt;br&gt;
Thank you.&lt;/p&gt;

</description>
      <category>codenewbie</category>
      <category>webdev</category>
      <category>webassembly</category>
    </item>
    <item>
      <title>Video SDK Embed: Low-Code Prebuilt SDK 1.0 | videosdk.live</title>
      <author>videosdk.live</author>
      <pubDate>Mon, 19 Jul 2021 10:45:36 +0000</pubDate>
      <link>https://dev.to/videosdk/video-sdk-embed-low-code-prebuilt-sdk-1-0-videosdk-live-46e6</link>
      <guid>https://dev.to/videosdk/video-sdk-embed-low-code-prebuilt-sdk-1-0-videosdk-live-46e6</guid>
      <description>&lt;h2&gt;
  &lt;a href="#now-building-a-video-conferencing-solution-is-as-easy-as-ordering-your-next-pizza-online"&gt;
  &lt;/a&gt;
  Now Building a Video Conferencing Solution Is As Easy As Ordering Your Next Pizza Online.
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#presenting-you-the-prebuilt"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Presenting you the Prebuilt&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5bZ7yJLo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/http://blog.videosdk.live/content/images/2021/07/video-sdk-linkedin-cover.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5bZ7yJLo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/http://blog.videosdk.live/content/images/2021/07/video-sdk-linkedin-cover.jpg" alt="Video SDK Embed: Low-Code Prebuilt SDK 1.0"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Following our announcement on launching the pre-built in the previous blog, we are excited to deliver the manual for the same. This blog will get the readers up and running with the pre-built in no time.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-embed-video-calls-using-the-videosdklive-prebuilt"&gt;
  &lt;/a&gt;
  &lt;strong&gt;How to embed video calls using the Videosdk.live pre-built&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Embedding a video call to your application becomes easy with Videosdk.live. With our Pre-built, you can add video calls on your website and application with just a few lines of code and nothing could be simpler than this. You can share URLs to the participants for the video calls and accommodate more than 5000 people over the same call.&lt;/p&gt;

&lt;p&gt;We provide you with a free set-up to experience how to use our prebuilt so you can make the best of it. We also offer you 10,000 minutes, free every month.&lt;/p&gt;

&lt;p&gt;Prebuilt SDK enables the opportunity to integrate real-time communication SDK without writing explicit code. It supports all modern javascript frameworks such as React JS, Vue, and Angular including Vanilla JS.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#to-get-started-follow-the-steps"&gt;
  &lt;/a&gt;
  &lt;strong&gt;To get started, follow the steps&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;For better understanding, we have divided the prebuilt setup into few steps. Each step describes the code snippet that one needs to use while constructing integrating the SDK.&lt;/p&gt;

&lt;p&gt;The prebuilt has codes that sometimes become difficult for a fresher or an inexperienced developer. In that case, one can take the help of a developer to configure the setup. In aid, you can always reach us, we provide 24/7 customer support for our clients.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#video-calls-with-videosdklive-offer-users-amazing-features-with-quality-as-our-prior-most-concern"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Video calls with Videosdk.live offer users amazing features with quality as our prior most concern.&lt;/strong&gt;
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;10,000 minutes free each month&lt;/li&gt;
&lt;li&gt;Participant capacity up to 5,000&lt;/li&gt;
&lt;li&gt;End-to-end encrypted calls&lt;/li&gt;
&lt;li&gt;HIPAA Compliance in enterprise mode&lt;/li&gt;
&lt;li&gt;HD and Full HD Video calls&lt;/li&gt;
&lt;li&gt;Audio support of 16kHz to 48kHz&lt;/li&gt;
&lt;li&gt;360 Spatial Audio&lt;/li&gt;
&lt;li&gt;Intelligence Active Speaker Switch&lt;/li&gt;
&lt;li&gt;Real-time messaging&lt;/li&gt;
&lt;li&gt;Cloud recording&lt;/li&gt;
&lt;li&gt;Whiteboard and poll support&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Let's begin with the prebuilt setup. Read all the steps carefully before installing one in your application.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-0-generate-access-token-in-node-js"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Step 0:&lt;/strong&gt; Generate access token in Node JS
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Access token generation (server-side code)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;An access token is required to authenticate with Videosdk and make any API calls. You can generate one with the _ &lt;strong&gt;API key&lt;/strong&gt; _ and _ &lt;strong&gt;secret&lt;/strong&gt; _ mentioned in your developer portal at the Videosdk console.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const express = require("express");
const jwt = require("jsonwebtoken");
const cors = require("cors");
const request = require("request");

const app = express();
const port = 9000;
app.use(cors());
app.use(express.json());
app.use(express.urlencoded({ extended: true }));

app.get("/get-token", (req, res) =&amp;gt; {
  const API_KEY = process.env.ZUJONOW_API_KEY;
  const SECRET_KEY = process.env.ZUJONOW_SECRET_KEY;
  const options = { expiresIn: "10m", algorithm: "HS256" };
  const payload = {
    apikey: API_KEY,
    permissions: ["allow_join", "allow_mod", "ask_join"], // Trigger permission.
  };
  const token = jwt.sign(payload, SECRET_KEY, options);
  res.json({ token });
});

app.listen(port, () =&amp;gt; {
  console.log(`Example app listening at http://localhost:${port}`);
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The available permissions are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;_ &lt;strong&gt;allow_join&lt;/strong&gt; _: A participant will be permitted entry without request&lt;/li&gt;
&lt;li&gt;_ &lt;strong&gt;ask_join&lt;/strong&gt; _: A participant will not be permitted entry without request&lt;/li&gt;
&lt;li&gt;_ &lt;strong&gt;allow_mod&lt;/strong&gt; _: Allow participant to enable/disable other participant’s mic/ webcam&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The generated token must be sent in the _ &lt;strong&gt;Authorization&lt;/strong&gt; _ header for all API calls and it should also be used with the &lt;strong&gt;ZujoSDK.config(token&lt;/strong&gt;) method.&lt;/p&gt;

&lt;p&gt;After the initial step of access token generation, one reaches the next or the first step, creating or joining the meeting.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-1-create-or-join-the-meeting"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Step 1: Create or join the meeting&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Get a meeting ID for a new meeting or validate an existing meeting ID to join a meeting. Below mentioned are two code snippets, where one is for a new meeting and the other one is for an existing meeting for joining.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Create a new meeting ID&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;app.post("/create-meeting/", (req, res) =&amp;gt; {
  const token = req.body.token;
  const ZUJONOW_API_ENDPOINT = `${ZUJONOW_API_ENDPOINT}/api/meetings`;

  const options = {
    method: "POST",
    headers: {
      Authorization: token,
    },
  };

  fetch(ZUJONOW_API_ENDPOINT, options)
    .then((response) =&amp;gt; response.json())
    .then((result) =&amp;gt; res.json(result)) // result will contain meetingId
    .catch((error) =&amp;gt; throw error);
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;OR&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Validate existing meeting ID for joining&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;app.get("/validate-meeting/:token", (req, res) =&amp;gt; {
  const token = req.params.token;
  const ZUJONOW_API_ENDPOINT = `${ZUJONOW_API_ENDPOINT}/api/meetings`;

  const options = {
    method: "POST",
    headers: {
      Authorization: token,
    },
  };

  fetch(ZUJONOW_API_ENDPOINT, options)
    .then((response) =&amp;gt; response.json())
    .then((result) =&amp;gt; res.json(result)) // result will contain meetingId
    .catch((error) =&amp;gt; throw error);
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;These two code snippets are the initial ones taking you further to the next part of the prebuilt, where you need to install the prebuilt in the web application.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 2: Install prebuilt SDK in your Web app&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;One can install the prebuilt in your application by using either the &lt;strong&gt;script&lt;/strong&gt; or the &lt;strong&gt;npm package manager.&lt;/strong&gt; Please use the installation method suitable for your project.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Setting up prebuilt SDK using&lt;/strong&gt; _ &lt;strong&gt;&lt;/strong&gt; _&lt;/p&gt;

&lt;p&gt;The easiest way to get started is by just adding our prebuilt script to your website.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;script src="https://sdk.videosdk.live/embedded/index.js"&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;OR&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Setting up prebuilt SDK using NPM package manager&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Another way is by installing _ &lt;strong&gt;&lt;a class="mentioned-user" href="https://dev.to/videosdk"&gt;@videosdk&lt;/a&gt;
.live/js-prebuilt&lt;/strong&gt; _ in your app&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install @videosdk.live/js-prebuilt

#OR#

yarn add @videosdk.live/js-prebuilt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Heading towards the final steps&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 3: Add script into your application&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Initialize _ &lt;strong&gt;VideoSDKMeeting&lt;/strong&gt; _ on the page where you want to start the meeting&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const videoMeeting = new VideoSDKMeeting();

const videoMeetingSpecs = {
  micEnabled: true,
  webcamEnabled: true,
  name: "/* NAME OF PARTICIPANT */",
  meetingId: "/* MEETING ID */",
  redirectOnLeave: "/* REDIRECT ON LEAVE */",
  chatEnabled: true,
  screenShareEnabled: true,
  pollEnabled: true,
  whiteBoardEnabled: true,
  participantCanToggleSelfWebcam: true,
  participantCanToggleSelfMic: true,
  raiseHandEnabled: true,
  token: "/* YOUR TOKEN */",
  containerId: null,
};

videoMeeting.init(videoMeetingSpecs);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Just copy the script and paste it into your application on the page where you want the meeting to take place.&lt;/p&gt;

&lt;p&gt;Hold on! There is one final step.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 4: Run the Application&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Once call _ &lt;strong&gt;init&lt;/strong&gt; _ and run the application, you will be able to see the meeting screen.&lt;/p&gt;

&lt;p&gt;Run the application with the prebuilt. Here is the video call API on your application.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;That’s it. You made it.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Send the invite code to the participants or just open the same page in multiple tabs to join the meeting and appreciate yourself investing time on worthwhile goals.&lt;/p&gt;

&lt;p&gt;Connect with us. We are happy to serve you!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#find-our-documentation-here"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Find our documentation here:&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;[&lt;/p&gt;

&lt;p&gt;Quickstart for Prebuilt JS | videosdk.live Documentation&lt;/p&gt;

&lt;p&gt;videosdk.live tutorials will help you to deep dive into details of all the SDK and API. We tried to include example of all the possible programming langaguges.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gyjQAFY9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://docs.videosdk.live/img/videosdklive-thumbnail.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gyjQAFY9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://docs.videosdk.live/img/videosdklive-thumbnail.jpg" alt="Video SDK Embed: Low-Code Prebuilt SDK 1.0"&gt;&lt;/a&gt;&lt;br&gt;
](&lt;a href="https://docs.videosdk.live/docs/tutorials/realtime-communication/prebuilt-sdk/quickstart-prebuilt-js"&gt;https://docs.videosdk.live/docs/tutorials/realtime-communication/prebuilt-sdk/quickstart-prebuilt-js&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;Setup | videosdk.live Documentation&lt;/p&gt;

&lt;p&gt;Using prebuilt sdk&lt;/p&gt;

&lt;p&gt;&lt;a href="https://docs.videosdk.live/docs/realtime-communication/sdk-reference/prebuilt-sdk-js/setup"&gt;Launching: Prebuilt Video SDK for developers 1.0&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#get-10000-minutes-free-every-month"&gt;
  &lt;/a&gt;
  &lt;strong&gt;🚀Get 10,000 minutes free every month🚀&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;(&lt;a href="https://www.videosdk.live"&gt;https://www.videosdk.live&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--J2lZAuF0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/http://blog.videosdk.live/content/images/2021/07/Untitled-design--7--1.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--J2lZAuF0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/http://blog.videosdk.live/content/images/2021/07/Untitled-design--7--1.gif" alt="Launching: Prebuilt Video SDK for developers 1.0"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>devops</category>
      <category>android</category>
      <category>productivity</category>
    </item>
    <item>
      <title>CSS before and After element : Everything you need to know about css pseudo element</title>
      <author>Modern Web</author>
      <pubDate>Mon, 19 Jul 2021 10:31:51 +0000</pubDate>
      <link>https://dev.to/kunaal438/all-about-css-before-and-after-element-css-pseudo-elements-5g1n</link>
      <guid>https://dev.to/kunaal438/all-about-css-before-and-after-element-css-pseudo-elements-5g1n</guid>
      <description>&lt;p&gt;Hello, welcome. In this article we'll learn about CSS pseudo-elements.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-is-pseudoelements-"&gt;
  &lt;/a&gt;
  What is pseudo-elements ?
&lt;/h1&gt;

&lt;p&gt;Pseudo-elements allow you to insert content on the page without writing HTML for it. You can make whole content with CSS. But that content is not actually a DOM element.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#-raw-before-endraw-and-raw-after-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;:before&lt;/code&gt; and &lt;code&gt;:after&lt;/code&gt;
&lt;/h1&gt;

&lt;h3&gt;
  &lt;a href="#syntax"&gt;
  &lt;/a&gt;
  Syntax
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="nd"&gt;:before&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="nl"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;'this is before element'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="nd"&gt;:after&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="nl"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;'this is after element'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is how we make &lt;code&gt;before&lt;/code&gt; and &lt;code&gt;after&lt;/code&gt; element in CSS. But, How does this will look like in HTML at the end.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
  ::before element

  &lt;span class="nt"&gt;&amp;lt;element/&amp;gt;&lt;/span&gt;

  ::after element
&lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#lets-take-a-example"&gt;
  &lt;/a&gt;
  Let's take a example.
&lt;/h1&gt;

&lt;p&gt;Without before element.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/kunaal_kumar/embed/KKmqQxN?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;with before and after element.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/kunaal_kumar/embed/ZEKyrqJ?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#content-property"&gt;
  &lt;/a&gt;
  Content property
&lt;/h1&gt;

&lt;p&gt;Now, for &lt;code&gt;before&lt;/code&gt; and &lt;code&gt;after&lt;/code&gt; elements &lt;code&gt;content&lt;/code&gt; property is very very important. Because, in order to make any pseudo element, you have to give some content. You cannot create element without content. And yes, I am saying this again and again because I forget this thing very often.&lt;/p&gt;

&lt;p&gt;Values for &lt;code&gt;content&lt;/code&gt; property :&lt;/p&gt;

&lt;p&gt;i) &lt;code&gt;a text&lt;/code&gt; :  &lt;code&gt;content: "this is a text";&lt;/code&gt; you can give text as a content.&lt;/p&gt;

&lt;p&gt;ii) &lt;code&gt;image&lt;/code&gt; : &lt;code&gt;content: url(image-path);&lt;/code&gt; You can also give image to the content. But, you cannot change the image size.&lt;/p&gt;

&lt;p&gt;iii) &lt;code&gt;Empty&lt;/code&gt; : &lt;code&gt;content: '';&lt;/code&gt; when you don't won't any text or image to show up. You can make it empty. It use a lot to create designs.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#-raw-endraw-or-raw-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;:&lt;/code&gt; or &lt;code&gt;::&lt;/code&gt; ?
&lt;/h1&gt;

&lt;p&gt;Now, we can make an element with single colon &lt;code&gt;:before&lt;/code&gt; or we can use double colon &lt;code&gt;::before&lt;/code&gt;. The only thing, you have to keep in mind is &lt;code&gt;::&lt;/code&gt; double colon is supported by all browsers except Internet explorer 8. So, if you want, internet explorer 8 support. You have to use &lt;code&gt;:&lt;/code&gt; colon.&lt;/p&gt;

&lt;p&gt;So, that's it about pseudo elements. I hope you understood each and everything. If you have doubt or I missed some point let me know in the comments.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#articles-you-may-found-useful"&gt;
  &lt;/a&gt;
  Articles you may found Useful
&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://dev.to/kunaal438/css-position-everything-you-need-for-good-developer-pfh"&gt;CSS Positions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/kunaal438/media-query-everything-you-need-for-responsive-design-b8g"&gt;CSS Media Query&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/kunaal438/display-flex-complete-guide-on-css-flex-box-2021-5bi2"&gt;CSS flex box&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;And if you want to improve your webdev skills. You can watch tutorial on &lt;a href="https://youtu.be/ZeY9RicS2js"&gt;Disney+ clone&lt;/a&gt; clone by me. If you like, you can subscribe my youtube channel, and follow me on instagram. I create awesome web contents. [&lt;a href="https://www.youtube.com/c/modern_web?sub_confirmation=1"&gt;Subscribe&lt;/a&gt;], [&lt;a href="https://www.instagram.com/modern_web_channel/"&gt;Instagram&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;Thanks For reading.&lt;/p&gt;

</description>
      <category>css</category>
      <category>html</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Live Streaming vs Video Conferencing | videosdk.live</title>
      <author>videosdk.live</author>
      <pubDate>Mon, 19 Jul 2021 10:31:03 +0000</pubDate>
      <link>https://dev.to/videosdk/live-streaming-vs-video-conferencing-videosdk-live-283l</link>
      <guid>https://dev.to/videosdk/live-streaming-vs-video-conferencing-videosdk-live-283l</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-live-streaming"&gt;
  &lt;/a&gt;
  What is Live Streaming?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5Wswp3JR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/http://blog.videosdk.live/content/images/2021/07/video-conf-vs-live-streaming.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5Wswp3JR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/http://blog.videosdk.live/content/images/2021/07/video-conf-vs-live-streaming.jpg" alt="Live Streaming vs Video Conferencing"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Live streaming refers to the concept of streaming digital video content over the internet. On a Live stream technology, one can watch, create, and share videos content online. It needs an internet connection, a smartphone, or a PC to enable the live streaming activity on a device.&lt;/p&gt;

&lt;p&gt;It is an aid to big corporates and small businesses for branding, marketing, and advancement. Live streaming has become a modern technology to make a digital presence in the community. In contemporary living, going digital is the only way out to make a successful existence. Even live streaming has today been popular with gaming, content creation, and education.&lt;/p&gt;

&lt;p&gt;Live streaming happens to broadcast media online over several social media platforms. A live streamer, at once can stream content over multiple platforms increasing reach with broader visibility. A live stream is organized by a host who invites the viewers to his streaming session. A live stream allows comment and chat facility on an ongoing streaming session. It also allows a huge number of viewers to participate in the stream.&lt;/p&gt;

&lt;p&gt;Live streaming is telecasted with a delay or lag of 5 to 10 seconds for the viewers. It is encoded in different resolutions, enabling the support for Adaptive Bitrate Streaming (ABS) and the good part is that live streaming can be recorded for viewing later using the VoD facility, allowing video playback. It is a boon that with unstable internet connectivity too the streaming on our device doesn’t stop, as it adjusts the viewing quality of the video. Unfortunately, if a viewer faces disconnection, live streaming is a benefit in this case, as it allows playback of the recorded stream.&lt;/p&gt;

&lt;p&gt;Introduction | videosdk.live Documentation&lt;/p&gt;

&lt;p&gt;Live streming lets you stream your live videos with just few lines of code. Reach to your audience across the globe.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f40YrG_L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://docs.videosdk.live/assets/images/live-streaming-20847dd496d7ef5166746aaec3747f49.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f40YrG_L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://docs.videosdk.live/assets/images/live-streaming-20847dd496d7ef5166746aaec3747f49.jpg" alt="Live Streaming vs Video Conferencing"&gt;&lt;/a&gt;&lt;br&gt;
(&lt;a href="https://docs.videosdk.live/docs/live-streaming/intro"&gt;https://docs.videosdk.live/docs/live-streaming/intro&lt;/a&gt;)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-video-conferencing"&gt;
  &lt;/a&gt;
  What is Video Conferencing?
&lt;/h2&gt;

&lt;p&gt;Video conferencing is a technology that allows meeting in closed groups with close people. Video conferencing is today a prominent mode of communication in corporate houses. Video conferencing allows connecting people from all around the world on a single screen.&lt;/p&gt;

&lt;p&gt;Video conferencing connects people over a low latency video and audio transmission over IP. It allows talk and chat features over conferencing where people can be verbally communicative and can discuss and generate solutions. A video conference generally has limited participants, who are the ones invited by the host. Generally, video conferencing systems are secured with passcodes initiated by the host for the participants.&lt;/p&gt;

&lt;p&gt;A video conferencing system provides no lag in the delivery of messages to the participants. Under low latency streaming, video conferencing often causes participants a glitch, in case of poor connectivity. When a participant of a conference faces a power cut or a disconnection, the conference immediately stops for him. Concerning, he cannot view the previous discussions. A video conference can only be streamed on-demand when it is recorded.&lt;/p&gt;

&lt;p&gt;Introduction | videosdk.live Documentation&lt;/p&gt;

&lt;p&gt;Real-time comunication SDK is built with blend of webRTC and optimised UDP protocol. Our SDK helps developers to add real-time audio and video calls to any mobile app or web application.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--b-1qr1T2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://docs.videosdk.live/assets/images/Zujonow-whitelabel-min-7e7fcd47dedd07f03f4355427a764caf.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b-1qr1T2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://docs.videosdk.live/assets/images/Zujonow-whitelabel-min-7e7fcd47dedd07f03f4355427a764caf.jpg" alt="Live Streaming vs Video Conferencing"&gt;&lt;/a&gt;&lt;br&gt;
(&lt;a href="https://docs.videosdk.live/docs/realtime-communication/intro"&gt;https://docs.videosdk.live/docs/realtime-communication/intro&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#use-cases"&gt;
  &lt;/a&gt;
  Use cases
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#live-streaming"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.videosdk.live/"&gt;LIVE STREAMING&lt;/a&gt;
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;Virtual summits and events&lt;/li&gt;
&lt;li&gt;Public announcements&lt;/li&gt;
&lt;li&gt;Webinars&lt;/li&gt;
&lt;li&gt;Gaming&lt;/li&gt;
&lt;li&gt;Education&lt;/li&gt;
&lt;li&gt;Health care
&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#video-conferencing"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.videosdk.live/"&gt;VIDEO CONFERENCING&lt;/a&gt;
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;Business communication&lt;/li&gt;
&lt;li&gt;Interviews&lt;/li&gt;
&lt;li&gt;Education&lt;/li&gt;
&lt;li&gt;Social media conversations&lt;/li&gt;
&lt;li&gt;Retail&lt;/li&gt;
&lt;li&gt;Telehealth
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;What does the blog explain?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This blog explains how live streaming contrasts with video conferencing. Both live streaming and video conferencing are real-time technologies. These are the modern technologies of the digitally trending community. Beyond par, we are increasingly consuming these forefront advancements. They have been among the most useful communication tools in recent times. In this blog, we will learn how these technologies have their pros and cons and how they are similar to and different from each other.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Live streaming - Pros and Cons&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PROS&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;A huge number of participants can join a live stream&lt;/li&gt;
&lt;li&gt;A live stream also works in an unstable internet connection&lt;/li&gt;
&lt;li&gt;It allows the video playback option&lt;/li&gt;
&lt;li&gt;A live stream can be recorded in HD quality&lt;/li&gt;
&lt;li&gt;It supports on-demand services&lt;/li&gt;
&lt;li&gt;A live stream supports streaming over multiple platforms at once&lt;/li&gt;
&lt;li&gt;Supports screen sharing&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;CONS&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Two-way communication is difficult&lt;/li&gt;
&lt;li&gt;It does not support participants’ visibility to the host&lt;/li&gt;
&lt;li&gt;A chat box is available only for comments
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Video conferencing - Pros and cons&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PROS&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Possible two-way communication&lt;/li&gt;
&lt;li&gt;Supports screen sharing&lt;/li&gt;
&lt;li&gt;Allotted space for participants’ visibility&lt;/li&gt;
&lt;li&gt;Saves time and money&lt;/li&gt;
&lt;li&gt;Easy scheduling of meetings&lt;/li&gt;
&lt;li&gt;Real-time communication without lags&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;CONS&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;A limited number of participants can join&lt;/li&gt;
&lt;li&gt;Poor video quality in case of unstable internet connection&lt;/li&gt;
&lt;li&gt;Limited streaming platform support
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Similarities between live streaming and video conferencing&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Live-action:&lt;/strong&gt; Both the technologies work on live platforms. They stream the content live to the viewers, where the viewers can chat and converse to bring out conclusions.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Involvement of participants:&lt;/strong&gt; These technologies are designed to draw maximum engagement. Participants are allowed to join the stream with their audio and video by the hosts.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Screenshare:&lt;/strong&gt; Both live streaming and video conferencing allow screen sharing options, displaying pre-recorded content and images to the screen.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Chat features:&lt;/strong&gt; These technologies allow chat options for the participants in ongoing streaming. The participants can comment/converse with the host via chatbox.
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Dissimilarities between live streaming and video conferencing&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Viewer screen space-&lt;/strong&gt; Live streaming does not allow viewers to share screen space with the live streamer. One can only communicate via chat. Whereas in video conferencing, the participants have an allotted box where they can be seen as well as can see the other participants in the meeting.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Accessibility-&lt;/strong&gt; Live streaming is accessible to a huge number of viewers at once, also on different platforms. Whereas, in video conferencing, only limited participants are allowed into the meeting, making it a kind of closed group meeting.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Communication ease-&lt;/strong&gt; There is an ease of communication with video conferencing due to a limited audience in the meeting, where everyone can put their points to conclude. In a live stream, no conclusion can be derived as it is merely a stream where people can only watch certain content and comment on the same.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Scalability-&lt;/strong&gt; A live stream is encoded in several resolutions to make it available in a manageable quality for each device type and its connectivity. Whereas in video conferencing, the video outcome becomes poor due to low latency.
&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#what-is-a-better-option"&gt;
  &lt;/a&gt;
  What is a better option?
&lt;/h2&gt;

&lt;p&gt;Both video conferencing and live streaming have their benefits and different use cases. It all depends on one’s need for the time. All you need is a mobile device and an internet connection whenever you think of using them.&lt;/p&gt;

&lt;p&gt;For instance, a company has launched a product for which it is looking for a public announcement, and also to increase its branding and market value. In this case, the company opts for live streaming where it makes an announcement that gets into the knowledge of millions of viewers. The company excels in its strategy with live streaming. In the same situation, if the company opts for video conferencing, it may convey its product to only some thousands of people, which also tends to be costly as well as gives a low reach to the product. These states live streaming to be a better option for announcements and huge engagements.&lt;/p&gt;

&lt;p&gt;Now for instance, if a company has to make some decisions with the team, which does not require external public at all. In this case, the company opts for video conferencing. The foremost reason is that video conferencing technology works in real-time, where the messages are delivered instantly to the receiver. This technology also keeps a window for each participant, which leads to the active participation of each one during the meet. Video conferencing is favorably a better option for small group communication, where the general external public is not kept as an ideal viewer.&lt;/p&gt;

&lt;p&gt;(&lt;a href="https://www.videosdk.live/"&gt;https://www.videosdk.live/&lt;/a&gt;)&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>devops</category>
      <category>android</category>
      <category>productivity</category>
    </item>
    <item>
      <title>What is Video on Demand? | videosdk.live</title>
      <author>videosdk.live</author>
      <pubDate>Mon, 19 Jul 2021 10:23:13 +0000</pubDate>
      <link>https://dev.to/videosdk/what-is-video-on-demand-videosdk-live-j55</link>
      <guid>https://dev.to/videosdk/what-is-video-on-demand-videosdk-live-j55</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KHXCOSVX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/http://blog.videosdk.live/content/images/2021/07/What-is-VOD.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KHXCOSVX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/http://blog.videosdk.live/content/images/2021/07/What-is-VOD.png" alt="What is Video on Demand?"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Video on Demand (VoD) creates an online video library for the viewers, which they can access anytime at their ease with any compatible device. Unlike the traditional media broadcasting channels, which demanded viewers to watch videos at the time of broadcast only, VoD is different. It allows viewers to view content at their comfort.&lt;/p&gt;

&lt;p&gt;Video on Demand technology, the future of online content delivery has witnessed a rapid engagement in the current times. Today, the majority of the content is found attractive when it is in video format. There comes the idea of VoD. VoD is an abbreviation for Video on Demand. This system provides the technology of storing video content on the cloud in a compressed file format. Researchers have found that more than a written article or an e-mail, today, video content looks more alluring to the reader who has turned into a viewer. It is well said that whatever we visualize has more worth than whatever we read or listen to. The content visualized always holds more significance.&lt;/p&gt;

&lt;p&gt;With the increasing global population, the use of smartphones and internet connection has also increased. This has in turn led to an increase in demand for online digital content. Today the businesses have witnessed a rise in demand for videos, and to assure you, this is a never-ending demand which is creating endless opportunities. Video on Demand is a technology that serves to reap benefits to the content creators as well. It allows users to view videos at their comfort, whenever they want, and in whatsoever manner they choose to view them. Video on Demand allows flexible viewing facilities to the users. This blog explains the term Video on Demand in detail, about what it is, how it works, and its benefits.&lt;/p&gt;

&lt;p&gt;On a Video on Demand platform, one can play videos, seek the video forward and backward, pause and play, and watch later. It helps in managing videos, and deliver the content with the help of CDNs, which helps in providing fast and reliable content delivery to the businesses. Professionally, it also helps businesses to have full control over the content delivery and its distribution. It helps to customize the content delivery for businesses to deliver the apt data consensual by them. It sets an arrangement of pre-recorded data, which can be reviewed in the future.&lt;/p&gt;

&lt;p&gt;Often live streaming and VoD are considered similar but in reality, they are pretty different. Let us understand what is live streaming.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-live-streaming"&gt;
  &lt;/a&gt;
  What is Live Streaming?
&lt;/h2&gt;

&lt;p&gt;Live streaming is a concept that allows businesses to stream their content online. Viewers can watch the content on a real-time basis. The viewers can watch the streaming which is happening live and can also watch them later, if recorded, using VoD. On a live stream, the viewers can also pause, play, and make the videos play backward. Live streaming is valuable as it connects to its customers, creating a live bond with them. It also allows live chat with the viewers. VoD lacks a live chat facility, though it allows a well-versed playback video facility for the same recorded live stream.&lt;/p&gt;

&lt;p&gt;Live streaming helps businesses to make announcements for the public, media releases, and press conferences to increase their PR activity with the external environment. Live streaming is a beneficial tool as it helps businesses to boost their marketing and branding strategies too. A live stream can be later accessed as a VoD. the stream can also be accessed later with the help of the VoD facility.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-choose-an-ideal-video-on-demand-facility"&gt;
  &lt;/a&gt;
  How to choose an ideal Video on Demand facility?
&lt;/h3&gt;

&lt;p&gt;Choosing an ideal VoD facility is a must as it helps in making engagements better. The viewers are generally consumer-oriented which leads to a raised concern of security and a good system workforce, which doesn’t lag or create unusual issues for the general viewers. Analyzing business trends, good branding is necessary, but in the current trends, businesses have turned customer-oriented, where the features have been designed in accordance to the customer ease.&lt;/p&gt;

&lt;p&gt;Videosdk.live makes the client experience better. We infuse all the features of live streaming as well as video-on-demand at one platform. We make your experience worth sharing with others. We keep up with a huge product range, starting from&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Customizable API and SDK with UI library&lt;/li&gt;
&lt;li&gt;Low-latency scalable live streaming&lt;/li&gt;
&lt;li&gt;Video-on-demand facility&lt;/li&gt;
&lt;li&gt;Content Delivery Networks and more&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;All these products we serve to our clients on a single platform enhancing the consumer-development opportunities and user-friendly approach.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#videosdklive-offers-clients-amazing-video-on-demand-facilities"&gt;
  &lt;/a&gt;
  Videosdk.live offers clients amazing video on demand facilities
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;(1) &lt;a href="https://docs.videosdk.live/docs/video-on-demand/intro"&gt;Whitelabel&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can host your videos on live streaming with the Whitelabel facility, engaging the screen with your branding and logo&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;(2) &lt;a href="https://docs.videosdk.live/docs/video-on-demand/tutorials/stream-video-files-tutorial"&gt;Scalable streaming&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We cater to flawless, uninterrupted streaming, with the stream recording facility. We help you engage a million users&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;(3) &lt;a href="https://docs.videosdk.live/docs/video-on-demand/storage-api-reference/auth"&gt;Compatibility&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We are compatible with 98% of devices, including Android, iOS, and more. All we aim is to provide maximum engagement to your application&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;(4) &lt;a href="https://docs.videosdk.live/docs/video-on-demand/storage-api-reference/create-new-url"&gt;Customizable APIs and SDKs&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Videosdk.live develop APIs and SDKs designed on the demand of its clients in any manner they wish&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;(5) &lt;a href="https://docs.videosdk.live/docs/video-on-demand/storage-api-reference/upload-file"&gt;Video on demand facility&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;With the facility of live streaming, videosdk.live also allows a flexible VoD feature, where the clients can view the content at their ease.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;(6) &lt;a href="https://docs.videosdk.live/docs/video-on-demand/storage-api-reference/list-all-files"&gt;Video playback&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We also offer a facility of video playback, where the viewers get an option to loop the video, play and pause, and make their video fasten or slow as for their comfort.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;(7) &lt;a href="https://docs.videosdk.live/docs/video-on-demand/encoding-api-reference/auth"&gt;Secured accessibility&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We ensure secured access to your platform for your customers to make a better engagement platform for you.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;(8) &lt;a href="https://docs.videosdk.live/docs/video-on-demand/encoding-api-reference/create-encoding-job"&gt;Adaptive Live Streaming&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Videosdk.live caters to scalable streaming based on the device, supportive quality, and  internet bandwidth&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;(9) &lt;a href="https://docs.videosdk.live/docs/video-on-demand/encoding-api-reference/list-all-encoding-jobs"&gt;Adaptive Video Streaming&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We also provide services for streaming videos, with effective scalability and VoD facility, supporting the majority of devices.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;(10) &lt;a href="https://docs.videosdk.live/docs/video-on-demand/encoding-api-reference/get-encoding-job-details"&gt;Encoding&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Videosdk.live helps in encoding videos and images, compressing them into digital format, saving them as fluid data making them compatible with all mobile devices.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;(11) &lt;a href="https://docs.videosdk.live/docs/live-streaming/api-reference/create-live-stream"&gt;Hosting&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We provide the facility of hosting videos, which are uploaded by the clients with us. We help in uploading the videos and hosting them to online platforms.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;(12) &lt;a href="https://docs.videosdk.live/docs/live-streaming/api-reference/get-live-stream"&gt;Content Delivery Network&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We provide a global CDN with global geo-replication and edge location delivery. Protected with DDos, we ensure faster delivery with enterprise-grade security.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;(13) &lt;a href="https://docs.videosdk.live/docs/live-streaming/api-reference/update-live-stream"&gt;Multi-platform Streaming&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Stream live on several social media platforms all at once. Enjoy going live, consuming less time. Build a strong branding strategy with us.&lt;/p&gt;

&lt;p&gt;Videosdk.live is an ideal platform for users to develop their streaming platforms flawless with no extra effort. We customize our APIs and SDKs according to client preferences to increase their app engagement. The CDNs we use for storing the digital content are exclusively secured enabling reliable and scalable streaming.Videosdk.live excels in its features.&lt;/p&gt;

&lt;p&gt;Apart from the above facilities, we also deliver some additional features making ourselves a reliable platform to use. Connect with us and explore what you never explored before.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Reach us and get enriched with more such value content and an everlasting business corporate relation.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#find-our-documentation-here"&gt;
  &lt;/a&gt;
  Find our documentation here
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#video-on-demand"&gt;
  &lt;/a&gt;
  Video On Demand
&lt;/h3&gt;

&lt;p&gt;Introduction | videosdk.live Documentation&lt;/p&gt;

&lt;p&gt;Video-on-demand API provides end-to-end solution for building scalable on demand video platform for millions of the users.&lt;br&gt;
(&lt;a href="https://docs.videosdk.live/docs/video-on-demand/intro"&gt;https://docs.videosdk.live/docs/video-on-demand/intro&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#live-streaming"&gt;
  &lt;/a&gt;
  Live Streaming
&lt;/h3&gt;

&lt;p&gt;Introduction | videosdk.live Documentation&lt;/p&gt;

&lt;p&gt;Live streming lets you stream your live videos with just few lines of code. Reach to your audience across the globe.&lt;/p&gt;

&lt;p&gt;(&lt;a href="https://docs.videosdk.live/docs/live-streaming/intro"&gt;https://docs.videosdk.live/docs/live-streaming/intro&lt;/a&gt;)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#reach-out-to-us-we-are-the-happiest-to-serve-you"&gt;
  &lt;/a&gt;
  Reach out to us, we are the happiest to serve you
&lt;/h3&gt;

&lt;p&gt;Contact Us | videosdk.live&lt;/p&gt;

&lt;p&gt;Contact us for low latency live streaming, video on demand APIs&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JSS-eCPI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.videosdk.live/videosdklive-thumbnail.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JSS-eCPI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.videosdk.live/videosdklive-thumbnail.jpg" alt="What is Video on Demand?"&gt;&lt;/a&gt;&lt;br&gt;
(&lt;a href="https://videosdk.live/contact"&gt;https://videosdk.live/contact&lt;/a&gt;)&lt;/p&gt;

</description>
      <category>videoondemand</category>
      <category>vod</category>
      <category>livestreaming</category>
      <category>livestream</category>
    </item>
  </channel>
</rss>
