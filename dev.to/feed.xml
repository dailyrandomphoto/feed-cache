<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Ultimate cloud pricing comparison: AWS vs. Azure vs. Google Cloud in 2021</title>
      <author>CAST AI</author>
      <pubDate>Thu, 26 Aug 2021 13:23:11 +0000</pubDate>
      <link>https://dev.to/castai/ultimate-cloud-pricing-comparison-aws-vs-azure-vs-google-cloud-in-2021-khj</link>
      <guid>https://dev.to/castai/ultimate-cloud-pricing-comparison-aws-vs-azure-vs-google-cloud-in-2021-khj</guid>
      <description>&lt;p&gt;How can you tell which cloud provider is the right one for your business?&lt;strong&gt; And which one isn’t going to break your wallet?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;On the surface, AWS, Microsoft Azure, and Google Cloud are pretty similar. They all offer flexible compute, storage, and networking combined with everything engineers love about the cloud: self-service, instant provisioning, and autoscaling. &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;But cloud providers differ in key areas that have a massive impact on your cloud bill.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Most of your bill consists of &lt;strong&gt;compute resources that represent even 75%-80% of a company’s cloud spen&lt;/strong&gt;d. That’s why I will focus on comparing the pricing of Instances and Virtual Machines across AWS, Azure, and Google Cloud to show you the nuanced differences between these providers.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Read this guide to learn which provider offers the most cost-effective services in 2021:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="#topstrengthsofawsazureandgooglecloud"&gt;Top strengths of AWS, Azure, and Google Cloud&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#billinginawsazureandgooglecloud"&gt;Billing in AWS vs. Azure vs. Google Cloud&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#biggestcloudcostdriver"&gt;Let’s take a look at the biggest cost driver: compute&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#comparingondemandpricing"&gt;Comparing On-Demand pricing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#comparingpricingwithupfrontcommitment"&gt;Comparing discounted pricing with 1-year upfront commitment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#howcpuburstingdrivescostsdown"&gt;How CPU bursting can help drive your costs down&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#comparingspotinstances"&gt;Comparing Spot Instances/Preemptible VMs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#optimizingcloudcosts"&gt;Optimizing cloud costs is a point in time exercise&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#whyyouneedautomation"&gt;&lt;strong&gt;That’s exactly the reason why you need automation to optimize cloud costs&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id="topstrengthsofawsazureandgooglecloud"&gt;Cloud landscape overview: Top strengths of AWS, Azure, and Google Cloud&lt;/h2&gt;

&lt;p&gt;Selecting one vendor over another comes down to knowing what your teams, applications, and workloads need. You need to have a full understanding of your requirements before setting out to explore the cloud landscape.&lt;/p&gt;

&lt;p&gt;Next, it’s time to examine each provider separately. The thing is, AWS, Azure, and Google Cloud come with different strengths and weaknesses.&lt;/p&gt;

&lt;h3&gt;AWS is the leader for a good reason&lt;/h3&gt;

&lt;p&gt;Let’s start with AWS that currently holds the largest chunk of the cloud market. Its undeniable strength is &lt;strong&gt;the sheer breadth and depth of its services&lt;/strong&gt;. You can choose from &lt;a href="https://cast.ai/blog/400-ec2-instance-types-the-good-the-bad-and-the-ugly/" rel="noreferrer noopener"&gt;almost 400 instance types&lt;/a&gt; and pair them with a rich array of tools for databases, analytics, management, IoT, security, and enterprise applications. This list could go on almost forever.&lt;/p&gt;

&lt;p&gt;AWS is the winner when it comes to developer functionality thanks to the breadth of its services and ability to translate this scale into cost benefits. Still, this &lt;strong&gt;complexity comes at a cost&lt;/strong&gt;. One of the common pricing challenges companies face is understating AWS metrics and estimating the impact of architectural decisions on costs.&lt;/p&gt;

&lt;h3&gt;Azure is the go-to choice for enterprises&lt;/h3&gt;

&lt;p&gt;Microsoft Azure is quite a &lt;strong&gt;popular choice with C-level executives&lt;/strong&gt;. That’s usually because they have a long-standing relationship with the provider and meeting all their enterprise computing needs in one place makes sense. &lt;/p&gt;

&lt;p&gt;The combination of Azure, Office 365, and Teams makes a safe option for enterprises looking to benefit from enterprise software all the way down to cloud computing resources with a single handshake.&lt;/p&gt;

&lt;h3&gt;Google Cloud taps into the power of open source&lt;/h3&gt;

&lt;p&gt;All three major cloud vendors are strong in machine learning capabilities. But Google stands out among them thanks to its endless well of internal research and expertise - basically, the magic powering the search engine giant throughout the years.&lt;/p&gt;

&lt;p&gt;What makes Google different is its role in &lt;strong&gt;developing various open source technologies&lt;/strong&gt;. I’m talking especially about containers and Google’s central role in building Kubernetes for orchestration and the Istio service mesh, today practically industry-standard technologies.&lt;/p&gt;

&lt;p&gt;Google’s culture of innovation lends itself really to startups and companies that prioritize these approaches and technologies. &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Naturally, companies often end up using different cloud providers for different parts of their operations or use cases. This &lt;a href="https://cast.ai/blog/how-to-spin-a-multi-cloud-application-with-cast-ai/"&gt;multi cloud approach&lt;/a&gt; lets them bring the best of all the (cloud) worlds together under one roof. &lt;/p&gt;&lt;/blockquote&gt;

&lt;h2 id="billinginawsazureandgooglecloud"&gt;Billing in AWS vs. Azure vs. Google Cloud&lt;/h2&gt;

&lt;p&gt;Per second billing is now something all the three cloud vendors offer. AWS introduced it in 2017 for EC2 Linux-based instances and EBS volumes at first - but today, it applies to many other services. Note that in AWS, per-second billing works with the minimum 60-second limit. &lt;/p&gt;

&lt;p&gt;Azure allows per-second charges as well, but this billing model isn’t available for all instances - mostly container-based instances. &lt;/p&gt;

&lt;p&gt;Google Cloud followed AWS in the introduction of per-second billing and now offers it for more than just instances based on Linux. In Google, this form of billing applies to all VM-based instances.&lt;/p&gt;

&lt;h2 id="biggestcloudcostdriver"&gt;Let’s take a look at the biggest cost driver: compute &lt;/h2&gt;

&lt;p&gt;Compute is what makes your cloud bill so high. This isn’t to say that other services don’t contribute to it at all. Storage can get quite expensive and moving data around might result in high egress costs. &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;But it’s compute that comes with the biggest price tag - and greatest opportunity for cost optimization.&lt;/strong&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Here’s a case study that shows the &lt;strong&gt;incredible impact optimizing compute costs can have on a company’s bottom line&lt;/strong&gt;.&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;How Netflix slashed its cloud costs by picking different machines&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;To deliver its video streaming services across 190 countries, &lt;strong&gt;Netflix&lt;/strong&gt; uses Amazon EC2 instances and Kinesis data streams. Recently, Netflix turned to the Graviton2-based EC2 instances. Switching to these brand-new machines helped Netflix improve performance by 50% and cut costs. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Before, the company used m4.16xlarge instances that cost $3.2/hour. Now, Netflix uses m6g.16xlarge that costs $2.464/hour, and m6g.xlarge priced at only $0.0154/hour. &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can only imagine the cost savings Netflix enjoyed on its cloud billing. This example clearly shows how a minor difference in instance pricing can save you thousands of dollars. &lt;/p&gt;

&lt;h2&gt;Comparing cloud pricing - our example setup&lt;/h2&gt;

&lt;p&gt;To understand the pricing differences better, we’re going to compare instances and VMs within one region and across the same operating system.&lt;/p&gt;

&lt;p&gt;This is our example setup:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Region: US West - Los Angeles (US West in Azure, US West 2 in Google Cloud)&lt;/li&gt;
&lt;li&gt;Operating System: Linux &lt;/li&gt;
&lt;li&gt;vCPUs: 4&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Types of instances/VMs we will analyze:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;General purpose&lt;/li&gt;
&lt;li&gt;Compute optimized&lt;/li&gt;
&lt;li&gt;Memory optimized&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For our comparison, we chose instances with similar RAM and 4 vCPUs. The obvious exception is Google Cloud’s memory-optimized instance that starts at 40 vCPUs.&lt;/p&gt;

&lt;p&gt;Here are the instances/VMs we selected for our cloud pricing comparison:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XPvM5erY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ar9d32f7rr6p5u7gdrpm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XPvM5erY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ar9d32f7rr6p5u7gdrpm.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id="comparingondemandpricing"&gt;AWS vs. Azure vs. Google Cloud: Comparing On-Demand pricing &lt;/h2&gt;

&lt;p&gt;Here is the hourly On-Demand pricing of each of those instance-type scenarios across AWS, Azure, and Google Cloud.&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;Cloud pricing based on On-Demand rates&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OlDP3qk1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7mlpemeb3c52yiknc2nm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OlDP3qk1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7mlpemeb3c52yiknc2nm.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: In the above table, red marks the highest price and green the lowest price for a given instance type. &lt;/em&gt;&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;Takeaways:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;As you can see, AWS and Azure offer quite a similar pricing for all these three instance types. &lt;/li&gt;
&lt;li&gt;For compute optimized instances, Google Cloud has the highest pricing due to its scalable processors and all-core performance. &lt;/li&gt;
&lt;li&gt;The cost of Google Cloud for memory optimized instances is way higher because it doesn’t run on 4 vCPUs, but 40vCPUs.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;A note about chips and processors &lt;/h3&gt;

&lt;p&gt;Providers roll out instances on different computers and the chips in them have different performance characteristics. So, you might end up with an instance type that has strong performance your teams don’t actually need, and you’ll have no idea about this.&lt;/p&gt;

&lt;p&gt;Reasoning about this on your own is challenging and the best way to see what you’re really paying for is via benchmarking. The idea here is to drop the same workload on each machine and check its performance characteristics. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;You might discover something interesting, just like we did:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This chart shows CPU operation in AWS (t2.2xlarge with 8 virtual cores) at different times after several idle CPU periods. Would you expect such unpredictable CPU behavior within a single cloud provider?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--A8CYrm5w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cast.ai/wp-content/uploads/2021/02/graph-3-1024x443.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--A8CYrm5w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cast.ai/wp-content/uploads/2021/02/graph-3-1024x443.png" alt="AWS CPU behavior"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Source: CAST AI&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The &lt;a href="https://resources.cockroachlabs.com/guides/2021-cloud-report"&gt;2021 Cloud Report from CockroachLabs&lt;/a&gt; used the same method to evaluate 54 machines across AWS, Azure, and Google Cloud. They ran over 1000 microbenchmark tests to evaluate metrics like CPU, network, storage, and TPC-C performance.  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;One of their overall conclusions was that Google beats AWS and Azure on performance. I&lt;/strong&gt;t achieved the best single-core CPU performance and offered the greatest throughput at every level. Google’s machines with general purpose disks achieved the highest level of raw throughput but turned out to be the least cost-efficient option.&lt;/p&gt;

&lt;h2 id="comparingpricingwithupfrontcommitment"&gt;AWS vs. Azure vs. Google Cloud: Comparing discounted pricing with 1-year upfront commitment&lt;/h2&gt;

&lt;p&gt;All three providers offer discounts if you commit to using them for at least 1 year. The pricing model is called Reserved Instances/Savings Plans in AWS, Reserved Savings in Azure, and Commitment Price in Google Cloud. &lt;/p&gt;

&lt;p&gt;These discounts incentivize businesses to commit to a specific level of usage for a fixed period in exchange for a discounted rate on some (not all) instances and VMs. &lt;/p&gt;

&lt;p&gt;To compare the discounted pricing among AWS, Azure, and Google Cloud, we examined a one-year commitment period without upfront cost -&lt;strong&gt; but this time, in another region: US East - Northern Virginia.   &lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;Cloud pricing with 1-year commitment&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fUsY6aTT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5120uiz4b6dpvzfanc9m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fUsY6aTT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5120uiz4b6dpvzfanc9m.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Takeaways: &lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The general-purpose instances with a 1-year commitment are almost similar in AWS and Azure.&lt;/li&gt;
&lt;li&gt;AWS wins in the compute optimized category, even if Azure and Google apply some pretty big discounts.&lt;/li&gt;
&lt;li&gt;Azure offers the cheapest alternative among memory optimized instances.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;&lt;p&gt;Not sure how Reserved Instances work and whether they really translate into discounts? Read this: &lt;a href="https://cast.ai/blog/do-aws-reserved-instances-and-savings-plans-really-reduce-costs/"&gt;Do AWS Reserved Instances and Savings Plans really reduce costs?&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;h2 id="howcpuburstingdrivescostsdown"&gt;How CPU bursting can help drive your costs down&lt;/h2&gt;

&lt;p&gt;AWS, Azure, and Google Cloud all offer burstable performance instances. These instances provide you a baseline level of CPU performance, with the opportunity to burst to a higher level whenever your workload requires that.&lt;/p&gt;

&lt;p&gt;Burstable performance instances are &lt;strong&gt;a good pick for low-latency interactive applications, microservices, small and medium databases, or product prototypes&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;But to make the most of them, you need to keep a close eye on the credits you collect that enable bursting. For example, if you restart a T2 instance in AWS, you’re going to lose all the credits. Restarting a T3 or T4 instance means keeping credits for another 7 days and then losing them. &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;Our research into AWS burstable instances showed that if you load your instance for 4 hours or more per day on average, you’re actually better off with a non-burstable one. But if you run an e-commerce business that gets a large stream of visitors once in a while, it’s a good match.&lt;/strong&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;h2 id="comparingspotinstances"&gt;AWS vs. Azure vs. Google Cloud: Comparing Spot Instances/Preemptible VMs&lt;/h2&gt;

&lt;p&gt;Here’s another way to reduce your cloud bill - take advantage of capacity that’s currently not being used by any businesses. Cloud providers sell this excess capacity at incredibly high discounts - while AWS Spot Instances offer up to 90% off the On-Demand rates, Preemptible VMs in Google can be even 80% cheaper than regular VMs.&lt;/p&gt;

&lt;p&gt;Here’s a quick overview of the potential savings you can get for these instances in the US East - Northern Virginia region:&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;Cloud pricing with Spot Instances/Preemptible VMs&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6757StOz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vohhztvglaulf1h6z4ed.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6757StOz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vohhztvglaulf1h6z4ed.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see, all providers offer substantial discounts on these instances. &lt;/p&gt;

&lt;p&gt;But to take advantage of these savings, &lt;strong&gt;you need to make sure that your applications can handle interruptions&lt;/strong&gt;. How? Here’s a step by step guide: &lt;a href="https://cast.ai/blog/how-to-reduce-cloud-costs-by-90-spot-instances-and-how-to-use-them/"&gt;Spot Instances: How to reduce AWS, Azure, and GCP costs by 90%&lt;/a&gt;&lt;/p&gt;

&lt;h2 id="optimizingcloudcosts"&gt;Optimizing cloud costs is a point in time exercise&lt;/h2&gt;

&lt;p&gt;By now, you’ve learned the basics of calculating compute charges. But Spot instance prices don’t always stay the same. In fact, they might change from one second to the next.&lt;/p&gt;

&lt;p&gt;Take a look at this example:&lt;/p&gt;

&lt;p&gt;At CAST AI, we were running an application on a mix of AWS On-Demand instances and Spot Instances. Then we used our own platform to analyze our setup. The platform looked for the most cost-effective Spot Instance alternatives for a machine with 8 CPUs and 16 GB.&lt;/p&gt;

&lt;p&gt;CAST AI suggested that we run our workload on an instance called INF1. But wait, &lt;strong&gt;why would we need a powerful GPU instance meant for machine learning applications?&lt;/strong&gt; It’s a supercomputer that usually costs a lot of money.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--88TB_x2X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xc54dvwdriuu3p6s3ao2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--88TB_x2X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xc54dvwdriuu3p6s3ao2.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;So, why did CAST AI pick it? We checked the pricing. As it turns out, at that time INF1 just happened to be cheaper than the usual general purpose instances we used. &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We would have never guessed to look for Spot Instances in this category. As a result, we’d miss out on this incredible gem.&lt;/p&gt;

&lt;h2 id="whyyouneedautomation"&gt;That’s exactly the reason why you need automation to optimize cloud costs&lt;/h2&gt;

&lt;p&gt;Even if you have DevOps or FinOps specialists managing your cloud expenses, &lt;strong&gt;you're probably spending twice as much as you should&lt;/strong&gt;. It's high time you took control of your cloud bill with the help of automation and AI.&lt;/p&gt;

&lt;p&gt;CAST AI is a great place to start your path towards automated optimization if your teams work with Kubernetes. The solution automatically creates and implements cost-cutting tactics for guaranteed savings without any manual and repetitive work for your engineers.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://cast.ai/get-a-demo"&gt;Schedule a demo&lt;/a&gt; to learn how automation can reduce your cloud bill to the minimum regardless of the cloud provider you are working with.&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>aws</category>
      <category>googlecloud</category>
      <category>azure</category>
      <category>kubernetes</category>
    </item>
    <item>
      <title>What would the ideal web framework look like?</title>
      <author>Siddharth</author>
      <pubDate>Thu, 26 Aug 2021 13:22:53 +0000</pubDate>
      <link>https://dev.to/siddharthshyniben/what-would-the-ideal-web-framework-look-like-p5m</link>
      <guid>https://dev.to/siddharthshyniben/what-would-the-ideal-web-framework-look-like-p5m</guid>
      <description>&lt;p&gt;It seems like every week there is another ground-breaking new web framework. Some of them are interpreted, some compiled. Some of them are based on HTML tags, some component driven, and so on. &lt;/p&gt;

&lt;p&gt;So, what would the "ideal" framework look like, maybe using ideas of existing frameworks? Of course, no framework is perfect for use everywhere, but what would come close?&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Next.js!</title>
      <author>Babilah</author>
      <pubDate>Thu, 26 Aug 2021 12:58:09 +0000</pubDate>
      <link>https://dev.to/blessing/next-js-3pa3</link>
      <guid>https://dev.to/blessing/next-js-3pa3</guid>
      <description>&lt;p&gt;Hey Folks! I hope you are doing great.&lt;/p&gt;

&lt;p&gt;In this post we will be learning next.js and why you should use it for your next project. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-nextjs"&gt;
  &lt;/a&gt;
  What is next.js?
&lt;/h3&gt;

&lt;p&gt;The react framework for production. &lt;a href="https://nextjs.org/"&gt;Next.js org&lt;/a&gt;&lt;br&gt;
Next.js is a framework built on the react library. It helps you create server side rendering and static applications which improves user experience and SEO.  &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-nextjs"&gt;
  &lt;/a&gt;
  Why Next.js?
&lt;/h3&gt;

&lt;p&gt;Next.js simplifies the process of building a react application. I'll give you 10 reasons why Next.Js should be used for your next project.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Image optimization&lt;/strong&gt; &lt;br&gt;
Next.js has its own image component which helps in resizing, optimizing and scaling images. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Fast Refresh&lt;/strong&gt; &lt;br&gt;
Any change or edit you make in your react component is instantly reflected in your browser.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Zero Config&lt;/strong&gt; &lt;br&gt;
No or little configuration is needed when creating or building your app. Automatic compilation and building.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Authentication&lt;/strong&gt; &lt;br&gt;
It supports various authentication patterns each designed for different use cases.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Routing&lt;/strong&gt;&lt;br&gt;
Next.js has a file base routing system. In a typical react app you will need to install a third party library to help with routing in your app but with next.js it is made available for you with no config needed.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;API Routes&lt;/strong&gt;*&lt;br&gt;
You can create API endpoints inside your next.js application. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;CSS Support&lt;/strong&gt; &lt;br&gt;
Next.js by default is styled using CSS modules which saves you the time of choosing a CSS library. You are allowed to use any CSS framework like tailwind CSS or CSS in JS library like styled components. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Server Side Rendering(SSR) and Static Site Generation(SSG)&lt;/strong&gt;&lt;br&gt;
Pre-renders your pages at build time(SSG) or when the page is requested(SSR).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Code Splitting&lt;/strong&gt;&lt;br&gt;
Next.js automatically breaks your code to speed up page loading. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;TypeScript Support&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#websites-that-use-nextjs"&gt;
  &lt;/a&gt;
  Websites that use Next.js
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt; &lt;a href="https://coinmarketcap.com/"&gt;coinmarketcap&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://www.binance.com/"&gt;Binance&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://zapier.com/"&gt;Zapier&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="//tiktok.com"&gt;TikTok&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="//dcc.godaddy.com"&gt;GoDaddy&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;All the features above makes next.js an amazing framework to work with. It provides you with the best developer experience.&lt;br&gt;
If you know other features of next.js or websites that use next.js then let me know about them in the comments.&lt;br&gt;
Thanks!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>nextjs</category>
    </item>
    <item>
      <title>XSS exploits explained</title>
      <author>Hargunbeer Singh</author>
      <pubDate>Thu, 26 Aug 2021 12:55:18 +0000</pubDate>
      <link>https://dev.to/hamiecod/xss-exploits-explained-10oc</link>
      <guid>https://dev.to/hamiecod/xss-exploits-explained-10oc</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;XSS stands for &lt;strong&gt;C&lt;/strong&gt;ross-&lt;strong&gt;S&lt;/strong&gt;ite &lt;strong&gt;S&lt;/strong&gt;cripting. The web works using HTML which uses angular brackets which act as an instruction to the web browser, for example by specifying text in the &lt;code&gt;&amp;lt;b&amp;gt;&lt;/code&gt; tag, you are instructing the browser to display some bold text. If you want to write an angle bracket as text and not as an instruction, you do something which is called &lt;strong&gt;escaping&lt;/strong&gt;, it is using some specific codes in the text so that the browser renders the specific codes to something else, like the browser would render &lt;code&gt;&amp;lt;&lt;/code&gt; as &lt;code&gt;&amp;amp;lt;&lt;/code&gt; and it would render &lt;code&gt;&amp;gt;&lt;/code&gt; as &lt;code&gt;&amp;amp;gt;&lt;/code&gt;. Web apps usually take inputs from the user and store it in their database, and then render the data when required. So when a hacker, sends html as data to the database via the web app, the html is stored in the db, and when the same data is rendered as html, they affect the page and get inserted as HTML into the specific web page. This is what is called cross-site scripting. This was harmful to the users of the web app as suppose you set &lt;code&gt;&amp;lt;/html&amp;gt;&lt;/code&gt; as your bio, when a user visits your profile and see your bio, the html tag would end for them, thus not rendering the remaining web page. This was a deadly attack for the websites.&lt;br&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;Then JavaScript comes along, and XSS attacks get even more deadlier for the websites, you can insert JavaScript in a website just by including a &lt;code&gt;&amp;lt;script&amp;gt;&amp;lt;/script&amp;gt;&lt;/code&gt; tag in the HTML and specifying the JavaScript inside the script tag. This is really dangerous as when it is executed on the victim's device, it may steal sensitive information. Suppose you write a script tag along with JavaScript which steals the cookies of the victim as your profile bio on a website that does not filter the tags, so whenever some user would visit your profile the script would get executed and the victim's cookies would be stolen.&lt;br&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;HTML tags are not the only possibility for exploiting a website using XSS. There other vulnerabilities as well. Anything that acts on a user input, can be used to exploit the website, e.g.: functions. Attributes like &lt;code&gt;onerror&lt;/code&gt; could also be used to exploit a website using XSS.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#preventive-measures"&gt;
  &lt;/a&gt;
  Preventive Measures
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Websites must use XSS filtering on their websites, so that the HTML tags are filtered out.&lt;/li&gt;
&lt;li&gt;Websites must escape the Html tag angle brackets while storing some user input in the database&lt;/li&gt;
&lt;li&gt;Websites must test their user interface, so that they leave no XSS vulnerability.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;
XSS vulnerabilities can be endless, therefore websites organize bug bounty programs to find these vulnerabilities.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#links"&gt;
  &lt;/a&gt;
  Links
&lt;/h2&gt;

&lt;p&gt;You can use the following websites to find out how XSS exploits work:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://xss-game.appspot.com/"&gt;Google XSS Game&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://alf.nu/alert1"&gt;alert(1) to win game&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://polyglot.innerht.ml/"&gt;XSS Polygot Challenge&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>webdev</category>
      <category>devops</category>
      <category>security</category>
    </item>
    <item>
      <title>Javascript deep dive: Code compilation and scope (part 1)</title>
      <author>Kelvin</author>
      <pubDate>Thu, 26 Aug 2021 12:49:51 +0000</pubDate>
      <link>https://dev.to/kelvin0712/javascript-deep-dive-code-compilation-and-scope-part-1-19cl</link>
      <guid>https://dev.to/kelvin0712/javascript-deep-dive-code-compilation-and-scope-part-1-19cl</guid>
      <description>&lt;p&gt;Are you always wondering how JS can understand our code, how scopes can be created? &lt;/p&gt;

&lt;p&gt;You'll need to have a better mental model about how JavaScript engine handles our code in general.  In this article, we are going through how JS scopes are created under the hood, step by step like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Compilation&lt;/li&gt;
&lt;li&gt;Parsing/Compilation phase&lt;/li&gt;
&lt;li&gt;Prove of code compilation&lt;/li&gt;
&lt;li&gt;Briefly about lexical scope&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#compiled-and-interpreted"&gt;
  &lt;/a&gt;
  Compiled and Interpreted
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Compilation&lt;/strong&gt; is a set of steps that process the text of your code and turn it into a list of instructions that computer can understand. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--s-WubBqV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yvq358r5y603eiym99kf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s-WubBqV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yvq358r5y603eiym99kf.png" alt="image"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Interpretation&lt;/strong&gt; is similar to compilation but instead of processing the whole source code, it will be transformed line by line. Each line is executed before proceeding to process the next line.  &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YENNdctX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ejgvdbs3tz3ir02myit6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YENNdctX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ejgvdbs3tz3ir02myit6.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Note: Modern JS engines actually use numerous variations of both compilation and interpretation in handling of JS programs. &lt;/p&gt;

&lt;p&gt;We will only go through compilation as JS is portrayed as a &lt;strong&gt;compiled language.&lt;/strong&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#compiling-code"&gt;
  &lt;/a&gt;
  Compiling code
&lt;/h2&gt;

&lt;p&gt;JavaScript code is processed in &lt;strong&gt;2 phases&lt;/strong&gt;: &lt;strong&gt;Parsing/Compilation&lt;/strong&gt; and &lt;strong&gt;Execution&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Parsing/Compilation&lt;/strong&gt; phase will be our main concern in this article. &lt;/p&gt;

&lt;p&gt;Parsing/Compilation happens in 3 basic stages: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Tokenizing/Lexing&lt;/strong&gt;: consider &lt;code&gt;var a = 2;&lt;/code&gt; the program will likely to break this up into tokens: &lt;code&gt;var&lt;/code&gt;  &lt;code&gt;a&lt;/code&gt;  &lt;code&gt;=&lt;/code&gt;  &lt;code&gt;2&lt;/code&gt; &lt;code&gt;;&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Parsing&lt;/strong&gt;: take a stream of tokens and turn it into Abstract Syntax Tree (AST)
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;VariableDeclaration&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;      var
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Identifier&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;             a
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;AssignmentExpression&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; =
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;NumericLiteral&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;     2
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Code generation&lt;/strong&gt;: take the AST and turn it into a set of instructions to actually create a variable called a and assign a value to it&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Note: JS compilation only happens milliseconds right before the code is executed. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prove-2-phases"&gt;
  &lt;/a&gt;
  Prove: 2 phases
&lt;/h2&gt;

&lt;p&gt;There are 3 program characteristics that you can observe to prove that processing JS programs happens in at least 2 phases: parsing/compilation ⇒ execution&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Syntax errors&lt;/li&gt;
&lt;li&gt;Early errors&lt;/li&gt;
&lt;li&gt;Hoisting&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#syntax-errors"&gt;
  &lt;/a&gt;
  Syntax errors
&lt;/h3&gt;

&lt;p&gt;Consider:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;foo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hi&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="c1"&gt;// Throw a syntax error here&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you run this code, you can observe that the program will throw the error first instead of logging 'Hi' to the console. &lt;/p&gt;

&lt;p&gt;This example shows that JS engine know about the syntax error on the third line before executing first and second line, by &lt;strong&gt;parsing the entire program before executing it&lt;/strong&gt;. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#early-errors"&gt;
  &lt;/a&gt;
  Early errors
&lt;/h3&gt;

&lt;p&gt;Consider:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hi&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;saySomething&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hi&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Uncaught Syntax error: Duplicate param name not allowed&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;saySomething&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;greeting&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;greeting&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;use strict&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;greeting&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Again here, how can JS engine throw the error in the second line without logging 'Hi' to the console first? The answer is the code &lt;strong&gt;must be fully parsed before any executions happen&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: duplicate param name is not allowed in strict mode, but it's allowed in non-strict mode. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#hoisting"&gt;
  &lt;/a&gt;
  Hoisting
&lt;/h3&gt;

&lt;p&gt;Consider:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;counting&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;number&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// error&lt;/span&gt;
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;counting&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
&lt;span class="c1"&gt;// ReferenceError: Cannot access 'greeting' before&lt;/span&gt;
&lt;span class="c1"&gt;// initialization&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Technically, the error is thrown because &lt;code&gt;number = 2&lt;/code&gt; is accessing variable &lt;code&gt;number&lt;/code&gt; before it's declared on the next line. &lt;/p&gt;

&lt;p&gt;But why it does not access the variable &lt;code&gt;var number&lt;/code&gt;  rather than accessing the &lt;code&gt;let number&lt;/code&gt; ? &lt;/p&gt;

&lt;p&gt;&lt;em&gt;The only way JS engine would know is that:&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;JS processes the code first ⇒ comes to the statement &lt;code&gt;let number = 1&lt;/code&gt; ⇒ declare the a blocked-scope ⇒ set up all the scopes and their variable associations.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Hopefully you're now convinced that JS programs are parsed before any execution begins and scope is determined as the program is compiled, and should not generally be affected by runtime conditions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lexical-scope"&gt;
  &lt;/a&gt;
  Lexical scope
&lt;/h2&gt;

&lt;p&gt;Lexical scope is controlled entirely by the placement of functions, blocks, variable declarations, in relation to one another. &lt;/p&gt;

&lt;p&gt;If you declare a variable with &lt;code&gt;var&lt;/code&gt; inside a function ⇒ the compiler handles this declaration as it's parsing the function ⇒ associates the variable with &lt;strong&gt;function's scope&lt;/strong&gt; (&lt;em&gt;the variable is accessible anywhere inside the function&lt;/em&gt;) .  &lt;/p&gt;

&lt;p&gt;If you declare a variable with &lt;code&gt;let&lt;/code&gt; or &lt;code&gt;const&lt;/code&gt; ⇒ compiler handles this declaration ⇒ associates the variable with &lt;strong&gt;block's scope (&lt;/strong&gt;&lt;em&gt;variable is accessible inside the nearest {...} rather than its enclosing function&lt;/em&gt;&lt;strong&gt;).&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;While scopes are identified during compilation, they're not actually created until runtime, each time a scope needs to run.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  TL;DR
&lt;/h2&gt;

&lt;p&gt;Compilation is a set of steps that process the text of your code and turn it into a list of instructions that computer can understand. &lt;/p&gt;

&lt;p&gt;JS code is processed in 2 phases: Parsing/Compilation and Execution &lt;/p&gt;

&lt;p&gt;The Parsing/Compilation phase only happens in mere microseconds (or less!) right before the code is executed&lt;/p&gt;

&lt;p&gt;Scopes are identified during compilation&lt;/p&gt;

&lt;p&gt;Lexical scope is controlled entirely by the placement of functions, blocks, variable declarations, in relation to one another. &lt;/p&gt;

&lt;p&gt;Thank you for reading my article!&lt;/p&gt;

&lt;p&gt;My website: &lt;a href="https://kelvinnguyen97.com/blog"&gt;https://kelvinnguyen97.com/blog&lt;/a&gt;&lt;br&gt;
My Github: &lt;a href="https://github.com/kelvin0712"&gt;https://github.com/kelvin0712&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>node</category>
    </item>
    <item>
      <title>The New Creator Economy - DAOs, Community Ownership, and Cryptoeconomics</title>
      <author>Nader Dabit</author>
      <pubDate>Thu, 26 Aug 2021 12:11:43 +0000</pubDate>
      <link>https://dev.to/dabit3/the-new-creator-economy-daos-community-ownership-and-cryptoeconomics-lnl</link>
      <guid>https://dev.to/dabit3/the-new-creator-economy-daos-community-ownership-and-cryptoeconomics-lnl</guid>
      <description>&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--w9XjGomt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1381647440856690692/zMNpX959_normal.png" alt="Tarique Sha profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Tarique Sha
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @kissingsky
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      &lt;a href="https://twitter.com/jackbutcher"&gt;@jackbutcher&lt;/a&gt; Cycle of Creator economy👇&lt;br&gt;Web1:&lt;br&gt;Companies create content.&lt;br&gt;Companies earn money.&lt;br&gt;Web2:&lt;br&gt;People create content.&lt;br&gt;Companies earn money.&lt;br&gt;Web3:&lt;br&gt;People create content.&lt;br&gt;People earn money.
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      14:50 PM - 19 Aug 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1428368687644364805" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1428368687644364805" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1428368687644364805" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;Since I first had what I can only describe as a spiritual awakening about 10 years ago to the fact that technology would (figuratively) rule the world, I've been obsessed with wanting to understand how software works and how to build it.&lt;/p&gt;

&lt;p&gt;Since that moment, my life has changed significantly for the better. I can only attribute it to the simple fact that I have relied not only on my own instincts, but of those of people much smarter and more experienced than me.&lt;/p&gt;

&lt;p&gt;My hypothesis is this - try to find and follow the lead of those who have exhibited a long track record of success, find interests in their wake, and do my best to excel at them (while continuing to explore my own curiosities).&lt;/p&gt;

&lt;p&gt;This approach has led me to try and master JavaScript, and then React, and finally to build a successful consultancy ultimately landing me on a team at AWS in a life changing experience that lasted a little over 3 years. All of this with &lt;a href="https://twitter.com/dabit3/status/1259471051429478400"&gt;no high school diploma or college degree&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;During this time (like many developers) I've relentlessly dived into books, podcasts, blog posts, YouTube videos, and source code of every kind, but there has always been a topic that has captured my curiosity the most - futurism.&lt;/p&gt;

&lt;p&gt;Futurists like &lt;a href="https://twitter.com/gleonhard"&gt;Gerd Leonhard&lt;/a&gt; and &lt;a href="https://twitter.com/michiokaku"&gt;Michio Kaku&lt;/a&gt; speak of a future, sometimes beautiful and sometimes bleak, but always with the passion and phrasing that make your thoughts wander and move past the current moment in time and into a mind boggling world that does not yet exist.&lt;/p&gt;

&lt;p&gt;I recently had another "aha" moment, similar to my technological awakening, that has completely changed the direction of my career and my life. In the spirit of these futurists, I want to talk about why &lt;a href="https://www.freecodecamp.org/news/what-is-web3/"&gt;Web3&lt;/a&gt; excites me just as much as their ideas, but is instead happening as we speak.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#web3"&gt;
  &lt;/a&gt;
  Web3
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;This post is meant to dive more into what I think are the benefits and repercussions of Web3. If you want to know my interpretation of what Web3 is, see my thoughts &lt;a href="https://www.freecodecamp.org/news/what-is-web3/"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Web3 represents a handful of ideas which together bring about entirely new mental models, organizational structures, and community incentives forcing us to rethink many things that we have become accustomed to.&lt;/p&gt;

&lt;p&gt;All of the recent innovation happening is being made possible because of decentralized protocols. The internet itself has thrived because of native internet protocols that we use everyday, like http, ftp, tcp, and ssh. One of the reasons these protocols have been so successful was that they were widely adopted and not subject to change. If I build a site using http, people can use it without any centralized intermediary - we can trust that it is going to work.&lt;/p&gt;

&lt;p&gt;There were two major pieces of native functionality that have been left out up until recently - payments and state.&lt;/p&gt;

&lt;p&gt;Blockchains have enabled both of these things, opening the door for programmable money and state without the need of a centralized server, bank, or any intermediary at all.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ownership"&gt;
  &lt;/a&gt;
  Ownership
&lt;/h3&gt;

&lt;p&gt;One of the driving forces and the one that resonates with most people (and me) is that Web3 enables ownership.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#gaming"&gt;
  &lt;/a&gt;
  Gaming
&lt;/h4&gt;

&lt;p&gt;At some point the internet and gaming became almost indistinguishable. Not only because most games continue to receive updates over time, but the most popular ones are often the most interactive ones.&lt;/p&gt;

&lt;p&gt;Fortnite took a lot of people by surprise because it created an innovative new combination of gameplay, peer-to-peer connection, and a unique business model - and everyone gets the game for free. The experience is very interactive, you can join old friends and make new ones, there are constant improvements and enhancements that just happen automatically - the game is consistently evolving. &lt;/p&gt;

&lt;p&gt;The monetization strategy was also innovative. Fortnite allows players to buy in-game currency as well as skins that they can wear in the game. If you have a child you know that the $65 you may have spent on the game itself is probably peanuts compared to the amount of money kids spend over the lifetime of their gameplay.&lt;/p&gt;

&lt;p&gt;The problem though is this: when the player decides to stop playing the game or outgrows it, where has all that money gone? More importantly, who is allowed as a creator to benefit from all of the purchasing power? The answer is, well, Fortnite (the platform).&lt;/p&gt;

&lt;p&gt;What if, instead, players retained ownership of their items and were able to keep or sell them. Their items would maintain, increase, or decrease in value like any physical asset. These types of experiences and communities are now being made possible via NFTs. NFTs enable scarcity in a world where there was in the past no scarcity.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://axieinfinity.com/"&gt;Axie Infinity&lt;/a&gt; is an example of how this looks in practice. It is a blockchain-based game that is the most successful of it's kind, and has recently had explosive growth, catapulting it to over &lt;a href="https://hypebeast.com/2021/8/axie-infinity-ethereum-first-nft-game-1-bilion-sales-info"&gt;$1 billion in sales&lt;/a&gt; with over $780 million in the 30 days ending August 10 2021.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://parallel.life/faq/"&gt;Parallel&lt;/a&gt; is an online card game that has done over $100 million in sales and is still extremely early. &lt;a href="https://zkga.me/"&gt;Dark Forest&lt;/a&gt; enables players to &lt;a href="https://twitter.com/BlaineBublitz/status/1399397415732400129"&gt;get paid to play the game&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;When players realize they can retain much of the value of their time and investments while still enjoying the benefit of the game, it not only changes the way they view gaming and where they spend their money, it aligns new incentives around the game itself. If the game succeeds, they can share in that success, therefore they become even more invested.&lt;/p&gt;

&lt;p&gt;The combination of ownership, community, and creators who have built audiences creates a whirlwind of new and exciting opportunities that we are just starting to begin see explored.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/Fwiz"&gt;Ryan Watt&lt;/a&gt;, the head of YouTube gaming agrees.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--BchNRyvV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1348665103936229380/EbPPKZIm_normal.jpg" alt="Ryan Wyatt profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Ryan Wyatt
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @fwiz
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      I'm bullish on NFT's.&lt;br&gt;&lt;br&gt;I believe play-to-earn is the next major gaming model, as well as an open market for in-game digital items; most in-game assets are illiquid, which is insane to me. All of this will change long-term through blockchain and NFT's. It's self-evident.
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      15:48 PM - 21 Aug 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1429108126234546182" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1429108126234546182" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1429108126234546182" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;h3&gt;
  &lt;a href="#social-media-and-art"&gt;
  &lt;/a&gt;
  Social media and art
&lt;/h3&gt;

&lt;p&gt;Social media platforms were revolutionary in that they allowed anyone from almost any background the ability to grow and foster large audiences using tools that were made free to anyone with a device and an internet connection. There are no gatekeepers to becoming famous on social media as there have been in the past in film and TV, the intermediary was abstracted away and peer to peer connections and content sharing was made possible.&lt;/p&gt;

&lt;p&gt;The flaw in these implementations is that they offer a terrible monetization system, not just for the platform but for the creator as well. Advertising and the exploitation of user data is the go to play. Also almost all of the money generated by the platform, goes to the platform - the platform monetizes the content being created by its users in exchange of use of the platform itself. This is how social media works today.&lt;/p&gt;

&lt;p&gt;In Web3, both creators and the community are able to gain and retain ownership within a platform, creating a synergy that, once experienced, makes the legacy interactions of the past seem archaic and undesirable. When I say ownership, I don't only mean ownership of content, but actual equity as well.&lt;/p&gt;

&lt;p&gt;We are seeing the beginnings of this in the art world of Web3. Artists who were, in the past, often barely making it are now able to leverage their platforms, often in collaboration with other community members or causes, creating projects that leverage NFT collections to give community members as well as the public a way to participate and distribute equity all around. Art and code are also beginning to overlap.&lt;/p&gt;

&lt;p&gt;Projects like &lt;a href="https://generativemasks.on.fleek.co/#/"&gt;Generative Masks&lt;/a&gt; allow talented creators like &lt;a href="https://twitter.com/takawo"&gt;Takawo Shunsuke&lt;/a&gt; to leverage the skills he's acquired throughout his career to generate over $3 million in sales for his collection in just a few minutes, spreading awareness for himself and his cause, and creating another new community (of owners) simultaneously. The best part is that he's giving it all back to the communities he's benefited from. On top of that, smart contracts allow him to programmatically enable a commission for any future sale that happens going forward, and in just a couple of weeks that amounts to another over $600,000.00. &lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
    &lt;div class="ltag__twitter-tweet__media ltag__twitter-tweet__media__two-pics"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Wy22-Xii--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/E9CXFPjXEAc9c6C.jpg" alt="unknown tweet media content"&gt;
    &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--dPf3yvts--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1428566196157390850/vo8yaHnl_normal.jpg" alt="nader | sha.eth profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        nader | sha.eth
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/dabit3"&gt;@dabit3&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Yesterday &lt;a href="https://twitter.com/takawo"&gt;@takawo&lt;/a&gt; released a generative art project using p5.js.&lt;br&gt;&lt;br&gt;The project generated over $3 million in sales in a few minutes using these 432 lines of JavaScript:&lt;br&gt;&lt;br&gt;&lt;a href="https://t.co/sRUMuQRuBd"&gt;ipfs.io/ipfs/QmXwfwQxr…&lt;/a&gt;&lt;br&gt;&lt;br&gt;The project is probably one of the most interesting and innovative I've seen (thread) 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      01:41 AM - 18 Aug 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1427807893458497544" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1427807893458497544" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1427807893458497544" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;Generative art itself is an emerging category that combines code and creativity and is something that could alone warrant an entire post, but it suits the coming era particularly well as it enables artists to scale their creativity, community, and distribution.&lt;/p&gt;

&lt;p&gt;There will continue to be a larger and larger percentage of digital artists because they can use powerful tools and programs to create art that can then be used in an infinite number of ways. They can then put it for sale on an international, 24 hour, liquid market.&lt;/p&gt;

&lt;p&gt;Open Sea, the top online art marketplace today, has seen an absolute explosion in growth the past few months.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FJw1psuK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/E9hBoNRXMAc00oH.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--uIVTGz0D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1364831160652726280/ZdmKJ-sy_normal.jpg" alt="Nate Chastain (natec.eth) profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Nate Chastain (natec.eth)
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @natechastain
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      August 2021 has become such a significant outlier that it represents more volume than all previous months in OpenSea history, combined. 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      00:34 AM - 24 Aug 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1429965382849343490" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1429965382849343490" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1429965382849343490" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;Even recently surpassing Etsy in sales.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--9qv1Tm4M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1372766487396589576/6V2SdFeQ_normal.jpg" alt="Alex Atallah (alexatallah.eth) profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Alex Atallah (alexatallah.eth)
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @xanderatallah
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      OpenSea has now passed Etsy in volume, with $1b so far in August&lt;br&gt;&lt;br&gt;NFTs are rapidly catching up to all of eBay
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      02:13 AM - 17 Aug 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1427453596858294272" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1427453596858294272" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1427453596858294272" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;Whether this type of volume continues, I have no idea. My guess is that there will be some volatility and fairly large swings both up and down. But there is definitely &lt;em&gt;something&lt;/em&gt; there.&lt;/p&gt;

&lt;p&gt;Most of these NFT projects are launched on Ethereum. Ethereum is soon merging &lt;a href="https://ethereum.org/en/eth2/"&gt;a new consensus mechanism&lt;/a&gt; that will make NFTs orders of magnitude more environmentally friendly as a means of sales and transfer of art, which in the past all required ground transportation.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#future-of-social-media"&gt;
  &lt;/a&gt;
  Future of social media
&lt;/h4&gt;

&lt;p&gt;As it stands today, users of social media platforms can begin leveraging Web3 tools, communities, and platforms to begin monetizing their audience. I believe there will be a breakthrough app that will disrupt social media as we know it built in the in the next 1 - 3 years that blends all of these ideas together in a way that we haven't experienced yet.&lt;/p&gt;

&lt;p&gt;Many people have echoed a similar sentiment. &lt;a href="https://twitter.com/AaveAave"&gt;Aave&lt;/a&gt;, a very successful DeFi protocol built on Ethereum, has already begun work on &lt;a href="https://decrypt.co/76278/defi-project-aave-to-release-ethereum-based-twitter-alternative-this-year"&gt;a decentralized version of Twitter&lt;/a&gt;:&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--fpDs3uXI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1424548857111744513/cGBAQlHl_normal.jpg" alt="stani.jpg (👻,🐻‍❄️) profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        stani.jpg (👻,🐻‍❄️)
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @stanikulechov
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Since &lt;a href="https://twitter.com/jack"&gt;@jack&lt;/a&gt; is going to build Aave on Bitcoin, Aave should build Twitter on Ethereum
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      13:14 PM - 17 Jul 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1416385933549654016" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1416385933549654016" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1416385933549654016" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;Jack Dorsey of Twitter is also working on a Decentralized version of Twitter, though I believe that this type of application will ultimately come from the community or a DAO.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--q4r0Xm-b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1421226968385658881/YmaW2AV2_normal.jpg" alt="Jay Graber profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Jay Graber
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @arcalinea
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      I’m excited to announce that I’ll be leading &lt;a href="https://twitter.com/bluesky"&gt;@bluesky&lt;/a&gt;, an initiative started by &lt;a href="https://twitter.com/Twitter"&gt;@Twitter&lt;/a&gt; to decentralize social media. Follow updates on Twitter and at &lt;a href="https://t.co/Sg4MxK1zwl"&gt;blueskyweb.org&lt;/a&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      17:01 PM - 16 Aug 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1427314482154414080" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1427314482154414080" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1427314482154414080" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;h3&gt;
  &lt;a href="#daos-grants-community-ownership-and-social-tokens"&gt;
  &lt;/a&gt;
  DAOs, grants, community ownership, and social tokens
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;DAO stands for Decentralized Autonomous Organization. You can read about what a DAO is &lt;a href="https://www.notboring.co/p/the-dao-of-daos"&gt;here&lt;/a&gt;, &lt;a href="https://linda.mirror.xyz/Vh8K4leCGEO06_qSGx-vS5lvgUqhqkCz9ut81WwCP2o"&gt;here&lt;/a&gt;, and &lt;a href="https://decrypt.co/resources/decentralized-autonomous-organization-dao"&gt;here&lt;/a&gt;, but I want to focus on how DAOs will play a part in the new creator economy.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Shared ownership is a characteristic you'll see carried across all areas of Web3, including how we think about companies and incentive structures around how business is done.&lt;/p&gt;

&lt;p&gt;In Web2 companies, cash usually comes from investors and there is no value returned to them for years. Ownership is largely concentrated in the first handful of employees along with their investors.&lt;/p&gt;

&lt;p&gt;It usually takes years to reach a point where investors or employees with equity can begin to see any return on their investment and time spent, often through the old ways of advertising and exploitation of user data.&lt;/p&gt;

&lt;p&gt;Web3 and blockchains bring about entirely new business models, made possible by &lt;a href="https://www.gemini.com/cryptopedia/what-is-tokenization-definition-crypto-token#section-security-tokens-utility-tokens-and-cryptocurrencies"&gt;tokenization&lt;/a&gt; and &lt;a href="https://thegraph.com/blog/modeling-cryptoeconomic-protocols-as-complex-systems-part-1"&gt;cryptoeconomic protocols&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;There are quite literally countless ways that these tokens are being utilized to create new ways of collaboration and building, ranging from DAOs to web infrastructure to &lt;a href="https://coopahtroopa.mirror.xyz/gWY6Kfebs9wHdfoZZswfiLTBVzfKiyFaIwNf2q8JpgI"&gt;micro-economies&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://twitter.com/prtyDAO"&gt;PartyDAO&lt;/a&gt; which &lt;a href="https://twitter.com/nnnnicholas/status/1423428739589943300"&gt;created over $200,000 in revenue in its first day&lt;/a&gt;, was "built in 3 months by a small group of internet friends working part-time", and is backed by a smart contract&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://compound.finance/"&gt;Compound&lt;/a&gt;, a decentralized finance protocol that allows you to lend and borrow cryptocurrency without trusting a third party with your funds with a market cap of over $2 billion as of this writing&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://docs.superrare.com/the-superrare-dao"&gt;Super Rare&lt;/a&gt; is a digital art platform that recently launched a token, &lt;a href="https://twitter.com/DCLBlogger/status/1427860274808197124"&gt;airdropping as much as $140,000 to it's earliest users&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://gitcoin.co/"&gt;Gitcoin&lt;/a&gt; is a platform that enables developers to get paid for working on open source projects&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://thegraph.com/"&gt;Graph Protocol&lt;/a&gt; is a decentralized web infrastructure protocol that allows developers to build APIs to enable the performant querying of blockchain data, all enabled by it's native utility token&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://twitter.com/seedclubhq"&gt;Seed Club&lt;/a&gt; is a social token incubator that’s focused on helping creators launch and grow social tokens&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://twitter.com/fwbtweets"&gt;Friends with Benefits&lt;/a&gt; is a social DAO and community that I'm part of that is 100% owned and governed by the participants&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://twitter.com/pleasrdao"&gt;PleasrDAO&lt;/a&gt; allows investors to come together to purchase high-value non-fungible tokens like &lt;a href="https://foundation.app/@Snowden/stay-free-edward-snowden-2021-24437"&gt;this piece&lt;/a&gt; from Edward Snowden &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Most DAOs have &lt;a href="https://thegraph.com/blog/wave-one-funding"&gt;desirable grants programs&lt;/a&gt;, enabling developers and other participants to work with various teams and projects at their will, on things they find interesting or that fit their skill set. There are more and more people beginning to work full time for grants and with DAOs vs traditional full time employment.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--dPf3yvts--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1428566196157390850/vo8yaHnl_normal.jpg" alt="nader | sha.eth profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        nader | sha.eth
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/dabit3"&gt;@dabit3&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      If you're a developer looking to make extra money without quitting your main job, you can make anywhere between a few thousand to ~$500,000 by participating in DAOs while learning and getting your foot in the door with web3 tech.&lt;br&gt;&lt;br&gt;Here are 21 projects with solid grant programs:
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      20:29 PM - 22 Jul 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1418307358946701319" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1418307358946701319" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1418307358946701319" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;If this sounds like something you're interested in being involved, I'd suggest to jump right in. Try P2E (play to earn), get involved with a DAO, or even mint your own NFT.&lt;/p&gt;

&lt;p&gt;Also check out &lt;a href="https://dev.to/dabit3/how-to-get-into-ethereum-crypto-web3-as-a-developer-9l6"&gt;How to Get Into Ethereum | Crypto | Web3 as a Developer&lt;/a&gt; which is what I put together after getting my own start in the space.&lt;/p&gt;

&lt;p&gt;If you want to learn more about these ideas, I encourage you to follow some of the people I mention in this post:&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--dPf3yvts--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1428566196157390850/vo8yaHnl_normal.jpg" alt="nader | sha.eth profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        nader | sha.eth
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/dabit3"&gt;@dabit3&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Some of the people and projects mentioned in this post:&lt;br&gt;&lt;a href="https://twitter.com/derFuturist"&gt;@derFuturist&lt;/a&gt;&lt;br&gt;&lt;a href="https://twitter.com/_kinjalbshah"&gt;@_kinjalbshah&lt;/a&gt;&lt;br&gt;&lt;a href="https://twitter.com/AaveAave"&gt;@AaveAave&lt;/a&gt;&lt;br&gt;&lt;a href="https://twitter.com/graphprotocol"&gt;@graphprotocol&lt;/a&gt;&lt;br&gt;&lt;a href="https://twitter.com/kissingsky"&gt;@kissingsky&lt;/a&gt;&lt;br&gt;&lt;a href="https://twitter.com/michiokaku"&gt;@michiokaku&lt;/a&gt;&lt;br&gt;&lt;a href="https://twitter.com/Cooopahtroopa"&gt;@Cooopahtroopa&lt;/a&gt;&lt;br&gt;&lt;a href="https://twitter.com/AxieInfinity"&gt;@AxieInfinity&lt;/a&gt;&lt;br&gt;&lt;a href="https://twitter.com/ParallelNFT"&gt;@ParallelNFT&lt;/a&gt;&lt;br&gt;&lt;a href="https://twitter.com/Fwiz"&gt;@Fwiz&lt;/a&gt;&lt;br&gt;&lt;a href="https://twitter.com/takawo"&gt;@takawo&lt;/a&gt;&lt;br&gt;&lt;a href="https://twitter.com/natechastain"&gt;@natechastain&lt;/a&gt;&lt;br&gt;&lt;a href="https://twitter.com/xanderatallah"&gt;@xanderatallah&lt;/a&gt;&lt;br&gt;&lt;a href="https://twitter.com/opensea"&gt;@opensea&lt;/a&gt;&lt;br&gt;@stanikulechov&lt;br&gt;&lt;a href="https://twitter.com/prtyDAO"&gt;@prtyDAO&lt;/a&gt;&lt;br&gt;&lt;a href="https://twitter.com/FWBtweets"&gt;@FWBtweets&lt;/a&gt;&lt;br&gt;&lt;br&gt;2/3
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      12:12 PM - 26 Aug 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1430865775011803137" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1430865775011803137" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1430865775011803137" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;



&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--dPf3yvts--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1428566196157390850/vo8yaHnl_normal.jpg" alt="nader | sha.eth profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        nader | sha.eth
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/dabit3"&gt;@dabit3&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      &lt;a href="https://twitter.com/compoundfinance"&gt;@compoundfinance&lt;/a&gt; &lt;br&gt;&lt;a href="https://twitter.com/gitcoin"&gt;@gitcoin&lt;/a&gt; &lt;br&gt;&lt;a href="https://twitter.com/SuperRare"&gt;@SuperRare&lt;/a&gt; &lt;br&gt;&lt;a href="https://twitter.com/seedclubhq"&gt;@seedclubhq&lt;/a&gt; &lt;br&gt;&lt;a href="https://twitter.com/PleasrDAO"&gt;@PleasrDAO&lt;/a&gt; &lt;br&gt;&lt;a href="https://twitter.com/rushil2cents"&gt;@rushil2cents&lt;/a&gt; &lt;br&gt;&lt;a href="https://twitter.com/packyM"&gt;@packyM&lt;/a&gt; &lt;br&gt;&lt;a href="https://twitter.com/DCLBlogger"&gt;@DCLBlogger&lt;/a&gt; &lt;br&gt;&lt;br&gt;3/3
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      12:12 PM - 26 Aug 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1430865775766740994" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1430865775766740994" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1430865775766740994" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;Also, here are some of my favorite articles that touch on some of the stuff I've outlined here:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://coopahtroopa.mirror.xyz/gWY6Kfebs9wHdfoZZswfiLTBVzfKiyFaIwNf2q8JpgI"&gt;The Rise of Micro-Economies&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.rushil2cents.com/the-creator-economy-today-vs-2025/"&gt;The Creator Economy: Today Vs. 2025&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.notboring.co/p/the-value-chain-of-the-open-metaverse"&gt;The Value Chain of the Open Metaverse&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.notboring.co/p/the-dao-of-daos"&gt;The DAO of DAOs&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thanks to &lt;a href="https://twitter.com/adeets_22"&gt;Aditi&lt;/a&gt; for helping me with ideas and edits as I was getting this across the finish line 🙏&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--dPf3yvts--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1428566196157390850/vo8yaHnl_normal.jpg" alt="nader | sha.eth profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        nader | sha.eth
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/dabit3"&gt;@dabit3&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      web2: capital driven markets&lt;br&gt;web3: cultural driven markets&lt;br&gt;&lt;br&gt;web2: buying on the internet&lt;br&gt;web3: buying o̶n̶ the internet&lt;br&gt;&lt;br&gt;web2: democratize information&lt;br&gt;web3: democratize wealth&lt;br&gt;&lt;br&gt;web2: friends become strangers&lt;br&gt;web3: strangers become friends&lt;br&gt;&lt;br&gt;web2: expense&lt;br&gt;web3: investment
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      17:38 PM - 25 Aug 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1430585405662011397" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1430585405662011397" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1430585405662011397" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


</description>
      <category>webdev</category>
      <category>blockchain</category>
      <category>ethereum</category>
    </item>
    <item>
      <title>Wireless Headset Microphone Issue for Linux</title>
      <author>Ashutosh Kumar</author>
      <pubDate>Thu, 26 Aug 2021 12:07:44 +0000</pubDate>
      <link>https://dev.to/blastoise/wireless-headset-microphone-issue-for-linux-23ol</link>
      <guid>https://dev.to/blastoise/wireless-headset-microphone-issue-for-linux-23ol</guid>
      <description>&lt;p&gt;Configuring microphone in a bluetooth headset in Linux is a difficult task. I have seen a lot of queries regarding this on several forums. I recently fixed this issue for myself in Manjaro KDE.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-does-this-issue-arise"&gt;
  &lt;/a&gt;
  Why does this issue arise?
&lt;/h2&gt;

&lt;p&gt;Most of the linux distribution use PulseAudio to manage sound settings. But pulseaudio with default installation only supports A2DP sink profile for High Fidelity Playback. This configuration only supports unidirectional audio transfer (Laptop to Headset). For using headset as both input and output we need to make use of HSP/HFP sink profile which is not present in the default installation of pulseaudio due to it’s buggy nature.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#solution"&gt;
  &lt;/a&gt;
  Solution
&lt;/h2&gt;

&lt;p&gt;There are few libraries which adds the support for HSP/HFP in pulseaudio such as oFono and phonesim but it takes a lot of effort to setup and also does not guarantee good results. A better solution is to replace PulseAudio with PipeWire.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-pipewire"&gt;
  &lt;/a&gt;
  What is PipeWire
&lt;/h3&gt;

&lt;p&gt;PipeWire acts as a drop-in replacement for PulseAudio and offers an easy way to set up Bluetooth headsets. It includes out-of-the-box support for A2DP sink profiles using SBC/SBC-XQ, AptX, LDAC or AAC codecs, and HFP/HSP.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#installation-for-manjaro-kde"&gt;
  &lt;/a&gt;
  Installation for Manjaro KDE
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;First remove pulseaudio along with all it's dependencies by running the following command:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;sudo pacman -Rdd manjaro-pulse pulseaudio pulseaudio-alsa pulseaudio-equalizer pulseaudio-jack pulseaudio-lirc pulseaudio-rtp pulseaudio-zeroconf pulseaudio-bluetooth pulseaudio-ctl sof-firmware&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install pipewire and all the necessary dependencies using the following command:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;sudo pacman -S manjaro-pipewire&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Now execute the following commands to start the service:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;systemctl --user enable pipewire.socket --now&lt;/p&gt;

&lt;p&gt;systemctl --user start pipewire.service&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Reboot the system&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To check if the replacement is working, run the following command and see the output:&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ pactl info
...
Server Name: PulseAudio (on PipeWire 0.3.32)
...
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#installation-for-ubuntu-users"&gt;
  &lt;/a&gt;
  Installation for Ubuntu Users:
&lt;/h3&gt;

&lt;p&gt;Open your terminal and follow these steps:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;We will use a PPA for adding Pipewire to Ubuntu. Execute the following command to do this:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;sudo add-apt-repository ppa:pipewire-debian/pipewire-upstream&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Update the package list using the following command:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;sudo apt update&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install Pipewire using the following command:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;sudo apt install pipewire&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;There is also a dependency that is needed to be installed with Pipewire, otherwise you will face the issue of “Bluetooth headset won’t connect after installing pipewire”. Install the dependency by executing the following command:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;sudo apt install libspa-0.2-bluetooth&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Now, to install the client libraries:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;sudo apt install pipewire-audio-client-libraries&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Reload the daemon:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;systemctl --user daemon-reload&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Disable PulseAudio:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;systemctl --user --now disable pulseaudio.service pulseaudio.socket&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you are on Ubuntu 20.04, you also need to “mask” the PulseAudio by:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;systemctl --user mask pulseaudio&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I am not sure but if possible you can try to run this on other versions too.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;After a new update of Pipewire, you also need to enable pipewire-media-session-service:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;systemctl --user --now enable pipewire-media-session.service&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To check if it is working, run the following command and see the output:&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ pactl info
...
Server Name: PulseAudio (on PipeWire 0.3.32)
...
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If it doesn’t show up then try restarting Pipewire by this command:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;systemctl --user restart pipewire&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If it’s still not showing your microphone, you can try rebooting once and remove and pair your Bluetooth device again to check if it works now.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;If you want to rollback all the changes we did, you can do it by using:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;systemctl --user unmask pulseaudio&lt;/p&gt;

&lt;p&gt;systemctl --user --now enable pulseaudio.service pulseaudio.socket&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://askubuntu.com/a/1339898"&gt;AskUbuntu&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I hope this article helped you in configuring your wireless headphone microphone.&lt;/p&gt;

&lt;p&gt;Questions, suggestions, a word of thanks is always encouraged.&lt;/p&gt;

</description>
      <category>ubuntu</category>
      <category>archlinux</category>
      <category>pipewire</category>
      <category>pulseaudio</category>
    </item>
    <item>
      <title>CORS Explained + Enable in Python Projects</title>
      <author>Nina Hwang</author>
      <pubDate>Thu, 26 Aug 2021 12:03:13 +0000</pubDate>
      <link>https://dev.to/ninahwang/cors-explained-enable-in-python-projects-1i96</link>
      <guid>https://dev.to/ninahwang/cors-explained-enable-in-python-projects-1i96</guid>
      <description>&lt;h2&gt;
  &lt;a href="#cors"&gt;
  &lt;/a&gt;
  CORS
&lt;/h2&gt;

&lt;p&gt;CORS("Cross-Origin Resource Sharing") refers to the situation when the domain requesting a resource is different from the domain serving that resource. This happens frequently when a front-end and a back-end are in different origins and the front-end communicates with the back-end using JavaScript code.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#origin"&gt;
  &lt;/a&gt;
  Origin
&lt;/h3&gt;

&lt;p&gt;"Origin" is the &lt;strong&gt;combination&lt;/strong&gt; of protocol(e.g. &lt;code&gt;http&lt;/code&gt;, &lt;code&gt;https&lt;/code&gt;), domain(e.g. &lt;code&gt;somedomain.com&lt;/code&gt;, &lt;code&gt;localhost&lt;/code&gt;), and port(e.g. &lt;code&gt;80&lt;/code&gt;, &lt;code&gt;443&lt;/code&gt;, &lt;code&gt;3000&lt;/code&gt;, &lt;code&gt;8000&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Therefore, all these are different origins.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;http://localhost&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;http://localhost:8000&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;https://localhost&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#allow-cors"&gt;
  &lt;/a&gt;
  Allow CORS
&lt;/h3&gt;

&lt;p&gt;Most of browsers do not allow CORS by default due to security issue. Therefore, if you want to enable CORS, you should specify &lt;strong&gt;allowed origins&lt;/strong&gt;(origins that are permitted to make cross-origin requests), &lt;strong&gt;allowed methods&lt;/strong&gt;(HTTP methods that are allowed for cross-origin requests), and &lt;strong&gt;allowed headers&lt;/strong&gt;(HTTP request headers that should be supported for cross-origin requests) etc.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#types-of-cors-request"&gt;
  &lt;/a&gt;
  Types of CORS Request
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#preflight-requests"&gt;
  &lt;/a&gt;
  Preflight Requests
&lt;/h4&gt;

&lt;p&gt;Before performing cross-domain requests, browsers will initiate "preflight" request to determine whether those requests are allowed. The preflight requests are done by &lt;code&gt;OPTIONS&lt;/code&gt; , which is a type of HTTP methods.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#simple-requests"&gt;
  &lt;/a&gt;
  Simple Requests
&lt;/h4&gt;

&lt;p&gt;If the request meets certain conditions, browsers don't send preflight requests. &lt;/p&gt;

&lt;p&gt;Simple requests satisfy these conditions:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;HTTP method is either:

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;GET&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;HEAD&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;POST&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Apart from the headers automatically set by the user agent, the only headers which are allowed to be manually set are one of these:

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Accept&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Accept-Language&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Content-Language&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;Content-Type&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;Only &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt;, &lt;code&gt;multipart/form-data&lt;/code&gt;, &lt;code&gt;text/plain&lt;/code&gt; are allowed as values&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;If the request is made using an &lt;code&gt;XMLHttpRequest&lt;/code&gt; object, no event listeners are registered on the object returned by the &lt;code&gt;XMLHttpRequest.upload&lt;/code&gt; property used in the request&lt;/li&gt;
&lt;li&gt;No &lt;code&gt;ReadableStream&lt;/code&gt; object is used in the request.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For more information about CORS, check &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS"&gt;this document&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cors-handson"&gt;
  &lt;/a&gt;
  CORS Hands-On
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#django"&gt;
  &lt;/a&gt;
  Django
&lt;/h3&gt;

&lt;p&gt;Install CORS module:&lt;br&gt;
&lt;code&gt;pip install django-cors-headers&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# settings.py
&lt;/span&gt;&lt;span class="n"&gt;ALLOWED_HOSTS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'*'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;# '*' is a wildcard which allows any host
&lt;/span&gt;
&lt;span class="n"&gt;INSTALLED_APPS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;...&lt;/span&gt;
    &lt;span class="s"&gt;'corsheaders'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;MIDDLEWARE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;...&lt;/span&gt;
    &lt;span class="s"&gt;'corsheaders.middleware.CorsMiddleware'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;# CORS settings
&lt;/span&gt;&lt;span class="n"&gt;CORS_ORIGIN_ALLOW_ALL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;
&lt;span class="n"&gt;CORS_ALLOW_CREDENTIALS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;

&lt;span class="n"&gt;CORS_ALLOW_METHODS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;'DELETE'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;'OPTIONS'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;'PATCH'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;'POST'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;'PUT'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;CORS_ALLOW_HEADERS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;'accept'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;'accept-encoding'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;'authorization'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;'content-type'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;'dnt'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;'origin'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;'user-agent'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;'x-csrftoken'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;'x-requested-with'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For more information about django-cors-headers, check &lt;a href="https://github.com/adamchainz/django-cors-headers"&gt;this document&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#fastapi"&gt;
  &lt;/a&gt;
  FastAPI
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# main.py
&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;fastapi.middleware.cors&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;CORSMiddleware&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;FastAPI&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;origins&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"*"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_middleware&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;CORSMiddleware&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;allow_origins&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;origins&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;allow_credentials&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;allow_methods&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"*"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="n"&gt;allow_headers&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"*"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For more information about FastAPI CORS setup, check &lt;a href="https://fastapi.tiangolo.com/tutorial/cors/"&gt;this document&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#flask"&gt;
  &lt;/a&gt;
  Flask
&lt;/h3&gt;

&lt;p&gt;Install CORS extension:&lt;br&gt;
&lt;code&gt;pip install -U flask-cors&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# main.py
&lt;/span&gt;&lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;flask&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;cors&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;CORS&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;CORS&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For more information about flask-cors, check &lt;a href="https://readthedocs.org/projects/flask-cors/downloads/pdf/latest/"&gt;this document&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>python</category>
      <category>webdev</category>
    </item>
    <item>
      <title>How to run automated telephone conversations through a telephony vendor</title>
      <author>Arthur Grishkevich</author>
      <pubDate>Thu, 26 Aug 2021 11:47:01 +0000</pubDate>
      <link>https://dev.to/arrrgr/how-to-run-automated-telephone-conversations-through-a-telephony-vendor-go7</link>
      <guid>https://dev.to/arrrgr/how-to-run-automated-telephone-conversations-through-a-telephony-vendor-go7</guid>
      <description>&lt;h2&gt;
  &lt;a href="#why-use-your-own-telephony-for-your-dasha-apps"&gt;
  &lt;/a&gt;
  Why use your own telephony for your Dasha apps
&lt;/h2&gt;

&lt;p&gt;The goal of any development is to deliver some type of business value. In the case of Dasha conversational AI apps, the business value that our customers pursue varies. Yet in over 95% of cases today, it is delivered through the telephone channel. In that sense, most of our customers in production use Dasha to automate some part of their telephone communications with customers. &lt;/p&gt;

&lt;p&gt;Most of these companies have a telephony vendor. Connecting the Dasha application to their existing telephony means that Dasha can seamlessly transfer calls to a live agent, if such a need arises. It also means that Dasha can make phone calls from phone numbers reserved for this company, and answer inbound phone calls which are directed to the company phone number. &lt;/p&gt;

&lt;p&gt;In this tutorial we will go over connecting Dasha for both inbound and outbound telephone communication using &lt;a href="https://voximplant.com"&gt;Voximplant&lt;/a&gt;. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-use-dasha-with-a-third-party-telephony-vendor"&gt;
  &lt;/a&gt;
  How to use Dasha with a third party telephony vendor?
&lt;/h2&gt;

&lt;p&gt;First, you need to know if your vendor supports SIP Trunk connections. Here is a simple decision tree flowchart to help you navigate: &lt;/p&gt;

&lt;p&gt;&lt;a href="//images.contentful.com/pzhspng2mvip/42LZsmJaoIqCNtN7P0emln/4ef3e05786fdb56042d71cf68657e948/Yes__2_.png" class="article-body-image-wrapper"&gt;&lt;img src="//images.contentful.com/pzhspng2mvip/42LZsmJaoIqCNtN7P0emln/4ef3e05786fdb56042d71cf68657e948/Yes__2_.png" alt="Decision making flowchart"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To give you an idea of how the integration happens, read below for instructions to integrate Dasha with the telephony vendor Voximplant via a SIP Trunk connection. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#preparatory-actions-on-the-dasha-side"&gt;
  &lt;/a&gt;
  Preparatory actions on the Dasha side
&lt;/h3&gt;

&lt;p&gt;Make sure you have node.js version 13+ and npm installed. You will also want the latest version of Visual Studio Code running to edit and test the Dasha app.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Join &lt;a href="https://community.dasha.ai"&gt;Dasha Community&lt;/a&gt; - you will get your API key here automatically&lt;/li&gt;
&lt;li&gt;Open VSCode and install the &lt;a href="https://marketplace.visualstudio.com/items?itemName=dasha-ai.dashastudio&amp;amp;ssr=false"&gt;Dasha Studio Extension&lt;/a&gt; from the extension store.  You’ll get all the DSL syntax highlighting and a GUI interface for debugging your conversation flow.&lt;/li&gt;
&lt;li&gt;Run &lt;strong&gt;&lt;code&gt;npm i -g "@dasha.ai/cli@latest"&lt;/code&gt;&lt;/strong&gt; to install the latest Dasha CLI.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You’ll want to load up a Dasha conversational AI app. For the purposes of this tutorial, you may want to load up either the &lt;a href="https://github.com/dasha-samples/inbound-voximplant-telephony-test"&gt;inbound tester app&lt;/a&gt; for inbound calls.  Or the &lt;a href="https://github.com/arrrgr/outbound-voximplant-telephony-test"&gt;outbound tester app&lt;/a&gt; for outbound calls. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setting-things-up-on-the-side-of-voximplant-telephony-vendor"&gt;
  &lt;/a&gt;
  Setting things up on the side of Voximplant (telephony vendor)
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://manage.voximplant.com/auth"&gt;Login to your Voximplant account&lt;/a&gt; or &lt;a href="https://manage.voximplant.com/auth/sign_up"&gt;create an account&lt;/a&gt; if you don’t have one.&lt;/li&gt;
&lt;li&gt;Create a Voximplant &lt;a href="https://manage.voximplant.com/applications"&gt;application&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Purchase a Voximplant phone number in the &lt;a href="https://manage.voximplant.com/numbers/my_numbers"&gt;Numbers&lt;/a&gt; section of the control panel and attach it to the app. This number will be used as callerid. &lt;/li&gt;
&lt;li&gt;Go to your &lt;a href="https://manage.voximplant.com/applications"&gt;applications&lt;/a&gt;, click on the app you had created. Click on Numbers &amp;gt; Available and "attach". This number will be used as &lt;strong&gt;callerid&lt;/strong&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="//images.contentful.com/pzhspng2mvip/5VsgkVKdqS3K32OFvzT3Nb/057bf2a7de7b97ce80ec27d11e13e03f/Screenshot_at_Jul_27_21-26-49.png" class="article-body-image-wrapper"&gt;&lt;img src="//images.contentful.com/pzhspng2mvip/5VsgkVKdqS3K32OFvzT3Nb/057bf2a7de7b97ce80ec27d11e13e03f/Screenshot_at_Jul_27_21-26-49.png" alt="Voximplant dashboard "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#for-outbound-calls"&gt;
  &lt;/a&gt;
  For Outbound calls:
&lt;/h3&gt;

&lt;p&gt;Go to Scenarios &amp;gt; Create Scenario, name the Scenario and hit the “plus” sign. You will need to paste the code below in the scenario.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;callerid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;number_you_bought&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
    &lt;span class="nx"&gt;VoxEngine&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;AppEvents&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;CallAlerting&lt;/span&gt;&lt;span class="p"&gt;,(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;Logger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;a call from &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;callerid&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="c1"&gt;// an inbound SIP call from Dasha (the first call leg)&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;inc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;call&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c1"&gt;// an outbound call to PSTN (the second call leg)&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;out&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;VoxEngine&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;callPSTN&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;destination&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;callerid&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;out&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;CallEvents&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Connected&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// answering the call&lt;/span&gt;
            &lt;span class="nx"&gt;inc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="c1"&gt;// adding default event listeners to pass signaling information between two calls&lt;/span&gt;
        &lt;span class="nx"&gt;VoxEngine&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;easyProcess&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;out&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;inc&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This scenario be run from the Dasha integration. On an incoming SIP call from Dasha, the phone number which we want to call is passed to the callPSTN method. This is how we connect two calls. Once the call is answered, Dasha will start the conversation. If you want to handle inbound calls to SIP, use your SIP URI as &lt;strong&gt;&lt;code&gt;callerid&lt;/code&gt;&lt;/strong&gt; and replace the &lt;a href="https://voximplant.com/docs/references/voxengine/voxengine/callpstn"&gt;callPSTN&lt;/a&gt; method with &lt;a href="https://voximplant.com/docs/references/voxengine/voxengine/callsip"&gt;callSIP&lt;/a&gt;. If you are using SIP Registrations on your PBX, you need to create a SIP Registration and use it instead of the SIP URI.&lt;/p&gt;

&lt;p&gt;Next,go to the &lt;strong&gt;Users&lt;/strong&gt; section and create a new user. Remember the username and password, they will be used for Dasha's config in the next step.&lt;/p&gt;

&lt;p&gt;Now, click on &lt;strong&gt;Routing&lt;/strong&gt; in the left hand menu. Create a new rule (leave the pattern as default), and attach your scenario to this rule.&lt;/p&gt;

&lt;p&gt;&lt;a href="//images.contentful.com/pzhspng2mvip/3J0JTIMb8Zx0V0qtVtg6UX/3a2e3ba2b2193a1a06b282e30858b849/Screenshot_at_Jul_27_21-45-38.png" class="article-body-image-wrapper"&gt;&lt;img src="//images.contentful.com/pzhspng2mvip/3J0JTIMb8Zx0V0qtVtg6UX/3a2e3ba2b2193a1a06b282e30858b849/Screenshot_at_Jul_27_21-45-38.png" alt="Create new rule in Voximplant dashboard"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, Connect your sip trunk with Dasha's using this command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;dasha sip create-outbound &lt;span class="nt"&gt;--server&lt;/span&gt; &amp;lt;ip_or_dns_of_server:port&amp;gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;--domain&lt;/span&gt; &amp;lt;domain_name&amp;gt;] &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;--ask-password&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="nt"&gt;--account&lt;/span&gt; &amp;lt;accountName&amp;gt; &lt;span class="nt"&gt;--transport&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;tcp|udp] &amp;lt;config_name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;accountName&lt;/code&gt; is the username you created in the Voximplant panel;&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;ip_or_dns_of_server:port&lt;/code&gt; is the name of our Voximplant app;&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;config_name&lt;/code&gt; is the name of the config we’ll use in the next step.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;dasha sip create-outbound &lt;span class="nt"&gt;--server&lt;/span&gt; exampleApp.exampleAcc.n4.voximplant.com &lt;span class="nt"&gt;--account&lt;/span&gt; exampleUsername &lt;span class="nt"&gt;--ask-password&lt;/span&gt; vox_outbound
password: enter_your_password_here
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#for-inbound-calls"&gt;
  &lt;/a&gt;
  For Inbound calls:
&lt;/h3&gt;

&lt;p&gt;Connect your sip trunk with Dasha's using this command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;dasha sip create-inbound &lt;span class="nt"&gt;--application-name&lt;/span&gt; &amp;lt;your_app_name&amp;gt; &amp;lt;config_name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;your_app_name&lt;/code&gt; is your Voximplant application name;&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;config_name&lt;/code&gt; is the name of the config we’ll use later.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;dasha sip create-inbound &lt;span class="nt"&gt;--application-name&lt;/span&gt; exampleApp vox_inbound
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This command will give us a Dasha’s SIP URI to call. For example: sip:&lt;a href="mailto:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx@sip.us.dasha.ai"&gt;xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx@sip.us.dasha.ai&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To see the URI, write: &lt;code&gt;dasha sip list-inbound&lt;/code&gt;.&lt;br&gt;
Let’s put it in our Voximplant scenario instead of "your_SIP_URI".&lt;/p&gt;

&lt;p&gt;Create a scenario inside the app by pressing a plus icon and paste this code in there:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;    &lt;span class="c1"&gt;// SIP URI that we get in the next step&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;sipURI&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;your_SIP_URI&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;VoxEngine&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;AppEvents&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;CallAlerting&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;call&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;call&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nx"&gt;call&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;CallEvents&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Connected&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;callToDasha&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;VoxEngine&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;callSIP&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sipURI&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;VoxEngine&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;easyProcess&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;call&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;callToDasha&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;
      &lt;span class="nx"&gt;call&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;answer&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is the scenario that will be run when we set everything up. We use the &lt;a href="https://voximplant.com/docs/references/voxengine/voxengine/callsip"&gt;callSIP&lt;/a&gt; method to make a call to our SIP URI. On an incoming SIP call from Voximplant, the SIP URI that we want to call is passed to the callSIP method. This is how we connect two call legs. Once the call is answered, Dasha will start a conversation.&lt;/p&gt;

&lt;p&gt;If you are using SIP Registrations on your PBX, you need to create a &lt;a href="https://voximplant.com/docs/howtos/integration/sip/registration"&gt;SIP Registration&lt;/a&gt; and use it instead of the SIP URI.&lt;/p&gt;

&lt;p&gt;Click on &lt;strong&gt;Routing&lt;/strong&gt; in the left hand menu. Create a new rule (leave the pattern as default), and attach your scenario to this rule.&lt;/p&gt;

&lt;p&gt;&lt;a href="//images.ctfassets.net/pzhspng2mvip/3J0JTIMb8Zx0V0qtVtg6UX/3a2e3ba2b2193a1a06b282e30858b849/Screenshot_at_Jul_27_21-45-38.png" class="article-body-image-wrapper"&gt;&lt;img src="//images.ctfassets.net/pzhspng2mvip/3J0JTIMb8Zx0V0qtVtg6UX/3a2e3ba2b2193a1a06b282e30858b849/Screenshot_at_Jul_27_21-45-38.png" alt="Create new rule in Voximplant dashboard"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#get-your-backend-in-order-and-start-calling"&gt;
  &lt;/a&gt;
  Get your backend in order and start calling
&lt;/h2&gt;

&lt;p&gt;The setup is ready, now we need a local app or backend to run our Voximplant scenario using Dasha.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#placing-outbound-calls"&gt;
  &lt;/a&gt;
  Placing outbound calls:
&lt;/h3&gt;

&lt;p&gt;Open your VS Code Dasha conversational AI app project. Open up &lt;strong&gt;index.js&lt;/strong&gt; file and replace &lt;strong&gt;configName&lt;/strong&gt; in &lt;strong&gt;&lt;code&gt;dasha.sip.Endpoint&lt;/code&gt;&lt;/strong&gt; with your config name. Do the same with the &lt;strong&gt;&lt;code&gt;name&lt;/code&gt;&lt;/strong&gt; field in package.json. To see all the available configs for sip outbound, run the &lt;strong&gt;&lt;code&gt;dasha sip list-outbound&lt;/code&gt;&lt;/strong&gt; command.&lt;/p&gt;

&lt;p&gt;In the &lt;strong&gt;*.dashaapp&lt;/strong&gt; file, change the &lt;strong&gt;&lt;code&gt;name&lt;/code&gt;&lt;/strong&gt; field so it matches our config name.&lt;/p&gt;

&lt;p&gt;For &lt;strong&gt;outbound calls&lt;/strong&gt;, run: &lt;strong&gt;&lt;code&gt;node index.js &amp;lt;the number to call in international format e.g. 12223334455&amp;gt;&lt;/code&gt;&lt;/strong&gt;. Now you can watch the application deployment and registration process in the console.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#taking-inbound-calls"&gt;
  &lt;/a&gt;
  Taking inbound calls:
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Open up your VS Code with the Dasha project open.&lt;/li&gt;
&lt;li&gt;In the &lt;strong&gt;package.json&lt;/strong&gt; file, replace the &lt;strong&gt;&lt;code&gt;name&lt;/code&gt;&lt;/strong&gt; field with your config name. To see all the available configs for sip inbound, run the &lt;strong&gt;&lt;code&gt;dasha sip list-inbound&lt;/code&gt;&lt;/strong&gt; command.
In the inbound.dashaapp file, change the &lt;strong&gt;&lt;code&gt;name&lt;/code&gt;&lt;/strong&gt; field so that it matches your config name.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;To test the integration, run npm i from your folder.&lt;/p&gt;

&lt;p&gt;For &lt;strong&gt;inbound calls&lt;/strong&gt;, run: &lt;strong&gt;&lt;code&gt;node main.js&lt;/code&gt;&lt;/strong&gt;. Now you can call to the phone number which you purchased in Voximplant’s dashboard. &lt;/p&gt;

&lt;p&gt;You’ll be able to track application deployment in the console. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#in-conclusion"&gt;
  &lt;/a&gt;
  In conclusion
&lt;/h2&gt;

&lt;p&gt;Congrats, you’ve successfully connected your Dasha conversational AI app to your custom telephony. This is exciting. You can now call anyone in the world. &lt;br&gt;
If you haven’t yet, you can join &lt;a href="https://community.dasha.ai"&gt;Dasha community&lt;/a&gt; and let us know how useful this was to you. If you want a super quick answer - ask your questions on &lt;a href="https://stackoverflow.com"&gt;StackOverflow&lt;/a&gt;, using the #dasha hashtag.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Using Python to Loop through lists</title>
      <author>hrishikesh1990</author>
      <pubDate>Thu, 26 Aug 2021 11:39:46 +0000</pubDate>
      <link>https://dev.to/hrishikesh1990/using-python-to-loop-through-lists-3nlm</link>
      <guid>https://dev.to/hrishikesh1990/using-python-to-loop-through-lists-3nlm</guid>
      <description>&lt;p&gt;In this short tutorial, we look at how to use Python to loop through a list. We break down the code so that you understand the concept thoroughly.&lt;/p&gt;

&lt;p&gt;This tutorial is a part of our initiative at &lt;a href="https://flexiple.com/"&gt;Flexiple&lt;/a&gt;, to write short curated tutorials around often used or interesting concepts.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#table-of-contents-python-loop-through-list"&gt;
  &lt;/a&gt;
  Table of Contents - Python loop through list
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#python-loop-through-list"&gt;Python loop through list&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#code-and-explanation"&gt;Code and explanation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#closing-thoughts"&gt;Closing thoughts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#python-loop-through-list"&gt;
  &lt;/a&gt;
  Python Loop Through List:
&lt;/h2&gt;

&lt;p&gt;Quite often you might find yourself wanting to run through all the items in your list. This could be to either display the items or to perform a task on the items. &lt;/p&gt;

&lt;p&gt;An example of this would be to change the case of a list of strings or to perform arithmetic operations on a list of numbers. &lt;/p&gt;

&lt;p&gt;In both cases, you are required to perform a single task over all the items in a list. Python provides a method to achieve this. Using a ‘for’ loop, we can make Python loop through the list and perform the task. &lt;/p&gt;

&lt;p&gt;This is the most efficient way to loop through a list with ease irrespective of whether the list contains 10 or 1000 items.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#code-and-explanation"&gt;
  &lt;/a&gt;
  Code and Explanation:
&lt;/h2&gt;

&lt;p&gt;Let's say we have a list containing the various colors of the rainbow.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;colors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"red"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"orange"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"yellow"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"green"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"blue"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"indigo"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"violet"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let us assume we have to print each color in a different line. To achieve this manually, we would have to keep changing the index in our code for each color. However, by using the for loop we leave it to Python to loop through our list. &lt;/p&gt;

&lt;p&gt;Let’s write the code to do that:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;colors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"red"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"orange"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"yellow"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"green"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"blue"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"indigo"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"violet"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;colors&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This code iterates over the list and prints the colors in the list. Let’s take a closer look at what has happened here.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;colors&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This line tells Python to take the first value from the list &lt;code&gt;colors&lt;/code&gt; and assign it with the variable &lt;code&gt;color&lt;/code&gt;. And once that is done we move on to the next line.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Since &lt;code&gt;color&lt;/code&gt; now contains the first value which in our case is &lt;code&gt;red&lt;/code&gt;, it gets printed. Python then looks to see if there are more elements in the list and since it does, it repeats the process again until it has done it for all the items. &lt;/p&gt;

&lt;p&gt;To summarize what we have done here, we have assigned a list called &lt;code&gt;colors&lt;/code&gt; and we create a for loop which tells Python that &lt;em&gt;"for every color in the list of colors, print the color”&lt;/em&gt;. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#closing-thoughts"&gt;
  &lt;/a&gt;
  Closing Thoughts:
&lt;/h2&gt;

&lt;p&gt;As you may have noticed, we named our list &lt;code&gt;colors&lt;/code&gt; (plural) and the variable in our for loop as &lt;code&gt;color&lt;/code&gt; (Singular). This is a very good practice when it comes to naming as it would help make your code more readable. &lt;/p&gt;

&lt;p&gt;However, this is only a best practice and any other variables would also work. Other tutorials may contain more concise but complex methods in Python to loop through a list, but I would recommend following this method as it is more readable. Once you have understood this feel free to try out more complex methods.&lt;/p&gt;

&lt;p&gt;Do let me know your thoughts in the comments section below. :)&lt;/p&gt;

</description>
      <category>python</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Flask[Part 1]: Register-login Authorization  System</title>
      <author>Tito</author>
      <pubDate>Thu, 26 Aug 2021 11:34:54 +0000</pubDate>
      <link>https://dev.to/titusnjuguna/flask-register-login-authorization-system-part-1-b37</link>
      <guid>https://dev.to/titusnjuguna/flask-register-login-authorization-system-part-1-b37</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;Hello reader, thank you for opening this article, which documents an authorization system made with flask. Lets get straight to the agenda,In your development journey, holding the stack constant,you will realize authorization system is an important section of your software. Therefore in this article we will build an authorization system. Lets get starting &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#objective"&gt;
  &lt;/a&gt;
  Objective
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;To allow new users create account and data saved in the Database. If the email or username already exists in the database, the user will not create the account.&lt;/li&gt;
&lt;li&gt;To allow Users can log in only if their credentials are present in the database.&lt;/li&gt;
&lt;li&gt;To prevent users from accessing other pages without logging in &lt;/li&gt;
&lt;li&gt;To recover password through email &lt;/li&gt;
&lt;li&gt;To allow users log out and redirect to page.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#section"&gt;
  &lt;/a&gt;
  Section
&lt;/h2&gt;

&lt;p&gt;As the project is quite large, I will subdivide it into section to ease the learning. In the first session, I will handle the following: &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Setup Project folder and Project Environment &lt;/li&gt;
&lt;li&gt;Flask installation and testing it&lt;/li&gt;
&lt;li&gt;Setting up routes
## Section 1:
### Prerequisite&lt;/li&gt;
&lt;li&gt;Some 2 months experience in Programming&lt;/li&gt;
&lt;li&gt;Python 3+ installed&lt;/li&gt;
&lt;li&gt;Linux bash / Windows CMD&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Optional, Linux Ubuntu 20.04 LTS&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Setup Project folder and Project Environment &lt;br&gt;
Open up you Linux bash ,create a project folder and an Project Environment with in it.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;navigate to you Desktop directory and create a working directory, Additionally we will create a folder within to store project files.&lt;br&gt;
Name of the project:MileStone&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="go"&gt;tito@titoOwnerPc:cd ~ &amp;amp;&amp;amp; cd Desktop
&lt;/span&gt;&lt;span class="gp"&gt;tito@titoOwnerPc:~/Desktop$&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;mkdir &lt;/span&gt;MileStone
&lt;span class="gp"&gt;tito@titoOwnerPc:~/Desktop$&lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;MileStone
&lt;span class="gp"&gt;tito@titoOwnerPc:~/Desktop/MileStone$&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;mkdir &lt;/span&gt;Mile_Proj
&lt;span class="gp"&gt;tito@titoOwnerPc:~/Desktop/MileStone$&lt;/span&gt;&lt;span class="w"&gt;  
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let create an environment ,name it Mile_env :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;tito@titoOwnerPc:~/Desktop/MileStone&lt;span class="nv"&gt;$ &lt;/span&gt;python3 &lt;span class="nt"&gt;-m&lt;/span&gt; venv Mile_env
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;fire up VsCode from the terminal while on the working directory&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;tito@titoOwnerPc:~/Desktop/MileStone&lt;span class="nv"&gt;$ &lt;/span&gt;code &lt;span class="nb"&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, while in your VsCode terminal, activate the environment and  and navigate to the project folder(Mile_Proj) in the VsCode terminal&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;tito@titoOwnerPc:~/Desktop/MileStone&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;Mile_env &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;cd &lt;/span&gt;bin &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;source &lt;/span&gt;activate
&lt;span class="o"&gt;(&lt;/span&gt;Mile_env&lt;span class="o"&gt;)&lt;/span&gt;tito@titoOwnerPc:~/Desktop/MileStone/Mile_env/bin&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; .. &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;cd&lt;/span&gt; .. &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;cd &lt;/span&gt;Mile_Proj
&lt;span class="o"&gt;(&lt;/span&gt;Mile_env&lt;span class="o"&gt;)&lt;/span&gt;tito@titoOwnerPc:~/Desktop/MileStone/Mile_Proj&lt;span class="err"&gt;$&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Install flask with this command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;(&lt;/span&gt;Mile_env&lt;span class="o"&gt;)&lt;/span&gt;tito@titoOwnerPc:~/Desktop/MileStone/Mile_Proj&lt;span class="nv"&gt;$ &lt;/span&gt;pip3 &lt;span class="nb"&gt;install &lt;/span&gt;flask

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create an 'app.py' file&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;(&lt;/span&gt;Mile_env&lt;span class="o"&gt;)&lt;/span&gt;tito@titoOwnerPc:~/Desktop/MileStone/Mile_Proj&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;touch &lt;/span&gt;apps.py

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Congratulations for getting to this level.Your VsCode should look like this&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5m2eZFbr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ms0j98wswbcewu7me1gg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5m2eZFbr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ms0j98wswbcewu7me1gg.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now , lets get working by creating the backbone of our flask app and run it&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VSlAMlsh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rmlsgbpnfalcj9pjqepk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VSlAMlsh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rmlsgbpnfalcj9pjqepk.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To run the flask app:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;(&lt;/span&gt;Mile_env&lt;span class="o"&gt;)&lt;/span&gt;tito@titoOwnerPc:~/Desktop/MileStone/Mile_Proj&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;FLASK_APP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;apps.py
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;then:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;(&lt;/span&gt;Mile_env&lt;span class="o"&gt;)&lt;/span&gt;tito@titoOwnerPc:~/Desktop/MileStone/Mile_Proj&lt;span class="nv"&gt;$ &lt;/span&gt;flask run
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After running, you should see this:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oVTxlx56--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tdppgc0bkdrishskkcv9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oVTxlx56--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tdppgc0bkdrishskkcv9.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Open your browser and open this link:&lt;br&gt;
(Do not click the link)&lt;br&gt;
&lt;a href="http://127.0.0.1:5000/home"&gt;http://127.0.0.1:5000/home&lt;/a&gt; &lt;br&gt;
Optionally, hold Ctrl + click the link provided in the terminal after running the app&lt;/p&gt;

&lt;p&gt;I will end section 1 of this project by adding routes to the project. For the base , application will have:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;login route&lt;/li&gt;
&lt;li&gt;logout route
&lt;/li&gt;
&lt;li&gt;home route &lt;/li&gt;
&lt;li&gt;Register route&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Lets do this:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qob8Exyd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fc7f29tkxflxd39pgfp4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qob8Exyd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fc7f29tkxflxd39pgfp4.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Try running and make sure the routes are running well without errors.&lt;br&gt;
I wish to end the first section here. In the next post, which I will focus on setting up database. Click this &lt;a href="https://www.devto.com"&gt;link&lt;/a&gt; for the next post&lt;/p&gt;

</description>
      <category>python</category>
      <category>beginners</category>
      <category>flask</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Kali-Linux</title>
      <author>Kouluru Nanda Kishore Reddy</author>
      <pubDate>Thu, 26 Aug 2021 11:25:29 +0000</pubDate>
      <link>https://dev.to/koulurunandakishorereddy/kali-linux-1ni0</link>
      <guid>https://dev.to/koulurunandakishorereddy/kali-linux-1ni0</guid>
      <description>&lt;p&gt;When you start looking into a career in cybersecurity, one of the biggest things you will quickly learn is how important Kali Linux is to cybersecurity professionals and especially professional penetration testers. In case you’re not familiar with this very interesting version of Linux, in this article, we’ll dive into what exactly Kali Linux is and discuss the best way to learn this penetration testing swiss army knife operating system.&lt;/p&gt;

&lt;h1&gt;What is Kali Linux?&lt;/h1&gt;

&lt;p&gt;Kali Linux (formerly known as BackTrack Linux) is an open-source, Debian-based Linux distribution aimed at advanced Penetration Testing and Security Auditing. Kali Linux contains several hundred tools targeted towards various information security tasks, such as Penetration Testing, Security Research, Computer Forensics and Reverse Engineering. Kali Linux is a multi-platform solution, accessible and freely available to information security professionals and hobbyists.&lt;/p&gt;

&lt;p&gt;Kali Linux was released on the 13th March 2013 as a complete, top-to-bottom rebuild of BackTrack Linux, adhering completely to Debian development standards.&lt;/p&gt;

&lt;h1&gt;A brief history of Kali Linux&lt;/h1&gt;

&lt;p&gt;Kali Linux was released in 2013 by the organization Offensive Security, which also offers cybersecurity training and certifications.  Offensive Security took the pre-existing security-focused Backtrack Linux and redeveloped it into Kali based on the Debian variant of Linux.  Kali Linux is free and it is made very clear that it will always be free. &lt;/p&gt;

&lt;h1&gt;Is Kali Linux illegal?&lt;/h1&gt;

&lt;p&gt;Kali Linux is not illegal by itself. After all, it is just an OS. It is however a tool for hacking too and when someone uses it especially for hacking, it is illegal. It is legal If you install it for useful purposes like learning, or teaching, or using it in the way to fortify your software or your network as It is not illegal to install any Operating System which is licensed and available for download.&lt;/p&gt;

&lt;h1&gt;How to install Kali Linux?&lt;/h1&gt;

&lt;p&gt;Kali Linux installation is a fairly simple process and you have multiple installation options. Most preferred ones include:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Installing Kali Linux by making a Kali (Linux) bootable USB drive&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Kali Linux hard disk install&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Using virtualization software, such as VMware or VirtualBox&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Dual booting Kali Linux with the operating system&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;System Requirements for Kali Linux- (How much RAM does Kali Linux need?)&lt;/h2&gt;

&lt;p&gt;All you have to make sure is that you have compatible hardware. Kali is supported on i386, amd64, and ARM (both ARMEL and ARMHF) platforms. The hardware requirements are minimal as listed below, although better hardware will naturally provide better performance.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;A minimum of 20 GB disk space for the Kali Linux install.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;RAM for i386 and amd64 architectures, minimum: 1GB, recommended: 2GB or more.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;CD-DVD Drive / USB boot support/ VirtualBox&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;Why do hackers use Kali Linux?&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mBUgp_Nz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625751737966/dI1ZAD9Ky.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mBUgp_Nz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625751737966/dI1ZAD9Ky.jpeg" alt="1_3kQeDluVlgMzRTEtoL208w.jpeg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Previously known as Backtrack, Kali Linux advertises itself as a more polished successor with more testing-centric tools, unlike Backtrack which had multiple tools that would serve the same purpose, in turn, making it jampacked with unnecessary utilities. This makes ethical hacking using Kali Linux a simplified task.&lt;/p&gt;

&lt;h1&gt;Why do cybersecurity professionals prefer Kali Linux?&lt;/h1&gt;

&lt;p&gt;One of the biggest reasons cyber professionals use and often prefer Kali Linux is the fact that all of the source code is open-source, meaning that the system can be tweaked to the liking of the cybersecurity professional that is using it.  This is not necessarily done often, it does provide the option to personalize Kali for specific cybersecurity tasks. Kali Linux also comes with multi-language support.&lt;/p&gt;

&lt;p&gt;Interestingly, up until 2019 Kali Linux had been designed to be used for single root user access, meaning that the user is given full rights and access to everything.  This was recently changed to accommodate users that were using Kali Linux more often than just for cybersecurity purposes.&lt;/p&gt;

&lt;h1&gt;The cyber advantage of using Kali Linux&lt;/h1&gt;

&lt;p&gt;Those were just a few examples of the popular applications that come pre-installed on Kali Linux. While it is true that all of the applications on Kali Linux are free and can be downloaded on other operating systems, Kali Linux makes it a lot easier for the user by doing all of the work for you and compiling them in one operating system distribution.&lt;/p&gt;

&lt;h1&gt;Kali Linux Features&lt;/h1&gt;

&lt;ul&gt;
      &lt;li&gt;
&lt;b&gt;More than 600 penetration testing tools included: &lt;/b&gt;After reviewing every tool that was included in BackTrack, we eliminated a great number of tools that either simply did not work or which duplicated other tools that provided the same or similar functionality. Details on what’s included are on the Kali Tools site.&lt;/li&gt;
      &lt;li&gt;
&lt;b&gt;Free (as in beer) and always will be:&lt;/b&gt; Kali Linux, like BackTrack, is completely free of charge and always will be. You will never, ever have to pay for Kali Linux.&lt;/li&gt;
      &lt;li&gt;
&lt;b&gt;Open source Git tree: &lt;/b&gt;We are committed to the open-source development model and our development tree is available for all to see. All of the source code which goes into Kali Linux is available for anyone who wants to tweak or rebuild packages to suit their specific needs.&lt;/li&gt;
      &lt;li&gt;
&lt;b&gt;Wide-ranging wireless device support:&lt;/b&gt; A regular sticking point with Linux distributions has been supported for wireless interfaces. We have built Kali Linux to support as many wireless devices as we possibly can, allowing it to run properly on a wide variety of hardware and making it compatible with numerous USB and other wireless devices.&lt;/li&gt;
      &lt;li&gt;
&lt;b&gt;Developed in a secure environment:&lt;/b&gt; The Kali Linux team is made up of a small group of individuals who are the only ones trusted to commit packages and interact with the repositories, all of which is done using multiple secure protocols.&lt;/li&gt;
      &lt;li&gt;
&lt;b&gt;GPG signed packages and repositories: &lt;/b&gt;Every package in Kali Linux is signed by each developer who built and committed it, and the repositories subsequently sign the packages as well.&lt;/li&gt;
      &lt;li&gt;
&lt;b&gt;Multi-language support:&lt;/b&gt; Although penetration tools tend to be written in English, we have ensured that Kali includes true multilingual support, allowing more users to operate in their native language and locate the tools they need for the job.&lt;/li&gt;
      &lt;li&gt;
&lt;b&gt;Completely customizable: &lt;/b&gt;We thoroughly understand that not everyone will agree with our design decisions, so we have made it as easy as possible for our more adventurous users to customize Kali Linux to their liking, all the way down to the kernel.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Conclusion and Key Points&lt;/h2&gt;

&lt;ul&gt;
      &lt;li&gt;Keep in mind that Kali Linux, while not overly complicated, isn’t exactly for beginners, so take your time as you work through the tools.  Try to learn at least one new thing each day.&lt;/li&gt;
      &lt;li&gt;If you’re new to the world of Linux, consider starting with another Linux system like Ubuntu to get a taste of what you would be getting into.&lt;/li&gt;
      &lt;li&gt;Never attempt to use the tools in Kali Linux against any system which are not authorized to access.  There are plenty of legally free systems out there to practice your skills.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;
&lt;b&gt;If you want to know how to download Kail Linux on the android device comment below&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Thanks for reading 😊&lt;/p&gt;

</description>
      <category>linux</category>
      <category>cybersecurity</category>
      <category>programming</category>
      <category>opensource</category>
    </item>
  </channel>
</rss>
