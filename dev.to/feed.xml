<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How setup the Arduino IDE to use Luos</title>
      <author>Emanuel Allely</author>
      <pubDate>Mon, 02 Aug 2021 13:55:58 +0000</pubDate>
      <link>https://dev.to/emanuel_allely/how-setup-the-arduino-ide-to-use-luos-4p7e</link>
      <guid>https://dev.to/emanuel_allely/how-setup-the-arduino-ide-to-use-luos-4p7e</guid>
      <description>&lt;p&gt;üé• Here is a "quick and dirty" video &lt;strong&gt;tutorial&lt;/strong&gt; showing how to set up the &lt;strong&gt;Arduino&lt;/strong&gt; IDE to use Luos with your Arduino and Genuino boards. üéì Luos is an &lt;strong&gt;open-source&lt;/strong&gt; project for &lt;strong&gt;embedded systems&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;‚ûî &lt;a href="https://youtu.be/Y-rUEB65EWw"&gt;https://youtu.be/Y-rUEB65EWw&lt;/a&gt;&lt;/p&gt;

</description>
      <category>arduino</category>
      <category>opensource</category>
      <category>embeddedsystems</category>
      <category>luos</category>
    </item>
    <item>
      <title>üìñ Use Kedro Catalog Create to boost your pipeline development productivity.</title>
      <author>Waylon Walker</author>
      <pubDate>Mon, 02 Aug 2021 13:31:10 +0000</pubDate>
      <link>https://dev.to/waylonwalker/use-kedro-catalog-create-to-boost-your-pipeline-development-productivity-3d3f</link>
      <guid>https://dev.to/waylonwalker/use-kedro-catalog-create-to-boost-your-pipeline-development-productivity-3d3f</guid>
      <description>&lt;p&gt;I use &lt;code&gt;kedro catalog create&lt;/code&gt; to boost my productivity by automatically generating yaml catalog entries for me.  It will create new yaml files for each pipeline, fill in missiing catalog entries, and respect already existing&lt;br&gt;
catalog entries.  It will reformat the file, and sort it based on catalog key.&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/waylonwalker" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---Ukb2PhF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--Izxe95PY--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/271838/95e313ca-39fc-4ee6-bf57-ad52b4dcf0d2.png" alt="waylonwalker"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/waylonwalker/what-is-kedro-lob" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;ü§∑‚Äç‚ôÄÔ∏è What is Kedro (The Parts)&lt;/h2&gt;
      &lt;h3&gt;Waylon Walker „Éª Feb 24 '20 „Éª 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#data&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#dataengineering&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#kedro&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#datascience&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;üëÜ Unsure what kedro is?  Check out this post.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#running-kedro-catalog-create"&gt;
  &lt;/a&gt;
  Running Kedro Catalog Create
&lt;/h2&gt;

&lt;p&gt;The command to ensure there are catalog entries for every dataset in the passed in pipeline.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;kedro catalog create &lt;span class="nt"&gt;--pipeline&lt;/span&gt; history_nodes
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Create's new yaml file, if needed&lt;/li&gt;
&lt;li&gt;Fills in new dataset entries with the default dataset&lt;/li&gt;
&lt;li&gt;Keeps existing datasets untouched&lt;/li&gt;
&lt;li&gt;it will reformat your yaml file a bit

&lt;ul&gt;
&lt;li&gt;default sorting will be applied&lt;/li&gt;
&lt;li&gt;empty newlines will be removed&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#confroot"&gt;
  &lt;/a&gt;
  CONF_ROOT
&lt;/h2&gt;

&lt;p&gt;Kedro will respect your &lt;code&gt;CONF_ROOT&lt;/code&gt; settings when it creates a new catalog file, or looks for existing catalog files.  You can change the location of your configuration files by editing your &lt;code&gt;CONF_ROOT&lt;/code&gt; variable in your projects.  &lt;/p&gt;

&lt;p&gt;&lt;code&gt;settings.py&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# settings.py
# default settings
&lt;/span&gt;&lt;span class="n"&gt;CONF_ROOT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"conf"&lt;/span&gt;

&lt;span class="c1"&gt;# I like to package my configuration
&lt;/span&gt;&lt;span class="n"&gt;CONF_ROOT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__file__&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;parent&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="s"&gt;"conf"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;I prefer to keep my configuration packaged inside of my project.  This is partly due to how my team operates and deploys pipelines.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#file-location"&gt;
  &lt;/a&gt;
  File Location
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;kedro catalog create&lt;/code&gt; command will look for a &lt;code&gt;yaml&lt;/code&gt; file based on the name of the pipeline (&lt;code&gt;CONF_ROOT/catalog/&amp;lt;pipeline-name&amp;gt;.yml&lt;/code&gt;).  If it does not&lt;br&gt;
find one it will create one and make entries for each dataset in the pipeline. It will not look in all of your existing catalog files for entries, only the one in the exact file for your pipeline.  If you are going to use this command&lt;br&gt;
its important that you follow this pattern or copy what it generates into your own catalog file of choice.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;‚ö†Ô∏è It will not look in all of your existing catalog files for entries, only the one in the exact file for your pipeline.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;
  &lt;a href="#memorydatasets"&gt;
  &lt;/a&gt;
  MemoryDataSet's
&lt;/h2&gt;

&lt;p&gt;When you run &lt;code&gt;kedro catalog create&lt;/code&gt; you get &lt;code&gt;MemoryDataSet&lt;/code&gt;, that's it.  As of &lt;code&gt;0.17.4&lt;/code&gt; its hard coded into the library and not configurable.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;range12&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;MemoryDataSet&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#your-free-to-use-what-you-want-though"&gt;
  &lt;/a&gt;
  Your free to use what you want though
&lt;/h2&gt;

&lt;p&gt;Let's switch this dataset over to a &lt;code&gt;pandas.CSVDataSet&lt;/code&gt; so that the file gets stored and we can pick up  and read the file without re-running the whole pipeline.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;range12&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;pandas.CSVDataSet&lt;/span&gt;
  &lt;span class="na"&gt;filepath&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;data/range12.csv&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#continue-adding-nodes"&gt;
  &lt;/a&gt;
  Continue adding nodes
&lt;/h2&gt;

&lt;p&gt;As we work we will keep adding nodes to our kedro pipeline, in this case we added another node that created a dataset called &lt;code&gt;range13&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;kedro catalog create &lt;span class="nt"&gt;--pipeline&lt;/span&gt; history_nodes
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After telling kedro to create new catalog entries for us we will see that it left our &lt;code&gt;range12&lt;/code&gt; entry alone and created &lt;code&gt;range13&lt;/code&gt; for us.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;range12&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;pandas.CSVDataSet&lt;/span&gt;
  &lt;span class="na"&gt;filepath&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;data/range12.csv&lt;/span&gt;
&lt;span class="na"&gt;range13&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;MemoryDataSet&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#formatting-is-not-worthwhile"&gt;
  &lt;/a&gt;
  Formatting is not worthwhile
&lt;/h2&gt;

&lt;p&gt;If we decide this is too cramped for us we could add some space between datasets.  The next time we run &lt;code&gt;kedro catalog create&lt;/code&gt; empty lines will be&lt;br&gt;
removed.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;range12&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;pandas.CSVDataSet&lt;/span&gt;

&lt;span class="na"&gt;range13&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;MemoryDataSet&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#continuing-to-work"&gt;
  &lt;/a&gt;
  Continuing to work
&lt;/h2&gt;

&lt;p&gt;If we coninue adding new nodes, and tell kedro to create catalog entries again, all of our effort given to formatting will be lost.  I wouldn't worry about it unless you have an autoformatter that you can run on your yaml files.  The productivity gains in an semi-automated catalog are worth it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;range12&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;pandas.CSVDataSet&lt;/span&gt;
  &lt;span class="na"&gt;filepath&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;data/range12.csv&lt;/span&gt;
&lt;span class="na"&gt;range121&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;MemoryDataSet&lt;/span&gt;
&lt;span class="na"&gt;range13&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;MemoryDataSet&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#sorting-order"&gt;
  &lt;/a&gt;
  Sorting Order
&lt;/h2&gt;

&lt;p&gt;Notice the sorting order in the last entry, &lt;code&gt;range121&lt;/code&gt; comes before &lt;code&gt;range13&lt;/code&gt;. This is all based on how pythons &lt;code&gt;yaml.safe_dump&lt;/code&gt; works, kedro has set the &lt;code&gt;default_flow_style&lt;/code&gt; to &lt;code&gt;False&lt;/code&gt;.  You can see where they write your file in the source code currently &lt;a href="https://github.com/quantumblacklabs/kedro/blob/master/kedro/framework/cli/catalog.py#L202"&gt;here&lt;/a&gt; &lt;/p&gt;

</description>
      <category>kedro</category>
      <category>python</category>
      <category>datascience</category>
    </item>
    <item>
      <title>Encrypting And Decrypting PDF Files Using Python...</title>
      <author>Naftal Rainer</author>
      <pubDate>Mon, 02 Aug 2021 13:30:55 +0000</pubDate>
      <link>https://dev.to/seniorcitizen/encrypting-and-decrypting-pdf-files-using-python-24ii</link>
      <guid>https://dev.to/seniorcitizen/encrypting-and-decrypting-pdf-files-using-python-24ii</guid>
      <description>&lt;p&gt;Portable Document Format (PDF) is one of the most widely used file formats by online accessories.&lt;br&gt;
Most of the documents e.g. eBooks, scanned documents e.t.c uses this pdf format for storage and sharing purposes.&lt;/p&gt;

&lt;p&gt;For the purpose of sharing in various platforms and media, a document is exposed to so many threats such as information leakage and access by unauthorized individuals. It is therefore necessary for one to encrypt his/her documents to prevent such avoidable occurrences and exposure.&lt;/p&gt;

&lt;p&gt;Python being a resourceful programming language offers a very awesome module known as &lt;code&gt;PyPDF2&lt;/code&gt; to encrypt and decrypt pdf files hence hence enhancing security of contained information.&lt;/p&gt;

&lt;p&gt;The PyPDF2 library is capable of:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Extracting document information e.g. title, page number e.t.c&lt;/li&gt;
&lt;li&gt;Splitting and merging documents.&lt;/li&gt;
&lt;li&gt;Cropping Pages.&lt;/li&gt;
&lt;li&gt;Encryption and decryption.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;code&gt;PyPDF2&lt;/code&gt; is not an in-built library therefore it needs to be installed before use by:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pip3 install PyPDF2
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The files used in the code implementations below are found &lt;a href="https://github.com/Naftal-Rainer/Automation/tree/main/Encrypt_Decrypt_pdf"&gt;here&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Encrypting a PDF file&lt;/strong&gt;&lt;br&gt;
File encryption entails addition of a password to a document thereby allowing access to only authorized people.&lt;/p&gt;

&lt;p&gt;To do this, we'll follow the following steps:&lt;br&gt;
Step 1: Open the pdf using the reader object.&lt;br&gt;
Step 2: Create a copy of the original file by iterating through &lt;br&gt;
         every page and adding it to the new pdf file.&lt;br&gt;
Step 3: Encrypt the new pdf file.&lt;/p&gt;

&lt;p&gt;&lt;u&gt;The Code Implementation&lt;/u&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Import the required module and sub-modules
&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;PyPDF2&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;PdfFileWriter&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;PyPDF2&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;PdfFileReader&lt;/span&gt;

&lt;span class="c1"&gt;# Create a PdfFileWriter object
&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;PdfFileWriter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c1"&gt;# Open the pdf file to encrypt
&lt;/span&gt;&lt;span class="nb"&gt;file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;PdfFileReader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Magazine.pdf'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Retrieve the number of pages to iterate in the original document
&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;numPages&lt;/span&gt;

&lt;span class="c1"&gt;# Iterates through every page and adds it to the new file (a copy of the original)
&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;pages&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getPage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addPage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pages&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Creates a variable password.
&lt;/span&gt;&lt;span class="n"&gt;password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'pam&amp;amp;Lab890'&lt;/span&gt;

&lt;span class="c1"&gt;# Encrypt the file using the created password 
&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encrypt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Open a new file 'Magazines.pdf' and write the encrypted pdf file
&lt;/span&gt;&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Magazines.pdf'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;'wb'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This creates a  similar copy of the original file (may have a different name as specified) that requires a set password to enable access.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Decrypting a PDF file&lt;/strong&gt;&lt;br&gt;
Decryption unlocks a document with a given password and converts it to a pdf file that does not require a password key to access.&lt;/p&gt;

&lt;p&gt;The file decryption steps are almost analogous to that of encryption.&lt;/p&gt;

&lt;p&gt;Step 1: Open the pdf using the reader object.&lt;br&gt;
Step 2: Encrypt the new pdf file.&lt;br&gt;
Step 3: Create a copy of the original file by iterating through&lt;br&gt;&lt;br&gt;
         every page and adding it to the new pdf file.&lt;/p&gt;

&lt;p&gt;&lt;u&gt;The Code Implementation&lt;/u&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Import the required module and sub-modules
&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;PyPDF2&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;PdfFileWriter&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;PyPDF2&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;PdfFileReader&lt;/span&gt;

&lt;span class="c1"&gt;# Create a PdfFileWriter object
&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;PdfFileWriter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c1"&gt;# Open the password - secured pdf file to decrypt
&lt;/span&gt;&lt;span class="nb"&gt;file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;PdfFileReader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Magazines.pdf'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Creates a variable password.  
&lt;/span&gt;&lt;span class="n"&gt;password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'pam&amp;amp;Lab890'&lt;/span&gt;

&lt;span class="c1"&gt;# First, check if the file is encrypted then proceed if encrypted
&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isEncrypted&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;

    &lt;span class="c1"&gt;# Decrypt the file using the givenpassword 
&lt;/span&gt;    &lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;decrypt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

     &lt;span class="c1"&gt;# Iterates through every page and adds it to the new file    
&lt;/span&gt;    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;31&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;pages&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getPage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addPage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pages&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# Open a new file 'Magazines1.pdf' and write the encrypted 
&lt;/span&gt;        &lt;span class="n"&gt;pdf&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt;
    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Magazines1.pdf'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;'wb'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'File decrypted successfully'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;

    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'File is not encrypted'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you guys found this post helpful then save it so you can refer anytime üòä. For those who wanna learn more about PyPDF2 module and functionalities, just give a recommendation of the specific area (whether merging, splitting e.t.c) in the comment section below.&lt;br&gt;
Happy Coding Week! üë®‚Äçüíª üë©‚Äçüíª&lt;/p&gt;

</description>
      <category>python</category>
      <category>programming</category>
      <category>codenewbie</category>
      <category>beginners</category>
    </item>
    <item>
      <title>7 Slack communities about AI/ML/DS to join in 2021</title>
      <author>ai-jobs.net</author>
      <pubDate>Mon, 02 Aug 2021 13:30:41 +0000</pubDate>
      <link>https://dev.to/ai_jobsnet/7-slack-communities-about-ai-ml-ds-to-join-in-2021-1idk</link>
      <guid>https://dev.to/ai_jobsnet/7-slack-communities-about-ai-ml-ds-to-join-in-2021-1idk</guid>
      <description>&lt;p&gt;If you want some diversion from reading papers and researching new trends in the Big Data space on your own, then joining communities is a nice short-cut and sometimes very productive alternative for you to learn or create new connections with some fellow professionals.&lt;/p&gt;

&lt;p&gt;Here are some additional reasons why it can be beneficial to join these online communities:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Collaboration ‚Äì It allows members to collaborate and to discuss with other professionals in areas in which they want to either clarify or to gather some insights that would help them expand their knowledge. A collaboration channel is available for members to post questions, answer questions or read insights that might be beneficial to them, i.e. articles or websites that can be used for learning or training, new concepts or approaches that are effective and efficient to use.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Camaraderie ‚Äì Sometimes working alone bothers and disrupts our mental health, so another good thing about these communities is that they can promote conversation with other members and foster new relationships with comrades or future co-workers whom we can relate to, not just solely regarding work topics but also our frustrations and other sentiments about our profession, clients, trends, etc.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Feedback ‚Äì These communities also provide a channel for learning members to get insights and feedbacks about their technological approaches, strategies and ideas. The insights or critique they get from other members can help them improve and enhance their work, projects or even startups.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Career opportunities ‚Äì They can provide access to job opportunities most especially to those who are actively seeking for jobs in AI/ML or Big Data positions. They usually have a specific channel made for members to post vacancies that other members then can apply for directly.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here are 7 free and open Slack communities you join right now:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#watson-developer-community"&gt;
  &lt;/a&gt;
  Watson developer community
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://wdc-community.slack.com/"&gt;https://wdc-community.slack.com/&lt;/a&gt; (&lt;a href="https://wdc-slack-inviter.mybluemix.net/"&gt;https://wdc-slack-inviter.mybluemix.net/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;This community gives you access to detailed developer resources and more to help you getting started with the IBM Watson toolchain. This includes documentation, SDKs on GitHub and other collaborative tools to help you with the integration.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ai-researchers-and-enthusiasts"&gt;
  &lt;/a&gt;
  AI Researchers and Enthusiasts
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://ai-researchers.slack.com/"&gt;https://ai-researchers.slack.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This community is a medium for researchers and enthusiast to exchange theories and concepts about Artificial Intelligence. This community is also open for all levels of research.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dsnet-data-science-network"&gt;
  &lt;/a&gt;
  DSNet ‚Äì Data Science Network
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://dsnetorg.slack.com/"&gt;https://dsnetorg.slack.com/&lt;/a&gt; (&lt;a href="http://dsnet.org"&gt;http://dsnet.org&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;Data Science Network is of the fastest-growing data science communities that is run and supported by Jovian.ml. This community provides a medium for you to exchange insights and learn from others through events and open channels as well as open resources.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#r-team-for-data-analysis"&gt;
  &lt;/a&gt;
  R- Team for Data Analysis
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://r-data-team.slack.com/"&gt;https://r-data-team.slack.com/&lt;/a&gt; (&lt;a href="https://slofile.com/slack/r-data-team"&gt;https://slofile.com/slack/r-data-team&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;R-Team is a supportive community that promotes both camaraderie and collaboration by learning and exploring the R language for data analysis and statistics. If you are interested in learning about R and its surrounding ecosystem of libraries this community might be perfect for you.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#papers-with-code"&gt;
  &lt;/a&gt;
  Papers with Code
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://paperswithcode.slack.com/"&gt;https://paperswithcode.slack.com/&lt;/a&gt; (&lt;a href="https://paperswithcode.com/"&gt;https://paperswithcode.com/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;Papers with Code from the name itself provides an open resource of Machine Learning papers, code snippets, and evaluations for scholars, scientists or data enthusiast. This is a great community especially for those who are looking for novel research in this area to learn and adapt from for their own studies and/or research projects.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#python-developers"&gt;
  &lt;/a&gt;
  Python Developers
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://pythondev.slack.com/"&gt;https://pythondev.slack.com/&lt;/a&gt; (&lt;a href="https://pythondevelopers.herokuapp.com"&gt;https://pythondevelopers.herokuapp.com&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;A community of python developers that collaborate and share insights about python. This is also a good community that could help you if ever you have issues on your py scripts or if you want to know more about python.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#datatalksclub"&gt;
  &lt;/a&gt;
  DataTalks.Club
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://datatalks-club.slack.com/"&gt;https://datatalks-club.slack.com/&lt;/a&gt; (&lt;a href="https://datatalks.club/"&gt;https://datatalks.club/&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;DataTalks.Club is an online community that provides a medium for data enthusiast that would want to collaborate and learn more about applied data science, machine learning, data engineering and many more. If you are interested in these topics, then this community is perfect for you. You can also discuss career opportunities and join weekly events.&lt;br&gt;
If you want more&lt;/p&gt;

&lt;p&gt;If the above list isn‚Äôt enough for you and you want to join a few more (including smaller and non-free) or slightly different communities, visit Slofile &lt;a href="https://slofile.com/"&gt;https://slofile.com/&lt;/a&gt; to search for more.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;This post was originally published under &lt;a href="https://insights.ai-jobs.net/7-slack-communities-about-ai-ml-ds-to-join-in-2021/"&gt;https://insights.ai-jobs.net/7-slack-communities-about-ai-ml-ds-to-join-in-2021/&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

</description>
      <category>machinelearning</category>
      <category>datascience</category>
      <category>career</category>
      <category>productivity</category>
    </item>
    <item>
      <title>How we built a SaaS with React and AWS</title>
      <author>Luca Restagno</author>
      <pubDate>Mon, 02 Aug 2021 13:24:12 +0000</pubDate>
      <link>https://dev.to/ikoichi/how-we-built-a-saas-with-react-and-aws-leo</link>
      <guid>https://dev.to/ikoichi/how-we-built-a-saas-with-react-and-aws-leo</guid>
      <description>&lt;p&gt;I started &lt;a href="https://iterspace.com"&gt;iterspace&lt;/a&gt; with &lt;a href="https://marco-zani.webflow.io/"&gt;Marco Zani&lt;/a&gt; in the summer of 2018. The plan was to build a tool that would let people share clear feedback with the right context. A bit like Loom, but you get advanced commenting instruments and threads.&lt;/p&gt;

&lt;p&gt;Visual feedback is not an entirely novel idea, of course, but the existing tools were all screenshot-based. So we set out to build a video-based product.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#architecture"&gt;
  &lt;/a&gt;
  Architecture
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---7AXjOM0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j7ooc5w23by5h50xmhl6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---7AXjOM0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j7ooc5w23by5h50xmhl6.png" alt="iterspace Cloud Architecture"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;iterspace is a so-called single-page web app (SPA). Most of the logic is implemented in the client-side that runs in the browser and syncs updates to the backend view HTTP requests. The cloud notifies the app about updates made by other users via WebSocket.&lt;/p&gt;

&lt;p&gt;All of the application's data are stored in a DynamoDB database in the Amazon Web Services (AWS) cloud. This gives us a lot of room to scale and keep the price contained.&lt;/p&gt;

&lt;p&gt;All the services and data stores run in Amazon Web Services. We have AWS Amplify to host the client application on the public Internet and put it on edge through the CDN. The CDN routes the requests to either AWS S3 for static resources, such as images or videos.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#javascript-and-nodejs"&gt;
  &lt;/a&gt;
  JavaScript and Node.js
&lt;/h2&gt;

&lt;p&gt;One of the most far-reaching tech decisions a startup needs to make is what programming language(s) to use. &lt;/p&gt;

&lt;p&gt;For iterspace, we chose JavaScript and its server-side engine Node.js. Having one language across the whole stack is a significant speed boost, as it reduces the mental overhead of switching between parts of the stack.&lt;/p&gt;

&lt;p&gt;The criticism that JavaScript gets is the lack of static typing. But by using the JavaScript superset TypeScript, we were able to add typings on both the front end and the back end.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#frontend"&gt;
  &lt;/a&gt;
  Frontend
&lt;/h2&gt;

&lt;p&gt;For iterspace, we picked React as the UI library of reference.&lt;/p&gt;

&lt;p&gt;React is a small library focused on doing one thing ‚Äî rendering UI. It does not dictate how to manage the state in a larger application. Therefore we picked Redux for the application state management and Redux Saga for the side effects handling.&lt;/p&gt;

&lt;p&gt;We came from working experiences where we built a design system with a brand identity injected into it.&lt;/p&gt;

&lt;p&gt;For a startup, speed is critical. Therefore we evaluated several component libraries. The prerequisites were React, styled-component, and components written with the functional approach. We picked Zendesk Garden from Zendesk as the base React components library, and I must say that the decision was worth it.&lt;/p&gt;

&lt;p&gt;For startups, development speed is critical. So we started using Storybook to build the components in isolation. Basically, when you need to create a new component, you make a story first. A story is a page that renders one or more components.&lt;br&gt;
As you write the code in the new component file, you see it updated almost immediately in the browser. &lt;/p&gt;

&lt;p&gt;It helps you a lot in thinking about Presentational and Container Components.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#backend"&gt;
  &lt;/a&gt;
  Backend
&lt;/h2&gt;

&lt;p&gt;The backend service for iterspace is a lightweight layer between the client and the data store. It is a GraphQL API feed by Lambda Functions (Serverless).&lt;/p&gt;

&lt;p&gt;There is no CPU-intensive processing. Therefore, there was no need for always running servers.&lt;/p&gt;

&lt;p&gt;We used Lerna to manage a monorepo containing all the Lambda Functions code in different packages. In addition, we created common packages to share the core model between the other Lambda Functions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#video"&gt;
  &lt;/a&gt;
  Video
&lt;/h2&gt;

&lt;p&gt;iterspace stores and serves screen recordings, and therefore we had to understand how to distribute video reliably.&lt;br&gt;
Most of the recordings come from the browser (WebM with the H264 video codec), but a video can be uploaded too, and therefore we had to support multiple formats (Mov, Mp4).&lt;/p&gt;

&lt;p&gt;We use AWS Elemental MediaConvert to encode the video to WebM and Mp4. We had to encode both formats because the WebM playback works on most browsers (Chrome, Edge, Firefox) but not in Safari.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusions"&gt;
  &lt;/a&gt;
  Conclusions
&lt;/h2&gt;

&lt;p&gt;Building a product is a highly challenging activity. It requires many decisions to be taken rapidly. Nevertheless, we try to deliver value to the customers as soon as possible, even with rough features.&lt;br&gt;
Then we gather feedback, adjust the feature based on that, and iterate the process.&lt;br&gt;
Moreover, we use iterspace while working on iterspace! And we are the first customers of our own product.&lt;/p&gt;

&lt;p&gt;I hope you enjoyed üôå&lt;/p&gt;

&lt;p&gt;If you are interested in building a SaaS and web development, you might consider subscribing to my &lt;a href="https://www.lucarestagno.com/newsletter?utm_source=dev.to"&gt;newsletter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>cloud</category>
      <category>aws</category>
      <category>javascript</category>
    </item>
    <item>
      <title>vsCode Emmet cheatsheet</title>
      <author>computer_geek77</author>
      <pubDate>Mon, 02 Aug 2021 12:54:09 +0000</pubDate>
      <link>https://dev.to/computergeek/vscode-emmet-cheatsheet-1mmf</link>
      <guid>https://dev.to/computergeek/vscode-emmet-cheatsheet-1mmf</guid>
      <description>&lt;h2&gt;
  &lt;a href="#boilerplate"&gt;
  &lt;/a&gt;
  Boilerplate
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"UTF-8"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Document /title&amp;gt;
/head&amp;gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#basic-elements"&gt;
  &lt;/a&gt;
  basic elements
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;h4&gt;
  &lt;a href="#1-section"&gt;
  &lt;/a&gt;
  1) section
&lt;/h4&gt;


&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;section&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;h4&gt;
  &lt;a href="#2-example"&gt;
  &lt;/a&gt;
  2) .example
&lt;/h4&gt;


&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"example"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;h4&gt;
  &lt;a href="#3-sectionintro"&gt;
  &lt;/a&gt;
  3) section#intro
&lt;/h4&gt;


&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;section&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"intro"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;h4&gt;
  &lt;a href="#4-pgtlorem10"&gt;
  &lt;/a&gt;
  4) p&amp;gt;lorem10
&lt;/h4&gt;


&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Lorem ipsum dolor sit amet
consectetur adipisicing elit. Neque,
facere? &lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;h4&gt;
  &lt;a href="#5-sectionintrogtcontainer"&gt;
  &lt;/a&gt;
  5) section#intro&amp;gt;.container
&lt;/h4&gt;


&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;section&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"intro"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;h4&gt;
  &lt;a href="#6-pyour-custom-text"&gt;
  &lt;/a&gt;
  6) p{your custom text}
&lt;/h4&gt;


&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;your custom text &lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;h4&gt;
  &lt;a href="#7-linkcss"&gt;
  &lt;/a&gt;
  7) link:css
&lt;/h4&gt;


&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"style.css"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;h4&gt;
  &lt;a href="#8-scriptsrc"&gt;
  &lt;/a&gt;
  8) script:src
&lt;/h4&gt;


&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;h4&gt;
  &lt;a href="#9-h3pp"&gt;
  &lt;/a&gt;
  9) h3+p+p
&lt;/h4&gt;


&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;h3&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/h3&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;h4&gt;
  &lt;a href="#10-ulgtli3p3"&gt;
  &lt;/a&gt;
  10) ul&amp;gt;li*3^p*3
&lt;/h4&gt;


&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;h4&gt;
  &lt;a href="#11-ulgtli4"&gt;
  &lt;/a&gt;
  11) ul&amp;gt;li*4
&lt;/h4&gt;


&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;h4&gt;
  &lt;a href="#12-h3ulgtli3h3"&gt;
  &lt;/a&gt;
  12) h3+(ul&amp;gt;li*3)+h3
&lt;/h4&gt;


&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;h3&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/h3&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;h3&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/h3&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;h4&gt;
  &lt;a href="#13-lilistitem3"&gt;
  &lt;/a&gt;
  13) li.list-item-$*3
&lt;/h4&gt;


&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;li&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"list-item-1"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;li&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"list-item-2"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;li&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"list-item-3"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>css</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>JavaScript (Lexical Structure)</title>
      <author>Clean Code Studio</author>
      <pubDate>Mon, 02 Aug 2021 12:52:08 +0000</pubDate>
      <link>https://dev.to/cleancodestudio/javascript-lexical-structure-3g32</link>
      <guid>https://dev.to/cleancodestudio/javascript-lexical-structure-3g32</guid>
      <description>&lt;div class="ltag__user ltag__user__id__386677"&gt;
  
    .ltag__user__id__386677 .follow-action-button {
      background-color: #339d15 !important;
      color: #ffffff !important;
      border-color: #339d15 !important;
    }
  
    &lt;a href="/cleancodestudio" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iaD-SiIM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--uL9Viyw2--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/386677/50ab5359-8342-4fc0-961a-04bb95957fa1.jpg" alt="cleancodestudio image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/cleancodestudio"&gt;Clean Code Studio&lt;/a&gt;Follow
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/cleancodestudio"&gt;Clean Code Clean Life ~ Simplify&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;The Lexical Structure of a software language:&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;"Specifies a set of basic rules defining how code should or could be written"&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As one of the world's most misunderstood programming language as well as a software language with some weird oddities, there are many questions that come up about what is best practice when it comes to writing JavaScript. In this blog we're going to dive into the &lt;strong&gt;Lexical structure&lt;/strong&gt; of JavaScript. Lexical Structure simply specifies a set of basic rules defining how code should be written in a given language.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#unicode"&gt;
  &lt;/a&gt;
  Unicode
&lt;/h3&gt;




&lt;p&gt;JavaScript is written in Unicode. What's this mean? Well, one of the cool, lesser used, and generally considered a poor or bad practice is that we can actually use emojis as variable names. We can use emojis as variable names because JavaScript is written in Unicode.  More importantly, you can write identifiers in any language, for example, Japanese or Chinese, with some rules.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#optional-semicolon"&gt;
  &lt;/a&gt;
  Optional Semicolon
&lt;/h3&gt;




&lt;p&gt;In JavaScript (and most other languages) the semicolon is used to separate one given statement from another. What's weird about JavaScript is that this semi-colon is optional. Personally, I opt out of using the semi-colon and just write my statements on two separate lines. Any two statements that are written on the same line will always need to utilize a semi-colon to separate them - but this in itself is considered bad practice. &lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#whitespaces-and-line-breaks"&gt;
  &lt;/a&gt;
  Whitespaces and Line Breaks
&lt;/h3&gt;




&lt;p&gt;In JavaScript, white space is &lt;strong&gt;NOT&lt;/strong&gt; considered as anything meaningful. Spaces and line breaks can be added as you see fit.&lt;/p&gt;

&lt;p&gt;For example&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="nx"&gt;axios&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;endpoint&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;errors&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;errors&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;can also be written as&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="nx"&gt;axios&lt;/span&gt;

&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;endpoint&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;errors&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;errors&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;or as&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;axios&lt;/span&gt;

&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;endpoint&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;errors&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;errors&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;JavaScript doesn't care about the white space. Personally, I'll go about the former statement using the following syntax.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;axios&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;endpoint&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
     &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;errors&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;errors&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;In the real world, you'll definitely want to keep a well-defined style and adhere to that commonly used style. You can and in larger project should enforce this style using a linter or a styling tool like &lt;em&gt;Prettier&lt;/em&gt;.&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#case-sensitive"&gt;
  &lt;/a&gt;
  Case Sensitive
&lt;/h3&gt;



&lt;p&gt;JavaScript is case sensitive. What's this mean for a software language? If you have two variables spelling the same word and one is capitalized while the other is not - then these are considered two different variables.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;helloWorld&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;example&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;HelloWorld&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;heyooo&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;code&gt;HelloWorld&lt;/code&gt; and &lt;code&gt;helloWorld&lt;/code&gt; are two different variables because JS is case sensitive.&lt;/p&gt;

&lt;p&gt;Keywords, variables, function names, and other identifiers must always be typed with a consistent capitalization of letters to be or mean the same thing.&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#comments"&gt;
  &lt;/a&gt;
  Comments
&lt;/h3&gt;



&lt;p&gt;Good old comments. In JavaScript we have two types of comments we can utilize or call upon to add notes that are functionally meaningful within our code.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Single Line Comments&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// this is a single line comment&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Multiple Line Comments&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="cm"&gt;/*
  This is a multiple line
  comment that we can
  use to write a lot 
  of stuff when
  we need to.
*/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#literals-and-identifiers"&gt;
  &lt;/a&gt;
  Literals and Identifiers
&lt;/h3&gt;



&lt;p&gt;&lt;strong&gt;Literals&lt;/strong&gt; are defined as a value that is written within the source code. &lt;/p&gt;

&lt;p&gt;For example, a string, a number, a Boolean, an object literal, or an array literal are all literals.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="c1"&gt;// a number literal&lt;/span&gt;
&lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="c1"&gt;// a Boolean literal&lt;/span&gt;
&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;hey&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="c1"&gt;// a string literal&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;// an array literal&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nl"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;sarah&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="c1"&gt;// an object literal&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;An &lt;strong&gt;identifier&lt;/strong&gt; is simply a sequence of characters used to identify a variable, function, or an object. An &lt;strong&gt;identifier&lt;/strong&gt; can start with a letter, dollar sign ($), underscore (_), and may also contain digits. Using unicode, a letter can be considered any allowed char - thus we can also use an emoji. Another way to understand what an &lt;strong&gt;identifier&lt;/strong&gt; means is to simply ask yourself what allowed variables names can I use in this language.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;Name&lt;/span&gt;
&lt;span class="nx"&gt;name&lt;/span&gt;
&lt;span class="nx"&gt;NAME&lt;/span&gt;
&lt;span class="nx"&gt;_name&lt;/span&gt;
&lt;span class="nx"&gt;$name&lt;/span&gt;
&lt;span class="err"&gt;üòÑ&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Are all allowed variable names - aka allowed identifiers within JavaScript. &lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#reserved-words"&gt;
  &lt;/a&gt;
  Reserved Words
&lt;/h3&gt;



&lt;p&gt;Most (if not every) software language has a list of &lt;strong&gt;reserved words&lt;/strong&gt;. These &lt;strong&gt;reserved words&lt;/strong&gt; do special things that allow the software language to work properly. In JavaScript we have a list of &lt;strong&gt;Reserved Words&lt;/strong&gt; that are not allowed to be used as identifiers due to the language saving these words to implement special functionality. &lt;/p&gt;

&lt;p&gt;Some &lt;strong&gt;Reserved Words&lt;/strong&gt; in JavaScript include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;abstract&lt;/li&gt;
&lt;li&gt;arguments&lt;/li&gt;
&lt;li&gt;boolean&lt;/li&gt;
&lt;li&gt;break&lt;/li&gt;
&lt;li&gt;byte&lt;/li&gt;
&lt;li&gt;case&lt;/li&gt;
&lt;li&gt;catch&lt;/li&gt;
&lt;li&gt;char&lt;/li&gt;
&lt;li&gt;class&lt;/li&gt;
&lt;li&gt;const&lt;/li&gt;
&lt;li&gt;continue&lt;/li&gt;
&lt;li&gt;debugger&lt;/li&gt;
&lt;li&gt;default&lt;/li&gt;
&lt;li&gt;delete&lt;/li&gt;
&lt;li&gt;do&lt;/li&gt;
&lt;li&gt;double&lt;/li&gt;
&lt;li&gt;else&lt;/li&gt;
&lt;li&gt;enum&lt;/li&gt;
&lt;li&gt;eval&lt;/li&gt;
&lt;li&gt;export&lt;/li&gt;
&lt;li&gt;float&lt;/li&gt;
&lt;li&gt;extends&lt;/li&gt;
&lt;li&gt;false&lt;/li&gt;
&lt;li&gt;function&lt;/li&gt;
&lt;li&gt;final&lt;/li&gt;
&lt;li&gt;goto&lt;/li&gt;
&lt;li&gt;if&lt;/li&gt;
&lt;li&gt;finally&lt;/li&gt;
&lt;li&gt;float&lt;/li&gt;
&lt;li&gt;implements&lt;/li&gt;
&lt;li&gt;yield&lt;/li&gt;
&lt;li&gt;import&lt;/li&gt;
&lt;li&gt;in &lt;/li&gt;
&lt;li&gt;instanceof&lt;/li&gt;
&lt;li&gt;int&lt;/li&gt;
&lt;li&gt;interface&lt;/li&gt;
&lt;li&gt;let&lt;/li&gt;
&lt;li&gt;package&lt;/li&gt;
&lt;li&gt;private&lt;/li&gt;
&lt;li&gt;lang&lt;/li&gt;
&lt;li&gt;native&lt;/li&gt;
&lt;li&gt;new&lt;/li&gt;
&lt;li&gt;null&lt;/li&gt;
&lt;li&gt;protected&lt;/li&gt;
&lt;li&gt;public&lt;/li&gt;
&lt;li&gt;return&lt;/li&gt;
&lt;li&gt;short&lt;/li&gt;
&lt;li&gt;static&lt;/li&gt;
&lt;li&gt;super&lt;/li&gt;
&lt;li&gt;switch&lt;/li&gt;
&lt;li&gt;synchronized&lt;/li&gt;
&lt;li&gt;this&lt;/li&gt;
&lt;li&gt;throw&lt;/li&gt;
&lt;li&gt;throws&lt;/li&gt;
&lt;li&gt;transient&lt;/li&gt;
&lt;li&gt;true&lt;/li&gt;
&lt;li&gt;try&lt;/li&gt;
&lt;li&gt;typeof&lt;/li&gt;
&lt;li&gt;var
-void&lt;/li&gt;
&lt;li&gt;volatile&lt;/li&gt;
&lt;li&gt;while&lt;/li&gt;
&lt;li&gt;with&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Note, that not all reserved words do something within JavaScript currently. Many of these reserved words are simply marked as unusable by the language so that future versions of JavaScript where these reserved words add behavior to JavaScript won't cause legacy applications of JavaScript programs to break or need to be changed because they used the keywords that now do something as identifiers before these keywords were able to do anything within JS.&lt;/p&gt;


&lt;div class="ltag__user ltag__user__id__386677"&gt;
  
    .ltag__user__id__386677 .follow-action-button {
      background-color: #339d15 !important;
      color: #ffffff !important;
      border-color: #339d15 !important;
    }
  
    &lt;a href="/cleancodestudio" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iaD-SiIM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--uL9Viyw2--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/386677/50ab5359-8342-4fc0-961a-04bb95957fa1.jpg" alt="cleancodestudio image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/cleancodestudio"&gt;Clean Code Studio&lt;/a&gt;Follow
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/cleancodestudio"&gt;Clean Code Clean Life ~ Simplify&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;



</description>
      <category>javascript</category>
      <category>coding</category>
      <category>programming</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Don't make these mistakes when applying for a job</title>
      <author>Alvaro Montoro</author>
      <pubDate>Mon, 02 Aug 2021 12:38:11 +0000</pubDate>
      <link>https://dev.to/alvaromontoro/don-t-make-these-mistakes-when-applying-for-a-job-39oc</link>
      <guid>https://dev.to/alvaromontoro/don-t-make-these-mistakes-when-applying-for-a-job-39oc</guid>
      <description>&lt;p&gt;We've had a couple of openings on our team, and I have been reviewing resumes and running pre-screenings and interviews lately. It's one of the first times that I am fully on this side of the interviewing process, and so far, it has been an insightful and rewarding experience.&lt;/p&gt;

&lt;p&gt;I found a series of "common" mistakes that different candidates made during the hiring process. Some were unfortunate human errors, others were attempts to cheat the system... and they raised eyebrows.&lt;/p&gt;

&lt;p&gt;Right now, it's a great job market for developers, and you probably won't have much trouble finding a new position. Still, try to avoid these mistakes when applying for a job:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Don't forget to attach your resume&lt;/li&gt;
&lt;li&gt;Don't send the wrong resume&lt;/li&gt;
&lt;li&gt;Don't have everyone else's resume&lt;/li&gt;
&lt;li&gt;Don't link obsolete/unused social media&lt;/li&gt;
&lt;li&gt;Don't copy-paste your test answers&lt;/li&gt;
&lt;li&gt;Don't sell yourself short&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#1-dont-forget-to-attach-your-resume"&gt;
  &lt;/a&gt;
  1. Don't forget to attach your resume
&lt;/h2&gt;

&lt;p&gt;Sounds ridiculous and far-fetched? Not so much. &lt;strong&gt;Around 5% of the candidates did not attach their resumes to the application&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;In some cases, it was not their fault: it was the system they used to apply. Job sites that claim to "submit your profile" may not integrate correctly and send the information, and without a file to review, the only thing we get is a name and/or email.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SoG0Pag6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cjfoydbbhk4zkqmhkif9.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SoG0Pag6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cjfoydbbhk4zkqmhkif9.jpg" alt="Man looks desperately at computer"&gt;&lt;/a&gt;&lt;/p&gt;
No resume = No application (picture by &lt;a href="https://www.pexels.com/photo/man-in-white-shirt-using-macbook-pro-52608/"&gt;Tim Gouw&lt;/a&gt;)&lt;br&gt;¬†



&lt;p&gt;Initially, I would contact the candidates asking for their resumes... but eventually stopped. Of course, it's not the candidate's fault, but I couldn't be chasing them when I already had many other profiles to review.&lt;/p&gt;

&lt;p&gt;Did I lose great candidates because of that? Maybe. Could I lose great candidates with an attached resume by wasting time chasing other candidates without an attached resume? Probably. It's not fair for anyone.&lt;/p&gt;

&lt;p&gt;When you apply for a job, make sure that the system you use has your resume on file. If not, there's a chance we won't be getting anything at all.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-dont-send-the-wrong-resume"&gt;
  &lt;/a&gt;
  2. Don't send the wrong resume
&lt;/h2&gt;

&lt;p&gt;It is a bit confusing ‚Äìand suspicious‚Äì when John Doe from Tennessee sends the resume of Michael Smith from Texas (names and locations invented).&lt;/p&gt;

&lt;p&gt;I am not talking about people submitting their resumes with nicknames or their "American names" (&lt;a href="https://www.huffpost.com/entry/jose-joe-job-discrimination_n_5753880"&gt;unfortunately, there's still discrimination and using an &lt;em&gt;easier&lt;/em&gt; name opens many doors&lt;/a&gt;), even I have done it in the past. I am talking about attaching the resume of a completely different person from a completely different place and a completely different background.&lt;/p&gt;

&lt;p&gt;I have seen this a couple of times, and it has been awkward. Especially when one of the profiles matched the job perfectly while the other was completely unrelated (still within IT).&lt;/p&gt;

&lt;p&gt;While talking about wrong names, if you add a cover letter (most people don't), reread it before submitting it with your application. It looks kind of bad when you add a cover letter with the wrong company's name.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-dont-have-everyone-elses-resume"&gt;
  &lt;/a&gt;
  3. Don't have everyone else's resume
&lt;/h2&gt;

&lt;p&gt;This point may be more relevant for positions that require a certain level of creativity, but to some extent, it applies to everyone.&lt;/p&gt;

&lt;p&gt;Many resumes have the same template (and almost the same content, too!). As a result, they don't stand out. On the other hand, candidates that have a more original resume are easier to remember.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AkZtUbqi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rbnsv3lc39xe0bjonodu.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AkZtUbqi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rbnsv3lc39xe0bjonodu.jpg" alt="A field full of yellow tulips with a single red tulip focused and centered"&gt;&lt;/a&gt;&lt;/p&gt;
These tulips are equally beautiful, but you'll remember only one (picture by &lt;a href="https://unsplash.com/photos/l37N7a1lL6w"&gt;Rupert Britton&lt;/a&gt;)&lt;br&gt;¬†



&lt;p&gt;After seeing the same resumes repeatedly, most of them with a similar structure, names, and experiences become blurry. It is difficult to tell one apart from the other. Spice your resume up! Add color, use a different template, different fonts and icons...&lt;/p&gt;

&lt;p&gt;In some cases, this is not possible because the company requires a specific format. &lt;strong&gt;This point is not only for presentation; it's about content, too&lt;/strong&gt;. There's always something that you can add to stand out. &lt;/p&gt;

&lt;p&gt;For a long time, I listed on my resume some experience as a cartoonist at a local/university newspaper. Going to interviews, I was often welcomed with "&lt;em&gt;Ah! You are the guy who draws for the newspaper&lt;/em&gt;". My experience was similar to everyone else's, but I had an edge. Something different and quirky that made me stand out and made me memorable.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-dont-link-obsoleteunused-social-media"&gt;
  &lt;/a&gt;
  4. Don't link obsolete/unused social media
&lt;/h2&gt;

&lt;p&gt;If you add links to your social media profiles and accounts, chances are we are going to check them. And if they are empty or haven't been updated for 10-15 years, they will leave a sour impression.&lt;/p&gt;

&lt;p&gt;Seriously, why link your Github profile if you only have a repo that hasn't been updated in over a decade? Or your empty LinkedIn? Or a Twitter account with an egg photo and a single tweet from 4 years ago? It won't tell me anything good. &lt;/p&gt;

&lt;p&gt;For developers, Github is an interesting case. They (we) rush to put a la link on their resume, but then the profile is empty or has zero contributions, or (IMHO, even worse) they have way too many contributions.&lt;/p&gt;

&lt;p&gt;One time, we had a candidate who created a script that automatically generated dummy commits and pushes to a repo. That way, their contribution chart looked unrealistically dark green. But, in reality, his unique contribution was... a nicely developed script that generated dummy commits and pushes.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XiIMyp9o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j6ruhcohoqx1laxs78no.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XiIMyp9o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j6ruhcohoqx1laxs78no.jpg" alt="Screenshot of two contribution charts (squares where light color means fewer contributions and dark means lots of contributions). One looks spotty, with more light than dark, many days without contributions. The other looks completely dark. There's a text saying this (arrow pointing to the spotty chart) is better than this (arrow pointing to the full chart)"&gt;&lt;/a&gt;&lt;/p&gt;
One of these contribution charts is fake... I wonder which one?&lt;br&gt;¬†



&lt;p&gt;I personally love seeing what people develop on Github. It won't affect their eligibility if they don't have anything, but it may make their lives easier. That's because people tend to be more comfortable talking about their passions, and if I see an interesting project, I will likely ask about it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-dont-copypaste-your-test-answers"&gt;
  &lt;/a&gt;
  5. Don't copy-paste your test answers
&lt;/h2&gt;

&lt;p&gt;...or, at least, be smart about it.&lt;/p&gt;

&lt;p&gt;If you get a take-home programming test, don't just copy-paste the answers senselessly from the Internet. &lt;strong&gt;Google-foo is a great skill to have&lt;/strong&gt; (I think knowing how to find information online is essential and don't have any problem with candidates searching online on interviews), but remember: interviewers also have it... and they have anti-plagiarism software that will flag your results, too.&lt;/p&gt;

&lt;p&gt;In our team, we perform small programming tests on &lt;a href="https://www.hackerrank.com/"&gt;HackerRank&lt;/a&gt;, and as part of the results, we get a plagiarism detection report. And it doesn't look too good if the algorithm flagged all the candidate's answers.&lt;/p&gt;

&lt;p&gt;Plus, if/when you get to the next stage, you may be asked to explain the code later. It is ok if you copied it, but at least you should understand it and be able to explain it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-dont-sell-yourself-short"&gt;
  &lt;/a&gt;
  6. Don't sell yourself short
&lt;/h2&gt;

&lt;p&gt;We had some candidates with 15 relevant years of experience applying to positions requiring 2-4 years. Unfortunately, those candidates were almost automatically discarded by the system. This is because their expectations never match the job description, and convincing Human Resources (HR) to upgrade an open position is tough.&lt;/p&gt;

&lt;p&gt;There are cases in which this experience discrepancy may be justified: people changing careers or trying a different field within software development... but outside of those and a little more, hiring candidates with too much experience doesn't normally fly.&lt;/p&gt;

&lt;p&gt;Be realistic, and don't sell yourself short. If you have the knowledge and experience to be at a higher level, don't apply to lower levels.&lt;/p&gt;

&lt;p&gt;In contrast to the point above, &lt;strong&gt;don't be scared to apply if you don't match all the requirements&lt;/strong&gt;; you may still be a perfect match and get the job. Hiring a candidate with less experience but promising skills is an easier sell to HR than the opposite.&lt;/p&gt;

&lt;p&gt;In the end, it all boils down to: don't sell yourself short and aim high. If you are a match, great. If you are not, the company will tell you if there's a lower position that you would fit into.&lt;/p&gt;




&lt;p&gt;Cover image by &lt;a href="https://www.pexels.com/photo/upset-young-black-guy-covering-face-with-hand-while-working-remotely-on-netbook-5699826/"&gt;Alex Green on Pexels&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>career</category>
      <category>discuss</category>
    </item>
    <item>
      <title>What is Polymorphism? - Explaining Polymorphism to a Five Year Old</title>
      <author>Kingsley Ubah</author>
      <pubDate>Mon, 02 Aug 2021 12:36:13 +0000</pubDate>
      <link>https://dev.to/ubahthebuilder/what-is-polymorphism-explaining-polymorphism-to-a-five-year-old-12dg</link>
      <guid>https://dev.to/ubahthebuilder/what-is-polymorphism-explaining-polymorphism-to-a-five-year-old-12dg</guid>
      <description>&lt;p&gt;In class-oriented languages, a class is simply an organized code which acts as a template or blueprint for creating objects. A &lt;strong&gt;parent class&lt;/strong&gt; can also be ‚Äòcopied‚Äô to create a &lt;strong&gt;child class&lt;/strong&gt;. You can think of the parent (super) and child (sub) classes in the same way you would think of the relationship between a real-life parent and its child. Additionally, you could see it as the relationship between more abstract concepts or objects with more specializaed ones, like a superset and subset.&lt;/p&gt;

&lt;p&gt;When a child is born, the characteristics of the parent are copied into the child. In other words, the child inherits behaviours from the parent. This is known as &lt;strong&gt;class inheritance&lt;/strong&gt; in class-oriented languages. Let‚Äôs see some code illustrations:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="c1"&gt;// Abstract Class: An Aircraft&lt;/span&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Aircraft&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;wings&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;engines&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;wheels&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;wings&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;wings&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;engines&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;engines&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;wheels&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;wheels&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="c1"&gt;// Start the engine&lt;/span&gt;
  &lt;span class="nx"&gt;start&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`turning on my &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;engines&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; engines!`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="c1"&gt;// Stand &lt;/span&gt;
  &lt;span class="nx"&gt;stand&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`standing on my &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;wheels&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; tires!`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="c1"&gt;// Run on the tracks&lt;/span&gt;
  &lt;span class="nx"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`moving down the runway on my &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;wheels&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; tires!`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Fly in the sky&lt;/span&gt;
 &lt;span class="nx"&gt;fly&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`soaring the sky on my &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;wings&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; wings!`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// A Child Class: A Helicopter&lt;/span&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Helicopter&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Aircraft&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;engines&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;wheels&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;propellers&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;engines&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;wheels&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// call the super class constructor and pass in the engines and wheels parameter&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;propellers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;propellers&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;propel&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`spinning my &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;propellers&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; propellers!`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;lift&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stand&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;start&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;propel&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;slowly climbing up thanks to my spinning propellers!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Another Child Class: An Aeroplane&lt;/span&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Aeroplane&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Aircraft&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;wings&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;engines&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;wheels&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;passengers&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;engines&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;wheels&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// call the super class constructor and pass in the name parameter&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;passengers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;passengers&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="nx"&gt;start&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`turning on my &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;engines&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; balanced engines!`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;

  &lt;span class="nx"&gt;takeOff&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stand&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;start&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;run&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fly&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`all of the &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;passengers&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; passengers are screaming in delight!`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We define the &lt;code&gt;Aircraft&lt;/code&gt; class to assume two wings, two engines, three wheels, a way to start it's engine, stand, run and also a way to fly. But in real-life cases you wouldn‚Äôt ever manufacture just a generic ‚Äúaircraft,‚Äù so it‚Äôs really just an abstract concept at this&lt;br&gt;
point. Hence, then we define two specific kinds of aircrafts: &lt;strong&gt;a helicopter&lt;/strong&gt;  and &lt;strong&gt;an aeroplane.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;They each inherit some of the general characteristics of an aircraft, but then each of them tailor the characteristics appropriately for themselves. A helicopter needs&lt;br&gt;
two propellers and has to propel while taking off, and a aeroplane is assumed to need three engines because it‚Äôs actually conveying lots of passengers.&lt;/p&gt;

&lt;p&gt;Polymorphism implies the existence of a property or method across two or more classes in various levels of the inheritance chain. It involves the referencing of a property or method from classes higher on the inheritance hierarchy. &lt;/p&gt;

&lt;p&gt;In most class-oriented languages, including ES6 &lt;code&gt;class&lt;/code&gt;, this is achieved by calling the &lt;code&gt;super()&lt;/code&gt; keyword along with the name of the property of method you want to access, from any method in the child class. When you do this, the JavaScript engine looks one step up into a parent class for that method. &lt;/p&gt;

&lt;p&gt;Now, let us consider one interesting implication of polymorphism in our class examples. The &lt;code&gt;start()&lt;/code&gt; method was defined in both the &lt;code&gt;Helicopter&lt;/code&gt; class and the &lt;code&gt;Aeroplane&lt;/code&gt;  class. When you define a method of same name in both parent class and child class, then you are said to have overridden that of the parent class. Now if you observed well, you would notice that the &lt;code&gt;takeoff()&lt;/code&gt; method made a reference to the &lt;code&gt;start()&lt;/code&gt; which, as I said, exists in both parent and child. Which version of start() do you think the JavaScript engine will use? Is it the one in &lt;code&gt;Aircraft&lt;/code&gt; or the one in &lt;code&gt;Aeroplane&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This brings us to one vital thing to always keep in mind about polymorphism:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;When you make a reference to any property or method from a subclass, the engine first checks to see if that method already exists in the current subsclass. If it exists, the engine uses that method.  If it doesn‚Äôt exist, the engine ‚Äúlooks up‚Äù the next (parent) class for it, and that goes on. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now, to answer the question, the JavaScript engine will use the &lt;code&gt;Aeroplane&lt;/code&gt;s  version of &lt;code&gt;start()&lt;/code&gt;, which will resolve to 3 engines since a passenger plane has 3:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;plane&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Aeroplane&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;117&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;plane&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;takeOff&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; 

&lt;span class="cm"&gt;/* turning on my 3 balanced engines!
   Standing on my 3 wheels
   Moving down the track on my 3 tires 
   Soaring the sky on my 2 wings
   all the 117 passengers are screaming in delight */&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If we had instantiated the generic &lt;code&gt;Aircraft&lt;/code&gt; class instead, then its version of &lt;br&gt;
&lt;code&gt;start()&lt;/code&gt; would have been called instead:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;aircraft&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Aircraft&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;// Nothing passed  because we had set default parameters&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;aircraft&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;start&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="c1"&gt;// turning on my two engines!&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;True to its name, polymorphism allows you define and use properties and methods in many forms. In our case, The &lt;code&gt;start()&lt;/code&gt; method has two forms, and the form which gets used depends on the class which gets instantiated.&lt;/p&gt;

&lt;p&gt;Polymorphism is a very useful feature of Object oriented programming. You can create one single interface which you can reuse in multiple subclasses. You can save yourself time and write far less code. &lt;/p&gt;

&lt;p&gt;When it comes to polymorphism and inheritance in JavaScript, there is an important behaviour to understand: the &lt;code&gt;[[Prototype]]&lt;/code&gt; Mechanism. This is how the engine traverses upwards looking for the existence of a property or method on the superclasses, up until it reaches the prototype object.&lt;/p&gt;

&lt;p&gt;What is the &lt;code&gt;[[Prototype]]&lt;/code&gt; mechanism? We‚Äôll leave that for our next episode of the Explain like I‚Äôm 5 series.&lt;/p&gt;

&lt;p&gt;YOU MAY ALSO LIKE:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://ubahthebuilder.tech/5-habits-to-avoid-as-a-web-developer"&gt;5 Habits To Avoid as a Web Developer&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://ubahthebuilder.tech/5-habits-to-avoid-as-a-web-developer"&gt;7 Good Reasons To Start Blogging as a Software Developer&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;P/S: If you like articles like this follow this blog to never miss an update. If you are learning JavaScript, you‚Äôll definitely want to check out my  &lt;a href="//gum.co/js-50"&gt;JavaScript Notes.&lt;/a&gt; &lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>javascript</category>
      <category>programming</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Javascript DOM</title>
      <author>kirtymeena</author>
      <pubDate>Mon, 02 Aug 2021 12:31:19 +0000</pubDate>
      <link>https://dev.to/kirtymeena/javascript-dom-4kg3</link>
      <guid>https://dev.to/kirtymeena/javascript-dom-4kg3</guid>
      <description>&lt;p&gt;This Post will cover the basics of selecting elements and manipulating elements in the DOM.&lt;/p&gt;

&lt;h1&gt;What is DOM &lt;/h1&gt;

&lt;p&gt;DOM stands for Document Object Model. It is an object oriented representation of a web page.&lt;/p&gt;

&lt;p&gt;DOM represents the HTML or XML documents as tree of nodes .&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KsVjcqr1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ylo2rbodj1ju7a5ydfc2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KsVjcqr1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ylo2rbodj1ju7a5ydfc2.png" alt="1 ZVg2USWwvFeRcnT2It99QQ"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's understand the above image.&lt;br&gt;
&lt;/p&gt;
&lt;li&gt;Document is the root node.&lt;/li&gt;
&lt;br&gt;
&lt;li&gt;Root node has one child which is the HTML element.&lt;/li&gt;
&lt;br&gt;
&lt;li&gt;Each document can have only one document element.&lt;/li&gt;
&lt;br&gt;
&lt;li&gt;HTML node have two child node elements HEAD and BODY &lt;/li&gt;
&lt;br&gt;
&lt;li&gt;Similarly HEAD and BODY have their child nodes TITLE ,Script and h1 respectively&lt;/li&gt;
&lt;br&gt;
&lt;li&gt;At bottom we have text node which is just a text&lt;/li&gt;
&lt;br&gt;

&lt;p&gt;let's see how we can select and manipulate these nodes.&lt;/p&gt;

&lt;h1&gt;1. &lt;u&gt;Selecting elements&lt;/u&gt;
&lt;/h1&gt;

&lt;p&gt;We'll dicuss 4 ways to select an HTML element&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;getElementById&lt;/li&gt;
&lt;li&gt;getElementByName&lt;/li&gt;
&lt;li&gt;getElementByClass&lt;/li&gt;
&lt;li&gt;QuerySelector&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;b&gt;getElementById&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uAD1Wmhx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7vhb875zr3j4hxp2v1jl.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uAD1Wmhx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7vhb875zr3j4hxp2v1jl.PNG" alt="html"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Div is a HTML element. It has an id attribute, id is used to uniquely identify an element in the DOM.&lt;/p&gt;

&lt;p&gt;To select an element by its id we use document.getElementById() method.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EiHgeo6t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xb0ohnnq28s5k9i70hmi.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EiHgeo6t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xb0ohnnq28s5k9i70hmi.PNG" alt="jscorrect"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;getElementById() returns an element object if an id exists. If there is no element with that id then it will return null.&lt;/p&gt;

&lt;p&gt;Once the element is selected we can manipulate it ,add styles to it.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;getElementByName&lt;/b&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AYrYcC3Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kdpkevt62w2kpm25hcpx.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AYrYcC3Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kdpkevt62w2kpm25hcpx.PNG" alt="html"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Some elements in HTML have name attribute. Unlike id, name doesn't have to be unique.&lt;/p&gt;

&lt;p&gt;Multiple elements can have same name value.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fuJCzOVM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u61j8ew03uj8rtsbje6h.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fuJCzOVM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u61j8ew03uj8rtsbje6h.PNG" alt="js"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;to access element by name we use getElementByName().This will return a NodeList.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;getElementByClass&lt;/b&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vdGxNB_U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7p008fd9rbiguiv745t0.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vdGxNB_U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7p008fd9rbiguiv745t0.PNG" alt="htmlclass"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;HTML elements can have class attribute.To access the element by class we use getElementByClass().This will return HTML collection &lt;br&gt;
 &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eQYgTv1C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7rsug9jis3q7ttprq0e9.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eQYgTv1C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7rsug9jis3q7ttprq0e9.PNG" alt="jsclass"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;querySelector&lt;/b&gt;&lt;br&gt;
It can be used to select elements with id or class.&lt;br&gt;
To select an element by id we use '#' and for class we use '.'&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ePk8hn5M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pdpii2p08mr6vyu3s6s0.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ePk8hn5M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pdpii2p08mr6vyu3s6s0.PNG" alt="selectorjs"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8ZlNcdmb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2twx48q7atr1q9vwfcx9.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8ZlNcdmb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2twx48q7atr1q9vwfcx9.PNG" alt="selectorid"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;2. &lt;u&gt;Manipulating elements&lt;/u&gt;
&lt;/h1&gt;

&lt;p&gt;Now that we know how to select an element from the DOM in manupulating elements we will see how to add or remove an element from the DOM.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Adding new element to the DOM&lt;/b&gt;&lt;br&gt;
To add a new element in the DOM we have to follow 3 steps .&lt;/p&gt;

&lt;p&gt;step 1. creating the new element.&lt;br&gt;
step 2. creating the text node.&lt;br&gt;
step 3. adding element into the DOM.&lt;/p&gt;

&lt;p&gt;let's see how to write javascript for above 3 steps.&lt;br&gt;
&lt;/p&gt;
&lt;li&gt;To create an element we use document.createElement(HTMLtag)&lt;/li&gt;
&lt;br&gt;
&lt;br&gt;


&lt;li&gt;To add a text in it we can use innerHTML="some text" or textContent="some text" (difference between textContent and innerHTML will be discussed later).






&lt;/li&gt;
&lt;li&gt;To add element into the DOM we use document.body.append() or we can also use document.body.appendChild(). The only difference between append and appendChild is append can add text as well as html tag as a node in the DOM but appendChild will only append html tags.&lt;/li&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SaG5gi51--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yivg4ob0obgt7pu5m9vk.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SaG5gi51--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yivg4ob0obgt7pu5m9vk.PNG" alt="addele"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In DOM and style inspector you'll be able to see the div element has been added in the body and inside div element text is added.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IIapQKJ_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5pq4yqajcinjbve3od3d.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IIapQKJ_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5pq4yqajcinjbve3od3d.PNG" alt="console"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Removing elements from the DOM&lt;/b&gt;&lt;br&gt;
To remove an element we first have to select the select by its id,class or name.&lt;/p&gt;

&lt;p&gt;In the below image you can see that there is a span with id bye.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fP4RkG8e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h5b1wcnmjsb2e2nwsrgm.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fP4RkG8e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h5b1wcnmjsb2e2nwsrgm.PNG" alt="Capture"&gt;&lt;/a&gt;&lt;br&gt;
to select and then remove the span below is tha javascript code.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aYuJ2Sz9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/su3vzxbkjle29wgtm1ro.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aYuJ2Sz9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/su3vzxbkjle29wgtm1ro.PNG" alt="Capture2"&gt;&lt;/a&gt;&lt;br&gt;
 To remove we use remove().This will remove the element from the DOM.&lt;/p&gt;

&lt;p&gt;‚úåÔ∏è&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>html</category>
    </item>
    <item>
      <title>Why Ruby on Rails is still a good choice in 2021 (+ helpful resources)</title>
      <author>Monika Ambrozowicz</author>
      <pubDate>Mon, 02 Aug 2021 11:53:21 +0000</pubDate>
      <link>https://dev.to/forestadmin/why-ruby-on-rails-is-still-a-good-choice-in-2021-helpful-resources-2o6j</link>
      <guid>https://dev.to/forestadmin/why-ruby-on-rails-is-still-a-good-choice-in-2021-helpful-resources-2o6j</guid>
      <description>&lt;p&gt;Are you going to launch a successful digital product? In this article, I will show you &lt;strong&gt;why it's still a good idea to use Ruby on Rails&lt;/strong&gt; and what makes developing web applications with this framework so fast and efficient. You will also find a list of Ruby on Rails tutorials and other resources that help you build and iterate. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-ruby-on-rails-can-be-the-best-framework-for-your-next-product"&gt;
  &lt;/a&gt;
  Why Ruby on Rails can be the best framework for your next product
&lt;/h2&gt;

&lt;p&gt;Admittedly, RoR might have slowly declined in popularity but reports of its death are greatly exaggerated. This most popular framework for the Ruby language is still loved by the web startup community for its time efficiency, cost reduction, stability, and security. All of that makes Ruby on Rails perfect for MVP development and beyond. After all, well-known and established platforms such as Shopify, Airbnb, Fiverr, Github, and Imgur, have been built in Ruby on Rails.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cuOkBUIv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3-eu-west-1.amazonaws.com/blog.forestadmin.com/2021/07/tweet-ruby-shopify.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cuOkBUIv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3-eu-west-1.amazonaws.com/blog.forestadmin.com/2021/07/tweet-ruby-shopify.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A tweet from Lawrence Mandel, the Director of Engineering at Shopify.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-makes-developing-in-ruby-on-rails-so-fast"&gt;
  &lt;/a&gt;
  What makes developing in Ruby on Rails so fast?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lTAdh7u_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lvvx4eg9veup445cyd5z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lTAdh7u_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lvvx4eg9veup445cyd5z.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#batteryincluded-framework"&gt;
  &lt;/a&gt;
  Battery-included framework
&lt;/h3&gt;

&lt;p&gt;Ruby on Rails is a complete framework with many out-of-the-box tools readily available. It comes with numerous scripts called generators. They create everything that is necessary to start working on a particular task.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conversion-over-configuration"&gt;
  &lt;/a&gt;
  Conversion over Configuration
&lt;/h3&gt;

&lt;p&gt;Ruby on Rails takes an opinionated approach, which means it operates on the assumption that there is the best way of making things. Its Convention over Configuration paradigm decreases the number of decisions a developer is required to make by offering conventions for handling asset management, routing, stateful data, and more. Basically, it provides the baseline functionality for most web applications.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#layered-structure"&gt;
  &lt;/a&gt;
  Layered structure
&lt;/h3&gt;

&lt;p&gt;Ruby on Rails is based on the Model-View-Controller (MVC) architecture that separates an app‚Äôs logic (located in models) from the routing and presentation of application information. Such a concept is not limited to Ruby on Rails, though. It is also used by Django, ReactJS, AngularFS, and other frameworks. The MCV connects the frontend and the backend. It consists of a:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Model: it handles everything related to the database,&lt;/li&gt;
&lt;li&gt;View: it deals with what users can see in the app,&lt;/li&gt;
&lt;li&gt;Controller: it deals with the requests made by users and returns a result, and talks to the database.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thanks to the MVC, developers don‚Äôt need to make decisions on how to organize the code (at least at the early stage of the product), which saves time and makes assembling an MVP more efficient.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#gems"&gt;
  &lt;/a&gt;
  Gems
&lt;/h3&gt;

&lt;p&gt;Gems are third-party components, ready to download and use for your project. Does your app require registration and authentication? You can set it up with a Devise gem. Data Visualization? RailRoady, Rails Erd, or Ruby/GraphViz are there for you. Database Tools? Database Cleaner is a set of strategies for cleaning your database in Ruby, while PgHero makes Postgres insights easy. There are plenty of gems that support popular frontend frameworks, such as Angular, Vue.js, React.js, and CSS tools. It‚Äôs safe to say that there is a gem for everything, and they save developers tons of time.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#strong-developer-community"&gt;
  &lt;/a&gt;
  Strong developer community
&lt;/h3&gt;

&lt;p&gt;Ruby on Rails is a mature open-source framework, adopted by thousands of developers around the world. Over the years, they have created numerous resources, books, tutorials, and gems. It is relatively easy to find Ruby on Rails developers, and also to train developers who currently work with other technology stacks.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#automated-tests"&gt;
  &lt;/a&gt;
  Automated tests
&lt;/h3&gt;

&lt;p&gt;The above mentioned community strongly encourages developers to build applications Behavior Driven Development (BDD) and Test Driven Development (TDD). In short, with these approaches, developers write automated tests early in the development process. Thanks to that, bugs can be fixed early, which reduces debugging and saves development time.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#internal-tools"&gt;
  &lt;/a&gt;
  Internal Tools
&lt;/h3&gt;

&lt;p&gt;Ruby on Rails is often the first choice to build e-commerce applications and SaaS products, especially if the goal is to have an up and running application as fast as possible. Neither e-commerce nor a robust SaaS software can enter the market without internal tools that handle displaying articles, orders, payments, shipping, returns, inventory management, transaction monitoring, data manipulation, and so on.&lt;/p&gt;

&lt;p&gt;In fact, Ruby on Rails has mature admin panel frameworks such as Active Admin or Forest Admin. In this section, we will show you how to build a robust internal tool using Forest Admin. If you‚Äôre interested to see how does it compare to Active Admin, we recommend reading this detailed comparison: &lt;a href="https://blog.forestadmin.com/forest-admin-vs-react-admin/?utm_source=referral&amp;amp;utm_medium=devto&amp;amp;utm_campaign=devto-organic"&gt;Forest Admin vs. Active Admin&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hWHaMXRk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3-eu-west-1.amazonaws.com/blog.forestadmin.com/2021/07/forestadmin-rails.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hWHaMXRk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3-eu-west-1.amazonaws.com/blog.forestadmin.com/2021/07/forestadmin-rails.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Forest Admin UI. You can check &lt;a href="https://app.forestadmin.com/livedemo?utm_source=referral&amp;amp;utm_medium=devto&amp;amp;utm_campaign=devto-organic"&gt;the Forest Admin Live Demo here&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Forest Admin is an off-the-shelf solution that can be easily plugged into your Ruby on Rails application and unlike many open source admin panel templates, it can be fully customized to meet your business needs. Once set up, non-technical teams like sales and customer support can easily make edits to the layout and customize it further according to their specific needs.&lt;/p&gt;

&lt;p&gt;How is that possible? Thanks to the unique Forest Admin architecture. Every internal tool built with Forest Admin is composed of two parts: the frontend and the backend. If you choose an existing Rails application as a data source, your Admin Backened is generated within your app. The admin frontend, on the other hand, is managed on Forest Admin servers. Thanks to that, the data is only hosted on your end and it never transits through Forest Admin servers, and even non-technical team members can easily make changes in the layout.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--B_MBToVd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3-eu-west-1.amazonaws.com/blog.forestadmin.com/2021/07/forest-admin-architecture-rails.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--B_MBToVd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3-eu-west-1.amazonaws.com/blog.forestadmin.com/2021/07/forest-admin-architecture-rails.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
The Admin Backend is a Rails Engine mounted on your application &lt;/p&gt;

&lt;p&gt;Many Forest Admin users built their customer-faced applications with Ruby on Rails, including creators of famous &lt;a href="https://blog.forestadmin.com/how-raspberry-pi-uses-forest-admin-to-manage-resellers/?utm_source=referral&amp;amp;utm_medium=devto&amp;amp;utm_campaign=devto-organic"&gt;Raspberry Pi&lt;/a&gt; computers and a leading French neobank, &lt;a href="https://blog.forestadmin.com/how-the-neobank-qonto-is-reinventing-business-banking-thanks-to-forest-admin/?utm_source=referral&amp;amp;utm_medium=devto&amp;amp;utm_campaign=devto-organic"&gt;Qonto&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;More Case Studies are available on &lt;a href="https://blog.forestadmin.com/tag/case-study/?utm_source=referral&amp;amp;utm_medium=devto&amp;amp;utm_campaign=devto-organic"&gt;Forest Admin blog&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;How to install Forest Admin for Ruby on Rails application&lt;/p&gt;

&lt;p&gt;Installation is hassle-free, using a Forest Admin gem.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://app.forestadmin.com/signup?utm_source=referral&amp;amp;utm_medium=devto&amp;amp;utm_campaign=devto-organic"&gt;Sign up for free&lt;/a&gt;. No credit card is required.&lt;/li&gt;
&lt;li&gt;Forest Admin supports various data sources, so you need to choose Ruby on Rails as yours.&lt;/li&gt;
&lt;li&gt;Verify the application URL (&lt;a href="http://localhost:3000"&gt;http://localhost:3000&lt;/a&gt; by default).&lt;/li&gt;
&lt;li&gt;Add Forest Admin gem to your application's Gemfile using the gem 'forest_liana' command.&lt;/li&gt;
&lt;li&gt;Bundle it using the bundle install command.&lt;/li&gt;
&lt;li&gt;Install the gem using the rails g forest_liana:install  command ‚Äî an environment key is provided in the onboarding experience in the first step of the in-app guide.&lt;/li&gt;
&lt;li&gt;Restart your server using the rails s command.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Our own experience shows that Ruby on Rails is a good choice for building reliable, scalable, and secure software, especially SaaS and e-commerce platforms. It is a popular choice for MVPs, but examples of Shopify, Basecamp, Github, Zendesk, and other well-known and established platforms show that an MVP built in Ruby on Rails can easily become a final polished product.&lt;/p&gt;

&lt;p&gt;If we convinced you to build your web application in Ruby on Rails, here is a list of additional resources that will help you start:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ruby-on-rails-resources"&gt;
  &lt;/a&gt;
  Ruby on Rails Resources
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://guides.rubyonrails.org/getting_started.html"&gt;Getting Started with Rails&lt;/a&gt; - the official guide that covers getting up and running with Ruby on Rails in a form of a step-by-step tutorial.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/markets/awesome-ruby"&gt;Awesome Ruby&lt;/a&gt; - a community-driven collection of essentials to build web applications in Ruby on Rails: libraries, tools, frameworks, and software.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.ruby-toolbox.com/"&gt;The Ruby Toolbox&lt;/a&gt; - a comprehensive catalog of Ruby on Rails tools, gems, plug-ins, and resources for developers.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://blog.forestadmin.com/rails-migrations-tricks-guide-code-cheatsheet-included/?utm_source=referral&amp;amp;utm_medium=devto&amp;amp;utm_campaign=devto-organic"&gt;Rails Migrations Tricks (Guide + Code)&lt;/a&gt; - the ultimate guide to Rails migrations.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.digitalocean.com/community/tutorials/how-to-build-a-ruby-on-rails-application"&gt;How To Build a Ruby on Rails Application&lt;/a&gt; - a detailed tutorial from Digital Ocean.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://blog.forestadmin.com/how-raspberry-pi-uses-forest-admin-to-manage-resellers/?utm_source=referral&amp;amp;utm_medium=devto&amp;amp;utm_campaign=devto-organic"&gt;How Raspberry Pi uses Forest Admin&lt;/a&gt; to manage resellers and design partners with Forest Admin and its Ruby on Rails integration - a detailed case study.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.youtube.com/watch?v=fmyvWz5TUWg"&gt;Learn Ruby on Rails&lt;/a&gt; - a 4-hour video tutorial from freeCodeCamp.org&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://blog.forestadmin.com/introducing-in-app-ruby-on-rails-support-on-forest-admin/?utm_source=referral&amp;amp;utm_medium=devto&amp;amp;utm_campaign=devto-organic"&gt;How to install Forest Admin for your Ruby on Rails application&lt;/a&gt;. &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#are-you-looking-for-an-internal-tool-solution-sign-up-on-forest-admin-for-free"&gt;
  &lt;/a&gt;
  Are you looking for an internal tool solution? &lt;a href="https://app.forestadmin.com/signup?utm_source=referral&amp;amp;utm_medium=devto&amp;amp;utm_campaign=devto-organic"&gt;Sign up on Forest Admin for free&lt;/a&gt;.
&lt;/h3&gt;

</description>
    </item>
    <item>
      <title>100+ (Clean Code Studio) Coding Screencasts</title>
      <author>Clean Code Studio</author>
      <pubDate>Mon, 02 Aug 2021 11:50:12 +0000</pubDate>
      <link>https://dev.to/cleancodestudio/100-clean-code-studio-coding-screencasts-2i9a</link>
      <guid>https://dev.to/cleancodestudio/100-clean-code-studio-coding-screencasts-2i9a</guid>
      <description>&lt;h2&gt;
  &lt;a href="#-user-cleancodestudio-"&gt;
  &lt;/a&gt;
  &lt;div class="ltag__user ltag__user__id__386677"&gt;
  
    .ltag__user__id__386677 .follow-action-button {
      background-color: #339d15 !important;
      color: #ffffff !important;
      border-color: #339d15 !important;
    }
  
    &lt;a href="/cleancodestudio" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iaD-SiIM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--uL9Viyw2--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/386677/50ab5359-8342-4fc0-961a-04bb95957fa1.jpg" alt="cleancodestudio image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/cleancodestudio"&gt;Clean Code Studio&lt;/a&gt;Follow
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/cleancodestudio"&gt;Clean Code Clean Life ~ Simplify&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;/h2&gt;

&lt;p&gt;"How to simplify if statements (Refactoring code smells)" &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/fqJiahyRs6A"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Programmers - what we SAY vs. what we MEAN"&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/0Ii5Oim4OGI"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"This is what clean code looks like [tell-tale signs of clean code]" &lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/7UuQcDs86Uo"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Clean Code Studio Live Streaming Test (Messing Around with A Project ~ No Audio)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/8bUJQ_IjrLo"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Vue 3 Crash Course: Lesson 2 ~ Teleportation Portals (Vue 3 Teleport Component)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/hGla9e_b0Zg"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Vue 3 Crash Course: Lesson 1 ~ Setup &amp;amp; Multiple Root Nodes (Aka Fragments)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/Q_9E-euwLm8"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"How to Install Laravel Dusk (Showing Browser During Tests)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/mhEUZ35_fwA"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Install Laravel Homestead (2020 on Windows 10)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/QlIc8j5PNnA"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"[Lesson 17] Laravel Mix (Whoa) ‚úÖ"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/3Pu6QJTWZBY"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"How to Install Sublime Text on Windows 10 (+Bonus Terminal Shortcut)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/985zH6mWzjs"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"How to Install Laravel on Windows 10 (Laragon 2020)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/9GSULOjPW9Y"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Dependency Injection (Simplified)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/tW6UHD81SG0"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"üèé Laravel 7 Fluent Strings. All 48 Methods.  (üöÄ 10 MINUTES!)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/8V91KpmdwYo"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Corona Layoff (Weird Relief).  Boxes, I looked to check, in Search of My Next Gig  (I Start Monday)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/CxCRdY9TeQ8"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"[Lesson 16] ü§î Better than Laravel Blade ForEach?  (Plus Blade's $loop variable, it's quite awesome)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/8Cwpoi9fyjY"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"[Lesson 15] Laravel Blade Foreach ‚úÖ  (Laravel 7: Posts Index &amp;amp; Show Views)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/3exmyL4RdsE"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"[Lesson 14] Integrate HTML Theme into Laravel Blade  (Laravel 7: Themed Views üèñ)" by @CleanCodeStu dio - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/Yp_ZQbJvHi4"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"üåø[Lesson 13] Laravel Blade Layouts (The View in MVC) üåø ‚òò üçÄ"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/SBCS2t2cd5Y"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"60+ Laravel Collection Methods In (Almost) 15 Minutes üèé üöÄ"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/rZvxRQmnw18"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"[Laravel 7 Lesson 12] Factories &amp;amp; Seeders (Seed database with faker data)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/FbARge88vjk"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"[Lesson 3] Laravel Nova Relationships (hasOne, belongsTo, hasMany)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/bSkfvbaYl7Q"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"[Lesson 11] Laravel Migrations (Database Basics)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/2_lMV1laDoU"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"[Lesson 10] Laravel Eloquent Models (Query Builder)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/gtk_cE5tVdE"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"[Lesson 9] Laravel Database Connection + User Interface (Via PhpMyAdmin)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/ij4ZhDiibXY"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"[Lesson 8] Laravel Controllers (Simple to Resourceful)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/x90WXxY6kPo"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"[Lesson 7] Route::view(), fallback, redirect, &amp;amp; redirectPermanent (Laravel 7 From The Ground Up)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/Coyz2XssnwM"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Route Parameters: Required, Optional, &amp;amp; Constraints (Lesson 6: Laravel 7 From The Ground Up)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/KGz6jLUvfvU"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Request Data ~ Ya Mustache It Into Your Views (Lesson 5: Laravel 7 From The Ground Up)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/LBWb0wKQDp8"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Routes &amp;amp; Views The Basics (Laravel 7 From The Ground Up)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/edyf-JMW6vM"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Installing Laravel Valet (Lesson 3: Laravel 7 From The Ground Up)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/VUinIGTR60w"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"The Laravel Installer (Lesson 2 ~ Laravel 7 From The Ground Up)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/N8mSAJk_JQI"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Install Php, Composer, &amp;amp; MySQL (Laravel 7 From The Ground Up)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/R6qMg3lhLco"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"How to become a software Engineer Step-by-step (With or Without a Degree)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/xI8HRVemqpE"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Laravel Nova Resources (Lesson 2)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/-ZNMy0ZS3O8"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Javascript apply, call &amp;amp; bind (Simplified in 2020)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/MsUJxQ6jA68"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"My Local Dev Setup ~ Emails, Cron Jobs, AWS S3 Mock, valid SSL (https), xdebug, etc... (Informal)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/wDFBnZCCCe4"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"14 Must Know JS Array Methods (In 8 minutes)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/oN6VZGGGyP4"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Array.reduce() -The Most POWERFUL [JavaScript] Function"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/WGleM3FeZmU"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Javascript...are you sure? Prototype Chains? Immutable Data? First Class Functions? Js, Really?"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/dkerCYPRxo4"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Built it, life after vue form rabbit whole (vuejs-form package &amp;amp; Laravel Sanctum Gameplan)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/_VgLZK9F5qA"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Laravel's Crazy (Increibly Crazy)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/UljP-d2Y8kw"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Getting a job as a software developer (Let's talk ~ Open Discussion Below)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/HniHYWqHG8Y"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Slim 4 Authentication (Lesson 27 ~ "Flash" Success Messages)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/W8nIVEz429g"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Slim 4 Authentication (Lesson 26 ~ Reset Password Via Email)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/X4omFWhpins"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Slim 4 Authentication (Lesson 25: Mailable Part 2)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/IVaKVH-Bt5o"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Slim 4 Authentication (Lesson 24: Mailable Part 1)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/C0t5iqR9Qvo"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Slim 4 Authentication (Lesson 23 ~ Reset Password Foundation)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/sWpvb4g47LQ"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Slim 4 Authentication (Lesson 22: Controllers Cleanup)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/08pi9r2raHg"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Slim 4 Authentication (Lesson 21: Old Input Form Population)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/fxQS_RTvthg"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Slim 4 Authentication (Lesson 20: "Flash" Errors To Form &amp;amp; Validation Rules Dependent on Database)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/PPjaIuBXYDQ"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Slim 4 Authentication (Lesson 19: Validation Messages &amp;amp; Syfony Sessions)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/610jL5ZyOkk"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Slim 4 Authentication (Lesson 18: Request Validation)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/N6RDYRrZJVQ"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Slim 4 Authentication (Lesson 17: Csrf Verification)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/oEnJthFygII"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Slim 4 Authentication (Lesson 16: Preparatory Refactor)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/RZN7CV9Jfkg"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Slim 4 Authentication (Lesson 15: Guest &amp;amp; Auth Redirect Middleware)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/R4qQofznCHA"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Slim 4 Authentication (Lesson 14 ~ Register, Login &amp;amp; Logout)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/l662In2_J1w"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Slim 4 Authentication (Lesson 13: Tailwind CSS Setup)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/1F3iI9Vt-GE"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Slim 4 Authentication (Lesson 12: Vue js front-end)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/aNAMUttK-6s"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Slim 4 Authentication (Lesson 11: Slim Console Commands)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/ASCk7vZN5L8"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Php __isset Magic Method  üßô‚Äç‚ôÇÔ∏è(Lesson 7: Php Magic Methods)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/bnHGfLNEy5M"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Slim 4 Authentication (Lesson 10: Database Migrations, Seeds, &amp;amp; Factories)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/90gukDJXO_w"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Slim 4 Authentication (Lesson 9: Eloquent DB Setup)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/R3V-cC6jdMM"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Slim 4 Authentication (Lesson 8: Http Kernel)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/bVBvguUfWy8"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Slim 4 Authentication (Lesson 7: Env Variables Files)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/hWVDTOD0sP8"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Slim 4 Authentication (Lesson 6: Pretty Whoops Error Page)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/cuFpVy6Y-IE"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Slim Authentication (Lesson 5: Service Providers)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/2L0M3lL3jCY"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Authentication with Slim 4 (Lesson 4: Controllers)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/udxzHfjZyrA"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Php __get &amp;amp; __set Methods üßô‚Äç‚ôÇÔ∏è(Lesson 6: Php Magic Methods)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/ZDWMeA0sxLI"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Php Foreach Loops (Simplified in 2020)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/Pex501nfK8g"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Authentication with Slim 4 (Lesson 3: Psr-4 Autoloading)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/phOGtIcCYPg"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Authentication with Slim 4 (Lesson 2: Views With Blade)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/-OGSybfn8zc"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Authentication With Slim 4 (Lesson 1: Setup Slim)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/3Hg2WPwDyG8"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Php __invoke Method üßô‚Äç‚ôÇÔ∏è(Lesson 5: Php Magic Methods)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/ZXbGfMcFzUM"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Php _callStatic Method üßô‚Äç‚ôÇÔ∏è(Lesson 4: Php Magic Methods)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/SFdptDojwJ8"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Php _call üßô‚Äç‚ôÇÔ∏è(Lesson 3: Php Magic Methods)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/LH-UCiPseP8"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"How to edit wikipedia (Simplified in 2020)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/-9FH6XAeNC8"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Php Destruct üßô‚Äç‚ôÇÔ∏è(Lesson 2: Php Magic Methods)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/f8SeAh_pZ80"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Php Constructors (üßô‚Äç‚ôÇÔ∏èLesson 1: Php Magic Methods)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/4MLA6ssPHGA"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Laravel Nova Installation ü§üüèª(Simplified in 2020)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/t8FCVEV0ll0"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Laravel Facades ü§Ø(Simplified in 2021)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/Go0JBT98uOw"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Laravel Validation üîí(2020 Laravel Authorization ~ Lesson 6)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/gulsEppA9e4"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Laravel Policies üëÆ(2020)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/i3jFziRZrkg"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Laravel Gates üõ°Ô∏è(2020)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/jVNO-ImrAsc"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Brick walls üß±&amp;amp; software engineering üíª"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/VdoN34JaoEc"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Laravel Route Groups (2020)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/lUXnIEa7eiA"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Laravel Factories &amp;amp; Seeders (Lesson 2 ~ Laravel 6 Auth)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/k7VaQ_sOICU"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Php for loop (2020)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/MGRYHLSARY4"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Laravel Middleware üîê(Laravel 6 authorization)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/UaC5plKWXb4"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Chain Of Responsibility üîê(Middleware Design Pattern)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/MBTgNEeJEWQ"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Php Encapsulation (Object Oriented Php 2020)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/yVaVK4QSJYI"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Php Interfaces (Object Oriented Php 2020)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/QQvbpJ4kARA"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Is php dead? ü§¶‚Äç‚ôÇÔ∏è(2020)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/15a5r3NXtYM"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Php Abstract Classes (Object Oriented Php 2020)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/5TauYyZTUjY"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Php Inheritance (Object Oriented Php 2020)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/15jGTgxC8wA"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Php Objects &amp;amp; Static Methods (Object Oriented Php 2020)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/_Zd9B_jUwlw"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Php Classes (Object Oriented Php 2020)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/kwVLTxl1iZI"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Laravel Homestead (2020)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/bLT5v0mmBXs"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Php slim framework üë©‚Äçüíª üë®‚Äçüíª(routing, middleware, container, etc...)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/Tr_0F_yRIIU"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Dependency Inversion Principle (PHP SOLID Design Principles)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/dPKFC0PVe8w"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Interface Segregation Principle (Php SOLID Design)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/8PCjuXvkTNI"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Liskov Substitution Principle ü§î(Php SOLID Principles)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/fSfNwI6mP0g"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Laravel to vuejs (Full Stack Vue.js &amp;amp; Laravel ~ vuejs with Laravel)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/ODMTuekriwo"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Php class property types, why you mad?  (Pre conditions, post conditions, infectious bugs and types)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/BSI57iJ5VII"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"What is your job as a software developer ~ what is complexity (Dependencies and Cognitive load)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/CO-nw8DZOHU"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"My (unpopular) opinion: TDD tests hurt developer's ability to learn design principles &amp;amp; architecture"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/LH-Rzr8UgUQ"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"PHP 7.4 ~ Declare (Class Property Strict Type) &amp;amp; Serialization"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/gcbAjjgSNyQ"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Open Closed Principle üí°(Php SOLID Principles)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/bjZ3278aXPU"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Testing out some green screen video effects with my Brother"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/d4CNVI_863c"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Vuejs ~ Lesson 10: Vue Life Cyle Hooks &amp;amp; Assets"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/lAXakH0IcuM"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"PHP Solid Principles ~ Lesson 1: Single Responsibility"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/ARxZV8OZ8Cg"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"PHP 7.4 ~ Lesson 9: Serialize &amp;amp; Unserialize Magic Methods"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/7SQqjgyzFHg"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"php 7.4 ~ Lesson 8: PHP Strip Tags Accepts Array"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/bAyWouw_P0Q"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"php 7.4 ~ Lesson 7: PHP Numeric literal separator"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/iiseIsB1_bk"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"PHP 7.4 ~ Lesson 6: PHP Rest Operator (Doesn't exist)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/xdsijx661cQ"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"php 7.4 ~ Lesson 5: PHP Spread operator (Unpacking arrays)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/4rmrGH1MA9A"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"php 7.4 ~ Lesson 4: Null coalescing assignment operator"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/XvGrIHJUugE"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"php 7.4 ~ Lesson 3: php short hand functions scope"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/nf2KFLTNBEs"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"php 7.4 ~ Lesson 2: PHP Short hand functions"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/cDggxZI7BmQ"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"PHP 7.4 ~ Lesson 1: PHP Typed Class Properties"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/DG9raLLgQjI"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Learn Vue 2019:  Lesson 9 ~ vue js Props ~ vue js components"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/0HMkrrx6krw"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Learn vue js ~ Lesson 8 - Vue Watchers"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/TnJp2EEdOZM"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Learn vue js ~ Lesson 7 - Vue Computed Properties"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/CgBK4dbVZPY"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Learn vue js ~ Lesson 6 - refactor to data centric design"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/S_w69yD5Gko"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Learn vue js ~ Lesson 5: methods, events, &amp;amp; modifiers"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/q6ydM0VJ_ck"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Learn Vue ~ Lesson 4: Data Options - 2 Way Bind Data"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/u388ib0KdL8"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Learn Vue ~ Lesson 3: Vue's Virtual DOM"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/F3TQs1pUgzM"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Learn Vue: Lesson 2 ~ Vue's Reactivity System"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/twe-QvJF-x4"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Learn Vue ~ Lesson 1: Vue Reactivity &amp;amp; The Virtual DOM"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/UATgNA8_X5c"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Laravel Tinker (Chrome Console For Laravel &amp;amp; PHP)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/vKeBS3JELW0"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"phpMyAdmin MySQL Databases Tutorial (cPanel 2019)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/0hog1GAPfIo"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Create MySQL Database and MySQL User From Inside cPanel üí°(2020 Tutorial)"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/L6TlZUQd7e0"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Jordan Bell Rap | Rawls Treats"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/rTGL4UTv1YE"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;"Text me those questions directly!"  - &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/FAvfXHrzphw"&gt;
&lt;/iframe&gt;
&lt;/p&gt;


&lt;div class="ltag__user ltag__user__id__386677"&gt;
  
    .ltag__user__id__386677 .follow-action-button {
      background-color: #339d15 !important;
      color: #ffffff !important;
      border-color: #339d15 !important;
    }
  
    &lt;a href="/cleancodestudio" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iaD-SiIM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--uL9Viyw2--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/386677/50ab5359-8342-4fc0-961a-04bb95957fa1.jpg" alt="cleancodestudio image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/cleancodestudio"&gt;Clean Code Studio&lt;/a&gt;Follow
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/cleancodestudio"&gt;Clean Code Clean Life ~ Simplify&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;


</description>
      <category>php</category>
      <category>software</category>
      <category>programming</category>
      <category>tutorials</category>
    </item>
  </channel>
</rss>
