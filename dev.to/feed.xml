<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Building a Tailwind CSS toggle/switch component</title>
      <author>Zolt√°n Sz≈ëgy√©nyi</author>
      <pubDate>Sat, 06 Nov 2021 10:58:16 +0000</pubDate>
      <link>https://dev.to/themesberg/building-a-tailwind-css-toggleswitch-component-4pc3</link>
      <guid>https://dev.to/themesberg/building-a-tailwind-css-toggleswitch-component-4pc3</guid>
      <description>&lt;p&gt;I've been using Tailwind CSS a lot lately and although I love the new way of working with utility classes, I have to say that I miss having a base set of components to work with similar to Bootstrap or Bulma.&lt;/p&gt;

&lt;p&gt;That is why I started a new series here on the DEV community on how to build commonly used web components using the utility classes from Tailwind CSS.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--I9FzZW_4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ejal03431kph47sdzc1g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--I9FzZW_4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ejal03431kph47sdzc1g.png" alt="Tailwind CSS toggle" width="880" height="650"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Last time I showed you how to build a &lt;a href="https://dev.to/themesberg/building-a-tailwind-css-file-upload-input-component-4he4"&gt;file upload component&lt;/a&gt; and today I want to show you how you can build a toggle/switch element.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tailwind-css-toggleswitch-component"&gt;
  &lt;/a&gt;
  Tailwind CSS toggle/switch component
&lt;/h2&gt;

&lt;p&gt;The first step towards building the toggle component is to set up the basic HTML code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;label for="toggle-example"&amp;gt;
  &amp;lt;input type="checkbox" id="toggle-example"&amp;gt;
  &amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;
  &amp;lt;span&amp;gt;Toggle me&amp;lt;/span&amp;gt;
&amp;lt;/label&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see we wrapped all of the elements inside a &lt;code&gt;label&lt;/code&gt; tag so that wherever you click it will toggle the checkbox. We also added an empty &lt;code&gt;div&lt;/code&gt; tag which will later be used the background.&lt;/p&gt;

&lt;p&gt;Let's now add the utility classes that are needed to styles the element:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;label for="toggle-example" class="flex items-center cursor-pointer relative mb-4"&amp;gt;
  &amp;lt;input type="checkbox" id="toggle-example" class="sr-only"&amp;gt;
  &amp;lt;div class="toggle-bg bg-gray-200 border-2 border-gray-200 h-6 w-11 rounded-full"&amp;gt;&amp;lt;/div&amp;gt;
  &amp;lt;span class="ml-3 text-gray-900 text-sm font-medium"&amp;gt;Toggle me&amp;lt;/span&amp;gt;
&amp;lt;/label&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The toggle element is not complete yet, because we need to add a few pseudo classes which will be the dot that will move from left to right.&lt;/p&gt;

&lt;p&gt;The easiest way to make it work is to &lt;a href="https://flowbite.com/docs/getting-started/quickstart/"&gt;install the Flowbite package from NPM&lt;/a&gt; and include it as a plugin in your Tailwind CSS project. Then this and other components from Flowbite will work.&lt;/p&gt;

&lt;p&gt;Alternatively, you can also just add the following styles inside your CSS:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.toggle-bg:after {
    content: '';
    @apply absolute top-0.5 left-0.5 bg-white border border-gray-300 rounded-full h-5 w-5 transition shadow-sm;
}

input:checked + .toggle-bg:after {
    transform: translateX(100%);
    @apply border-white;
}

input:checked + .toggle-bg {
    @apply bg-blue-600 border-blue-600;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The final result should look like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--I9FzZW_4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ejal03431kph47sdzc1g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--I9FzZW_4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ejal03431kph47sdzc1g.png" alt="Tailwind CSS toggle" width="880" height="650"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can also make the toggle component checked by default:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;label for="toggle-example-checked" class="flex items-center cursor-pointer relative"&amp;gt;
  &amp;lt;input type="checkbox" id="toggle-example-checked" class="sr-only" checked&amp;gt;
  &amp;lt;div class="toggle-bg bg-gray-200 border-2 border-gray-200 h-6 w-11 rounded-full"&amp;gt;&amp;lt;/div&amp;gt;
  &amp;lt;span class="ml-3 text-gray-900 text-sm font-medium"&amp;gt;Toggle me (checked)&amp;lt;/span&amp;gt;
&amp;lt;/label&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I hope that this tutorial helped you with your Tailwind CSS journey and expand the components that you can work with. Before you go, I would like to show you a Tailwind CSS component library that this toggle component is part of and which you can use to build websites even faster.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#flowbite-tailwind-css-component-library"&gt;
  &lt;/a&gt;
  Flowbite - Tailwind CSS component library
&lt;/h2&gt;

&lt;p&gt;As I've said earlier, this &lt;a href="https://flowbite.com/docs/components/forms/#toggle-switches"&gt;Tailwind CSS toggle component&lt;/a&gt; is part of a larger open source component library called Flowbite.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Uh5keub_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uc6zlubo80s9cdy632wj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Uh5keub_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uc6zlubo80s9cdy632wj.png" alt="Flowbite - Tailwind CSS components" width="880" height="569"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://flowbite.com/docs/getting-started/introduction/"&gt;Flowbite&lt;/a&gt; is basically a set of UI components like buttons, alerts, badges, dropdowns, navbars built with the utility classes from Tailwind CSS but also includes interactive elements like tooltips and datepickers that can help you build websites even faster with Tailwind CSS.&lt;/p&gt;

&lt;p&gt;You can &lt;a href="https://flowbite.com/docs/getting-started/quickstart/"&gt;quickly get started&lt;/a&gt; by installing Flowbite via NPM and then require it as a plugin inside your Tailwind CSS project or just use the CDN to try it out.&lt;/p&gt;

</description>
      <category>tailwindcss</category>
      <category>opensource</category>
      <category>tutorial</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Twitter space on accessibility Sunday 06th Nov at 8pm IST (2:30pm GMT, 10:30am EST)</title>
      <author>InHuOfficial</author>
      <pubDate>Sat, 06 Nov 2021 10:54:42 +0000</pubDate>
      <link>https://dev.to/inhuofficial/twitter-space-on-accessibility-sunday-06th-nov-at-8pm-ist-230pm-gmt-1030am-est-4dd2</link>
      <guid>https://dev.to/inhuofficial/twitter-space-on-accessibility-sunday-06th-nov-at-8pm-ist-230pm-gmt-1030am-est-4dd2</guid>
      <description>&lt;p&gt;I invited myself (yes I am &lt;strong&gt;that&lt;/strong&gt; person!) to speak at a Twitter space tomorrow. &lt;/p&gt;

&lt;p&gt;The space will be about Accessibility, in particular:-&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;How to pitch accessibility to your team at work.&lt;/li&gt;
&lt;li&gt;Money! Investment and return on tools, training and accessibility.&lt;/li&gt;
&lt;li&gt;A brief introduction to Screen reader behaviour with HTML tags (as screen reader behaviour is similar to CSS coverage, not always 100%)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Note that the Agenda is not limited to only these 3 items if you have questions about anything else accessibility related just let us know!&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#come-along-and-say-hi"&gt;
  &lt;/a&gt;
  Come along and say hi!
&lt;/h2&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--D9tE8I48--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1456282172566884357/UGBG0m6M_normal.jpg" alt="Neha Sharma üçç‚òÅÔ∏è profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Neha Sharma üçç‚òÅÔ∏è
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/hellonehha"&gt;@hellonehha&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Join &lt;a href="https://twitter.com/tanishaaa03"&gt;@tanishaaa03&lt;/a&gt; and me tomorrow on your most fav topic accessibility.&lt;br&gt;&lt;br&gt;BY (bring your)&lt;br&gt;&lt;br&gt;- Questions&lt;br&gt;&lt;br&gt;- Topics&lt;br&gt;&lt;br&gt;- Case studies&lt;br&gt;&lt;br&gt;- Experience&lt;br&gt;&lt;br&gt;Set a reminder for my upcoming Space! &lt;a href="https://t.co/V5GvbcMAZ3"&gt;twitter.com/i/spaces/1ypJd‚Ä¶&lt;/a&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      06:18 AM - 06 Nov 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1456868618973503496" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1456868618973503496" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1456868618973503496" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;Most of the work will be done by:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#neha-sharma-host"&gt;
  &lt;/a&gt;
  Neha Sharma (Host)
&lt;/h3&gt;

&lt;p&gt;Neha (who is running the space) is an excellent accessibility advocate, so her advice will be invaluable. &lt;/p&gt;

&lt;p&gt;She writes here on DEV so you should check out her stuff:&lt;/p&gt;


&lt;div class="ltag__user ltag__user__id__118962"&gt;
  
    .ltag__user__id__118962 .follow-action-button {
      background-color: #99009e !important;
      color: #ffffff !important;
      border-color: #99009e !important;
    }
  
    &lt;a href="/hellonehha" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Dsw8r74h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--J1XD4o8z--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/118962/382c4db7-91d3-4e27-9cd5-a1e0331587b0.jpg" alt="hellonehha image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/hellonehha"&gt;Neha Sharma &lt;/a&gt;Follow
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/hellonehha"&gt;UI Engineer ,I love Web,JavaScript, Design System, A11Y, HTML5, CSS3 ,React; Community Advocate and enjoy giving talks and codelabs at the Meetups and conference.

I am self-taught calligrapher too.&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;She also founded &lt;a href="https://twitter.com/jslovers_Del"&gt;&lt;strong&gt;JS Lovers&lt;/strong&gt;&lt;/a&gt; - A Meetup/Workshop community by Developers for Developers in and around Delhi,Mumbai and Pune.&lt;/p&gt;

&lt;p&gt;You can also find her on Twitter &lt;a href="https://twitter.com/hellonehha"&gt;@hellonehha&lt;/a&gt;, so go check out her stuff on there too! &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tanisha-sabherwal-co-host"&gt;
  &lt;/a&gt;
  Tanisha Sabherwal (Co Host)
&lt;/h3&gt;

&lt;p&gt;Tanisha (who is co-hosting) works at JPMorgan as a front-end engineer. You can find some stuff Tanisha has written at &lt;a href="https://www.tanishasabherwal.me/"&gt;tanishasabherwal.me&lt;/a&gt; and find her on twitter at &lt;a href="https://twitter.com/tanishaaa03"&gt;@tanishaaa03&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;It is my first time chatting with Tanisha but from the stuff of hers I have read I look forward to it!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#graham-from-inhu-me-the-tagalong-self-inviter"&gt;
  &lt;/a&gt;
  Graham from InHu (me! - the tag-along self inviter!)
&lt;/h3&gt;

&lt;p&gt;Those of you who follow me know I am outspoken and quite blunt about accessibility. &lt;/p&gt;

&lt;p&gt;I prefer facts over fluffiness and actionable steps over general "you should do it because it is the right thing to do" advice that doesn't get results. &lt;/p&gt;

&lt;p&gt;So you can expect a little bit of that thrown in there!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wait-you-invited-yourself"&gt;
  &lt;/a&gt;
  Wait, you invited yourself?
&lt;/h2&gt;

&lt;p&gt;Yup, Neha and I have "spoken" (written to each other in comments!) on several occasions and I always like what she has to say. &lt;/p&gt;

&lt;p&gt;The second I saw her space was on accessibility (my passion) I had to reach out and see if she would like me to join in.&lt;/p&gt;

&lt;p&gt;Luckily she said yes, so you get me there too (whether that is a good or a bad thing is a different question! üòã)&lt;/p&gt;






&lt;center&gt;I Look forward to seeing you there!&lt;/center&gt;
&lt;br&gt;&lt;br&gt;
&lt;center&gt;&lt;a href="https://twitter.com/hellonehha/status/1456868618973503496"&gt;Link to Original Tweet so you can set a reminder&lt;/a&gt;&lt;/center&gt;




</description>
      <category>twitter</category>
      <category>a11y</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>10 Hilarious Cartoons That Depict Real-Life Problems of Programmers</title>
      <author>Pratik Chaudhari</author>
      <pubDate>Sat, 06 Nov 2021 10:28:15 +0000</pubDate>
      <link>https://dev.to/pratikgchaudhari/10-hilarious-cartoons-that-depict-real-life-problems-of-programmers-1hhi</link>
      <guid>https://dev.to/pratikgchaudhari/10-hilarious-cartoons-that-depict-real-life-problems-of-programmers-1hhi</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;And how they deal with them...&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h3&gt;
  &lt;a href="#1-estimations"&gt;
  &lt;/a&gt;
  1. Estimations:
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://levelup.gitconnected.com/the-art-of-eta-6ec69664ee89"&gt;&lt;em&gt;Estimating the amount of time required to complete your own work is nothing short of a herculean feat.&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But the fun begins when you add more people to the equation.&lt;/p&gt;

&lt;p&gt;Then estimating becomes a sport of throwing darts (and that too in the dark):&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DChbpxkC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wwzk9fx9hniyaxrzxel9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DChbpxkC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wwzk9fx9hniyaxrzxel9.png" alt="Image Credit: workchronicles.com" width="880" height="880"&gt;&lt;/a&gt;&lt;/p&gt;
Image Credit: workchronicles.com






&lt;h3&gt;
  &lt;a href="#2-fixing-bugs"&gt;
  &lt;/a&gt;
  2. Fixing Bugs:
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://medium.com/mind-cafe/expecting-immediate-results-might-hold-you-back-from-achieving-your-dreams-597f8785dc18"&gt;Humans prefer immediate gratification&lt;/a&gt;, which means we choose to indulge (or invest) in activities that could provide us with immediate rewards while conveniently overlooking the (heavy) price we may have to pay in the future.&lt;/p&gt;

&lt;p&gt;But when we do this in our workplaces, we might not be ones paying the price in the end:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8ehEicNd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vzellj3nvuoawj1uxnc2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8ehEicNd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vzellj3nvuoawj1uxnc2.png" alt="Image Credit: workchronicles.com" width="880" height="880"&gt;&lt;/a&gt;&lt;/p&gt;
Image Credit: workchronicles.com






&lt;h3&gt;
  &lt;a href="#3-dealing-with-ambitious-sales-rep"&gt;
  &lt;/a&gt;
  3. Dealing With Ambitious Sales Rep:
&lt;/h3&gt;

&lt;p&gt;Sales representatives have targets to meet. We understand that.&lt;/p&gt;

&lt;p&gt;But when some overzealous sales rep promises the moon to the clients, programmers are the ones who bear the burnt:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V32Jsc8y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t0lwf8jaitehwc479kov.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V32Jsc8y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t0lwf8jaitehwc479kov.png" alt="Image Credit: workchronicles.com" width="880" height="880"&gt;&lt;/a&gt; &lt;/p&gt;
Image Credit: workchronicles.com






&lt;h3&gt;
  &lt;a href="#4-socializing"&gt;
  &lt;/a&gt;
  4. Socializing:
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;"Blessed are the Geek, for they shall reign over the world."&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The Tech industry has had a tremendous impact on our lives: people can look up anything on Google and hook up with anyone on the likes of Tinder and Bumble.&lt;/p&gt;

&lt;p&gt;As people who built the tech industry, we are its Alpha &amp;amp; Omega.&lt;/p&gt;

&lt;p&gt;And yet, when it comes to in-person interactions and shaping conversations, we are at a loss for words:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RlM0l-N5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9ypr3496mjdmwkka9gad.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RlM0l-N5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9ypr3496mjdmwkka9gad.png" alt="Image Credit: workchronicles.com" width="880" height="880"&gt;&lt;/a&gt; &lt;/p&gt;
Image Credit: workchronicles.com






&lt;h3&gt;
  &lt;a href="#5-finding-a-new-job"&gt;
  &lt;/a&gt;
  5. Finding a new Job:
&lt;/h3&gt;

&lt;p&gt;There are literally hundreds of websites out there that promise to join a potential employee and an employer into holy matrimony üòÇ&lt;/p&gt;

&lt;p&gt;But none of them can help you escape recruiters who sound more like sales reps. Deciphering the actual meaning behind their words is somewhat of an arcane art:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9JlBzcbb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dylav697gieh02mexnjp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9JlBzcbb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dylav697gieh02mexnjp.png" alt="Image Credit: workchronicles.com" width="880" height="880"&gt;&lt;/a&gt;&lt;/p&gt;
Image Credit: workchronicles.com






&lt;h3&gt;
  &lt;a href="#6-feature-requests"&gt;
  &lt;/a&gt;
  6. Feature Requests:
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;"The 'stories' feature is so popular on the XYZ app. We should introduce it too."&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;"What if our users could find a date, book a cab, and rent a villa in Europe all at the same time?"&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And so goes the discussion about the new features that we could provide to our users.&lt;/p&gt;

&lt;p&gt;We understand that there's a need to experiment and evolve, but adding a feature just of the sake of adding it is not cool:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5ajhUJjo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f6jbjhcd09adsazyz9gk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5ajhUJjo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f6jbjhcd09adsazyz9gk.png" alt="Image Credit: workchronicles.com" width="880" height="880"&gt;&lt;/a&gt;&lt;/p&gt;
Image Credit: workchronicles.com






&lt;h3&gt;
  &lt;a href="#7-status-updates"&gt;
  &lt;/a&gt;
  7. Status Updates:
&lt;/h3&gt;

&lt;p&gt;The &lt;a href="https://www.agilealliance.org/glossary/daily-meeting/"&gt;daily stand-up&lt;/a&gt; meeting in &lt;a href="https://www.agilealliance.org/agile101/"&gt;Agile&lt;/a&gt; is an excellent way for the team to discuss the overall progress on their work and any impediments that might be blocking them.&lt;/p&gt;

&lt;p&gt;But once we are done with that, we are literally done with the status updates.&lt;/p&gt;

&lt;p&gt;There was no substantial progress on that &lt;em&gt;"critical"&lt;/em&gt; feature five minutes ago and there won't be any five minutes from now:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Q6dA32yz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2gupyr8sfmeoehnhyzpj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q6dA32yz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2gupyr8sfmeoehnhyzpj.png" alt="Image Credit: workchronicles.com" width="880" height="880"&gt;&lt;/a&gt;&lt;/p&gt;
Image Credit: workchronicles.com






&lt;h3&gt;
  &lt;a href="#8-showing-off-our-work"&gt;
  &lt;/a&gt;
  8. Showing off Our Work:
&lt;/h3&gt;

&lt;p&gt;We are geeks. Many of us are introverts. Not all of us like announcing our work out loud to the entire world.&lt;/p&gt;

&lt;p&gt;But that doesn't mean we aren't working hard enough or that we aren't worthy of a well-deserved promotion:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XKueSGj1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1vzphredx83zbdw64qah.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XKueSGj1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1vzphredx83zbdw64qah.png" alt="Image Credit: workchronicles.com" width="880" height="1254"&gt;&lt;/a&gt;&lt;/p&gt;
Image Credit: workchronicles.com


 




&lt;h3&gt;
  &lt;a href="#9-getting-our-priorities-right"&gt;
  &lt;/a&gt;
  9. Getting Our Priorities Right:
&lt;/h3&gt;

&lt;p&gt;Product Managers, please understand this:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;If all the features are on priority, then none of them are on priority:&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i1JbeBm_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rl038nxuui89g73vfxbn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i1JbeBm_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rl038nxuui89g73vfxbn.png" alt="Image Credit: workchronicles.com" width="880" height="880"&gt;&lt;/a&gt;&lt;/p&gt;
Image Credit: workchronicles.com






&lt;h3&gt;
  &lt;a href="#10-meeting-unrealistic-expectations"&gt;
  &lt;/a&gt;
  10. Meeting (Unrealistic) Expectations:
&lt;/h3&gt;

&lt;p&gt;Need I say more:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yNIwGagZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/002e8h9uk2cjqx8a9rvk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yNIwGagZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/002e8h9uk2cjqx8a9rvk.png" alt="Image Credit: workchronicles.com" width="880" height="880"&gt;&lt;/a&gt;&lt;/p&gt;
Image Credit: workchronicles.com



&lt;p&gt;(Okay, I admit this one's not specific to programmers, but it nevertheless depicts a chilling reality)&lt;/p&gt;




&lt;p&gt;I hope you folks enjoyed reading this blog!&lt;/p&gt;

&lt;p&gt;Feel free to leave your comments (if any) in the comments section below üëá    &lt;/p&gt;

</description>
      <category>programmerproblems</category>
      <category>programmerlife</category>
      <category>programming</category>
      <category>developers</category>
    </item>
    <item>
      <title>SOLID Principles in iOS Development </title>
      <author>MKilmer</author>
      <pubDate>Sat, 06 Nov 2021 10:23:18 +0000</pubDate>
      <link>https://dev.to/mkilmer/solid-principles-in-ios-development-5cie</link>
      <guid>https://dev.to/mkilmer/solid-principles-in-ios-development-5cie</guid>
      <description>&lt;h2&gt;
  &lt;a href="#solid-principles-in-ios-development"&gt;
  &lt;/a&gt;
  SOLID Principles in iOS Development
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#ok-you-probably-already-hear-this-term-but-in-practice-whats-mean-when-uses-how-uses-keep-reading-for-finally-learn"&gt;
  &lt;/a&gt;
  üò© Ok, you probably already hear this term, but in practice, what's mean? When uses? How uses? Keep reading for &lt;em&gt;FINALLY LEARN&lt;/em&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/AsGnrla1K6FN7ajonc/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/AsGnrla1K6FN7ajonc/giphy.gif" alt="Alt Text" width="480" height="390"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#first-of-all-solid-is-a-s-a-mnemonic-acronym-for-five-design-principles-intended-to-make-software-design-more-understandable-flexible-and-maintainable"&gt;
  &lt;/a&gt;
  First of all, SOLID is a s a mnemonic acronym for five design principles intended to make software design more understandable, flexible, and maintainable
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#in-all-tutorial-i-will-show-solid-principles-in-action-and-codes-that-dont-follow-solid"&gt;
  &lt;/a&gt;
  In all tutorial, i will show SOLID Principles in action and codes that don't follow SOLID
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#so-lets-go"&gt;
  &lt;/a&gt;
  &lt;strong&gt;So, let's go üòÅ&lt;/strong&gt;
&lt;/h2&gt;




&lt;h2&gt;
  &lt;a href="#s-single-responsibility-principle"&gt;
  &lt;/a&gt;
  &lt;em&gt;S&lt;/em&gt; - Single Responsibility Principle
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#a-classe-should-have-one-reason-to-change-to-exists-"&gt;
  &lt;/a&gt;
  A classe should have one reason to change ( to exists )
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#tips-to-apply"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Tips to apply&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Ask yourself for every &lt;strong&gt;&lt;em&gt;entity&lt;/em&gt;&lt;/strong&gt; ( classes / functions ) : &lt;strong&gt;&lt;em&gt;this entity, does more than one thing?&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You shouldn't have use the word &lt;strong&gt;&lt;em&gt;and&lt;/em&gt;&lt;/strong&gt; when have to talk the responsibility to entity &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#not-single-responsibility-principle-apply"&gt;
  &lt;/a&gt;
  üí¢ &lt;strong&gt;&lt;em&gt;NOT&lt;/em&gt;&lt;/strong&gt; Single Responsibility Principle apply
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight swift"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="kt"&gt;Handler_NOT_SOLID&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nf"&gt;handle&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 

        &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;requestDataToAPI&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;guard&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;dataReceive&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;array&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;dataReceive&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nf"&gt;saveToDB&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;array&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nf"&gt;requestDataToAPI&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="kt"&gt;Data&lt;/span&gt;&lt;span class="p"&gt;?{&lt;/span&gt;
        &lt;span class="c1"&gt;// send API request and wait the response&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;nil&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nf"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kt"&gt;Data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kt"&gt;String&lt;/span&gt;&lt;span class="p"&gt;]?{&lt;/span&gt;
        &lt;span class="c1"&gt;// parse the data and create an array&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;nil&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nf"&gt;saveToDB&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;array&lt;/span&gt;&lt;span class="p"&gt;:[&lt;/span&gt;&lt;span class="kt"&gt;String&lt;/span&gt;&lt;span class="p"&gt;]?){&lt;/span&gt;
        &lt;span class="c1"&gt;// save array in a database&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;Can you see?&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#handlernotsolid-class-have-several-responsibilities"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Handler_NOT_SOLID&lt;/em&gt;&lt;/strong&gt; class  have several responsibilities
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;Send request to API&lt;/li&gt;
&lt;li&gt;Create an array with data receive&lt;/li&gt;
&lt;li&gt;Save array in a database&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#single-responsibility-principle-apply"&gt;
  &lt;/a&gt;
  üëç Single Responsibility Principle &lt;strong&gt;&lt;em&gt;apply&lt;/em&gt;&lt;/strong&gt;
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight swift"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="kt"&gt;Handler_SOLID&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;apiHandler&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;APIHandler&lt;/span&gt;
    &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;parseHandler&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;ParseHandler&lt;/span&gt;
    &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;dbHandler&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;DBHandler&lt;/span&gt;

    &lt;span class="nf"&gt;init&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;apiHandler&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;APIHandler&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;parseHandler&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;ParseHandler&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;dbHandler&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;DBHandler&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;apiHandler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;apiHandler&lt;/span&gt;
        &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parseHandler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;parseHandler&lt;/span&gt;
        &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dbHandler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dbHandler&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="kt"&gt;APIHandler&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nf"&gt;requestDataToAPI&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="kt"&gt;Data&lt;/span&gt;&lt;span class="p"&gt;?{&lt;/span&gt;
        &lt;span class="c1"&gt;// send API request and wait the response&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;nil&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="kt"&gt;ParseHandler&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nf"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kt"&gt;Data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kt"&gt;String&lt;/span&gt;&lt;span class="p"&gt;]?{&lt;/span&gt;
        &lt;span class="c1"&gt;// parse the data and create an array&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;nil&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="kt"&gt;DBHandler&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nf"&gt;saveToDB&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;array&lt;/span&gt;&lt;span class="p"&gt;:[&lt;/span&gt;&lt;span class="kt"&gt;String&lt;/span&gt;&lt;span class="p"&gt;]?){&lt;/span&gt;
        &lt;span class="c1"&gt;// save array in a database&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;Now, each entity have just one responsibility&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#o-openclosed-principle"&gt;
  &lt;/a&gt;
  &lt;em&gt;O&lt;/em&gt; - Open/Closed Principle
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#a-software-entity-should-be-open-to-extension-but-closed-for-modification"&gt;
  &lt;/a&gt;
  A software entity should be open to extension, but closed for modification.
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#tips-to-apply"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Tips to apply&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;If you want to modify a class every time a new behavior is added, something isn't quite right&lt;/li&gt;
&lt;li&gt;If/else/switch statements don't be used to modify a behavior &lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#not-openclosed-principle-apply"&gt;
  &lt;/a&gt;
  üí¢ &lt;strong&gt;&lt;em&gt;NOT&lt;/em&gt;&lt;/strong&gt; Open/Closed Principle apply
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight swift"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="kt"&gt;Vehicles_NOT_SOLID&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nf"&gt;printData&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;cars&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="kt"&gt;Car_NOT_SOLID&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"Batmobile"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"Black"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="kt"&gt;Car_NOT_SOLID&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"SuperCar"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"Gold"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="kt"&gt;Car_NOT_SOLID&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"FamilyCar"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"Grey"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;]&lt;/span&gt;

        &lt;span class="n"&gt;cars&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;forEach&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;car&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt;
            &lt;span class="nf"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;car&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;printDetails&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;buses&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="kt"&gt;Bus_NOT_SOLID&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"School bus"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="kt"&gt;Bus_NOT_SOLID&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"Minibus"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="kt"&gt;Bus_NOT_SOLID&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"Minicoach"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;]&lt;/span&gt;

        &lt;span class="n"&gt;buses&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;forEach&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;bus&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt;
            &lt;span class="nf"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bus&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;printDetails&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt;  &lt;span class="kt"&gt;Car_NOT_SOLID&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kt"&gt;String&lt;/span&gt;
    &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kt"&gt;String&lt;/span&gt;

    &lt;span class="nf"&gt;init&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;
        &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nf"&gt;printDetails&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;"name : &lt;/span&gt;&lt;span class="se"&gt;\(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="s"&gt; color :&lt;/span&gt;&lt;span class="se"&gt;\(&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="kt"&gt;Bus_NOT_SOLID&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kt"&gt;String&lt;/span&gt;

    &lt;span class="nf"&gt;init&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;type&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nf"&gt;printDetails&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;"bus type : &lt;/span&gt;&lt;span class="se"&gt;\(&lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;Can you see?&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#when-printdata-receive-other-type-of-object-we-have-to-add-more-rules-to-work"&gt;
  &lt;/a&gt;
  When &lt;strong&gt;printData&lt;/strong&gt; receive other type of object, we have to add more rules to work
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;If you want to add the possibility to print also the details of a new class, we should change the implementation of printData every time we want to log a new class&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#openclosed-principle-apply"&gt;
  &lt;/a&gt;
  üëç Open/Closed Principle &lt;strong&gt;&lt;em&gt;apply&lt;/em&gt;&lt;/strong&gt;
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight swift"&gt;&lt;code&gt;&lt;span class="kd"&gt;protocol&lt;/span&gt; &lt;span class="kt"&gt;Printable&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nf"&gt;printDetails&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="kt"&gt;Vehicles_SOLID&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nf"&gt;printData&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;cars&lt;/span&gt;&lt;span class="p"&gt;:[&lt;/span&gt;&lt;span class="kt"&gt;Printable&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="kt"&gt;Car_SOLID&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"Batmobile"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"Black"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="kt"&gt;Car_SOLID&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"SuperCar"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"Gold"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="kt"&gt;Car_SOLID&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"FamilyCar"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"Grey"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;

            &lt;span class="kt"&gt;Bus_SOLID&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"School bus"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="kt"&gt;Bus_SOLID&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"Minibus"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="kt"&gt;Bus_SOLID&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"Minicoach"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;]&lt;/span&gt;

        &lt;span class="n"&gt;cars&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;forEach&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;car&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt;
            &lt;span class="nf"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;car&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;printDetails&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="kt"&gt;Car_SOLID&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kt"&gt;Printable&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt;
    &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt;

    &lt;span class="nf"&gt;init&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;
        &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nf"&gt;printDetails&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;"name : &lt;/span&gt;&lt;span class="se"&gt;\(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="s"&gt; color :&lt;/span&gt;&lt;span class="se"&gt;\(&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="kt"&gt;Bus_SOLID&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Printable&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt;

    &lt;span class="nf"&gt;init&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;type&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nf"&gt;printDetails&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;"bus type : &lt;/span&gt;&lt;span class="se"&gt;\(&lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;We don't need change behavior of printData, just make a layer between printData and the class&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#l-liskov-substitution-principle"&gt;
  &lt;/a&gt;
  &lt;em&gt;L&lt;/em&gt; - Liskov Substitution Principle
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#objects-should-be-replaceable-with-instances-of-their-subtypes-without-altering-the-correctness-of-that-program"&gt;
  &lt;/a&gt;
  Objects should be replaceable with instances of their subtypes without altering the correctness of that program.
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#tips-to-apply"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Tips to apply&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;Instead of one monolithic interface, break an interface up based on what implementers should be doing&lt;/li&gt;
&lt;li&gt;Keeps consumers from having to much power&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#not-liskov-substitution-principle-apply"&gt;
  &lt;/a&gt;
  üí¢ &lt;strong&gt;&lt;em&gt;NOT&lt;/em&gt;&lt;/strong&gt; Liskov Substitution Principle apply
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight swift"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="kt"&gt;Rectangle_NOT_SOLID&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Double&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Double&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;

    &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;area&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Double&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;width&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;height&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="kt"&gt;Square_NOT_SOLID&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Rectangle_NOT_SOLID&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;override&lt;/span&gt; &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Double&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;didSet&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;width&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// MARK: - Implementations &lt;/span&gt;
 &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nf"&gt;printArea&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="nv"&gt;rectangle&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Rectangle_NOT_SOLID&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="n"&gt;rectangle&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
     &lt;span class="n"&gt;rectangle&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;

     &lt;span class="nf"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rectangle&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;area&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;

 &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;rect&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;Rectangle_NOT_SOLID&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
 &lt;span class="nf"&gt;printArea&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;of&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rect&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// 40&lt;/span&gt;
 &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;square&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;Square_NOT_SOLID&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
 &lt;span class="nf"&gt;printArea&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;of&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;square&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// 40&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;See that printArea(of rectangle:Rectangle_NOT_SOLID) return the same result with different types instead return specific value of each class&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#liskov-substitution-principle-apply"&gt;
  &lt;/a&gt;
  üëç Liskov Substitution Principle &lt;strong&gt;&lt;em&gt;apply&lt;/em&gt;&lt;/strong&gt;
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight swift"&gt;&lt;code&gt;&lt;span class="kd"&gt;protocol&lt;/span&gt; &lt;span class="kt"&gt;Polygon&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;area&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kt"&gt;Double&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="kt"&gt;Rectangle_SOLID&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Polygon&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kt"&gt;Double&lt;/span&gt;
    &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kt"&gt;Double&lt;/span&gt;

    &lt;span class="nf"&gt;init&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Double&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Double&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;width&lt;/span&gt;
        &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;height&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;area&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Double&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;width&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;height&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="kt"&gt;Square_SOLID&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Polygon&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;side&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kt"&gt;Double&lt;/span&gt;

    &lt;span class="nf"&gt;init&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;side&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Double&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;side&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;side&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;area&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Double&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;pow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;side&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;/// MARK: - Implementations  &lt;/span&gt;

 &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nf"&gt;printArea&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="nv"&gt;polygon&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kt"&gt;Polygon&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
     &lt;span class="nf"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;polygon&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;area&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;

 &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;rect&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;Rectangle_SOLID&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="nf"&gt;printArea&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;of&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rect&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// 400.0&lt;/span&gt;
 &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;square&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;Square_SOLID&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;side&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="nf"&gt;printArea&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;of&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;square&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// 100.0&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#i-interface-segregation-principle"&gt;
  &lt;/a&gt;
  &lt;em&gt;I&lt;/em&gt; - Interface Segregation Principle
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#many-clientspecific-interfaces-are-better-than-one-generalpurpose-interface"&gt;
  &lt;/a&gt;
  (M)any client-specific interfaces are better than one general-purpose interface
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#tips-to-apply"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Tips to apply&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;Instead of one monolithic interface, break an interface up based on what implementers should be doing&lt;/li&gt;
&lt;li&gt;Keeps consumers from having to much power&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#not-interface-segregation-principle-apply"&gt;
  &lt;/a&gt;
  üí¢ &lt;strong&gt;&lt;em&gt;NOT&lt;/em&gt;&lt;/strong&gt; Interface Segregation Principle apply
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight swift"&gt;&lt;code&gt;&lt;span class="c1"&gt;//MARK:- Fat Interface (Protocol)&lt;/span&gt;
&lt;span class="kd"&gt;protocol&lt;/span&gt; &lt;span class="kt"&gt;GestureProtocol&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nf"&gt;didTap&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nf"&gt;didLongPress&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nf"&gt;didSwipe&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="kt"&gt;RichButton_NOT_SOLID&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;GestureProtocol&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nf"&gt;didTap&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nf"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"tap button"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nf"&gt;didLongPress&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nf"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"long press"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nf"&gt;didSwipe&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nf"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"swipe"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="kt"&gt;PoorButton_NOT_SOLID&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;GestureProtocol&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nf"&gt;didTap&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nf"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"tap"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nf"&gt;didLongPress&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;

    &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nf"&gt;didSwipe&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;See that PoorButton_NOT_SOLID class have methods that not are usable&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#interface-segregation-principle-apply"&gt;
  &lt;/a&gt;
  üëç Interface Segregation Principle  &lt;strong&gt;&lt;em&gt;apply&lt;/em&gt;&lt;/strong&gt;
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight swift"&gt;&lt;code&gt;&lt;span class="kd"&gt;protocol&lt;/span&gt; &lt;span class="kt"&gt;TapGesture&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nf"&gt;didTap&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;protocol&lt;/span&gt; &lt;span class="kt"&gt;LongPressGesture&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nf"&gt;didLongPress&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;protocol&lt;/span&gt; &lt;span class="kt"&gt;SwipeGesture&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nf"&gt;didSwipe&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="kt"&gt;RichButton_SOLID&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;TapGesture&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;LongPressGesture&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;SwipeGesture&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nf"&gt;didTap&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nf"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"tap button"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nf"&gt;didLongPress&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nf"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"long press"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nf"&gt;didSwipe&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nf"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"swipe"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="kt"&gt;PoorButton_SOLID&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;TapGesture&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nf"&gt;didTap&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nf"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"tap button"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;Now we remove all unnecessary methods&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#d-dependency-inversion-principle"&gt;
  &lt;/a&gt;
  &lt;em&gt;D&lt;/em&gt; - Dependency Inversion Principle
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#highlevel-modules-should-not-depend-on-lowlevel-modules-both-should-depend-on-abstractions"&gt;
  &lt;/a&gt;
  High-level modules should not depend on low-level modules. Both should depend on abstractions.
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#tips-to-apply"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Tips to apply&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;We‚Äôre used to this : High level &lt;strong&gt;&lt;em&gt;-&amp;gt;&lt;/em&gt;&lt;/strong&gt; (uses) Low level&lt;/li&gt;
&lt;li&gt;High level &lt;strong&gt;&lt;em&gt;-&amp;gt;&lt;/em&gt;&lt;/strong&gt; (expects) interface &lt;strong&gt;&lt;em&gt;&amp;lt;-&lt;/em&gt;&lt;/strong&gt; ( fulfills ) low level&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#not-dependency-inversion-principle-apply"&gt;
  &lt;/a&gt;
  üí¢ &lt;strong&gt;&lt;em&gt;NOT&lt;/em&gt;&lt;/strong&gt; Dependency Inversion Principle apply
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight swift"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="kt"&gt;SaveData_NOT_SOLID&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;filesSystemManager&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;FilesSystemManager_NOT_SOLID&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nf"&gt;handle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kt"&gt;String&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="n"&gt;filesSystemManager&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="kt"&gt;FilesSystemManager_NOT_SOLID&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nf"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kt"&gt;String&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="c1"&gt;// save data&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;With this, we have just a way to save Data. If we want use any DataBase?&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dependency-inversion-principle-apply"&gt;
  &lt;/a&gt;
  üëç Dependency Inversion Principle &lt;strong&gt;&lt;em&gt;apply&lt;/em&gt;&lt;/strong&gt;
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight swift"&gt;&lt;code&gt;
&lt;span class="kd"&gt;protocol&lt;/span&gt; &lt;span class="kt"&gt;Storage&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nf"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kt"&gt;Any&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="kt"&gt;SaveData_SOLID&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;storage&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kt"&gt;Storage&lt;/span&gt;

    &lt;span class="nf"&gt;init&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;storage&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Storage&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;storage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;storage&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nf"&gt;handle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Any&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;storage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="kt"&gt;FilesSystemManager_SOLID&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Storage&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nf"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Any&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="kt"&gt;MySQLDataBase&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Storage&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nf"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Any&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;Now, we can use any storage method&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;üëä Thanks for read!! I hope that you have understand all principles about SOLID and how apply in your day by day for build a better software. In doubt, please put your comment below and i will try to help.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/mkilmerr/SOLID_Principles_Swift"&gt;Github Project&lt;/a&gt;&lt;/p&gt;

</description>
      <category>swift</category>
      <category>ios</category>
      <category>engineer</category>
      <category>solid</category>
    </item>
    <item>
      <title>How to become a Certified Java Developer Professionals in 2022</title>
      <author>javinpaul</author>
      <pubDate>Sat, 06 Nov 2021 10:16:03 +0000</pubDate>
      <link>https://dev.to/javinpaul/how-to-become-a-certified-java-developer-professionals-1jfb</link>
      <guid>https://dev.to/javinpaul/how-to-become-a-certified-java-developer-professionals-1jfb</guid>
      <description>&lt;p&gt;&lt;em&gt;Disclosure: This post includes affiliate links; I may receive compensation if you purchase products or services from the different links provided in this article.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Java certification is highly regarded in the IT Industry and provides a Java developer with recognition worldwide. It helps to find a better job, get a better salary, and even a better raise or bonus at a current job. That's why thousands of Java developers try to become certified every year, but success is not easy.&lt;/p&gt;

&lt;p&gt;There are multiple options to become a certified Java developer in 2022, for example, you can pass OCAJP 8 and OCPJP 8 to become a certified Java developer, or you can pass &lt;a href="https://javarevisited.blogspot.com/2019/12/how-to-crack-java-se-11-certification.html"&gt;Oracle Certified Java Developer (1Z0-819) exam&lt;/a&gt; to become a certified developer. &lt;/p&gt;

&lt;p&gt;I suggest you to go for latest one Java SE 11 certification or 1Z0-819 exam but that's also bit tough and if you have only worked in Java 8 then going for Java SE 8 certification is also a good option. &lt;/p&gt;

&lt;p&gt;And, if you can wait, &lt;a href="https://education.oracle.com/java-se-17-developer/pexam_1Z0-829"&gt;Java SE 17 certification 1Z0-819&lt;/a&gt; is also on the way. &lt;/p&gt;

&lt;p&gt;Oracle's Java Certification has a tough passing percentage, close to 65% for both &lt;a href="https://medium.com/javarevisited/7-best-online-courses-to-prepare-for-oracles-java-se-8-certification-ocajp-8-and-ocpjp-8-2fd0d6779a9e"&gt;OCAJP&lt;/a&gt; (the Oracle Certified Associate Java Programmer) and &lt;a href="https://medium.com/javarevisited/top-5-books-and-courses-to-crack-ocpjp-8-certification-java-8-1z0-809-810-813-exam-c5236dde5f8a"&gt;OCPJP&lt;/a&gt; (the Oracle Certified Professional Java Programmer). &lt;/p&gt;

&lt;p&gt;You need in-depth knowledge of the Java language and API to succeed in the exam.&lt;/p&gt;

&lt;p&gt;As a note, preparing for OCPJP is not very different from OCAJP, though you have to use resources that are focused only on OCPJP. You also need to cover more topics and more in-depth because &lt;a href="https://medium.freecodecamp.org/how-to-pass-oracles-java-certifications-a-practical-guide-for-developers-e9b607ba6173"&gt;OCPJP 8&lt;/a&gt; is certainly a tough nut to crack.&lt;/p&gt;

&lt;p&gt;In order to prepare well and get a high score, here are some tips I am going to share. These tips have helped me in the past to score more than 90% on the certifications.&lt;/p&gt;

&lt;p&gt;So, without wasting any more time, here are my five tips to prepare well for the &lt;a href="http://javarevisited.blogspot.com/2013/07/2-books-to-prepare-oracle-java-7-certification-OCA-OCP-OCPJP.html#axzz4gdx9UfxA"&gt;OCAJP&lt;/a&gt; and &lt;a href="http://javarevisited.blogspot.com/2017/01/difference-between-ocpjp-8-upgrade-exams-1Z0-813-1Z0-810.html"&gt;OCPJP&lt;/a&gt; exams.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-tips-to-become-a-certified-java-developer-in-2022"&gt;
  &lt;/a&gt;
  5 Tips to become a Certified Java Developer in 2022
&lt;/h2&gt;

&lt;p&gt;Here is a list of 5 tips to prepare better for Java certification and become a certified Java programmer or Oracle certified Java Professional in 2022:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-join-a-good-course"&gt;
  &lt;/a&gt;
  &lt;strong&gt;1. Join a Good Course&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;There is no better way to prepare for Oracle's Java certification than joining a good course. First of all, it's active learning and you learn 80% of important things in just 20% of your time. &lt;/p&gt;

&lt;p&gt;I was a big fan of the book and I am still is but in last a few years, &lt;a href="https://javarevisited.blogspot.com/2018/01/top-5-java-8-certifications-courses-training-online-OCAJP.html"&gt;online courses&lt;/a&gt; have my main source of learning anything.&lt;/p&gt;

&lt;p&gt;One reason of that is cost, in recent years, mostly dude to Udemy, cost of online courses has come down a lot and some of the courses are even cheaper than books the key is to find a good course otherwise you would waste your time on course hopping.&lt;/p&gt;

&lt;p&gt;When it comes to Oracle's Java certification like OCAJP and OCPJP, &lt;a href="http://shareasale.com/r.cfm?b=1130601&amp;amp;u=880419&amp;amp;m=43514&amp;amp;urllink=&amp;amp;afftrack="&gt;Whizlab's OCAJP training course&lt;/a&gt; is my favorite. &lt;/p&gt;

&lt;p&gt;It provides the most comprehensive coverage and given their experience in the area, you can rest assured of quality.  There is also more than 50% discount available on this course for you.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://shareasale.com/r.cfm?b=1130601&amp;amp;u=880419&amp;amp;m=43514&amp;amp;urllink=&amp;amp;afftrack="&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--81qUcAhh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://1.bp.blogspot.com/-0zWpZUSQ2FI/W1yObsNxL1I/AAAAAAAAL5E/PokD0LeMcfENZgkjXzDDkRJUsV0ATpt9ACLcBGAs/s400/OCAJP%252B8%252BOnline%252BCourse%252BWhizlabs.png" alt="OCAJP 8 Online Training course " width="400" height="322"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you are looking for one more option then &lt;a href="https://click.linksynergy.com/fs-bin/click?id=JVFxdTr9V80&amp;amp;subid=0&amp;amp;offerid=323058.1&amp;amp;type=10&amp;amp;tmpid=14538&amp;amp;RD_PARM1=https%3A%2F%2Fwww.udemy.com%2Foracle-java-associate-certification-exam-course-1z0-808%2F"&gt;&lt;strong&gt;Oracle Java Certification - Pass the Associate 1Z0-808 Exam!&lt;/strong&gt;&lt;/a&gt; from Udemy is also a good option and you can get it within $10 on flash sale which happens every month.&lt;/p&gt;

&lt;p&gt;Similarly, if you are preparing for Java SE 11 certification, here are the recommended online courses for you:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fjava-se-11-developer-1z0-819-ocp-course-part-1%2F"&gt;Java SE 11 Developer 1Z0-819 OCP Course - Part 1&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=CuIbQrBnhiw&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fjava-se-11-developer-1z0-819-ocp-course-part-2%2F"&gt;Java SE 11 Developer 1Z0-819 OCP Course - Part 2&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fjava-se-11-developer-1z0-819-ocp-course-part-1%2F"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KHzqLBLm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-thumbs.comidoc.net/750/webp/2649928_84c5_2.webp" alt="Java SE 11 Developer 1Z0-819 OCP Course - Part 1 - Coupon" width="650" height="366"&gt;&lt;/a&gt; &lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#2-read-a-good-study-book"&gt;
  &lt;/a&gt;
  2. &lt;strong&gt;Read a Good Study Book&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;There is no better companion than a good study book if you are preparing for Java certifications. They cover all the exam topics, give practice questions at the end of the chapter, and share a lot of exam-specific tips that you don't find in any normal Java book.&lt;/p&gt;

&lt;p&gt;There are a lot of study guides available in the market, but if you are preparing for OCAJP 8 or Java SE 11 certification you can take a look at these resources to find a good study guide.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="http://javarevisited.blogspot.com/2016/10/best-books-for-ocajp8-exam-1z0-808-java8.html"&gt;List of good study guides for OCAJP 8 (1Z0-808) exam&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="http://javarevisited.blogspot.com/2016/10/top-2-books-for-ocpjp8-certification-1Z0-809-810-813.html"&gt;List of study guides for OCPJP8 Certification - Java 8 1Z0-809, 810, 813 Exam&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2019/10/top-5-books-courses-to-crack-oracles-java-se-11-certification-OCAJP11.html"&gt;List of study guides for Java SE 11 Certification&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/javarevisited/5-best-books-courses-and-practice-tests-to-crack-java-se-11-certification-ocajp-11-1z0-815-6c861d6d147f"&gt;List of Courses for Java SE 11&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="http://javarevisited.blogspot.com/2016/06/2-books-to-prepare-java-ee-6-web-component-exam-1z0-899-OCEJWCD.html#axzz4gbChum1G"&gt;List of study guides for OCEJWCD&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;But if you just need a one book, I highly recommend OCP Oracle Certified Professional Java SE 11 Developer Complete Study Guide: Exam 1Z0-815, Exam 1Z0-816, and Exam 1Z0-817 book by Jeanne Boyarsky (Author), Scott Selikoff (Author) on Amazon. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.amazon.com/Oracle-Certified-Professional-Developer-Complete/dp/1119619130?tag=javamysqlanta-20"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5ZsazZ6m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/191/0%2AiMw5d_eZawxI0sok.jpg" alt="best Java SE 11 Developer exam book" width="191" height="239"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#3choose-a-good-exam-simulator"&gt;
  &lt;/a&gt;
  3.&lt;strong&gt;Choose a Good Exam Simulator&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;After choosing a good book or study guide, the next thing you need is a good exam simulator. This is must if you want to score high but not required if you just aim for passing the exam. The exam simulators will help you to develop speed and accuracy required to complete all questions in 2.5 hours.&lt;/p&gt;

&lt;p&gt;Here are some of my recommendations for exam simulators:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; &lt;a href="http://shrsl.com/?g0ce"&gt;Whizlab's Exam Simulator&lt;/a&gt;\
These are the best in the market, tried and tested by many developers including myself.&lt;/li&gt;
&lt;li&gt; &lt;strong&gt;&lt;a href="https://enthuware.com/index.php/java-mock-exams/oracle-certified-professional/java-se-8-1z0-809"&gt;Enthuware's Practice Test&lt;/a&gt;&lt;/strong&gt;\
That's again second best in my opinion, also very cheap, you can just get it under $10. It's also tried and tested by many certified Java developers&lt;/li&gt;
&lt;li&gt; &lt;strong&gt;&lt;a href="https://www.certification-questions.com/java8-dumps/1Z0-808-dumps.html?affiliateCode=fcff36fd-557a-4713-abf6-973e9924770f&amp;amp;utm_source=Javin&amp;amp;utm_medium=affiliate&amp;amp;utm_campaign=affiliate"&gt;David Mayer's Practice Test&lt;/a&gt;&lt;/strong&gt;
If you need to go the extra mile with your preparation, I suggest you solve the 450+ problems from David Mayer's Test.&lt;/li&gt;
&lt;li&gt; &lt;strong&gt;&lt;a href="https://click.linksynergy.com/fs-bin/click?id=JVFxdTr9V80&amp;amp;subid=0&amp;amp;offerid=323058.1&amp;amp;type=10&amp;amp;tmpid=14538&amp;amp;RD_PARM1=https%3A%2F%2Fwww.udemy.com%2Fjava-oca%2F"&gt;Java Certification: OCA (1Z0--808) Exam Simulation &lt;/a&gt;&lt;/strong&gt;
260+ multiple-choice questions with explanation to assess Oracle Certified Associate, Java SE 8 Programmer I preparation&lt;/li&gt;
&lt;li&gt; &lt;strong&gt;&lt;a href="https://click.linksynergy.com/fs-bin/click?id=JVFxdTr9V80&amp;amp;subid=0&amp;amp;offerid=323058.1&amp;amp;type=10&amp;amp;tmpid=14538&amp;amp;RD_PARM1=https%3A%2F%2Fwww.udemy.com%2Fjava-ocajp%2F"&gt;Java Certification‚Ää---‚ÄäOCA (1Z0--808) Topic-wise Tests [2018]&lt;/a&gt;&lt;/strong&gt;
Multiple choice questions covering all the exam objectives of Oracle Certified Associate, Java SE 8 Programmer I&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Btw, if you are buying Whizlab's simulator then you can also use the coupon code "&lt;strong&gt;JAVACOMBO2"&lt;/strong&gt; to get a 25% discount.&lt;/p&gt;

&lt;p&gt;Since they provide lifetime access to their simulator, I suggest you buy both OCAJP and OCPJP simulator together and take advantage of this coupon code.&lt;/p&gt;

&lt;p&gt;I suggest you to keep doing mock tests until you score 80% on a consistent basis before going for real exam.  If you need more choices, here is some more recommendation on exam simulators&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="http://www.java67.com/2017/03/top-10-ocajp-and-ocpjp-exam-simulators.html"&gt;Top 10 OCAJP and OCPJP Exam Simulators for Java Certifications&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="http://javarevisited.blogspot.sg/2016/11/top-5-java-8-practice-test-and-exam-simulators-best-OCAJP-OCAPJP.html"&gt;Top 5 Java 8 Practice Test and Exam Simulators (OCAJP and OCPJP) - Best of lot&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And, if you are preparing for OCJP Java SE 11 Developer certification, here are the recommended mock tests and practice questions:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=CuIbQrBnhiw&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fjava-se-11-certification-exam-1z0-819-practice-tests%2F"&gt;OCP Java SE 11 Developer Exam 1Z0-819 Practice Tests 2021&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://click.linksynergy.com/deeplink?id=CuIbQrBnhiw&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Focp-java-se-11-developer-1z0-819-practice-exam%2F"&gt;OCP Java SE 11 Developer 1Z0-819 Practice Exams new 2021!&lt;/a&gt; &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you are preparing for Java SE 11 Developer exam, I also have a practice test based course on Udemy where I have shared 250+ questions with explanations for practice &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.udemy.com/course/java-se-11-certification-exam-1z0-819-practice-tests/?referralCode=6A43D9FD2DD560081062"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HS3SDIG7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://hackernoon.com/_next/image%3Furl%3Dhttps%253A%252F%252Fcdn.hackernoon.com%252Fimages%252FMQzhgEvAeOXyPo3IjFRz4IZU3K83-ml7z35hd.jpeg%26w%3D3840%26q%3D75" alt="best Java SE 11 Developer Certification Practice Test" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#4-regularly-participate-on-forums-"&gt;
  &lt;/a&gt;
  *&lt;em&gt;4. Regularly Participate on Forums *&lt;/em&gt;
&lt;/h3&gt;

&lt;p&gt;You have to keep yourself motivated and up to date on the exam and other details. With that in mind, there is nothing better than participating in forums like &lt;a href="http://coderanch.com/"&gt;CodeRanch&lt;/a&gt; or Oracle's &lt;a href="https://community.oracle.com/community/technology_network_community/certification/"&gt;official Java Certification forum&lt;/a&gt;. You can ask questions, clear doubts, and become familiar with other candidates who are preparing for exams. You may be able to find some buddies as well who can prepare with you for exams.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bHamkN7t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dz2cdn1.dzone.com/storage/temp/5240861-coderanch-java-forum.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bHamkN7t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dz2cdn1.dzone.com/storage/temp/5240861-coderanch-java-forum.png" alt="Image title" width="880" height="390"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#5-solve-as-many-practice-questions-as-possible"&gt;
  &lt;/a&gt;
  &lt;strong&gt;5. Solve As Many Practice Questions As Possible&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Practice makes you perfect, so solve as many as you can. You will slowly develop the speed and accuracy needed for the exam. Here are some free practice tests for the OCPJP exam&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="http://javarevisited.blogspot.sg/2015/11/5-free-ocajp8-ocpjp8-mock-exams-and-practice-questions.html"&gt;5 free OCAJP 8/OCPJP 8 mock exams, and practice questions --- 1Z0-808 809 (Java 8 Certification)&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="http://javarevisited.blogspot.sg/2017/04/ocajp-1z0-808-best-books-and-mock-exams-Java8-certification.html"&gt;OCAJP 1Z0-808 --- Best books and mock exams for Java 8 OCA certification&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="http://javarevisited.blogspot.sg/2016/08/5-free-ocajp-7-and-ocpjp7-mock-exams.html"&gt;5 free OCAJP 7 and OCPJP 7 mock exams --- online practice test (1Z0-803 and 1Z0-804&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are many such free exams available and Google is your friend. You can find a lot of them to get started with.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#6-code-every-day"&gt;
  &lt;/a&gt;
  &lt;strong&gt;6. Code Every Day&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;There is no substitute for coding. You must code daily to develop a coding sense, which will help you to read the code given in the real exam. In the case of &lt;a href="https://medium.com/javarevisited/java-certifications-how-to-crack-it-practical-tips-to-prepare-ocajp-and-ocpjp-exams-538f6fe36b37"&gt;OCPJP&lt;/a&gt;, it becomes even more important because attention to detail is required to understand each coding question before you select options.&lt;/p&gt;

&lt;p&gt;All the best for your Java certifications. Make it a goal this year, and you will surely be a certified Java Developer in the next year. &lt;/p&gt;

&lt;p&gt;If you want to wait for new Java SE 17 certification, you can also wait but you should start preparation now so that you can cover 90% topics which will most likely remain same. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#ps%E2%80%8A%E2%80%8Aif-you-need-some-free-resources-you-can-check-out-this-list-of-free-ocajp-8-and-ocpjp-8-mock-exams-to-start-your-preparation"&gt;
  &lt;/a&gt;
  P.S.‚Ää---‚ÄäIf you need some FREE resources, you can check out this list of &lt;a href="https://javarevisited.blogspot.com/2015/11/5-free-ocajp8-ocpjp8-mock-exams-and-practice-questions.html"&gt;free OCAJP 8 and OCPJP 8 mock exams&lt;/a&gt; to start your preparation.
&lt;/h4&gt;

</description>
      <category>java</category>
      <category>certification</category>
      <category>programming</category>
      <category>development</category>
    </item>
    <item>
      <title>Week full of Next.js</title>
      <author>Tuomo Kankaanp√§√§</author>
      <pubDate>Sat, 06 Nov 2021 09:56:30 +0000</pubDate>
      <link>https://dev.to/tumee/week-full-of-nextjs-37di</link>
      <guid>https://dev.to/tumee/week-full-of-nextjs-37di</guid>
      <description>&lt;p&gt;&lt;em&gt;This article was originally published on &lt;a href="https://www.tuomokankaanpaa.com/newsletter"&gt;my newsletter&lt;/a&gt; last week. I publish previous week's newsletter here on the blog. If you want to read these as soon as they are published, &lt;a href="https://www.tuomokankaanpaa.com/newsletter"&gt;sign up&lt;/a&gt; for the newsletter!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Ahoy,&lt;/p&gt;

&lt;p&gt;Past week was full of web development and Next.js!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#nextjs-headless-cms-graphql-nextjs-tutorial-for-beginners"&gt;
  &lt;/a&gt;
  Next.js + Headless CMS + GraphQL - Next.js tutorial for beginners
&lt;/h2&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/_VIF1if-dNA"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;I released an extensive Next.js tutorial which was almost an hour long. I have never done a tutorial this extensive before. It was great to be able to finally release it because I had been working on it quite a lot.&lt;/p&gt;

&lt;p&gt;The tutorial teaches you how to integrate a headless CMS to a Next.js blog application. This was a part 2 for the "&lt;a href="https://www.youtube.com/watch?v=giHGL3ZppTQ"&gt;Building a blog with Next.js - Next.js tutorial for beginners&lt;/a&gt;" tutorial I mentioned in the newsletter &lt;a href="https://tuomokankaanpaa.com/blog/how-to-build-a-blog-with-next-js"&gt;couple of weeks ago&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can find the tutorial (both part 1 and part 2) from the &lt;a href="https://www.youtube.com/tuomokankaanpaa"&gt;Youtube channel&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#nextjs-conf"&gt;
  &lt;/a&gt;
  Next.js Conf
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://nextjs.org/conf"&gt;Next.js conf&lt;/a&gt; 2021 was held on 26.10.2021. I watched the conference live and was really excited about all the new things that were announced. Here are some highlights.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#nextjs-12"&gt;
  &lt;/a&gt;
  Next.js 12
&lt;/h3&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/S9jrLAyVvx4"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;First of all Next.js 12 was announced which is their biggest release ever. With Next.js 12 we get faster build and fast refresh times, URL imports, Native ES Modules support and Next.js Middleware just to mention few.&lt;/p&gt;

&lt;p&gt;If you want to learn more about Next.js 12, I made a video detailing and explaining all the new features and improvements of Next.js 12. You can watch it on the &lt;a href="https://www.youtube.com/tuomokankaanpaa"&gt;Youtube channel&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#vercel-edge-functions"&gt;
  &lt;/a&gt;
  Vercel edge functions
&lt;/h3&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/NlBSheYPKkg"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Another thing that was announced in the Next.js conf was &lt;a href="https://www.vercel.com/edge"&gt;Vercel Edge functions&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This is how edge functions are described by the &lt;a href="https://vercel.com/docs/concepts/functions/edge-functions"&gt;docs&lt;/a&gt;: To achieve both speed and dynamism, you can use Edge Functions. They allow you to deliver content to your sites visitors with speed and personalization, are deployed globally by default on Vercel's Edge Network, and have zero cold starts. They enable you to move server-side logic to the Edge, close to your visitors origin.&lt;/p&gt;

&lt;p&gt;These were a bit hard for me to first understand at first when watching the conference. After the conference I started to study them in more in depth. After some hours spent drinking coffee and reading docs and testing different things, I finally was able to wrap my head around them.&lt;/p&gt;

&lt;p&gt;At this point I felt that I wanted to make a video sharing what I had learned. So I published my third video of the week: &lt;a href="https://www.youtube.com/watch?v=NlBSheYPKkg"&gt;Next.js 12 - Middleware &amp;amp; Edge functions explained&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In the video I also explain what the new Next.js 12 feature Middleware is because it is actually something that works together with Edge functions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wrapping-it-up"&gt;
  &lt;/a&gt;
  Wrapping it up
&lt;/h2&gt;

&lt;p&gt;So as you can see, it was a pretty busy but exciting week! I am super excited that I was able to make the videos about Next.js 12 and Edge functions + Middleware this week, on top of my regular Tuesday video.&lt;/p&gt;

&lt;p&gt;It is also encouraging that the videos got a really good response and you guys have really liked them! So I want to say thank you for all the comments and likes you have sent!&lt;/p&gt;

&lt;p&gt;That's all for this week!&lt;/p&gt;

&lt;p&gt;Cheers,&lt;br&gt;
Tuomo&lt;/p&gt;

</description>
      <category>nextjs</category>
      <category>webdev</category>
      <category>jamstack</category>
      <category>javascript</category>
    </item>
    <item>
      <title>UseRef deatailed tutorial</title>
      <author>Saleh Mubashar</author>
      <pubDate>Sat, 06 Nov 2021 09:19:12 +0000</pubDate>
      <link>https://dev.to/salehmubashar/useref-deatailed-tutorial-5933</link>
      <guid>https://dev.to/salehmubashar/useref-deatailed-tutorial-5933</guid>
      <description>&lt;p&gt;Hi guys&lt;br&gt;
My new &lt;a href="https://discover.hubpages.com/technology/useRef"&gt;tutorial&lt;/a&gt; is published at hubpages.&lt;br&gt;
This one is a detailed post about useRef and useRef vs useState.&lt;br&gt;
There also a demo walkthrough as well&lt;br&gt;
I would really appreciate if you check it out.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#tutorial-link"&gt;
  &lt;/a&gt;
  &lt;a href="https://discover.hubpages.com/technology/useRef"&gt;Tutorial link&lt;/a&gt;
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#my-profile"&gt;
  &lt;/a&gt;
  &lt;a href="https://hubpages.com/@salehmubashar"&gt;My profile&lt;/a&gt;
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#create-a-hubpages-account-and-earn-by-writing"&gt;
  &lt;/a&gt;
  &lt;a href="http://hubpages.com/_dev/user/new"&gt;Create a hubpages account&lt;/a&gt; and earn by writing.
&lt;/h4&gt;

&lt;p&gt;Once again, thank you all.&lt;br&gt;
Until next time&lt;br&gt;
Cheers :)&lt;/p&gt;

</description>
    </item>
    <item>
      <title>What are SOLID Principles? Explained with OOP Concepts.</title>
      <author>Praveena Thavarajah</author>
      <pubDate>Sat, 06 Nov 2021 09:12:32 +0000</pubDate>
      <link>https://dev.to/praveenat/what-are-solid-principles-explained-with-oop-concepts-1n9o</link>
      <guid>https://dev.to/praveenat/what-are-solid-principles-explained-with-oop-concepts-1n9o</guid>
      <description>&lt;p&gt;Software developers implement codes to meet the users‚Äô requirements and satisfy the clients. Some principles have to follow by software developers to enhance their code writing skills.&lt;/p&gt;

&lt;p&gt;The SOLID principles have considerable responsibility to guide the software developers, to make the software design by improving the code quality.&lt;/p&gt;

&lt;p&gt;An American software engineer named Robert C.Martin created this principle.&lt;/p&gt;

&lt;p&gt;Solid principles have five(5) principles. The name is created by considering the first five letters from each principle.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The five principles are&lt;/strong&gt;,&lt;br&gt;
S ‚Äî Single Responsibility Principle&lt;br&gt;
O ‚Äî Open Closed Principle.&lt;br&gt;
L ‚Äî Liskov Substitution Principle.&lt;br&gt;
I ‚Äî Interface Segregation Principle.&lt;br&gt;
D ‚Äî Dependency Inversion Principle.&lt;/p&gt;

&lt;p&gt;Let us have a look at each of the principles. Read more at &lt;a href="https://praveena-thavarajah.blogspot.com/2021/11/what-are-solid-principles-oop-concepts.html"&gt;https://praveena-thavarajah.blogspot.com/2021/11/what-are-solid-principles-oop-concepts.html&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Thanks for reading the blog. I hope you got to know about SOLID principles. For more posts follow me through my social media.&lt;/p&gt;

</description>
      <category>programming</category>
      <category>softwaredevelopment</category>
      <category>beginners</category>
      <category>blog</category>
    </item>
    <item>
      <title>Day 29 of 100 Days of Code &amp; Scrum: 4th Weekly Retrospective, WTF It's Been a Month!?</title>
      <author>Rammina</author>
      <pubDate>Sat, 06 Nov 2021 08:52:23 +0000</pubDate>
      <link>https://dev.to/rammina/day-29-of-100-days-of-code-scrum-4th-weekly-retrospective-wtf-its-been-a-month-1pam</link>
      <guid>https://dev.to/rammina/day-29-of-100-days-of-code-scrum-4th-weekly-retrospective-wtf-its-been-a-month-1pam</guid>
      <description>&lt;p&gt;Guess what, everyone?!&lt;/p&gt;

&lt;p&gt;I've already been blogging daily for a month now! It's my 4th Weekly Retrospective, and I didn't even notice I already got this far. It definitely has been a rough, yet fulfilling journey!&lt;/p&gt;

&lt;p&gt;Thank you to everyone who have followed me so far! A lot of you have encouraged me to keep going through this challenge.&lt;/p&gt;

&lt;p&gt;Special thanks to my wife and editor, May for editing images, sharing ideas for content, and supporting my career and decisions.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kcRHHA8n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/frhzyxqhljek09eqi5iw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kcRHHA8n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/frhzyxqhljek09eqi5iw.png" alt="Finish Line" width="880" height="550"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Anyway, I'm not going to skip my retrospective, so let's move on to my daily report!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#weekly-sprint-goals"&gt;
  &lt;/a&gt;
  Weekly Sprint Goals
&lt;/h2&gt;

&lt;p&gt;For reference, here were the Sprint Goals for this week:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;learn and review Next.js.&lt;/li&gt;
&lt;li&gt;lay out my plans for my company's website.&lt;/li&gt;
&lt;li&gt;write user stories for my website, so I can plan ahead and prioritize what features I will really need right away and what might be desirable in the future.&lt;/li&gt;
&lt;li&gt;finish my beginner Scrum guide.&lt;/li&gt;
&lt;li&gt;finish reading &lt;a href="https://www.infoq.com/minibooks/scrum-xp-from-the-trenches-2/"&gt;Scrum and XP from the Trenches&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;continue studying for Professional Scrum Master I (PSM I) certification.&lt;/li&gt;
&lt;li&gt;finish my guides about Scrum.&lt;/li&gt;
&lt;li&gt;continue networking, but allocate less time to this (coding is more important).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;...I think I did everything &lt;em&gt;except finishing my beginner Scrum guide&lt;/em&gt;!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#weekly-review"&gt;
  &lt;/a&gt;
  Weekly Review
&lt;/h2&gt;

&lt;p&gt;I was really close to achieving all of my weekly goals! Here are what I've done:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;finish the official Next.js tutorial.&lt;/li&gt;
&lt;li&gt;finish reading &lt;a href="https://www.infoq.com/minibooks/scrum-xp-from-the-trenches-2/"&gt;Scrum and XP from the Trenches&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;make initial plans for my company's website.&lt;/li&gt;
&lt;li&gt;write user stories for my website.&lt;/li&gt;
&lt;li&gt;created a temporary, prototype company banner.&lt;/li&gt;
&lt;li&gt;continue studying for Professional Scrum Master I (PSM I) certification.&lt;/li&gt;
&lt;li&gt;continue to network, but this time I did not spend as much time on social media!&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#weekly-retrospective"&gt;
  &lt;/a&gt;
  Weekly Retrospective
&lt;/h2&gt;

&lt;p&gt;Moving on, let's tackle what I've managed to do well, what my shortcomings are, and what I could do better next time.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-went-great"&gt;
  &lt;/a&gt;
  What Went Great
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;finish the official Next.js tutorial.&lt;/li&gt;
&lt;li&gt;finish reading &lt;a href="https://www.infoq.com/minibooks/scrum-xp-from-the-trenches-2/"&gt;Scrum and XP from the Trenches&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;created a temporary, prototype company banner.&lt;/li&gt;
&lt;li&gt;started working on my company's website, built with Next.js.&lt;/li&gt;
&lt;li&gt;reached out to multiple people on different platforms, but without getting too distracted by social media.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#some-mistakes-ive-made"&gt;
  &lt;/a&gt;
  Some Mistakes I've Made
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;I couldn't finish my &lt;em&gt;Introduction to Scrum&lt;/em&gt; guide.&lt;/li&gt;
&lt;li&gt;I don't know why I keep forgetting to make the guide.&lt;/li&gt;
&lt;li&gt;AGAIN, forgot to install a website blocker to stop myself from checking off-topic content (subconsciously, I could be avoiding this).&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#things-i-could-improve-on"&gt;
  &lt;/a&gt;
  Things I Could Improve On
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;stop procrastinating writing the Scrum guide.&lt;/li&gt;
&lt;li&gt;I should DEFINITELY install something that blocks me from checking certain sites at a specific time.&lt;/li&gt;
&lt;li&gt;prioritize tasks that are more likely to help me meet my weekly goals.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I'm rejoicing over the fact that I've been keeping this up for a month now.&lt;/p&gt;

&lt;p&gt;Thank you once again, everyone! Have a great weekend!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_oVqbnxC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kjvzonk4b2rnjw2f98mk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_oVqbnxC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kjvzonk4b2rnjw2f98mk.png" alt="Thank You Banner" width="880" height="293"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#resourcesrecommended-readings"&gt;
  &lt;/a&gt;
  Resources/Recommended Readings
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://nextjs.org/learn/basics/create-nextjs-app?utm_source=next-site&amp;amp;utm_medium=nav-cta&amp;amp;utm_campaign=next-website"&gt;Official Next.js tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.infoq.com/minibooks/scrum-xp-from-the-trenches-2/"&gt;Scrum and XP from the Trenches&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://scrumguides.org/scrum-guide.html"&gt;The 2020 Scrum Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mlapshin.com/index.php/scrum-quizzes/"&gt;Mikhail Lapshin's Scrum Quizzes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#disclaimer"&gt;
  &lt;/a&gt;
  DISCLAIMER
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;This is not a guide&lt;/strong&gt;, it is just me sharing my experiences and learnings. This post only expresses my thoughts and opinions (based on my limited knowledge) and is in no way a substitute for actual references. If I ever make a mistake or if you disagree, I would appreciate corrections in the comments!&lt;/p&gt;

</description>
      <category>100daysofcode</category>
      <category>beginners</category>
      <category>javascript</category>
      <category>programming</category>
    </item>
    <item>
      <title>Flask Black Dashboard - Product Update</title>
      <author>Sm0ke</author>
      <pubDate>Sat, 06 Nov 2021 08:50:42 +0000</pubDate>
      <link>https://dev.to/sm0ke/flask-black-dashboard-product-update-eae</link>
      <guid>https://dev.to/sm0ke/flask-black-dashboard-product-update-eae</guid>
      <description>&lt;p&gt;Hello Coders!&lt;/p&gt;

&lt;p&gt;This article presents &lt;a href="https://appseed.us/admin-dashboards/flask-dashboard-black"&gt;Flask Dashboard Black&lt;/a&gt;, a simple open-source project crafted on top of &lt;strong&gt;Black Dashboard&lt;/strong&gt; BS4 design. The product was recently updated to use the latest Flask stable version, plus a new codebase structure and Gulp tooling for SCSS compilation. For newcomers, &lt;strong&gt;Flask&lt;/strong&gt; is a popular Python web framework actively supported by many open-source enthusiasts. The project might help developers to code faster a new dashboard or simply by beginners for eLearning purposes. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Thanks for reading!&lt;/em&gt; - Content provided by &lt;strong&gt;&lt;a href="https://appseed.us/"&gt;App Generator&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;ul&gt;
&lt;li&gt;‚ú® &lt;a href="https://appseed.us/admin-dashboards/flask-dashboard-black"&gt;Flask Dashboard Black&lt;/a&gt; - product page&lt;/li&gt;
&lt;li&gt;‚ú® &lt;a href="https://flask-black-dashboard.appseed-srv1.com/"&gt;Flask Dashboard Black&lt;/a&gt; - LIVE deployment&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hVqB3jSs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/11dknxjg7mw0485fkix6.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hVqB3jSs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/11dknxjg7mw0485fkix6.gif" alt="Flask Dashboard Black - Gif animated presentation." width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#update-summary"&gt;
  &lt;/a&gt;
  Update Summary
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Bump Codebase: Flask Dashboard v2.0.0&lt;/li&gt;
&lt;li&gt;Dependencies update (all packages)&lt;/li&gt;
&lt;li&gt;Flask==2.0.1 (latest stable version)&lt;/li&gt;
&lt;li&gt;Better Code formatting&lt;/li&gt;
&lt;li&gt;Improved Files organization&lt;/li&gt;
&lt;li&gt;Optimized imports&lt;/li&gt;
&lt;li&gt;Docker Scripts Update&lt;/li&gt;
&lt;li&gt;Gulp Tooling (SASS Compilation)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The codebase was updated to a new, more intuitive structure and optimized Docker scripts.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&amp;lt; PROJECT ROOT &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
   |
   |-- apps/
   |    |
   |    |-- home/                     &lt;span class="c"&gt;# Serves HTML files&lt;/span&gt;
   |    |-- authentication/           &lt;span class="c"&gt;# Handles auth routes&lt;/span&gt;
   |    |
   |    |-- static/
   |    |    |-- &amp;lt;css, JS, images&amp;gt;    &lt;span class="c"&gt;# CSS files, Javascripts files&lt;/span&gt;
   |    |
   |    |-- templates/                &lt;span class="c"&gt;# Templates used to render pages&lt;/span&gt;
   |    |    |-- includes/            &lt;span class="c"&gt;# HTML chunks and components&lt;/span&gt;
   |    |    |-- layouts/             &lt;span class="c"&gt;# Master pages&lt;/span&gt;
   |    |    |-- accounts/            &lt;span class="c"&gt;# Authentication pages&lt;/span&gt;
   |    |    |-- home/                &lt;span class="c"&gt;# UI Kit Pages&lt;/span&gt;
   |    |         |-- index.html      &lt;span class="c"&gt;# Index page&lt;/span&gt;
   |    |         |-- 404-page.html   &lt;span class="c"&gt;# 404 page&lt;/span&gt;
   |    |         |-- &lt;span class="k"&gt;*&lt;/span&gt;.html          &lt;span class="c"&gt;# All other pages&lt;/span&gt;
   |    |    
   |  config.py                       &lt;span class="c"&gt;# Set up the app&lt;/span&gt;
   |    __init__.py                   &lt;span class="c"&gt;# Initialize the app&lt;/span&gt;
   |
   |-- requirements.txt               &lt;span class="c"&gt;# Development modules&lt;/span&gt;
   |
   |-- Dockerfile                     &lt;span class="c"&gt;# Deployment&lt;/span&gt;
   |-- docker-compose.yml             &lt;span class="c"&gt;# Deployment&lt;/span&gt;
   |-- gunicorn-cfg.py                &lt;span class="c"&gt;# Deployment   &lt;/span&gt;
   |-- nginx                          &lt;span class="c"&gt;# Deployment&lt;/span&gt;
   |    |-- appseed-app.conf          &lt;span class="c"&gt;# Deployment &lt;/span&gt;
   |
   |-- .env                           &lt;span class="c"&gt;# Inject Configuration &lt;/span&gt;
   |-- run.py                         &lt;span class="c"&gt;# Start the app - WSGI gateway&lt;/span&gt;
   |
   |-- &lt;span class="k"&gt;********************************************************&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once we get familiar with the structure, we can use the Docker scripts shipped by the product to compile and start the product. Let's go!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step #1&lt;/strong&gt; - Clone/download sources&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git clone https://github.com/app-generator/flask-black-dashboard.git
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;flask-black-dashboard 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step #2&lt;/strong&gt; - Start in Docker&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;docker-compose pull   &lt;span class="c"&gt;# download modules&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;docker-compose build  &lt;span class="c"&gt;# local set up&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;docker-compose up     &lt;span class="c"&gt;# start the app  &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once all the above commands are executed, we should see &lt;strong&gt;Flask Dashboard Black&lt;/strong&gt; running in the browser &lt;code&gt;http://localhost:85&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oFsNpR_x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bacpczfpm90htd1ppf0h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oFsNpR_x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bacpczfpm90htd1ppf0h.png" alt="Flask Black Dashboard - Light Mode" width="880" height="488"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Flask Black Dashboard&lt;/strong&gt; - User Profile&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--E6byHr6m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7588ruiehbwma7pb3za3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E6byHr6m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7588ruiehbwma7pb3za3.png" alt="Flask Black Dashboard - User Profile Page." width="880" height="493"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#black-dashboard-design-info"&gt;
  &lt;/a&gt;
  Black Dashboard - Design Info
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Black Dashboard&lt;/strong&gt; is a beautiful Bootstrap 4 Admin Dashboard with a huge number of components built to fit together and look amazing. If you are looking for a tool to manage and visualize data about your business, this dashboard is the thing for you.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Black Dashboard&lt;/strong&gt; features over 16 individual components, giving you the freedom of choosing and combining. This means that there are thousands of possible combinations. All components can take variations in color, that you can easily modify using SASS files. You will save a lot of time going from prototyping to full-functional code because all elements are implemented.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YBvMHRa6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3yd4xnd79yrausm44t8z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YBvMHRa6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3yd4xnd79yrausm44t8z.png" alt="Black Dashboard - Official Product Page" width="800" height="600"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Thanks for reading!&lt;/strong&gt; For more resources, please access:&lt;/p&gt;
&lt;/blockquote&gt;




&lt;ul&gt;
&lt;li&gt;AppSeed for &lt;a href="https://appseed.us/support"&gt;support&lt;/a&gt; and more &lt;a href="https://appseed.us/admin-dashboards/flask"&gt;Flask Dashboards&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://appseed.us/admin-dashboards/flask-dashboard-black-pro"&gt;Flask Black Dashboard PRO&lt;/a&gt; - for more pages and components &lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>webdev</category>
      <category>flask</category>
      <category>dashboards</category>
      <category>opensource</category>
    </item>
    <item>
      <title>Using iCalendar for semi-predictable but oddball events</title>
      <author>webchick</author>
      <pubDate>Sat, 06 Nov 2021 08:49:06 +0000</pubDate>
      <link>https://dev.to/webchick/using-icalendar-for-semi-predictable-but-oddball-events-20nk</link>
      <guid>https://dev.to/webchick/using-icalendar-for-semi-predictable-but-oddball-events-20nk</guid>
      <description>&lt;p&gt;(RFC reading for fun &lt;em&gt;and&lt;/em&gt; pragmatism!)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#background"&gt;
  &lt;/a&gt;
  Background
&lt;/h2&gt;

&lt;p&gt;My girlfriend is a nurse, and around these parts that means she works shift work. Her schedule is a block of shifts (sometimes day shifts, sometimes evening shifts) followed by a block of days off (which also varies as to the number of days), and the entire schedule itself repeats every so many weeks. Basically, picture something like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oFqMhNla--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hx39j2baaf7ynzf1xabr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oFqMhNla--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hx39j2baaf7ynzf1xabr.png" alt="A grid showing Day and Evening shifts spread throughout a calendar in an unpredictable manner" width="880" height="298"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;..and repeat.&lt;/p&gt;

&lt;p&gt;While there &lt;em&gt;is&lt;/em&gt; a pattern to it, it essentially means that without access to a copy of her schedule readily at hand, it is &lt;em&gt;literally impossible&lt;/em&gt; to know if we are free on some random day next month. So obviously, I want an electronic version at the ready for these types of inquiries.&lt;/p&gt;

&lt;p&gt;Unfortunately, it is also &lt;em&gt;incredibly tedious&lt;/em&gt; to enter all of these shifts one by one, by hand, into something like Google Calendar, because it requires manually creating dozens of events (‚Äúrepeats every other Monday‚Äù unfortunately does not cut it here :P), and on each of them, manually selecting ‚ÄúRepeats,‚Äù manually selecting ‚ÄúCustom‚Ä¶‚Äù, manually selecting ‚Äúevery X weeks‚Äù, all without introducing any errors. &lt;em&gt;Ugh.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Fortunately, here to save the day‚Ä¶ the iCalendar specification!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-the-icalendar-specification"&gt;
  &lt;/a&gt;
  What is the iCalendar specification?
&lt;/h2&gt;

&lt;p&gt;The &lt;a href="https://www.ietf.org/rfc/rfc2445.txt"&gt;iCalendar specification&lt;/a&gt; (as in &lt;a href="https://www.ietf.org/rfc/rfc2445.txt"&gt;RFC 5545&lt;/a&gt;, not to be confused with good ol‚Äô &lt;a href="http://www.apple.com/ical/"&gt;iCal&lt;/a&gt;, now known as Apple‚Äôs &lt;a href="https://support.apple.com/en-ca/guide/calendar/welcome/mac"&gt;Calendar&lt;/a&gt; app) is a ‚Äúdata format for representing and exchanging calendaring and scheduling information such as events, to-dos, journal entries, and free/busy information, independent of any particular calendar service or protocol.‚Äù&lt;/p&gt;

&lt;p&gt;Basically, it‚Äôs a list of rules about how to describe events in computer-friendly language, and if you follow those rules, users can import your events consistently in whatever various calendaring programs they might be using. Glancing through the specification, you‚Äôll see it talks about how to specify all kinds of features you may have seen in various calendaring apps, such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Specify a location&lt;/li&gt;
&lt;li&gt;Specify a time zone&lt;/li&gt;
&lt;li&gt;Repeat an event with a certain frequency&lt;/li&gt;
&lt;li&gt;Note whether someone‚Äôs an optional or required attendee&lt;/li&gt;
&lt;li&gt;Denote whether it shows up as busy or free time on someone‚Äôs calendar&lt;/li&gt;
&lt;li&gt;Send an alert a few minutes before an event happens&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;...and much, much more.&lt;/p&gt;

&lt;p&gt;If you‚Äôve ever received an email with a .ics file attached, and when you click it you‚Äôre prompted to add an event to your calendar, such as below‚Ä¶ Congratulations! You officially have experience with iCalendar! :D&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OKdbij23--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e1tswavc4g6u0dmihk8j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OKdbij23--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e1tswavc4g6u0dmihk8j.png" alt="An image of an calendar prompt, asking whether to add a new event to your calendar" width="880" height="350"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let‚Äôs talk about what iCalendar looks like under the hood.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-basics-of-icalendar"&gt;
  &lt;/a&gt;
  The Basics of iCalendar
&lt;/h2&gt;

&lt;p&gt;The ‚Äúsimplest thing that can possibly work‚Äù in terms of iCalendar is a text file, with an .ics extension, that contains the following properties:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;BEGIN:VCALENDAR ‚Ä¶ END:VCALENDAR&lt;/code&gt;&lt;/strong&gt;: (required) Marks the beginning and end of the iCalendar object as a whole (similar to how  ‚Ä¶  wraps around a web page).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;VERSION&lt;/code&gt;&lt;/strong&gt;: (required) The version number of the specification required (generally, ‚Äú2.0‚Äù unless you‚Äôre feeling super retro).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;PRODID&lt;/code&gt;&lt;/strong&gt;: (required) A unique identifier for the product that created the iCalendar object. Some real-world examples are &lt;code&gt;‚Äú-//Google Inc//Google Calendar 70.9054//EN‚Äù&lt;/code&gt; for Google Calendar and &lt;code&gt;‚Äú-//Apple Inc.//Mac OS X 10.14.6//EN‚Äù&lt;/code&gt; for Apple Calendar.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;BEGIN:VEVENT ‚Ä¶ BEGIN:VEVENT&lt;/code&gt;&lt;/strong&gt;: One or more of these pairings mark the beginning and end of an event definition.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;UID&lt;/code&gt;&lt;/strong&gt;: (required) A unique identifier for the event. &lt;code&gt;[buncha-random-chars]&lt;/code&gt; and &lt;code&gt;[buncha-random-chars]@[yourdomain.com]&lt;/code&gt; are both common patterns.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;DTSTAMP&lt;/code&gt;&lt;/strong&gt;: (required) The date/time that the event was created (not to be confused with when it starts, which is the next one).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;code&gt;DTSTART ‚Ä¶ DTEND&lt;/code&gt;&lt;/strong&gt;: When the event starts and ends.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here‚Äôs a simple example tying all of that together:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;BEGIN:VCALENDAR
VERSION:2.0
PRODID:-//Example Corp//Example Calendar App 1.0//EN
BEGIN:VEVENT
UID:20210310T001345Z-0242ac130003@example.com
DTSTAMP:20210310T001345Z
DTSTART:19991231T235959
DTEND:20000101T000000
SUMMARY:Party like it‚Äôs 1999!
END:VEVENT
END:VCALENDAR
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you save this as ‚Äúy2k.ics‚Äù and import it, you should see a new event appear at the very tail end 1999 that lasts from 11:59:59PM on December 31, 1999 until midnight on January 1, 2020!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-specify-a-datetime"&gt;
  &lt;/a&gt;
  How to specify a date/time?
&lt;/h2&gt;

&lt;p&gt;The RFC gets into this at length, but the basic gist is:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;If it‚Äôs a date only, it‚Äôs specified in the format of &lt;code&gt;YYYYMMDD&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;If it‚Äôs a date and time, it‚Äôs specified in the format of &lt;code&gt;YYYYMMDDTHHMMSS&lt;/code&gt; (with &lt;code&gt;HH&lt;/code&gt; in 24-hour time). If it‚Äôs a UTC time (see below) it also has a &lt;code&gt;Z&lt;/code&gt; at the end.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are &lt;a href="https://tools.ietf.org/html/rfc5545#section-3.3.5"&gt;three different ways to specify a date and time&lt;/a&gt; such as 11:59:59PM on December 31, 1999:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Date with local time&lt;/strong&gt;: Used when you want an event to be at the same time, regardless of a person‚Äôs location.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    DTSTART:19991231T235959
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Date with UTC time&lt;/strong&gt;: Used when you want an event to be at an absolute time across all geographic locations, and disregarding Daylight Savings Time. (Note: &lt;code&gt;DTSTAMP&lt;/code&gt; is always in this format.)
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;     DTSTART:19991231T235959Z
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Date with local time and timezone reference&lt;/strong&gt;: A combination of both; it pegs to a specific time, but within a given time zone, so it takes into consideration things like Daylight Savings Time.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;     DTSTART;TZID=America/Vancouver:19991231T235959
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above example, we went with the ‚Äúdate with local time‚Äù format so that the event would be at the same time regardless of location, since exactly when the ‚Äúlast minute of 1999‚Äù is differs across the globe. But for tracking shift schedules, ‚ÄúDate with local time and timezone reference‚Äù makes more sense, because if I fly to Europe for work, I don‚Äôt want the start times to shift by several hours.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Nope, that semi-colon after &lt;code&gt;DTSTART&lt;/code&gt; in the third example is not a typo. ‚ÄúProperty parameters‚Äù such as &lt;code&gt;TZID&lt;/code&gt; are passed in with a semicolon rather than a colon. (See List and Field Separators) This will also come into play with...&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#repeating-events"&gt;
  &lt;/a&gt;
  Repeating Events
&lt;/h2&gt;

&lt;p&gt;Ok, so we already have enough information to create each shift schedule the first time, but note that it repeats every X weeks. How do we handle &lt;em&gt;that&lt;/em&gt;?&lt;/p&gt;

&lt;p&gt;Enter &lt;a href="https://tools.ietf.org/html/rfc5545#section-3.8.5.3"&gt;Recurrence Rules (RRULE)&lt;/a&gt;! This property defines a rule or repeating pattern for recurring events. Here are just a few of the &lt;a href="https://tools.ietf.org/html/rfc5545#section-3.3.10"&gt;options&lt;/a&gt; that it supports:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;FREQ&lt;/code&gt;: How often the event occurs. Some examples are &lt;code&gt;WEEKLY&lt;/code&gt;, &lt;code&gt;DAILY&lt;/code&gt;, and even &lt;code&gt;SECONDLY&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;INTERVAL&lt;/code&gt;: How many &lt;code&gt;FREQ&lt;/code&gt;s should there be in between events?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;COUNT&lt;/code&gt;: Repeat the event X times. (Useful if you have a class that runs for 4 weeks, for example)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;UNTIL&lt;/code&gt;: Alternatively, this will repeat the event until a certain date.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;BYDAY&lt;/code&gt;: Allows you to say something only happens on certain days of the week.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The RFC has &lt;a href="https://tools.ietf.org/html/rfc5545#section-3.8.5.3"&gt;all sorts of examples&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#putting-it-all-together"&gt;
  &lt;/a&gt;
  Putting it All Together
&lt;/h2&gt;

&lt;p&gt;For our purposes, we need events that:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Use a &lt;strong&gt;Date with local time and timezone reference&lt;/strong&gt; because I travel frequently (in non-COVID times) and I want the events to be shown at the proper start/end times regardless of where I am in the world.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Have a &lt;code&gt;FREQ&lt;/code&gt; of &lt;code&gt;WEEKLY&lt;/code&gt; and an &lt;code&gt;INTERVAL&lt;/code&gt; of 8 since the schedule repeats every 8 weeks.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;And an &lt;code&gt;UNTIL&lt;/code&gt; date of &lt;code&gt;12/31/2021&lt;/code&gt; because the schedule gets reset every calendar year, and next year will be something different! (Hance my very strong desire to write this process down. ;))&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Put it all together, and you get:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;BEGIN:VCALENDAR
VERSION:2.0
PRODID:-//Webchick Inc//Webchick‚Äôs Crappy Bash Script 1.0//EN
BEGIN:VEVENT
UID:3231CB09-1E10-4910-BB24-B358629890B7
DTSTAMP:20210314T090733Z
SUMMARY:Day Shift
DTSTART;TZID=America/Vancouver:20210111T080000
DTEND;TZID=America/Vancouver:20210111T180000
RRULE:FREQ=WEEKLY;INTERVAL=8;UNTIL=20211231
END:VEVENT

... (repeat x many more events) ...

BEGIN:VEVENT
UID:F20376E5-FA0F-429D-AB1F-3F0155EE10BA
DTSTAMP:20210314T090734Z
SUMMARY:Evening Shift
DTSTART;TZID=America/Vancouver:20210208T173000
DTEND;TZID=America/Vancouver:20210208T233000
RRULE:FREQ=WEEKLY;INTERVAL=8;UNTIL=20211231
END:VEVENT

... (repeat x many more events) ...

END:VCALENDAR
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And when imported into Apple Calendar:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--py4i9jIy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z0ocqkx9re064qlr6rpu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--py4i9jIy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z0ocqkx9re064qlr6rpu.png" alt="Apple Calendar showing a variety of day/evening shifts interspersed" width="880" height="186"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And there you have it!&lt;/p&gt;

&lt;p&gt;So. The next time you get one of those .ics files, try popping it open in a text editor and see how much of it makes sense now!&lt;/p&gt;

&lt;p&gt;PS: If you want to see the bash script I used to generate this, it‚Äôs at &lt;a href="https://github.com/webchick/shiftycal"&gt;https://github.com/webchick/shiftycal&lt;/a&gt;. If you want to go it alone, &lt;a href="https://icalendar.org/validator.html"&gt;this handy validator&lt;/a&gt; is your friend!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;(Cover image: "&lt;a href="https://www.flickr.com/photos/64503524@N00/2319463826"&gt;iCal icon replacement&lt;/a&gt;" by &lt;a href="https://www.flickr.com/photos/64503524@N00"&gt;bertop&lt;/a&gt; is licensed under &lt;a href="https://creativecommons.org/licenses/by-nc-sa/2.0/?ref=ccsearch&amp;amp;atype=rich"&gt;CC BY-NC-SA 2.0&lt;/a&gt;)&lt;/em&gt;&lt;/p&gt;

</description>
      <category>icalendar</category>
      <category>programming</category>
      <category>productivity</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Introduction To Go Programming</title>
      <author>Samuel K.M</author>
      <pubDate>Sat, 06 Nov 2021 08:16:56 +0000</pubDate>
      <link>https://dev.to/bazeng/introduction-to-go-programming-3l9p</link>
      <guid>https://dev.to/bazeng/introduction-to-go-programming-3l9p</guid>
      <description>&lt;p&gt;The Go programming language is an open source project to make programmers more productive. It is designed at Google by Robert Griesemer, Rob Pike and Ken Thompson. Go is syntactically similar to C, but with memory safety, garbage collection, structural typing and CSP-style concurrency.&lt;/p&gt;

&lt;p&gt;Go is expressive, concise, clean, and efficient. Its concurrency mechanisms make it easy to write programs that get the most out of multicore and networked machines, while its novel type system enables flexible and modular program construction. &lt;/p&gt;

&lt;p&gt;Go compiles quickly to machine code yet has the convenience of garbage collection and the power of run-time reflection. It's a fast, statically typed, compiled language that feels like a dynamically typed, interpreted language.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#why-did-google-build-go"&gt;
  &lt;/a&gt;
  Why did google build Go?
&lt;/h4&gt;

&lt;p&gt;It is important to understand why google built Go. At the time of Go being built the most popular languages were Python, Java ,C &amp;amp; C++. However this languages had design limitations would be difficult to patch therefore Go was developed.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Python&lt;/strong&gt; - easy to use ,but slow&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Java&lt;/strong&gt; - Complex Types&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;C &amp;amp; C++&lt;/strong&gt; - Fast but has Complex Types &amp;amp; Slow Compilation, at the time of their development machines weren't as powerful as today therefore they were built to work with little memory.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Also at the time of development of this languages, multithreaded systems were rare. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#key-features-of-golang"&gt;
  &lt;/a&gt;
  Key Features Of GoLang
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Strong &amp;amp; Statically Typed&lt;/li&gt;
&lt;li&gt;Simplicity &lt;/li&gt;
&lt;li&gt;Fast Compile Times&lt;/li&gt;
&lt;li&gt;Garbage Collection - you don't have to manage your own memory, the go runtime shall help you manage it.&lt;/li&gt;
&lt;li&gt;Built In Concurrency Primitives&lt;/li&gt;
&lt;li&gt;Go compiles down to standalone binaries&lt;/li&gt;
&lt;/ul&gt;

&lt;h5&gt;
  &lt;a href="#how-to-install-go"&gt;
  &lt;/a&gt;
  How to install Go
&lt;/h5&gt;

&lt;p&gt;Follow this &lt;a href="https://golang.org/doc/install"&gt;documentation&lt;/a&gt; to learn how to install&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#useful-links"&gt;
  &lt;/a&gt;
  Useful Links
&lt;/h5&gt;

&lt;p&gt;To practice coding in the browser:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://play.golang.org/"&gt;Playground&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Just like other languages, go has different packages that handle different functions.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pkg.go.dev/std"&gt;Packages&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To get help&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://golang.org/help"&gt;Help&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h5&gt;
  &lt;a href="#understanding-go-code"&gt;
  &lt;/a&gt;
  Understanding Go Code
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;package main

import (
    "fmt"
)

func main() {
    fmt.Println("Hello, playground")
}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Every application is structured into packages, for every file in go you will have to declare which package its part of. The code above, belongs to the &lt;code&gt;main package&lt;/code&gt;. The &lt;code&gt;main package&lt;/code&gt; is a special package as it is going to be the entry of your application.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;import&lt;/strong&gt; statement is what we use to import additional libraries. In the above code we are importing the &lt;code&gt;fmt&lt;/code&gt; library often pronounced as thumped.&lt;/p&gt;

&lt;p&gt;From the &lt;code&gt;fmt&lt;/code&gt; library we use the  &lt;code&gt;Println()&lt;/code&gt; function to print the code&lt;br&gt;
Run this code in the &lt;a href="https://golang.org/doc/install"&gt;Playground&lt;/a&gt;&lt;/p&gt;

</description>
      <category>go</category>
    </item>
  </channel>
</rss>
