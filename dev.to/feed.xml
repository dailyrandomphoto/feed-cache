<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Deploy an express application to Vercel.com with Typescript</title>
      <author>Ha Tuan Em</author>
      <pubDate>Wed, 29 Sep 2021 15:59:02 +0000</pubDate>
      <link>https://dev.to/hte305/deploy-express-app-to-vercel-with-typescript-20nn</link>
      <guid>https://dev.to/hte305/deploy-express-app-to-vercel-with-typescript-20nn</guid>
      <description>&lt;p&gt;After a long time, I got have to find out the way to deploy an express application to Vercel.com with typescript language.&lt;/p&gt;

&lt;p&gt;Following the steps below:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-creating-new-a-repository-in-github-and-clone-it-locally"&gt;
  &lt;/a&gt;
  1. Creating new a repository in Github and clone it locally.
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git clone &amp;lt;repository_url&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#2-initial-project"&gt;
  &lt;/a&gt;
  2. Initial project
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm init &lt;span class="nt"&gt;-y&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#3-installing-vercel-cli-to-global"&gt;
  &lt;/a&gt;
  3. Installing vercel cli to global
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-g&lt;/span&gt; vercel
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#4-login-to-vercel"&gt;
  &lt;/a&gt;
  4. Login to Vercel
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;vercel login
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#5-installing-develop-package-to-project"&gt;
  &lt;/a&gt;
  5. Installing develop package to project
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install &lt;/span&gt;typescript @types/express vercel
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#6-install-express-package-to-build-a-server"&gt;
  &lt;/a&gt;
  6. Install &lt;strong&gt;&lt;em&gt;express&lt;/em&gt;&lt;/strong&gt; package to build a server.
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install &lt;/span&gt;express
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#7-edit-file-packagejson"&gt;
  &lt;/a&gt;
  7. Edit file &lt;strong&gt;&lt;em&gt;package.json&lt;/em&gt;&lt;/strong&gt;
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"scripts"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"start"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"vercel dev"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"deploy"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"vercel deploy --prod"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#8-creating-new-folder-api-in-root-source-code"&gt;
  &lt;/a&gt;
  8. Creating new folder &lt;strong&gt;&lt;em&gt;/api&lt;/em&gt;&lt;/strong&gt; in root source code.
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;mkdir &lt;/span&gt;api
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;&lt;em&gt;/api&lt;/em&gt;&lt;/strong&gt; is endpoint folder where to run your API in server Vercel. Make sure all files API are in there.&lt;/li&gt;
&lt;li&gt;Example: I need api to say hello in URL : &lt;strong&gt;&lt;em&gt;/api&lt;/em&gt;&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;touch&lt;/span&gt; /api/index.ts
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Response&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hello guys. Welcome to Vercel&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Example: I need API to list out all products in URL :&lt;strong&gt;&lt;em&gt;/api/product&lt;/em&gt;&lt;/strong&gt;.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;touch&lt;/span&gt; /api/product/list/index.ts
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Response&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;limit&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Product api has working&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;limit&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#9-running-vercel-develop-in-local"&gt;
  &lt;/a&gt;
  9. Running vercel develop in local.
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm run start
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Choosing your options in command.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#10-testing-api"&gt;
  &lt;/a&gt;
  10. Testing api
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;/api/index.ts
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;curl &lt;span class="nt"&gt;-v&lt;/span&gt; http://localhost:3000/api
...
&amp;lt; HTTP/1.1 200 OK
&amp;lt; cache-control: public, max-age&lt;span class="o"&gt;=&lt;/span&gt;0, must-revalidate
&amp;lt; server: Vercel
&amp;lt; x-vercel-id: dev1::dev1::82tm8-1632930383166-b3c4fa833b80
&amp;lt; x-vercel-cache: MISS
&amp;lt; content-type: application/json&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;charset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;utf-8
&amp;lt; content-length: 43
&amp;lt; etag: W/&lt;span class="s2"&gt;"2b-LDdVVhhCtB0dbrHbCnaU+b5JYWc"&lt;/span&gt;
&amp;lt; &lt;span class="nb"&gt;date&lt;/span&gt;: Wed, 29 Sep 2021 15:46:23 GMT
&amp;lt; connection: close
&amp;lt;
&lt;span class="k"&gt;*&lt;/span&gt; Closing connection 0
&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;"message"&lt;/span&gt;:&lt;span class="s2"&gt;"Hello guys. Welcome to Vercel"&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;/api/product/list/index.ts
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;curl &lt;span class="nt"&gt;-v&lt;/span&gt; http://localhost:3000/api/product/list&lt;span class="se"&gt;\?&lt;/span&gt;page&lt;span class="se"&gt;\=&lt;/span&gt;1&lt;span class="se"&gt;\&amp;amp;\&amp;amp;&lt;/span&gt;limit&lt;span class="se"&gt;\=&lt;/span&gt;10
...
&amp;lt; HTTP/1.1 200 OK
&amp;lt; cache-control: public, max-age&lt;span class="o"&gt;=&lt;/span&gt;0, must-revalidate
&amp;lt; server: Vercel
&amp;lt; x-vercel-id: dev1::dev1::82tm8-1632930567830-9c12b64cada1
&amp;lt; x-vercel-cache: MISS
&amp;lt; content-type: application/json&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;charset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;utf-8
&amp;lt; content-length: 55
&amp;lt; etag: W/&lt;span class="s2"&gt;"37-0GNlWDxglCghRUJj/oI+UYTMPqY"&lt;/span&gt;
&amp;lt; &lt;span class="nb"&gt;date&lt;/span&gt;: Wed, 29 Sep 2021 15:49:27 GMT
&amp;lt; connection: close
&amp;lt;
&lt;span class="k"&gt;*&lt;/span&gt; Closing connection 0
&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;"message"&lt;/span&gt;:&lt;span class="s2"&gt;"Product api has working"&lt;/span&gt;,&lt;span class="s2"&gt;"data"&lt;/span&gt;:[&lt;span class="s2"&gt;"1"&lt;/span&gt;,&lt;span class="s2"&gt;"10"&lt;/span&gt;&lt;span class="o"&gt;]}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#11-deploy-your-application-to-vercelcom"&gt;
  &lt;/a&gt;
  11. Deploy your application to Vercel.com
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm run deploy
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Note: why the code of express is different? See this article &lt;a href="https://vercel.com/guides/using-express-with-vercel"&gt;Using Express.js with Vercel&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Note: you can deploy your project to vercel without command &lt;strong&gt;&lt;em&gt;npm run deploy&lt;/em&gt;&lt;/strong&gt;. See this article &lt;a href="https://dev.to/hte305/deploy-express-js-app-to-vercel-38jb"&gt;Deploy Express.js app to Vercel&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And we done. Hope this article will help something for you.&lt;/p&gt;

&lt;p&gt;Enjoy your time 🪴&lt;/p&gt;

&lt;p&gt;Thank you for reading.  See you in next article.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/hte305"&gt;&lt;br&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eKzEoK4A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ddtyyk0zuud3h7o0sjpq.png" alt="Buy me a coffee"&gt;&lt;br&gt;
&lt;/a&gt;&lt;/p&gt;

</description>
      <category>typescript</category>
      <category>express</category>
      <category>node</category>
      <category>vercel</category>
    </item>
    <item>
      <title>Hacktoberfest Participants Help Us Internationalize the user-statistician GitHub Action</title>
      <author>Vincent A. Cicirello</author>
      <pubDate>Wed, 29 Sep 2021 15:54:35 +0000</pubDate>
      <link>https://dev.to/cicirello/hacktoberfest-participants-help-us-internationalize-the-user-statistician-github-action-2bga</link>
      <guid>https://dev.to/cicirello/hacktoberfest-participants-help-us-internationalize-the-user-statistician-github-action-2bga</guid>
      <description>&lt;p&gt;A few months ago, I released a GitHub Action, &lt;a href="https://github.com/cicirello/user-statistician"&gt;user-statistician&lt;/a&gt;, that generates a detailed GitHub stats SVG entirely within GitHub Actions. It generates a detailed visual summary of your activity on GitHub, such as your contributions, distribution of programming languages within your public repositories, etc, suitable to display on your &lt;a href="https://docs.github.com/en/github/setting-up-and-managing-your-github-profile/customizing-your-profile/managing-your-profile-readme"&gt;GitHub Profile README&lt;/a&gt;. It can also be customized in various ways. We are now specifically interested in increasing international support by adding translations for other languages. The action currently has built-in support for English, Italian, and German. We would like to expand upon this. Check out the GitHub repository for details:&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/cicirello"&gt;
        cicirello
      &lt;/a&gt; / &lt;a href="https://github.com/cicirello/user-statistician"&gt;
        user-statistician
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Generate a GitHub stats SVG for your GitHub Profile README in GitHub Actions
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
user-statistician&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/cicirello/user-statistician#user-statistician"&gt;&lt;img alt="user-statistician" src="https://res.cloudinary.com/practicaldev/image/fetch/s--TO3wDtp4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/cicirello/user-statistician.github/preview/user-statistician.png" width="640"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Check out all of our GitHub Actions: &lt;a href="https://actions.cicirello.org/" rel="nofollow"&gt;https://actions.cicirello.org/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Hactoberfest Participants and Other Potential Contributors&lt;/h2&gt;
&lt;p&gt;We are currently interested in increasing internationalization of this project. It currently supports generating
the SVG in English, Italian, and German. There are open issues for a few other languages, which you can work on if
you would like to translate the various labels. You may also work on translations to other languages not currently
included among open issues. In such a case, please start by submitting an issue (similar to the existing ones) so that
we are aware of interest in a particular language.&lt;/p&gt;
&lt;h2&gt;
About&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/marketplace/actions/user-statistician"&gt;&lt;img src="https://camo.githubusercontent.com/3ca5b3c655ed2e7763b5fa5f8b645cdef39e76e823daa262f8789413ef798321/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f762f72656c656173652f6369636972656c6c6f2f757365722d73746174697374696369616e3f6c6162656c3d4d61726b6574706c616365266c6f676f3d476974487562" alt="GitHub release (latest by date)"&gt;&lt;/a&gt;
&lt;a href="https://github.com/search?q=cicirello+user-statistician+path%3A.github%2Fworkflows+language%3AYAML&amp;amp;type=Code"&gt;&lt;img src="https://camo.githubusercontent.com/22b7cb980be30b3bba9d973f16414cebd772dd3765fab691c5039308aa0693a5/68747470733a2f2f696d672e736869656c64732e696f2f656e64706f696e743f75726c3d68747470732533412532462532467777772e6369636972656c6c6f2e6f7267253246656e64706f696e7473253246757365722d73746174697374696369616e2e6a736f6e" alt="Count of Action Users"&gt;&lt;/a&gt;
&lt;a href="https://github.com/cicirello/user-statistician/actions/workflows/build.yml"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Cm00pQqq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/cicirello/user-statistician/actions/workflows/build.yml/badge.svg" alt="build"&gt;&lt;/a&gt;
&lt;a href="https://github.com/cicirello/user-statistician/actions/workflows/generate-samples.yml"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T8_119MR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/cicirello/user-statistician/actions/workflows/generate-samples.yml/badge.svg" alt="samples"&gt;&lt;/a&gt;
&lt;a href="https://github.com/cicirello/user-statistician/actions/workflows/codeql-analysis.yml"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AfF_iOMD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/cicirello/user-statistician/actions/workflows/codeql-analysis.yml/badge.svg" alt="CodeQL"&gt;&lt;/a&gt;
&lt;a href="https://github.com/cicirello/user-statistician/blob/main/LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/a0bcf640ead218e8b4b6b3773a9bb0d5208717ad85db5a09c3e3c73e55968403/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6369636972656c6c6f2f757365722d73746174697374696369616e" alt="License"&gt;&lt;/a&gt;
&lt;a href="https://github.com/cicirello/user-statistician"&gt;&lt;img src="https://camo.githubusercontent.com/2311408c037fc2534ccfc335d604eadf1f8fcc7e5dd8c3c6cd326d433d7f2936/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c616e6775616765732f746f702f6369636972656c6c6f2f757365722d73746174697374696369616e" alt="GitHub top language"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/cicirello/user-statistician/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22"&gt;&lt;img src="https://camo.githubusercontent.com/9076b1744dc383d6ac9ea39f2123071a1b05ad480062a701fb5d2f7533f2765b/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f6369636972656c6c6f2f757365722d73746174697374696369616e2f676f6f6425323066697273742532306973737565" alt="good first issue"&gt;&lt;/a&gt;
&lt;a href="https://github.com/cicirello/user-statistician/issues?q=is%3Aissue+is%3Aopen+label%3A%22Hacktoberfest%22"&gt;&lt;img src="https://camo.githubusercontent.com/a5227a0c8cc5370d4bd5bd9cfa00c46bd310967ab1dd7df8d9abec94ba14f3de/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f6369636972656c6c6f2f757365722d73746174697374696369616e2f4861636b746f62657266657374" alt="Hacktoberfest"&gt;&lt;/a&gt;
&lt;a href="https://github.com/cicirello/user-statistician/issues?q=is%3Aissue+is%3Aopen"&gt;&lt;img src="https://camo.githubusercontent.com/8bbf1d76b3fcf9677726d5a9660892a65edfde5599afe1f357df57e2ab3b6d50/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f6369636972656c6c6f2f757365722d73746174697374696369616e" alt="GitHub open issues"&gt;&lt;/a&gt;
&lt;a href="https://github.com/cicirello/user-statistician/issues?q=is%3Aissue+is%3Aclosed"&gt;&lt;img src="https://camo.githubusercontent.com/77fbc7e5808b4c9f5f468f50c0997ac5f209d111ff1220b938e478932aec5c18/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732d636c6f7365642f6369636972656c6c6f2f757365722d73746174697374696369616e" alt="GitHub closed issues"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The &lt;a href="https://github.com/cicirello/user-statistician"&gt;cicirello/user-statistician&lt;/a&gt; GitHub
Action generates a detailed visual summary of your activity on GitHub in the form of an SVG
suitable to display on
your &lt;a href="https://docs.github.com/en/github/setting-up-and-managing-your-github-profile/customizing-your-profile/managing-your-profile-readme"&gt;GitHub Profile README&lt;/a&gt;
Although the intended use-case is to generate an SVG image for your GitHub Profile README
you can also potentially link…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/cicirello/user-statistician"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;You can also find more information about user-statistician in our prior post on Dev.to:&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/cicirello" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lVYicB_O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--lv_vXYvX--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/469122/085f1955-378c-49cb-866b-21b9ec1f1439.jpeg" alt="cicirello"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/cicirello/generate-a-github-stats-svg-for-your-github-profile-readme-in-github-actions-1iaj" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Generate a GitHub stats SVG for your GitHub Profile README in GitHub Actions&lt;/h2&gt;
      &lt;h3&gt;Vincent A. Cicirello ・ Jul 29 ・ 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#github&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#actions&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#stats&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#showdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table of Contents
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="#hacktoberfest-issues"&gt;Hacktoberfest Issues&lt;/a&gt;: About the Hacktoberfest labeled issues related to adding support for additional languages.&lt;/li&gt;
&lt;li&gt;
&lt;a href="#samples"&gt;Samples&lt;/a&gt;: A few samples in the currently supported languages, and for a couple different color options.&lt;/li&gt;
&lt;li&gt;
&lt;a href="#how-to-try-out-the-action"&gt;How to Try Out the Action&lt;/a&gt;: Example workflow to help you try out the action.&lt;/li&gt;
&lt;li&gt;
&lt;a href="#more-examples"&gt;More Examples&lt;/a&gt;: Information on additional examples provided in the GitHub repository.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#hacktoberfest-issues"&gt;
  &lt;/a&gt;
  Hacktoberfest Issues
&lt;/h2&gt;

&lt;p&gt;Initially, it supported only English. However, recently a couple first time contributors translated the various headings and labels into Italian and German. We are interested in further expanding international support by providing additional language options. This is ideal for a first-time contributor as all necessary changes to add support for a new locale are contained in a single source code file, enabling you to easily gain experience in submitting a pull request, having it reviewed, etc. The programming skill level necessary to add support for a new locale is also at the beginning level. Project is implemented in Python and the strings for the various labels are defined within a couple Python dict objects, so adding support for a locale primarily involves adding some entries to a couple Python dictionaries.&lt;/p&gt;

&lt;p&gt;There are currently a few &lt;a href="https://github.com/cicirello/user-statistician/issues?q=is%3Aissue+is%3Aopen+label%3A%22Hacktoberfest%22"&gt;open issues for specific languages&lt;/a&gt;. But we are open to adding support for any language where there is interest. So if you'd like to contribute a language translation for one not accounted for by one of the open issues, feel free to start by submitting an issue so that we are aware of the language you have interest in contributing, and then follow that with a pull request.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#samples"&gt;
  &lt;/a&gt;
  Samples
&lt;/h2&gt;

&lt;p&gt;The user-statistician GitHub Action has a few different built-in themes (light, dark, and dark-dimmed), and also supports custom user-defined colors. Here are a few examples, including of the existing locales.&lt;/p&gt;

&lt;p&gt;This first sample is for the default English, and uses the custom color option to &lt;a href="https://www.cicirello.org/software/#ghstats"&gt;match the color palette of my personal website&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iwBNf85g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/cicirello/status/main/images/userstats.svg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iwBNf85g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/cicirello/status/main/images/userstats.svg" alt="Sample with custom colors and default locale en"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This next example is for Italian (locale: it), and uses the built-in dark theme:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--s6wQOy9z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/cicirello/user-statistician/samples/images/it.svg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s6wQOy9z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/cicirello/user-statistician/samples/images/it.svg" alt="Sample with dark theme and locale it"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This third example is for German (locale: de), and uses the built-in light theme:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2B7yZPjb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/cicirello/user-statistician/samples/images/de.svg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2B7yZPjb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/cicirello/user-statistician/samples/images/de.svg" alt="Sample with light theme and locale de"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Check out my &lt;a href="https://github.com/cicirello"&gt;GitHub Profile&lt;/a&gt; for an additional live example, which uses the built-in dark theme.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-try-out-the-action"&gt;
  &lt;/a&gt;
  How to Try Out the Action
&lt;/h2&gt;

&lt;p&gt;If you want to try the action out, just drop the following workflow into a file with the name "user-statistician.yml" in the ".github/workflows" directory of your profile repository (or technically any repository that you own). It uses all of the action's default settings, and which runs the action daily on a schedule, and every time the workflow itself is changed (assumes the workflow file name is "user-statistician.yml").&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;user-statistician&lt;/span&gt;

&lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;schedule&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;cron&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;0&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;3&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;*&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;*&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;*'&lt;/span&gt;
  &lt;span class="na"&gt;push&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;branches&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;main&lt;/span&gt; &lt;span class="pi"&gt;]&lt;/span&gt;
    &lt;span class="na"&gt;paths&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;.github/workflows/user-statistician.yml'&lt;/span&gt; &lt;span class="pi"&gt;]&lt;/span&gt;
  &lt;span class="na"&gt;workflow_dispatch&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;

&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;stats&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;

    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/checkout@v2&lt;/span&gt;

    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Generate the user stats image&lt;/span&gt;
      &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;cicirello/user-statistician@v1&lt;/span&gt;
      &lt;span class="na"&gt;env&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;GITHUB_TOKEN&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{secrets.GITHUB_TOKEN}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above uses all of the defaults (light theme, English, etc). See the GitHub repository for details on the available inputs. If you want to change the locale, you can do so as follows (example sets locale for Italian):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;user-statistician&lt;/span&gt;

&lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;schedule&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;cron&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;0&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;3&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;*&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;*&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;*'&lt;/span&gt;
  &lt;span class="na"&gt;push&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;branches&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;main&lt;/span&gt; &lt;span class="pi"&gt;]&lt;/span&gt;
    &lt;span class="na"&gt;paths&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;.github/workflows/user-statistician.yml'&lt;/span&gt; &lt;span class="pi"&gt;]&lt;/span&gt;
  &lt;span class="na"&gt;workflow_dispatch&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;

&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;stats&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;

    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/checkout@v2&lt;/span&gt;

    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Generate the user stats image&lt;/span&gt;
      &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;cicirello/user-statistician@v1&lt;/span&gt;
      &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;locale&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;it&lt;/span&gt;
      &lt;span class="na"&gt;env&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;GITHUB_TOKEN&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{secrets.GITHUB_TOKEN}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In both cases above, the default filename and location are used for the image (which can be changed with action inputs). Assuming the default filename and location, you can then link to the image in your GitHub README with the following markdown:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight markdown"&gt;&lt;code&gt;&lt;span class="p"&gt;![&lt;/span&gt;&lt;span class="nv"&gt;My GitHub Activity&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="sx"&gt;images/userstats.svg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#more-examples"&gt;
  &lt;/a&gt;
  More Examples
&lt;/h2&gt;

&lt;p&gt;Setting up and configuring the action is easy. The GitHub repository has a &lt;a href="https://github.com/cicirello/user-statistician/tree/main/quickstart"&gt;quickstart&lt;/a&gt; directory containing several ready-to-use workflows to get you started. Pick one, download it, commit it to the &lt;code&gt;.github/workflows&lt;/code&gt; directory of your profile's repository, and add a link to the generated image in your README. The quickstart workflows are configured to run nightly on a schedule, on pushes of the workflow file, as well as on &lt;code&gt;workflow_dispatch&lt;/code&gt; events (so you can run it manually if need be).&lt;/p&gt;

</description>
      <category>hacktoberfest</category>
      <category>showdev</category>
      <category>github</category>
      <category>webdev</category>
    </item>
    <item>
      <title>WorkerB Developer Automation From LinearB</title>
      <author>Nick Hodges</author>
      <pubDate>Wed, 29 Sep 2021 15:54:23 +0000</pubDate>
      <link>https://dev.to/linearb/workerb-developer-automation-from-linearb-1310</link>
      <guid>https://dev.to/linearb/workerb-developer-automation-from-linearb-1310</guid>
      <description>&lt;p&gt;&lt;strong&gt;“The most powerful tool we have as developers is automation.”&lt;br&gt;
—Scott Hanselman&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Developers automate everything about how we write, test and ship code. But when it comes to the process of how we work together as a team on projects, it’s highly manual.&lt;/p&gt;

&lt;p&gt;I have to manually update Jira. I have to remember which of my PRs need attention and manually send a Slack message to my teammate asking for help. It takes dozens of clicks to see my open PRs in GitHub. I have to manually update my manager when I finish a piece of work or start on a new ticket. GitHub has a detailed record of everything I’m doing so why do I need to manually keep track of everything and physically input all of my updates into a project management system?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introducing-workerb-developer-automation"&gt;
  &lt;/a&gt;
  Introducing WorkerB Developer Automation
&lt;/h2&gt;

&lt;p&gt;To help developers save time, eliminate annoying manual tasks, reduce tab and context switching, and remove project idle time, we built three types of automation:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Personal automation&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Team automation&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Project automation&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#personal-automation"&gt;
  &lt;/a&gt;
  Personal Automation
&lt;/h2&gt;

&lt;p&gt;Type &lt;strong&gt;/lb help&lt;/strong&gt; into Slack (MS Teams coming soon!) and you’ll see a list of useful commands to help you see all of your PRs and reviews together, without clicking around.&lt;/p&gt;

&lt;p&gt;If you don’t have a LinearB account, &lt;a href="https://app.linearb.io/register"&gt;click here to sign up free&lt;/a&gt;. If you have not linked Slack to LinearB, &lt;a href="https://linearb.helpdocs.io/article/vnepout2w4-how-to-connect-to-slack-notifications"&gt;click here to connect your account&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ro8xyMT8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o13pe1h4vyyd95e4o07g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ro8xyMT8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o13pe1h4vyyd95e4o07g.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;One command I use every day is **/lb reviews. **It shows PRs currently assigned to me and with one click I can get to them directly in GitHub / GitLab / Bitbucket (Azure DevOps coming soon!)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WDDwQ_sF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7koh5f0mec9gq4t936nx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WDDwQ_sF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7koh5f0mec9gq4t936nx.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can also configure alerts to notify you proactively of events on your PRs.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_1qHn-es--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4txaqqpk0vqd4d5unyde.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_1qHn-es--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4txaqqpk0vqd4d5unyde.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I really like the “PR request changes” alert. It saves me from leaving my IDE every hour to see what’s happening with my PRs.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--v-Yzwbe8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2ul4s6ttbd6yfyp0wdma.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--v-Yzwbe8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2ul4s6ttbd6yfyp0wdma.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hoiRq6Wc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tnjckmrwglnv8f77kkno.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hoiRq6Wc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tnjckmrwglnv8f77kkno.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#team-automation"&gt;
  &lt;/a&gt;
  Team Automation
&lt;/h2&gt;

&lt;p&gt;Your team can configure policies based on your specific way of working to cut idle time and establish PR review quality guardrails.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LInM-r4D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p0g2ui5v3a7s89r5gnow.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LInM-r4D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p0g2ui5v3a7s89r5gnow.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When a policy triggers, LinearB alerts the team Slack channel of your choosing (MS Teams coming soon!) and provides links to the related branch or PR. Since LinearB correlates your Git work with your projects stories, we show you the related story so you can prioritize your follow-up accordingly.&lt;/p&gt;

&lt;p&gt;The “Long review” alert has been really helpful for our team &lt;a href="https://linearb.io/blog/why-slack-alerts-went-to-1-on-our-roadmap/"&gt;since we moved to work-from-home&lt;/a&gt;. We get alerted when a review has been open for longer than 2 days. Other teams at LinearB have it set to trigger after 3 days.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1SklMFL_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bdmf3y07b6z24ked7asu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1SklMFL_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bdmf3y07b6z24ked7asu.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Learn more about configuring your team policies in this &lt;a href="https://linearb.helpdocs.io/article/58b8c8atcg-how-to-manage-and-customize-notifications"&gt;help article&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#project-automation"&gt;
  &lt;/a&gt;
  Project Automation
&lt;/h2&gt;

&lt;p&gt;The &lt;a href="https://linearb.io/blog/linearb-pulse-view-release/"&gt;LinearB Pulse board&lt;/a&gt; shows a live timeline of Git activity correlated to each of your projects / features / bugs. It makes our &lt;a href="https://linearb.io/blog/make-daily-better/"&gt;daily stand-up more efficient&lt;/a&gt; by summarizing blockers, WIP and open tasks for every developer on the team.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UWtm-oCx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vn8q5xefh3i68h03cjce.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UWtm-oCx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vn8q5xefh3i68h03cjce.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pulse detects when your real-life work in Git does not match the status of your project management system and allows you to update the status with two clicks, without logging into your project system.&lt;/p&gt;

&lt;p&gt;In the example below from our Pulse board today, the story &lt;em&gt;add share button to custom dashboard *was marked *Selected for Sprint&lt;/em&gt; in Jira when in reality it was *In Progress. *We know it’s in progress because the little blue dots on the Git Activity Timeline on the right indicate multiple commits. We noticed the discrepancy during the meeting and fixed it in real-time.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kUvXNPT1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/va3ee71x9l7ceke31mes.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kUvXNPT1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/va3ee71x9l7ceke31mes.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#more-automation-coming-soon"&gt;
  &lt;/a&gt;
  More Automation Coming Soon ⌚
&lt;/h2&gt;

&lt;p&gt;We’re busy building more personal, team and project automations to help you save more time:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Branch-to-ticket matching&lt;/strong&gt;: We’ll notify you when your branch or PR is not linked to a ticket and help you match it with an existing ticket or create a new ticket (without going to your project tool).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PR auto-close&lt;/strong&gt;: When you receive a LinearB alert that your PR has been approved, you can also close it with a single click.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Idle ticket alert&lt;/strong&gt;: We’ll detect when an important feature or bug has been idle, based on your Git activity, and alert you based on your team’s policy configuration.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;Developers like workflow automation because it saves us time, cuts down on tab and context switching, helps us be more responsive to teammates and helps us get through reviews faster so we can merge and move on to the next thing.&lt;/p&gt;

&lt;p&gt;Team leads like workflow automation because information travels faster which reduces idle time and speeds up development cycle time.&lt;/p&gt;

&lt;p&gt;If you have a LinearB account, you can use all of these automation features now. If you don’t have a LinearB account, &lt;a href="https://app.linearb.io/register"&gt;click here to sign up free&lt;/a&gt;. If you have not linked Slack to your LinearB account, &lt;a href="https://linearb.helpdocs.io/article/vnepout2w4-how-to-connect-to-slack-notifications"&gt;click here to connect your account&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Originally published at &lt;a href="https://linearb.io/blog/workerb-developer-automation/"&gt;https://linearb.io&lt;/a&gt; on May 4, 2021.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>management</category>
      <category>monitoring</category>
      <category>analytics</category>
    </item>
    <item>
      <title> I made 100 CSS loaders for your next project </title>
      <author>John doe</author>
      <pubDate>Wed, 29 Sep 2021 15:44:11 +0000</pubDate>
      <link>https://dev.to/5gqjwj/i-made-100-css-loaders-for-your-next-project-5g01</link>
      <guid>https://dev.to/5gqjwj/i-made-100-css-loaders-for-your-next-project-5g01</guid>
      <description>&lt;p&gt; &lt;span&gt;You either make a super fast website/application or you use loaders. I think most of us fall into the second category.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Now the question is: what loader should I use? the "loading" text, the 3 dots, a progress bar, the Batman symbol??&lt;/p&gt;
&lt;p&gt;You no more need to bother yourself searching for loaders. Find below a collection of 100 different CSS loaders. From the simple one to the more fancy one, you will find the most suitable for your project.&lt;/p&gt;
&lt;p&gt;Each loader is done using a &lt;span&gt;single&lt;/span&gt; element. Yes, only one &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;, nothing more. You don't have to copy a ton of code. Add a class to your div and start loading! &lt;/p&gt;

&lt;p&gt;Read More:&lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/20-best-css3-library-for-developers/&amp;amp;ved=2ahUKEwjRwJLBuKPzAhX9xzgGHRRPBagQFnoECCIQAQ&amp;amp;usg=AOvVaw2AtoxfMkY_y5JPLB2VuSdV"&gt; I made 100 CSS loaders for your next project &lt;/a&gt;&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/20-best-css3-library-for-developers/&amp;amp;ved=2ahUKEwjRwJLBuKPzAhX9xzgGHRRPBagQFnoECCIQAQ&amp;amp;usg=AOvVaw2AtoxfMkY_y5JPLB2VuSdV"&gt;&lt;br&gt;&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;





</description>
    </item>
    <item>
      <title>Let's Learn Kubernetes - Basics Part 1</title>
      <author>Prashant Ghildiyal</author>
      <pubDate>Wed, 29 Sep 2021 15:40:54 +0000</pubDate>
      <link>https://dev.to/pghildiyal/let-s-learn-kubernetes-basics-part-1-3of7</link>
      <guid>https://dev.to/pghildiyal/let-s-learn-kubernetes-basics-part-1-3of7</guid>
      <description>&lt;p&gt;Building an application is one set of challenges that needs to be tackled, and once that is done, you have a series of new challenges. An Application needs to be Deployed, Scaled, and maintained across based on the demand. In recent times, the containerization of Apps has become an excellent means to help solve most of the mentioned challenges. Many solutions containerize and help manage and operationalize the application, but the most used of all the available solutions is Kubernetes.&lt;/p&gt;

&lt;p&gt;Kubernetes is a container management tool that automates the deployment, scaling, and operations of an application. It has become the de facto container orchestrator, with more than 80% of companies using it in some capacity. Hence, it becomes essential for Novice &amp;amp; Expert DevOps Engineers, Developers, and Programmers to learn Kubernetes. Devtron brings you a collection of concepts and their most popular links/explanations to make a comprehensive guide understanding the basics of Kubernetes.&lt;/p&gt;

&lt;p&gt;You can also check out Devtron, End-to-End Kubernetes Software Delivery Workflow here:&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/devtron-labs"&gt;
        devtron-labs
      &lt;/a&gt; / &lt;a href="https://github.com/devtron-labs/devtron"&gt;
        devtron
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Software Delivery Workflow For Kubernetes
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#an-overview"&gt;
  &lt;/a&gt;
  An Overview
&lt;/h2&gt;

&lt;p&gt;Kubernetes is a portable, extensible, open-source platform for managing containerized applications and services that facilitate declarative configuration and automation. Kubernetes provides a platform to configure, automate, and manage:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Intelligent and balanced scheduling of containers&lt;/li&gt;
&lt;li&gt;Creation, deletion, and movement of containers&lt;/li&gt;
&lt;li&gt;Easy scaling of containers&lt;/li&gt;
&lt;li&gt;Monitoring and self-healing abilities&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In this write-up, the author discusses challenges faced using previous server-side application management tools and how Kubernetes helps tackle these challenges. &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/pghildiyal" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vjSmCgLb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--hvAQYJZQ--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/568793/d19992e0-9401-4bf5-bef7-4c368a6961ce.jpg" alt="pghildiyal"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/pghildiyal/here-s-why-you-should-use-kubernetes-g9l" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Here's why you should use Kubernetes!&lt;/h2&gt;
      &lt;h3&gt;Prashant Ghildiyal ・ Jun 16 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#kubernetes&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#devops&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#opensource&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#architecture"&gt;
  &lt;/a&gt;
  Architecture
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rKCoT4Sc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xz2brmkb4q4w5o4begxq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rKCoT4Sc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xz2brmkb4q4w5o4begxq.png" alt="Basic Kubernetes Architecture"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this article, we get to see a brief overview of the Architecture of Kubernetes and the components of the Architecture such as Master, API Scheduler, Nodes, Pods, Scheduler, among others.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://devtron.ai/blog/developers-guide-to-kubernetes/"&gt;A Developers Guide to Kubernetes&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pods"&gt;
  &lt;/a&gt;
  Pods
&lt;/h2&gt;

&lt;p&gt;The Smallest Execution Unit of Kubernetes can be considered a Pod. A pod is temporary in nature, and new ones form when one dies. Pods consist of a unique IP address, Persistent storage Volumes, Configuration Information. &lt;/p&gt;

&lt;p&gt;The below link explains all things Pods.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.vmware.com/topics/glossary/content/kubernetes-pods"&gt;What are Kubernetes Pods?&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#nodes-amp-clusters"&gt;
  &lt;/a&gt;
  Nodes &amp;amp; Clusters
&lt;/h2&gt;

&lt;p&gt;Node is the smallest unit of Computing Hardware in a cluster. Each Node can be considered a set of CPU and RAM resources available for Kubernetes to work.&lt;br&gt;
Although working with individual nodes is useful, Kubernetes combines these resources of nodes to become a cluster. Kubernetes intelligently manage the distribution of work among the worker nodes among the Cluster.&lt;br&gt;
A more detailed explanation is available in the following link about Pods, Nodes, and Clusters.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://medium.com/google-cloud/kubernetes-101-pods-nodes-containers-and-clusters-c1509e409e16"&gt;Kubernetes 101: Pods, Nodes, Containers, and Clusters&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#controllers"&gt;
  &lt;/a&gt;
  Controllers
&lt;/h2&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/55qGFj6kuOg"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;A controller is a system pod that helps in controlling the behavior of other pods. The above video gives a detailed explanation of how controllers work.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#replicasets"&gt;
  &lt;/a&gt;
  Replicasets
&lt;/h3&gt;

&lt;p&gt;With Replicasets, it is possible to run a specified number of pod replicas running at all times. The link below gives a comprehensive view of Replicasets.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.bmc.com/blogs/kubernetes-replicaset/#:~:text=What%20are%20ReplicaSets%3F%20A%20ReplicaSet%20is%20one%20of,state%20of%20the%20cluster%20matches%20the%20observed%20state.%29"&gt;Kubernetes ReplicaSets: A Brief Introduction&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#jobs"&gt;
  &lt;/a&gt;
  Jobs
&lt;/h3&gt;

&lt;p&gt;Kubernetes Jobs are used to creating transient pods that perform specific tasks they are assigned to.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://opensource.com/article/20/11/kubernetes-jobs-cronjobs"&gt;A beginner's guide to Kubernetes Jobs and CronJobs&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#schedulers"&gt;
  &lt;/a&gt;
  Schedulers
&lt;/h3&gt;

&lt;p&gt;The Kubernetes Scheduler, monitoring the Object Store for unassigned Pods, will assign the Pod to a Node. Then, the Kubelet, monitoring the Object Store for assigned Pods, will execute the Pod.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dominik-tornow.medium.com/the-kubernetes-scheduler-cd429abac02f"&gt;The Kubernetes Scheduler&lt;/a&gt;&lt;/p&gt;

</description>
      <category>kubernetes</category>
      <category>devops</category>
      <category>beginners</category>
      <category>go</category>
    </item>
    <item>
      <title>Eating our own dog food – a year of decision logs (with Loqbooq)</title>
      <author>Julius Peinelt</author>
      <pubDate>Wed, 29 Sep 2021 15:09:44 +0000</pubDate>
      <link>https://dev.to/coding-friends/eating-our-own-dog-food-a-year-of-decision-logs-with-loqbooq-3opg</link>
      <guid>https://dev.to/coding-friends/eating-our-own-dog-food-a-year-of-decision-logs-with-loqbooq-3opg</guid>
      <description>&lt;p&gt;&lt;a href="https://loqbooq.app"&gt;Loqbooq&lt;/a&gt;, our tool to document decisions in teams, is not our first rodeo. Frankly, rodeos aren't a good metaphor either. We have created and still maintain several app projects like &lt;a href="https://codingfriends.github.io/Tincta/"&gt;Tincta&lt;/a&gt; – now in it's 10th anniversary – and &lt;a href="https://wokabulary.com"&gt;Wokabulary&lt;/a&gt;. But we have also been working in other teams on a diverse portfolio of products. So, we are more used to running marathons in a software development kinda sense. You know, staying long enough to &lt;del&gt;become the villain&lt;/del&gt; see how your decisions worked out and hopefully learn from your mistakes.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#insufficient-facts-always-invite-danger-spock"&gt;
  &lt;/a&gt;
  Insufficient facts always invite danger (Spock)
&lt;/h2&gt;

&lt;p&gt;To illustrate why writing down decisions is important, let's start with a quote by &lt;a href="https://govleaders.org/rickover.htm"&gt;Admiral Hyman Rickover&lt;/a&gt; (who with his team designed the first nuclear submarine in just three years) from a speech he gave at Columbia University in 1982:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;When important decisions are not documented, one becomes dependent on individual memory, which is quickly lost as people leave or move to other jobs. In my work, it is important to be able to go back a number of years to determine the facts that were considered in arriving at a decision. This makes it easier to resolve new problems by putting them into proper perspective. It also minimizes the risk of repeating past mistakes. Moreover if important communications and actions are not documented clearly, one can never be sure they were understood or even executed.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Not sure what else needs to be said about this, but have you ever been in the situation where you would have liked to simplify a system but you didn't know if the current state was due to rapid prototyping experiments or because of real business requirements and the people who knew had long left the company?&lt;/p&gt;

&lt;p&gt;Anyway, of course people know of the importance of documentation, it's just not something that is overly fun. So indeed, in projects we’ve worked on over the years we did see some attempts at documentation. Sadly, &lt;strong&gt;most documentation emphasized the 'What' and left out the 'Why'&lt;/strong&gt;. Additionally, the documentation was not always accessible to all team members. Comments in code, for example, are pretty invisible to most designers and managers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#storytime"&gt;
  &lt;/a&gt;
  Storytime!
&lt;/h2&gt;

&lt;p&gt;Being aware of all those problems we set out to create a tool to lower the barriers to document all the 'Why' in projects while being approachable to all team members, too. &lt;br&gt;
Naturally we started to use Loqbooq ourselves as soon as possible. In fact, the main development and reasoning behind decisions taken on the way while developing and releasing Loqbooq is documented in Loqbooq. Here is a short retrospective about the process and how it worked out for us.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#its-a-decision"&gt;
  &lt;/a&gt;
  It’s a… decision
&lt;/h3&gt;

&lt;p&gt;Starting something new involves a lot of discussions, brainstorming and finally decision making even before a line of code is written. For Loqbooq, we first spent a not insignificant time to narrow down the scope that left the final product usable but also would enable us to implement it in  reasonable time. While originally Loqbooq was meant to be a Slack-only app, hoping this would reduce implementation time, it became clear this would limit the scope of addressable users too much.&lt;br&gt;
A decision was made for the broader audience and we wrote it down in Nuclino, the knowledge base we use. I'm glad we did, as you will see later.&lt;/p&gt;

&lt;p&gt;We also had to define our target user group, our assumptions about them and why we chose this group. Another very important decision for everything that comes afterwards.&lt;/p&gt;

&lt;p&gt;Next, we asked ourselves which programming language, web-framework, database and hosting solution would enable us to quickly develop something functional. &lt;br&gt;
Developers, being only humans, tend to involve some of their own ego when considering solutions for their tech-stack. Personal interests not seldomly overrule sensible decisions. We wrote down our reasoning and crossed out alternatives with good arguments against them. This was probably the first time in this particular project where &lt;strong&gt;writing down the decision really forced us to be rational&lt;/strong&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#were-not-tooling-around"&gt;
  &lt;/a&gt;
  We’re not tooling around
&lt;/h3&gt;

&lt;p&gt;Mind you, up to this point Loqbooq is far from usable. Instead, someone had to take notes or the main points from the discussion in Slack over to Nuclino, copy everything in a template and finally, if we weren't able to decide on the spot, remind everyone to add their agreement or proposals. &lt;strong&gt;How tedious to just document a little bit of 'What' and 'Why'&lt;/strong&gt;. The same held true for looking up decisions taken in the past. Definitely something to improve.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-rubber-meets-the-road"&gt;
  &lt;/a&gt;
  The rubber meets the road
&lt;/h3&gt;

&lt;p&gt;Fast-forward a few weeks and many decisions later, Loqbooq is finally usable and we decided on naming conventions for our domain model, colors for branding, and the fact that we support Slack's enterprise grid for the release. Reminders are sent out automatically and recording decisions happens right in Slack. This is directly reflected in the way we document the decisions: before, we only noted down big decisions with many considerations, like deciding on the whole tech-stack is all in just one decision. Now, even &lt;strong&gt;smaller things are documented or big decisions are split up&lt;/strong&gt;. Something like our pricing model stretches over six different decisions, e. g. what happens with accounts that are late for payments, how long should the trial phase be, etc.&lt;/p&gt;

&lt;p&gt;Around the same time it became clear that we would miss our aspired release date by at least a few weeks. The complicated (and frankly, insane) way Slack's enterprise grid is implemented from a data model perspective slowed us down and supporting all functionality with a web app suddenly felt like an additional burden.&lt;br&gt;
Thankfully, our documented agreement on our domain language helped greatly navigating through Slack's and our own data model and their interaction.&lt;/p&gt;

&lt;p&gt;But, what about all the work on the web app that was still waiting for us? We really wanted to release and time was ticking. So when I brought up the discussion in the team, questioning our direction, we quickly looked up the context and reasoning of the former decision about not just doing a Slack-only service. With that &lt;strong&gt;we were able to re-evaluate if we were still doing the right thing&lt;/strong&gt; (spoiler: we released Loqbooq with a proper web app).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--chugOV8S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g80l2ciyhuphnpnln8bf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--chugOV8S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g80l2ciyhuphnpnln8bf.png" alt="Drawn Mushroom"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In hindsight, I'm glad we had the documentation of 'Why'. It enabled me to get rid of doubts and concentrate on taking the project forward, &lt;strong&gt;reducing the mental overhead&lt;/strong&gt; significantly.&lt;/p&gt;

&lt;p&gt;The same goes for our pricing model. Initially we went for a rather short trial phase and a one price fits all model. In the meantime we re-evaluated our decisions and since we documented the ‘Why’, we were even able to learn something. &lt;a href="https://loqbooq.app/blog/introducing-free-plan"&gt;See our blog post&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#one-takeaway-to-go-please"&gt;
  &lt;/a&gt;
  One take-away to go, please
&lt;/h3&gt;

&lt;p&gt;So now, after more than one year of consistently using a decision log, I have made some observations. Not all of them I merely attribute to the decision log itself but also to our practice to take decisions together. Which definitely is fostered by maintaining a decision log.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Reduction of recurring discussions&lt;/strong&gt;. When we are unclear about why and what exactly we decided on a certain matter, we can now often just look up former decisions. And when we realized we are talking about the same topic twice, we create a new decision on it.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Increased feeling of ownership for the good but also the bad parts of the project&lt;/strong&gt;. We took decisions together, but that means we also agreed together on where to take shortcuts. &lt;br&gt;
Imagine starting at a project and soon enough you discover parts that feel messy and slow down development of new features. How soothing it would be to know why they are there. Maybe the project's scope changed, maybe some deadlines were too tight, maybe it's just some mess that needs a good cleaning.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;So much learning&lt;/strong&gt;. To learn you need a feedback loop, the faster you get feedback, the better. Sadly not all consequences become clear right after the action, to learn in that case, you need to be able to go back and look up the context of your decisions.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Ease of mind&lt;/strong&gt;. Writing down and documenting decisions together with the considerations you and your team had frees up parts of your brain. Sometimes it just helps to be forced to really formulate a decision.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Improved communication&lt;/strong&gt;. Since we decided together, we also had to discuss problems and possible solutions together. We had to actively argue about moving forward. As a very nice by-product, we also got rid of the feeling of others deciding over your head while you have to deal with the damage.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Additional documentation&lt;/strong&gt;. Unlike with fast prototyping and other very short-lived projects, longer running projects need a certain documentation about intent, current available knowledge and context. Contrary to what is often seen, &lt;strong&gt;agile project management still involves having a plan&lt;/strong&gt; &lt;a href="https://www.youtube.com/watch?v=MCZ3YgeEUPg"&gt;(see: Rich Hickey)&lt;/a&gt;, only the plan can be adjusted and changed. So, in long-living agile projects, it's not trivial to comprehend the reasons for the state of the project. In this case, decision logs can support or even replace  requirements specification.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#not-all-glitter-is-gold"&gt;
  &lt;/a&gt;
  Not all glitter is gold
&lt;/h3&gt;

&lt;p&gt;“Wait a minute”, you say, “you developed a Saas for decision logs. Of course it's all flowers, milk, and honey in your story.” Sure, I’m slightly biased and while I’m convinced Loqbooq helps with adopting decision logs and maintaining healthy logs with finer grained decisions, maintaining a decision log is still work and needs practice and learning. Even for us, not everything worked right away.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Sometimes we forgot to log decisions. Ultimately this is not a big deal, the next time you have a discussion about the particular topic, you will remember.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;When in need of short-term approvals, outstanding decisions can block implementation. This happened mostly when we didn’t plan properly and needed some ad-hoc decisions and involved team-members weren’t available right away. In those cases, we went with some kind of majority but still leaving the decision open until the team members had a chance to review them.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Occasionally we had discussions about wording in decisions. While annoying at times, it also &lt;strong&gt;often pointed out different understandings that needed clarification&lt;/strong&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#its-all-about-the-seasoning"&gt;
  &lt;/a&gt;
  It’s all about the seasoning
&lt;/h2&gt;

&lt;p&gt;Decision logs are a &lt;strong&gt;very helpful tool for a more sustainable software development&lt;/strong&gt;. Even if it's yet another thing to do, maybe even annoying in the moment, in the long run it helps to be able to go back and look at why things are as they are. But more than that, &lt;strong&gt;decision logs also foster communication&lt;/strong&gt; and &lt;strong&gt;speed up the decision process&lt;/strong&gt; by enforcing a written formulation. Last but not least, decision logs increase the &lt;strong&gt;sense of ownership&lt;/strong&gt; if they are maintained together in a team. &lt;/p&gt;

&lt;p&gt;Having a decision log is for project management a bit like having tests in your code base. It &lt;strong&gt;increases the sense of security&lt;/strong&gt; in ever-changing, agile projects. Going back, having a look at the context of a decision and its reasoning can reduce disgruntlement over the current situation, too.&lt;br&gt;
While technically you don’t need to use tools to maintain a decision log, they can help you lower the barrier of adoption and improve the quality of the log. As you can imagine, I can definitely recommend you to try out Loqbooq.&lt;/p&gt;

&lt;p&gt;We as a team have found decision logs very beneficial and &lt;strong&gt;adopted them in basically all areas&lt;/strong&gt; of our business. &lt;/p&gt;

</description>
      <category>productivity</category>
      <category>saas</category>
      <category>team</category>
      <category>management</category>
    </item>
    <item>
      <title>How to make money selling courses online in 2021 (as a developer)</title>
      <author>Grégory D'Angelo</author>
      <pubDate>Wed, 29 Sep 2021 15:05:55 +0000</pubDate>
      <link>https://dev.to/alterclass/how-to-make-money-selling-courses-online-in-2021-as-a-developer-2f32</link>
      <guid>https://dev.to/alterclass/how-to-make-money-selling-courses-online-in-2021-as-a-developer-2f32</guid>
      <description>&lt;p&gt;As a developer, there are a &lt;a href="https://www.florin-pop.com/blog/2019/08/ways-to-make-money-as-a-developer/"&gt;lot of different ways&lt;/a&gt; to make an (extra) income from your skills other than your day-to-day job. Among all of the options you have, creating and selling courses online to make money is probably the most promising.&lt;/p&gt;

&lt;p&gt;Indeed, the demand for flexible and interactive online courses has been extremely high over the past three to five years, and it will grow even more: the e-Learning market surpassed $250 billion in 2020 and is expected to &lt;a href="https://www.gminsights.com/industry-analysis/elearning-market-size"&gt;reach $1 trillion by 2027&lt;/a&gt;. In other words, the online courses market is gigantic, and there are a lot of buyers out there looking for high-quality courses to upgrade their skills so they can upscale their career.&lt;/p&gt;

&lt;p&gt;And because &lt;a href="https://alterclass.io/teaching"&gt;AlterClass&lt;/a&gt; is all about online education for developers, below are some critical steps and pieces of advice you can follow right now to create and sell programming courses online.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-choose-the-right-topic"&gt;
  &lt;/a&gt;
  1. Choose the right topic
&lt;/h2&gt;

&lt;p&gt;As obvious as it sounds, the very first thing to do when it comes to creating a new online course is to choose a topic.&lt;/p&gt;

&lt;p&gt;Choosing the right topic to teach can be tricky, but it is crucial for you as the instructor but also for your future students. Indeed, you don't want to choose a subject that no one cares about anymore, like teaching about an outdated web framework, for example, or a topic you are not comfortable with.&lt;/p&gt;

&lt;p&gt;You need to find that sweet spot where you have enough practical experience about an in-demand technology in the industry. People are NOT looking to spend hours learning a new technical skill just for the fun of it (well, some of them do, but they are by far not the majority). Instead, people are looking to acquire new skills that will help them in their career, either with their current job or to look for a new job.&lt;/p&gt;

&lt;p&gt;So you must choose a topic for your students, so they get real employable skills by learning from your online course. In other words, you have to choose a topic that will impact the life of your students and not just a simple thing they can learn about by watching a 15-minutes Youtube video.&lt;/p&gt;

&lt;p&gt;On the other end, you need to have enough experience with the technology you'd like to teach. Indeed, you need to create high-quality content for your course to teach the theory and come up with practical exercises so your students can learn by doing. You can only do that if you have enough practical experience with what you teach.&lt;/p&gt;

&lt;p&gt;But don't get me wrong! You don't need to be an expert with 15 years of experience in your chosen topic. You can very well choose a subject you've learned three months ago and have been using so far. You'll be well suited to teach it to beginners with zero experience in this specific topic as you'll know how to speak to them.&lt;/p&gt;

&lt;p&gt;Finally, don't think you can't teach something just because there is already a course about it somewhere on the web. It is just the opposite! It probably means that there is a high demand for this topic. Plus, we all have different teaching styles, and because of that, your course will be better suited for some students than any of the existing courses.&lt;/p&gt;

&lt;p&gt;You can also find a niche inside the topic you'd like to teach. For example, there is a lot of React JS courses out there. But what about Testing React JS applications? Or you can teach your students about a topic they can apply in a particular situation, like building an e-commerce website with Next.js, FaunaDB, and Stripe?&lt;/p&gt;

&lt;p&gt;If you are a software developer, you have something to teach. So think about it and find your niche topic.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Hq0tFi5s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://alterclass.io/assets/blog/ideas.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Hq0tFi5s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://alterclass.io/assets/blog/ideas.jpeg" alt="Choose the right topic"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-create-your-online-course"&gt;
  &lt;/a&gt;
  2. Create your online course
&lt;/h2&gt;

&lt;p&gt;Once you have your topic for your online coding course, it is time to create the content.&lt;/p&gt;

&lt;p&gt;Most of the programming content we can find on the internet is video-based, either on YouTube or an e-learning platform like Udemy. You also have a lot of text-based content through blogging platforms like Hashnode or Medium.&lt;/p&gt;

&lt;p&gt;But I'd like you to think about it for a moment. How do you think you learn the best technical/programming skill?&lt;/p&gt;

&lt;p&gt;Is it by watching hours of videos of someone coding? Or is it by practicing as you learn at your own pace?&lt;/p&gt;

&lt;p&gt;What I'm trying to say here is that you don't learn such practical skills as programming just by watching others coding, like you don't learn to drive just by watching others driving a car.&lt;/p&gt;

&lt;p&gt;So, for the content of your online programming course, you need to create interactive and engaging lessons. What I mean by that is that you need, on top of the theory (which you could provide through videos and text), to give your students the opportunity to practice the skills you are teaching and to learn on their own through exercises, programming assignments, and projects.&lt;/p&gt;

&lt;p&gt;It's also important to include several quizzes throughout your online course to test the knowledge of your students along the way and help them assess their learning.&lt;/p&gt;

&lt;p&gt;You'll definitely pass the most out of your time creating the content of your online course. So you must have the right tool to help you with that. However, there is not a lot of options out there for creating high-quality and interactive programming courses online, which is why we've built &lt;a href="https://alterclass.io/teaching"&gt;AlterClass&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S96S3I1---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://alterclass.io/assets/blog/course-editor.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S96S3I1---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://alterclass.io/assets/blog/course-editor.jpeg" alt="The modular online course platform for developers"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-choose-your-platform-to-host-and-sell-your-course"&gt;
  &lt;/a&gt;
  3. Choose your platform to host and sell your course
&lt;/h2&gt;

&lt;p&gt;At this point, you should have the content of your online course ready to be published (or part of it if you'd like to release it in phases).&lt;/p&gt;

&lt;p&gt;Now, you need to choose a platform that enables you to create the best learning experience for your students and makes it easy for you to sell your online course with integrated payment processing.&lt;/p&gt;

&lt;p&gt;Fortunately, there are many existing e-learning platforms/marketplaces you can use to host and sell your course quickly. Some of the most popular are Udemy, Teachable, Thinkific, and &lt;a href="https://alterclass.io/teaching"&gt;AlterClass&lt;/a&gt;. They all have their pros and cons regarding the type of content you can use to create your online course or the pricing model they use. You need to consider that when choosing the platform for your course. More on that in a future article.&lt;/p&gt;

&lt;p&gt;Or you can either build your own platform and host your online course on it. The advantage of doing so is that you have full control over it. However, you'll spend a LOT of time (probably months) working on things like authentication, payments, hosting, and more before being able to publish your course. Plus, you'll not have this time to focus on creating the content of your course, which is by far the most important thing here.&lt;/p&gt;

&lt;p&gt;Keep in mind that there is no good or bad solution. Choose the option that best suits your needs, budget, and time.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--L7OdY8_J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://alterclass.io/assets/blog/cloud-computing.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L7OdY8_J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://alterclass.io/assets/blog/cloud-computing.jpeg" alt="Cloud platform"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-decide-how-much-to-charge-for-your-course"&gt;
  &lt;/a&gt;
  4. Decide how much to charge for your course
&lt;/h2&gt;

&lt;p&gt;Now that you are all set, you need to decide how much to charge for your online course. While you should not overthink it, there are still a few things you need to consider to choose the price of your course.&lt;/p&gt;

&lt;p&gt;First, you need to check the competition and see where you stand within the market. Here are a few questions you may ask yourself to assess it:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Are you offering a course on a topic that is widely available in the market or a course on a specific niche topic?&lt;/li&gt;
&lt;li&gt;How does your course differ from the existing ones?&lt;/li&gt;
&lt;li&gt;Do you have a specific teaching style compared to your competitors? Or do you have an innovative teaching approach with your course?&lt;/li&gt;
&lt;li&gt;Is your course mainly video/text-based, or does it include a lot of interactive content?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Then, you need to measure somehow the value you are offering your students with your online course. In step 1, when choosing the topic for your course, you should already have come up with a topic that brings value to your students' careers.&lt;/p&gt;

&lt;p&gt;Indeed, the more they can apply what they have learned throughout their learning journey with your online course, in the real world, in their career, the highest the value you are providing, or in other words, the higher the price of your course.&lt;/p&gt;

&lt;p&gt;Finally, you also need to take into account the cost of production. For example, if you include videos, you should take into account the cost of the gears you have been using (camera, microphone, software, etc...), and the cost of filming and editing those videos as well.&lt;/p&gt;

&lt;p&gt;But you should also consider the cost of running your course. Indeed, depending on the platform you choose to host and sell your course, you probably have some fees for using the service. So make sure to include those fees in your calculation.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Z2gyzfjA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://alterclass.io/assets/blog/calculator.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z2gyzfjA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://alterclass.io/assets/blog/calculator.jpeg" alt="Calculator"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summary-you-got-skills-monetize-them"&gt;
  &lt;/a&gt;
  Summary - You got skills. Monetize them!
&lt;/h2&gt;

&lt;p&gt;In summary, creating and selling online programming courses is an excellent way to generate (extra) income as a developer and to help your peers learn from your skills and experience.&lt;/p&gt;

&lt;p&gt;In 2021, more and more people are moving online to learn new things and gain the skills they need to improve their careers and future. Plus, technical skills are in high demand in the industry. So as a developer, you have more than ever the opportunity to monetize your skills online.&lt;/p&gt;

&lt;p&gt;However, creating an interactive and engaging technical course online is not an easy task. Most of the platforms available do not provide the necessary tools to do it, and some of them are charging high fees for their service.&lt;/p&gt;

&lt;p&gt;Luckily, with the &lt;a href="https://alterclass.io/teaching"&gt;AlterClass&lt;/a&gt; all-in-one platform, you can build better online programming courses more easily and deliver the best learning experience for your students.&lt;/p&gt;

&lt;p&gt;So if you are serious about monetizing your skills online, checkout &lt;a href="https://alterclass.io/teaching"&gt;AlterClass&lt;/a&gt; as it is free to use.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Originally published here: &lt;a href="https://alterclass.io/blog/how-to-make-money-selling-courses-online-in-2021-as-a-developer"&gt;How to make money selling courses online in 2021 (as a developer)&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

</description>
    </item>
    <item>
      <title>Getting to know Flutter: Advanced use of ModalBottomSheet</title>
      <author>TheOtherDev/s</author>
      <pubDate>Wed, 29 Sep 2021 15:03:28 +0000</pubDate>
      <link>https://dev.to/theotherdevs/getting-to-know-flutter-advanced-use-of-modalbottomsheet-1hjf</link>
      <guid>https://dev.to/theotherdevs/getting-to-know-flutter-advanced-use-of-modalbottomsheet-1hjf</guid>
      <description>&lt;p&gt;Do you want to present a simple modal picker to the user or just show a nice feedback to a user action? In this tutorial you will learn how to use the &lt;a href="https://api.flutter.dev/flutter/material/showModalBottomSheet.html"&gt;showModalBottomSheet&lt;/a&gt; function.&lt;/p&gt;

&lt;p&gt;Let's start by creating a simple bottom sheet,  with a text and a button. As you can see to close a modal bottom sheet you will use the &lt;code&gt;.pop()&lt;/code&gt; function of the Navigator, as you do when closing &lt;code&gt;Scaffold&lt;/code&gt; Widgets.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ModalBottomSheetsPage&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;StatelessWidget&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;ModalBottomSheetsPage&lt;/span&gt;&lt;span class="o"&gt;({&lt;/span&gt;&lt;span class="n"&gt;Key&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;})&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;key:&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

  &lt;span class="nd"&gt;@override&lt;/span&gt;
  &lt;span class="n"&gt;Widget&lt;/span&gt; &lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BuildContext&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Scaffold&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
      &lt;span class="nl"&gt;appBar:&lt;/span&gt; &lt;span class="n"&gt;AppBar&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
        &lt;span class="nl"&gt;title:&lt;/span&gt; &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Modal bottom sheets'&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
      &lt;span class="o"&gt;),&lt;/span&gt;
      &lt;span class="nl"&gt;body:&lt;/span&gt; &lt;span class="n"&gt;Center&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
        &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="n"&gt;ElevatedButton&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
          &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Show modal bottom sheet'&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
          &lt;span class="nl"&gt;onPressed:&lt;/span&gt; &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;_showBottomSheet&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
        &lt;span class="o"&gt;),&lt;/span&gt;
      &lt;span class="o"&gt;),&lt;/span&gt;
    &lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;

  &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;_showBottomSheet&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BuildContext&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;showModalBottomSheet&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
      &lt;span class="nl"&gt;context:&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
      &lt;span class="nl"&gt;builder:&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;SafeArea&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
        &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="n"&gt;Padding&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
          &lt;span class="nl"&gt;padding:&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="n"&gt;EdgeInsets&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;symmetric&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;vertical:&lt;/span&gt; &lt;span class="mf"&gt;20.0&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
          &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="n"&gt;Container&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
            &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="n"&gt;Column&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
              &lt;span class="nl"&gt;mainAxisSize:&lt;/span&gt; &lt;span class="n"&gt;MainAxisSize&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;min&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
              &lt;span class="nl"&gt;crossAxisAlignment:&lt;/span&gt; &lt;span class="n"&gt;CrossAxisAlignment&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;center&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
              &lt;span class="nl"&gt;children:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Widget&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;[&lt;/span&gt;
                &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
                  &lt;span class="s"&gt;'This is a Modal bottom sheet!'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
                  &lt;span class="nl"&gt;style:&lt;/span&gt; &lt;span class="n"&gt;Theme&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;of&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;textTheme&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;headline4&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
                  &lt;span class="nl"&gt;textAlign:&lt;/span&gt; &lt;span class="n"&gt;TextAlign&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;center&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
                &lt;span class="o"&gt;),&lt;/span&gt;
                &lt;span class="n"&gt;ElevatedButton&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
                  &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Close BottomSheet'&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
                  &lt;span class="nl"&gt;onPressed:&lt;/span&gt; &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Navigator&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;pop&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
                &lt;span class="o"&gt;)&lt;/span&gt;
              &lt;span class="o"&gt;],&lt;/span&gt;
            &lt;span class="o"&gt;),&lt;/span&gt;
          &lt;span class="o"&gt;),&lt;/span&gt;
        &lt;span class="o"&gt;),&lt;/span&gt;
      &lt;span class="o"&gt;),&lt;/span&gt;
    &lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's add some fanciness and sound the top corners of our bottom sheet, this is incredibly easy, you just need to add the &lt;code&gt;shape&lt;/code&gt; parameter to the &lt;code&gt;showModalBottomSheet&lt;/code&gt; function, specifying the shape that we want to use.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;    &lt;span class="n"&gt;showModalBottomSheet&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
      &lt;span class="nl"&gt;context:&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
      &lt;span class="nl"&gt;shape:&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="n"&gt;RoundedRectangleBorder&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
        &lt;span class="nl"&gt;borderRadius:&lt;/span&gt; &lt;span class="n"&gt;BorderRadius&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;vertical&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;top:&lt;/span&gt; &lt;span class="n"&gt;Radius&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;circular&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="o"&gt;)),&lt;/span&gt;
      &lt;span class="o"&gt;),&lt;/span&gt;
      &lt;span class="nl"&gt;builder:&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;SafeArea&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we will do a more complex example, we will display in the bottom sheet a list of 100 elements, and the sheet will expand/collapse while the user scrolls through the list. To do so we will use the &lt;a href="https://api.flutter.dev/flutter/widgets/DraggableScrollableSheet-class.html"&gt;DraggableScrollableSheet&lt;/a&gt; widget.&lt;br&gt;&lt;br&gt;
This widget has been created to do this types of sheet, it has a builder function that exposes a &lt;code&gt;ScrollController&lt;/code&gt; that we will need to use in our ListView to keep the scrolling of the list in sync with the state of the bottom sheet.&lt;/p&gt;

&lt;p&gt;In this case we're also passing the index of the list tile pressed in the pop function, so we could use it later. It will be the result of the &lt;code&gt;Future&lt;/code&gt; of the &lt;code&gt;showModalBottomSheet&lt;/code&gt; function, and we're retrieving it awaiting on&lt;code&gt;showModalBottomSheet&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;  &lt;span class="n"&gt;Future&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;_showBottomSheet&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BuildContext&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="n"&gt;async&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;await&lt;/span&gt; &lt;span class="n"&gt;showModalBottomSheet&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
      &lt;span class="nl"&gt;context:&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
      &lt;span class="nl"&gt;isScrollControlled:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
      &lt;span class="nl"&gt;isDismissible:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
      &lt;span class="nl"&gt;shape:&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="n"&gt;RoundedRectangleBorder&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
        &lt;span class="nl"&gt;borderRadius:&lt;/span&gt; &lt;span class="n"&gt;BorderRadius&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;vertical&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;top:&lt;/span&gt; &lt;span class="n"&gt;Radius&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;circular&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="o"&gt;)),&lt;/span&gt;
      &lt;span class="o"&gt;),&lt;/span&gt;
      &lt;span class="nl"&gt;builder:&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;DraggableScrollableSheet&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
        &lt;span class="nl"&gt;initialChildSize:&lt;/span&gt; &lt;span class="mf"&gt;0.4&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
        &lt;span class="nl"&gt;minChildSize:&lt;/span&gt; &lt;span class="mf"&gt;0.2&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
        &lt;span class="nl"&gt;maxChildSize:&lt;/span&gt; &lt;span class="mf"&gt;0.9&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
        &lt;span class="nl"&gt;expand:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
        &lt;span class="nl"&gt;builder:&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;scrollController&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;SafeArea&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
          &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="n"&gt;ListView&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;builder&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
            &lt;span class="nl"&gt;controller:&lt;/span&gt; &lt;span class="n"&gt;scrollController&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
            &lt;span class="nl"&gt;itemCount:&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
            &lt;span class="nl"&gt;itemBuilder:&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;ListTile&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
              &lt;span class="nl"&gt;title:&lt;/span&gt; &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;toString&lt;/span&gt;&lt;span class="o"&gt;()),&lt;/span&gt;
              &lt;span class="nl"&gt;onTap:&lt;/span&gt; &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Navigator&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;of&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;pop&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
            &lt;span class="o"&gt;),&lt;/span&gt;
          &lt;span class="o"&gt;),&lt;/span&gt;
        &lt;span class="o"&gt;),&lt;/span&gt;
      &lt;span class="o"&gt;),&lt;/span&gt;
    &lt;span class="o"&gt;);&lt;/span&gt;

    &lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>flutter</category>
      <category>beginners</category>
      <category>dart</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>A comprehensive guide for using the Twitter API v2 with Tweepy in Python</title>
      <author>Suhem Parack</author>
      <pubDate>Wed, 29 Sep 2021 14:57:33 +0000</pubDate>
      <link>https://dev.to/twitterdev/a-comprehensive-guide-for-using-the-twitter-api-v2-using-tweepy-in-python-15d9</link>
      <guid>https://dev.to/twitterdev/a-comprehensive-guide-for-using-the-twitter-api-v2-using-tweepy-in-python-15d9</guid>
      <description>&lt;p&gt;&lt;a href="https://github.com/tweepy/tweepy"&gt;Tweepy&lt;/a&gt; is a popular package in Python used by students, researchers and developers for interacting with the Twitter API. Recently, the &lt;a href="https://twittercommunity.com/t/tweepy-v4-0-0-has-been-released/159845"&gt;version 4.0 of this package was released&lt;/a&gt; that supports the Twitter API v2 and the academic research product track. In this guide, we will learn how to use the various functionality available in the Twitter API v2, using Tweepy.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; At the time of writing this guide, the streaming endpoints in the Twitter API v2 (such as filtered stream and sampled stream) are not supported yet in Tweepy, but will be &lt;a href="https://github.com/tweepy/tweepy/issues/1472"&gt;added in the future&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The complete documentation for Tweepy can be found &lt;a href="https://docs.tweepy.org/en/latest/client.html"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequisite"&gt;
  &lt;/a&gt;
  Prerequisite
&lt;/h2&gt;

&lt;p&gt;In order to work with the Twitter API, you need to have an approved developer account and your API keys and tokens to connect to the API. Learn more on how to obtain these keys and tokens &lt;a href="https://developer.twitter.com/en/docs/twitter-api/getting-started/getting-access-to-the-twitter-api"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In order to work with Tweepy, make sure you have Python installed on your machine. Then, in the terminal run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;pip3 &lt;span class="nb"&gt;install &lt;/span&gt;tweepy
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you already have Tweepy installed, you can upgrade it to the latest version i.e. 4.0 by running:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;pip3 &lt;span class="nb"&gt;install &lt;/span&gt;tweepy &lt;span class="nt"&gt;--upgrade&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For all the examples in this section, you will first need to import the tweepy library, then you will need to initialize the client by passing it your bearer token. Once you have the client initialized, you will be ready to start using the various functions in this library.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;tweepy&lt;/span&gt;

&lt;span class="n"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tweepy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bearer_token&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'REPLACE_ME'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#1-searching-for-tweets-from-the-last-7-days"&gt;
  &lt;/a&gt;
  1. Searching for Tweets from the last 7 days
&lt;/h2&gt;

&lt;p&gt;In order to search Tweets from the last 7 days, you can use the &lt;code&gt;search_recent_tweets&lt;/code&gt; function available in Tweepy. You will have to pass it a &lt;a href="https://github.com/twitterdev/getting-started-with-the-twitter-api-v2-for-academic-research/blob/main/modules/5-how-to-write-search-queries.md"&gt;search query&lt;/a&gt; to specify the data that you are looking for. In the example below, we are searching for Tweets from the last days &lt;code&gt;from&lt;/code&gt; the Twitter handle &lt;code&gt;suhemparack&lt;/code&gt; and we are excluding retweets using &lt;code&gt;-is:retweet&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;By default, in your response, you will only get the Tweet ID and Tweet text for each Tweet. If you need additional Tweet fields such as &lt;a href="https://developer.twitter.com/en/docs/twitter-api/annotations/overview"&gt;context_annotations&lt;/a&gt;, created_at (the time the tweet was created) etc., you can specifiy those fields using the tweet_fields parameter, as shown in the example below. Learn more about available fields &lt;a href="https://developer.twitter.com/en/docs/twitter-api/fields"&gt;here&lt;/a&gt;. By default, a request returns 10 Tweets. If you want more than 10 Tweets per request, you can specify that using the &lt;code&gt;max_results&lt;/code&gt; parameter. The maximum Tweets per request is 100.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Not all Tweets have context_annotations associated with them, which is why, in the sample below, we only print the context_annotations if those are available for a Tweet.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;tweepy&lt;/span&gt;

&lt;span class="n"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tweepy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bearer_token&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'REPLACE_ME'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Replace with your own search query
&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'from:suhemparack -is:retweet'&lt;/span&gt;

&lt;span class="n"&gt;tweets&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;search_recent_tweets&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tweet_fields&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'context_annotations'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'created_at'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;max_results&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;tweet&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;tweets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tweet&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tweet&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;context_annotations&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tweet&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;context_annotations&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#2-searching-for-tweets-from-the-fullarchive-of-public-tweets"&gt;
  &lt;/a&gt;
  2. Searching for Tweets from the full-archive of public Tweets
&lt;/h2&gt;

&lt;p&gt;If you have access to the &lt;a href="https://developer.twitter.com/en/products/twitter-api/academic-research"&gt;academic research product track&lt;/a&gt;, you can get Tweets older than 7 days i.e. from the full archive of publicly available Tweets. In order to get these Tweets, make sure to use the bearer token from an app connected to your academic project in the Twitter developer portal. You can use the &lt;code&gt;search_all_tweets&lt;/code&gt; method and pass it the search query. As shown in the example above, you can also specify additional Tweet fields etc. that you'd like returned for your request to the Twitter API.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;tweepy&lt;/span&gt;

&lt;span class="n"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tweepy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bearer_token&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'REPLACE_ME'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Replace with your own search query
&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'from:suhemparack -is:retweet'&lt;/span&gt;

&lt;span class="n"&gt;tweets&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;search_all_tweets&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tweet_fields&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'context_annotations'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'created_at'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;max_results&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;tweet&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;tweets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tweet&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tweet&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;context_annotations&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tweet&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;context_annotations&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#3-getting-tweets-from-the-fullarchive-of-public-tweets-for-a-specific-timeframe"&gt;
  &lt;/a&gt;
  3. Getting Tweets from the full-archive of public Tweets for a specific time-frame
&lt;/h2&gt;

&lt;p&gt;If you want to get Tweets from the full-archive for a specific time-period, you can specify the time-period using the &lt;code&gt;start_time&lt;/code&gt; and &lt;code&gt;end_time&lt;/code&gt; parameters, as shown in the example below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;tweepy&lt;/span&gt;

&lt;span class="n"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tweepy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bearer_token&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'REPLACE_ME'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Replace with your own search query
&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'from:suhemparack -is:retweet'&lt;/span&gt;

&lt;span class="c1"&gt;# Replace with time period of your choice
&lt;/span&gt;&lt;span class="n"&gt;start_time&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'2020-01-01T00:00:00Z'&lt;/span&gt;

&lt;span class="c1"&gt;# Replace with time period of your choice
&lt;/span&gt;&lt;span class="n"&gt;end_time&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'2020-08-01T00:00:00Z'&lt;/span&gt;

&lt;span class="n"&gt;tweets&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;search_all_tweets&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tweet_fields&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'context_annotations'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'created_at'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                                  &lt;span class="n"&gt;start_time&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;start_time&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                  &lt;span class="n"&gt;end_time&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;end_time&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;max_results&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;tweet&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;tweets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tweet&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tweet&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;created_at&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#4-getting-more-than-100-tweets-at-a-time-using-paginator"&gt;
  &lt;/a&gt;
  4. Getting more than 100 Tweets at a time using paginator
&lt;/h2&gt;

&lt;p&gt;As seen in the examples above, you can get upto 100 Tweets per request. If you need more than 100 Tweets, you will have to use the &lt;a href="https://docs.tweepy.org/en/latest/pagination.html"&gt;paginator&lt;/a&gt; and specify the limit i.e. the total number of Tweets that you want.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;tweepy&lt;/span&gt;

&lt;span class="n"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tweepy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bearer_token&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'REPLACE_ME'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Replace with your own search query
&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'covid -is:retweet'&lt;/span&gt;

&lt;span class="c1"&gt;# Replace the limit=1000 with the maximum number of Tweets you want
&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;tweet&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;tweepy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Paginator&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;search_recent_tweets&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                              &lt;span class="n"&gt;tweet_fields&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'context_annotations'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'created_at'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;max_results&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;flatten&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;limit&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tweet&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#5-writing-tweets-to-a-text-file"&gt;
  &lt;/a&gt;
  5. Writing Tweets to a text file
&lt;/h2&gt;

&lt;p&gt;This example shows how you can write the Tweet IDs for each Tweet obtained for a search result, to a text file. Make sure to replace the &lt;code&gt;file_name&lt;/code&gt; with the a name of your chosing. If you wish to write other fields to the text file, make sure to adjust the script below accordingly.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;tweepy&lt;/span&gt;

&lt;span class="n"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tweepy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bearer_token&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'REPLACE_ME'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Replace with your own search query
&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'covid -is:retweet'&lt;/span&gt;

&lt;span class="c1"&gt;# Name and path of the file where you want the Tweets written to
&lt;/span&gt;&lt;span class="n"&gt;file_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'tweets.txt'&lt;/span&gt;

&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;file_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'a+'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;filehandle&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;tweet&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;tweepy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Paginator&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;search_recent_tweets&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                  &lt;span class="n"&gt;tweet_fields&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'context_annotations'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'created_at'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;max_results&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;flatten&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;limit&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;filehandle&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'%s&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;tweet&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#6-getting-tweets-with-user-information-for-each-tweet"&gt;
  &lt;/a&gt;
  6. Getting Tweets with user information, for each Tweet
&lt;/h2&gt;

&lt;p&gt;In the examples so far, we have seen how to get Tweet information for the Tweets that we have searched for. However, if you need additional information associated with the Tweet, such as the information of the user Tweeting it, you can use &lt;a href="https://developer.twitter.com/en/docs/twitter-api/expansions"&gt;expansions&lt;/a&gt; and pass it to the &lt;code&gt;search_recent_tweets&lt;/code&gt; function.&lt;/p&gt;

&lt;p&gt;In this example, we want user information, which is why the value for &lt;code&gt;expansions&lt;/code&gt; that we pass is &lt;code&gt;author_id&lt;/code&gt;. Additionally, we will specify the &lt;code&gt;user_fields&lt;/code&gt; that we want returned such as profile_image_url etc. Learn more about available fields &lt;a href="https://developer.twitter.com/en/docs/twitter-api/fields"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;From the response, we will get the users list from the &lt;code&gt;includes&lt;/code&gt; object. Then, we will look up the user information for each Tweet, using the &lt;code&gt;author_id&lt;/code&gt; of the Tweet.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;tweepy&lt;/span&gt;

&lt;span class="n"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tweepy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bearer_token&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'REPLACE_ME'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Replace with your own search query
&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'covid -is:retweet'&lt;/span&gt;

&lt;span class="n"&gt;tweets&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;search_recent_tweets&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tweet_fields&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'context_annotations'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'created_at'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                                     &lt;span class="n"&gt;user_fields&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'profile_image_url'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;expansions&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'author_id'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;max_results&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Get users list from the includes object
&lt;/span&gt;&lt;span class="n"&gt;users&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;u&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;u&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;tweets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;includes&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'users'&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;tweet&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;tweets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;tweet&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;author_id&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
        &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;tweet&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;author_id&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;profile_image_url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#7-getting-tweets-with-media-information-for-each-tweet"&gt;
  &lt;/a&gt;
  7. Getting Tweets with media information, for each Tweet
&lt;/h2&gt;

&lt;p&gt;In this example, we want media information, which is why the value for &lt;code&gt;expansions&lt;/code&gt; that we pass is &lt;code&gt;attachments.media_keys&lt;/code&gt;. Additionally, we will specify the &lt;code&gt;media_fields&lt;/code&gt; that we want returned such as preview_image_url etc. Learn more about available fields &lt;a href="https://developer.twitter.com/en/docs/twitter-api/fields"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;From the response, we will get the media list from the &lt;code&gt;includes&lt;/code&gt; object. Then, we will look up the media information for each Tweet, using the &lt;code&gt;media_keys&lt;/code&gt; from the attachements for the Tweet.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;tweepy&lt;/span&gt;

&lt;span class="n"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tweepy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bearer_token&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'REPLACE_ME'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Replace with your own search query
&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'covid -is:retweet has:media'&lt;/span&gt;

&lt;span class="n"&gt;tweets&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;search_recent_tweets&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tweet_fields&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'context_annotations'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'created_at'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                                     &lt;span class="n"&gt;media_fields&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'preview_image_url'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;expansions&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'attachments.media_keys'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                     &lt;span class="n"&gt;max_results&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Get list of media from the includes object
&lt;/span&gt;&lt;span class="n"&gt;media&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"media_key"&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;tweets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;includes&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'media'&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;tweet&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;tweets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;attachments&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tweet&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'attachments'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;media_keys&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;attachments&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'media_keys'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tweet&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;media&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;media_keys&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]].&lt;/span&gt;&lt;span class="n"&gt;preview_image_url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;media&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;media_keys&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]].&lt;/span&gt;&lt;span class="n"&gt;preview_image_url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#8-searching-for-geotagged-tweets"&gt;
  &lt;/a&gt;
  8. Searching for geo-tagged Tweets
&lt;/h2&gt;

&lt;p&gt;Some Tweets have geographic information associated with them. The search endpoints in the Twitter API v2 support operators such as &lt;code&gt;place&lt;/code&gt;, &lt;code&gt;place_country&lt;/code&gt;, &lt;code&gt;bounding_box&lt;/code&gt;, &lt;code&gt;point_radius&lt;/code&gt; etc. (these operators are currently only available in the academic research product track) that allow you to get these geo-tagged Tweets.&lt;/p&gt;

&lt;p&gt;In the example below, we want all Tweets that are from the country &lt;code&gt;US&lt;/code&gt;, which is why we specify it in our search query using the &lt;code&gt;place_country:US&lt;/code&gt; operator. Now because by default, only the Tweet ID and Tweet text are returned, we have to specify the fact that we want the geo information in our response as well. We do this by passing the &lt;code&gt;expansions='geo.place_id'&lt;/code&gt; to the &lt;code&gt;search_all_tweets&lt;/code&gt; function and we also specify the geo fields that we are looking for using &lt;code&gt;place_fields=['place_type','geo']&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;In our response, we get the list of places from the &lt;code&gt;includes&lt;/code&gt; object, and we match on the &lt;code&gt;place_id&lt;/code&gt; to get the relevant geo information associated with the Tweet (the &lt;code&gt;place.full_name&lt;/code&gt; in the example below)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;tweepy&lt;/span&gt;

&lt;span class="n"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tweepy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bearer_token&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'REPLACE_ME'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Replace with your own search query
&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'covid -is:retweet place_country:US'&lt;/span&gt;

&lt;span class="n"&gt;tweets&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;search_all_tweets&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tweet_fields&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'context_annotations'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'created_at'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'geo'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                                  &lt;span class="n"&gt;place_fields&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'place_type'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'geo'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;expansions&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'geo.place_id'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;max_results&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Get list of places from includes object
&lt;/span&gt;&lt;span class="n"&gt;places&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;tweets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;includes&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'places'&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;tweet&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;tweets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tweet&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tweet&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;places&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;tweet&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geo&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'place_id'&lt;/span&gt;&lt;span class="p"&gt;]]:&lt;/span&gt;
        &lt;span class="n"&gt;place&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;places&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;tweet&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geo&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'place_id'&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;place&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;full_name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#9-getting-tweet-counts-volume-for-a-search-query"&gt;
  &lt;/a&gt;
  9. Getting Tweet counts (volume) for a search query
&lt;/h2&gt;

&lt;p&gt;So far, we have seen examples of how to get Tweets for a search query. However, if you want to get the count of Tweets (volume) for a search term, you can use the &lt;code&gt;get_recent_tweets_count&lt;/code&gt; function. You can pass it the search &lt;code&gt;query&lt;/code&gt; and specify the &lt;code&gt;granularity&lt;/code&gt; for the data aggregation e.g. if you want the daily count, hourly count or 15-minute count for a search term.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;tweepy&lt;/span&gt;

&lt;span class="n"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tweepy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bearer_token&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'REPLACE_ME'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Replace with your own search query
&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'covid -is:retweet'&lt;/span&gt;

&lt;span class="n"&gt;counts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_recent_tweets_count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;granuarity&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'day'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;counts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The response will look something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{'end': '2021-09-23T00:00:00.000Z', 'start': '2021-09-22T03:01:44.000Z', 'tweet_count': 142282}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#10-getting-a-users-timeline"&gt;
  &lt;/a&gt;
  10. Getting a user's timeline
&lt;/h2&gt;

&lt;p&gt;In order to get the most recent 3200 Tweets from a user's timeline, we can use the &lt;code&gt;get_users_tweets&lt;/code&gt; method and pass it the user id. We can also specify additional fields that we want using the &lt;code&gt;tweet_fields&lt;/code&gt; and &lt;code&gt;expansions&lt;/code&gt; (as shown in the examples above).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;tweepy&lt;/span&gt;

&lt;span class="n"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tweepy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bearer_token&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'REPLACE_ME'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Replace user ID
&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'2244994945'&lt;/span&gt;

&lt;span class="n"&gt;tweets&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_users_tweets&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tweet_fields&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'context_annotations'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;'created_at'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;'geo'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;tweet&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;tweets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tweet&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#11-getting-a-users-mentions"&gt;
  &lt;/a&gt;
  11. Getting a user's mentions
&lt;/h2&gt;

&lt;p&gt;In order to get the most recent 3200 mentions for a user, we can use the &lt;code&gt;get_users_mentions&lt;/code&gt; method and pass it the user id. We can also specify additional fields that we want using the &lt;code&gt;tweet_fields&lt;/code&gt; and &lt;code&gt;expansions&lt;/code&gt; (as shown in the examples above).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;tweepy&lt;/span&gt;

&lt;span class="n"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tweepy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bearer_token&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'REPLACE_ME'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Replace user ID
&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'2244994945'&lt;/span&gt;

&lt;span class="n"&gt;tweets&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_users_mentions&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tweet_fields&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'context_annotations'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;'created_at'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;'geo'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;tweet&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;tweets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tweet&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#12-getting-a-users-followers"&gt;
  &lt;/a&gt;
  12. Getting a user's followers
&lt;/h2&gt;

&lt;p&gt;In order to get the followers of a user, we can use the &lt;code&gt;get_users_followers&lt;/code&gt; function and pass it the user ID. If we want additional fields for the User object such as &lt;code&gt;profile_image_url&lt;/code&gt;, we can specify those using the &lt;code&gt;user_fields&lt;/code&gt; parameter.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;tweepy&lt;/span&gt;

&lt;span class="n"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tweepy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bearer_token&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'REPLACE_ME'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Replace user ID
&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'2244994945'&lt;/span&gt;

&lt;span class="n"&gt;users&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_users_followers&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;user_fields&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'profile_image_url'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#13-getting-users-that-a-user-follows"&gt;
  &lt;/a&gt;
  13. Getting users that a user follows
&lt;/h2&gt;

&lt;p&gt;In order to get the list of users that a user follows, we can use the &lt;code&gt;get_users_following&lt;/code&gt; function and pass it the user ID. If we want additional fields for the User object such as &lt;code&gt;profile_image_url&lt;/code&gt;, we can specify those using the &lt;code&gt;user_fields&lt;/code&gt; parameter.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;tweepy&lt;/span&gt;

&lt;span class="n"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tweepy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bearer_token&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'REPLACE_ME'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Replace user ID
&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'2244994945'&lt;/span&gt;

&lt;span class="n"&gt;users&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_users_following&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;user_fields&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'profile_image_url'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#14-getting-users-that-like-a-tweet"&gt;
  &lt;/a&gt;
  14. Getting users that like a Tweet
&lt;/h2&gt;

&lt;p&gt;In order to get the list of users that like a Tweet, we can use the &lt;code&gt;get_liking_users&lt;/code&gt; function and pass it the Tweet ID. If we want additional fields for the User object such as &lt;code&gt;profile_image_url&lt;/code&gt;, we can specify those using the &lt;code&gt;user_fields&lt;/code&gt; parameter.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;tweepy&lt;/span&gt;

&lt;span class="n"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tweepy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bearer_token&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'REPLACE_ME'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Replace Tweet ID
&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'1441054496931541004'&lt;/span&gt;

&lt;span class="n"&gt;users&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_liking_users&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;user_fields&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'profile_image_url'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#15-getting-users-that-retweeted-a-tweet"&gt;
  &lt;/a&gt;
  15. Getting users that retweeted a Tweet
&lt;/h2&gt;

&lt;p&gt;In order to get the list of users that retweeted a Tweet, we can use the &lt;code&gt;get_retweeters&lt;/code&gt; function and pass it the Tweet ID. If we want additional fields for the User object such as &lt;code&gt;profile_image_url&lt;/code&gt;, we can specify those using the &lt;code&gt;user_fields&lt;/code&gt; parameter.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;tweepy&lt;/span&gt;

&lt;span class="n"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tweepy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bearer_token&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'REPLACE_ME'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Replace Tweet ID
&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'1441054496931541004'&lt;/span&gt;

&lt;span class="n"&gt;users&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_retweeters&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;user_fields&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'profile_image_url'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#16-getting-tweets-that-a-user-liked"&gt;
  &lt;/a&gt;
  16. Getting Tweets that a user liked
&lt;/h2&gt;

&lt;p&gt;In order to get the list of Tweets that a user liked, we can use the &lt;code&gt;get_liked_tweets&lt;/code&gt; function and pass it the User ID. If we want additional fields for the Tweet object such as &lt;code&gt;context_annotations&lt;/code&gt;, &lt;code&gt;created_at&lt;/code&gt; etc. we can specify those using the &lt;code&gt;tweet_fields&lt;/code&gt; parameter.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;tweepy&lt;/span&gt;

&lt;span class="n"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tweepy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bearer_token&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'REPLACE_ME'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Replace User ID
&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'2244994945'&lt;/span&gt;

&lt;span class="n"&gt;tweets&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_liked_tweets&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tweet_fields&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'context_annotations'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;'created_at'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;'geo'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;tweet&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;tweets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tweet&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#17-lookup-tweets-using-tweet-ids"&gt;
  &lt;/a&gt;
  17. Lookup Tweets using Tweet IDs
&lt;/h2&gt;

&lt;p&gt;In some cases, if we have a list of Tweet IDs and want to build the Tweet dataset for these Tweet IDs, we can use the &lt;code&gt;get_tweets&lt;/code&gt; function and pass it the list of Tweet IDs. By default, only the Tweet ID and Tweet text are returned. If we want additional Tweet fields, we can specify those using &lt;code&gt;tweet_fields&lt;/code&gt; parameter.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;tweepy&lt;/span&gt;

&lt;span class="n"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tweepy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bearer_token&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'REPLACE_ME'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Replace Tweet IDs
&lt;/span&gt;&lt;span class="n"&gt;ids&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'1409935014725177344'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'1409931481552543749'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'1441054496931541004'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;tweets&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_tweets&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ids&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;ids&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tweet_fields&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'context_annotations'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;'created_at'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;'geo'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;tweet&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;tweets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tweet&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#18-lookup-users-using-user-ids"&gt;
  &lt;/a&gt;
  18. Lookup Users using User IDs
&lt;/h2&gt;

&lt;p&gt;In some cases, if we have a list of User IDs and want to build the User dataset for these User IDs, we can use the &lt;code&gt;get_users&lt;/code&gt; function and pass it the list of User IDs. If we want additional User fields, we can specify those using &lt;code&gt;user_fields&lt;/code&gt; parameter.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;tweepy&lt;/span&gt;

&lt;span class="n"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tweepy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bearer_token&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'REPLACE_ME'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Replace User IDs
&lt;/span&gt;&lt;span class="n"&gt;ids&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'2244994945'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;users&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_users&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ids&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;ids&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;user_fields&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'profile_image_url'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;profile_image_url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;These are some common examples of working with the Twitter API v2 using Tweepy. As Tweepy adds support for additional endpoints, we will update this post to include examples of using those endpoints.&lt;/p&gt;

&lt;p&gt;If you have any questions or feedback about this guide, please feel free to reach out to me on &lt;a href="https://twitter.com/suhemparack"&gt;Twitter&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;Also, special shoutout to &lt;a href="https://twitter.com/Harmon758"&gt;Harmon&lt;/a&gt; and the contributors of the Tweepy package for supporting the Twitter API v2 and the academic product track.&lt;/p&gt;

</description>
      <category>twitter</category>
      <category>api</category>
      <category>python</category>
    </item>
    <item>
      <title>Bulk Address Verification With the Lob API</title>
      <author>Lob</author>
      <pubDate>Wed, 29 Sep 2021 14:56:08 +0000</pubDate>
      <link>https://dev.to/lob/bulk-address-verification-with-the-lob-api-536o</link>
      <guid>https://dev.to/lob/bulk-address-verification-with-the-lob-api-536o</guid>
      <description>&lt;p&gt;This article is a hands-on tutorial that will show you how to create an app using Lob’s Address Verification API to verify records from a database in bulk. This tutorial will show you the capabilities of Lob’s API to help make your direct mail process more efficient.&lt;/p&gt;

&lt;p&gt;This tutorial assumes that you’re a Node.js developer working with an extensive pre-existing database of address records. The database may contain invalid records, so we use the Lob API to quickly verify the addresses in bulk and flag any bad records found in the database.&lt;/p&gt;

&lt;p&gt;Before getting started, you need to ensure that you have &lt;a href="https://nodejs.org/"&gt;Node.js&lt;/a&gt;, npm, &lt;a href="https://www.postgresql.org/"&gt;PostgreSQL&lt;/a&gt;, and &lt;a href="https://www.postgresql.org/docs/13/app-psql.html"&gt;psql&lt;/a&gt; installed on your development machine.&lt;/p&gt;

&lt;p&gt;You can install Node.js and npm by following these steps:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Download the correct installer binary for your system from the &lt;a href="https://nodejs.org/"&gt;official website&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Install Node.js and npm using the package manager of your system.&lt;/li&gt;
&lt;li&gt;Use a Node.js version manager, such as &lt;a href="https://github.com/nvm-sh/nvm"&gt;NVM&lt;/a&gt;. This also enables you to easily manage multiple versions of Node.js on your development machine.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can follow one of these tutorials for installing and setting up PostgreSQL.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.digitalocean.com/community/tutorials/how-to-install-postgresql-on-ubuntu-20-04-quickstart"&gt;Linux&lt;/a&gt; | &lt;a href="https://www.codementor.io/@engineerapart/getting-started-with-postgresql-on-mac-osx-are8jcopb"&gt;Mac&lt;/a&gt; | &lt;a href="https://www.postgresqltutorial.com/install-postgresql/"&gt;Windows&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bulk-address-verification"&gt;
  &lt;/a&gt;
  Bulk Address Verification
&lt;/h2&gt;

&lt;p&gt;In this section, we’ll review how to create a complete Node.js web app step by step using PostgreSQL and the Lob API to accomplish address verification in bulk. Let’s start by setting up a PostgreSQL database with fields for address information (name, street address, state, city, ZIP code, and so on). &lt;/p&gt;

&lt;p&gt;Open a new terminal and run the following command: &lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
‍

&lt;p&gt;Provide the password and press Enter by default there isn’t a password.&lt;/p&gt;

&lt;p&gt;If you see postgres=# in your terminal, you have successfully logged in.&lt;/p&gt;

&lt;p&gt;If psql can’t connect to server-  &lt;a href="https://stackoverflow.com/questions/31645550/postgresql-why-psql-cant-connect-to-server"&gt;verify the postgres database is running&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next, create the addresses table. Use the serial type to create an &lt;a href="https://www.techiediaries.com/auto-increment-primary-key-postgresql/"&gt;auto-incremented primary key&lt;/a&gt;. The code is as follows:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
‍

&lt;p&gt;You can run the following command to see the created table:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
‍

&lt;p&gt;Next, let’s fill the table with some dummy records with both valid and invalid addresses. Use a &lt;a href="https://github.com/EthanRBrown/rrad"&gt;public location&lt;/a&gt; for valid addresses without sensitive info. You can use the following SQL queries:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
‍&lt;br&gt;
‍&lt;br&gt;
If you want to see the new rows inserted in your database table - &lt;a href="https://www.postgresqltutorial.com/postgresql-show-tables/"&gt;checkout this tutorial&lt;/a&gt;.

&lt;p&gt;Now, let’s create a web application with Node.js. We use Express.js, a popular framework for powering web apps built on top of Node.js.&lt;/p&gt;

&lt;p&gt;Head over to your terminal and run the following command:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
‍‍

&lt;p&gt;This creates a package.json file with the following contents:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
‍

&lt;p&gt;Next, install the dependencies using the following command:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;We installed &lt;a href="https://expressjs.com/"&gt;Express.js&lt;/a&gt; for the server and &lt;a href="https://node-postgres.com/"&gt;node-postgres (pg)&lt;/a&gt; to connect to PostgreSQL. We also &lt;a href="https://30daysofjavascript.com/nodemon/"&gt;installed nodemon for automatically restarting&lt;/a&gt; the Node application when there are file changes in the directory.&lt;/p&gt;

&lt;p&gt;Now, we must create an index.js file that we use as the main entry point for our app:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
‍

&lt;p&gt;Open the package.json file and add the following script to start our app in watch mode using nodemon:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
‍

&lt;p&gt;In the index.js file, we must import the express and path modules and set our app and port variables as follows:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
‍

&lt;p&gt;Next, set up the Express app as follows:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
‍

&lt;p&gt;Now, let’s add a route for the GET request to the root (/) URL, and return the HTML page:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
‍

&lt;p&gt;Start the server as follows:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
‍

&lt;p&gt;Next, create a public/main.html file with the following HTML contents:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
‍

&lt;p&gt;Here, we use the &lt;a href="https://www.webtutpro.com/ejs-template-engine-f148420c9ca5"&gt;EJS template syntax&lt;/a&gt; to display the title variable passed from the index.js file.&lt;/p&gt;

&lt;p&gt;Now, start the app using the following command:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
‍&lt;br&gt;
‍&lt;br&gt;
This starts a server that’s listening on port 3000. Go to &lt;a href="http://localhost:3000/"&gt;http://localhost:3000/&lt;/a&gt; with your web browser. You should see a blank page with the “This is a title!!!” text.

&lt;h2&gt;
  &lt;a href="#connecting-to-the-postgresql-database"&gt;
  &lt;/a&gt;
  Connecting to the PostgreSQL database
&lt;/h2&gt;

&lt;p&gt;Let’s connect to the database and retrieve some records. Go to your terminal and run the following command to &lt;a href="https://node-postgres.com/"&gt;install node-postgres (pg)&lt;/a&gt; to connect to PostgreSQL:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
‍

&lt;p&gt;We use the node-postgres module to create a &lt;a href="https://www.techiediaries.com/postgresql-connection-pool-client-example"&gt;pool of connections&lt;/a&gt;. This is useful if we don’t want to open a client and close it for each query to the database.&lt;/p&gt;

&lt;p&gt;Some resources you won’t need for this tutorial, but can explore later.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://kb.objectrocket.com/postgresql/how-to-list-users-in-postgresql-782"&gt;Listing users in psql&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://chartio.com/resources/tutorials/how-to-set-the-default-user-password-in-postgresql/"&gt;Updating/resetting the password&lt;/a&gt; of a known user&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://medium.com/coding-blocks/creating-user-database-and-adding-access-on-postgresql-8bfcd2f4a91e"&gt;Creating a user&lt;/a&gt;, a db, and giving the new user permissions&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Go back to the index.js file and add the following code:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
‍

&lt;h2&gt;
  &lt;a href="#getting-data-from-the-database"&gt;
  &lt;/a&gt;
  Getting data from the database
&lt;/h2&gt;

&lt;p&gt;Update the existing app.get method in your code as follows:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
‍

&lt;p&gt;Next, open the main.html file and update it as follows:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
‍

&lt;p&gt;Create an HTML table, and loop over the addresses array passed from the index.js file to create the table rows using the &lt;a href="https://ejs.co/#docs"&gt;embedded JavaScript template&lt;/a&gt;. Go to your browser and refresh your app. You should see something like the following screenshot:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i5Ac7RWo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o16vuxo7wv7ov9n6kqti.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i5Ac7RWo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o16vuxo7wv7ov9n6kqti.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;At this stage, we can retrieve records from our database. Next, let’s see how to use &lt;a href="https://docs.lob.com/node#us_verifications"&gt;Lob’s Node.js Address Verification API SDK&lt;/a&gt; to check whether the address records are valid.&lt;/p&gt;

&lt;p&gt;Our app is in Node.js, so we rely on the Node SDK from Lob. Lob also offers various SDK options for other languages, including Python, Ruby, PHP, Java, and Elixir.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#verifying-addresses-with-the-lob-api"&gt;
  &lt;/a&gt;
  Verifying addresses with the Lob API
&lt;/h2&gt;

&lt;p&gt;First, create an account at &lt;a href="https://dashboard.lob.com/#/register"&gt;Lob.com&lt;/a&gt; to obtain a live API Key. The key is available in the &lt;a href="https://dashboard.lob.com/#/settings"&gt;Lob Settings Panel&lt;/a&gt; and uses the format, live_*.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eBWT_7----/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ffzm4r9mguv6u9y50mot.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eBWT_7----/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ffzm4r9mguv6u9y50mot.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next, head over to your terminal and run the following command to install the lob-node package:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
‍&lt;br&gt;
‍&lt;br&gt;
Now open the index.js file and start by adding the following line after the const port = 3000:


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
‍&lt;br&gt;
‍&lt;br&gt;
Update the GET route by adding the following code. First, in the rows array of the results object remove the name and id attributes from the rows as follows:


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
‍&lt;br&gt;
‍

&lt;p&gt;Next, we call the bulkUSVerifications.verify method to verify the addresses in bulk:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
‍&lt;br&gt;
‍

&lt;p&gt;If there are no errors, add the other two attributes — the &lt;a href="https://docs.lob.com/#us_verifications_object"&gt;deliverability&lt;/a&gt; status and the address returned from the Lob API — in each row of the rows array. Then render the main.html file with verified addresses, the number of scanned records, and the valid and invalid addresses.&lt;/p&gt;

&lt;p&gt;We use the deliverability string returned from the Lob API to determine the required action according to the different statuses returned by Lob:&lt;/p&gt;

&lt;p&gt;If it returns a deliverable status, we take no action.&lt;br&gt;
If it returns an unnecessary, incorrect, or missing unit status, we flag the address for updating, correcting, or manually reviewing.&lt;br&gt;
If it returns an undeliverable status, we flag it for removal from the database.&lt;br&gt;
Add the following switch statement where we have the /* switch statement */ comment:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
‍

&lt;p&gt;Finally, in the main.html file, let’s display the status and action for each address, the number of records scanned, and how many valid and invalid results we detected:&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
‍

&lt;p&gt;This is a screenshot of the results:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DQ3zGWGr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mb3sp2ho2ozviod9o6q6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DQ3zGWGr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mb3sp2ho2ozviod9o6q6.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;In this article, we used Node.js to build a web application that integrates with the Lob API to quickly verify addresses in bulk batches and flag bad records found in the database. We used PostgreSQL as a database with fields for address information (name, street address, state, city, and ZIP codes, including valid and invalid addresses). We tested connecting to our database and retrieving records. Then we used Lob’s Node.js Address Verification API SDK to check if the address records are valid.&lt;/p&gt;

&lt;p&gt;If you’re interested in bulk address verification and related topics, you can experiment with Lob’s API for free by &lt;a href="https://dashboard.lob.com/#/register"&gt;signing up&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>tutorial</category>
      <category>node</category>
      <category>postgres</category>
      <category>beginners</category>
    </item>
    <item>
      <title>12+ Github Repositories to Help You Ace Your Job Interview</title>
      <author>Olubisi Idris Ayinde💡</author>
      <pubDate>Wed, 29 Sep 2021 14:40:39 +0000</pubDate>
      <link>https://dev.to/olanetsoft/12-github-repositories-to-help-you-ace-your-job-interview-2a08</link>
      <guid>https://dev.to/olanetsoft/12-github-repositories-to-help-you-ace-your-job-interview-2a08</guid>
      <description>&lt;p&gt;The word "interview" is frequently associated with anxiety and discomfort. However, you may prepare vital tools to brighten up and organise fruitful interviews with this article's assistance.&lt;/p&gt;

&lt;p&gt;I'll provide you with a list of GitHub repositories that will assist you in preparing for your next technical/coding interview.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-coding-university-interview"&gt;
  &lt;/a&gt;
  1. Coding University Interview
&lt;/h2&gt;

&lt;p&gt;This excellent repository has everything you'll need for a coding interview. It began as the repository owner's study plan and evolved into a study plan for many others. The author is now employed as a software engineer at Amazon.&lt;/p&gt;

&lt;p&gt;To ace any big tech company's interview, you'll need a multi-month study strategy. &lt;/p&gt;

&lt;p&gt;The technique progresses from programming fundamentals through an advanced data structure, system design, and essential computer science ideas.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/jwasham"&gt;
        jwasham
      &lt;/a&gt; / &lt;a href="https://github.com/jwasham/coding-interview-university"&gt;
        coding-interview-university
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A complete computer science study plan to become a software engineer.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Coding Interview University&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;I originally created this as a short to-do list of study topics for becoming a software engineer
but it grew to the large list you see today. After going through this study plan, &lt;a href="https://startupnextdoor.com/ive-been-acquired-by-amazon/?src=ciu" rel="nofollow"&gt;I got hired
as a Software Development Engineer at Amazon&lt;/a&gt;
You probably won't have to study as much as I did. Anyway, everything you need is here.&lt;/p&gt;
&lt;p&gt;I studied about 8-12 hours a day, for several months. This is my story: &lt;a href="https://medium.freecodecamp.org/why-i-studied-full-time-for-8-months-for-a-google-interview-cc662ce9bb13" rel="nofollow"&gt;Why I studied full-time for 8 months for a Google interview&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Please Note:&lt;/strong&gt; You won't need to study as much as I did. I wasted a lot of time on things I didn't need to know. More info about that below. I'll help you get there without wasting your precious time.&lt;/p&gt;
&lt;p&gt;The items listed here will prepare you well for a technical interview at just about any software company
including the giants:…&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/jwasham/coding-interview-university"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#2-build-your-own-x"&gt;
  &lt;/a&gt;
  2. Build Your Own X
&lt;/h2&gt;

&lt;p&gt;Here are some instances of how to impress the employer by developing your own Git, Docker, or framework, among other things.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/danistefanovic"&gt;
        danistefanovic
      &lt;/a&gt; / &lt;a href="https://github.com/danistefanovic/build-your-own-x"&gt;
        build-your-own-x
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      🤓 Build your own (insert technology here)
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;strong&gt;[&lt;a href="https://github.com/danistefanovic/build-your-own-x/issues/new"&gt;Submit tutorial&lt;/a&gt;]&lt;/strong&gt;&lt;/p&gt;
&lt;h1&gt;
&lt;a rel="noopener noreferrer" href="https://github.com/danistefanovic/build-your-own-xfeynman.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eO6EABbE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/danistefanovic/build-your-own-xfeynman.png" alt="Build your own X"&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;h2&gt;
Table of contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/danistefanovic/build-your-own-x#build-your-own-3d-renderer"&gt;3D Renderer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/danistefanovic/build-your-own-x#build-your-own-augmented-reality"&gt;Augmented Reality&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/danistefanovic/build-your-own-x#build-your-own-bittorrent-client"&gt;BitTorrent Client&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/danistefanovic/build-your-own-x#build-your-own-blockchain--cryptocurrency"&gt;Blockchain / Cryptocurrency&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/danistefanovic/build-your-own-x#build-your-own-bot"&gt;Bot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/danistefanovic/build-your-own-x#build-your-own-command-line-tool"&gt;Command-Line Tool&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/danistefanovic/build-your-own-x#build-your-own-database"&gt;Database&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/danistefanovic/build-your-own-x#build-your-own-docker"&gt;Docker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/danistefanovic/build-your-own-x#build-your-own-emulator--virtual-machine"&gt;Emulator / Virtual Machine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/danistefanovic/build-your-own-x#build-your-own-front-end-framework--library"&gt;Front-end Framework / Library&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/danistefanovic/build-your-own-x#build-your-own-game"&gt;Game&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/danistefanovic/build-your-own-x#build-your-own-git"&gt;Git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/danistefanovic/build-your-own-x#build-your-own-network-stack"&gt;Network Stack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/danistefanovic/build-your-own-x#build-your-own-neural-network"&gt;Neural Network&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/danistefanovic/build-your-own-x#build-your-own-operating-system"&gt;Operating System&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/danistefanovic/build-your-own-x#build-your-own-physics-engine"&gt;Physics Engine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/danistefanovic/build-your-own-x#build-your-own-programming-language"&gt;Programming Language&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/danistefanovic/build-your-own-x#build-your-own-regex-engine"&gt;Regex Engine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/danistefanovic/build-your-own-x#build-your-own-search-engine"&gt;Search Engine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/danistefanovic/build-your-own-x#build-your-own-shell"&gt;Shell&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/danistefanovic/build-your-own-x#build-your-own-template-engine"&gt;Template Engine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/danistefanovic/build-your-own-x#build-your-own-text-editor"&gt;Text Editor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/danistefanovic/build-your-own-x#build-your-own-visual-recognition-system"&gt;Visual Recognition System&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/danistefanovic/build-your-own-x#build-your-own-voxel-engine"&gt;Voxel Engine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/danistefanovic/build-your-own-x#build-your-own-web-search-engine"&gt;Web Search Engine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/danistefanovic/build-your-own-x#build-your-own-web-server"&gt;Web Server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/danistefanovic/build-your-own-x#uncategorized"&gt;Uncategorized&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Tutorials&lt;/h2&gt;
&lt;h4&gt;
Build your own &lt;code&gt;3D Renderer&lt;/code&gt;
&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.scratchapixel.com/lessons/3d-basic-rendering/introduction-to-ray-tracing/how-does-it-work" rel="nofollow"&gt;&lt;strong&gt;C++&lt;/strong&gt;: &lt;em&gt;Introduction to Ray Tracing: a Simple Method for Creating 3D Images&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ssloy/tinyrenderer/wiki"&gt;&lt;strong&gt;C++&lt;/strong&gt;: &lt;em&gt;How OpenGL works: software rendering in 500 lines of code&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://lodev.org/cgtutor/raycasting.html" rel="nofollow"&gt;&lt;strong&gt;C++&lt;/strong&gt;: &lt;em&gt;Raycasting engine of Wolfenstein 3D&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.pbr-book.org/" rel="nofollow"&gt;&lt;strong&gt;C++&lt;/strong&gt;: &lt;em&gt;Physically Based Rendering:From Theory To Implementation&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.scratchapixel.com/lessons/3d-basic-rendering/rasterization-practical-implementation/overview-rasterization-algorithm" rel="nofollow"&gt;&lt;strong&gt;C++&lt;/strong&gt;: &lt;em&gt;Rasterization: a Practical Implementation&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.davrous.com/2013/06/13/tutorial-series-learning-how-to-write-a-3d-soft-engine-from-scratch-in-c-typescript-or-javascript/" rel="nofollow"&gt;&lt;strong&gt;C# / TypeScript / JavaScript&lt;/strong&gt;: &lt;em&gt;Learning how to write a 3D soft engine from scratch in C#, TypeScript or JavaScript&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://avik-das.github.io/build-your-own-raytracer/" rel="nofollow"&gt;&lt;strong&gt;Java / JavaScript&lt;/strong&gt;: &lt;em&gt;Build your own 3D renderer&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://blog.rogach.org/2015/08/how-to-create-your-own-simple-3d-render.html" rel="nofollow"&gt;&lt;strong&gt;Java&lt;/strong&gt;: &lt;em&gt;How to create your own&lt;/em&gt;&lt;/a&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/danistefanovic/build-your-own-x"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#3-tech-interview-handbook"&gt;
  &lt;/a&gt;
  3. Tech Interview Handbook
&lt;/h2&gt;

&lt;p&gt;This is your technical interview manual. This one was the most well-organized and straightforward to navigate. It also includes advice on how to deal with behavioural questions, which can be tricky at times.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/yangshun"&gt;
        yangshun
      &lt;/a&gt; / &lt;a href="https://github.com/yangshun/tech-interview-handbook"&gt;
        tech-interview-handbook
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      💯 Curated interview preparation materials for busy engineers
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Tech Interview Handbook&lt;/h1&gt;
&lt;div&gt;
  &lt;a href="https://techinterviewhandbook.org/" rel="nofollow"&gt;
    &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OTOyV8Wp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/yangshun/tech-interview-handbookwebsite/static/img/logo.svg" alt="Tech Interview Handbook" width="400"&gt;
  &lt;/a&gt;
  &lt;br&gt;
  &lt;a href="https://gitpod.io/#https://github.com/yangshun/tech-interview-handbook" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/ab059fd13892f6ad2c0b59661ce3265669cac8204fafa8b379ec9c56f67c4391/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f476974706f642d52656164792d2d746f2d2d436f64652d626c75653f6c6f676f3d676974706f64" alt="Gitpod Ready to Code"&gt;
  &lt;/a&gt;
  &lt;br&gt;
  &lt;p&gt;
    &lt;em&gt;Credits: &lt;a href="https://dribbble.com/shots/3831443-Tech-Interview-Handbook" rel="nofollow"&gt;Illustration&lt;/a&gt; by &lt;a href="https://dribbble.com/leftaligned" rel="nofollow"&gt;@leftaligned&lt;/a&gt;&lt;/em&gt;
  &lt;/p&gt;
  &lt;h3&gt;
    &lt;a href="https://techinterviewhandbook.org/" rel="nofollow"&gt;Read on the website&lt;/a&gt; | &lt;a href="https://facebook.com/techinterviewhandbook" rel="nofollow"&gt;Follow us on Facebook&lt;/a&gt;
  &lt;/h3&gt;
&lt;/div&gt;

&lt;div&gt;
  &lt;h3&gt;
Get paid more. Moonchaser has negotiated hundreds of tech offers. Get 1-1 guidance from their experienced team of ex-FAANG PMs, SWEs, and Recruiters. &lt;a href="https://www.moonchaser.io/?utm_source=techinterviewhandbook&amp;amp;utm_medium=referral&amp;amp;utm_content=github" rel="nofollow"&gt;Find out more&lt;/a&gt;
&lt;/h3&gt;
&lt;/div&gt;

&lt;h2&gt;
What is this?&lt;/h2&gt;
&lt;p&gt;No one has time to do a few hundred LeetCode questions. Here's &lt;em&gt;free and curated&lt;/em&gt; technical interview preparation materials for busy engineers, brought to you by the author of the &lt;a href="https://www.teamblind.com/post/New-Year-Gift---Curated-List-of-Top-75-LeetCode-Questions-to-Save-Your-Time-OaM1orEU" rel="nofollow"&gt;Blind 75 List&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Besides the usual algorithm questions, other &lt;strong&gt;awesome&lt;/strong&gt; stuff includes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://techinterviewhandbook.org/coding-round-overview" rel="nofollow"&gt;How to prepare&lt;/a&gt; for coding interviews&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://techinterviewhandbook.org/cheatsheet" rel="nofollow"&gt;Interview Cheatsheet&lt;/a&gt; - Straight-to-the-point Do's and Don'ts&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://techinterviewhandbook.org/algorithms/introduction" rel="nofollow"&gt;Algorithm tips and the best practice questions&lt;/a&gt; categorized by topic&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://techinterviewhandbook.org/interview-formats" rel="nofollow"&gt;Interview formats&lt;/a&gt; of the top tech companies&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://techinterviewhandbook.org/behavioral-questions" rel="nofollow"&gt;Behavioral questions&lt;/a&gt; asked by the top tech companies&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://techinterviewhandbook.org/questions-to-ask" rel="nofollow"&gt;Good questions to ask your interviewers&lt;/a&gt; at the end of the interviews&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://techinterviewhandbook.org/resume" rel="nofollow"&gt;Helpful resume tips&lt;/a&gt; to get your resume noticed and the Do's and…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/yangshun/tech-interview-handbook"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#4-how-to-secure-anything"&gt;
  &lt;/a&gt;
  4. How to Secure Anything
&lt;/h2&gt;

&lt;p&gt;The repository is well-organized, and it has a wealth of other resources to support your learning.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/veeral-patel"&gt;
        veeral-patel
      &lt;/a&gt; / &lt;a href="https://github.com/veeral-patel/how-to-secure-anything"&gt;
        how-to-secure-anything
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      How to systematically secure anything: a repository about security engineering
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
How to Secure Anything&lt;/h1&gt;
&lt;p&gt;Security engineering is the discipline of building secure systems.&lt;/p&gt;
&lt;p&gt;Its lessons are not just applicable to computer security. In fact, in this repo, I aim to document a process for securing anything, whether it's a medieval castle, an art museum, or a computer network.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Please contribute! Create a pull request or just &lt;a href="https://github.com/veeral-patel/how-to-secure-anything/issues/new"&gt;create a issue&lt;/a&gt; for content you'd like to add: I'll add it for you!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;
Table of contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/veeral-patel/how-to-secure-anything#what-is-security-engineering"&gt;What is security engineering?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/veeral-patel/how-to-secure-anything#high-level-process"&gt;High level process&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/veeral-patel/how-to-secure-anything#follow-known-best-practices"&gt;Follow known best practices&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/veeral-patel/how-to-secure-anything#understand-your-adversaries"&gt;Understand your adversaries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/veeral-patel/how-to-secure-anything#security-policies"&gt;Security policies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/veeral-patel/how-to-secure-anything#security-models"&gt;Security models&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/veeral-patel/how-to-secure-anything#improve-defenses"&gt;Improve defenses&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/veeral-patel/how-to-secure-anything#minimize-attack-surface"&gt;Minimize attack surface&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/veeral-patel/how-to-secure-anything#minimize-and-verify-your-trusted-computing-base-tcb"&gt;Minimize and verify your trusted computing base (TCB)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/veeral-patel/how-to-secure-anything#separate-privileges"&gt;Separate privileges&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/veeral-patel/how-to-secure-anything#minimize-privileges"&gt;Minimize privileges&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/veeral-patel/how-to-secure-anything#secure-by-default"&gt;Secure by default&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/veeral-patel/how-to-secure-anything#secure-by-design"&gt;Secure by design&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/veeral-patel/how-to-secure-anything#prevent-detect-respond-framework"&gt;Prevent/detect/respond framework&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/veeral-patel/how-to-secure-anything#kill-chains"&gt;Kill chains&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/veeral-patel/how-to-secure-anything#security-design-principles"&gt;Security design principles&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/veeral-patel/how-to-secure-anything#find-vulnerabilities"&gt;Find vulnerabilities&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/veeral-patel/how-to-secure-anything#developing-an-attacker-mindset"&gt;Developing an attacker mindset&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/veeral-patel/how-to-secure-anything#think-in-graphs"&gt;Think in graphs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/veeral-patel/how-to-secure-anything#attack-trees"&gt;Attack trees&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/veeral-patel/how-to-secure-anything#on--un-bypassable--tamperproof--functionally-correct--fail-closed"&gt;On, un-bypassable, tamperproof, functionally correct, fail closed&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/veeral-patel/how-to-secure-anything#example--a-burglar"&gt;Example: a burglar&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/veeral-patel/how-to-secure-anything#assumptions-analysis"&gt;Assumptions analysis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/veeral-patel/how-to-secure-anything#failure-analysis"&gt;Failure analysis&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/veeral-patel/how-to-secure-anything#fault-tree-analysis"&gt;Fault tree analysis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/veeral-patel/how-to-secure-anything#fmea"&gt;FMEA&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/veeral-patel/how-to-secure-anything"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#5-javascript-algorithms"&gt;
  &lt;/a&gt;
  5. JavaScript Algorithms
&lt;/h2&gt;

&lt;p&gt;The JavaScript Algorithms repository focuses on JavaScript positions. However, if you understand the principles and know how to implement them in JavaScript, you'll very certainly be able to do so in other languages as well.&lt;/p&gt;

&lt;p&gt;Each Data Structure and Algorithm has its README file, which offers links to other resources. As a result, if you don't comprehend a subject, you can always look up more information in the additional content.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/trekhleb"&gt;
        trekhleb
      &lt;/a&gt; / &lt;a href="https://github.com/trekhleb/javascript-algorithms"&gt;
        javascript-algorithms
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      📝 Algorithms and data structures implemented in JavaScript with explanations and links to further readings
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
JavaScript Algorithms and Data Structures&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/trekhleb/javascript-algorithms/actions?query=workflow%3ACI+branch%3Amaster"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tPiprYPc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/trekhleb/javascript-algorithms/workflows/CI/badge.svg" alt="CI"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/gh/trekhleb/javascript-algorithms" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9ff751911f19ea8aefdbd2b20184c1ab5fba47caf8b31a02fb18f8d7df6e43ba/68747470733a2f2f636f6465636f762e696f2f67682f7472656b686c65622f6a6176617363726970742d616c676f726974686d732f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This repository contains JavaScript based examples of many
popular algorithms and data structures.&lt;/p&gt;
&lt;p&gt;Each algorithm and data structure has its own separate README
with related explanations and links for further reading (including ones
to YouTube videos).&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Read this in other languages:&lt;/em&gt;
&lt;a href="https://github.com/trekhleb/javascript-algorithmsREADME.zh-CN.md"&gt;&lt;em&gt;简体中文&lt;/em&gt;&lt;/a&gt;
&lt;a href="https://github.com/trekhleb/javascript-algorithmsREADME.zh-TW.md"&gt;&lt;em&gt;繁體中文&lt;/em&gt;&lt;/a&gt;
&lt;a href="https://github.com/trekhleb/javascript-algorithmsREADME.ko-KR.md"&gt;&lt;em&gt;한국어&lt;/em&gt;&lt;/a&gt;
&lt;a href="https://github.com/trekhleb/javascript-algorithmsREADME.ja-JP.md"&gt;&lt;em&gt;日本語&lt;/em&gt;&lt;/a&gt;,
&lt;a href="https://github.com/trekhleb/javascript-algorithmsREADME.pl-PL.md"&gt;&lt;em&gt;Polski&lt;/em&gt;&lt;/a&gt;,
&lt;a href="https://github.com/trekhleb/javascript-algorithmsREADME.fr-FR.md"&gt;&lt;em&gt;Français&lt;/em&gt;&lt;/a&gt;,
&lt;a href="https://github.com/trekhleb/javascript-algorithmsREADME.es-ES.md"&gt;&lt;em&gt;Español&lt;/em&gt;&lt;/a&gt;,
&lt;a href="https://github.com/trekhleb/javascript-algorithmsREADME.pt-BR.md"&gt;&lt;em&gt;Português&lt;/em&gt;&lt;/a&gt;,
&lt;a href="https://github.com/trekhleb/javascript-algorithmsREADME.ru-RU.md"&gt;&lt;em&gt;Русский&lt;/em&gt;&lt;/a&gt;,
&lt;a href="https://github.com/trekhleb/javascript-algorithmsREADME.tr-TR.md"&gt;&lt;em&gt;Türk&lt;/em&gt;&lt;/a&gt;,
&lt;a href="https://github.com/trekhleb/javascript-algorithmsREADME.it-IT.md"&gt;&lt;em&gt;Italiana&lt;/em&gt;&lt;/a&gt;,
&lt;a href="https://github.com/trekhleb/javascript-algorithmsREADME.id-ID.md"&gt;&lt;em&gt;Bahasa Indonesia&lt;/em&gt;&lt;/a&gt;,
&lt;a href="https://github.com/trekhleb/javascript-algorithmsREADME.uk-UA.md"&gt;&lt;em&gt;Українська&lt;/em&gt;&lt;/a&gt;,
&lt;a href="https://github.com/trekhleb/javascript-algorithmsREADME.ar-AR.md"&gt;&lt;em&gt;Arabic&lt;/em&gt;&lt;/a&gt;,
&lt;a href="https://github.com/trekhleb/javascript-algorithmsREADME.de-DE.md"&gt;&lt;em&gt;Deutsch&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;☝ Note that this project is meant to be used for learning and researching purposes
only, and it is &lt;strong&gt;not&lt;/strong&gt; meant to be used for production.&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;
Data Structures&lt;/h2&gt;
&lt;p&gt;A data structure is a particular way of organizing and storing data in a computer so that it can
be accessed and modified efficiently. More precisely, a data structure is a collection of data
values, the relationships among them, and the functions or operations that can…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/trekhleb/javascript-algorithms"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#6-how-the-web-works"&gt;
  &lt;/a&gt;
  6. How The Web Works
&lt;/h2&gt;

&lt;p&gt;You can learn about the DNS, HTTP protocol, and server, as well as DOM Tree, Render Tree, page painting, and other topics.&lt;/p&gt;

&lt;p&gt;It's an excellent resource for learning the fundamentals of how the internet works. Furthermore, the storage has additional links that allow you to delve deeper into various topics.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/vasanthk"&gt;
        vasanthk
      &lt;/a&gt; / &lt;a href="https://github.com/vasanthk/how-web-works"&gt;
        how-web-works
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      What happens behind the scenes when we type www.google.com in a browser?
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
How Web Works&lt;/h1&gt;
&lt;p&gt;What happens behind the scenes when we type google.com in a browser?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/vasanthk/how-web-works#googles-g-key-is-pressed"&gt;Google's 'g' key is pressed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vasanthk/how-web-works#when-you-hit-enter"&gt;When you hit 'Enter'&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vasanthk/how-web-works#parse-the-url"&gt;Parse the URL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vasanthk/how-web-works#check-hsts-list"&gt;Check HSTS list&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vasanthk/how-web-works#dns-lookup"&gt;DNS lookup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vasanthk/how-web-works#opening-of-a-socket--tls-handshake"&gt;Opening of a socket + TLS handshake&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vasanthk/how-web-works#http-protocol"&gt;HTTP protocol&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vasanthk/how-web-works#http-server-request-handle"&gt;HTTP Server Request Handle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vasanthk/how-web-works#server-response"&gt;Server Response&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vasanthk/how-web-works#behind-the-scenes-of-the-browser"&gt;Behind the scenes of the Browser&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vasanthk/how-web-works#the-browsers-high-level-structure"&gt;The browser's high level structure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vasanthk/how-web-works#rendering-engine"&gt;Rendering Engine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vasanthk/how-web-works#the-main-flow"&gt;The Main flow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vasanthk/how-web-works#parsing-basics"&gt;Parsing Basics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vasanthk/how-web-works#dom-tree"&gt;DOM Tree&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vasanthk/how-web-works#render-tree"&gt;Render Tree&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vasanthk/how-web-works#render-trees-relation-to-the-dom-tree"&gt;Render tree's relation to the DOM tree&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vasanthk/how-web-works#css-parsing"&gt;CSS Parsing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vasanthk/how-web-works#layout"&gt;Layout&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vasanthk/how-web-works#painting"&gt;Painting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vasanthk/how-web-works#trivia"&gt;Trivia&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Google's 'g' key is pressed&lt;/h2&gt;
&lt;p&gt;When you just press "g" the browser receives the event and the entire auto-complete machinery kicks into high gear. Depending on your browser's algorithm and if you are in private/incognito mode or not various suggestions will be presented to you in the dropbox below the URL bar. Most of these algorithms prioritize results based on search history and bookmarks. You are…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/vasanthk/how-web-works"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#7-the-algorithms"&gt;
  &lt;/a&gt;
  7. The Algorithms
&lt;/h2&gt;

&lt;p&gt;Clean, legible code with suitable comments in your preferred language can be found here. The community is fantastic and is fast to reply to any issues you may have.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/TheAlgorithms"&gt;
        TheAlgorithms
      &lt;/a&gt; / &lt;a href="https://github.com/TheAlgorithms/Javascript"&gt;
        Javascript
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A repository for All algorithms implemented in Javascript (for educational purposes only)
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
The Algorithms - JavaScript&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/TheAlgorithms/Javascript/blob/master/CONTRIBUTING.md"&gt;&lt;img src="https://camo.githubusercontent.com/67eb7c8b1ed6c9019f25d5ac1331577db2b42f15303a452aa91e94fc4565019a/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76312e7376673f6c6162656c3d436f6e747269627574696f6e73266d6573736167653d57656c636f6d6526636f6c6f723d303035396233267374796c653d666c61742d737175617265" alt="contributions welcome"&gt;&lt;/a&gt; 
&lt;a href="https://lgtm.com/projects/g/TheAlgorithms/Javascript/context:javascript" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f7c2f45d1de634eb034a3b6ea7813b565c4e578b3c35d2bc3a008dd53bab92cb/68747470733a2f2f696d672e736869656c64732e696f2f6c67746d2f67726164652f6a6176617363726970742f672f546865416c676f726974686d732f4a6176617363726970742e7376673f6c6f676f3d6c67746d266c6f676f57696474683d3138267374796c653d666c61742d737175617265" alt="Language grade: JavaScript"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://github.com/TheAlgorithms/Javascript/workflows/Node%20CI/badge.svg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LJKahnX5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/TheAlgorithms/Javascript/workflows/Node%2520CI/badge.svg" alt="Node CI"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://github.com/TheAlgorithms/Javascript/workflows/update_directory_md/badge.svg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--79mAt4hf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/TheAlgorithms/Javascript/workflows/update_directory_md/badge.svg" alt="update_directory_md"&gt;&lt;/a&gt;
&lt;a href="https://discord.gg/c7MnfGFGa6" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1de46c8a86db708e5b8709e4c0f6c38f82e38e3bb26e94e256a1c8a123eee549/68747470733a2f2f696d672e736869656c64732e696f2f646973636f72642f3830383034353932353535363638323738322e7376673f6c6f676f3d646973636f726426636f6c6f72423d373238394441267374796c653d666c61742d737175617265" alt="Discord chat"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/67ad96b7a47f290a6bac9dddbe79ba560dd7dc93616d708267a2940bba696a9c/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f7265706f2d73697a652f546865416c676f726974686d732f4a6176617363726970742e7376673f6c6162656c3d5265706f25323073697a65267374796c653d666c61742d737175617265"&gt;&lt;img src="https://camo.githubusercontent.com/67ad96b7a47f290a6bac9dddbe79ba560dd7dc93616d708267a2940bba696a9c/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f7265706f2d73697a652f546865416c676f726974686d732f4a6176617363726970742e7376673f6c6162656c3d5265706f25323073697a65267374796c653d666c61742d737175617265" alt=""&gt;&lt;/a&gt; 
&lt;a href="https://standardjs.com/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2acd7bc792209ab5d9722e003ca4aac48f2c779750bd295aef733cabfcdf3729/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d7374616e646172646a732d253233663364663439" alt="standard.js"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
All algorithms implemented in JavaScript (for educational purposes only)&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://gitpod.io/#https://github.com/TheAlgorithms/Javascript" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/76e60919474807718793857d8eb615e7a50b18b04050577e5a35c19421f260a3/68747470733a2f2f676974706f642e696f2f627574746f6e2f6f70656e2d696e2d676974706f642e737667" alt="Open in Gitpod"&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;These are for demonstration purposes only. There are many implementations of sorts in the JavaScript standard library that are much better for performance reasons.&lt;/p&gt;
&lt;h2&gt;
Contribution Guidelines&lt;/h2&gt;
&lt;p&gt;Read our &lt;a href="https://github.com/TheAlgorithms/JavascriptCONTRIBUTING.md"&gt;Contribution Guidelines&lt;/a&gt; before you contribute.&lt;/p&gt;
&lt;h2&gt;
List of Algorithms&lt;/h2&gt;
&lt;p&gt;See our &lt;a href="https://github.com/TheAlgorithms/JavascriptDIRECTORY.md"&gt;directory&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
Algorithm Explanation&lt;/h2&gt;
&lt;p&gt;see our &lt;a href="https://github.com/TheAlgorithms/Javascript/wiki"&gt;wiki&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/TheAlgorithms/Javascript"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


&lt;h2&gt;
  &lt;a href="#8-the-system-primer"&gt;
  &lt;/a&gt;
  8. The System Primer
&lt;/h2&gt;

&lt;p&gt;This is a collection of internet-based materials and resources—the repository's owner compiled resources and materials from many sources. Furthermore, the repository is updated regularly, so keep an eye on it!&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/donnemartin"&gt;
        donnemartin
      &lt;/a&gt; / &lt;a href="https://github.com/donnemartin/system-design-primer"&gt;
        system-design-primer
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Learn how to design large-scale systems. Prep for the system design interview.  Includes Anki flashcards.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;em&gt;&lt;a href="https://github.com/donnemartin/system-design-primerREADME.md"&gt;English&lt;/a&gt; ∙ &lt;a href="https://github.com/donnemartin/system-design-primerREADME-ja.md"&gt;日本語&lt;/a&gt; ∙ &lt;a href="https://github.com/donnemartin/system-design-primerREADME-zh-Hans.md"&gt;简体中文&lt;/a&gt; ∙ &lt;a href="https://github.com/donnemartin/system-design-primerREADME-zh-TW.md"&gt;繁體中文&lt;/a&gt; | &lt;a href="https://github.com/donnemartin/system-design-primer/issues/170"&gt;العَرَبِيَّة‎&lt;/a&gt; ∙ &lt;a href="https://github.com/donnemartin/system-design-primer/issues/220"&gt;বাংলা&lt;/a&gt; ∙ &lt;a href="https://github.com/donnemartin/system-design-primer/issues/40"&gt;Português do Brasil&lt;/a&gt; ∙ &lt;a href="https://github.com/donnemartin/system-design-primer/issues/186"&gt;Deutsch&lt;/a&gt; ∙ &lt;a href="https://github.com/donnemartin/system-design-primer/issues/130"&gt;ελληνικά&lt;/a&gt; ∙ &lt;a href="https://github.com/donnemartin/system-design-primer/issues/272"&gt;עברית&lt;/a&gt; ∙ &lt;a href="https://github.com/donnemartin/system-design-primer/issues/104"&gt;Italiano&lt;/a&gt; ∙ &lt;a href="https://github.com/donnemartin/system-design-primer/issues/102"&gt;한국어&lt;/a&gt; ∙ &lt;a href="https://github.com/donnemartin/system-design-primer/issues/110"&gt;فارسی&lt;/a&gt; ∙ &lt;a href="https://github.com/donnemartin/system-design-primer/issues/68"&gt;Polski&lt;/a&gt; ∙ &lt;a href="https://github.com/donnemartin/system-design-primer/issues/87"&gt;русский язык&lt;/a&gt; ∙ &lt;a href="https://github.com/donnemartin/system-design-primer/issues/136"&gt;Español&lt;/a&gt; ∙ &lt;a href="https://github.com/donnemartin/system-design-primer/issues/187"&gt;ภาษาไทย&lt;/a&gt; ∙ &lt;a href="https://github.com/donnemartin/system-design-primer/issues/39"&gt;Türkçe&lt;/a&gt; ∙ &lt;a href="https://github.com/donnemartin/system-design-primer/issues/127"&gt;tiếng Việt&lt;/a&gt; ∙ &lt;a href="https://github.com/donnemartin/system-design-primer/issues/250"&gt;Français&lt;/a&gt; | &lt;a href="https://github.com/donnemartin/system-design-primer/issues/28"&gt;Add Translation&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Help &lt;a href="https://github.com/donnemartin/system-design-primerTRANSLATIONS.md"&gt;translate&lt;/a&gt; this guide!&lt;/strong&gt;&lt;/p&gt;
&lt;h1&gt;
The System Design Primer&lt;/h1&gt;
&lt;p&gt;
  &lt;a rel="noopener noreferrer" href="https://github.com/donnemartin/system-design-primerimages/jj3A5N8.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PCt8CCXH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/donnemartin/system-design-primerimages/jj3A5N8.png"&gt;&lt;/a&gt;
  &lt;br&gt;
&lt;/p&gt;

&lt;h2&gt;
Motivation&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Learn how to design large-scale systems.&lt;/p&gt;
&lt;p&gt;Prep for the system design interview.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;
Learn how to design large-scale systems&lt;/h3&gt;
&lt;p&gt;Learning how to design scalable systems will help you become a better engineer.&lt;/p&gt;
&lt;p&gt;System design is a broad topic.  There is a &lt;strong&gt;vast amount of resources scattered throughout the web&lt;/strong&gt; on system design principles.&lt;/p&gt;
&lt;p&gt;This repo is an &lt;strong&gt;organized collection&lt;/strong&gt; of resources to help you learn how to build systems at scale.&lt;/p&gt;
&lt;h3&gt;
Learn from the open source community&lt;/h3&gt;
&lt;p&gt;This is a continually updated, open source project.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/donnemartin/system-design-primer#contributing"&gt;Contributions&lt;/a&gt; are welcome!&lt;/p&gt;
&lt;h3&gt;
Prep for the system design interview&lt;/h3&gt;
&lt;p&gt;In addition…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/donnemartin/system-design-primer"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#9-awesome-interview-questions"&gt;
  &lt;/a&gt;
  9. Awesome Interview Questions
&lt;/h2&gt;

&lt;p&gt;Excellent Interview Questions is a selected list of "amazing" interview questions that are frequently asked.&lt;/p&gt;

&lt;p&gt;In many cases, the interviewer will ask you questions on the programming language in addition to the problem-solving questions. These ideas are crucial, and they show the interviewer how well you understand the programming language.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/DopplerHQ"&gt;
        DopplerHQ
      &lt;/a&gt; / &lt;a href="https://github.com/DopplerHQ/awesome-interview-questions"&gt;
        awesome-interview-questions
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      :octocat: A curated awesome list of lists of interview questions. Feel free to contribute! 🎓 
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;div&gt;
    &lt;p&gt;
        &lt;a href="https://doppler.com?utm_campaign=github_repo&amp;amp;utm_medium=referral&amp;amp;utm_content=awesome-interview&amp;amp;utm_source=github" rel="nofollow"&gt;
      &lt;/a&gt;&lt;/p&gt;
&lt;div&gt;&lt;a href="https://doppler.com?utm_campaign=github_repo&amp;amp;utm_medium=referral&amp;amp;utm_content=awesome-interview&amp;amp;utm_source=github" rel="nofollow"&gt; 
                &lt;img src="https://camo.githubusercontent.com/0b7046d12223b30accf7609035ff5ff104bb05b406d1842add5849fba4436e7d/68747470733a2f2f64617368626f6172642e646f70706c65722e636f6d2f696d67732f6c6f676f2d6c6f6e672e737667" width="260" alt="Doppler"&gt;   
            &lt;/a&gt;&lt;/div&gt;
&lt;a href="https://doppler.com?utm_campaign=github_repo&amp;amp;utm_medium=referral&amp;amp;utm_content=awesome-interview&amp;amp;utm_source=github" rel="nofollow"&gt;  
      &lt;br&gt;
            &lt;b&gt;All your environment variables, in one place&lt;/b&gt; 
            &lt;div&gt;Stop struggling with scattered API keys, hacking together home-brewed tools,&lt;/div&gt;
            &lt;div&gt;and avoiding access controls. Keep your team and servers in sync with Doppler.&lt;/div&gt;
            &lt;br&gt;
        &lt;/a&gt;    
        
&lt;/div&gt;  
&lt;h1&gt;
Awesome Interviews &lt;a href="https://github.com/sindresorhus/awesome"&gt;&lt;img src="https://camo.githubusercontent.com/abb97269de2982c379cbc128bba93ba724d8822bfbe082737772bd4feb59cb54/68747470733a2f2f63646e2e7261776769742e636f6d2f73696e647265736f726875732f617765736f6d652f643733303566333864323966656437386661383536353265336136336531353464643865383832392f6d656469612f62616467652e737667" alt="Awesome"&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;A curated list of lists of technical interview questions.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://github.com/DopplerHQ/awesome-interview-questionsawesome.md"&gt;What makes for an awesome list?&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Please read the &lt;a href="https://github.com/DopplerHQ/awesome-interview-questionscontributing.md"&gt;contribution guidelines&lt;/a&gt; or &lt;a href="https://github.com/DopplerHQ/awesome-interview-questionscreate-list.md"&gt;creating a list guide&lt;/a&gt; if you want to contribute.&lt;/p&gt;
&lt;h3&gt;
Table of Contents&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/DopplerHQ/awesome-interview-questions#programming-languagesframeworksplatforms"&gt;Programming Languages/Frameworks/Platforms&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/DopplerHQ/awesome-interview-questions#android"&gt;Android&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DopplerHQ/awesome-interview-questions#angularjs"&gt;AngularJS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DopplerHQ/awesome-interview-questions#angular"&gt;Angular&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DopplerHQ/awesome-interview-questions#backbonejs"&gt;BackboneJS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DopplerHQ/awesome-interview-questions#c"&gt;C++&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DopplerHQ/awesome-interview-questions#c-1"&gt;C&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DopplerHQ/awesome-interview-questions#c-2"&gt;C♯&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DopplerHQ/awesome-interview-questions#net"&gt;.NET&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DopplerHQ/awesome-interview-questions#clojure"&gt;Clojure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DopplerHQ/awesome-interview-questions#css"&gt;CSS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DopplerHQ/awesome-interview-questions#cucumber"&gt;Cucumber&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DopplerHQ/awesome-interview-questions#django"&gt;Django&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DopplerHQ/awesome-interview-questions#docker"&gt;Docker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DopplerHQ/awesome-interview-questions#emberjs"&gt;EmberJS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DopplerHQ/awesome-interview-questions#erlang"&gt;Erlang&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DopplerHQ/awesome-interview-questions#golang"&gt;Golang&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DopplerHQ/awesome-interview-questions#graphql"&gt;GraphQl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DopplerHQ/awesome-interview-questions#html"&gt;HTML&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DopplerHQ/awesome-interview-questions#ionic"&gt;Ionic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DopplerHQ/awesome-interview-questions#ios"&gt;iOS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DopplerHQ/awesome-interview-questions#java"&gt;Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DopplerHQ/awesome-interview-questions#javascript"&gt;JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DopplerHQ/awesome-interview-questions#jquery"&gt;jQuery&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DopplerHQ/awesome-interview-questions#front-end-build-tools"&gt;Front-end build tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DopplerHQ/awesome-interview-questions#knockoutjs"&gt;KnockoutJS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DopplerHQ/awesome-interview-questions#less"&gt;Less&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DopplerHQ/awesome-interview-questions#lisp"&gt;Lisp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DopplerHQ/awesome-interview-questions#nodejs"&gt;NodeJS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DopplerHQ/awesome-interview-questions#objective-c"&gt;Objective-C&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DopplerHQ/awesome-interview-questions#php"&gt;PHP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DopplerHQ/awesome-interview-questions#python"&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DopplerHQ/awesome-interview-questions#reactjs"&gt;ReactJS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DopplerHQ/awesome-interview-questions#ruby-on-rails"&gt;Rails&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DopplerHQ/awesome-interview-questions#ruby"&gt;Ruby&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DopplerHQ/awesome-interview-questions#rust"&gt;Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DopplerHQ/awesome-interview-questions#sass"&gt;Sass&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DopplerHQ/awesome-interview-questions#scala"&gt;Scala&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DopplerHQ/awesome-interview-questions#shell"&gt;Shell&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DopplerHQ/awesome-interview-questions#spark"&gt;Spark&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DopplerHQ/awesome-interview-questions#swift"&gt;Swift&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DopplerHQ/awesome-interview-questions#vuejs"&gt;Vue.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DopplerHQ/awesome-interview-questions#wordpress"&gt;Wordpress&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DopplerHQ/awesome-interview-questions#typescript"&gt;TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/DopplerHQ/awesome-interview-questions#database-technologies"&gt;Database technologies&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/DopplerHQ/awesome-interview-questions#cassandra"&gt;Cassandra&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DopplerHQ/awesome-interview-questions#microsoft-access"&gt;Microsoft Access&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DopplerHQ/awesome-interview-questions#mongodb"&gt;MongoDB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DopplerHQ/awesome-interview-questions#mysql"&gt;MySQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DopplerHQ/awesome-interview-questions#neo4j"&gt;Neo4j&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DopplerHQ/awesome-interview-questions#oracle"&gt;Oracle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DopplerHQ/awesome-interview-questions#postgres"&gt;Postgres&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DopplerHQ/awesome-interview-questions#sql"&gt;SQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DopplerHQ/awesome-interview-questions#sql-lite"&gt;SQL Lite&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/DopplerHQ/awesome-interview-questions#caching-technologies"&gt;Caching technologies&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/DopplerHQ/awesome-interview-questions#memcached"&gt;Memcached&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DopplerHQ/awesome-interview-questions#redis"&gt;Redis&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/DopplerHQ/awesome-interview-questions#os"&gt;OS&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/DopplerHQ/awesome-interview-questions#linux"&gt;Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DopplerHQ/awesome-interview-questions#windows"&gt;Windows&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/DopplerHQ/awesome-interview-questions#algorithms"&gt;Algorithms&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/DopplerHQ/awesome-interview-questions#blockchain"&gt;Blockchain&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/DopplerHQ/awesome-interview-questions#coding-exercises"&gt;Coding exercises&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/DopplerHQ/awesome-interview-questions#comprehensive-lists"&gt;Comprehensive lists&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/DopplerHQ/awesome-interview-questions#design-patterns"&gt;Design patterns&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/DopplerHQ/awesome-interview-questions#data-structures"&gt;Data structures&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/DopplerHQ/awesome-interview-questions#networks"&gt;Networks&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/DopplerHQ/awesome-interview-questions#security"&gt;Security&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/DopplerHQ/awesome-interview-questions#data-science"&gt;Data Science&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Programming Languages/Frameworks/Platforms&lt;/h2&gt;
&lt;h3&gt;
Android&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="http://www.careerride.com/android-interview-questions.aspx" rel="nofollow"&gt;10&lt;/a&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/DopplerHQ/awesome-interview-questions"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#10-interview-resources"&gt;
  &lt;/a&gt;
  10. Interview Resources
&lt;/h2&gt;

&lt;p&gt;This repository offers a curated assortment of helpful articles, videos, manuals, websites, books, online courses, and more for anything relevant to technical or coding interviews.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/Olshansk"&gt;
        Olshansk
      &lt;/a&gt; / &lt;a href="https://github.com/Olshansk/interview"&gt;
        interview
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Everything you need to prepare for your technical interview
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a href="https://gitter.im/andreis/interview" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6288b2e809c42d199ae01e43aa2d558ab334dd2c392baad2bbe5e2cac5783da4/68747470733a2f2f6261646765732e6769747465722e696d2f616e64726569732f696e746572766965772e706e67" alt="Gitter chat"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
Contents&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/Olshansk/interview#algorithms"&gt;Algorithms&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Olshansk/interview#books-1"&gt;Books&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Olshansk/interview#coding-practice"&gt;Coding Practice&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Olshansk/interview#guides"&gt;Guides&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Olshansk/interview#misc"&gt;Misc&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/Olshansk/interview#guides-1"&gt;Guides&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Olshansk/interview#articles"&gt;Articles&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Olshansk/interview#books"&gt;Books&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Olshansk/interview#courses"&gt;Courses&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Olshansk/interview#misc-1"&gt;Misc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Olshansk/interview#mock-interviews"&gt;Mock interviews&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Olshansk/interview#qa"&gt;Q&amp;amp;A&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Olshansk/interview#sites"&gt;Sites&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Olshansk/interview#videos"&gt;Videos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/Olshansk/interview#languages-and-technologies"&gt;Languages and technologies&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Olshansk/interview#android"&gt;Android&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Olshansk/interview#aspnet"&gt;ASP.NET&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Olshansk/interview#javascript"&gt;JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Olshansk/interview#node"&gt;Node&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Olshansk/interview#php"&gt;PHP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Olshansk/interview#python"&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Olshansk/interview#react"&gt;React&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/Olshansk/interview#other-topics"&gt;Other topics&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Olshansk/interview#crypto"&gt;Crypto&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Olshansk/interview#funny"&gt;Funny&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Olshansk/interview#maths"&gt;Maths&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Olshansk/interview#networking"&gt;Networking&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Olshansk/interview#operating-systems"&gt;Operating Systems&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Olshansk/interview#system-design"&gt;System Design&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Olshansk/interview#similar-repos"&gt;Similar repos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Found a dead link? Try &lt;a href="http://archive.is/" rel="nofollow"&gt;archive.is&lt;/a&gt; or the &lt;a href="https://archive.org/web/" rel="nofollow"&gt;Wayback Machine&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;
Algorithms&lt;/h2&gt;
&lt;h3&gt;
Books&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Jeff Erickson - &lt;a href="http://jeffe.cs.illinois.edu/teaching/algorithms/" rel="nofollow"&gt;Algorithms&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Steven Skiena – &lt;a href="http://www.algorist.com/" rel="nofollow"&gt;The Algorithm Design Manual&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Udi Manber – &lt;a href="https://www.amazon.com/Introduction-Algorithms-Creative-Udi-Manber/dp/0201120372" rel="nofollow"&gt;Introduction to Algorithms: A Creative Approach&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Cormen, Leiserson, Rivest, Stein – &lt;a href="https://mitpress.mit.edu/books/introduction-algorithms" rel="nofollow"&gt;Introduction to Algorithms&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Sedgewick, Wayne – &lt;a href="http://algs4.cs.princeton.edu/home/" rel="nofollow"&gt;Algorithms&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Antti Laaksonen – &lt;a href="https://cses.fi/book.html" rel="nofollow"&gt;Competitive Programmer's Handbook&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Steven &amp;amp; Felix Halim – &lt;a href="https://cpbook.net/" rel="nofollow"&gt;Competitive Programming&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Jon Bentley – &lt;a href="http://www.wou.edu/~jcm/Spring-P-2015/Programming%20Pearls%20(2nd%20Ed)%20Bentley.pdf" rel="nofollow"&gt;Programming Pearls&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://e-maxx-eng.appspot.com/" rel="nofollow"&gt;E-Maxx Algorithms&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://e-maxx.ru/algo/" rel="nofollow"&gt;Original [RU]&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vhf/free-programming-books"&gt;vhf/free-programming-books&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://it-ebooks.info/" rel="nofollow"&gt;it-ebooks.info&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;S. Dasgupta, C. H. Papadimitriou, and U. V. Vazirani -&lt;a href="http://algorithmics.lsi.upc.edu/docs/Dasgupta-Papadimitriou-Vazirani.pdf" rel="nofollow"&gt;Algorithms&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
Coding practice&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://leetcode.com/" rel="nofollow"&gt;LeetCode&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;LeetCode w/ Explanations &lt;a href="https://github.com/labuladong/fucking-algorithm/tree/english"&gt;labuladong/fucking-algorithm&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.interviewbit.com/" rel="nofollow"&gt;InterviewBit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://codility.com/" rel="nofollow"&gt;Codility&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://intervue.io/" rel="nofollow"&gt;Intervue.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.hackerrank.com/" rel="nofollow"&gt;HackerRank&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://projecteuler.net/" rel="nofollow"&gt;Project Euler&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://spoj.com/" rel="nofollow"&gt;Spoj&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://code.google.com/codejam/contests.html" rel="nofollow"&gt;Google Code Jam practice problems&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.hackerearth.com/" rel="nofollow"&gt;HackerEarth&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.topcoder.com/" rel="nofollow"&gt;Top Coder&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.codechef.com/" rel="nofollow"&gt;CodeChef&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.codewars.com/" rel="nofollow"&gt;Codewars&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://codesignal.com" rel="nofollow"&gt;CodeSignal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://codekata.com/" rel="nofollow"&gt;CodeKata&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.firecode.io/" rel="nofollow"&gt;Firecode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://coderpad.io/" rel="nofollow"&gt;CoderPad&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://exercism.io/" rel="nofollow"&gt;Exercism&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
Guides&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="http://www.geeksforgeeks.org/" rel="nofollow"&gt;GeeksForGeeks&lt;/a&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/Olshansk/interview"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#11-learn-go"&gt;
  &lt;/a&gt;
  11. Learn Go
&lt;/h2&gt;

&lt;p&gt;This repository is geared toward Go beginners. Before your Go developer interview, you can use this repository to review basic concepts and take some quizzes.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/inancgumus"&gt;
        inancgumus
      &lt;/a&gt; / &lt;a href="https://github.com/inancgumus/learngo"&gt;
        learngo
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      1000+ Hand-Crafted Go Examples, Exercises, and Quizzes
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
A Huge Number of Go Examples, Exercises and Quizzes&lt;/h1&gt;
&lt;p&gt;Best way of learning is doing. Inside this repository, you will find thousands of Go examples, exercises and quizzes. I initially created this repository for my &lt;strong&gt;&lt;a href="https://www.udemy.com/course/learn-go-the-complete-bootcamp-course-golang/?referralCode=5CE6EB34E2B1EF4A7D37" rel="nofollow"&gt;Go: Bootcamp Course&lt;/a&gt;&lt;/strong&gt;. Later on, I added a lot of exercises, and I wanted every programmer who is not yet enrolled in the course to learn for free as well. So here it is. Enjoy.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Available in the following languages:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/inancgumus/learngo"&gt;English&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://github.com/inancgumus/learngotranslation/spanish"&gt;Spanish&lt;/a&gt;&lt;/strong&gt; &lt;em&gt;(WIP: Please Contribute)&lt;/em&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
❤️ Help other fellow developers&lt;/h2&gt;
&lt;p&gt;Sharing is free but caring is priceless. &lt;a href="https://twitter.com/intent/tweet?text=I%27m%20learning%20%23golang%20with%201000%2B%20hand-crafted%20examples%2C%20exercises%2C%20and%20quizzes.&amp;amp;url=https://github.com/inancgumus/learngo&amp;amp;via=inancgumus" rel="nofollow"&gt;So, now please click here&lt;/a&gt; and share this repository on Twitter.&lt;/p&gt;
&lt;h2&gt;
Stay in touch&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://twitter.com/inancgumus" rel="nofollow"&gt;Follow me on Twitter&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;I usually tweet Go tips and tricks.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://twitter.com/inancgumus" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8aba8b84e477d1962d203f9867ce54c8394d08ee93c9880e749f43aa425d355a/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f666f6c6c6f772f696e616e6367756d75732e7376673f7374796c653d736f6369616c266c6162656c3d40696e616e6367756d7573" alt="@inancgumus"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://eepurl.com/c4DMNX" rel="nofollow"&gt;Subscribe to my newsletter&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Get updates from me.&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://blog.learngoprogramming.com" rel="nofollow"&gt;Read my blog&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Followed by 5K+ developers, and contains dozens of illustrated articles about Go.&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.youtube.com/channel/UCYxepZhtnFIVRh8t5H_QAdg?view_as=subscriber" rel="nofollow"&gt;Watch my Youtube channel&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
License&lt;/h2&gt;
&lt;p&gt;Whole materials are licensed…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/inancgumus/learngo"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#12-cleancodejavascript"&gt;
  &lt;/a&gt;
  12. clean-code-javascript
&lt;/h2&gt;

&lt;p&gt;This repository serves as a reference for writing readable, reusable, and refactorable JavaScript code. It's based on Robert C. Martin's Clean Code, but it's been tweaked to work with JavaScript.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/ryanmcdermott"&gt;
        ryanmcdermott
      &lt;/a&gt; / &lt;a href="https://github.com/ryanmcdermott/clean-code-javascript"&gt;
        clean-code-javascript
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      🛁 Clean Code concepts adapted for JavaScript
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
clean-code-javascript&lt;/h1&gt;
&lt;h2&gt;
Table of Contents&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://github.com/ryanmcdermott/clean-code-javascript#introduction"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ryanmcdermott/clean-code-javascript#variables"&gt;Variables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ryanmcdermott/clean-code-javascript#functions"&gt;Functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ryanmcdermott/clean-code-javascript#objects-and-data-structures"&gt;Objects and Data Structures&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ryanmcdermott/clean-code-javascript#classes"&gt;Classes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ryanmcdermott/clean-code-javascript#solid"&gt;SOLID&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ryanmcdermott/clean-code-javascript#testing"&gt;Testing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ryanmcdermott/clean-code-javascript#concurrency"&gt;Concurrency&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ryanmcdermott/clean-code-javascript#error-handling"&gt;Error Handling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ryanmcdermott/clean-code-javascript#formatting"&gt;Formatting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ryanmcdermott/clean-code-javascript#comments"&gt;Comments&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ryanmcdermott/clean-code-javascript#translation"&gt;Translation&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;
Introduction&lt;/h2&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/af72fb10accee2e9a59efec2a0b436242fad5bb2a00ca11494e7c759834625cc/68747470733a2f2f7777772e6f736e6577732e636f6d2f696d616765732f636f6d6963732f7774666d2e6a7067"&gt;&lt;img src="https://camo.githubusercontent.com/af72fb10accee2e9a59efec2a0b436242fad5bb2a00ca11494e7c759834625cc/68747470733a2f2f7777772e6f736e6577732e636f6d2f696d616765732f636f6d6963732f7774666d2e6a7067" alt="Humorous image of software quality estimation as a count of how many expletives you shout when reading code"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Software engineering principles, from Robert C. Martin's book
&lt;a href="https://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882" rel="nofollow"&gt;&lt;em&gt;Clean Code&lt;/em&gt;&lt;/a&gt;
adapted for JavaScript. This is not a style guide. It's a guide to producing
&lt;a href="https://github.com/ryanmcdermott/3rs-of-software-architecture"&gt;readable, reusable, and refactorable&lt;/a&gt; software in JavaScript.&lt;/p&gt;
&lt;p&gt;Not every principle herein has to be strictly followed, and even fewer will be
universally agreed upon. These are guidelines and nothing more, but they are
ones codified over many years of collective experience by the authors of
&lt;em&gt;Clean Code&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Our craft of software engineering is just a bit over 50 years old, and we are
still learning a lot. When software architecture is as old as architecture
itself, maybe then we will have harder rules to follow. For now, let these
guidelines serve as a touchstone by which to assess the quality of the
JavaScript…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/ryanmcdermott/clean-code-javascript"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#13-javascript-questions"&gt;
  &lt;/a&gt;
  13. JavaScript Questions
&lt;/h2&gt;

&lt;p&gt;This is a beginner's level of difficulty. This repository provides many multiple-choice JavaScript questions that can be used to brush up on your knowledge of the language.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/lydiahallie"&gt;
        lydiahallie
      &lt;/a&gt; / &lt;a href="https://github.com/lydiahallie/javascript-questions"&gt;
        javascript-questions
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A long list of (advanced) JavaScript questions, and their explanations ✨  
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;div&gt;
  &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/e1a54ddebc870cb971c713b20765f1c2ed328efff836eebe3c2bafccbc12bb0a/68747470733a2f2f696d672e69636f6e73382e636f6d2f636f6c6f722f3334342f6a6176617363726970742e706e67"&gt;&lt;img height="60" src="https://camo.githubusercontent.com/e1a54ddebc870cb971c713b20765f1c2ed328efff836eebe3c2bafccbc12bb0a/68747470733a2f2f696d672e69636f6e73382e636f6d2f636f6c6f722f3334342f6a6176617363726970742e706e67"&gt;&lt;/a&gt;
  &lt;h1&gt;
JavaScript Questions&lt;/h1&gt;

&lt;p&gt;&lt;span&gt;I post multiple choice JavaScript questions on my &lt;a href="https://www.instagram.com/theavocoder" rel="nofollow"&gt;Instagram&lt;/a&gt; &lt;strong&gt;stories&lt;/strong&gt;, which I'll also post here! Last updated: &lt;a href="https://github.com/lydiahallie/javascript-questions#20200612"&gt;&lt;b&gt;June 12th&lt;/b&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;From basic to advanced: test how well you know JavaScript, refresh your knowledge a bit, or prepare for your coding interview! 💪 🚀 I update this repo regularly with new questions. I added the answers in the &lt;strong&gt;collapsed sections&lt;/strong&gt; below the questions, simply click on them to expand it. It's just for fun, good luck! ❤️&lt;/p&gt;
&lt;p&gt;Feel free to reach out to me! 😊 &lt;br&gt;
&lt;a href="https://www.instagram.com/theavocoder" rel="nofollow"&gt;Instagram&lt;/a&gt; || &lt;a href="https://www.twitter.com/lydiahallie" rel="nofollow"&gt;Twitter&lt;/a&gt; || &lt;a href="https://www.linkedin.com/in/lydia-hallie" rel="nofollow"&gt;LinkedIn&lt;/a&gt; || &lt;a href="https://www.lydiahallie.dev" rel="nofollow"&gt;Blog&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Feel free to use them in a project! 😃  I would &lt;em&gt;really&lt;/em&gt; appreciate a reference to this repo, I create the questions and explanations (yes I'm sad lol) and the community helps me so much to maintain and improve it! 💪🏼 Thank you and have fun!&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;b&gt; See 18 Available Translations 🇸🇦🇪🇬🇧🇦🇩🇪🇪🇸🇫🇷🇮🇩&lt;/b&gt;…&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/lydiahallie/javascript-questions"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;I hope you find these resources helpful 😊&lt;/p&gt;

&lt;p&gt;I'd love to connect with you at &lt;a href="https://twitter.com/olanetsoft"&gt;Twitter&lt;/a&gt; | &lt;a href="https://www.linkedin.com/in/olubisi-idris-ayinde-05727b17a/"&gt;LinkedIn&lt;/a&gt; | &lt;a href="https://github.com/Olanetsoft"&gt;GitHub&lt;/a&gt; | &lt;a href="https://idrisolubisi.com/"&gt;Portfolio&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;See you in my next blog article. Take care!!!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Type Aliases vs Interfaces in TypeScript</title>
      <author>Tolu Agboola</author>
      <pubDate>Wed, 29 Sep 2021 14:34:18 +0000</pubDate>
      <link>https://dev.to/toluagboola/type-aliases-vs-interfaces-in-typescript-3ggg</link>
      <guid>https://dev.to/toluagboola/type-aliases-vs-interfaces-in-typescript-3ggg</guid>
      <description>&lt;p&gt;TypeScript provides two ways to create custom types for our data and they include &lt;strong&gt;Type aliases&lt;/strong&gt; and &lt;strong&gt;Interfaces&lt;/strong&gt;. This article will discuss the similarities and differences between them, and the best use cases for each. Let's dive in!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#type-aliases"&gt;
  &lt;/a&gt;
  Type aliases
&lt;/h2&gt;

&lt;p&gt;A &lt;a href="https://devdocs.io/typescript/2/everyday-types#type-aliases"&gt;type alias&lt;/a&gt; is basically a name for any type. Type aliases can be used to represent not only primitives but also object types, union types, tuples and intersections. Let's take a look at some examples:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;userName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;userId&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Union type&lt;/span&gt;
&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;[];&lt;/span&gt;

&lt;span class="c1"&gt;// Object type&lt;/span&gt;
&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;userId&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// We're making use of another type alias here&lt;/span&gt;
    &lt;span class="nl"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;userName&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;gender&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;isWebDev&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;boolean&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;12345&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Tolu&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;gender&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;female&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;isWebDev&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Type aliases are declared with the &lt;code&gt;type&lt;/code&gt; keyword preceding them. Think of them like regular JavaScript variables that are used to represent certain values. Wherever you use a variable name, it is evaluated to the value that it represents. Type aliases work in a similar manner. Wherever you annotate a type by its alias, the alias will evaluate to the type(s) that it stands for. Like variables, you can't declare the same type alias more than once. Aliases are also never inferred by TypeScript, you have to explicitly annotate them.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#interfaces"&gt;
  &lt;/a&gt;
  Interfaces
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://devdocs.io/typescript/2/everyday-types#interfaces"&gt;Interfaces&lt;/a&gt; are another way to name data structures e.g objects. The declaration syntax for interfaces is different from that of type aliases. Let's rewrite the type alias &lt;code&gt;Person&lt;/code&gt; above to an interface declaration:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;userId&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;userName&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;gender&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;isWebDev&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;boolean&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#unions-and-intersections"&gt;
  &lt;/a&gt;
  Unions and Intersections
&lt;/h3&gt;

&lt;p&gt;A union type is formed from two or more other types, and represents a value that can be any one of them. Intersections allow us to combine multiple existing types into a single type that has all the features of those types. Take the following example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;Human&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;speaks&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;boolean&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;Dog&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;barks&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;boolean&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;HumanAndDog&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Human&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;Dog&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Intersection&lt;/span&gt;
&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;HumanOrDogOrBoth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Human&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;Dog&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Union&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;humanAndDog&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;HumanAndDog&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// must have all the properties of Human and Dog&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Sparky&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;speaks&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;barks&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;humanOrDog&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;HumanOrDogOrBoth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// can have the properties of Human or Dog, or both&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Tolu&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;speaks&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Type aliases and interfaces can be combined into one &lt;code&gt;type&lt;/code&gt; using unions or intersections, but cannot be combined into an &lt;code&gt;interface&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tuples"&gt;
  &lt;/a&gt;
  Tuples
&lt;/h3&gt;

&lt;p&gt;Tuples are a way to type arrays with fixed lengths, accounting for every item in said array.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;Mix&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;boolean&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;mix&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Mix&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;banana&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In TypeScript, tuples can be declared with types but not interfaces. However, tuples can be used inside interfaces, like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;Mix&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;boolean&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#declaration-merging"&gt;
  &lt;/a&gt;
  Declaration merging
&lt;/h3&gt;

&lt;p&gt;If you declare one &lt;code&gt;interface&lt;/code&gt; with the same name more than once, TypeScript merges them into one declaration and will treat them as a single interface. This is called &lt;strong&gt;declaration merging&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;Num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;Num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Duplicate identifier Num&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// has the properties of both instances of Person&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Tolu&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Declaration merging only works on interfaces. TypeScript will give an error if you declare the same type alias more than once.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#extends"&gt;
  &lt;/a&gt;
  Extends
&lt;/h3&gt;

&lt;p&gt;Both type aliases and interfaces can be extended. However, the syntax differs. A derived type alias or interface has all the properties and methods of its base type alias or interface, and can also define additional members.&lt;/p&gt;

&lt;p&gt;A type alias can extend another type alias using an ampersand:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;A&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;B&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;A&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Type aliases can also extend interfaces:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;A&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;B&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;A&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Interfaces can extend type aliases with the &lt;code&gt;extends&lt;/code&gt; keyword:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;A&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;B&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;A&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Interfaces can extend other interfaces the same way they extend type aliases. Interfaces can also extend multiple interfaces separated by commas.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;A&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;B&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;z&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;boolean&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;C&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;B&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;breed&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;C&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Sparky&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;z&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#interfaces-extending-classes"&gt;
  &lt;/a&gt;
  Interfaces extending classes
&lt;/h3&gt;

&lt;p&gt;TypeScript allows an interface to extend a &lt;a href="https://devdocs.io/typescript/2/classes"&gt;class&lt;/a&gt;. When this happens, the interface inherits the members of the base class, including the private and public members, but not their implementations. This means that when you create an interface that extends a class with private members, only that class or its subclasses can implement that interface. This allows you to restrict the use of the interface to the class or subclasses of the class that it extends.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Base&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;greetFriend&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Hello!`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Interface extending the Base class&lt;/span&gt;
&lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;Derived&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Base&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;giveGist&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// New class that extends Base class and implements the Derived interface&lt;/span&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;NewClass&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Base&lt;/span&gt; &lt;span class="k"&gt;implements&lt;/span&gt; &lt;span class="nx"&gt;Derived&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;giveGist&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;I saw this the other day...&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;NewClass&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;greetFriend&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// Hello!&lt;/span&gt;
&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;giveGist&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// I saw this the other day...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#implements"&gt;
  &lt;/a&gt;
  Implements
&lt;/h3&gt;

&lt;p&gt;TypeScript supports class-based object-oriented programming. As a result, it allows classes to implement both type aliases and interfaces using the &lt;code&gt;implements&lt;/code&gt; keyword. An error will be thrown if a class fails to correctly implement it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Interface being implemented by a class&lt;/span&gt;
&lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;A&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;SomeClass&lt;/span&gt; &lt;span class="k"&gt;implements&lt;/span&gt; &lt;span class="nx"&gt;A&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Type alias being implemented by a class&lt;/span&gt;
&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;B&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;SomeClass2&lt;/span&gt; &lt;span class="k"&gt;implements&lt;/span&gt; &lt;span class="nx"&gt;B&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A class can also implement multiple interfaces separated by commas e.g &lt;code&gt;class A implements B, C {}&lt;/code&gt;. Note that a class can not implement or extend a type alias that represents a union type:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;C&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="c1"&gt;// ERROR: A class can only implement an object type or intersection of object types with statically known members.&lt;/span&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;SomeClass3&lt;/span&gt; &lt;span class="k"&gt;implements&lt;/span&gt; &lt;span class="nx"&gt;C&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;It’s important to understand that an implements clause is only a check that the class can be treated as the interface type. It doesn’t change the type of the class or its methods at all. A common source of error is to assume that an implements clause will change the class type - it doesn’t!&lt;/em&gt;&lt;br&gt;
— &lt;a href="https://www.typescriptlang.org/docs/handbook/2/classes.html#class-heritage"&gt;TypeScript official docs&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#which-should-i-use"&gt;
  &lt;/a&gt;
  Which should I use?
&lt;/h2&gt;

&lt;p&gt;Type aliases and interfaces are very similar and you can choose freely between them. Personally, I use type aliases when defining primitive, union, intersection, function or tuple types. However, I make use of interfaces when defining object types or to take advantage of declaration merging.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;We have seen the differences and similarities between type aliases and interfaces.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Both type aliases and interfaces can be used to describe the shape of an object or a function signature. But the syntax differs.&lt;/li&gt;
&lt;li&gt;Declaration merging only works on interfaces and not type aliases.&lt;/li&gt;
&lt;li&gt;You cannot declare a union, intersection or tuple with the &lt;code&gt;interface&lt;/code&gt; keyword. However, you can make use of them within an interface.&lt;/li&gt;
&lt;li&gt;Classes can implement both type aliases and interfaces, but not type aliases that represent a union type.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I hope that you have gained something useful from this article. Kindly leave any questions or additional information in the comment section.&lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;

</description>
    </item>
  </channel>
</rss>
