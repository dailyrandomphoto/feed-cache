<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Do you really need a dashboard?</title>
      <author>Helen Anderson</author>
      <pubDate>Thu, 06 May 2021 10:56:00 +0000</pubDate>
      <link>https://dev.to/helenanders26/do-you-really-need-a-dashboard-57o5</link>
      <guid>https://dev.to/helenanders26/do-you-really-need-a-dashboard-57o5</guid>
      <description>&lt;p&gt;As analysts, we’re often asked to quickly produce dashboards or metrics that aim to solve a specific problem. This is more challenging than it sounds as data isn’t always available, in the right format, and sometimes a dashboard isn’t the right way to present insights we do find. &lt;/p&gt;

&lt;p&gt;Scoping sessions help us to understand the underlying problem so we can deliver what the stakeholder needs, and not just what they think they need. If you’ve ever read through a request for data and asked yourself ‘what problem are we actually solving?’, or ‘how are they going to use this data?’ it’s time to run a scoping session.&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;a href="#chapter-1"&gt;Why?&lt;/a&gt;&lt;br&gt;
&lt;a href="#chapter-2"&gt;What?&lt;/a&gt;&lt;br&gt;
&lt;a href="#chapter-3"&gt;Who?&lt;/a&gt;&lt;br&gt;
&lt;a href="#chapter-4"&gt;How?&lt;/a&gt;&lt;br&gt;
&lt;a href="#chapter-5"&gt;When?&lt;/a&gt;&lt;br&gt;
&lt;a href="#chapter-6"&gt;What’s next?&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;




&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why"&gt;
  &lt;/a&gt;
  Why?
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#help-me-understand-the-problem-this-data-will-solve"&gt;
  &lt;/a&gt;
  Help me understand the problem this data will solve?
&lt;/h3&gt;

&lt;p&gt;Open up the conversation by trying to understand why the dashboard or data has been requested. The answer will help give context to the request and how it will help make a decision, optimise a feature, or inform. This context is great for getting to grips with the data request and also appreciating the greater vision our stakeholder has.&lt;/p&gt;




&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what"&gt;
  &lt;/a&gt;
  What?
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#what-is-the-definition-of-done"&gt;
  &lt;/a&gt;
  What is the definition of done?
&lt;/h3&gt;

&lt;p&gt;The answer to this question helps determine what will solve the problem. The effort involved in producing a one-off number, a chart for a slide deck, a csv file they edit themselves, or a dashboard that refreshes each month varies. Teasing out what the stakeholder thinks they need during a face-to-face conversation isn’t about ‘solutionising’ but finding out what the stakeholder’s expectations are.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-data-do-you-have-access-to-already"&gt;
  &lt;/a&gt;
  What data do you have access to already?
&lt;/h3&gt;

&lt;p&gt;Any insights already gained make a great starting point. This doesn’t have to be data or research, any links to relevant documentation, websites, and meeting recordings can be useful while understanding the scope of the request.&lt;/p&gt;

&lt;p&gt;It’s also worth finding out if the stakeholder has any existing reports or dashboards that need to be aligned to. If there is business logic here or an expected range results need to be in getting access to this early is useful.&lt;/p&gt;




&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#who"&gt;
  &lt;/a&gt;
  Who?
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#is-there-anyone-else-working-on-this"&gt;
  &lt;/a&gt;
  Is there anyone else working on this?
&lt;/h3&gt;

&lt;p&gt;Just like finding out if there are existing numbers to align to, it’s important to find out if there is someone else working on producing something similar. Understanding their roles and responsibilities as well as your own means the project can get off on the right foot.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#who-will-need-access-to-the-insights-or-report"&gt;
  &lt;/a&gt;
  Who will need access to the insights or report?
&lt;/h3&gt;

&lt;p&gt;This is important to finalise who needs to see the results, but also who doesn’t. If the final report is commercially sensitive it’s worth getting this information in advance. Security groups may need to be created and the stakeholder can be reminded of their responsibilities for keeping the data secure.&lt;/p&gt;




&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how"&gt;
  &lt;/a&gt;
  How?
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#how-can-we-get-access-to-the-data-we-need"&gt;
  &lt;/a&gt;
  How can we get access to the data we need?
&lt;/h3&gt;

&lt;p&gt;This is relevant when you need access to new data or application-level data that isn’t available in the data warehouse. If you need to engage the help of DBAs or data engineers from other teams you should get this arranged early. No analysis work can begin if you have no data to work with.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-would-you-prefer-results-be-delivered"&gt;
  &lt;/a&gt;
  How would you prefer results be delivered?
&lt;/h3&gt;

&lt;p&gt;Talk through options for a final report at a very high level. This doesn’t mean you need to go into the details but broadly talk through the options to be considered. Discuss the trade-offs between all the possible options and if there are any uncertainties and data gaps you can foresee.&lt;/p&gt;

&lt;p&gt;It’s important to note you shouldn’t come up with a solution based on similar reports done in the past. The key to scoping the requirements is to understand the problem and create a solution, not replicate what’s been done for another project.&lt;/p&gt;




&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#when"&gt;
  &lt;/a&gt;
  When?
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#are-there-any-hard-deadlines-to-meet"&gt;
  &lt;/a&gt;
  Are there any hard deadlines to meet?
&lt;/h3&gt;

&lt;p&gt;This is relevant if you are required to pull numbers for a press release or a board report with a deadline. Knowing this will help you focus on creating a timely solution that maybe isn’t perfectly polished. &lt;/p&gt;

&lt;p&gt;Discuss your confidence in the data only if you have worked with it before and are confident it hasn’t changed. If you haven’t seen the data don’t promise a delivery date. You need to take the time to think through the requirements and see what you are dealing with.&lt;/p&gt;




&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-next"&gt;
  &lt;/a&gt;
  What’s next?
&lt;/h2&gt;

&lt;p&gt;The scoping session process isn’t over at the end of your meeting. Show that you have understood the problem by writing up what you believe the requirements are, the timeframes you are working with, and the next steps for your stakeholder.&lt;/p&gt;

&lt;p&gt;This pattern doesn’t work for every situation so you will need to adapt your questions for each project. The point here is to build relationships and offer help to stakeholders so they gain trust in us and our process. Encouraging our stakeholders to really think about what they need from their data will make for smoother projects both now and in the future.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#read-more"&gt;
  &lt;/a&gt;
  Read more
&lt;/h2&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/helenanders26" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nDlJ2gv9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--HjGs-_-t--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/22532/48443e4d-9075-4869-9df7-122522595b71.jpeg" alt="helenanders26 image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/helenanders26/data-democracy-or-data-anarchy-36d5" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Data democracy or data anarchy?&lt;/h2&gt;
      &lt;h3&gt;Helen Anderson ・ Oct  1 '20 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#database&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#datagovernance&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#culture&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#leadership&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;div class="ltag__link"&gt;
  &lt;a href="/helenanders26" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nDlJ2gv9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--HjGs-_-t--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/22532/48443e4d-9075-4869-9df7-122522595b71.jpeg" alt="helenanders26 image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/helenanders26/shaping-your-team-culture-52bg" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Shaping your team culture&lt;/h2&gt;
      &lt;h3&gt;Helen Anderson ・ Sep  9 '20 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#culture&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#career&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#leadership&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#team&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;





&lt;p&gt;This post originally appeared on &lt;a href="https://helenanderson.co.nz/scoping-sessions/"&gt;helenanderson.co.nz&lt;/a&gt;&lt;/p&gt;

</description>
      <category>dataanalysis</category>
      <category>analytics</category>
      <category>analyst</category>
      <category>howto</category>
    </item>
    <item>
      <title>6 actionable steps to make you more employable as a newbie 💼</title>
      <author>Amelia Vieira Rosado</author>
      <pubDate>Thu, 06 May 2021 10:49:08 +0000</pubDate>
      <link>https://dev.to/technoglot/6-actionable-steps-to-make-you-more-employable-as-a-newbie-5dg1</link>
      <guid>https://dev.to/technoglot/6-actionable-steps-to-make-you-more-employable-as-a-newbie-5dg1</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Photo by &lt;a href="https://unsplash.com/@clemono?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Clem Onojeghuo&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/job-interview?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Hello dear devs (and newbies 🐣)! 👋🏻 Good to see you here!&lt;/p&gt;

&lt;p&gt;Today we will be looking at ways to make yourself more employable as a junior (or newbie). Note that most (if not all) of the tips I'll share here, are based on my personal experience. I do hope that regardless of this, you'll find value in this post.&lt;/p&gt;

&lt;p&gt;Without further ado, let's get into it! 🙌🏻&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Disclaimer 🚨&lt;/strong&gt;: By more employable I mean more "job-ready". This means that you have the right (most in demand) skills and knowledge you need to get hired. By the way, you don't need to be a coding god to get hired, but at least be competent and aware of what the job market demands. Lastly, getting hired in this context means anything from getting your first job, first freelance gig or even an internship or apprenticeship. Hope that makes things clear.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#browse-through-job-listings"&gt;
  &lt;/a&gt;
  Browse through job listings 🔍
&lt;/h1&gt;

&lt;p&gt;What I mean by this is, that you should see what job listings for junior roles look like and how they are presented. When browsing job listings, ask yourself the following questions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What skills are they looking for? &lt;/li&gt;
&lt;li&gt;What tools and technologies should I be acquainted with? &lt;/li&gt;
&lt;li&gt;What skills am I missing from this list and how can I improve? &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;But why does this even matter?&lt;/p&gt;

&lt;p&gt;In my experience this has been crucial and extremely helpful, because I could acquire the skills that I knew were in demand and would ultimately make me more employable. For example, I noticed that many job listings asked for knowledge of agile methodologies (especially Scrum). Therefore I made sure to pick up at least the basics about this agile methodology. &lt;/p&gt;

&lt;p&gt;Another example is version control. After looking through various listings, I picked up a pattern: knowledge of version control (especially in Git) is highly valued by companies out there. And rightfully so! Any respectable company (or individual in this space) should be familiar and use version control in their projects. Period.&lt;/p&gt;

&lt;p&gt;So use the wisdom you gain from dissecting job listings to your advantage and make sure that what you learn, aligns well with the demands of the real-world.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;💡 P.S.: Some websites you can use to browse job listings include, but are not limited to: &lt;a href="https://www.linkedin.com/"&gt;LinkedIn&lt;/a&gt;, &lt;a href="https://www.glassdoor.com/index.htm"&gt;Glassdoor&lt;/a&gt; and &lt;a href="https://www.indeed.com/"&gt;Indeed&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#attend-networking-events"&gt;
  &lt;/a&gt;
  Attend networking events 🍸
&lt;/h1&gt;

&lt;p&gt;Don't underestimate the power of this one! By networking events I mean anything from conferences to meetups, and even hackathons. The key here is &lt;strong&gt;networking&lt;/strong&gt;. Put yourself out there. However, as we all know, that has gotten increasingly difficult recently. Face-to-face meetups and conferences are all a thing of the past; covid killed 'em all. Now, while we may mourn about that, we can rejoice because we took the party online instead! 🥳&lt;/p&gt;

&lt;p&gt;I know, I know. It is NOT the same, but it still counts. I personally lost count of how many conferences and meetups I attended in the past 3 years or so (those were the days 🤪). I literally attended every last (tech) event on the island! At one point people even started asking me: "Have we met before? Haven't I seen you somewhere before?" &lt;/p&gt;

&lt;p&gt;Despite not being the most bubbly person in the room and not having the best networking skills, I was still able to leave an impression by merely attending. (I give all the merit to my curly hair. It's basically my business card! 😂)&lt;/p&gt;

&lt;p&gt;So put your game face on and go network with others! It will help you somewhere down the line.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;💡 P.S. being young and a student is just about enough to get you noticed by others. Don't hide the fact that you are a student though; people can just tell you are one! 😂&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#work-on-your-portfolio"&gt;
  &lt;/a&gt;
  Work on your portfolio 💻
&lt;/h1&gt;

&lt;p&gt;This one is pretty obvious, I know. However, it doesn't hurt to give a friendly reminder, right? 😉&lt;/p&gt;

&lt;p&gt;Now, I'm not one to talk, since I have no portfolio website and all (and that's fine too), but let me say the following: focus on building projects and forget about certificates and perfect scores. Yep, I said it! &lt;/p&gt;

&lt;p&gt;Now, don't get me wrong; certificates matter and are quite desirable in some instances. However, as a junior you should be far more concerned with building tangible things that showcase your skills instead of hoarding (digital) certificates. You can get all these shiny certificates as you progress through your career. But for starters: BUILD 👏🏻 THAT 👏🏻 PORTFOLIO 👏🏻!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;💡 P.S.: Make your portfolio your best work yet. Pay attention to details, accessibility and responsiveness (among another zillion things like performance and such). Don't go claiming you make responsive websites when your own portfolio looks like 💩 on mobile. Just saying...&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#create-a-linkedin-profile"&gt;
  &lt;/a&gt;
  Create a LinkedIn profile 💼
&lt;/h1&gt;

&lt;p&gt;Yep. Despite being the most boring (and at times toxic) social network out there, LinkedIn has its value. I think of it as an easy way to keep my resume up to date without having to step inside of Microsoft Word all the time. (Fun fact: LinkedIn is owned by Microsoft...). &lt;/p&gt;

&lt;p&gt;But why LinkedIn?&lt;/p&gt;

&lt;p&gt;In a previous point I mentioned networking, right? Well guess what? Most working professionals have a LinkedIn profile, hence it is one of the top ways of keeping in touch with connections you made at conferences and the like. (There's Twitter too, but that's a topic for another time.)&lt;/p&gt;

&lt;p&gt;In addition to this, LinkedIn makes for a pretty decent job hunting tool (yet it is not the only one, as you may know). You decide how active you want to be on LinkedIn, but if anything, try to keep in touch with the folks that interest you most. And don't be afraid to ask them to introduce you to others in their network or to keep you posted on job openings at their company.&lt;/p&gt;

&lt;p&gt;Many folks land jobs on LinkedIn via referrals, so keep your friends close! (and you enemies closer? 😈 JK!)&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#get-involved"&gt;
  &lt;/a&gt;
  Get involved ✨
&lt;/h1&gt;

&lt;p&gt;The tech space is arguably overflowing with opportunities. Staying in the loop is tough, yet crucial. Try to get involved with the community early on and build an online presence while you're at it. Also consider contributing to open-source projects or otherwise. Open-source projects are a good way to expand your skills and get some "work experience". &lt;/p&gt;

&lt;p&gt;Another great way to get involved is to co-organize events and workshops (even if online). I did a little of that in the past and it was quite helpful in landing a spot at the company I'm currently at. The events and workshops my peers and I organized were sponsored by them, so we had something in common! 😁 (I live on an island the size of a peanut (that's not true, but it is small), everyone knows each other around here. 😂 Keep in mind that this may work out differently for you.)&lt;/p&gt;

&lt;p&gt;Don't be shy, put yourself out there! Add value in the best way you can. It doesn't have to be related to programming in order to matter.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#dont-forget-about-your-soft-skills"&gt;
  &lt;/a&gt;
  Don't forget about your soft skills 💪🏻
&lt;/h1&gt;

&lt;p&gt;The importance of soft skills is immensely overlooked by some. Let me break it to you: you need to AT THE VERY LEAST know how to talk to others. Mind you, talking and communicating are two different things. 😬 &lt;/p&gt;

&lt;p&gt;The point here is: technical skills are great, but soft skills are even better! Cherry on top: many job listings out there list these kind of non-technical skills (a.k.a. interpersonal skills). Why do you think they do that? Well, because they matter! Some of the most commonly listed soft skills include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Communication skills (verbal AND written),&lt;/li&gt;
&lt;li&gt;Teamwork and collaboration,&lt;/li&gt;
&lt;li&gt;Attention to detail,&lt;/li&gt;
&lt;li&gt;Critical thinking,&lt;/li&gt;
&lt;li&gt;Adaptability,&lt;/li&gt;
&lt;li&gt;Eagerness to learn and many others.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Make sure your soft skills are somewhere near as good as your technical skills. It will make a world of a difference in your career! &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#the-wrapup"&gt;
  &lt;/a&gt;
  The wrap-up 🤔
&lt;/h1&gt;

&lt;p&gt;That's all folks! 🐷 I hope you learned something from this post and that you got some valuable tips you can put to use right away! Drop your questions and/or thoughts in the comments below 👇🏻 I love to read 'em all!&lt;/p&gt;


&lt;p&gt;Yours truly signing off... See you soon! 👩🏻‍💻👨🏻‍💻&lt;br&gt;&lt;br&gt;
&lt;/p&gt;

&lt;br&gt;&lt;br&gt;
Still here? Catch me on &lt;a href="https://twitter.com/technoglot"&gt;Twitter&lt;/a&gt; or find me &lt;a href="https://linktr.ee/technoglot"&gt;elsewhere&lt;/a&gt;! If you like my blogs and are feeling generous, kindly consider to 👇🏻&lt;br&gt;&lt;br&gt;
&lt;a href="https://www.buymeacoffee.com/technoglot"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iQYkOYbQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i9olbzsmrxb3tksl6iqf.png"&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;
P.S.: Heard the great news yet? My Redbubble shop is LIVE! Feel free to take a look 😊&lt;br&gt;&lt;br&gt;
&lt;a href="https://technoglot.redbubble.com"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yMjaGyvZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zi84k7rjhgyryfpr8c1a.png"&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cftknAn3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8iwes672pxpljtq7z6oy.png" alt="technoglot footer banner"&gt;

</description>
      <category>codenewbie</category>
      <category>career</category>
      <category>programming</category>
      <category>motivation</category>
    </item>
    <item>
      <title>6 AWS Lambda Cost Optimization Strategies that Work</title>
      <author>Taavi Rehemägi</author>
      <pubDate>Thu, 06 May 2021 10:42:29 +0000</pubDate>
      <link>https://dev.to/dashbird/6-aws-lambda-cost-optimization-strategies-that-work-3pi8</link>
      <guid>https://dev.to/dashbird/6-aws-lambda-cost-optimization-strategies-that-work-3pi8</guid>
      <description>&lt;p&gt;In 2021 it's common practice for businesses to use a pay-as-you-go/use pricing model. It's no different with Amazon. It's also the primary reason why this article is such an &lt;strong&gt;important read for all those looking to reduce their AWS Lambda costs&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;In this article, we will go over &lt;strong&gt;six actionable strategies to optimize the cost&lt;/strong&gt; relating to our AWS Lambda usage.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-aws-lambda-cost-optimization"&gt;
  &lt;/a&gt;
  What is AWS Lambda Cost Optimization?
&lt;/h2&gt;

&lt;p&gt;One of the &lt;a href="https://dashbird.io/blog/business-benefits-of-serverless/"&gt;main reasons&lt;/a&gt; for choosing to move into the cloud is the &lt;strong&gt;ability to reduce costs&lt;/strong&gt;. It's essential to &lt;strong&gt;optimize how much you spend, so you only pay for what you need and only when you need it&lt;/strong&gt;. Optimizing costs will help your organization &lt;strong&gt;get the most out of your investment&lt;/strong&gt;, helping &lt;strong&gt;meet demand&lt;/strong&gt; and &lt;strong&gt;capacity&lt;/strong&gt; while using the most economically useful options that AWS has to offer.&lt;/p&gt;

&lt;p&gt;Cost optimization &lt;strong&gt;allows you to decide how much, when, and in which cases you'll pay for the service&lt;/strong&gt; provided to you. AWS will allow you to easily pick the right size for your service and leverage memory size based on how much you need.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;For a better overview, you can use tools like Dashbird &lt;a href="https://dashbird.io/aws-lambda-monitoring/"&gt;AWS Lambda function cost tracking tool&lt;/a&gt; that will allow you to monitor the cost of your Lambdas in real-time with detailed insights. That way, you'll always be on top of how much you're spending on this service.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#1-caching-lambda-responses"&gt;
  &lt;/a&gt;
  1. Caching Lambda Responses
&lt;/h2&gt;

&lt;p&gt;For some Lambda functions, like the ones called from an &lt;a href="https://dashbird.io/knowledge-base/api-gateway/what-is-aws-api-gateway/"&gt;API Gateway&lt;/a&gt; event, AppSync, or Lambda@Edge functions called from CloudFront, you can cache responses. &lt;strong&gt;A function that isn't called doesn't cost you any money&lt;/strong&gt;, so make sure you don't hammer your Lambda function if its responses don't change that often.&lt;/p&gt;

&lt;p&gt;Lambda@Edge functions are costlier than regular Lambda functions, but &lt;strong&gt;if you only call them once every few minutes and deliver the cached response&lt;/strong&gt; to thousands of users per second, you can significantly reduce your bill.&lt;/p&gt;

&lt;p&gt;One benefit of caching is &lt;strong&gt;cheaper responses&lt;/strong&gt; because you don't pay for Lambda. Another benefit is that you'll see &lt;strong&gt;faster responses&lt;/strong&gt; because you remove the extra way the request would have to travel if Lambda was involved. &lt;/p&gt;

&lt;p&gt;In the business sense, this could also uplift revenue by providing a better experience for the end-user. Lambda cost optimization means you &lt;strong&gt;not only reduce costs, but implementations could end up driving more revenue&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;To enable caching for API Gateway deployed with AWS SAM, &lt;strong&gt;you can use the MethodSettings attribute&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eJ6mY4Ws--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8wxn9qtitdgikpjp5kkn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eJ6mY4Ws--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8wxn9qtitdgikpjp5kkn.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can use the * wildcard in HttpMethod and ResourcePath to configure caching for multiple routes in your API.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-minimize-lambda-usage"&gt;
  &lt;/a&gt;
  2. Minimize Lambda Usage
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Don't use Lambda functions for simple transforms&lt;/strong&gt;. If you're building an API with AppSync or API Gateway this is often the case. You implemented authentication Cognito and custom authorizers in your API Gateway and &lt;strong&gt;now just want to push data directly&lt;/strong&gt; to upstream services like DynamoDB or SQS.&lt;/p&gt;

&lt;p&gt;API Gateway supports the Velocity Templating Language, a simple programming language that can transform the JSON objects of API Gateway requests. &lt;strong&gt;They can't do everything&lt;/strong&gt;, but they neither have &lt;a href="https://dashbird.io/knowledge-base/aws-lambda/cold-starts/"&gt;cold starts&lt;/a&gt; nor incur extra costs as Lambda functions do.&lt;/p&gt;

&lt;p&gt;Keep in mind that optimizing with VTL is not too straightforward, but it can be &lt;strong&gt;worth your time if you have frequently called endpoints that don't require the full power of Lambda&lt;/strong&gt;. Richard Boyd, a developer relations engineer at AWS, &lt;a href="https://richardhboyd.com/post/mastering-api-gateway-in-105-easy-steps_ByIgiAUPV"&gt;wrote a bit on that topic&lt;/a&gt;. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-building-small-lambda-functions"&gt;
  &lt;/a&gt;
  3. Building Small Lambda Functions
&lt;/h2&gt;

&lt;p&gt;The goal of all your AWS Lambda function is t*&lt;em&gt;o be small and purpose-built&lt;/em&gt;*. If a Lambda function only does one thing, you only have to optimize this specific use case. When you end up with multiple use-cases for one function, you can end up making compromises to satisfy all of them.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Function size is also part of the costs.&lt;/strong&gt; The Lambda runtime has to get your function's code from S3 or a Docker image registry on every cold start. Downloading one gigabyte takes Lambda much more time than downloading one megabyte. &lt;strong&gt;This is the waiting time you pay for&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;Since 2021 Lambda functions are billed in one millisecond increments, you can now &lt;strong&gt;save money for every millisecond your function runs faster&lt;/strong&gt;. So getting your Lambda code down to the absolute basics can increase your savings for functions that run very often.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-never-call-lambda-from-lambda"&gt;
  &lt;/a&gt;
  4. Never Call Lambda from Lambda
&lt;/h2&gt;

&lt;p&gt;Again, this is &lt;strong&gt;most important for synchronous Lambda calls&lt;/strong&gt;, which happen with API Gateway.&lt;/p&gt;

&lt;p&gt;If you call a Lambda function directly from within a Lambda function, you pay for both of them. &lt;strong&gt;The first one will wait for the second one to finish, and you'll be paying for the waiting time&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;If you need to call multiple Lambda functions, &lt;strong&gt;try to finish the synchronous API Gateway Lambda function early&lt;/strong&gt;, and start the process of running the other functions with some extra service.&lt;/p&gt;

&lt;p&gt;AWS has multiple queuing services to offer. SQS, SNS, Kinesis, and &lt;a href="https://dashbird.io/blog/ultimate-guide-aws-step-functions/"&gt;Step Functions&lt;/a&gt; are a few of them. When the heavy task is done, you can notify the clients with WebSockets or email.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-choosing-the-ideal-memory-configuration"&gt;
  &lt;/a&gt;
  5. Choosing the Ideal Memory Configuration
&lt;/h2&gt;

&lt;p&gt;After you made sure you only call functions when needed and kept them all small and purpose-built, you're enabled to control your AWS cost by following a few straightforward steps. &lt;/p&gt;

&lt;p&gt;First off, we'll mention &lt;strong&gt;choosing the right size,&lt;/strong&gt; which means that with AWS, you can set the memory, and in turn CPU, of your AWS Lambda functions to meet precisely the necessary capacities that you need.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;There's no need to over-provision or make compromises&lt;/strong&gt;. Adapt your services to address the actual business needs at any given time, without any penalties or hidden fees whatsoever. AWS allows you to choose between services that meet your criteria, and while your demands change, it is &lt;strong&gt;quite easy to switch to the service option which will cover your new requirements&lt;/strong&gt;. AWS also allows you to run multiple service options simultaneously, helping you reduce costs while maintaining optimal performance at all times.&lt;/p&gt;

&lt;p&gt;Another way would be utilizing Step-Functions to find the optimal memory capacity for your functions. Here's an &lt;a href="https://github.com/alexcasalboni/aws-lambda-power-tuning"&gt;open-source module&lt;/a&gt; built by Sr. Tech. Evangelist Alex Casalboni of AWS.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-cost-reduction-with-observability"&gt;
  &lt;/a&gt;
  6. Cost Reduction with Observability
&lt;/h2&gt;

&lt;p&gt;With a proper &lt;a href="https://dashbird.io/serverless-observability/"&gt;serverless observability system&lt;/a&gt; in place, your company will for sure minimize the risks that inherently come with serverless architectures. You will also have a way to manage the budget predictably, in a way that complies with policies that require commitments on a long-term basis.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9866ALZ3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://mk0dashbirdioprthk8x.kinstacdn.com/wp-content/uploads/2017/11/Dashbird-single-function-view.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9866ALZ3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://mk0dashbirdioprthk8x.kinstacdn.com/wp-content/uploads/2017/11/Dashbird-single-function-view.gif" alt="Dashbird single function view"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Dashbird single function view&lt;/p&gt;

&lt;p&gt;This would include &lt;strong&gt;monitoring, tracking, analyzing, and alerting&lt;/strong&gt; your service usage. With a trusted advisor, you can provision your resources by keeping up with the best possible practices to improve system performance and reliability.&lt;/p&gt;

&lt;p&gt;It will also increase security and give you opportunities to save some money. CloudWatch is an option that (in case you decide to turn off non-production functions) will allow you to match increases or reductions in demand. It will collect and track the metrics, monitor log files, and automatically respond to any changes made within your AWS resources.&lt;/p&gt;

&lt;p&gt;But it doesn't give you full insight into your system or instant alerts when things break. For that, you need a tool that will make sure to alert you instantly when your system is misbehaving. Dashbird is such a tool that gives you &lt;a href="https://dashbird.io/aws-lambda-monitoring/"&gt;insights into your Lambda functions&lt;/a&gt;, all in one place.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#more-opportunities"&gt;
  &lt;/a&gt;
  More Opportunities
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CaPqzhmj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mk0dashbirdioprthk8x.kinstacdn.com/wp-content/uploads/2018/09/cost-view.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CaPqzhmj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mk0dashbirdioprthk8x.kinstacdn.com/wp-content/uploads/2018/09/cost-view.png" alt="lambda cost view"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There are other ways to reduce cost and optimize it for your own needs. &lt;a href="https://dashbird.io/"&gt;Dashbird&lt;/a&gt;'s Cost Explorer can help you with analyzing your usage and cost. It is a magnificent tool that allows you to use a set of default reports to identify cost drivers and usage trends. Dashbird's own cost tracking system, which you can see on an account-wide scale or per-function basis, also gives you a real-time presentation of how much your services are costing you.&lt;/p&gt;

&lt;p&gt;There are various choices to make and strategies to reduce costs and optimize them for your own needs. The essential thing you need to realize is discovering which of the given approaches best suits your personal needs. After finding out what you need, it'll be much easier to choose a more personalized way to reduce costs. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://dashbird.io/serverless-observability/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wyEQewN5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mk0dashbirdioprthk8x.kinstacdn.com/wp-content/uploads/2020/07/observability-1024x190.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Further reading:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dashbird.io/blog/lambda-metrics-monitoring-what-matters/"&gt;AWS Lambda metrics that you should be monitoring&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dashbird.io/blog/optimizing-aws-lambda-for-production/"&gt;4 tips for tuning AWS Lambda for production&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dashbird.io/blog/saving-money-aws-lambda/"&gt;Quick ways to cut cost on your AWS Lambda&lt;/a&gt;&lt;/p&gt;

</description>
      <category>aws</category>
      <category>serverless</category>
      <category>devops</category>
      <category>cloud</category>
    </item>
    <item>
      <title>ACME - The Accordion Web Component in 187 Bytes</title>
      <author>Danny Engelman</author>
      <pubDate>Thu, 06 May 2021 10:40:22 +0000</pubDate>
      <link>https://dev.to/dannyengelman/acme-the-accordion-web-component-in-187-bytes-47ah</link>
      <guid>https://dev.to/dannyengelman/acme-the-accordion-web-component-in-187-bytes-47ah</guid>
      <description>&lt;h3&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  TL;DR;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Do &lt;strong&gt;not &lt;em&gt;unlearn&lt;/em&gt;&lt;/strong&gt; HTML when you build Web Components&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#if-you-have-a-hammer"&gt;
  &lt;/a&gt;
  &lt;em&gt;If you have a hammer,&lt;/em&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#everything-starts-to-look-like-a-nail"&gt;
  &lt;/a&gt;
  &lt;em&gt;everything starts to look like a nail&lt;/em&gt;
&lt;/h3&gt;

&lt;p&gt;Now we got this great technology &lt;strong&gt;Web Components&lt;/strong&gt;, it is easy to get excited and use &lt;em&gt;Custom Elements&lt;/em&gt; for &lt;strong&gt;everything&lt;/strong&gt; in your &lt;em&gt;Design System&lt;/em&gt;:&lt;/p&gt;

&lt;p&gt;Here are some Accordion Components from ACME Design Systems:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;ACME-accordion&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;ACME-accordion-item&lt;/span&gt; &lt;span class="na"&gt;label=&lt;/span&gt;&lt;span class="s"&gt;"..."&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"Content 1"&lt;/span&gt; &lt;span class="na"&gt;expanded&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/ACME-accordion-item&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;ACME-accordion-item&lt;/span&gt; &lt;span class="na"&gt;label=&lt;/span&gt;&lt;span class="s"&gt;"..."&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"Content 2"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/ACME-accordion-item&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/ACME-accordion&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;ACME-accordion&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;ACME-accordion-panel&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;slot=&lt;/span&gt;&lt;span class="s"&gt;"summary"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;...&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;...&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/ACME-accordion-panel&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;ACME-accordion-panel&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;slot=&lt;/span&gt;&lt;span class="s"&gt;"summary"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;...&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;...&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/ACME-accordion-panel&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/ACME-accordion&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;ACME-accordion&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;h3&lt;/span&gt; &lt;span class="na"&gt;slot=&lt;/span&gt;&lt;span class="s"&gt;"invoker"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;button&amp;gt;&lt;/span&gt;...&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&amp;lt;/h3&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;slot=&lt;/span&gt;&lt;span class="s"&gt;"content"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;...&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;h3&lt;/span&gt; &lt;span class="na"&gt;slot=&lt;/span&gt;&lt;span class="s"&gt;"invoker"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;button&amp;gt;&lt;/span&gt;...&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&amp;lt;/h3&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;slot=&lt;/span&gt;&lt;span class="s"&gt;"content"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;...&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/ACME-accordion&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#good-old-html"&gt;
  &lt;/a&gt;
  Good, old, HTML
&lt;/h2&gt;

&lt;p&gt;The Open/Close functionality &lt;strong&gt;&lt;em&gt;is&lt;/em&gt;&lt;/strong&gt; available in &lt;strong&gt;standard HTML&lt;/strong&gt; with the &lt;code&gt;&amp;lt;details&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;summary&amp;gt;&lt;/code&gt; elements.&lt;/p&gt;

&lt;p&gt;So a &lt;strong&gt;7&lt;/strong&gt; line &lt;em&gt;vanilla&lt;/em&gt; Web Component:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;customElements&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;details-accordion&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;HTMLElement&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="nx"&gt;connectedCallback&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onclick&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;evt&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[...&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;detail&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;evt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ctrlKey&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;detail&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toggleAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;open&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;evt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nx"&gt;detail&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;&amp;lt;details&amp;gt;&lt;/code&gt; &lt;strong&gt;itself&lt;/strong&gt; also has a click handler and will open/close!&lt;/li&gt;
&lt;li&gt;For every click on &lt;code&gt;&amp;lt;details-accordion&amp;gt;&lt;/code&gt; &lt;strong&gt;all children&lt;/strong&gt; are toggled&lt;/li&gt;
&lt;li&gt;using &lt;code&gt;.map&lt;/code&gt; instead of &lt;code&gt;.forEach&lt;/code&gt; saves 4 bytes&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Can turn:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;details-accordion&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;details&lt;/span&gt; &lt;span class="na"&gt;open&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;...&lt;span class="nt"&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        ...
    &lt;span class="nt"&gt;&amp;lt;/details&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;details&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;...&lt;span class="nt"&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        ...
    &lt;span class="nt"&gt;&amp;lt;/details&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;details&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;...&lt;span class="nt"&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
        ...
    &lt;span class="nt"&gt;&amp;lt;/details&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/details-accordion&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Into a accordion:&lt;/p&gt;

&lt;p&gt;(hold down the Ctrl key to open multiple &lt;code&gt;&amp;lt;details&amp;gt;&lt;/code&gt;)&lt;/p&gt;

&lt;p&gt;&lt;iframe src="https://jsfiddle.net/WebComponents/d0sh9q7f/embedded/result,html,js,css//dark" width="100%" height="600"&gt;
&lt;/iframe&gt;
&lt;/p&gt;



&lt;br&gt;
&lt;br&gt;

&lt;p&gt;&lt;iframe src="https://jsfiddle.net/WebComponents/62f1eLay/embedded/result,html,js//dark" width="100%" height="600"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>webcomponents</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>html</category>
    </item>
    <item>
      <title>Solution: Convert Sorted List to Binary Search Tree</title>
      <author>seanpgallivan</author>
      <pubDate>Thu, 06 May 2021 10:36:49 +0000</pubDate>
      <link>https://dev.to/seanpgallivan/solution-convert-sorted-list-to-binary-search-tree-2i0e</link>
      <guid>https://dev.to/seanpgallivan/solution-convert-sorted-list-to-binary-search-tree-2i0e</guid>
      <description>&lt;p&gt;&lt;em&gt;This is part of a series of Leetcode solution explanations (&lt;a href="https://dev.to/seanpgallivan/leetcode-solutions-index-57fl"&gt;index&lt;/a&gt;). If you liked this solution or found it useful,&lt;/em&gt; &lt;strong&gt;&lt;em&gt;please like&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;this post and/or&lt;/em&gt; &lt;strong&gt;&lt;em&gt;upvote&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;&lt;a href="https://leetcode.com/problems/convert-sorted-list-to-binary-search-tree/discuss/1194228"&gt;my solution post on Leetcode's forums&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#leetcode-problem-109-medium-convert-sorted-list-to-binary-search-tree"&gt;
  &lt;/a&gt;
  &lt;a href="https://leetcode.com/problems/convert-sorted-list-to-binary-search-tree/"&gt;Leetcode Problem #109 (&lt;em&gt;Medium&lt;/em&gt;): Convert Sorted List to Binary Search Tree&lt;/a&gt;
&lt;/h4&gt;




&lt;h4&gt;
  &lt;a href="#description"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Description:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt; || &lt;em&gt;Code&lt;/em&gt;: &lt;a href="#javascript-code"&gt;&lt;em&gt;JavaScript&lt;/em&gt;&lt;/a&gt; | &lt;a href="#python-code"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; | &lt;a href="#java-code"&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt; | &lt;a href="#c-code"&gt;&lt;em&gt;C++&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Given the &lt;code&gt;head&lt;/code&gt; of a singly linked list where elements are &lt;strong&gt;sorted in ascending order&lt;/strong&gt;, convert it to a height balanced BST.&lt;/p&gt;

&lt;p&gt;For this problem, a height-balanced binary tree is defined as a binary tree in which the depth of the two subtrees of every node never differ by more than 1.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#examples"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Examples:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 1:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;head = [-10,-3,0,5,9]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;[0,-3,9,-10,null,5]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Explanation:&lt;/td&gt;
&lt;td&gt;One possible answer is [0,-3,9,-10,null,5], which represents the shown height balanced BST.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Visual:&lt;/td&gt;
&lt;td&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hjWM-NSY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://assets.leetcode.com/uploads/2020/08/17/linked.jpg" alt="Example 1 Visual"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 2:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;head = []&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;[]&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 3:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;head = [0]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;[0]&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 4:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;head = [1,3]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;[3,1]&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#constraints"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Constraints:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;The number of nodes in head is in the range &lt;code&gt;[0, 2 * 10^4]&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-10^5 &amp;lt;= Node.val &amp;lt;= 10^5&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#idea"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Idea:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;em&gt;Code&lt;/em&gt;: &lt;a href="#javascript-code"&gt;&lt;em&gt;JavaScript&lt;/em&gt;&lt;/a&gt; | &lt;a href="#python-code"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; | &lt;a href="#java-code"&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt; | &lt;a href="#c-code"&gt;&lt;em&gt;C++&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;In order to build a &lt;strong&gt;height-balanced binary tree&lt;/strong&gt;, we need to ensure that roughly half of the total number of nodes are on either side of the root, and the only way to know what half of the total number of nodes is requires finding the total number of nodes first.&lt;/p&gt;

&lt;p&gt;With this in mind, one easy solution would be to convert the linked list to an array, then we have handy access not only to the total length of the array, but also index-access to the node values, as well. At that point, we could define a &lt;strong&gt;recursive&lt;/strong&gt; helper to build a tree from the middle node, recursively calling itself to build subtrees from the nodes on the left and right of the middle node. This option would take an &lt;strong&gt;extra O(N) space&lt;/strong&gt; to complete.&lt;/p&gt;

&lt;p&gt;Should we not want to use up that much extra space, we could instead keep the linked list and lose the index-access nature of the array, using &lt;strong&gt;Floyd's Cycle Detection Algorithm&lt;/strong&gt; to easily find the middle node on each recursion step. This would, however, require iterating through parts of the linked list repeatedly, driving the &lt;strong&gt;time complexity&lt;/strong&gt; from &lt;strong&gt;O(N)&lt;/strong&gt; to &lt;strong&gt;O(N log N)&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;But we can do even better: We can complete this problem in &lt;strong&gt;O(N) time&lt;/strong&gt; with only &lt;strong&gt;O(log N) extra space&lt;/strong&gt; (in excess of the output space).&lt;/p&gt;

&lt;p&gt;First, we'll have to iterate once through the linked list to count the total number of nodes (&lt;strong&gt;count&lt;/strong&gt;). Then, we can define our recursive helper (&lt;strong&gt;treeify()&lt;/strong&gt;)using index numbers as our arguments. Even though we won't be able to access the listnodes directly by index number, we can take advantage of an &lt;strong&gt;inorder tree traversal&lt;/strong&gt; to force our access to go in iterative order.&lt;/p&gt;

&lt;p&gt;We'll need to have our list pointer (&lt;strong&gt;curr&lt;/strong&gt;) have global scope in order to update properly via recursion. In an inorder traversal, we recursively process the left subtree, then process the middle node, then recursively process the right subtree. For this solution, we'll just need to make sure we move &lt;strong&gt;curr&lt;/strong&gt; to &lt;strong&gt;curr.next&lt;/strong&gt; at the end of processing the middle node.&lt;/p&gt;

&lt;p&gt;We can then &lt;strong&gt;return&lt;/strong&gt; the full tree built by our recursive helper.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Time Complexity: O(N)&lt;/strong&gt; where &lt;strong&gt;N&lt;/strong&gt; is the length of the linked list&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Space Complexity: O(log N)&lt;/strong&gt; in excess of the space needed for the input/output, due to the recursion stack&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h4&gt;
  &lt;a href="#implementation"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Implementation:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;For Python, we can store our list index pointer (&lt;strong&gt;curr&lt;/strong&gt;) in a list to give it global scope so that it will update properly.&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#javascript-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Javascript Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;sortedListToBST&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;head&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;curr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;head&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;curr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;curr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;curr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;treeify&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;mid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;node&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;TreeNode&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;left&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;treeify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;mid&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;curr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;curr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;curr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;next&lt;/span&gt;
        &lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;right&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;treeify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;mid&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;node&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;curr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;head&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;treeify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#python-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Python Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;sortedListToBST&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ListNode&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;TreeNode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;curr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;curr&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;curr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;curr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;next&lt;/span&gt;
            &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;treeify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;TreeNode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
            &lt;span class="n"&gt;mid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;TreeNode&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;left&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;treeify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mid&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;curr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;curr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;curr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nb"&gt;next&lt;/span&gt;
            &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;right&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;treeify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mid&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;
        &lt;span class="n"&gt;curr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;treeify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#java-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Java Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nc"&gt;ListNode&lt;/span&gt; &lt;span class="n"&gt;curr&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nc"&gt;TreeNode&lt;/span&gt; &lt;span class="nf"&gt;sortedListToBST&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;ListNode&lt;/span&gt; &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;curr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;curr&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;curr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;curr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;next&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="o"&gt;++;&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;curr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;treeify&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="nc"&gt;TreeNode&lt;/span&gt; &lt;span class="nf"&gt;treeify&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;mid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="nc"&gt;TreeNode&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;TreeNode&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;left&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;treeify&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mid&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;val&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;curr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;val&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;curr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;curr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;next&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;right&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;treeify&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mid&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#c-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;C++ Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;private:&lt;/span&gt;
    &lt;span class="n"&gt;ListNode&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;curr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;TreeNode&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;treeify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;nullptr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;mid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;TreeNode&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;TreeNode&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;left&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;treeify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mid&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;val&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;curr&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;curr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;curr&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;right&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;treeify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mid&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nl"&gt;public:&lt;/span&gt;
    &lt;span class="n"&gt;TreeNode&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;sortedListToBST&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ListNode&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;curr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;curr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;curr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;curr&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;curr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;treeify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>algorithms</category>
      <category>javascript</category>
      <category>java</category>
      <category>python</category>
    </item>
    <item>
      <title>5 Top Business Risks in Offshore Software Outsourcing and How to Avoid Them?</title>
      <author>Best Digital Trendz</author>
      <pubDate>Thu, 06 May 2021 10:20:57 +0000</pubDate>
      <link>https://dev.to/best_digital_trendz/5-top-business-risks-in-offshore-software-outsourcing-and-how-to-avoid-them-1ha0</link>
      <guid>https://dev.to/best_digital_trendz/5-top-business-risks-in-offshore-software-outsourcing-and-how-to-avoid-them-1ha0</guid>
      <description>&lt;p&gt;In the present age, Risk management is creating a vital role in businesses. you can be called that all business depends on the risk. because one wrong step and your business go down in the drain. outsource is a good route that enterprises use to help them scale their businesses. The outsourcing development company offers many advantages to businesses such as cost-cutting and give to IT professionals and build software solutions for business. Before outsourcing your and project and business, you may need to these critical risk factors.&lt;/p&gt;

&lt;p&gt;Risks are an essential part of each business. Before outsourcing your business, We share some critical risk factors for making your decision better.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Communication Gap&lt;/strong&gt;&lt;br&gt;
Communication is the process of exchanges the piece of information and knowledge. In a business organization, Effective communication is of big value and importance for the outsourcing development company in the world. It is most difficult to maintain effective communication in the workplace. There might be several reasons for communication gaps to arise in the workplace like as fear, mistrust, and body language.&lt;/p&gt;

&lt;p&gt;Read Also- &lt;a href="https://bestdigitaltrendz.com/2021/04/23/top-7-technology-trends-to-watch-in-the-covid-19-pandemic/"&gt;Technology Trends to Watch in the COVID-19 pandemic&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. NDA Agreement&lt;/strong&gt;&lt;br&gt;
The NDA agreement is terms and conditions that not allow the employee for disclosing company confidential information. It is also called an NDA agreement (Non disclose agreement). Confidential Information" includes all information such as technical data, research, business plans, product implementations, financial information, marketing techniques, pricing policies, etc.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Govt Rule and Regulation Risk&lt;/strong&gt;&lt;br&gt;
Government rules and laws are different among countries about data protection and intellectual property when any two company deals with their project then there is a possibility that government rules and laws collide. There are no. of legal issues that are also on the rise. Before you outsource any project, it is very important that the enterprises made due conscientiousness to research relevant and significant laws concerning intellectual property and data protection. Make sure that your offshore development partner follows with all government law and regulations and provide the accurate transparency.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Hidden Cost Risks&lt;/strong&gt;&lt;br&gt;
Cost-effective is an important role in software development projects. The cost of the Project comprises clear and implicit. Explicit costs include such labor hardware and software tools charges and the spending on the office environment. Explicit costs are accessible to both clients and vendors. The implicit costs include such as project management, telecommunication charges, outsourcing content, and unexpected changes in the project that demand immediately.&lt;br&gt;
At the completion of the project, the actual cost turns much higher than the estimated cost. Therefore, most of the companies are now considering fixed rates for their clients.&lt;/p&gt;

&lt;p&gt;Read Now- &lt;a href="https://bestdigitaltrendz.com/2021/03/15/most-important-reasons-why-choose-magento-for-ecommerce-website-development/"&gt;Most Important Reasons Why Choose Magento&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. Security &amp;amp; Data Privacy Risks&lt;/strong&gt;&lt;br&gt;
Security and data privacy risks is very important riks for all company and enterprises working with an offshore software development company. It is very critical when the customers deal with personal data such as their identity, contact address and phone no., email addresses, debit and credit card numbers. because there are full chances that the offshore software development company’s data or IP address may not be secured.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;&lt;br&gt;
Many outshore development companies work with different types of operations and services. Before outsourcing any development project, you can read their term and condition rule and then share any project with the company. If you like this blog then you can share your suggestion and feedback in the comment box section.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>How to get the Square root of a number using Javascript?</title>
      <author>hrishikesh1990</author>
      <pubDate>Thu, 06 May 2021 10:17:20 +0000</pubDate>
      <link>https://dev.to/hrishikesh1990/how-to-get-the-square-root-of-a-number-using-javascript-4mp</link>
      <guid>https://dev.to/hrishikesh1990/how-to-get-the-square-root-of-a-number-using-javascript-4mp</guid>
      <description>&lt;p&gt;In this short tutorial, we look at how users can find the square root of a number using javascript. we also look into the various edge cases that would help you gain a holistic understanding of the concept.  &lt;/p&gt;

&lt;p&gt;This tutorial is a part of our initiative at Flexiple, to write short curated tutorials around often used or interesting concepts. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#table-of-content"&gt;
  &lt;/a&gt;
  Table of Content:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#syntax"&gt;Syntax &amp;amp; Explanation of Javascript Square root&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sample"&gt;Sample code with explanation of sqrt()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Limitations"&gt;Limitations and Caveats&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#syntax-amp-explanation-of-javascript-square-root"&gt;
  &lt;/a&gt;
  Syntax &amp;amp; Explanation of Javascript Square root:&lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Square root is one of the many arithmetic operations that javascript supports. To achieve this, javascript uses the&lt;code&gt;Math.sqrt()&lt;/code&gt; function under the Math method, and since &lt;code&gt;sqrt()&lt;/code&gt; a static method of Math it must be used as &lt;code&gt;Math.sqrt()&lt;/code&gt;.   &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Syntax of Javascript Square root function:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sqrt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;"#" - A number or an array storing a number.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Return Value:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The square root of the parameter. Sqrt() returns NaH in few cases we discuss later in the tutorial.  &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#sample-code-with-explanation-of-sqrt"&gt;
  &lt;/a&gt;
  Sample code with explanation of sqrt():&lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Once you have understood the syntax of the square root function in javascript the code would seem pretty straightforward. And in case you are already experienced in other programming languages, you would notice that it's quite similar.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sqrt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="c1"&gt;// Output: 5&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sqrt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.25&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="c1"&gt;//output: 0.5&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Or in case you are looking to write it to your webpage:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;“squareroot”&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
         &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="nx"&gt;squareroot&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sqrt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We are passing the value within the function and the square root is returned. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#limitations-and-caveats"&gt;
  &lt;/a&gt;
  Limitations and Caveats&lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;The sqrt() function in javascript has quite a few limitations and caveats, I've listed them below.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;When a negative number is passed as a parameter the function return &lt;code&gt;NaH&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Arrays with one number work fine, however, for instances where an array contains more than one number &lt;code&gt;NaH&lt;/code&gt; is returned. A method to overcome this is to create a function that runs square root in the value individually and then return it&lt;/li&gt;
&lt;li&gt;Strings and empty parameters also return &lt;code&gt;NaH&lt;/code&gt; when passed&lt;/li&gt;
&lt;li&gt;And lastly, empty arrays return 0&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>javascript</category>
    </item>
    <item>
      <title>Free Xpadder Download in 2021</title>
      <author>Dayla Harris</author>
      <pubDate>Thu, 06 May 2021 10:05:13 +0000</pubDate>
      <link>https://dev.to/harris_dayla/free-xpadder-download-in-2021-30k9</link>
      <guid>https://dev.to/harris_dayla/free-xpadder-download-in-2021-30k9</guid>
      <description>&lt;p&gt;Most PC games are suited for keyboard and mouse, but some will be much easier to play with a joystick.&lt;/p&gt;

&lt;p&gt;However, some games don’t support the use of a controller. Even when they do, there are times when Windows won’t recognize the presses you make.&lt;/p&gt;

&lt;p&gt;Xpadder is the answer to all these. Optimize your gameplay with a proper gamepad and great software to go with it.&lt;/p&gt;

&lt;p&gt;It makes your gamepad more compatible with any game. You can even use your pad to perform other tasks. Take a look at our tutorial for &lt;a href="https://www.xpadder.net/"&gt;Xpadder&lt;/a&gt; download for your PC.&lt;/p&gt;

&lt;h2&gt;What is Xpadder?&lt;/h2&gt;

&lt;p&gt;It is an independent gamepad solution that maps your keyboard and mouse presses to your gamepad’s buttons.&lt;/p&gt;

&lt;p&gt;You can assign different keys to your gamepad. For instance, the X button on your pad can be the number 1, 2, or 3 on your keyboard.&lt;/p&gt;

&lt;p&gt;Most games support keyboard buttons but not direct gamepads. This software combines the two.&lt;/p&gt;

&lt;p&gt;If you have been used to Windows XP and only recently have Windows 10, this is perfect for you. Your issues connecting your Xbox or other controller get solved immediately.&lt;/p&gt;

&lt;h2&gt;Features&lt;/h2&gt;

&lt;p&gt;Xpadder packs a lot of great features, which includes:&lt;br&gt;
• Compatibility with Windows XP, Vista, 7, 8 and 10&lt;br&gt;
• Emulator for your full keyboard and mouse&lt;br&gt;
• Joystick support to DOS games&lt;br&gt;
• Use of controller for games not supporting your preferred controller&lt;br&gt;
• Controller support for multiplayer games&lt;br&gt;
• Use of up to 16 controllers&lt;br&gt;
• Conformable to arcade stick, gamepad, joystick, steering wheel, guitar, drum kit, dance mat&lt;br&gt;
• Vibrate and rumble features for games that don’t have them by default&lt;br&gt;
• Play browser games&lt;br&gt;
• Control of media players and other software with your controller&lt;/p&gt;

&lt;p&gt;Xpadder is not limited to games. You can map the buttons to the media controls on your PC. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aYUTzuZ_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://xpadder.xyz/wp-content/uploads/2019/08/xpadder-download-for-pc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aYUTzuZ_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://xpadder.xyz/wp-content/uploads/2019/08/xpadder-download-for-pc.png" alt="Xpadder"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Your pad becomes a type of remote control. The handy remapping feature of the Xpadder allows you to assign several different keys with no difficulty.&lt;/p&gt;

&lt;h2&gt;Xpadder Free Download&lt;/h2&gt;

&lt;p&gt;You can download the old version of Xpadder for free. It works and has a great lineup of features. However, it does not include newer updates.&lt;/p&gt;

&lt;p&gt;You can try the free version first and see if it works for your gaming needs. Then consider purchasing the latest Xpadder if needed.&lt;/p&gt;

&lt;p&gt;You can find several sites that provide the older versions of Xpadder. Here’s one way to download Xpadder in your PC:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Visit their official site:xpadder.net
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WVRH309n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://mekhato.com/wp-content/uploads/2020/06/xpadder-windows-download-10.png" alt="Download Xpadder"&gt;
&lt;/li&gt;
&lt;li&gt;Select your language and country&lt;/li&gt;
&lt;li&gt;Enter your email address on the next page&lt;/li&gt;
&lt;li&gt;Open the email Xpadder sent you&lt;/li&gt;
&lt;li&gt;You will find the link in the email&lt;/li&gt;
&lt;li&gt;Click the link and make the payment&lt;/li&gt;
&lt;li&gt;After making the payment, you will get access to download the most recent version of the app&lt;/li&gt;
&lt;li&gt;Installation only takes a few minutes&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;How to Use Xpadder&lt;/h2&gt;

&lt;p&gt;Now that you have installed it in your PC, plug in your joystick/gamepad and wait for your PC to recognize it. Follow the steps below to manage the settings for your controller:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Open the Xpadder control panel&lt;/li&gt;
&lt;li&gt;Go to General Settings&lt;/li&gt;
&lt;li&gt;From the list of controllers, select the &lt;a href="https://www.xbox.com/en-IN/accessories/controllers/xbox-wireless-controller"&gt;controller&lt;/a&gt; you use&lt;/li&gt;
&lt;li&gt;Make changes to the settings and save the profile for the controller.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Remember, you can use up to 16 controllers with Xpadder. You can certainly invite your friends over and play games. The multiplayer support of this app makes that possible.&lt;/p&gt;

&lt;p&gt;You can configure the controllers individually so you can each have your personal setting preferences.&lt;/p&gt;

&lt;p&gt;Map the buttons whichever way you want, whatever controller you may have. Also, you can turn off any gamepad feature you don’t want to use.&lt;/p&gt;

&lt;p&gt;If you don’t like to make any changes to your gamepad settings, you can go with the default settings. &lt;/p&gt;

</description>
      <category>xpadder</category>
      <category>gamepad</category>
      <category>windows</category>
      <category>pc</category>
    </item>
    <item>
      <title>How to setup dev PHP/MariaDB (MySQL) environment on Windows</title>
      <author>Maxime Veber</author>
      <pubDate>Thu, 06 May 2021 09:48:52 +0000</pubDate>
      <link>https://dev.to/nek_dev/how-to-setup-dev-php-mariadb-mysql-environment-on-windows-jdn</link>
      <guid>https://dev.to/nek_dev/how-to-setup-dev-php-mariadb-mysql-environment-on-windows-jdn</guid>
      <description>&lt;p&gt;TL;DR: you don't need WAMP, or Apache or Nginx in your development environment. And it's not even about docker, just standard installation with protips. 😎&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#chocolatey-to-the-rescue"&gt;
  &lt;/a&gt;
  Chocolatey to the rescue
&lt;/h1&gt;

&lt;p&gt;Yes. Because the first thing that significantly changes between Windows and Linux or macOS is the package manager, they have apt, yum, yaourt, homebrew... Windows has nothing by default (but not for long, &lt;a href="https://devblogs.microsoft.com/commandline/windows-package-manager-preview/"&gt;the future looks bright&lt;/a&gt;!).&lt;/p&gt;

&lt;p&gt;But here comes Chocolatey. Yes, it's a package manager. Not official, it does not contain all the software you want. But well, it provides already a lot!&lt;/p&gt;

&lt;p&gt;For instance, you can install &lt;a href="https://community.chocolatey.org/packages/php"&gt;PHP&lt;/a&gt;, but also &lt;a href="https://community.chocolatey.org/packages/phpmyadmin"&gt;phpMyAdmin&lt;/a&gt; and &lt;a href="https://community.chocolatey.org/packages/mariadb"&gt;MariaDB&lt;/a&gt; (which replace MySQL).&lt;/p&gt;

&lt;p&gt;To install Chocolatey, just follow the &lt;a href="https://chocolatey.org/install"&gt;getting started&lt;/a&gt;, or run this command in a terminal (launched in mode administrator).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#installing-php"&gt;
  &lt;/a&gt;
  Installing PHP
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#actual-installation"&gt;
  &lt;/a&gt;
  Actual installation
&lt;/h2&gt;

&lt;p&gt;Now you have Chocolatey, we can install PHP. Run this in a terminal in administrator mode (right click on terminal / open as administrator):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;choco install php
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You probably need to restart your terminal now.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-php-directly"&gt;
  &lt;/a&gt;
  Using PHP directly
&lt;/h2&gt;

&lt;p&gt;You may ask why not installing a webserver like Apache or Nginx as well, the short answer is: &lt;em&gt;you don't need one&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;To run your project, use in the terminal the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;php -S localhost:1337
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;
&lt;code&gt;php -S&lt;/code&gt; will start the PHP server (for development only)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;localhost:1337&lt;/code&gt; represents the host and the port to listen on, if you want to expose the server you will probably need to use &lt;code&gt;0.0.0.0:1337&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;The server points to the current directory by default, use the option &lt;code&gt;-t&lt;/code&gt; to specify a folder&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You access your website on &lt;a href="http://localhost:1337"&gt;http://localhost:1337&lt;/a&gt;! ✨&lt;/p&gt;

&lt;p&gt;If you're using a router (a single entry point like many frameworks nowadays), you can also specify one:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;php -S localhost:1337 index.php
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#bonus-track-install-composer"&gt;
  &lt;/a&gt;
  Bonus track: install composer
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://getcomposer.org/"&gt;Composer&lt;/a&gt; is the package manager of PHP. And guess what, it's also available &lt;a href="https://community.chocolatey.org/packages/composer"&gt;in choco&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;In a terminal as administrator:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;choco install composer
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#installing-mariadb"&gt;
  &lt;/a&gt;
  Installing MariaDB
&lt;/h1&gt;

&lt;p&gt;Just like PHP. It is super-super-easy, open a terminal in administrator (or use &lt;a href="https://community.chocolatey.org/packages/wsudo"&gt;wsudo&lt;/a&gt; 😎) and type:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;choco install mariadb
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You're all set. MariaDB is now available on your computer.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#installing-phpmyadmin"&gt;
  &lt;/a&gt;
  Installing phpMyAdmin
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h2&gt;

&lt;p&gt;MariaDB will work with PHP as a replacement for MySQL perfectly. You can also use any MySQL client for that. For example, you can use PHPStorm internal client or MySQL Workbench!&lt;/p&gt;

&lt;p&gt;But most of us are used to a very specific client (which is incredibly simple to use): phpMyAdmin.&lt;/p&gt;

&lt;p&gt;Let's install it, it's just like the 2 previous tools!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;choco install phpmyadmin
# Do not forget to run it as administrator
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#configuration"&gt;
  &lt;/a&gt;
  Configuration
&lt;/h2&gt;

&lt;p&gt;phpMyAdmin requires some PHP extensions to be enabled before it works. This is documented in the &lt;a href="https://github.com/Nek-/choco-phpmyadmin#php-configuration"&gt;readme of the package&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Go in the install directory of PHP (for me it's &lt;code&gt;C:\Tools\php...&lt;/code&gt;), you can find it with the command &lt;code&gt;php --ini&lt;/code&gt;. And copy/paste &lt;code&gt;php.ini.development&lt;/code&gt; to &lt;code&gt;php.ini&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Now edit this file and add (or uncomment) the following lines:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;extension=mysqli
extension=openssl
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#running-phpmyadmin"&gt;
  &lt;/a&gt;
  Running phpMyAdmin
&lt;/h2&gt;

&lt;p&gt;You're all set. Just run the phpMyAdmin command (it runs a php server for you!), in your terminal type the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;phpmyadmin
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And that's all folks! You have setup a complete workspace to build an application in PHP that uses MariaDB with phpMyAdmin client for MySQL! ✨ &lt;/p&gt;

&lt;p&gt;You can now access phpmyadmin in your browser on &lt;a href="http://localhost:3333"&gt;http://localhost:3333&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#ok-and-why-not-wamp"&gt;
  &lt;/a&gt;
  Ok, and why not WAMP?
&lt;/h1&gt;

&lt;p&gt;WAMP is old. Outdated. For example, you can't even get the very last version of PHP with WAMP.&lt;/p&gt;

&lt;p&gt;But it also adds a webserver (apache), the default configuration is not bad to learn PHP, but when it comes to run modern applications... Well, it becomes a pain to configure properly.&lt;/p&gt;

&lt;p&gt;The method I explain here is easy but also has a serious advantage: you understand what you're doing (when WAMP is a complete package with a complex overhead).&lt;/p&gt;

&lt;p&gt;Hope you like it. 👋&lt;/p&gt;

</description>
      <category>php</category>
      <category>windows</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Basic Concepts to Understand API, Web Services &amp; Microservices</title>
      <author>Priyanshi Sharma</author>
      <pubDate>Thu, 06 May 2021 09:35:27 +0000</pubDate>
      <link>https://dev.to/priyanshi_sharma/basic-concepts-to-understand-api-web-services-microservices-3g02</link>
      <guid>https://dev.to/priyanshi_sharma/basic-concepts-to-understand-api-web-services-microservices-3g02</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rRcrjAQu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/17k2ni0t1t0sei32ov1i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rRcrjAQu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/17k2ni0t1t0sei32ov1i.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Developers have been using three major building blocks for the development of web apps, namely, APIs, Web Services, and Microservices. Some people are still unaware of the basic concept, usability and working of three different concepts. So today’s article is entirely dedicated to the individuals who have heard about these terms but are confused about the purpose each has.&lt;/p&gt;

&lt;p&gt;Typically, a &lt;a href="https://www.decipherzone.com/blog-detail/The-process-of-web-application-development"&gt;web application&lt;/a&gt; operates with three major components, that are, services, gateway, and controller.&lt;/p&gt;

&lt;p&gt;Here, a gateway is a single entry point to the application. It is responsible for authentication, load balancing, monitoring, caching, static response handling and so on whenever a client-side wants to interact with the web application.&lt;/p&gt;

&lt;p&gt;While a controller is like a manager that manages incoming requests, decides which worker should do the work, divides the work into smaller tasks, passes that work off, orchestrates the work and sends it back to the client.&lt;/p&gt;

&lt;p&gt;The worker mentioned in the controller section is nonetheless the service that receives the request from the manager, figures out the algorithms or logic that will be used to complete the request, only responsible for the work allotted and returns the completed work to the manager.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#fundamental-notions-to-know-before-understanding-api-web-services-amp-microservices"&gt;
  &lt;/a&gt;
  Fundamental Notions to Know Before Understanding API, Web Services &amp;amp; Microservices
&lt;/h2&gt;

&lt;p&gt;Before we move ahead to understand these three terms, it will be helpful to acknowledge the components web applications have and how they work.&lt;/p&gt;

&lt;p&gt;Now let’s assume you are developing a &lt;a href="https://www.decipherzone.com/blog-detail/The-process-of-web-application-development"&gt;web application&lt;/a&gt; for shopping and for that you will need to add a product description page that will not only display the information related to the given product but also display a lot of other information including order history, customer reviews &amp;amp; ratings, low inventory warning, number of items in the cart, shipping options, other products recommendations and alternatives to the current product.&lt;/p&gt;

&lt;p&gt;While in the monolithic web app, a client would retrieve this data through a REST call to the application that will trigger a load balancer to route the request to the identical instances of the application that would query numerous databases and then return the response.&lt;/p&gt;

&lt;p&gt;On the other hand, in the application using &lt;a href="https://www.decipherzone.com/blog-detail/why-microservices-architecture"&gt;microservices architecture&lt;/a&gt;, the data displayed on the product page is owned by different microservices. Some of the microservices that own data of the project page are: Shopping Cart Service, Order Service, Catalog Service, Inventory Service, Shipping Service, Review Service, and Recommendation Service(s).&lt;/p&gt;

&lt;p&gt;Now with a clear understanding of how an application works, it’s time to get into the details of APIs, web services and Microservices so that you can clearly know the meaning of these terms that will come ahead and relate to it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#api-vs-web-services-vs-microservices"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.decipherzone.com/blog-detail/api-vs-web-services-vs-microservices"&gt;API VS Web Services VS Microservices&lt;/a&gt;
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#what-are-apis"&gt;
  &lt;/a&gt;
  What are APIs?
&lt;/h3&gt;

&lt;p&gt;An &lt;a href="https://en.wikipedia.org/wiki/API"&gt;API&lt;/a&gt; (Application Programming Interface) is a communication channel between services and applications. It can be used to call single or multiple services depending upon the architecture of the application. It is a secure way to request and share information, services, and functionalities within both internal and external users.&lt;/p&gt;

&lt;p&gt;Simply put, an &lt;a href="https://www.decipherzone.com/blog-detail/What-is-an-API-and-How-it-works-"&gt;API&lt;/a&gt; is a messenger that takes a request and tells the system what the user wants to do and then returns the response. It is a method of communication between a requester and a host that is mostly accessible through an IP address. It can communicate multiple information to the user, like, data that needs to be shared and the function that needs to be provided.&lt;/p&gt;

&lt;p&gt;An &lt;a href="https://www.decipherzone.com/blog-detail/api-testing-types-benefits"&gt;API&lt;/a&gt; enables the application to communicate with other services or applications without having the knowledge of their implementation. It simplifies the app development process while saving both time and money. APIs are a simplified manner to connect an application infrastructure via &lt;a href="https://www.decipherzone.com/blog-detail/oracle-cloud-vs-aws"&gt;cloud&lt;/a&gt;-native development and also allows sharing of data with customers or other external users.&lt;/p&gt;

&lt;p&gt;In short, it opens up access to the resources while maintaining control and security. API security is all about API management that includes the use of an API Gateway. They are of three types: private, public and partner. Where private is only used internally in the organization, public API enables third parties to build an app that interacts with the API of your &lt;a href="https://www.decipherzone.com/on-demand-solutions"&gt;application&lt;/a&gt;, and the partner API is shared with certain business partners to gain additional revenue streams without risking quality.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-are-web-services"&gt;
  &lt;/a&gt;
  What are Web Services?
&lt;/h3&gt;

&lt;p&gt;Web services are client &amp;amp; server applications that interact over the World Wide Web’s HyperText Transfer Protocol (HTTP). As outlined by the World Wide Web Consortium (W3C), web services give a standard means of interoperating between &lt;a href="https://www.decipherzone.com/blog-detail/top-10-software-vulnerabilities"&gt;software applications&lt;/a&gt; operating on a variety of platforms and &lt;a href="https://www.decipherzone.com/blog-detail/top-10-best-backend-frameworks-for-web-development-in-2020"&gt;frameworks&lt;/a&gt;. Web services are portrayed by their great extensibility and interoperability, as well as their machine-processable descriptions, thanks to the use of XML. Web services can be combined in a loosely coupled method to perform complex operations.&lt;/p&gt;

&lt;p&gt;A web service architecture consists of three distinct roles, that is, provider, requester, or broker. Here a provider informs the broker/service registry about the presence of the web service through the broker’s public interface that makes service accessible to clients and the requestor binds and invokes the services. It is a lightweight &lt;a href="https://www.decipherzone.com/blog-detail/soa-vs-microservices"&gt;service-oriented architecture&lt;/a&gt; that supports interoperability.&lt;/p&gt;

&lt;p&gt;Simply put, web services are XML-centered data exchange systems that utilize the internet for application-to-application communication and interfacing. A client can call a web service by sending a request via XML and the service then provides an XML response as well.&lt;br&gt;
A web service comprises of these functions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; Availability over intranet and internet networks &lt;/li&gt;
&lt;li&gt; Independence of programming languages and operating systems &lt;/li&gt;
&lt;li&gt; Self-describing via XML &lt;/li&gt;
&lt;li&gt; Identifiable via a simple location method &lt;/li&gt;
&lt;li&gt; Supports communication between apps with HTML, SOAP, WSDL, and XML. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here, XML tags data, SOAP transfers the message and WSDL describes the accessibility of service.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-are-microservices"&gt;
  &lt;/a&gt;
  What are Microservices?
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://microservices.io/"&gt;Microservices&lt;/a&gt; is an architectural style that structures an application as a collection of services that are loosely coupled, highly maintainable &amp;amp; testable, independently deployable, organized around business capabilities, and are owned by a small team of developers. It supports the frequent, agile, and reliable delivery of complex, large applications.&lt;/p&gt;

&lt;p&gt;Where in the &lt;a href="https://www.decipherzone.com/blog-detail/service-oriented-architecture"&gt;SOA architecture&lt;/a&gt;, if we had to create a search function, it has to be deployed on a single server where other functions are also residing. The failure of the search service due to any reason can take down the entire application. Whereas, in &lt;a href="https://www.decipherzone.com/blog-detail/microservices-vs-api"&gt;microservices&lt;/a&gt;, all the functions are split into the granular level and each service is deployed on a different server making the service independent of each other. That is, the failure of one or more functions will not affect other parts of the web application. Microservice also offers improved fault tolerance due to its small service constitution.&lt;/p&gt;

&lt;p&gt;When a change is needed in a certain part of the application, only the related service is modified and deployed without disturbing the functionality of an entire application. It gives the developers the independence to develop and deploy services independently while using an ideal programming language for service and another language or framework for a different function. It is easier to scale and integrate with third-party services.&lt;/p&gt;

&lt;p&gt;With a clear understanding of APIs, Web Services and Microservices, it can be said that there is nothing to compare among the three. While APIs and Webs Services are the communication interface for different architecture styles, microservices is a distinctive method to develop software systems that have well-defined interfaces and operability.&lt;/p&gt;

&lt;p&gt;And if you are a business owner who wants to develop an application that is based on either of these services and architecture, then you can &lt;a href="https://www.decipherzone.com/hire-developer"&gt;hire developers&lt;/a&gt; who have relevant experience and expertise in the same field.&lt;/p&gt;

&lt;p&gt;Source: &lt;a href="https://www.decipherzone.com/blog"&gt;Decipher&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>react</category>
      <category>python</category>
    </item>
    <item>
      <title>React JSON Schema Form</title>
      <author>Valerii Udodov</author>
      <pubDate>Thu, 06 May 2021 09:31:33 +0000</pubDate>
      <link>https://dev.to/vudodov/react-json-schema-form-39da</link>
      <guid>https://dev.to/vudodov/react-json-schema-form-39da</guid>
      <description>&lt;p&gt;Today, I'd like to share with you one of the items from my tools-belt, which I'm successfully using for years now. It is simply a react component. It is a form. But not just a form, it is a form that allows anyone independently of their React or HTML knowledge to build a sophisticated feature-rich form based on any arbitrary expected data in a consistent manner.&lt;/p&gt;

&lt;p&gt;Behold, the React JSON Schema Form, or simply RJSF. Originally started and built as an Open Source project by the Mozilla team. Evolved into a separate independent project.&lt;/p&gt;

&lt;p&gt;Out of the box, RJSF provides us with rich customization of different form levels, extensibility, and data validation. We will talk about each aspect separately.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#configuration"&gt;
  &lt;/a&gt;
  Configuration
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#json-schema"&gt;
  &lt;/a&gt;
  JSON Schema
&lt;/h3&gt;

&lt;p&gt;The end goal of any web form is to capture &lt;em&gt;expected&lt;/em&gt; user input. The RJSF will capture the data as a JSON object. Before capturing &lt;em&gt;expected&lt;/em&gt; data we need to define how the data will look like. The rest RJSF will do for us. To define and annotate the data we will use another JSON object. Bear with me here... &lt;br&gt;
We will be defining the shape (or the schema) of the JSON object (the data) with another JSON object. The JSON object that defines the schema for another JSON object is called -&lt;em&gt;drumroll&lt;/em&gt;- JSON Schema and follows the convention described in the JSON Schema standard.&lt;/p&gt;

&lt;p&gt;To make things clear, we have two JSON objects so far. One representing the data we are interested in, another representing the schema of the data we are interested in. The last one will help RJSF to decide which input to set for each data attribute.&lt;/p&gt;



&lt;p&gt;A while ago &lt;a href="https://dev.to/posts/making-strongly-typed-language-a-bit-more-loose-with-json-schema/#the-jsonschema"&gt;in one of my previous articles&lt;/a&gt; I've touched base on the JSON Schema.&lt;/p&gt;

&lt;p&gt;I'm not going to repeat myself, I'll just distill to what I think is the most valuable aspect of it.&lt;br&gt;
JSON Schema allows us to capture changing data and keep it &lt;strong&gt;meaningful&lt;/strong&gt;. Think of arbitrary address data in the international application. Address differs from country to country, but the ultimate value doesn't. It represents a point in the world that is described with different notations. Hence even though the address format in the USA, Spain, Australia, or China is absolutely different, the ultimate value -from an application perspective- is the same-- a point on the Globe. It well might be employee home address, parcel destination or anything else and notation does not change this fact.&lt;/p&gt;



&lt;p&gt;So if we want to capture, let's say, the first and last name and telephone number of a person. The expected data JSON object will look like&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"firstName"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Chuck"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"lastName"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Norris"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"telephone"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"123 456 789"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And the JSON Schema object to define the shape of the data object above will look like&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"A person information"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"description"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"A simple person data."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"object"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"properties"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"firstName"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"string"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"First name"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"lastName"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"string"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Last name"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"telephone"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"string"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Telephone"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"minLength"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;Something to keep in mind.&lt;br&gt;
JSON Schema is following a permissive model. Meaning out of the box everything is allowed. The more details you specify, the more restrictions you put in place. So it is worth sometimes religiously define the expected data.&lt;/p&gt;



&lt;p&gt;This is the bare minimum we need to start. Let's look at how the JSON Schema from the above will look like as a form. Just before let's also look at the code...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Form&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@rjsf/core&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// ...&lt;/span&gt;

    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Form&lt;/span&gt; &lt;span class="na"&gt;schema&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;schema&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Form&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="c1"&gt;// ...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Yup, that's it, now let's check out the form itself&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Z6MclfJL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0eg62ok1rljqtlzepnxi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z6MclfJL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0eg62ok1rljqtlzepnxi.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ui-schema"&gt;
  &lt;/a&gt;
  UI Schema
&lt;/h3&gt;

&lt;p&gt;Out of the box, the RJSF makes a judgment on how to render one field or another. Using JSON Schema you primarily control &lt;em&gt;what&lt;/em&gt; to render, but using &lt;a href="https://react-jsonschema-form.readthedocs.io/en/latest/api-reference/uiSchema/#uischema"&gt;UI Schema&lt;/a&gt; you can control &lt;em&gt;how&lt;/em&gt; to render.&lt;/p&gt;

&lt;p&gt;UI Schema is yet another JSON that follows the tree structure of the JSON data, hence form. It has quite some stuff out of the box.&lt;/p&gt;

&lt;p&gt;You can be as granular as picking a color for a particular input or as generic as defining a template for all fields for a &lt;code&gt;string&lt;/code&gt; type.&lt;/p&gt;

&lt;p&gt;Let's try to do something with our demo form and say disable the first name and add help text for the phone number.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"firstName"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"ui:disabled"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"telephone"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"ui:help"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"The phone number that can be used to contact you"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's tweak our component a bit&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Form&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@rjsf/core&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// ...&lt;/span&gt;

    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Form&lt;/span&gt; 
        &lt;span class="na"&gt;schema&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;schema&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
        &lt;span class="na"&gt;uiSchema&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;uiSchema&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Form&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="c1"&gt;// ...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And here is the final look&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Hqi1Ci02--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1htjlp1kbh6uude1b14o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Hqi1Ci02--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1htjlp1kbh6uude1b14o.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Nice and easy. There's a lot of built-in configurations that are ready to be used, but if nothing suits your needs, you can build your own...&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#customization"&gt;
  &lt;/a&gt;
  Customization
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;The API allows to specify your own custom widget and field components:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A &lt;em&gt;widget&lt;/em&gt; represents a HTML tag for the user to enter data, eg. input, select, etc.&lt;/li&gt;
&lt;li&gt;A &lt;em&gt;field&lt;/em&gt; usually wraps one or more widgets and most often handles internal field state; think of a field as a form row, including the labels.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;-- &lt;a href="https://react-jsonschema-form.readthedocs.io/en/latest/advanced-customization/custom-widgets-fields/"&gt;RJSF Documentation&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Another way to think of it is &lt;em&gt;field&lt;/em&gt; includes label and other stuff around, while &lt;em&gt;widget&lt;/em&gt; only the interaction component or simply input.&lt;/p&gt;

&lt;p&gt;For the sake of example let's create a simple text &lt;em&gt;widget&lt;/em&gt; that will make the input red and put a dash sign (-) after every character.&lt;/p&gt;

&lt;p&gt;To keep things light and simple let's imagine that the whole form will be a single red field. The JSON Schema will look as follows&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;schema&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Mad Field&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;string&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Forgot to say that widgets are just components, that will be mounted in and will receive a standard set of &lt;code&gt;props&lt;/code&gt;. No limits, just your imagination ;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;MadTextWidget&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt;
      &lt;span class="na"&gt;style&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;backgroundColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;red&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"custom"&lt;/span&gt;
      &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;required&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="na"&gt;onChange&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onChange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt; - &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The next step is to register the widget so that we can use it in the UI Schema&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;widgets&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;madTextWidget&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;MadTextWidget&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally, we can define the UI Schema&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;uiSchema&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ui:widget&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;madTextWidget&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And the full code with the RJSF&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;schema&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Mad Field&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;string&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;MadTextWidget&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt;
      &lt;span class="na"&gt;style&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;backgroundColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;red&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"custom"&lt;/span&gt;
      &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;required&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="na"&gt;onChange&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onChange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt; - &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;widgets&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;madTextWidget&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;MadTextWidget&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;uiSchema&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ui:widget&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;madTextWidget&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;ReactDOM&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Form&lt;/span&gt; &lt;span class="na"&gt;schema&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;schema&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
        &lt;span class="na"&gt;uiSchema&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;uiSchema&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; 
        &lt;span class="na"&gt;widgets&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;widgets&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;app&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It will look like this&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Q9r35AmC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9otdcy4sghzv8ngunz8q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q9r35AmC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9otdcy4sghzv8ngunz8q.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here, &lt;a href="https://codepen.io/vudodov/pen/LYWPKPa"&gt;try it yourself&lt;/a&gt;. The field will be pretty similar but will have a wider impact area so to speak. As been said the field will include labels and everything around the input itself.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://react-jsonschema-form.readthedocs.io/en/latest/advanced-customization/custom-templates/"&gt;Custom templates&lt;/a&gt; allows you to re-define the layout for certain data types (simple field, array or object) on the form level.&lt;/p&gt;

&lt;p&gt;Finally, you can build your own &lt;a href="https://react-jsonschema-form.readthedocs.io/en/latest/advanced-customization/custom-themes/"&gt;Theme&lt;/a&gt; which will contain all your custom widgets, fields, template other properties available for a &lt;code&gt;Form&lt;/code&gt; component.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#validation"&gt;
  &lt;/a&gt;
  Validation
&lt;/h2&gt;

&lt;p&gt;As was mentioned before the JSON Schema defines the shape of the JSON data that we hope to capture with the form. JSON Schema allows us to define the shape fairly precisely. We can tune the definition beyond the expected type, e.g. we can define a length of the string or an email regexp or a top boundary for a numeric value and so forth.&lt;/p&gt;

&lt;p&gt;Check out this example&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Form&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;JSONSchemaForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;schema&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;string&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;minLength&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;formData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hi&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;ReactDOM&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Form&lt;/span&gt; &lt;span class="na"&gt;schema&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;schema&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;formData&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;formData&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;liveValidate&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;app&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Will end up looking like this&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UXxjKhkH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d9mqrpqkriq27ann4b1a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UXxjKhkH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d9mqrpqkriq27ann4b1a.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Of course, we can &lt;a href="https://react-jsonschema-form.readthedocs.io/en/latest/usage/validation/"&gt;re-define messages&lt;/a&gt;, configure when, where, and how to show the error messages.&lt;/p&gt;

&lt;p&gt;Out of the box our data will be validated against the JSON Schema using the &lt;a href="https://github.com/ajv-validator/ajv"&gt;(Ajv) A JSON Schema validator library&lt;/a&gt;. However, if we want to, we can implement our own custom validation process.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dependencies"&gt;
  &lt;/a&gt;
  Dependencies
&lt;/h2&gt;

&lt;p&gt;Dependencies allow us to add some action to the form. We can dynamically change form depending on the user input. Basically, we can request extra information depending on what the user enters.&lt;/p&gt;




&lt;p&gt;Before we will get into dependencies, we need to get ourselves familiar with &lt;a href="https://json-schema.org/understanding-json-schema/reference/combining.html"&gt;dynamic schema permutation&lt;/a&gt;. Don't worry, it is easier than it sounds. We just need to know what four key-words mean&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;allOf&lt;/code&gt;: Must be valid against all of the subschemas&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;anyOf&lt;/code&gt;: Must be valid against any of the subschemas&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;oneOf&lt;/code&gt;: Must be valid against exactly one of the subschemas&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;not&lt;/code&gt;: Must not be valid against the given schema
___&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Although dependencies have been removed in the latest JSON Schema standard versions, RJSF still supports it. Hence you can use it, there are no plans for it to be removed so far.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#property-dependencies"&gt;
  &lt;/a&gt;
  Property dependencies
&lt;/h3&gt;

&lt;p&gt;We may define that if one piece of the data has been filled, the other piece becomes mandatory. There are two ways to define this sort of relationship: unidirectional and bidirectional. Unidirectional as you might guess from the name will work in one direction. Bidirectional will work in both, so no matter which piece of data you fill in, the other will be required as well.&lt;/p&gt;

&lt;p&gt;Let's try to use bidirectional dependency to define address in the shape of coordinates. The dependency will state that if one of the coordinates has been filled, the other one has to be filled in either. But if none is filled, none is required.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"object"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Longitude and Latitude Values"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"description"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"A geographical coordinate."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"properties"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"latitude"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"number"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"minimum"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;-90&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"maximum"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;90&lt;/span&gt;&lt;span class="w"&gt;
     &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"longitude"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"number"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"minimum"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;-180&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"maximum"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;180&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"dependencies"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"latitude"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="s2"&gt;"longitude"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"longitude"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="s2"&gt;"latitude"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"additionalProperties"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;See lines 17 to 24. That's all there is to it, really. Once we will pass this schema to the form, we will see the following (watch for an asterisk (*) near the label, it indicates whether the field is mandatory or not).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--24olAqv6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tsfg8sairbbo2fqvceww.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--24olAqv6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tsfg8sairbbo2fqvceww.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#schema-dependencies"&gt;
  &lt;/a&gt;
  Schema dependencies
&lt;/h3&gt;

&lt;p&gt;This one is more entertaining, we can actually control visibility through the dependencies. Let's follow up on the previous example and for the sake of the example show longitude only if latitude is filled in.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"object"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Longitude and Latitude Values"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"description"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"A geographical coordinate."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"properties"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"latitude"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"number"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"minimum"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;-90&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"maximum"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;90&lt;/span&gt;&lt;span class="w"&gt;
     &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"dependencies"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"latitude"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"properties"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"longitude"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"number"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"minimum"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;-180&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"maximum"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;180&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"additionalProperties"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;No code changes are required, just a small dependency configuration tweak (lines 12 to 22).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AlwtuuRa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7j7hbqr7ous2z83bpf40.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AlwtuuRa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7j7hbqr7ous2z83bpf40.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dynamic-schema-dependencies"&gt;
  &lt;/a&gt;
  Dynamic schema dependencies
&lt;/h3&gt;

&lt;p&gt;So far so good, pretty straightforward. We input the data, we change the expected data requirements. But we can go one step further and have multiple requirements. Not only based on whether the data is presented or not but on the value of presented data.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BkwfNk7q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dekjle6kfv45joidff30.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BkwfNk7q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dekjle6kfv45joidff30.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once again, no code, only JSON Schema modification&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"How many inputs do you need?"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"object"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"properties"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"How many inputs do you need?"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"string"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"enum"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"None"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"One"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="s2"&gt;"Two"&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"default"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"None"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"required"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"How many inputs do you need?"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"dependencies"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"How many inputs do you need?"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"oneOf"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"properties"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"How many inputs do you need?"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
              &lt;/span&gt;&lt;span class="nl"&gt;"enum"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="s2"&gt;"None"&lt;/span&gt;&lt;span class="w"&gt;
              &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"properties"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"How many inputs do you need?"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
              &lt;/span&gt;&lt;span class="nl"&gt;"enum"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="s2"&gt;"One"&lt;/span&gt;&lt;span class="w"&gt;
              &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"First input"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
              &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"number"&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"properties"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"How many inputs do you need?"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
              &lt;/span&gt;&lt;span class="nl"&gt;"enum"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="s2"&gt;"Two"&lt;/span&gt;&lt;span class="w"&gt;
              &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"First input"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
              &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"number"&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"Second input"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
              &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"number"&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#bottom-line"&gt;
  &lt;/a&gt;
  Bottom line
&lt;/h2&gt;

&lt;p&gt;Even though we went through some major concepts and features, we are far away from covering everything that RJSF empowers us to do.&lt;/p&gt;

&lt;p&gt;I'd encourage you to check out &lt;a href="https://react-jsonschema-form.readthedocs.io/en/latest/"&gt;official documentation&lt;/a&gt; for more insights and examples, &lt;a href="https://github.com/rjsf-team/react-jsonschema-form"&gt;GitHub repository&lt;/a&gt; for undocumented goodies and &lt;a href="https://rjsf-team.github.io/react-jsonschema-form/"&gt;live playground&lt;/a&gt; to get your hands dirty. Finally, worth mentioning that the Open Source community keeps things going, so look outside these resources, there are quite a few good things over there.&lt;/p&gt;

&lt;p&gt;RJSF is a ridiculously powerful thing if you need to customize and capture meaningful data. Enjoy!&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>rjsf</category>
      <category>jsonschema</category>
    </item>
    <item>
      <title>Have someone ever made a profit from your idea?</title>
      <author>Madza</author>
      <pubDate>Thu, 06 May 2021 09:29:50 +0000</pubDate>
      <link>https://dev.to/madza/have-someone-ever-made-a-profit-from-your-idea-12a</link>
      <guid>https://dev.to/madza/have-someone-ever-made-a-profit-from-your-idea-12a</guid>
      <description>&lt;p&gt;Have you ever experienced someone taking your project idea, a part of your code that was not licensed for profit, your original blog article or other intellectual property, and made a profit out of it? &lt;/p&gt;

&lt;p&gt;Would love to hear your stories!&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>webdev</category>
      <category>business</category>
      <category>startup</category>
    </item>
  </channel>
</rss>
