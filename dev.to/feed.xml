<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Introduction to AWS Glue</title>
      <author>Adit Modi</author>
      <pubDate>Mon, 24 Jan 2022 17:18:09 +0000</pubDate>
      <link>https://dev.to/aws-builders/introduction-to-aws-glue-4624</link>
      <guid>https://dev.to/aws-builders/introduction-to-aws-glue-4624</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;AWS Glue is a serverless data integration service that makes it easy to discover, prepare, and combine data for analytics, machine learning, and application development. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;AWS Glue provides all of the capabilities needed for data integration. It both visual and code-based interfaces to make data integration easier.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Users can easily find and access data using the AWS Glue Data Catalog. Data engineers and ETL developers can visually create, run, and monitor ETL workflows with a few clicks in AWS Glue Studio. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Data analysts and data scientists can use AWS Glue DataBrew to visually enrich, clean, and normalize data without writing code. With AWS Glue Elastic Views, application developers can use familiar Structured Query Language (SQL) to combine and replicate data across different data stores. You pay only for the resources consumed while your jobs are running.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BBDCKpJ4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s4633tbaxh3ukzuc26q8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BBDCKpJ4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s4633tbaxh3ukzuc26q8.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Big Data Analytics Options on AWS&lt;/strong&gt; is a Series containing different articles that provides a basic introduction to different Big Data Analytics Options on AWS. Each article covers the detailed guide on how each service is used for collecting, processing, storing, and analyzing big data.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#ideal-usage-patterns"&gt;
  &lt;/a&gt;
  Ideal usage patterns
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;AWS Glue is designed to easily prepare data for extract, transform, and load (ETL) jobs. Using AWS Glue gives you the following benefits:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Data discovery&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;Automatic schema discovery, using AWS Glue crawlers&lt;/li&gt;
&lt;li&gt;Manage and enforce schemas for data streams with AWS Glue Schema Registry&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Data Catalog&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;The AWS Glue Data Catalog is a central repository to store structural and operational metadata for all your data assets. For a given dataset, you can store its table definition, physical location, add business relevant attributes, as well as track how this data has changed over time.&lt;/li&gt;
&lt;li&gt;The AWS Glue Data Catalog is Apache Hive Metastore-compatible and is a drop-in replacement for the Apache Hive Metastore for Big Data applications running on Amazon EMR, and third-party applications such as Databricks.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Data transformation&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;Visually transform data with a drag and drop interface using AWS Glue Studio. AWS Glue automatically generates the reusable and portable code using familiar technology – Python (or Scala) and Spark.&lt;/li&gt;
&lt;li&gt;Serverless streaming ETL jobs in AWS Glue continuously consume data from streaming sources including Amazon Kinesis and Amazon MSK, clean and transform it in-flight, and make it available for analysis in seconds in your target data store.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Data replication&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;AWS Glue Elastic Views enables you to create views over data stored in multiple types of AWS data stores, and materialize the views in a target data store of your choice by writing queries in PartiQL, an open-source SQL-compatible query language.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Data preparation&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;Deduplicate and cleanse data with built-in machine learning. The FindMatches feature deduplicates and finds records that are imperfect matches of each other.&lt;/li&gt;
&lt;li&gt;Normalize data without code using a visual interface. AWS Glue DataBrew provides an interactive, point-and-click visual interface for users like data analysts and data scientists to clean and normalize data without writing code. Choose from over 250 built-in transformations.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Integration&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;Integration with data access services like Amazon Athena, Amazon EMR, and Amazon Redshift. Also with third parties.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Serverless&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;No infrastructure to provision or manage.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#cost-model"&gt;
  &lt;/a&gt;
  Cost model
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;With AWS Glue jobs (crawler and ETL), AWS Glue DataBrew jobs, and AWS Glue Elastic Views, you pay an hourly rate, billed by the second with a 1-minute minimum billing duration. For the AWS Glue Data Catalog, you pay a simple monthly fee for storing and accessing the metadata.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The first million objects stored are free, and the first million accesses are free. If you provision a development endpoint to interactively develop your ETL code, you pay an hourly rate, billed per minute. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;AWS Glue DataBrew interactive sessions bill for the total number of the sessions used. Each session is 30 minutes. A session is initiated when you open a DataBrew project.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;See AWS Glue pricing for more details.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#performance"&gt;
  &lt;/a&gt;
  Performance
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;AWS Glue uses a scale-out Apache Spark environment to load your data into its destination. You can simply specify the number of Data Processing Units (DPUs) that you want to allocate to your ETL job. An AWS Glue ETL job requires a minimum of 2 DPUs. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;By default, AWS Glue allocates 10 DPUs to each ETL job. Additional DPUs can be added to increase the performance of your ETL job. Multiple jobs can be triggered in parallel or sequentially by triggering them on a job completion event. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You can also trigger one or more AWS Glue jobs from an external source such as AWS Step Functions or Amazon Managed Workflows for Apache Airflow.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#durability-and-availability"&gt;
  &lt;/a&gt;
  Durability and availability
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;AWS Glue connects to the data source of your preference, whether it is in an Amazon S3 file, an Amazon RDS table, or another set of data. As a result, all your data is stored and available as it pertains to that data stores durability characteristics. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The AWS Glue service provides status of each job and pushes all notifications to Amazon CloudWatch events. You can setup SNS notifications using CloudWatch actions to be informed of job failures or completions.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#scalability-and-elasticity"&gt;
  &lt;/a&gt;
  Scalability and elasticity
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;AWS Glue provides a managed ETL service that runs on a Serverless Apache Spark environment. This enables you to focus on your ETL job and not worry about configuring and managing the underlying compute resources. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;AWS Glue works on top of the Apache Spark environment to provide a scale-out run environment for your data transformation jobs.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#interfaces"&gt;
  &lt;/a&gt;
  Interfaces
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;AWS Glue provides a number of ways to populate metadata into the AWS Glue Data Catalog. AWS Glue crawlers scan various data stores you own to automatically infer schemas and partition structure and populate the AWS Glue Data Catalog with corresponding table definitions and statistics. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You can also schedule crawlers to run periodically so that your metadata is always up-to-date and in-sync with the underlying data.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Alternately, you can add and update table details manually by using the AWS Glue Console or by calling the API. You can also run Hive DDL statements via the Amazon Athena Console or a Hive client on an Amazon EMR cluster.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Finally, if you already have a persistent Apache Hive Metastore, you can perform a bulk import of that metadata into the AWS Glue Data Catalog by using the import script.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#antipatterns"&gt;
  &lt;/a&gt;
  Anti-patterns
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;AWS Glue has the following anti-patterns:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Multiple ETL engines&lt;/strong&gt; – AWS Glue ETL jobs are Spark-based. If your use case requires you to use an engine other than Apache Spark or if you want to run a heterogeneous set of jobs that run on a variety of engines like Hive or Pig, Amazon EMR is a better choice.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Configurable Spark environment&lt;/strong&gt; – AWS Glue is a fully managed service. While you can change some configuration parameters in your cluster, if your use case requires extensive configuration changes, Amazon EMR or Amazon EMR on EKS is a better choice.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;Hope this guide gives you an Introduction to AWS Glue.&lt;/p&gt;

&lt;p&gt;Let me know your thoughts in the comment section 👇&lt;br&gt;
And if you haven't yet, make sure to follow me on below handles:&lt;/p&gt;

&lt;p&gt;👋 &lt;strong&gt;connect with me on &lt;a href="https://www.linkedin.com/in/adit-modi-2a4362191/"&gt;LinkedIn&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
🤓 &lt;strong&gt;connect with me on &lt;a href="https://twitter.com/adi_12_modi"&gt;Twitter&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
🐱‍💻 &lt;strong&gt;follow me on &lt;a href="https://github.com/AditModi"&gt;github&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
✍️ &lt;strong&gt;Do Checkout &lt;a href="https://aditmodi.hashnode.dev"&gt;my blogs&lt;/a&gt;&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;Like, share and follow me 🚀 for more content.&lt;/p&gt;


&lt;div class="ltag__user ltag__user__id__497987"&gt;
  
    .ltag__user__id__497987 .follow-action-button {
      background-color: #000000 !important;
      color: #fa6c00 !important;
      border-color: #000000 !important;
    }
  
    &lt;a href="/aditmodi" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FYJrtrA_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--mUzXbt1U--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/497987/edde8513-7308-4a4d-9592-2be160d074d2.png" alt="aditmodi image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/aditmodi"&gt;Adit Modi&lt;/a&gt;Follow
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/aditmodi"&gt;Cloud Engineer | AWS Community Builder | 8x AWS Certified | 3x Azure Certified | Author of Cloud Tech , DailyDevOps &amp;amp; BigDataJournal | DEV moderator&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;





&lt;p&gt;&lt;a href="https://docs.aws.amazon.com/whitepapers/latest/big-data-analytics-options/aws-glue.html"&gt;Reference Notes&lt;/a&gt;&lt;/p&gt;

</description>
      <category>aws</category>
      <category>cloud</category>
      <category>bigdata</category>
      <category>analytics</category>
    </item>
    <item>
      <title>Working at a Startup: From Seed to Series A</title>
      <author>Brian Douglas</author>
      <pubDate>Mon, 24 Jan 2022 17:15:04 +0000</pubDate>
      <link>https://dev.to/bdougieyo/working-at-a-startup-from-seed-to-series-a-4nem</link>
      <guid>https://dev.to/bdougieyo/working-at-a-startup-from-seed-to-series-a-4nem</guid>
      <description>&lt;p&gt;The startup I used to work at recently announced their series D funding round completed. That announcement mentions a 2 billion valuation (That's a lot). Not many folks get the opportunity to work at an early-stage company and see this achieved, including me. I left right before Series B was completed, 2 years after the seed round. I learned a tremendous amount about being at an early company and thought I would share my thoughts. &lt;/p&gt;

&lt;p&gt;This post was inspired by &lt;a class="mentioned-user" href="https://dev.to/swyx"&gt;@swyx&lt;/a&gt;'s share and tell going from a Series B to C post.  &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/swyx" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0ojA0BfB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--HuQ70Dya--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/47766/26fbd2bf-c352-447c-9b4f-f66652dc4899.jpg" alt="swyx"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/swyx/working-at-a-startup-from-series-b-to-c-445p" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Working at a Startup From Series B to C&lt;/h2&gt;
      &lt;h3&gt;swyx ・ Mar 5 '20 ・ 5 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#reflections&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#disclaimer"&gt;
  &lt;/a&gt;
  Disclaimer
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;I am not naming the startup to make this useful for anyone considering a role at an early or seed-stage startup. Honestly, just check out my LinkedIn or Google me if you are interested. If you have questions, feel free to ask. &lt;/li&gt;
&lt;li&gt;This company is a developer tool startup, which can be quite different from different verticals. Aside from Edtech, I do not have experience with any other startup type. &lt;/li&gt;
&lt;li&gt;I was a boot camp grad and M.B.A. dropout that learned to code in 12 weeks. I am not an elite programmer and completed 0 leet code problems. I can only provide context on engineers at an early-stage company, but happy to answer questions to the best of my ability.&lt;/li&gt;
&lt;li&gt;VC is Venture Capitalist (folks with the investment money).&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#0-what-is-seed-stage"&gt;
  &lt;/a&gt;
  0. What is Seed Stage?
&lt;/h2&gt;

&lt;p&gt;This is the point the company has a product and focused on product-market fit and hyper-growth (new user sign-ups).&lt;/p&gt;

&lt;p&gt;When I joined, the company had just secured the seed round of funding (just over 2 million) and worked on the idea for a few years with a previous iteration.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-hiring"&gt;
  &lt;/a&gt;
  1. Hiring
&lt;/h2&gt;

&lt;p&gt;I joined the company as employee number 3, which did not mean much. My interest in joining the company was working closely with the company's C.T.O, who had deep knowledge in Docker and k8s. The company's C.E.O was also writing the majority of code and had a strong interest in modern JavaScript (es6 then). &lt;/p&gt;

&lt;p&gt;The focus was on hiring high-caliber individuals that could excel in the product's growth and awareness. Early hires in design and customer support took up most of the focus. The founders pitched the same slides as the (seed) pitch to every prospective hire at the early stage. This was the same pitch that got them their series A (in 4 days). &lt;/p&gt;

&lt;p&gt;This worked well for me since I learned the pitch back to the front and participated in regular pitch practice meetings (not required as engineering, but a great learning experience). It is helpful when the earliest employees are interested in the problem and invested in seeing growth/adoption.&lt;/p&gt;

&lt;p&gt;At this stage, it is essential to get the word out about the product via content and events. Employees that can double as an evangelist for the product can make up for a good deal of growth. By the time series A was considered, there were ~30k users. With a larger user base, hiring became easier. For those looking for a job, this is an underused tactic. Offer to work at places you enjoy their product and see if you respond to the founders. If you have a strong following on Twitter or somewhere else, that can be used as negotiation leverage for more equity. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-salary-vs-equity"&gt;
  &lt;/a&gt;
  2. Salary vs. Equity
&lt;/h2&gt;

&lt;p&gt;Seed stage startups can be generous in offering equity to gain initial talent and expand bandwidth. The "founding team" is used to incentivize new hires to join. This is the best time to own a more significant stake in the company. Using consultants for design or marketing is also expected and a way to not hand out equity. &lt;/p&gt;

&lt;p&gt;I was not personally offered a contract-to-hire, but most hired folks were remote got the contract-to-hire pitch. My recommendation is to make sure the contract works for you and not just company. Keep in mind equity is not usually received at this stage, but it’s possible.&lt;/p&gt;

&lt;p&gt;My salary offer was equal to my previous startup job's salary because that was what I asked for (poor negotiation on my part). There was no negotiation on equity, mainly because I didn't know you could do that. I got a decent amount of equity, which was later tripled in 6 months due to good performance and retention. &lt;/p&gt;

&lt;p&gt;Runway is everything at this point and a raise decreases runway. Providing more equity is more reasonable request. Employees at this stage should consider asking for equity as a performance bonus and cash bonuses after a new round is raised. Neither is guaranteed if the company cannot increase or gain adoption.&lt;/p&gt;

&lt;p&gt;Joining an early-stage startup always trades on salary in hopes the equity is worth something. This trade is more accessible with experience. Equity generally vests over 4 years, but you can negotiate a faster vesting schedule. Founders are looking to please VC's with a story and the "founding team." If you can provide value to the founding team consider bringing that up, even if it is you brother-in-law works for a FAANG company as an Engineering Director (fictitious example). Network and connections should not be discounted. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-company-dynamics-and-culture"&gt;
  &lt;/a&gt;
  3. Company Dynamics and Culture
&lt;/h2&gt;

&lt;p&gt;At a small company (less than 20), its culture was as if it was a close-knit community or fraternity (or a non-gendered equivalent). The company I worked for maintained a healthy gender ratio for employees (including engineering) and pretty diverse staff, this was not intentional but was nice to be a part of. Diversity is not a priority at the seed stage, though it can be talked about. The focus is profitability and extending the runway. I did my part by inviting friends and diverse candidates to interview for roles before they were public, but the majority never made it past intro calls. &lt;/p&gt;

&lt;p&gt;A few times, the company had to decide on building up the enterprise solution or focus on mass developer adoption. This ended when there was a final exploration call from a large VC plus a large corporation considering an acquisition. I don't know how often this happened in the first 2 years, but I can say because the company focused on mass adoption via specific developer personas D.M.M me for this info, it is too much detail to include here) enterprise never needed to be the focus because of enterprises were already reaching out enough that the first sales hire was made to filter these inbounds into enterprise features and 6 figures deals (pre-series A). &lt;/p&gt;

&lt;p&gt;I will say that it is not normal to have the product figured out this quickly in the company's lifecycle. This company realized they had a lot of leverage early on, due to the founders being 40+ and second-time founders. &lt;br&gt;
I.M.O.O, the gamble with joining startups with first-time founders. Before accepting the offer to any startup, ask the founder how many exits has the team seen, and if they plan to exit through acquisition orI.P.OO. &lt;/p&gt;

&lt;p&gt;A company looking to I.P.O. operates differently than a company looking to be acquired. Not every employee will survive an acquisition or acquisition, so know when you would be ready to leave if either do not happen. &lt;/p&gt;

&lt;p&gt;In silicon valley, the average is 1-2 years. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-series-a"&gt;
  &lt;/a&gt;
  4. Series A
&lt;/h2&gt;

&lt;p&gt;The series A is a point when large VC's offer money and provide an actual valuation for the company. The valuation can be based on actual adoption or potential growth. From my understanding, potential growth is better as it can be valued higher and allow the company to give up less of the company away through stock. The VC will provide a partner as a board member as well as a strong network.&lt;/p&gt;

&lt;p&gt;Also keep in mind it is good for the company to have competitors in the space. The company I worked for was never public about their valuation, but their competitors were extra public. This made fundraising easier for them because they held theirs cards close to the chest. Even as a former employee I stayed friendly with the founders, but they never revealed their valuation to me, their response when asking was enough to know I should hold on to the stock.&lt;/p&gt;

&lt;p&gt;The choice of the VC and partner at the close of series A  is very important. The board member chosen for the startup I worked at was well connected and offer introductions to other high profile devs and companies. When we had to solved some harder problems, they recommended folks to reach out to. You cannot under estimate the value of a VC network even as an early employee.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Anyone looking to gain insight into how to operate a company in the VC age of startups should try working for a company as early as the seed stage. You will work on problems (not just code) and make connections that you do not otherwise. My intro in to programming was after dropping out of my M.B.A.. program, thinking I needed that degree to network my way into a higher-paying job. Working at a startup was a better experience and cheaper than that program.&lt;/p&gt;

&lt;p&gt;Some more thoughts I wanted to mention that didn't fits above. &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;If private equity firms reach out to purchase your stock, that is a sign the company is doing well and potentially raising another round.&lt;/li&gt;
&lt;li&gt;If the company offers to buy stock from you for cash, that is a sign the company is doing well. Probably don't sell unless you absolutely need the cash because your salary is below market rate. &lt;/li&gt;
&lt;li&gt;If the company mentions runway in weeks and not months, consider either switching to sales or interviewing elsewhere just in case.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I hope you find this helpful if you consider an early stage company. I am happy to answer questions if you got 'em.&lt;/p&gt;

</description>
      <category>reflection</category>
    </item>
    <item>
      <title>WHAT  IS  AMAZON  DYNAMODB ?</title>
      <author>Adeline Makokha</author>
      <pubDate>Mon, 24 Jan 2022 17:09:56 +0000</pubDate>
      <link>https://dev.to/adelinemakokha/what-is-amazon-dynamodb--1jj9</link>
      <guid>https://dev.to/adelinemakokha/what-is-amazon-dynamodb--1jj9</guid>
      <description>&lt;p&gt;It is a fully managed NoSQL database service that provides fast and predictable performance with seamless scalability.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;FEATURES of DYNAMODB&lt;/strong&gt;&lt;br&gt;
• Fully managed NoSQL database service&lt;br&gt;
• Key/value store and document store&lt;br&gt;
• It's a non-relational, key-value type of database&lt;br&gt;
• Fully serverless&lt;br&gt;
• Push button scaling&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yxYTYhcy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lqc9sk5ftebla2z82zp7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yxYTYhcy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lqc9sk5ftebla2z82zp7.png" alt="features of dynamodb" width="349" height="144"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;DYNAMODB STREAMS&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It captures a time-ordered sequence of item-level modifications in any DynamoDB table and stores this information in a log for up to 24 hours.&lt;/p&gt;

&lt;p&gt;Applications can access this log and view the data items as they appeared before and after they were modified, in near-real time.&lt;/p&gt;

&lt;p&gt;• Application inserts/updates or deletes item.&lt;br&gt;
• A record is written to DynamoDB stream.&lt;br&gt;
• A Lambda function is triggered.&lt;br&gt;
• The Lambda function writes to CloudWatch Logs.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4DACGaIj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/84syy4sh7jxghcgycs5e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4DACGaIj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/84syy4sh7jxghcgycs5e.png" alt="Image description" width="319" height="158"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;DYNAMODB TIME TO LIVE&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Amazon DynamoDB Time to Live (TTL) allows you to define a per-item timestamp to determine when an item is no longer needed.&lt;/p&gt;

&lt;p&gt;Shortly after the date and time of the specified timestamp, DynamoDB deletes the item from your table without consuming any write throughput.&lt;/p&gt;

&lt;p&gt;TTL is provided at no extra cost as a means to reduce stored data volumes by retaining only the items that remain current for your workload’s needs.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;DYNAMODB ACCELERATOR  (DAX)&lt;/strong&gt;&lt;br&gt;
It is a fully managed, highly available, in-memory cache for Amazon DynamoDB that delivers up to a 10 times performance&lt;br&gt;
improvement from milliseconds to microseconds.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9CNNvePK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/88jwnf898ajnrno06uqw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9CNNvePK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/88jwnf898ajnrno06uqw.png" alt="Image description" width="305" height="165"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;FEATURES OF DAX&lt;/strong&gt;&lt;br&gt;
• Improves performance from milliseconds to microseconds.&lt;br&gt;
• Can be a read-through cache and write-through cache.&lt;br&gt;
• Used to improve READ and WRITE performance.&lt;br&gt;
• You don't need to modify application logic since DAX is compatible with existing DynamoDB API calls.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;DYNAMODB  GLOBAL TABLES&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;DynamoDB Global Tables provides you with a fully managed, multi-region, and multi-active database that delivers fast, local, read and write performance for massively scaled, global applications.&lt;/p&gt;

&lt;p&gt;Global tables replicate your DynamoDB tables automatically across your choice of AWS Regions.&lt;/p&gt;

</description>
      <category>database</category>
      <category>dynamodb</category>
      <category>nosql</category>
      <category>scalability</category>
    </item>
    <item>
      <title>How to make a custom Debounce hook in react js</title>
      <author>Rajesh Royal</author>
      <pubDate>Mon, 24 Jan 2022 16:41:00 +0000</pubDate>
      <link>https://dev.to/rajeshroyal/how-to-make-a-custom-debounce-hook-in-react-js-4gcc</link>
      <guid>https://dev.to/rajeshroyal/how-to-make-a-custom-debounce-hook-in-react-js-4gcc</guid>
      <description>&lt;p&gt;I could have use the &lt;strong&gt;Loadash&lt;/strong&gt; naaahh... 🙅‍♀️ Loadash is too expensive. &lt;/p&gt;

&lt;p&gt;So here is how you can make your own debounce effect with &lt;strong&gt;custom hooks&lt;/strong&gt; in &lt;em&gt;react js&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;useDebouncedEffect.tsx&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useEffect&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;useDebouncedEffect&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;effect&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;any&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;deps&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;any&lt;/span&gt;&lt;span class="p"&gt;[],&lt;/span&gt; &lt;span class="nx"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;handler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;effect&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="nx"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;clearTimeout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;handler&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="c1"&gt;// eslint-disable-next-line react-hooks/exhaustive-deps&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[...(&lt;/span&gt;&lt;span class="nx"&gt;deps&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="p"&gt;[]),&lt;/span&gt; &lt;span class="nx"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To use this hook simply call It like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useDebouncedEffect&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./useDebouncedEffect&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

 &lt;span class="c1"&gt;// debounce search onchange&lt;/span&gt;
  &lt;span class="c1"&gt;// eslint-disable-next-line react-hooks/exhaustive-deps&lt;/span&gt;
  &lt;span class="nx"&gt;useDebouncedEffect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="c1"&gt;// function which will be running on effect, in our case when something changes in search box.&lt;/span&gt;
       &lt;span class="nx"&gt;changeSearchState&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="c1"&gt;// this is the dependency, if it changes it will trigger the debounce again&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;search&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="c1"&gt;// time to wait before effect runs&lt;/span&gt;
    &lt;span class="nx"&gt;debounceTimeInMilliseconds&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;credit - from Internet [R&amp;amp;D]&lt;/p&gt;

&lt;p&gt;Thanks for reading this far 😃&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Fact: Do you know you can hit that follow button on top right and make it disappear 😄. Do not believe me try once 👍&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>New Course Announcement</title>
      <author>Cody Loyd</author>
      <pubDate>Mon, 24 Jan 2022 16:23:59 +0000</pubDate>
      <link>https://dev.to/theodinproject/new-course-announcement-3hj</link>
      <guid>https://dev.to/theodinproject/new-course-announcement-3hj</guid>
      <description>&lt;p&gt;We have a &lt;em&gt;huge&lt;/em&gt; gift for you today.  Our existing HTML and CSS course has been completely reworked from the ground up.(You can find the new stuff in our full-stack &lt;a href="https://www.theodinproject.com/paths/full-stack-ruby-on-rails"&gt;Rails&lt;/a&gt; and &lt;a href="https://www.theodinproject.com/paths/full-stack-javascript?"&gt;JavaScript&lt;/a&gt; paths) The course that is being replaced was some of the oldest content on our site.  Some of it dated all the way back to 2013 when Odin was first constructed, and it was really ready for a makeover.&lt;/p&gt;

&lt;p&gt;The new content has been carefully crafted to give you the tools you need to be successful in modern web development contexts, and should help you to be able to make the projects you'll be creating in the rest of our curriculum really stand out. We cover many of the latest developments in HTML and CSS such as flexbox, grid, custom-properties (aka CSS-variables), and of course we have an updated section on 'responsive design', so that you'll be able to make your projects mobile-ready.&lt;/p&gt;

&lt;p&gt;In addition to writing a ton of new content, we've also reconsidered the placement of this content in our curriculum.  You'll notice that our HTML/CSS content is now split into two smaller courses (&lt;a href="https://www.theodinproject.com/paths/full-stack-javascript/courses/intermediate-html-and-css"&gt;here&lt;/a&gt; and &lt;a href="https://www.theodinproject.com/paths/full-stack-javascript/courses/advanced-html-and-css"&gt;here&lt;/a&gt;).  We want to give you the prerequisites you need to be successful, but we don't want you to feel bogged down by too much content before you get into the other JavaScript or Ruby courses.&lt;/p&gt;

&lt;p&gt;If you were working on the existing HTML/CSS course, we would recommend going back and starting this new one from scratch.  It really is better in every way.  You can still find the old lessons on &lt;a href="https://github.com/TheOdinProject/curriculum/tree/main/html_css"&gt;Github&lt;/a&gt; if you need to reference something.&lt;/p&gt;

&lt;p&gt;Additionally, if you're working through our Rails or JavaScript curriculum, you'll see that this new stuff has been inserted before your current position. You can judge for yourself how you want to handle this.  Feel free to finish your current course, or find a good mid-way stopping point before jumping back and completing this new content.&lt;/p&gt;

&lt;p&gt;As always, this curriculum is a group effort, so when you inevitably find a missing comma, or some "interesting" grammar don't hesitate to submit a Pull Request to our curriculum repo and let us know.&lt;/p&gt;

&lt;p&gt;Happy Styling!&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Bubble Sort</title>
      <author>Payalsasmal</author>
      <pubDate>Mon, 24 Jan 2022 16:15:46 +0000</pubDate>
      <link>https://dev.to/payalsasmal/bubble-sort-5bk9</link>
      <guid>https://dev.to/payalsasmal/bubble-sort-5bk9</guid>
      <description>&lt;p&gt;Hi Everyone, Hope you are safe.&lt;br&gt;
I thought to create a series of sorting algorithms. I will try my best to make it simple. If you still have doubt let me know in the comment section.&lt;/p&gt;

&lt;p&gt;Let's begin........&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Background:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Bubble sort is the simplest algorithm. This is used for understanding purpose of a student. How the sorting algorithms works.&lt;/li&gt;
&lt;li&gt;Bubble sort is good for small size of input.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;What is Bubble sort:&lt;/strong&gt;&lt;br&gt;
Take the larger number to the end and repeatedly swapping the adjacent elements.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Examples:&lt;/strong&gt;&lt;br&gt;
arr = [4, 8, 1, 2, 6, 7]&lt;br&gt;
&lt;strong&gt;First times:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;[4, 8, 1, 2, 6, 7] -&amp;gt; it compares between first and 2nd element i.e, 4&amp;gt;8. it is false. so, it didn't swap.&lt;/li&gt;
&lt;li&gt;[4, 8, 1, 2, 6, 7] -&amp;gt; it compares between 2nd and 3rd element i.e 8&amp;gt;1. Now array is [4, &lt;strong&gt;1&lt;/strong&gt;, &lt;strong&gt;8&lt;/strong&gt;, 2, 6, 7].same way it will go for others array values.&lt;/li&gt;
&lt;li&gt;[4, 1, 8, 2, 6, 7] -&amp;gt; [4, 1, &lt;strong&gt;2&lt;/strong&gt;, &lt;strong&gt;8&lt;/strong&gt;, 6, 7], 8&amp;gt;2,swapped it.&lt;/li&gt;
&lt;li&gt;[4, 1, 2, 8, 6, 7] -&amp;gt; [4, 1, 2, &lt;strong&gt;6&lt;/strong&gt;, &lt;strong&gt;8&lt;/strong&gt;, 7], 8&amp;gt;6,swapped it.&lt;/li&gt;
&lt;li&gt;[4, 1, 2, 6, 8, 7] -&amp;gt; [4, 1, 2, 6, &lt;strong&gt;7&lt;/strong&gt;, &lt;strong&gt;8&lt;/strong&gt;], 8&amp;gt;7,swapped it.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Second times:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;[4, 1, 2, 6, 7, 8] -&amp;gt; [&lt;strong&gt;1&lt;/strong&gt;, &lt;strong&gt;4&lt;/strong&gt;, 2, 6, 7, 8], 4&amp;gt;1,swapped it.&lt;/li&gt;
&lt;li&gt;[1, 4, 2, 6, 7, 8] -&amp;gt; [1, &lt;strong&gt;2&lt;/strong&gt;, &lt;strong&gt;4&lt;/strong&gt;, 6, 7, 8], 4&amp;gt;2,swapped it.&lt;/li&gt;
&lt;li&gt;[1, 2, 4, 6, 7, 8] -&amp;gt; [1, 2, 4, 6, 7, 8], elements(4 &amp;amp; 6) are already in correct position so it did not swap.&lt;/li&gt;
&lt;li&gt;[1, 2, 4, 6, 7, 8] -&amp;gt; [1, 2, 4, 6, 7, 8], elements(6 &amp;amp; 7) are already in correct position so it did not swap.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It will go for other iterations. Check the below illustration for better understanding.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Slx1DkrM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/siqy1unnhdjv3mij3jn9.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Slx1DkrM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/siqy1unnhdjv3mij3jn9.jpg" alt="bubble sort explanation" width="792" height="730"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;We can see that larger element is going at end position using this algorithm.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Let's implement so far we discussed:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Cj-TRuY6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6anu0jz0sjxt3t0wqimh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Cj-TRuY6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6anu0jz0sjxt3t0wqimh.png" alt="bubble sort code" width="880" height="272"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;output:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jmqoE4AC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4krto2t2jkpn3p8xdkhf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jmqoE4AC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4krto2t2jkpn3p8xdkhf.png" alt="output of bubble sort" width="880" height="90"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Time complexity:&lt;/strong&gt;&lt;br&gt;
The time complexity of this algorithm is &lt;strong&gt;O(n^2)&lt;/strong&gt; for worst case.&lt;/p&gt;

&lt;p&gt;when &lt;em&gt;times=0&lt;/em&gt; we iterate till &lt;em&gt;n-1&lt;/em&gt; where n = len(arr). &lt;br&gt;
when &lt;em&gt;times=1&lt;/em&gt; we iterate till &lt;em&gt;n-2&lt;/em&gt; where n = len(arr).&lt;br&gt;
when &lt;em&gt;times=2&lt;/em&gt; we iterate till &lt;em&gt;n-3&lt;/em&gt; where n = len(arr).&lt;br&gt;
and so no.........&lt;/p&gt;

&lt;p&gt;Based on above iteration, we calculated the time complexity.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--v44HiY-H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kg7vm6332k444m14vnfk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--v44HiY-H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kg7vm6332k444m14vnfk.png" alt="time complexity" width="880" height="233"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Optimization:&lt;/strong&gt; As per the above code, time complexity would be O(n^2) even though array is in sorted order. Because the inner loop always iterate and swap the value. If we stop the swapping then the time complexity would be O(n) for sorted array.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EwVGX1Hv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vnu366rocba6fqoftmnf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EwVGX1Hv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vnu366rocba6fqoftmnf.png" alt="optimized code" width="880" height="317"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XwoRFvB8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wg2m0fbkzwjzcd190y71.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XwoRFvB8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wg2m0fbkzwjzcd190y71.png" alt="optimized output" width="880" height="83"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Worst and Average Case Time Complexity:&lt;/strong&gt; &lt;strong&gt;O(n^2)&lt;/strong&gt;. worst case occurs when array is in descending order.&lt;br&gt;
&lt;strong&gt;Best Case Time Complexity:&lt;/strong&gt; O(n) when array is in sorted order.&lt;br&gt;
&lt;strong&gt;Space Complexity:&lt;/strong&gt; There is no extra array or something else so space complexity should be &lt;strong&gt;O(1)&lt;/strong&gt;.&lt;br&gt;
&lt;a href="https://www.geeksforgeeks.org/stability-in-sorting-algorithms/#:~:text=A%20sorting%20algorithm%20is%20said,input%20array%20to%20be%20sorted"&gt;Stable&lt;/a&gt;: Yes&lt;/p&gt;

</description>
      <category>dsa</category>
      <category>python</category>
      <category>codenewbie</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Grab HTML of any Website using JavaScript without getting blocked - Wholly API</title>
      <author>Shaswat Raj</author>
      <pubDate>Mon, 24 Jan 2022 16:15:31 +0000</pubDate>
      <link>https://dev.to/sh20raj/grab-html-of-any-website-using-javascript-without-getting-blocked-wholly-api-41fl</link>
      <guid>https://dev.to/sh20raj/grab-html-of-any-website-using-javascript-without-getting-blocked-wholly-api-41fl</guid>
      <description>&lt;p&gt;🔆 Wholly API :- &lt;a href="https://wholly-api.herokuapp.com/"&gt;https://wholly-api.herokuapp.com/&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#api-endpoint"&gt;
  &lt;/a&gt;
  API endpoint-
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;https://wholly-api.herokuapp.com/get/website-data.php&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Fetch Using JavaScript :- &lt;a href="https://www.google.com/search?q=javascript+fetch+json+from+url"&gt;Ref. Google&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;See Example :-&lt;br&gt;
Fetching example.com&lt;/p&gt;

&lt;p&gt;&lt;a href="https://wholly-api.herokuapp.com/get/website-data.php?get_html=https://example.com/"&gt;https://wholly-api.herokuapp.com/get/website-data.php?get_html=https://example.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The result looks like &lt;a href="https://wholly-api.herokuapp.com/get/website-data.php?get_html=https://example.com/"&gt;here&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!doctype html&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;     &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Example Domain&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;      &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"utf-8"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;     &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;http-equiv=&lt;/span&gt;&lt;span class="s"&gt;"Content-type"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"text/html; charset=utf-8"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;     &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width, initial-scale=1"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;     &lt;span class="nt"&gt;&amp;lt;style &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text/css"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;     &lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;         &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#f0f0f2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;         &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;         &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;         &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;-apple-system&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;system-ui&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;BlinkMacSystemFont&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;"Segoe UI"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;"Open Sans"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;"Helvetica Neue"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Helvetica&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Arial&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;              &lt;span class="p"&gt;}&lt;/span&gt;     &lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;         &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;600px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;         &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5em&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;         &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;         &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fdfdff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;         &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.5em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;         &lt;span class="nl"&gt;box-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2px&lt;/span&gt; &lt;span class="m"&gt;3px&lt;/span&gt; &lt;span class="m"&gt;7px&lt;/span&gt; &lt;span class="m"&gt;2px&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;0.02&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;     &lt;span class="p"&gt;}&lt;/span&gt;     &lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="nd"&gt;:link&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="nd"&gt;:visited&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;         &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#38488f&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;         &lt;span class="nl"&gt;text-decoration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;     &lt;span class="p"&gt;}&lt;/span&gt;     &lt;span class="k"&gt;@media&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;700px&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;         &lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;             &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;             &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;         &lt;span class="p"&gt;}&lt;/span&gt;     &lt;span class="p"&gt;}&lt;/span&gt;     &lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;     &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;  &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;     &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Example Domain&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;     &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;This domain is for use in illustrative examples in documents. You may use this     domain in literature without prior coordination or asking for permission.&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;     &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://www.iana.org/domains/example"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;More information...&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#lets-do-it-using-javascript-fetch-api"&gt;
  &lt;/a&gt;
  Let's do it Using JavaScript (Fetch API)
&lt;/h2&gt;

&lt;p&gt;Ref. -&amp;gt; &lt;a href="https://www.google.com/search?q=javascript+fetch+api"&gt;https://www.google.com/search?q=javascript+fetch+api&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Sample JavaScript Code&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://wholly-api.herokuapp.com/get/website-data.php?get_html=https://example.com/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Result&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;!doctype html&amp;gt; &amp;lt;html&amp;gt; &amp;lt;head&amp;gt;     &amp;lt;title&amp;gt;Example Domain&amp;lt;/title&amp;gt;      &amp;lt;meta charset="utf-8" /&amp;gt;     &amp;lt;meta http-equiv="Content-type" content="text/html; charset=utf-8" /&amp;gt;     &amp;lt;meta name="viewport" content="width=device-width, initial-scale=1" /&amp;gt;     &amp;lt;style type="text/css"&amp;gt;     body {         background-color: #f0f0f2;         margin: 0;         padding: 0;         font-family: -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", "Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif;              }     div {         width: 600px;         margin: 5em auto;         padding: 2em;         background-color: #fdfdff;         border-radius: 0.5em;         box-shadow: 2px 3px 7px 2px rgba(0,0,0,0.02);     }     a:link, a:visited {         color: #38488f;         text-decoration: none;     }     @media (max-width: 700px) {         div {             margin: 0 auto;             width: auto;         }     }     &amp;lt;/style&amp;gt;     &amp;lt;/head&amp;gt;  &amp;lt;body&amp;gt; &amp;lt;div&amp;gt;     &amp;lt;h1&amp;gt;Example Domain&amp;lt;/h1&amp;gt;     &amp;lt;p&amp;gt;This domain is for use in illustrative examples in documents. You may use this     domain in literature without prior coordination or asking for permission.&amp;lt;/p&amp;gt;     &amp;lt;p&amp;gt;&amp;lt;a href="https://www.iana.org/domains/example"&amp;gt;More information...&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>javascript</category>
      <category>sh20raj</category>
      <category>whollyapi</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Tests Basics in Kraken CI</title>
      <author>Michal Nowikowski</author>
      <pubDate>Mon, 24 Jan 2022 16:14:31 +0000</pubDate>
      <link>https://dev.to/godfryd/tests-basics-in-kraken-ci-1lne</link>
      <guid>https://dev.to/godfryd/tests-basics-in-kraken-ci-1lne</guid>
      <description>&lt;p&gt;In the last few articles there was a lot about autoscaling. Now let's get back to the core of Kraken CI: testing.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://kraken.ci/"&gt;Kraken CI&lt;/a&gt; is a new Continuous Integration tool. It is a modern, open-source, on-premise CI/CD system that is highly scalable and focused on testing. It is licensed under Apache 2.0 license. Its source code is available on &lt;a href="https://github.com/Kraken-CI/kraken"&gt;Kraken CI GitHub page&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;Testing in Kraken CI is much more organized that it is in e.g. Jenkins. Testing is planned in branches and high level view on results is also presented for branches. Then, it is possible to dig deeper into runs, jobs and particular test case results. More details about all this can be found in the following sections.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#branch-results"&gt;
  &lt;/a&gt;
  Branch Results
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;Branch Results&lt;/code&gt; page presents high-level information about the flows and runs of a given branch. It organizes flows in rows. The top row contains the latest flow. Each flow row contains a list of boxes. Each box contains information about a run of a given stage. The order of boxes with runs is chronological according to their start time.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0f8wgIo---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fc0fqt18wt0rbrcnp1cf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0f8wgIo---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fc0fqt18wt0rbrcnp1cf.png" alt="Image description" width="880" height="550"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#run-box"&gt;
  &lt;/a&gt;
  Run Box
&lt;/h2&gt;

&lt;p&gt;The color of the run box indicates the final status of the run:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;red: one or more jobs finished with an error&lt;/li&gt;
&lt;li&gt;yellow: no errors in jobs but some test results failed or there are issues discovered in the code&lt;/li&gt;
&lt;li&gt;green: all jobs finished without error and there are no failures in tests and no issues in the code&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A run box contains:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;data about execution: total number of scheduled jobs, number of erred jobs, etc.&lt;/li&gt;
&lt;li&gt;summary of testing: pass ratio, total, regressions and fixes counts, etc&lt;/li&gt;
&lt;li&gt;issues summary: total number of discovered issues, number of new issues&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Example 1:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1cjdSzHF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/868lkpn3cckyvbmtvrua.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1cjdSzHF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/868lkpn3cckyvbmtvrua.png" alt="Image description" width="880" height="160"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This run has 1 successful job that reported tests results. There were 100 test cases run, where 16 did not pass, so the pass ratio is 16%. There were detected 15 regressions and 13 fixes. There are failures, so the box is yellow.&lt;/p&gt;

&lt;p&gt;Example 2:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--q0MQK9ex--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/es9st56u1tj0wo7dvglx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q0MQK9ex--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/es9st56u1tj0wo7dvglx.png" alt="Image description" width="391" height="136"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This run has 4 jobs with no errors. Some of them reported tests results, the other ones reported issues. There were 17 test cases run, all passed, so the pass ratio is 100%. There were detected 15 issues in the code. There are issues, so the box is yellow.&lt;/p&gt;

&lt;p&gt;Example 3:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f9-UNcR5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9nst92eu1tu50re0xjpn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f9-UNcR5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9nst92eu1tu50re0xjpn.png" alt="Image description" width="389" height="116"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This run has 2 jobs with no errors. In the reported tests results, there are 100% passed test cases. No failures and no issues, so the box is green.&lt;/p&gt;

&lt;p&gt;Example 4:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sOzC6l7W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/34iom00rf1yfj00a97vn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sOzC6l7W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/34iom00rf1yfj00a97vn.png" alt="Image description" width="392" height="134"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This run has 4 jobs with 1 error. All tests reported are passed but there could be not reported tests due to errors in job execution. There were detected 6 issues in the code. There is one erred job so the box is red.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#test-case-results-table"&gt;
  &lt;/a&gt;
  Test Case Results Table
&lt;/h2&gt;

&lt;p&gt;A job that performs testing reports test results. The test results are visible on a &lt;code&gt;Run Results&lt;/code&gt; page, in &lt;code&gt;Test Results&lt;/code&gt; tab. They are presented in a table.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1zVHGky_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o05kmlzpmxaekmt4i5v3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1zVHGky_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o05kmlzpmxaekmt4i5v3.png" alt="Image description" width="880" height="528"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The table presents test case results in each row. They contain details of the test case result:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;the result status&lt;/li&gt;
&lt;li&gt;a name of the test case&lt;/li&gt;
&lt;li&gt;job name and ID&lt;/li&gt;
&lt;li&gt;age, instability and relevancy&lt;/li&gt;
&lt;li&gt;values&lt;/li&gt;
&lt;li&gt;execution environment: system, agent group and actual agent and config&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In Kraken, a test case result besides status can contain values. Values are pairs: attribute and its value. They are also a result of a test case but hold numbers. They can hold e.g. performance data or anything similar to performance. These values are tracked over time. Kraken can draw charts of values and do more things with them.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#filtering-test-case-results"&gt;
  &lt;/a&gt;
  Filtering Test Case Results
&lt;/h2&gt;

&lt;p&gt;It is possible to filter test results by various attributes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;by &lt;code&gt;Results Status&lt;/code&gt; ie. &lt;code&gt;Passed&lt;/code&gt;, &lt;code&gt;Failed&lt;/code&gt;, etc.&lt;/li&gt;
&lt;li&gt;by &lt;code&gt;Result Change&lt;/code&gt; ie. &lt;code&gt;Fixes&lt;/code&gt;, &lt;code&gt;Regressions&lt;/code&gt;, &lt;code&gt;New&lt;/code&gt; and &lt;code&gt;No Changes&lt;/code&gt;; the change is determined between the current result and the previous result from previous run&lt;/li&gt;
&lt;li&gt;by &lt;code&gt;Age&lt;/code&gt; where age is a number of previous runs with the same result as in the current run; so e.g. age 0 means that in the previous run test case had a different result than it has now (so these are regressions and fixes); age 1 means that the current run and the previous run has the same result but the result before the previous one is different&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;New&lt;/code&gt; is a shortcut to set &lt;code&gt;Age&lt;/code&gt; between 0 and 0, ie. show changes that happened in the last run (fixes + regressions)&lt;/li&gt;
&lt;li&gt;by &lt;code&gt;Instability&lt;/code&gt; where instability is a count of result status changes in the last 10 runs; if this is 0 then in the last 10 runs test case has the same result (it was pretty stable); if this is 10 then it means that in every run of the last 10 runs the status was changing compared to the previous one (it was very unstable)&lt;/li&gt;
&lt;li&gt;by &lt;code&gt;Test Case&lt;/code&gt; name&lt;/li&gt;
&lt;li&gt;by &lt;code&gt;Job&lt;/code&gt; name of ID&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Example 1:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dC4m1LAk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i3l75qg8ckcsxdvluyrk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dC4m1LAk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i3l75qg8ckcsxdvluyrk.png" alt="Image description" width="880" height="361"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Filtering by &lt;code&gt;Result Changes&lt;/code&gt;: show only regressions. Regression means a change from non-passed status to passed status.&lt;/p&gt;

&lt;p&gt;Example 2:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HtasxJT7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cs2f3i376f51g1w5gwxv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HtasxJT7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cs2f3i376f51g1w5gwxv.png" alt="Image description" width="880" height="333"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Filtering by &lt;code&gt;Result Status&lt;/code&gt; and &lt;code&gt;Result Changes&lt;/code&gt;: show only failures that are regressions.&lt;/p&gt;

&lt;p&gt;Example 3:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7XaZIt6S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1lj63tjm8mcdvptmujso.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7XaZIt6S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1lj63tjm8mcdvptmujso.png" alt="Image description" width="880" height="305"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Filtering by &lt;code&gt;Age&lt;/code&gt;: show only results in age between 2 and 3.&lt;/p&gt;

&lt;p&gt;Example 4:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XOgvCK_j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jbgf6rn1lt3q3quph4ze.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XOgvCK_j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jbgf6rn1lt3q3quph4ze.png" alt="Image description" width="880" height="307"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Filtering by &lt;code&gt;Instability&lt;/code&gt;: show only results that have instability greater than 7 i.e. very unstable test cases.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sorting-test-case-results"&gt;
  &lt;/a&gt;
  Sorting Test Case Results
&lt;/h2&gt;

&lt;p&gt;Test case results can be sorted. This can be done using several columns:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;name&lt;/li&gt;
&lt;li&gt;result&lt;/li&gt;
&lt;li&gt;change&lt;/li&gt;
&lt;li&gt;age&lt;/li&gt;
&lt;li&gt;instability&lt;/li&gt;
&lt;li&gt;relevancy&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ceSAGwIy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hpp797b3aquycxgo4m86.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ceSAGwIy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hpp797b3aquycxgo4m86.png" alt="Image description" width="880" height="550"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;By default results are sorted by test case name.&lt;/p&gt;

&lt;p&gt;One of the most important sorting order is by &lt;code&gt;Relevancy&lt;/code&gt;.&lt;br&gt;
Relevancy is estimated according to this rules:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;0 is initial&lt;/li&gt;
&lt;li&gt;+1 for not passed&lt;/li&gt;
&lt;li&gt;+1 for not root caused problem&lt;/li&gt;
&lt;li&gt;+1 for failure&lt;/li&gt;
&lt;li&gt;+1 for instability &amp;lt;= 3&lt;/li&gt;
&lt;li&gt;+1 for age &amp;lt; 5&lt;/li&gt;
&lt;li&gt;+1 for regression&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This way the most relevant results get the highest score. They need an&lt;br&gt;
attention.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---hgxCFBW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i5yopmwj3rqtfhvqol13.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---hgxCFBW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i5yopmwj3rqtfhvqol13.png" alt="Image description" width="880" height="211"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#comments"&gt;
  &lt;/a&gt;
  Comments
&lt;/h2&gt;

&lt;p&gt;In the test case results table, it is possible to add sticky comments to test case results. When a new failure is spotted, a comment stating, e.g. the reason for the failure or link to a bug in a bug tracker may be added.&lt;/p&gt;

&lt;p&gt;To add a comment, click on the cell of a particular test case result in the &lt;code&gt;Comment&lt;/code&gt; or &lt;code&gt;Comment State&lt;/code&gt; columns.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BfX8z9AQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g3jtq20mx02fck86mysu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BfX8z9AQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g3jtq20mx02fck86mysu.png" alt="Image description" width="880" height="371"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This will reveal a dialog box that shows a form for introducing new comment and a history of previous comments related to this test case.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--waK2PNcx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zfom9d9milv36tkloj2e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--waK2PNcx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zfom9d9milv36tkloj2e.png" alt="Image description" width="880" height="474"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Each comment has a state. It can be one of:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;new&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;investigating&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bug in product&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bug in test&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The state allows concluding quickly if given failure has been analyzed and it is known where is the root cause and what needs to be fixed or if the failure still requires some investigation.&lt;/p&gt;

&lt;p&gt;If a failure is root-caused, then its relevancy is decreased by 1.&lt;/p&gt;

&lt;p&gt;If the failure persists in the subsequent test runs, the added comment is still presented next to the new results. If new facts about the failure are revealed, you may extend the comment.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#test-case-history"&gt;
  &lt;/a&gt;
  Test Case History
&lt;/h2&gt;

&lt;p&gt;Each test case has its history of results. In the table with test case results a link under the test case name leads to a page dedicated to the given test case. This page presents a table with the historical results of the test case.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---Pa-H8d0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/be4zpq0nte2zyekkojgc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---Pa-H8d0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/be4zpq0nte2zyekkojgc.png" alt="Image description" width="880" height="550"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There is another tab called &lt;code&gt;Charts&lt;/code&gt; that shows these results on charts.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8TKZjGp2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0ijft4x6np4ten69wd18.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8TKZjGp2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0ijft4x6np4ten69wd18.png" alt="Image description" width="880" height="398"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The left chart shows the history of result status. The right one presents the history of values in time. Error bars are shown if there were run multiple iterations and there were reported multiple values for a given attribute.&lt;/p&gt;

</description>
      <category>cicd</category>
      <category>testing</category>
      <category>devops</category>
    </item>
    <item>
      <title>Instagram Image downloader Using JavaScript - API - Wholly API</title>
      <author>Shaswat Raj</author>
      <pubDate>Mon, 24 Jan 2022 15:51:35 +0000</pubDate>
      <link>https://dev.to/sh20raj/instagram-image-downloader-using-javascript-api-wholly-api-10h2</link>
      <guid>https://dev.to/sh20raj/instagram-image-downloader-using-javascript-api-wholly-api-10h2</guid>
      <description>&lt;p&gt;Wholly API :- &lt;a href="https://wholly-api.herokuapp.com/" rel="dofollow"&gt;&lt;/a&gt;&lt;a href="https://wholly-api.herokuapp.com/"&gt;https://wholly-api.herokuapp.com/&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#see-this-is-the-api-endpoint"&gt;
  &lt;/a&gt;
  See This is the API endpoint-
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;https://wholly-api.herokuapp.com/websites/instagram.com/&lt;/code&gt;&lt;/p&gt;




&lt;p&gt;Fetch Using JavaScript :- &lt;a href="https://www.google.com/search?q=javascript+fetch+json+from+url"&gt;Ref. Google&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Users can fetch the websites content on there website &lt;strong&gt;even using Pure JavaScript&lt;/strong&gt;.&lt;br&gt;
The different URLs will return you different results in JSON format. Just grab the JSON Using any Server Side or Client Side Language and Show on website.&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#some-api-uses-are-given-below-"&gt;
  &lt;/a&gt;
  Some API Uses are Given Below :-
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#get-image-url"&gt;
  &lt;/a&gt;
  Get Image URL
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;https://wholly-api.herokuapp.com/websites/instagram.com/get.php?id={{Your Post's id}}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;See Example Here :-&lt;br&gt;
&lt;a href="https://wholly-api.herokuapp.com/websites/instagram.com/get.php?id=CTNfli3BBjm"&gt;https://wholly-api.herokuapp.com/websites/instagram.com/get.php?id=CTNfli3BBjm&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It will return a JSON you something like this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"status"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"CTNfli3BBjm"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"size"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"download"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"https:&lt;/span&gt;&lt;span class="se"&gt;\/\/&lt;/span&gt;&lt;span class="s2"&gt;instagram.frix7-1.fna.fbcdn.net&lt;/span&gt;&lt;span class="se"&gt;\/&lt;/span&gt;&lt;span class="s2"&gt;v&lt;/span&gt;&lt;span class="se"&gt;\/&lt;/span&gt;&lt;span class="s2"&gt;t51.2885-15&lt;/span&gt;&lt;span class="se"&gt;\/&lt;/span&gt;&lt;span class="s2"&gt;fr&lt;/span&gt;&lt;span class="se"&gt;\/&lt;/span&gt;&lt;span class="s2"&gt;e15&lt;/span&gt;&lt;span class="se"&gt;\/&lt;/span&gt;&lt;span class="s2"&gt;s1080x1080&lt;/span&gt;&lt;span class="se"&gt;\/&lt;/span&gt;&lt;span class="s2"&gt;240861377_526778131722483_3660906133080731993_n.jpg?_nc_ht=instagram.frix7-1.fna.fbcdn.net&amp;amp;_nc_cat=103&amp;amp;_nc_ohc=y2c3ORYMPZ4AX9xAkT2&amp;amp;edm=AJBgZrYBAAAA&amp;amp;ccb=7-4&amp;amp;oh=00_AT9ZHB8968BdogXjdK-qICObgQt0SstDSz03wFIdoxrSFQ&amp;amp;oe=61F63400&amp;amp;_nc_sid=78c662"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The API will be improved more.&lt;br&gt;
Features yet to be added :-&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Reels downloading&lt;/li&gt;
&lt;li&gt;Multiple Image Downloading&lt;/li&gt;
&lt;li&gt;Profile image downloading&lt;/li&gt;
&lt;li&gt;and many more...&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>javascript</category>
      <category>whollyapi</category>
      <category>sh20raj</category>
      <category>instagram</category>
    </item>
    <item>
      <title>Create a WordPress website with just a click!</title>
      <author>Mahdi Taleghani</author>
      <pubDate>Mon, 24 Jan 2022 15:47:53 +0000</pubDate>
      <link>https://dev.to/taleghanimahdi/create-a-wordpress-website-with-just-a-click-1c4f</link>
      <guid>https://dev.to/taleghanimahdi/create-a-wordpress-website-with-just-a-click-1c4f</guid>
      <description>&lt;p&gt;Hi, I'm Mahdi founder of &lt;a href="//wp1click.com"&gt;wp1click.com&lt;/a&gt;&lt;br&gt;
in this post I am going to introduce you WordPress 1 Click platform. A platform which I have created with Laravel, Docker Swarm and Python.&lt;/p&gt;

&lt;p&gt;It makes a WordPress website for you with just a click on a subdomain. so you can create your websites or landing pages with just a click without any hassle.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fE4CT29y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nymc1yobrwzflca975ax.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fE4CT29y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nymc1yobrwzflca975ax.png" alt="WordPress 1 Click Platform" width="880" height="423"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can also Connect your own Domain. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#technologies"&gt;
  &lt;/a&gt;
  Technologies
&lt;/h2&gt;

&lt;p&gt;The platform is built on top of docker swarm. means the websites are in a docker container so it can provide more optimistic security in the WordPress market! &lt;/p&gt;

&lt;p&gt;(&lt;a href="//wp1click.com"&gt;Main website &lt;/a&gt; is built with Laravel Jetstream and Inertia js.&lt;/p&gt;

&lt;p&gt;The front-end is using Vue.js&lt;/p&gt;

&lt;p&gt;The core of platform is handled by Docker python API. Laravel sends commands to a flask container and it connects to Docker socket with the &lt;a href="https://docker-py.readthedocs.io/en/stable/api.html"&gt;Docker Python API&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-your-wordpress-website-with-just-a-click"&gt;
  &lt;/a&gt;
  Creating Your WordPress website with just a Click
&lt;/h2&gt;

&lt;p&gt;for creating a website in &lt;a href="//wp1click.com"&gt;wp1click.com&lt;/a&gt; you just need to sign-up. you can sign-up easily with your Google account. &lt;/p&gt;

&lt;p&gt;then in the dashboard just enter a name for your website. e.g &lt;em&gt;mySweetWordPressWebsite&lt;/em&gt;. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qHPskHUN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mxthelxbhpvi3686y3z0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qHPskHUN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mxthelxbhpvi3686y3z0.png" alt="Image description" width="880" height="410"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then click on the Create Button! it takes about 10 to 20 seconds so wait a little :)&lt;/p&gt;

&lt;p&gt;And that's it! wait a little and after a few seconds your WordPress website is live. you just need to complete the famous WordPress installation wizard.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_chxBNyV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/31q0my32o06dkmu8guog.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_chxBNyV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/31q0my32o06dkmu8guog.png" alt="Image description" width="880" height="446"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Horray! &lt;br&gt;
Also it provides you a free subdomain. so you don't need buy any Shared Linux host or domain for just testing or creating a landing page with &lt;a href="https://elementor.com/"&gt;Elementor&lt;/a&gt; or &lt;a href="https://visualcomposer.com/"&gt;Visual Composer&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;I would appreciate it if you had any advice or comment on the platform.&lt;/p&gt;

&lt;p&gt;Enjoy your WordPress website!&lt;br&gt;
Checkout WordPress 1 Click Platform:&lt;br&gt;
&lt;a href="//wp1click.com"&gt;wp1click.com&lt;/a&gt;&lt;/p&gt;

</description>
      <category>wordpress</category>
      <category>paas</category>
      <category>docker</category>
      <category>laravel</category>
    </item>
    <item>
      <title>Transitioning from the Army into Tech</title>
      <author>Stefan</author>
      <pubDate>Mon, 24 Jan 2022 15:39:37 +0000</pubDate>
      <link>https://dev.to/codewithfan/transitioning-from-the-army-into-tech-2c8p</link>
      <guid>https://dev.to/codewithfan/transitioning-from-the-army-into-tech-2c8p</guid>
      <description>&lt;h2&gt;
  &lt;a href="#my-short-story"&gt;
  &lt;/a&gt;
  My Short Story
&lt;/h2&gt;

&lt;p&gt;Serving full time as a Soldier and teaching myself how to code is no easy journey to begin. The summer of 2021, a couple of youtube videos, and the weight of having another baby inspired me to make an early decision to change careers. Overall, the opportunity to work remote, salary, and quality of life was the hook to break into tech.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-my-journey-so-far"&gt;
  &lt;/a&gt;
  What is my journey so far
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#choosing-my-path"&gt;
  &lt;/a&gt;
  Choosing my path
&lt;/h3&gt;

&lt;p&gt;Once I decided I wanted to break into tech, I researched, googled, and youtube what the easiest, lucrative, and high salary jobs. For a beginner, I decided to go with being a front end developer. I fell upon The Odin Project because the cost, FREE! I ended up making it to the JavaScript section in Foundations and felt discourage to continue due to the difficulty of understanding functions.&lt;/p&gt;

&lt;p&gt;Now, I am currently engaged in the #100Devs cohort hosted by an excellent teacher Leon Noel. Leon is currently teaching a 30 week bootcamp for free for people that were affected by the pandemic or wanting to break into tech. I realized that I needed a course with structure, and this is my time to shine!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#finding-a-village"&gt;
  &lt;/a&gt;
  Finding a Village
&lt;/h3&gt;

&lt;p&gt;Because I enrolled into the #100Devs cohort, I was able to connect with hundreds of other people who have the same mindset of not being satisfied with their careers and wanting to make a change for themselves. I discovered being surrounded by a village pushes me to work harder, not give up so easily, and help others around me achieve their goals. Once you find your village, there is no turning back!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#are-you-thinking-about-it"&gt;
  &lt;/a&gt;
  Are you thinking about it
&lt;/h3&gt;

&lt;p&gt;My overall advice for those on the fence, JUST DO IT! It does not hurt to dive into the abyss of the unknown like coding. You will never know if it suits you if you do not try. Start today, stay disciplined, show grit, join a community, and most importantly, trust the process.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>codenewbie</category>
      <category>motivation</category>
      <category>devjournal</category>
    </item>
    <item>
      <title>Micro Frontends as Web Components</title>
      <author>Pijus Rancevas</author>
      <pubDate>Mon, 24 Jan 2022 15:19:15 +0000</pubDate>
      <link>https://dev.to/pijusr/micro-frontends-as-web-components-363f</link>
      <guid>https://dev.to/pijusr/micro-frontends-as-web-components-363f</guid>
      <description>&lt;p&gt;Quite recently, I had a task to develop a bunch of reusable components for the blockchain space and compress them into a single NPM package.&lt;/p&gt;

&lt;p&gt;The problem was that we had a lot of different teams with their preferred development stack. Now, my mission was to glide through this obstacle in the most efficient way possible, so what do I choose?&lt;/p&gt;

&lt;p&gt;&lt;em&gt;takes off the hat&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Quite right - &lt;a href="https://micro-frontends.org/"&gt;micro frontend&lt;/a&gt; infrastructure. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#structure"&gt;
  &lt;/a&gt;
  Structure
&lt;/h2&gt;

&lt;p&gt;The idea is to make a &lt;a href="https://en.wikipedia.org/wiki/Monorepo"&gt;monorepository&lt;/a&gt; which would contain applications that will act as reusable components in a form of IFrames (inline frames) deployed from Vercel and packaged through Stencil.js framework. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#monorepository"&gt;
  &lt;/a&gt;
  Monorepository
&lt;/h3&gt;

&lt;p&gt;I think it's wise to reuse UI components, styles, and configuration files where necessary. In other words, let's not make cross-functional teams into cross dysfunctional ones.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;apps/
├─ cool-app-a/
├─ cool-app-b/
common/
├─ config/
├─ ui/
├─ tsconfig/
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#deployment"&gt;
  &lt;/a&gt;
  Deployment
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://vercel.com/blog/monorepos"&gt;Vercel&lt;/a&gt; allows deploying applications from monorepository in a breeze. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#components"&gt;
  &lt;/a&gt;
  Components
&lt;/h3&gt;

&lt;p&gt;Now that we have deployment links for each application we can package them into NPM package via &lt;a href="https://stenciljs.com/"&gt;Stencil.js&lt;/a&gt; framework through IFrames.&lt;/p&gt;

&lt;p&gt;First of all, initialize the stencil project and remove all the boilerplate code. Then, create &lt;code&gt;deployments.json&lt;/code&gt; file at the top directory with the structure as so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
    "deployments": [
       {
         "name": "ComponentName",
         "tag": "component-tag-name",
         "deployment": "URL" 
       },
       ....
    ]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will act as our configuration file for our components. &lt;/p&gt;

&lt;p&gt;In the root directory add the &lt;code&gt;utility&lt;/code&gt; folder with &lt;code&gt;populate.js&lt;/code&gt; script and &lt;code&gt;package.json&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;utility/
├─ populate.js
├─ package.json
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the &lt;code&gt;package.json&lt;/code&gt; add &lt;code&gt;{ "type": "module" }&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;As an advocate of automatization, I made a script to handle the creation of stencil components. This is the &lt;code&gt;populate&lt;/code&gt; script:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import * as fs from 'fs';
import configuration from '../deployments.json';

configuration.deployments.forEach(app =&amp;gt; {
  fs.writeFile(`src/components/${app.tag}.tsx`, getTemplate(app), (err) =&amp;gt; {
    if (err) {
      console.log("🔴 ", error);
    } else {
      console.log(`✅  Component "${app.name}" populated.`)
    }
  });
})


function getTemplate(configuration) {

  return `
    import { Component, h } from '@stencil/core';

    @Component({
      tag: "${configuration.tag}",
      styleUrl: 'global.css'
    })
    export class ${configuration.name} {

      render() {
        return (
          &amp;lt;iframe src="${configuration.deployment}"
                  frameBorder="0"&amp;gt;
          &amp;lt;/iframe&amp;gt;
        );
      }
    }
    `
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So what happened here? We are taking deployment variables, adding them to the boilerplate template, and writing everything into the components folder. Simple and neat. &lt;/p&gt;

&lt;p&gt;Now, to make our work easier, in the root level &lt;code&gt;package.json&lt;/code&gt; add a new script to handle the population of components.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;"scripts": {
    "populate": "node --experimental-json-modules  utility/populate.js"
    ...
  },
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Run &lt;code&gt;npm run populate&lt;/code&gt; and deploy your components to NPM.&lt;/p&gt;

&lt;p&gt;👋&lt;/p&gt;

</description>
      <category>stencil</category>
      <category>npm</category>
      <category>javascript</category>
      <category>tutorial</category>
    </item>
  </channel>
</rss>
