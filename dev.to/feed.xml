<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>15 Must-Have Browser Extensions for Web Developers</title>
      <author>Coder</author>
      <pubDate>Mon, 13 Sep 2021 07:10:39 +0000</pubDate>
      <link>https://dev.to/thesamrtcoderzz/15-must-have-browser-extensions-for-web-developers-28k0</link>
      <guid>https://dev.to/thesamrtcoderzz/15-must-have-browser-extensions-for-web-developers-28k0</guid>
      <description>&lt;p&gt;Browsers are increasingly incorporating more &lt;span&gt;&lt;a href="#"&gt;extensions, plugins and add-ons&lt;/a&gt;&lt;/span&gt;, which are often developed by their users, making the browser more powerful, and helping us increase our productivity. Here at Awwwards, our mission is to share with you the best resources and tools on the web, so we're writing a series of blog articles on &lt;span&gt;the best extensions and plugins for major browsers&lt;/span&gt;. To kick-off, we're focusing on extensions that are offered in the Chrome Web Store, available for free and easy to install.&lt;/p&gt;
&lt;p&gt;Among the tools, we'll highlight those that are&lt;span&gt; most useful for web designers and developers&lt;/span&gt;. We hope you find them useful and get you better results. &lt;/p&gt;
&lt;p&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/chrome-extensions-for-web-developers/&amp;amp;ved=2ahUKEwjNobWsr-fyAhX_yzgGHYoACLUQFnoECAMQBQ&amp;amp;usg=AOvVaw3LrSRSp_yMsQU7StlCW8qG"&gt;15 Must-Have Browser Extensions for Web Developers&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Top 12 Color Palette Tools | Best Color Picker Tools</title>
      <author>Stacksjar</author>
      <pubDate>Mon, 13 Sep 2021 07:04:43 +0000</pubDate>
      <link>https://dev.to/stacksjar/top-12-color-palette-tools-best-color-picker-tools-4egn</link>
      <guid>https://dev.to/stacksjar/top-12-color-palette-tools-best-color-picker-tools-4egn</guid>
      <description>&lt;p&gt;In this post we are going to check top 12 color palettes tools available in the market for free. You can use this color picket tool for free for your next project.&lt;/p&gt;

&lt;p&gt;Html Color Codes&lt;/p&gt;

&lt;p&gt;Get HTML color codes, Hex color codes, RGB and HSL values with our color picker, color chart and HTML color names. Let's go!&lt;/p&gt;

&lt;p&gt;Website: &lt;a href="https://htmlcolorcodes.com/"&gt;HTML Color Codes&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--F0LM6HvC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yifrzpxckg67k5zswriw.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--F0LM6HvC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yifrzpxckg67k5zswriw.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pros and Cons of HTML Color Codes&lt;br&gt;
...&lt;/p&gt;

&lt;p&gt;HueSnap&lt;/p&gt;

&lt;p&gt;HueSnap is a color sharing community for creatives, focused on allowing users to create palettes through snapping colors from images or now, using our color tool.&lt;/p&gt;

&lt;p&gt;Website: &lt;a href="https://www.huesnap.com/"&gt;HueSnap&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Dzqr_wBA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fisyczrejba4su1emkq7.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Dzqr_wBA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fisyczrejba4su1emkq7.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pros and Cons of HTML Color Codes&lt;br&gt;
Pros&lt;/p&gt;

&lt;p&gt;Create Customized Palettes: &lt;br&gt;
Snap colors from your uploaded images or use the color wheel to create a customized palette.&lt;br&gt;
Share Your Creations&lt;br&gt;
Share your created palettes with the community and find color inspirations for projects.&lt;br&gt;
Sync between devices&lt;br&gt;
Access your color palettes through Desktop or your devices on iOS or Android.&lt;/p&gt;

&lt;p&gt;ColourLovers&lt;br&gt;
Share Your Color Ideas &amp;amp; Inspiration. COLOURlovers is a creative community where people from around the world create and share colors, palettes and patterns, discuss the latest trends and explore colorful articles... All in the spirit of love.&lt;/p&gt;

&lt;p&gt;Website: &lt;a href="https://www.colourlovers.com/"&gt;ColourLovers&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ghPmHDc7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/74gemeo0q5zqo7rg3w96.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ghPmHDc7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/74gemeo0q5zqo7rg3w96.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pros and Cons of  Colour Lovers&lt;br&gt;
...&lt;/p&gt;

&lt;p&gt;Colormind&lt;br&gt;
Colormind is a color scheme generator that uses deep learning. It can learn color styles from photographs, movies, and popular art.Different datasets are loaded each day, check back tomorrow for even more color inspiration. Visit the blog for tech info or have a look at our API&lt;/p&gt;

&lt;p&gt;Website: &lt;a href="http://colormind.io/"&gt;Colormind&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1GVij1Ms--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/57m19micpee7fwlbt1x9.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1GVij1Ms--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/57m19micpee7fwlbt1x9.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pros and Cons of Colormind:&lt;br&gt;
Colormind has a REST API. The API allows you to access all the features that you see on Colormind.io.&lt;br&gt;
The API is free for personal and non-commercial use.&lt;/p&gt;

&lt;p&gt;ColorHunt&lt;br&gt;
Color Hunt provides Color Palettes for Designers and Artists. Discover the newest hand-picked palettes of Color Hunt&lt;/p&gt;

&lt;p&gt;Website: &lt;a href="https://www.colorhunt.co/"&gt;ColorHunt&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ONkGsKwl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ejdj4m724od9zjcxo2uv.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ONkGsKwl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ejdj4m724od9zjcxo2uv.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pros and Cons of Color Hunt&lt;br&gt;
...&lt;/p&gt;

&lt;p&gt;Eggradients&lt;br&gt;
Eggradient is a color collection tool. The collection builds to make designer life easy. Generating the cool gradients is time-consuming. In this collection, the designer finds what exactly they want.&lt;/p&gt;

&lt;p&gt;Website: &lt;a href="https://www.eggradients.com/"&gt;Eggradients&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--feTF8D2F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9o0khf9cdlrbw34u9x00.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--feTF8D2F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9o0khf9cdlrbw34u9x00.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pros and Cons of Eggradients&lt;br&gt;
...&lt;/p&gt;

&lt;p&gt;Khroma&lt;br&gt;
Khroma is an AI-based color tool built specifically for designers. With Khroma, you get to train an AI algorithm by choosing 50 colours that you like. These colours are then used to train a neural network that can recognise thousands of other similar colours. Based on your preferences, the model generates an endless combination of color palettes.&lt;/p&gt;

&lt;p&gt;Website: &lt;a href="http://khroma.co/"&gt;Khroma&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--abHJKsfb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v4h7052zklk32pmedch1.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--abHJKsfb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v4h7052zklk32pmedch1.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pros and Cons of Khroma&lt;br&gt;
...&lt;/p&gt;

&lt;p&gt;Read Complete Article Here:- &lt;a href="https://stacksjar.com/post/top-12-color-palette-tools-best-color-picker-tools"&gt;Top 12 Color Palette Tools | Best Color Picker Tools&lt;/a&gt;&lt;/p&gt;

</description>
      <category>css</category>
      <category>uiweekly</category>
      <category>productivity</category>
      <category>design</category>
    </item>
    <item>
      <title>The rules of corporate life!</title>
      <author>Faieq Hamim</author>
      <pubDate>Mon, 13 Sep 2021 06:59:01 +0000</pubDate>
      <link>https://dev.to/faieqhamim/welcome-1p47</link>
      <guid>https://dev.to/faieqhamim/welcome-1p47</guid>
      <description>&lt;p&gt;1) Don't trust everyone.&lt;br&gt;
2) What happens in the office remains in the office. Never take office gossips to home &amp;amp; vice versa.&lt;br&gt;
3) Enter office on time, leave on time; your desktop is not helping improve your health.&lt;br&gt;
4) Never make GF/BF or Brothers/Sisters in office. It will always backfire on you.&lt;br&gt;
5) Expect nothing. If somebody helps, feel thankful. If not, it’s still fine; you will learn to know things on your own.&lt;br&gt;
6) Never rush for the position. If you get promoted, congratulations. If not, it doesn't matter. You will always be remembered for your knowledge and politeness, not for your designation.&lt;br&gt;
7) Never run behind office stuff always; you have better things to do in life.&lt;br&gt;
8) Avoid taking everything in your ego and personal; your salary matters, you are being paid. Use your assets to get happiness.&lt;br&gt;
9) It doesn’t matter how people treat you. Be humble and help others. Remember, you are not everyone’s cup of tea.&lt;br&gt;
10) In the end, nothing matters except family, friends, home, inner peace, and the most important being Healthy.&lt;/p&gt;

</description>
      <category>corporatelife</category>
    </item>
    <item>
      <title>CentOS 8 Depoların Düzenlenmesi, Depoların Erişilebilir Hale Getirilmesi</title>
      <author>Turan Kılıç</author>
      <pubDate>Mon, 13 Sep 2021 06:43:40 +0000</pubDate>
      <link>https://dev.to/aciklab/centos-8-depolarin-duzenlenmesi-depolarin-erisilebilir-hale-getirilmesi-1hd1</link>
      <guid>https://dev.to/aciklab/centos-8-depolarin-duzenlenmesi-depolarin-erisilebilir-hale-getirilmesi-1hd1</guid>
      <description>&lt;p&gt;Merhabalar, bugün CentOS makinelerde update işlemi sırasında karşılaşılan hatadan ve çözümünden bahsedeceğiz. Hadi başlayalım :)&lt;/p&gt;

&lt;p&gt;CentOS makinelerde, yükleme ve güncelleme için tutulan Repository'ler &lt;code&gt;/etc/yum.repos.d&lt;/code&gt; dizini altında yer almaktadır.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e-D5UqtA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/20dui46bvjmad2jqgi2y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e-D5UqtA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/20dui46bvjmad2jqgi2y.png" alt="1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Bu repo'lar sayesinde makine update edilir ve makineye uygulamalar yüklenir. Bu depolara erişim, makine internete açıksa oldukça basittir fakat makine iç ağda ise (yani internete çıkamıyorsa) erişimde hata alınabilmektedir. Alınan hata şu şekilde olabilir: &lt;/p&gt;

&lt;p&gt;&lt;code&gt;[Operation too slow. Less than 1000 bytes/sec transferred the last 30 seconds]&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Depolara erişilemediği için bu hata ile karşılaşılabilir ve gerekli güncellemeler gerçekleştirilemez ya da askıda kalır. Tekrar tekrar update işlemini gerçekleştirmeye çalışmak da herhangi bir işe yaramaz.&lt;/p&gt;

&lt;p&gt;Bu sorunun üstesinden gelmek için repo dosyalarının içerisindeki bazı satırların değiştirilmesi gerekmektedir. Çalıştığınız kurumun size sağlamış olduğu CentOS repo adresine giderek (örnek olarak: &lt;a href="http://depofiles.turan.lab.tr/centos/8/"&gt;http://depofiles.turan.lab.tr/centos/8/&lt;/a&gt; gibi bir adres) gerekli repo dosyalarının bulunduğundan emin olun.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--17kxmF-n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lcwtqnfcmt331m8u7lns.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--17kxmF-n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lcwtqnfcmt331m8u7lns.png" alt="2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Görüldüğü üzere adreste bulunan çoğu dizin, makinemizde bulunan repo dosyalarımızın adları ile uyuşmakta. (AppStream, BaseOS, FastTrack vb.)&lt;/p&gt;

&lt;p&gt;Temel güncellemeler genelde &lt;strong&gt;BaseOS.repo&lt;/strong&gt; dosyası üzerinden gerçekleştiği için sadece &lt;strong&gt;BaseOS.repo&lt;/strong&gt; dosyasının içeriğini değiştirmek yeterlidir fakat spesifik uygulamaların kurulumu ve güncellenmesi için diğer repo dosyalarının içeriğinin de değiştirilmesi gerekmektedir.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#baseosrepo-dosyas%C4%B1n%C4%B1n-d%C3%BCzenlenmesi"&gt;
  &lt;/a&gt;
  BaseOS.repo dosyasının düzenlenmesi
&lt;/h2&gt;

&lt;p&gt;Öncelikle &lt;strong&gt;nano&lt;/strong&gt; komutu ile BaseOS.repo dosyasını açalım.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;nano /etc/yum.repos.d/CentOS-Linux-BaseOS.repo
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Daha sonra &lt;strong&gt;mirrorlist&lt;/strong&gt; satırını yorum satırı olarak işaretleyelim ve &lt;strong&gt;baseurl&lt;/strong&gt; satırını yorum satırı olmaktan çıkarıp bize verilen adrese göre düzenleyelim:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BsViBvzp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2lbppfvf5n7brggitutd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BsViBvzp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2lbppfvf5n7brggitutd.png" alt="3"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;baseurl satırında düzenleme yaparken, &lt;code&gt;kurum_tarafından_size_verilen_adres/centos/8/BaseOS/$basearch/os/&lt;/code&gt; olduğundan emin olun.&lt;/p&gt;

&lt;p&gt;Bu işlemi gerçekleştirdikten sonra dosyayı kaydedip çıkın ve tekrar update işlemini gerçekleştirin.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yum update
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Bu sefer karşınıza erişim hatasının çıkmaması gerekiyor, eğer farklı uygulamalar ve güncellemeleri gerekiyorsa diğer repo dosyalarının da içeriklerini değiştirebilirsiniz.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#powertoolsrepo-dosyas%C4%B1n%C4%B1n-d%C3%BCzenlenmesi"&gt;
  &lt;/a&gt;
  PowerTools.repo dosyasının düzenlenmesi
&lt;/h2&gt;

&lt;p&gt;Örnek olarak benim powertools reposu içerisindeki paketlere ihtiyacım var. İlk olarak dosyayı düzenliyorum.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;nano /etc/yum.repos.d/CentOS-Linux-PowerTools.repo
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Dosyanın ilk hali:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Cu0HPwHZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1nwwlzz0lu3184p92z3y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Cu0HPwHZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1nwwlzz0lu3184p92z3y.png" alt="4"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Yapılan işlemler:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Mirrorlist satırı yorum satırı olarak işaretlendi,&lt;/li&gt;
&lt;li&gt;Baseurl satırı yorum satırı olmaktan çıkarıldı,&lt;/li&gt;
&lt;li&gt;Baseurl satırındaki url kısmı kurumun vermiş olduğu adrese göre düzenlendi.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Dosyanın son hali:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9HVPfIFP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gws6vb3t70hb37pmny04.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9HVPfIFP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gws6vb3t70hb37pmny04.png" alt="5"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Update işlemi:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yum update
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V7dnuUcs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2we13fbeugcsz5ecl31s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V7dnuUcs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2we13fbeugcsz5ecl31s.png" alt="6"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Makinem hali hazırda güncel olduğu için &lt;strong&gt;Nothing to do&lt;/strong&gt; yazmakta böylelikle herhangi bir update işlemi gerçekleşmeyecek. Sizin makinenizde ise update işlemi başarıyla başlayacaktır.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>How to choose the right website designing company?</title>
      <author>Purpleno</author>
      <pubDate>Mon, 13 Sep 2021 06:24:40 +0000</pubDate>
      <link>https://dev.to/purpleno_inc/how-to-choose-the-right-website-designing-company-ec8</link>
      <guid>https://dev.to/purpleno_inc/how-to-choose-the-right-website-designing-company-ec8</guid>
      <description>&lt;p&gt;Are you looking for a distinct web interface which is good enough to enhance the user experience of your target web visitors? Well, to get the mission accomplished what you need in the first place is a bespoke &lt;a href="https://www.purpleno.in/website-designing-services.html"&gt;website designing company&lt;/a&gt; by your side. &lt;br&gt;
However, getting any web design entity will not serve your purpose. You need to have a company that provides optimal performance and ensures your profitability. That's where website designing company Kolkata will be of great assistance. &lt;/p&gt;

&lt;p&gt;Important factors behind selecting website design at Kolkata&lt;/p&gt;

&lt;p&gt;So, without much ado, we should now venture into the most vital aspects which every conscious business owner must mull over before he or she contacts as well as selects a &lt;a href="https://www.purpleno.in/website-designing-services.html"&gt;website designing company in Kolkata&lt;/a&gt; to shape up their digital presence.  &lt;/p&gt;

&lt;p&gt;Estimates of the cost factors &lt;/p&gt;

&lt;p&gt;Cost factors come to the forefront above every other point of consideration. When you decide on the services for your web interface,  you happen to give a careful thought to this aspect in the first place. Web design costs tend to vary depending on whether you are going to opt for a static interface or a dynamic interface. You need to be very cautious in this aspect. If you think that a service provider is plopping additional expenses on you, then it's a good idea to check your references.  One note of advice: a genuine service provider is never going to be on your nerves and hackle you with unjustified designing costs. &lt;/p&gt;

&lt;p&gt;Trusted communication processes &lt;/p&gt;

&lt;p&gt;The communication process which you intend to carry out with the service provider should be a pristine one. There is no place for misconduct as well as non-transparent dealings. You should judge the true value of the web design service provider depending on how translucent and upright they choose to be with you.  &lt;/p&gt;

&lt;p&gt;Figure out their core area of expertise&lt;/p&gt;

&lt;p&gt;Before you start teaming up with the service provider, it's important to check their work portfolio. A quick look at their portfolio will help you delve deep into their core areas of expertise. &lt;/p&gt;

&lt;p&gt;Samples of responsive designs &lt;/p&gt;

&lt;p&gt;Check out the samples and get to know how they deal with the fundamentals such as the content of the website, visual enhancements, and aesthetics as well as usability aspects. &lt;/p&gt;

&lt;p&gt;Promotion strategies &lt;/p&gt;

&lt;p&gt;When you intend to shop for solutions in the fringe of low cost website designing company Kolkata, you should clench onto the leverage of a proficient team to cater perfect remedies for your complex issues. The entity should be able to stop by the right admixture of creative marketing support for the web interface which you had them design for you.    A true designing professional should be through with promotional activities which should be carried out on social media platforms and via other digital podiums. i&lt;/p&gt;

&lt;p&gt;Hope we could share some inscrutable and effective insight that would add colors in your efforts of touching base with the apt &lt;a href="https://www.purpleno.in/"&gt;low cost website designing company Kolkata&lt;/a&gt;. &lt;/p&gt;

</description>
      <category>websitedesig</category>
    </item>
    <item>
      <title>Re-architecting authentication with Service Workers</title>
      <author>Gaurav Behere</author>
      <pubDate>Mon, 13 Sep 2021 06:06:42 +0000</pubDate>
      <link>https://dev.to/gauravbehere/re-architecting-authentication-with-service-workers-4j6j</link>
      <guid>https://dev.to/gauravbehere/re-architecting-authentication-with-service-workers-4j6j</guid>
      <description>&lt;p&gt;A use case of changing the authentication mechanism of a web application without touching a lot of legacy codebase&lt;br&gt;
&lt;/p&gt;

&lt;br&gt;
Many times you would encounter situations where you have a legacy codebase in front of you which has been in the market for quite a while. It may be written in a technology that is seeing a downward trend in terms of popularity. You cannot make a change very easily in the architecture of such applications as the amount of risk, testing efforts &amp;amp; impact is huge.&lt;br&gt;
Let me run you through such a use case where we recently had to change the authentication mechanism of an existing legacy web application from a JSP session &amp;amp; a cookie-based authentication mechanism to an MSAL (Microsoft Authentication Library) token-based authentication method.&lt;br&gt;
What this essentially means is the login should grant a token to the web application acquiring the token using MSAL (react-msal) in our case &amp;amp; the same token should be used for making further calls to the server.&lt;br&gt;
Read more about MSAL tokens here:&lt;br&gt;
&lt;a href="https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/acquire-token.md"&gt;https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/acquire-token.md&lt;/a&gt;&lt;br&gt;

&lt;h2&gt;
  &lt;a href="#challenges"&gt;
  &lt;/a&gt;
  Challenges
&lt;/h2&gt;

&lt;p&gt;There are two challenges we are looking at:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;b&gt;Changes to the webserver&lt;/b&gt;: The web server should be able to authenticate our requests with the token that the client application is going to send as a bearer token.&lt;/li&gt;
&lt;li&gt;
&lt;b&gt;Changes to the legacy UI code written in JSP&lt;/b&gt;: The amount of legacy code which is an amalgamation of many UI technologies where there are requests like POST from FORM submits, XHR calls, calls through native JS fetch, Jquery’s $.ajax &amp;amp; a bit of axios too. It becomes very hard to avoid changes in almost every part of the code &amp;amp; still get the new authentication mechanism working where every call to our server should have a bearer token attached to the HTTP header.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lpyqzQBK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1050/1%2AkFSS6PQtTtxIG66AVRJOwQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lpyqzQBK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1050/1%2AkFSS6PQtTtxIG66AVRJOwQ.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Adding to the complexity of the application, the code base grew up with a lot of acquisitions of companies adding to the integrations in the existing codebase. Thus the application grew horizontally in terms of technology over the last 10 years.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NSdAYvqF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1050/0%2A6knY-qVrAJOBwvx1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NSdAYvqF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1050/0%2A6knY-qVrAJOBwvx1.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Also when you have such a legacy codebase, it becomes hard to keep the knowledge fresh. There are pieces of the code that developers might not have even looked at for a long long time. Touching such code may result in unaccounted for side effects as the application has a significant number of customers who are using different versions &amp;amp; flows of the application.&lt;/p&gt;



&lt;h3&gt;
  &lt;a href="#how-can-we-have-a-centralized-solution-which-avoids-making-changes-to-a-lot-of-files"&gt;
  &lt;/a&gt;
  How can we have a centralized solution which avoids making changes to a lot of files?
&lt;/h3&gt;

&lt;p&gt;&lt;b&gt;Service workers &amp;amp; promises to the rescue.&lt;/b&gt;&lt;br&gt;
We try to avoid changes in the front-end code updating the APIs to authenticate based on the incoming MSAL token.&lt;br&gt;
The solution is to capture all the network calls originated from the web application &amp;amp; append a bearer token in the HTTP header in the request.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FPwiGkNS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1400/1%2AQpmgo07lva2ft-0iMFMusA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FPwiGkNS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1400/1%2AQpmgo07lva2ft-0iMFMusA.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Take a hold of all the network calls generated by your web application using a service worker registered at the root of your web application.
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;fetch&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;token&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;some dummy token&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// This needs to be requested from MSAL library&lt;/span&gt;

  &lt;span class="c1"&gt;// Responding with a custom promise&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;promise&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// edit event.request &amp;amp; respond with a fetch of a new request with new headers&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;sourceHeaders&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{};&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;pair&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;entries&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;sourceHeaders&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;pair&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;pair&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;newHeaders&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;sourceHeaders&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Authorization&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Bearer: &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;token&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;newRequest&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;newHeaders&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;mode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;cors&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="nx"&gt;resolve&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;respondWith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;promise&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;In the fetch event we need to respond with a new request that has HTTP headers we need. In the gist above, we are just adding a dummy auth token to the request. Here we do a couple of things:
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;a. We copy all the headers of the incoming request.
b. We create a new request with incoming headers &amp;amp; a new authorization header containing a token.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;b&gt;Now let us get the right token.&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Here comes the tricky part. A service worker comes with its own limitations, it has no access to DOM &amp;amp; it can’t access shared storage between the page &amp;amp; itself. Somehow we need to get the token from the main thread &amp;amp; the container app.&lt;br&gt;
Here is a good article explaining how to establish communication between a service worker &amp;amp; the container page.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://felixgerschau.com/how-to-communicate-with-service-workers/"&gt;https://felixgerschau.com/how-to-communicate-with-service-workers/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We choose the Broadcast API to get away with the need of the two parties to remember the ports to have a 1:1 communication channel.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4V4FlL-f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1050/1%2ANFN2uS3PocIlm9Y0R6Xvrg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4V4FlL-f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1050/1%2ANFN2uS3PocIlm9Y0R6Xvrg.png"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Create a channel for communication&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;channel&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;BroadcastChannel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;TOKEN_EXCHANGE&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getAToken&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;promise&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Listen to token response&lt;/span&gt;
    &lt;span class="nx"&gt;channel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onmessage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="c1"&gt;// Send a token request to the main thread&lt;/span&gt;
    &lt;span class="nx"&gt;channel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;postMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;TOKEN_REQUEST&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;promise&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#changes-in-the-container-app"&gt;
  &lt;/a&gt;
  Changes in the container app
&lt;/h3&gt;

&lt;p&gt;The container app now needs to listen to the messages on the same broadcast channel &amp;amp; respond with a token.&lt;br&gt;
This allows up to keep the front end legacy code as-is &amp;amp; at the same time have a new authentication mechanism.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#things-to-note"&gt;
  &lt;/a&gt;
  Things to note
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;As our solution is based on service workers, promises &amp;amp; Broadcast API, browser compatibility can be a limitation.&lt;/li&gt;
&lt;li&gt;We still had to re-factor the APIs to honor tokens in the request for authentication.&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>architecture</category>
      <category>authentication</category>
    </item>
    <item>
      <title>Which one learn first, React.js or Node.js?</title>
      <author>Al Hasan Dhali</author>
      <pubDate>Mon, 13 Sep 2021 06:04:11 +0000</pubDate>
      <link>https://dev.to/alhasandhali/which-one-learn-first-react-js-or-node-js-1jii</link>
      <guid>https://dev.to/alhasandhali/which-one-learn-first-react-js-or-node-js-1jii</guid>
      <description></description>
      <category>javascript</category>
      <category>react</category>
      <category>node</category>
    </item>
    <item>
      <title>Tips To Become Great Programmer Of All Time</title>
      <author>Coder</author>
      <pubDate>Mon, 13 Sep 2021 06:02:31 +0000</pubDate>
      <link>https://dev.to/thesamrtcoderzz/tips-to-become-great-programmer-of-all-time-4gic</link>
      <guid>https://dev.to/thesamrtcoderzz/tips-to-become-great-programmer-of-all-time-4gic</guid>
      <description>&lt;p&gt; A good programmer is someone who always looks both ways before crossing a one-way street. ~Doug Linder&lt;/p&gt;

&lt;p&gt;Let me start by saying that I do not consider myself to be a competent coder. I consider my coding abilities to be mediocre, and I am still learning and have a long way to go before I am even remotely satisfied with them.Yes, I am better at programming than a lot of others, but that is just because they are lazy and choose to sit about idle all day instead of programming. Their dreadful abilities make my less dreadful abilities appear fantastic.&lt;/p&gt;

&lt;p&gt;So most of the tips I will mention below are lessons learnt from failed endeavours, they are what I have wanted to be and I am not. So lets dive in. &lt;/p&gt;

&lt;p&gt;Read More: &lt;b&gt;&lt;a href="https://www.codelivly.com/tips-to-become-a-great-programmer/"&gt;Tips to become a great programmer&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Intro to Doppler: Real-life Use Case</title>
      <author>uma victor</author>
      <pubDate>Mon, 13 Sep 2021 05:57:43 +0000</pubDate>
      <link>https://dev.to/umavictor6/intro-to-doppler-real-life-use-case-4g1a</link>
      <guid>https://dev.to/umavictor6/intro-to-doppler-real-life-use-case-4g1a</guid>
      <description>&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;Managing secrets in an application can be a headache. You might have your secrets all over your application and you don’t want to cause chaos in your DevOps workflow. Doppler has got  you covered in managing your secrets. In this tutorial we will look at how we can use doppler to manage and secure our secrets.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#goals"&gt;
  &lt;/a&gt;
  Goals
&lt;/h2&gt;

&lt;p&gt;In this article we have an e-commerce store hooked up to firebase and a chatting system for the buyer to seller communications, both of these services need API keys for the application to function. We will look at how to set up a project in doppler, move our secrets from the traditional &lt;code&gt;.env&lt;/code&gt; file in our project to doppler and setting a fallback for the secrets.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#secret-management"&gt;
  &lt;/a&gt;
  Secret Management
&lt;/h2&gt;

&lt;p&gt;In most modern applications, you will most likely &lt;br&gt;
be using digital authentication credentials (secrets). These secrets can be APIs, tokens, keys, and passwords used in our application or even in micro-services. Secret managers are a convenient and secure storage system for storing these digital authentication credentials (secrets). The secret manager provides a center or a single point or location where you can access and audit these secrets&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-need-for-secret-managers"&gt;
  &lt;/a&gt;
  The need for secret managers
&lt;/h2&gt;

&lt;p&gt;By far the most critical component of any organization's security strategy is passwords and keys which are used to authenticate and set control access to critical systems and services. Because of how important it is for organizations to make sure that third parties do not have access to the business data or customer information, bring about the rise of secret managers&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#doppler-as-a-secret-manager"&gt;
  &lt;/a&gt;
  Doppler as a secret manager
&lt;/h2&gt;

&lt;p&gt;I came across this wonderful service Doppler which has significantly increased my productivity. The Doppler secret manager makes life easier for developers as there is no need for storing application secrets as an environmental variable or have them hardcoded. &lt;br&gt;
The Doppler CLI is a powerful tool that gives developers a centralized view of their app configuration in every environment. It allows them to easily access all of their secrets and provides them with a single, easy-to-use dashboard.&lt;br&gt;
With all languages supported, the Doppler Secret Manager is designed to work seamlessly across all types of apps. Another amazing thing about the doppler service is the numerous integrations with other services like AWS, digital ocean, and other third-party deployment services making for a good developer experience.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#real-world-use-case-market-place-app"&gt;
  &lt;/a&gt;
  Real World Use case: Market Place App
&lt;/h2&gt;

&lt;p&gt;We have a real-world e-commerce site and in this section, we will be looking at how we can manage the secrets in this application. In our e-commerce site, we have used Firebase for our backend in authorizing users and as a database for storing application data. &lt;br&gt;
We have integrated the app with a chat feature using the cometchat API, where buyers and sellers can discuss and agree before buying a product. We can’t achieve all these functionalities without the use of API keys for connecting with these third-party services. That's where Doppler comes in allowing us to secure our application secrets.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#app-structure"&gt;
  &lt;/a&gt;
  App Structure
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;     ┣ cometchat-pro-vue-chat-ui-kit 
     ┣ src
     ┃ ┣ Services
     ┃ ┃ ┗ productService.js
     ┃ ┣ assets
     ┃ ┣ components
     ┃ ┃ ┣ Navigation.vue
     ┃ ┃ ┗ Product.vue
     ┃ ┣ router
     ┃ ┃ ┗ index.js
     ┃ ┣ views
     ┃ ┃ ┣ Home.vue
     ┃ ┃ ┣ Login.vue
     ┃ ┃ ┣ NewProduct.vue
     ┃ ┃ ┣ ProductShow.vue
     ┃ ┃ ┗ Register.vue
     ┃ ┣ App.vue
     ┃ ┗ main.js
     ┣ .browserslistrc
     ┣ .editorconfig
     ┣ .env
     ┣ .eslintrc.js
     ┣ .gitignore
     ┣ README.md
     ┣ babel.config.js
     ┣ mockData.json
     ┣ package.json
     ┣ postcss.config.js
     ┣ tailwind.config.js
     ┣ vue.config.js
     ┗ yarn.lock
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Above, we have our file structure and the main focus here is our &lt;code&gt;.env&lt;/code&gt; file that contains all the secrets for our application to connect to both firebase and the cometchat service. In the &lt;code&gt;.env&lt;/code&gt; file, we have&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;VUE_APP_COMETCHAT_APP_ID=192762995a541380
VUE_APP_COMETCHAT_API_KEY=685396b8625e38046f36b7a272b938cedfb4d756
VUE_APP_COMETCHAT_REGION=us
VUE_APP_FIREBASE_API_KEY=AIzaSyDaxAj6IDIXz3Fi13yycyJtwTE3S2XMI70
VUE_APP_FIREBASE_AUTH_DOMAIN=etsy-clone-faf39.firebaseapp.com
VUE_APP_FIREBASE_PROJECT_ID=etsy-clone-faf39
VUE_APP_FIREBASE_STORAGE_BUCKET=etsy-clone-faf39.appspot.com
VUE_APP_FIREBASE_MESSAGING_SENDER_ID=828703135046
VUE_APP_FIREBASE_APP_ID=1:828703135046:web:b9aec5771661dafaef0147
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
  &lt;a href="#setting-up-doppler"&gt;
  &lt;/a&gt;
  Setting up Doppler
&lt;/h2&gt;

&lt;p&gt;To use Doppler we first create an account. After creating an account, we are prompted to create a workspace that you can name whatever you want. Then Doppler provides a user-friendly walkthrough to show you where and what some functionalities are.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lLqtR1Du--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_58727F8984E67F39A261CDB28758B66C8658E243E7EA77385CC78B8C67BB1481_1631114800389_createworkspace.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lLqtR1Du--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_58727F8984E67F39A261CDB28758B66C8658E243E7EA77385CC78B8C67BB1481_1631114800389_createworkspace.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#creating-a-project"&gt;
  &lt;/a&gt;
  Creating a Project
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xb5rJEgo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_58727F8984E67F39A261CDB28758B66C8658E243E7EA77385CC78B8C67BB1481_1631114952583_createproject.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xb5rJEgo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_58727F8984E67F39A261CDB28758B66C8658E243E7EA77385CC78B8C67BB1481_1631114952583_createproject.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Creating a project with Doppler is very straightforward. Although doppler comes with an example project already set up, you can click on the plus icon to create a new project. In my case, I will call the project &lt;code&gt;etsy-ecommerce&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IYXLL8Qu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_58727F8984E67F39A261CDB28758B66C8658E243E7EA77385CC78B8C67BB1481_1631115130785_projectnaming.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IYXLL8Qu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_58727F8984E67F39A261CDB28758B66C8658E243E7EA77385CC78B8C67BB1481_1631115130785_projectnaming.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once you create a project, Doppler immediately provides you with three environments which are the&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Development&lt;/li&gt;
&lt;li&gt;Staging&lt;/li&gt;
&lt;li&gt;Production&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The environment provided by doppler is where we manage secrets we will be using in our application and API configurations.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---Ywxe8au--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_58727F8984E67F39A261CDB28758B66C8658E243E7EA77385CC78B8C67BB1481_1631115157593_devpage.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---Ywxe8au--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_58727F8984E67F39A261CDB28758B66C8658E243E7EA77385CC78B8C67BB1481_1631115157593_devpage.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#installing-doppler"&gt;
  &lt;/a&gt;
  Installing Doppler
&lt;/h2&gt;

&lt;p&gt;In this section, we will talk about how to get you started with using the Doppler CLI and managing your secrets. In the Doppler installation guide, there are different shell commands for installing the CLI. I’m using Ubuntu, so there will be a difference in the command for installation. &lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# Install pre-reqs
sudo apt-get update &amp;amp;&amp;amp; sudo apt-get install -y apt-transport-https ca-certificates curl gnupg

# Add Doppler's GPG key
curl -sLf --retry 3 --tlsv1.2 --proto "=https" 'https://packages.doppler.com/public/cli/gpg.DE2A7741A397C129.key' | sudo apt-key add -

# Add Doppler's apt repo
echo "deb https://packages.doppler.com/public/cli/deb/debian any-version main" | sudo tee /etc/apt/sources.list.d/doppler-cli.list

# Fetch and install latest doppler cli
sudo apt-get update &amp;amp;&amp;amp; sudo apt-get install doppler
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;After running the commands above, we can check if the CLI is successfully installed by running&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;doppler --version
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;We need a way for our local machine to authenticate with doppler to pull in secrets. We can do this by running &lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;doppler login
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;We will be asked to open a browser window, where we will authenticate with our email, then an auth token to log in will appear in our terminal which we can use to authenticate doppler.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YDmPkLqZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_58727F8984E67F39A261CDB28758B66C8658E243E7EA77385CC78B8C67BB1481_1631115306930_authenticate.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YDmPkLqZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_58727F8984E67F39A261CDB28758B66C8658E243E7EA77385CC78B8C67BB1481_1631115306930_authenticate.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;All we have to do now is choose our workspace and if we check our terminal, we can see we have received a welcome message.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-doppler-to-manage-our-app-secret"&gt;
  &lt;/a&gt;
  Using Doppler to Manage Our App Secret
&lt;/h2&gt;

&lt;p&gt;We want to replace the &lt;code&gt;.env&lt;/code&gt; file in our project, so we copy all the content we have in the &lt;code&gt;.env&lt;/code&gt; file and paste it as our secret in development build in doppler and save it. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--68m4sgoj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_58727F8984E67F39A261CDB28758B66C8658E243E7EA77385CC78B8C67BB1481_1631115620061_secretsadded.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--68m4sgoj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_58727F8984E67F39A261CDB28758B66C8658E243E7EA77385CC78B8C67BB1481_1631115620061_secretsadded.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now the secrets have been registered successfully and we can now delete the &lt;code&gt;.env&lt;/code&gt; file in our project.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wGAqve6f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_58727F8984E67F39A261CDB28758B66C8658E243E7EA77385CC78B8C67BB1481_1631115680900_addsecrets.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wGAqve6f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_58727F8984E67F39A261CDB28758B66C8658E243E7EA77385CC78B8C67BB1481_1631115680900_addsecrets.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In our terminal, we run the setup command to configure doppler&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;doppler setup
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;we choose the project we are working on which is &lt;code&gt;etsy-ecommerce&lt;/code&gt; and select the environment, in this case, the development environment. We can now run our application. Instead of the regular way of starting the project which is &lt;code&gt;yarn run serve&lt;/code&gt;, we will use&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;doppler run -- yarn serve
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;What this command does is it fetches the latest secrets that we stored in doppler and injects them as environmental variables in the node.js process. Now we can delete the &lt;code&gt;.env&lt;/code&gt; file from our project and everything is working perfectly.&lt;br&gt;
To update the secrets in doppler all we have to do is change the secret value and restart our app and our secrets are automatically updated.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;We have come to the end of the tutorial. We looked at how to set up a project in doppler, move our secrets from the traditional &lt;code&gt;.env&lt;/code&gt; file in our project to doppler and, updating our secrets.&lt;/p&gt;

</description>
      <category>security</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Must-Have Weapons in Your React Armory</title>
      <author>Gaurav Behere</author>
      <pubDate>Mon, 13 Sep 2021 05:48:48 +0000</pubDate>
      <link>https://dev.to/gauravbehere/must-have-weapons-in-your-react-armory-1pcc</link>
      <guid>https://dev.to/gauravbehere/must-have-weapons-in-your-react-armory-1pcc</guid>
      <description>&lt;p&gt;Weapons (tools) make a soldier (developer) effective. Advanced and effective weapons (tools) in your armory ensure you have the firepower to handle the complexity of an ever-growing code base.&lt;br&gt;
Let’s look at a few of the tools I used in my last project. These tools helped me to write code quickly yet maintain quality.&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#react-dev-tools"&gt;
  &lt;/a&gt;
  React Dev Tools
&lt;/h2&gt;

&lt;p&gt;Programming is 20% coding and 80% debugging. Debugging is what makes a programmer efficient in comparison to others.&lt;br&gt;
React Developer Tools let you inspect a React tree, including the component hierarchy, props, state, and more. To get started, just open the React Developer Tools and switch to the React Components or React Profiler tab.&lt;br&gt;
By selecting one of the components in the tree, you can inspect and edit its current props and state in the panel on the right. In the breadcrumbs, you can inspect the selected component, the component that created it, the component that created that one, and more.&lt;br&gt;
React developer tools are available for &lt;a href="https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi"&gt;Chrome&lt;/a&gt; and &lt;a href="https://addons.mozilla.org/en-US/firefox/addon/react-devtools"&gt;Firefox&lt;/a&gt; as an extension.&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#styled-components"&gt;
  &lt;/a&gt;
  Styled Components
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sCbQQ-yQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/516/1%2ACrJ9gMVMHtMOhGgY1obVJg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sCbQQ-yQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/516/1%2ACrJ9gMVMHtMOhGgY1obVJg.png"&gt;&lt;/a&gt; &lt;br&gt;
While styling components, we also have to take care of vendor prefixes for cross-browser operability. If we’re using LESS or SASS we have to compile code to CSS.&lt;br&gt;
With a component being an individual entity and a basic building block for building apps, it’s recommended for styling to be included within the component, rather than the container app taking care of styling with class names.&lt;br&gt;
Styled components allow us to keep the styles within the component, coupled with the JavaScript code.&lt;br&gt;
Read about some more benefits &lt;a href="https://www.styled-components.com/docs/basics#motivation"&gt;here&lt;/a&gt;.&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#reactintl"&gt;
  &lt;/a&gt;
  React-Intl
&lt;/h2&gt;

&lt;p&gt;Having strings, a lot of text in the UI, and having to internationalize it can be painful at times. With the right translation based on browser locale or user preference, presenting the user interface in a different language can be tricky.&lt;br&gt;
React-Intl handles it in an elegant way, wrapping your components in a scope and rendering strings based on the locale.&lt;br&gt;
With support for formatting dates, numbers, plurals, etc out of the box, it makes handling such translations easy. Moreover, for a fully-fledged translation conversion, you can have translations based on languages you want to support and you can configure React-Intl to pick up the right translation file at runtime.&lt;br&gt;
Read more &lt;a href="https://github.com/formatjs/react-intl/blob/master/docs/Getting-Started.md#introduction"&gt;here&lt;/a&gt;.&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#storybook"&gt;
  &lt;/a&gt;
  Storybook
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PtQpDc3G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1100804485616566273/sOct-Txm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PtQpDc3G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1100804485616566273/sOct-Txm.png"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://storybook.js.org/"&gt;Storybook&lt;/a&gt; allows you to write and test components in isolation.&lt;br&gt;
When there are multiple people working on UI components that need integration at a later point in time, storybook makes it easier for individual developers to write and test their components in isolation.&lt;br&gt;
Moreover, the storybook also serves as a living document of what has been done so far. You can look at all the components at a glance and check how they behave. You can play with a component by modifying supplied props and testing its behavior.&lt;br&gt;
I may sound crazy if you’ve only worked with a smaller codebase but when projects grow, there are times when a developer ends up writing a component that already existed or a behavior variation of an existing component could have met the purpose. In such cases, the storybook acts as a go-to page to see what components &amp;amp; what behaviors already exist.&lt;br&gt;
Check out how you can add stories to your components and make it available as a storybook, &lt;a href="https://github.com/storybookjs/storybook"&gt;here&lt;/a&gt;.&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#react-testing-library"&gt;
  &lt;/a&gt;
  React Testing Library
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lSDYucfB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/testing-library/react-testing-library/main/other/goat.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lSDYucfB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/testing-library/react-testing-library/main/other/goat.png"&gt;&lt;/a&gt;&lt;br&gt;
It comes last in this piece but this is the most important one and a lifesaver when testing React apps.&lt;br&gt;
Based on this principle, and I quote the author,&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;The more your tests resemble the way your software is used, the more confidence they can give you.&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;The biggest confusion I have as a developer is when writing tests whether my suite is under mocked or over mocked. Am I testing with the right expectations?&lt;br&gt;
React Testing Library comes up with guidelines about what should be tested, allowing us to test the DOM changes and updates as good as what the end-user will perceive.&lt;br&gt;
Combine it with Jest and you get a robust set of APIs that you need to be able to render your components in isolation, mimic behavioral changes, and observe DOM changes.&lt;br&gt;
Get started &lt;a href="https://testing-library.com/docs/dom-testing-library/intro"&gt;here&lt;/a&gt;.&lt;/p&gt;




&lt;br&gt;&lt;br&gt;
I have listed the tools that have helped me. That said, there may be tools that have helped you, which you think are better than the ones I’ve listed. I’d love to hear about them.

</description>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>tooling</category>
    </item>
    <item>
      <title>Electron vs. The Native Windows Frameworks</title>
      <author>Ali Sherief</author>
      <pubDate>Mon, 13 Sep 2021 05:38:03 +0000</pubDate>
      <link>https://dev.to/zenulabidin/electron-vs-the-native-windows-frameworks-27om</link>
      <guid>https://dev.to/zenulabidin/electron-vs-the-native-windows-frameworks-27om</guid>
      <description>&lt;p&gt;Electron is starting to be used in many different popular applications, such as VSCode and WhatsApp, simply because of its cross-platform feature. But is that the only advantage that Electron provides?&lt;/p&gt;

&lt;p&gt;As we will see by the end of this article, it is not the only benefit. We will look at how simpler it is to write a Windows app in Electron vs. native frameworks such as C++/C# WindowsForms and WPF. Why just Windows? Because the vast majority of programs are written for it, so for many categories of programs (e.g. games) there is a standardized library stack that's used.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#background-tray-apps-that-display-modal%C2%A0dialogs"&gt;
  &lt;/a&gt;
  Background (tray) apps that display modal dialogs
&lt;/h2&gt;

&lt;p&gt;Electron is probably overkill for this category. Modal dialogs are simple to create using WindowsForms, and C# also makes minimizing windows and displaying their notification (tray) icon very simple. This can also be done in Electron, but &lt;a href="https://stackoverflow.com/questions/37828758/electron-js-how-to-minimize-close-window-to-system-tray-and-restore-window-back"&gt;with a little more work&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#apps-with-a-custom%C2%A0theme"&gt;
  &lt;/a&gt;
  Apps with a custom theme
&lt;/h2&gt;

&lt;p&gt;Because WindowsForms does not support making custom window themes, developers use the WPF framework when they want to create a custom theme for their C# app. This process could take a lot of time, depending on the complexity of the theme.&lt;/p&gt;

&lt;p&gt;Of course, theme-designing in Electron also takes time, but it's helped by the abundance of HTML UI components that can be installed and inserted directly from &lt;code&gt;npm&lt;/code&gt;, the NodeJS package manager. Only some WPF UI controls are free to use, while the vast majority remain closed-source, internal, and private, away from the public eye. While most HTML UI components are open-source and easy to obtain from Github.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#apps-with-heavy-apiweb-service-integration"&gt;
  &lt;/a&gt;
  Apps with heavy API/web service integration
&lt;/h2&gt;

&lt;p&gt;Messaging clients such as Discord, Telegram, and Slack fall into this category. On C#, networking is done using the System.Net namespace, or more usually, with the &lt;a href="https://dotnet.microsoft.com/apps/aspnet"&gt;ASP.NET&lt;/a&gt; framework. In C++, more low-level socket functions are used, hence why complex networking is traditionally done in C#.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://docs.microsoft.com/en-us/dotnet/api/system.net?view=net-5.0"&gt;System.Net&lt;/a&gt; has classes to manage cookies, network credentials, requests and responses, and HTTP listeners, among others. When used correctly, formidable network-enabled C# programs can be developed.&lt;/p&gt;

&lt;p&gt;A positive trait of C# networking classes is that the compiler will detect most of the incorrect usages of these classes, which can save you hours of runtime debugging. This is not the case for Node.js and Electron apps, where all code is evaluated at runtime, and could silently fail then.&lt;/p&gt;

&lt;p&gt;Worse (for Electron), as the bundled code is usually minified, it is difficult to get a stack trace that corresponds to your source code.&lt;/p&gt;

&lt;p&gt;That is not to say that Electron is not good for building network apps. On the contrary, libraries such as Axios and node-fetch take care of networking very well. Asynchronous requests are also (slightly) easier to perform on NodeJS due to the language architecture. Additionally, NestJS is often used to make entire back-end APIs.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#video-games-and-other-gpuintense-apps"&gt;
  &lt;/a&gt;
  Video games and other GPU-intense apps
&lt;/h2&gt;

&lt;p&gt;While HTML5 games built using WebGL-emitting game engines such as Unity are starting to emerge, C#/C++ and WPF still dominate the video game industry, due to the heavy use of graphics frameworks such as DirectX and OpenGL. In particular, there is no easy way to integrate Electron and DirectX, because the latter is a Windows-specific technology.&lt;/p&gt;

&lt;p&gt;CAD &amp;amp; designer programs, and other kinds of graphics-accelerated programs, make use of OpenGL instead of DirectX, and since Electron apps can use WebGL, the level of difficulty of developing these kinds of applications in both platforms is about the same.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#microsoft-store%C2%A0apps"&gt;
  &lt;/a&gt;
  Microsoft Store apps
&lt;/h2&gt;

&lt;p&gt;Here is a surprise: &lt;a href="https://www.electronjs.org/docs/tutorial/windows-store-guide"&gt;You can publish Microsoft Store apps that are built with Electron&lt;/a&gt;. They will need at least Windows 10 1607 to run, and they will compile to AppX packages that you can publish on the Store after Microsoft manually verifies the application.&lt;/p&gt;

&lt;p&gt;So in this area, it doesn't look like there are advantages or drawbacks to using either language, because the end-product is the same - with the exception that C# can make UWP apps, but Electron can't, but to be fair, most people are not running UWP apps on the alternate platforms such as Xbox anyway.&lt;/p&gt;




&lt;p&gt;The conclusion of all this is that whether you choose to write your app in C# and WPF or in NodeJS and Electron depends on whether you plan to port it to browsers eventually, or whether you want to use GPU acceleration. C#/C++ is the clear winner for GPU-accelerated programs, while for deploying your desktop app to the web, Electron is the way to go.&lt;/p&gt;

&lt;p&gt;Desktop app deployment to web browsers has some uses. For instance, if you make an open-source code editor using Electron, then services that let you run and test code online can embed your editor inside their service, for people to use on the web. This is actually how Stackblitz is embedding VScode and a Chromium browser window in its web IDE.&lt;/p&gt;

&lt;p&gt;Cover image by &lt;a href="https://elements.envato.com/solar-panel-with-blue-sky-ME7TRYT"&gt;Envato Elements&lt;/a&gt;&lt;/p&gt;

</description>
      <category>windows</category>
      <category>electron</category>
      <category>node</category>
      <category>healthydebate</category>
    </item>
    <item>
      <title>Highly Rated and Used CSS Properties</title>
      <author>Coder</author>
      <pubDate>Mon, 13 Sep 2021 05:37:30 +0000</pubDate>
      <link>https://dev.to/thesamrtcoderzz/high-rated-and-loved-css-properties-9pf</link>
      <guid>https://dev.to/thesamrtcoderzz/high-rated-and-loved-css-properties-9pf</guid>
      <description>&lt;p&gt;Whether you're at the beginning of your CSS journey or somewhere else, you got to admit - a number of CSS properties is massive.&lt;/p&gt;
&lt;p&gt;And it's easy to confuse yourself in that vast sea. &lt;/p&gt;
&lt;p&gt;You're copying code from StackOverflow until you find a solution that fits. But how will that scale? Why does it even work?&lt;/p&gt;
&lt;p&gt;Most of the time, you don't care about the answer. You just focus on the result.&lt;/p&gt;
&lt;p&gt;When building a website, some of the CSS properties are must-haves; yet, it's hard to recognize them. &lt;/p&gt;
&lt;p&gt;This article exists to help you solve the most common CSS problems while building a website.&lt;/p&gt;
&lt;p&gt;Let's dive into properties you cannot avoid. &lt;/p&gt;

&lt;p&gt;Read More: &lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/all-css-properties-you-need-to-know-to-build-a-website/&amp;amp;ved=2ahUKEwj-otjisOfyAhVJyzgGHXG4CUcQFnoECAMQBQ&amp;amp;usg=AOvVaw2_ALco9oEYEYfcDMBxpqL0&amp;amp;cshid=1630829382032"&gt;&lt;b&gt;High Used and Rated CSS Properties&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
  </channel>
</rss>
