<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How I Use GitHub Actions to Auto-deploy my Vue.js Site to GitHub Pages</title>
      <author>Jason F </author>
      <pubDate>Fri, 30 Apr 2021 00:27:19 +0000</pubDate>
      <link>https://dev.to/jasonf/how-i-use-github-actions-to-auto-deploy-my-vue-js-site-to-github-pages-49bf</link>
      <guid>https://dev.to/jasonf/how-i-use-github-actions-to-auto-deploy-my-vue-js-site-to-github-pages-49bf</guid>
      <description>&lt;p&gt;I've been building a small weather forecast project as a way to learn Vue.js. I reached a point where I wanted to host this project using GitHub pages. I've used GitHub Actions in the past to deploy a few projects I created with Angular and wanted to do something similar with my Vue.js project. I searched for and found an amazing Action, appropriately titled &lt;a href="https://github.com/marketplace/actions/vue-to-github-pages"&gt;Vue to Github Pages&lt;/a&gt;, in the GitHub Marketplace. It didn't take much to get this process implemented, but figured this post may be helpful to someone out there. Here's how I set up this action.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#vueconfigjs-setup"&gt;
  &lt;/a&gt;
  vue.config.js Setup
&lt;/h1&gt;

&lt;p&gt;I had already created a vue.config.js file at the root of my project, I just had to this small snippet:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;publicPath&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/weather-vue/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The value &lt;code&gt;weather-vue&lt;/code&gt; is the name of my GitHub repository. If you're following along, you'll want to replace &lt;code&gt;weather-vue&lt;/code&gt; with the name of your repo.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#github-actions-workflow"&gt;
  &lt;/a&gt;
  GitHub Actions Workflow
&lt;/h1&gt;

&lt;p&gt;After updating my &lt;code&gt;vue.config.js&lt;/code&gt; file, I went my &lt;code&gt;weather-vue&lt;/code&gt; repo and clicked on the Actions Tab. This is where you can create "workflows". I didn't choose one of the Workflow Templates, instead I clicked the 'set up a workflow yourself' link. I copied the yaml from the &lt;a href="https://github.com/marketplace/actions/vue-to-github-pages"&gt;Vue to Github Pages&lt;/a&gt; actions page and pasted it in to the editor. I did have to add my username and my repo name. I also added a couple of environment variables that I have stored as GitHub Secrets. My entire yaml looks like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Build Vue&lt;/span&gt;
&lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;push&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;build_vue&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Build Vue&lt;/span&gt;
    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/checkout@v2&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Build-Vue&lt;/span&gt;
      &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;xRealNeon/VuePagesAction@1.0.0&lt;/span&gt;
      &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;username&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;jasonfritsche'&lt;/span&gt;
        &lt;span class="na"&gt;reponame&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;weather-vue'&lt;/span&gt;
        &lt;span class="na"&gt;token&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.GITHUB_TOKEN }}&lt;/span&gt;
      &lt;span class="na"&gt;env&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;VUE_APP_KEY&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.VUE_APP_KEY }}&lt;/span&gt;
        &lt;span class="na"&gt;VUE_APP_URL&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.VUE_APP_URL }}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I added the &lt;code&gt;env&lt;/code&gt; key to use the two environment variables. Once I was finished with the yaml file I clicked the "start commit" button. This kicked off the workflow.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#turn-on-github-pages"&gt;
  &lt;/a&gt;
  Turn on GitHub Pages
&lt;/h1&gt;

&lt;p&gt;The last thing I needed to do was go to the Settings tab/section in my repo. In Settings I clicked on the Pages section. I found the source dropdown and changed  that to &lt;code&gt;gh-pages&lt;/code&gt;. It took a little over twenty minutes for my page to be available at the url. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;This process was made super simple by the developer/s behind the &lt;a href="https://github.com/marketplace/actions/vue-to-github-pages"&gt;Vue to Github Pages&lt;/a&gt; action. I had no trouble getting my Vue.js project deployed to GitHub Pages. Now, my page is deployed on every push I make, of course that could easily be changed to be on every merge or some other action instead. &lt;/p&gt;

&lt;p&gt;Thanks for reading this post. &lt;/p&gt;

</description>
      <category>vue</category>
      <category>github</category>
    </item>
    <item>
      <title>How Secrets Work in GitHub and How to Manage Them</title>
      <author>Davide Benvegn√π</author>
      <pubDate>Thu, 29 Apr 2021 23:59:21 +0000</pubDate>
      <link>https://dev.to/n3wt0n/how-secrets-work-in-github-and-how-to-manage-them-p4o</link>
      <guid>https://dev.to/n3wt0n/how-secrets-work-in-github-and-how-to-manage-them-p4o</guid>
      <description>&lt;p&gt;GitHub lets you save your secrets, like credentials, keys, etc., and use them in GitHub Actions.&lt;/p&gt;

&lt;p&gt;Let's see &lt;em&gt;how Secrets work in GitHub and how to manage them&lt;/em&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#video"&gt;
  &lt;/a&gt;
  Video
&lt;/h3&gt;

&lt;p&gt;As usual, if you are a &lt;strong&gt;visual learner&lt;/strong&gt;, or simply prefer to watch and listen instead of reading, here you have &lt;strong&gt;the video with the whole explanation and demo&lt;/strong&gt;, which to be fair is much &lt;strong&gt;&lt;em&gt;more complete&lt;/em&gt;&lt;/strong&gt; than this post.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/tXv_npAP90k"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/tXv_npAP90k"&gt;Link to the video: https://youtu.be/tXv_npAP90k&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you rather prefer reading, well... let's just continue :)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#secrets-levels"&gt;
  &lt;/a&gt;
  Secrets Levels
&lt;/h3&gt;

&lt;p&gt;First thing we have to say is that there are 3 levels of secrets you can use in GitHub. Secrets at Organization Level, at Repository Level, and inside GitHub Actions Environments.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VuHJD-QF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z0cl5truopcb8acyu5vw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VuHJD-QF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z0cl5truopcb8acyu5vw.png" alt="Secrets"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#organization-secrets"&gt;
  &lt;/a&gt;
  Organization Secrets
&lt;/h4&gt;

&lt;p&gt;The organization secrets allow you to &lt;strong&gt;share secrets&lt;/strong&gt; to different repositories without the need of duplicating them. They can also be scoped to specific repositories or used in all of them. Remember that they aren't available in the free plan.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#repository-secrets"&gt;
  &lt;/a&gt;
  Repository Secrets
&lt;/h4&gt;

&lt;p&gt;Repository secrets, instead, as the name says are &lt;strong&gt;scoped to single repo&lt;/strong&gt;. They can be used to override the organization-defined secrets, when using the same name, and are available on the free plan.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#environment-secrets"&gt;
  &lt;/a&gt;
  Environment Secrets
&lt;/h4&gt;

&lt;p&gt;Finally, the Environments Secrets. They are scoped to a _&lt;em&gt;specific environment&lt;/em&gt;, and can override both Organization and repo secrets. They are available on the free plan, but only for public repos.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#secrets-hierarchy"&gt;
  &lt;/a&gt;
  Secrets Hierarchy
&lt;/h3&gt;

&lt;p&gt;Feature wise, those three levels are &lt;strong&gt;equivalent&lt;/strong&gt;, but they have a different hierarchy and precedence.&lt;/p&gt;

&lt;p&gt;Organization secrets are of course defined at the highest level, then we have the repository secrets underneath, and finally the environment secrets, since environments are defined inside a repo.&lt;/p&gt;

&lt;p&gt;When the GitHub Actions engine needs to access those secrets, it will &lt;strong&gt;first look into environments&lt;/strong&gt;. If there is no environment secret defined with that name, it will &lt;strong&gt;fall back to the repository secrets&lt;/strong&gt; and use those ones. And again, if there is no secret with that name, GitHub Actions will &lt;strong&gt;fall back again to the organization secrets&lt;/strong&gt;, if you are in a context withing an organization.&lt;/p&gt;

&lt;p&gt;If no secret with the given name is found in any of the secrets stores, then you'll get an error.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-update-and-manage-secrets"&gt;
  &lt;/a&gt;
  Create, Update and Manage Secrets
&lt;/h3&gt;

&lt;p&gt;Let's quickly see now how to create, update, and manage those secrets.&lt;/p&gt;

&lt;p&gt;‚ñ∂ Check the &lt;a href="https://youtu.be/tXv_npAP90k?t=122"&gt;demo section of the video&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once again, remember that once the secret has been saved, it &lt;strong&gt;will not be possible to retrieve its value manually&lt;/strong&gt; via UI or APIs. Only the GitHub Actions engine will be able to consume it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusions"&gt;
  &lt;/a&gt;
  Conclusions
&lt;/h3&gt;

&lt;p&gt;Let me know in the comment section below how you manage your secrets and if you want me to cover the integration with 3rd party secrets providers like Azure KeyVault.&lt;/p&gt;

&lt;p&gt;Also, you may want to check out &lt;a href="https://youtu.be/w_37LDOy4sI"&gt;this video&lt;/a&gt; which talks about GitHub Actions Environments in detail.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Like, share and follow me&lt;/strong&gt; üöÄ for more content:&lt;/p&gt;

&lt;p&gt;üìΩ &lt;a href="https://www.youtube.com/CoderDave"&gt;YouTube&lt;/a&gt;&lt;br&gt;
‚òï &lt;a href="https://buymeacoffee.com/CoderDave"&gt;Buy me a coffee&lt;/a&gt;&lt;br&gt;
üíñ &lt;a href="https://patreon.com/CoderDave"&gt;Patreon&lt;/a&gt;&lt;br&gt;
üëï &lt;a href="https://geni.us/cdmerch"&gt;Merch&lt;/a&gt;&lt;br&gt;
üë¶üèª &lt;a href="https://www.facebook.com/CoderDaveYT"&gt;Facebook page&lt;/a&gt;&lt;br&gt;
üê±‚Äçüíª &lt;a href="https://github.com/n3wt0n"&gt;GitHub&lt;/a&gt;&lt;br&gt;
üë≤üèª &lt;a href="https://www.twitter.com/davide.benvegnu"&gt;Twitter&lt;/a&gt;&lt;br&gt;
üë¥üèª &lt;a href="https://www.linkedin.com/in/davidebenvegnu/"&gt;LinkedIn&lt;/a&gt;&lt;br&gt;
üîâ &lt;a href="https://geni.us/cdpodcast"&gt;Podcast&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/tXv_npAP90k"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>github</category>
      <category>secrets</category>
      <category>tutorial</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>The State of Serverless Databases in AWS</title>
      <author>Ibrahim Cesar</author>
      <pubDate>Thu, 29 Apr 2021 23:10:20 +0000</pubDate>
      <link>https://dev.to/aws-builders/the-state-of-serverless-databases-in-aws-part-0-162c</link>
      <guid>https://dev.to/aws-builders/the-state-of-serverless-databases-in-aws-part-0-162c</guid>
      <description>&lt;p&gt;Databases are a key piece of any service or application, because is where gonna live your most precious assets: your data. Since my post &lt;a href="https://dev.to/aws-builders/serverless-is-ready-developers-are-not-12f9"&gt;‚ÄúServerless is Ready, Developers are Not‚Äù&lt;/a&gt;, I talked with a lot of peers about some issues in the space and a lot gravitates around tools and a great deal is about ways to handle data.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#first-we-need-to-talk-about-relational-databases-and-serverless"&gt;
  &lt;/a&gt;
  First, we need to talk about Relational Databases and Serverless
&lt;/h2&gt;

&lt;p&gt;Relational Databases and FaaS don‚Äôt play nice together by nature: RDS are connection-based, so they should work with a few long-lived clients, such as web servers, not the fast, ephemeral, spike, nature of serverless workloads.&lt;/p&gt;

&lt;p&gt;Even with the great latest improvements like &lt;a href="https://aws.amazon.com/rds/proxy/"&gt;Amazon RDS Proxy&lt;/a&gt; and cold starts becomes more and more a UX question (depending, of course, of your runtime and use-case).&lt;/p&gt;

&lt;p&gt;Still, RDS is the most familiar pattern to handle data and some could say, the ‚Äústandard‚Äù one‚ÄîNoSQL as a category, describes tools wildly different, since it encompasses all that are &lt;em&gt;not&lt;/em&gt; SQL, all stacked together. &lt;/p&gt;

&lt;p&gt;Jeremy Daly in &lt;strong&gt;Building Resilient Serverless Systems with ‚ÄúNon-Serverless‚Äù Components&lt;/strong&gt; on Serverless Days 2020 made a great talk about still use RDS models with FaaS. Is not ‚Äúeasy-peasy‚Äù or plug and play, as you can see (I highly recommend this video, is also a crash course on FaaS architectures):&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/coygxBg2wTY"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;So, in this series I‚Äôll experiment with a lot of options available, use-cases, trade-offs and get a hands-on and share my experience here. This is the starting of a series of serverless databases in AWS. I will throw third party offerings in it too, which I can use on AWS. Below is my list. If I‚Äôm missing some database or completely getting something wrong‚Äîplease, let me know!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://aws.amazon.com/rds/aurora/serverless/"&gt;Aurora Serverless&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://aws.amazon.com/dynamodb/"&gt;DynamoDB&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://aws.amazon.com/documentdb"&gt;DocumentDB&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://aws.amazon.com/elasticache/"&gt;ElastiCache&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://fauna.com/"&gt;FaunaDB&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.mongodb.com/cloud/atlas"&gt;MongoDB&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://upstash.com/"&gt;Upstash&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://aws.amazon.com/route53/"&gt;Route 53&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In the next post in this series I will go over one of these databases, try to use on a use case a little more than ‚ÄúHello World‚Äù‚Äîall is shinning and pretty in ‚ÄúHello World‚Äù projects. So, please point me out databases missing, use cases you think I should approach and so on!&lt;/p&gt;





&lt;div class="ltag__link"&gt;
  &lt;a href="/ibrahimcesar" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kfkWRBf2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--0zkQIbKi--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/189167/695f3dd9-b865-4c57-a097-5cfe07cca488.jpg" alt="ibrahimcesar image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/aws-builders/serverless-is-ready-developers-are-not-12f9" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Serverless is Ready, Developers Are Not&lt;/h2&gt;
      &lt;h3&gt;Ibrahim Cesar „Éª Mar 28 „Éª 11 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#serverless&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#aws&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#development&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;&lt;em&gt;Cover Image by &lt;a href="https://unsplash.com/@jankolar?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Jan Antonin Kolar&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/database?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

</description>
      <category>serverless</category>
      <category>database</category>
      <category>aws</category>
    </item>
    <item>
      <title>Como integrar Tailwindcss a un proyecto de React.</title>
      <author>Iosvany Alvarez</author>
      <pubDate>Thu, 29 Apr 2021 23:09:54 +0000</pubDate>
      <link>https://dev.to/lucasgio/como-integrar-tailwindcss-a-un-proyecto-de-react-112d</link>
      <guid>https://dev.to/lucasgio/como-integrar-tailwindcss-a-un-proyecto-de-react-112d</guid>
      <description>&lt;p&gt;En mis proyecto de React siempre trabajo con el framework de css Bootstrap, le da un dise√±o √∫nico a las aplicaciones. Ultimamente esta muy de moda Tailwindcss un framework css muy potente y con un build muy ligero pero;como lo integro a mi app de react?&lt;/p&gt;

&lt;p&gt;Bueno para eso debemos asumir que ya tenemos nuestra aplicaci√≥n de react, sino sigue este link &lt;a href="https://reactjs.org/docs/create-a-new-react-app.html"&gt;Create a New React App&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Bien, hecho el anterior paso vamos a integrar tailwindcss a nuestro proyecto&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#1-instalaci%C3%B3n-de-tailwindcss"&gt;
  &lt;/a&gt;
  1. Instalaci√≥n de tailwindcss
&lt;/h6&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install tailwindcss postcss-cli autoprefixer -D
npx tailwindcss init

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Este paso nos instalar√° en nuestro proyecto las depedencias de tailwindcss, postcss-cli y autoprefixer. Debemos verificar que dichas dependencias existan en el archivo package.json de nuestro proyecto.  &lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#2configuracion-de-postcssconfigjs"&gt;
  &lt;/a&gt;
  2.Configuracion de postcss.config.js
&lt;/h6&gt;

&lt;p&gt;En la ra√≠z de nuestro proyecto crearemos un archivo con el nombre de &lt;strong&gt;postcss.config.js&lt;/strong&gt; y dentro copiaremos este c√≥digo.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;module.exports = {
  plugins: [
    // ...
    require('tailwindcss'),
    require('autoprefixer'),
    // ...
  ]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Este archivo le dira a react que requiere de las dependencia de tailwind y autoprefixer y luego exportarlas.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DQB_tLvG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y6ff1334zq1wkz4anhyl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DQB_tLvG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y6ff1334zq1wkz4anhyl.png" alt="Project React"&gt;&lt;/a&gt; &lt;br&gt;
Si quieres profundizar respecto a este tema te dejo este link:&lt;br&gt;
&lt;a href="https://tailwindcss.com/docs/configuration"&gt;Configuracion de postcss.config.js&lt;/a&gt;.&lt;/p&gt;
&lt;h6&gt;
  &lt;a href="#3-crear-tailwindcss"&gt;
  &lt;/a&gt;
  3. Crear tailwind.css
&lt;/h6&gt;

&lt;p&gt;Ahora crearemos un archivo tailwind.css que sera nuestro .css como tradicionalmente conocemos.Es aconsejable crearlo en esta ruta &lt;strong&gt;src/assets/tailwind.css&lt;/strong&gt; y dentro debemos copiar el siguiente c√≥digo.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;@tailwind base;
@tailwind components;
@tailwind utilities;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;No te asuste si te marca un warning es normal.Dentro de este archivo escribiremos nuestra propia configuraci√≥n de estilos de componentes,botones,color de fuente, entre otras opciones.En estos links se profundiza m√°s sobre el tema:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://tailwindcss.com/docs/adding-base-styles"&gt;Adding-base style&lt;/a&gt;&lt;br&gt;
&lt;a href="https://tailwindcss.com/docs/extracting-components"&gt;Extracting Component&lt;/a&gt;&lt;br&gt;
&lt;a href="https://tailwindcss.com/docs/adding-new-utilities"&gt;Adding New Utilities&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;PD:En este mismo directorio creamos un archivo llamado &lt;strong&gt;main.css&lt;/strong&gt;, lo dejamos vac√≠o,aqu√≠ se almacenar√° la transpilaci√≥n del c√≥digo css de tailwindcss.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JYHMvkrI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mfu8v1nr3g9w21428pbg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JYHMvkrI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mfu8v1nr3g9w21428pbg.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h6&gt;
  &lt;a href="#4-configuraci%C3%B3n-del-packagejson"&gt;
  &lt;/a&gt;
  4. Configuraci√≥n del package.json
&lt;/h6&gt;

&lt;p&gt;Configuramos los comandos del package.json para poder ejecutar el &lt;strong&gt;npm start o npm run build&lt;/strong&gt; a producci√≥n.La configuraci√≥n es un poco diferente, ya que tenemos que compilar nuestro c√≥digo de react conjunto con el de tailwindcss, para eso en el espacio de los script copiamos estos codigos:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;"scripts": {
    "start": "npm run watch:css &amp;amp;&amp;amp; react-scripts start",
    "build": "npm run build:css &amp;amp;&amp;amp; react-scripts build",
    "test": "react-scripts test",
    "eject": "react-scripts eject",
    "build:css": "postcss src/assets/tailwind.css -o src/assets/main.css",
    "watch:css": "postcss src/assets/tailwind.css -o src/assets/main.css"
  },
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h6&gt;
  &lt;a href="#5importaci%C3%B3n-del-maincss"&gt;
  &lt;/a&gt;
  5.Importaci√≥n del main.css.
&lt;/h6&gt;

&lt;p&gt;Ya por √∫ltimo en index.js de nuestro proyecto importaremos el archivo main.css que creamos en el paso 3.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import React from 'react';
import ReactDOM from 'react-dom';
import './assets/main.css';
import App from './App.jsx';

ReactDOM.render(
  &amp;lt;React.StrictMode&amp;gt;
    &amp;lt;App /&amp;gt;
  &amp;lt;/React.StrictMode&amp;gt;,
  document.getElementById('root')
);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Tambi√©n como extra en nuestro componente App.js podemos escribir algun c√≥digo de alg√∫n componente de tailwindcss. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NdWTI6oU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2wueqik7krts0cizy7z6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NdWTI6oU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2wueqik7krts0cizy7z6.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Te dejo un link con c√≥digos de componentes de tailwindcss:&lt;br&gt;
&lt;a href="https://tailwindcss.com/docs/container"&gt;Container docs&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Una vez hecho las configuraciones ya podemos ejecutar el comando en nuestra terminal &lt;strong&gt;npm start&lt;/strong&gt; y deber√° levantar un servidor local con nuestra aplicaci√≥n.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9hZUOvws--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qnhql5q2tmgsqu43mbjf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9hZUOvws--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qnhql5q2tmgsqu43mbjf.png" alt="Alt Text"&gt;&lt;/a&gt;  &lt;/p&gt;

&lt;p&gt;Con estos 5 pasos puedes tener integrado Tailwindcss a nuestra aplicaci√≥n de React y asi poder construir poderosos componentes y con dise√±o brillantes.&lt;/p&gt;

&lt;p&gt;Saludos Codificados&lt;br&gt;
Iosvany Alvarez&lt;br&gt;
Full Stack Developer&lt;/p&gt;

</description>
      <category>react</category>
      <category>tailwindcss</category>
      <category>npm</category>
    </item>
    <item>
      <title>Advice for my younger developer self</title>
      <author>Jordi Enric</author>
      <pubDate>Thu, 29 Apr 2021 22:03:46 +0000</pubDate>
      <link>https://dev.to/jordienr/advice-for-my-younger-developer-self-iba</link>
      <guid>https://dev.to/jordienr/advice-for-my-younger-developer-self-iba</guid>
      <description>&lt;p&gt;Photo by &lt;a href="https://unsplash.com/@corinarainer?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Corina Rainer&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/taking-notes?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Someone asked this question recently and this are my thoughts about it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#write-more-amp-take-notes"&gt;
  &lt;/a&gt;
  Write more &amp;amp; take notes
&lt;/h2&gt;

&lt;p&gt;Writing is a really valuable skill for developers, the sooner you start developing it the better. Take notes so you have stuff you can write about later.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#teach-what-you-learn"&gt;
  &lt;/a&gt;
  Teach what you learn
&lt;/h2&gt;

&lt;p&gt;The best moment to teach something is when you just learned it. Apply to do workshops with other developers, write articles, create videos. Teach what you learned and you will solidify that knowledge.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#show-your-work"&gt;
  &lt;/a&gt;
  Show your work
&lt;/h2&gt;

&lt;p&gt;You'll feel imposter syndrome every time. Publish articles, create websites, try to get people to use them. You'll only find the things you can improve at when you see people reacting to your work. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#connect-with-people"&gt;
  &lt;/a&gt;
  Connect with people
&lt;/h2&gt;

&lt;p&gt;Try not to be just a lurker and participate in conversations about topics you're interested in. Give your opinion and your thoughts. Learn from others.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ask-more-questions-even-the-stupid-ones"&gt;
  &lt;/a&gt;
  Ask more questions, even the stupid ones
&lt;/h2&gt;

&lt;p&gt;Specially the stupid ones. Asking questions will start conversations that will make you learn 100% times more than tutorials and books.&lt;/p&gt;

&lt;p&gt;Asking good questions is a great skill and you develop it by asking stupid questions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#chill-you-dont-have-to-know-everything-by-tomorrow"&gt;
  &lt;/a&gt;
  Chill, you don't have to know everything by tomorrow
&lt;/h2&gt;

&lt;p&gt;Learn things as you need them. Don't rush it or you'll burn out of tutorials, books and making projects for the sake of learning technologies.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-healthy-lifestyle-will-make-you-more-productive"&gt;
  &lt;/a&gt;
  A healthy lifestyle will make you more productive
&lt;/h2&gt;

&lt;p&gt;5 hours of work a day, exercise and healthy diet will get more done than 12 hours of work a day. If it's not sustainable don't do it.&lt;/p&gt;

&lt;p&gt;Follow me on &lt;a href="https://twitter.com/jordienr"&gt;twitter&lt;/a&gt; for more.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>career</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Top 5 DEV Comments of the Past Week</title>
      <author>Gracie Gregory (she/her)</author>
      <pubDate>Thu, 29 Apr 2021 21:44:52 +0000</pubDate>
      <link>https://dev.to/devteam/top-5-dev-comments-of-the-past-week-3hba</link>
      <guid>https://dev.to/devteam/top-5-dev-comments-of-the-past-week-3hba</guid>
      <description>&lt;p&gt;&lt;em&gt;This is a weekly roundup of awesome DEV comments that you may have missed.  You are welcome and encouraged to boost posts and comments yourself using the &lt;strong&gt;&lt;a href="https://dev.to/t/bestofdev"&gt;#bestofdev&lt;/a&gt;&lt;/strong&gt; tag.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Earth Day is far from the only to celebrate &lt;a href="https://dev.to/devteam/building-a-healthier-planet-with-open-source-software-25jn"&gt;taking care of the planet&lt;/a&gt; and educating ourselves on how to be better digital stewards. &lt;a class="mentioned-user" href="https://dev.to/bezpowell"&gt;@bezpowell&lt;/a&gt;
 thanks for the fantastic resource!&lt;/p&gt;


&lt;div class="liquid-comment"&gt;
    &lt;div class="details"&gt;
      &lt;a href="/bezpowell"&gt;
        &lt;img class="profile-pic" src="https://res.cloudinary.com/practicaldev/image/fetch/s--rvzBdw3Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--qJ02YTHk--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_50%2Cq_auto%2Cw_50/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/545364/8af68779-700e-4feb-9517-e61fcb3dcfaf.png" alt="bezpowell profile image"&gt;
      &lt;/a&gt;
      &lt;a href="/bezpowell"&gt;
        &lt;span class="comment-username"&gt;BezPowell&lt;/span&gt;
      &lt;/a&gt;
      &lt;span class="color-base-30 px-2"&gt;‚Ä¢&lt;/span&gt;

&lt;a href="https://dev.to/bezpowell/comment/1dm12" class="comment-date crayons-link crayons-link--secondary fs-s"&gt;
  &lt;time&gt;
    Apr 22
  &lt;/time&gt;

&lt;/a&gt;

    &lt;/div&gt;
    &lt;div class="body"&gt;
      &lt;p&gt;The &lt;a href="https://www.websitecarbon.com/" rel="nofollow"&gt;Website Carbon Calculator&lt;/a&gt; is well worth looking at if you are interested in your website's environmental impact. The web uses a huge amount of resources, and if we all optimised our sites a little to reduce carbon emissions it would make a big impact.&lt;/p&gt;


    &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;You can absolutely count on community support here, &lt;a class="mentioned-user" href="https://dev.to/mdotcoder"&gt;@mdotcoder&lt;/a&gt;
! &lt;a href="https://dev.to/thepracticaldev/welcome-thread-v121-14bm"&gt;Welcome&lt;/a&gt; again!&lt;/p&gt;


&lt;div class="liquid-comment"&gt;
    &lt;div class="details"&gt;
      &lt;a href="/mdotcoder"&gt;
        &lt;img class="profile-pic" src="https://res.cloudinary.com/practicaldev/image/fetch/s--s09jZ15J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--yX3pxiCW--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_50%2Cq_auto%2Cw_50/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/618880/120cb272-bc55-44e7-9a47-cb6d3e37e9ea.jpeg" alt="mdotcoder profile image"&gt;
      &lt;/a&gt;
      &lt;a href="/mdotcoder"&gt;
        &lt;span class="comment-username"&gt;mdotcoder&lt;/span&gt;
      &lt;/a&gt;
      &lt;span class="color-base-30 px-2"&gt;‚Ä¢&lt;/span&gt;

&lt;a href="https://dev.to/mdotcoder/comment/1dm96" class="comment-date crayons-link crayons-link--secondary fs-s"&gt;
  &lt;time&gt;
    Apr 23
  &lt;/time&gt;

&lt;/a&gt;

    &lt;/div&gt;
    &lt;div class="body"&gt;
      &lt;p&gt;Hi everyone. I am just starting my coding journey. I want to learn Front and Back end web development as well as Python. My first mission right now is learning JavaScript. I'm self-learning and sometimes it has been a pain, but I'm determined. I will write codes! Counting on community support.&lt;/p&gt;


    &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;&lt;a href="https://dev.to/kieran6roberts/1-year-into-coding-here-are-the-tips-i-would-go-back-and-give-myself-41d2"&gt;The first year of coding&lt;/a&gt; can be full of excitement ‚Äî &lt;em&gt;and&lt;/em&gt; challenges. The kind of support that &lt;a class="mentioned-user" href="https://dev.to/thebarefootdev"&gt;@thebarefootdev&lt;/a&gt;
 showed here is what keeps DEV friendly and welcoming üí™&lt;br&gt;
&lt;/p&gt;
&lt;div class="liquid-comment"&gt;
    &lt;div class="details"&gt;
      &lt;a href="/thebarefootdev"&gt;
        &lt;img class="profile-pic" src="https://res.cloudinary.com/practicaldev/image/fetch/s--e2NuB1qZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--oAhHr4R9--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_50%2Cq_auto%2Cw_50/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/564711/6723c364-c0fb-4ceb-b623-a4c63933c51d.png" alt="thebarefootdev profile image"&gt;
      &lt;/a&gt;
      &lt;a href="/thebarefootdev"&gt;
        &lt;span class="comment-username"&gt;thebarefootdev&lt;/span&gt;
      &lt;/a&gt;
      &lt;span class="color-base-30 px-2"&gt;‚Ä¢&lt;/span&gt;

&lt;a href="https://dev.to/thebarefootdev/comment/1dn4l" class="comment-date crayons-link crayons-link--secondary fs-s"&gt;
  &lt;time&gt;
    Apr 23
  &lt;/time&gt;

&lt;/a&gt;

    &lt;/div&gt;
    &lt;div class="body"&gt;
      &lt;p&gt;This is a fantastic article. It‚Äôs collected and insightful and very well written. &lt;/p&gt;

&lt;p&gt;Well done and. Good luck in your second year. &lt;/p&gt;


    &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;Thanks &lt;a class="mentioned-user" href="https://dev.to/qwby"&gt;@qwby&lt;/a&gt;
 for the tip on &lt;a href="https://dev.to/guivern/git-how-to-fix-a-bad-commit-4068"&gt;How to Fix a Bad Commit&lt;/a&gt;! Keep up the good work!&lt;br&gt;
&lt;/p&gt;
&lt;div class="liquid-comment"&gt;
    &lt;div class="details"&gt;
      &lt;a href="/qwby"&gt;
        &lt;img class="profile-pic" src="https://res.cloudinary.com/practicaldev/image/fetch/s--_DBZ8krk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--B-LSnX65--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_50%2Cq_auto%2Cw_50/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/620049/734f4236-9fae-478f-a02f-e11c20742830.png" alt="qwby profile image"&gt;
      &lt;/a&gt;
      &lt;a href="/qwby"&gt;
        &lt;span class="comment-username"&gt;Dominik Halfkann&lt;/span&gt;
      &lt;/a&gt;
      &lt;span class="color-base-30 px-2"&gt;‚Ä¢&lt;/span&gt;

&lt;a href="https://dev.to/qwby/comment/1dnp0" class="comment-date crayons-link crayons-link--secondary fs-s"&gt;
  &lt;time&gt;
    Apr 24
  &lt;/time&gt;

    ‚Ä¢ Edited
    &lt;span class="hidden m:inline-block"&gt;
      on &lt;time&gt;
      Apr 24&lt;/time&gt;
    &lt;/span&gt;
&lt;/a&gt;

    &lt;/div&gt;
    &lt;div class="body"&gt;
      &lt;p&gt;Those are some great tips! I always loved this site called ‚ÄûOh Sh*t, git‚Äú because it has a pretty elaborative list of what can go wrong and how to fix it: &lt;a href="https://ohshitgit.com/" rel="nofollow"&gt;ohshitgit.com/&lt;/a&gt;&lt;/p&gt;


    &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;This post on &lt;a href="https://dev.to/codbugs/professionals-never-return-react-fragment-coders-do-4kim"&gt;React.Fragment&lt;/a&gt; is worth checking out. Thanks for the awesome comment, &lt;a class="mentioned-user" href="https://dev.to/pracoon"&gt;@pracoon&lt;/a&gt;
 ! We couldn't agree more. &lt;br&gt;
&lt;/p&gt;
&lt;div class="liquid-comment"&gt;
    &lt;div class="details"&gt;
      &lt;a href="/pracoon"&gt;
        &lt;img class="profile-pic" src="https://res.cloudinary.com/practicaldev/image/fetch/s--NpTbA0c9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--meHsuSOV--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_50%2Cq_auto%2Cw_50/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/256700/2e700484-27cb-4b0d-a4d3-2711e7265518.jpg" alt="pracoon profile image"&gt;
      &lt;/a&gt;
      &lt;a href="/pracoon"&gt;
        &lt;span class="comment-username"&gt;Prasham Ashesh&lt;/span&gt;
      &lt;/a&gt;
      &lt;span class="color-base-30 px-2"&gt;‚Ä¢&lt;/span&gt;

&lt;a href="https://dev.to/pracoon/comment/1dnpk" class="comment-date crayons-link crayons-link--secondary fs-s"&gt;
  &lt;time&gt;
    Apr 24
  &lt;/time&gt;

&lt;/a&gt;

    &lt;/div&gt;
    &lt;div class="body"&gt;
      &lt;p&gt;I wish one day I'd be able to express my, points in such linear and organized way!&lt;br&gt;
Good read! definitely scales me up!&lt;/p&gt;


    &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;See you next week for more great comments ‚úå&lt;/p&gt;

</description>
      <category>bestofdev</category>
    </item>
    <item>
      <title>Hello world :)</title>
      <author>Cale Cabrera</author>
      <pubDate>Thu, 29 Apr 2021 21:41:25 +0000</pubDate>
      <link>https://dev.to/caledev/hello-world-jpn</link>
      <guid>https://dev.to/caledev/hello-world-jpn</guid>
      <description>&lt;h1&gt;
  &lt;a href="#hello-world"&gt;
  &lt;/a&gt;
  Hello world!
&lt;/h1&gt;

&lt;p&gt;I'd love to introduce myself into the dev community üñ§. I've been around reading posts for a few months and I believe it's time to start sharing my knowledge and experience.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#who-i-am"&gt;
  &lt;/a&gt;
  Who I am?
&lt;/h2&gt;

&lt;p&gt;First of all, I'm Cale. A 21-year-old boy, currently studying Computer Engineering Technology in CanadaüçÅ, I'm originally from Venezuela though. &lt;/p&gt;

&lt;p&gt;Programming has changed my life. Since a I was a child I started to develop curiosity about computers and "hacking" üíª. I was so sure what I wanted to be that I started to study by myself since and I'm pretty proud of my decision.&lt;/p&gt;

&lt;p&gt;Currently, I'm learning and improving my HTML, CSS, JavaScript and React skills every day. I want to become a front-end developer üë®üèª‚Äçüíª, aspiring to Full Stack Developer though.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-am-i-starting-to-write-%E2%9C%8F"&gt;
  &lt;/a&gt;
  Why am I starting to write? ‚úèüìö
&lt;/h3&gt;

&lt;p&gt;I've learned about experienced developers, the best way to learn is teaching, sharing and helping others. I've learned so much reading posts from developers I don't even know and I believe it's my turn to help others developers ‚ú®.&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#gratefulness"&gt;
  &lt;/a&gt;
  Gratefulness ü§ç
&lt;/h6&gt;

&lt;p&gt;Thank you so much to all developers out there sharing their journey and knowledge. I truly believe I'm taking a good decision joining this loved community.&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
      <category>react</category>
    </item>
    <item>
      <title>Crash reports and usage metrics for JavaScript libraries</title>
      <author>Sophia</author>
      <pubDate>Thu, 29 Apr 2021 20:24:48 +0000</pubDate>
      <link>https://dev.to/sopharicks/crash-reports-and-usage-metrics-for-javascript-libraries-4cac</link>
      <guid>https://dev.to/sopharicks/crash-reports-and-usage-metrics-for-javascript-libraries-4cac</guid>
      <description>&lt;p&gt;At Bugout.dev (&lt;a href="https://bugout.dev/"&gt;https://bugout.dev/&lt;/a&gt;) we've built a product that helps maintainers of APIs, libraries, and command line tools understand:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Who their users are&lt;/li&gt;
&lt;li&gt;How exactly they use their software&lt;/li&gt;
&lt;li&gt;What issues their users have&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you have built a developer tool and integrate with Bugout, it runs on your user's machines only with their consent. This provides you with rich information about your users. For example, operating system, CPU architecture, version of your tool they are using, and even their email in case they are having an issue and would like your help resolving it.&lt;/p&gt;

&lt;p&gt;This week, we released the Javascript version of our usage and crash reporting library, Humbug:&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/bugout-dev"&gt;
        bugout-dev
      &lt;/a&gt; / &lt;a href="https://github.com/bugout-dev/humbug"&gt;
        humbug
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Do you build tools for developers? Get to know your users with Humbug.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
humbug&lt;/h1&gt;
&lt;p&gt;Humbug helps you understand what keeps users coming back to your developer tool as well as any
friction they experience.&lt;/p&gt;
&lt;p&gt;Humbug lets you collect basic system information and crash reports while respecting your users'
privacy. In addition to getting reports, you get to be &lt;a href="https://gdpr-info.eu/" rel="nofollow"&gt;GDPR&lt;/a&gt;-compliant from
day one.&lt;/p&gt;
&lt;p&gt;Humbug is currently available in the following programming languages:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/bugout-dev/humbug/main/./python"&gt;Python&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;System information report&lt;/li&gt;
&lt;li&gt;Error traceback report&lt;/li&gt;
&lt;li&gt;Packages available in the current Python process report&lt;/li&gt;
&lt;li&gt;Logs report&lt;/li&gt;
&lt;li&gt;Environment variables report&lt;/li&gt;
&lt;li&gt;Custom report with full content control&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/bugout-dev/humbug/main/./go"&gt;Go&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;System information report&lt;/li&gt;
&lt;li&gt;Panic report&lt;/li&gt;
&lt;li&gt;Custom report with full content control&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/bugout-dev/humbug/main/./javascript"&gt;Javascript&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;System information report&lt;/li&gt;
&lt;li&gt;Error traceback report&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If you would like support for another programming language, please &lt;a href="https://github.com/bugout-dev/humbug/issues/new"&gt;create an issue&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
Using Humbug&lt;/h2&gt;
&lt;h3&gt;
Setup&lt;/h3&gt;
&lt;p&gt;Follow the instructions in the &lt;a href="https://bugout.dev/app/public/d550eb09-7c85-4fdc-b687-9f04b730f6e1/07b21356-2e3f-4fa9-bd77-764fe903a640" rel="nofollow"&gt;Getting started with usage and crash reporting&lt;/a&gt; guide.&lt;/p&gt;
&lt;h4&gt;
From development to production&lt;/h4&gt;
&lt;p&gt;We recommend generating one token for development and testing and using different‚Ä¶&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/bugout-dev/humbug"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;We currently support Node.js as the Javascript runtime, although we plan to add browser support soon.&lt;/p&gt;

&lt;p&gt;Our package is available on npm:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt; @bugout/humbug
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you have a tool in which you'd like to try Bugout, you can start for free by signing up for an account at &lt;a href="https://bugout.dev"&gt;https://bugout.dev&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you need any help getting started, please leave a comment and we'll help you as soon as we can. We also appreciate any feedback.&lt;/p&gt;

&lt;p&gt;Thank you!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>showdev</category>
      <category>devrel</category>
    </item>
    <item>
      <title>Squeaky Portraits: Having Fun with the CSS path() Function</title>
      <author>Jhey Tompkins</author>
      <pubDate>Thu, 29 Apr 2021 20:09:59 +0000</pubDate>
      <link>https://dev.to/jh3y/squeaky-portraits-having-fun-with-the-css-path-function-2nl0</link>
      <guid>https://dev.to/jh3y/squeaky-portraits-having-fun-with-the-css-path-function-2nl0</guid>
      <description>&lt;p&gt;With the Chrome 88 release, we got support for &lt;code&gt;clip-path: path()&lt;/code&gt;. That means it now has support in "most" major browsers!&lt;/p&gt;

&lt;p&gt;With &lt;code&gt;path()&lt;/code&gt;, we‚Äôre able to use path definitions for a &lt;code&gt;clip-path&lt;/code&gt; (Catch up on what &lt;code&gt;clip-path&lt;/code&gt; is here). These path definition strings are the same as those we can use with the SVG path element. What's cool about this is that it provides a way to create shapes that before may have meant using SVG. We can even create paths that break without requiring any tricks.&lt;/p&gt;

&lt;p&gt;With the increased support came an opportunity to try something fun with it! Let‚Äôs make ‚ÄúSqueaky Portraits‚Äù! A fun take on using &lt;code&gt;clip-path: path()&lt;/code&gt; to clip the viewable area of an element into these ‚ÄúNickelodeon-esque‚Äù splats.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media ltag__twitter-tweet__media__video-wrapper"&gt;
        &lt;div class="ltag__twitter-tweet__media--video-preview"&gt;
          &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MiINq3SH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/ext_tw_video_thumb/1360019039859392515/pu/img/x73MWcrxVMe8UG0D.jpg" alt="unknown tweet media content"&gt;
          &lt;img src="/assets/play-butt.svg" class="ltag__twitter-tweet__play-butt" alt="Play butt"&gt;
        &lt;/div&gt;
        &lt;div class="ltag__twitter-tweet__video"&gt;
          
            
          
        &lt;/div&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--fkhTix2N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1355149810148515842/NBuYxo5I_normal.jpg" alt="Jhey üêªüõ† (Exploring Opportunities ‚ú®) profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Jhey üêªüõ† (Exploring Opportunities ‚ú®)
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @jh3yy
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      "Squeaky Portraits üëáüòÖ"&lt;br&gt;&lt;br&gt;Wasn't done playing with CSS clip-path: path() üòÇ&lt;br&gt;&lt;br&gt;Aiming for a splat but settled for a squeaky sound effect üòÜ&lt;br&gt;&lt;br&gt;Powered by scoped variables! üí™&lt;br&gt;&lt;br&gt;(Better with sound üëç)&lt;br&gt;&lt;br&gt;üëâ &lt;a href="https://t.co/Nuqyivpm5Y"&gt;codepen.io/jh3y/pen/qBqqK‚Ä¶&lt;/a&gt; via &lt;a href="https://twitter.com/CodePen"&gt;@CodePen&lt;/a&gt; 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      00:15 AM - 12 Feb 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1360019670393360389" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1360019670393360389" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1360019670393360389" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;h2&gt;
  &lt;a href="#creating-a-path"&gt;
  &lt;/a&gt;
  Creating a Path
&lt;/h2&gt;

&lt;p&gt;First up, we need our own SVG style path definition string. And in this case, more than one. The neat thing with &lt;code&gt;clip-path&lt;/code&gt; is that we can transition them with CSS. As long as the &lt;code&gt;clip-path&lt;/code&gt; function and number of nodes are consistent, we can transition.&lt;/p&gt;

&lt;p&gt;To make some paths, we can hop in any vector graphic editor. In this case, I‚Äôm using Figma. And instead of creating the paths from scratch, we can use a desired "splat" as a foundation. This one looks good!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AV1miFjK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jdrb2pgeoux626di1q11.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AV1miFjK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jdrb2pgeoux626di1q11.png" alt="Splat Example Found Online"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The trick here is to create more splats based on the foundation splat. And we need to do this without introducing or removing any nodes. These are the three splats I came up with. But, you could make any shapes you like as long as you stick to that rule!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cIRwTlhM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zhxqt1y5v9cz8oe9cnbb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cIRwTlhM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zhxqt1y5v9cz8oe9cnbb.png" alt="Three Different Splats Built From One Splat"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You may notice that the third splat has two blobs that separate off from the main shape. This is fine. Because SVG path definitions allow us to do this. We can start a line, close it, and move to another point to start another.&lt;/p&gt;

&lt;p&gt;But didn't I say they needed a consistent number of points? They do. And they do! Those two blobs appear for each splat. But, the trick is that we can move them behind the rest of the path when they aren't needed.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--N82b6gYt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/jh3yy/image/upload/v1619726065/jhey.dev/squeaky-portraits/splat-path_vnebjl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--N82b6gYt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/jh3yy/image/upload/v1619726065/jhey.dev/squeaky-portraits/splat-path_vnebjl.png" alt="Figma Showing Two Blobs Behind Main Path"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once we have our splats, we can export them and grab the path definition strings.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/jh3y/embed/ExZxbNW?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#applying-splats"&gt;
  &lt;/a&gt;
  Applying Splats
&lt;/h2&gt;

&lt;p&gt;To apply the splats, we're going to create variables for each path.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.portrait&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="py"&gt;--splat&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;"M161 188.375C170 193.5 177.919 193.854 186 188.375C197.919 180.294..."&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--splattier&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;"M161 188.375C170 193.5 177.919 193.854 186 188.375C197.919..."&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--splatted&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;"M232.5 256C225 251 209.5 262.5 224 281.5C232.736 292.948..."&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;These are the paths we‚Äôve lifted straight out of the exported SVG.&lt;/p&gt;

&lt;p&gt;We‚Äôre going with the names ‚Äúsplat‚Äù, ‚Äúsplattier‚Äù, and ‚Äúsplatted‚Äù. Naming things is hard. Ha! But, if we take for example the ‚Äúsplatted‚Äù SVG.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;svg&lt;/span&gt; &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;"300"&lt;/span&gt; &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;"300"&lt;/span&gt; &lt;span class="na"&gt;viewBox=&lt;/span&gt;&lt;span class="s"&gt;"0 0 300 300"&lt;/span&gt; &lt;span class="na"&gt;fill=&lt;/span&gt;&lt;span class="s"&gt;"none"&lt;/span&gt; &lt;span class="na"&gt;xmlns=&lt;/span&gt;&lt;span class="s"&gt;"http://www.w3.org/2000/svg"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;path&lt;/span&gt; &lt;span class="na"&gt;d=&lt;/span&gt;&lt;span class="s"&gt;"M232.5 256C225 251 209.5 262.5 224 281.5C232.736 292.948 238.561 297.756 251 290.5C257 287 256.114 271.924 250 264.5C243.886 257.076 240 261 232.5 256ZM147 92.5C118.738 94.6708 118 17 93 44C68 71 123.543 76.5 108 101.5C90.5 115 70.81 98.3664 64 115C56.7766 132.643 91.1967 136.948 90.5 156C89.4406 184.974 19.1766 161.499 24.5 190C29.9178 219.006 78.6461 172.635 100 193C130.207 221.808 1 248.5 58.5 291.5C94.5576 318.465 114.991 206.551 140.5 211C183.5 218.5 134.5 294 186.5 279.5C207.5 273 174.638 224.658 196 204C223.117 177.777 275.916 253 291.5 218.5C311.375 174.5 228.698 194.565 224 160C219.553 127.282 291.5 123.5 267.5 87.5C238.5 57 247 125.5 196 105.5C147 92.5 229.5 13.5 173.5 2.5C140.5 2.49999 183.532 89.694 147 92.5ZM45 92.5C36.8766 80.3149 14.1234 75.3149 6.00001 87.5C0.584412 95.6234 2.00001 120.357 14.5 115C27.9606 109.231 36.8766 124.685 45 112.5C50.4156 104.377 50.4156 100.623 45 92.5Z"&lt;/span&gt; &lt;span class="na"&gt;fill=&lt;/span&gt;&lt;span class="s"&gt;"#A91CFF"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We‚Äôre lifting out the &lt;code&gt;d&lt;/code&gt; attribute from the &lt;code&gt;path&lt;/code&gt; elements and creating CSS variables for them. Next, we need an element to apply these to. Let's create an element with the class "portrait".&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"portrait"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, apply some styling to it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.portrait&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="py"&gt;--splat&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;"M161 188.375C170 193.5 177.919 193.854 186 188.375C197.919 180.294..."&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--splattier&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;"M161 188.375C170 193.5 177.919 193.854 186 188.375C197.919..."&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--splatted&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;"M232.5 256C225 251 209.5 262.5 224 281.5C232.736 292.948..."&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--none&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;300px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;300px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#daa3f5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;clip-path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--clip&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--none&lt;/span&gt;&lt;span class="p"&gt;)));&lt;/span&gt;
  &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;clip-path&lt;/span&gt; &lt;span class="m"&gt;0.2s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here‚Äôs a demo where you can switch between the different clip states:&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/jh3y/embed/wvobxVy?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Note how the shape transitions between the three splat shapes. But, also note how we've given our element an explicit height and width. This size matches the dimensions of our SVG exports. This is &lt;em&gt;important&lt;/em&gt;. This is the one drawback of using &lt;code&gt;clip-path: path()&lt;/code&gt;. It's not responsive. The path definition is relative to the dimensions of your element. This is the same problem faced by CSS motion paths.&lt;/p&gt;

&lt;p&gt;This is fine if we're mindful of the sizes of things we're clipping. We could also create different path variables for different viewport sizes. But, if you have images that resize in a fluid way, other solutions using SVG are going to be more robust.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#interaction"&gt;
  &lt;/a&gt;
  Interaction
&lt;/h2&gt;

&lt;p&gt;For our demo, we want the splat to be interactive. We can do this with CSS alone. We can use a scoped CSS variable &lt;code&gt;--clip&lt;/code&gt; to control the current clip. And then we can update that variable on both &lt;code&gt;:hover&lt;/code&gt; and &lt;code&gt;:active&lt;/code&gt;. The &lt;code&gt;--active&lt;/code&gt; state is triggered when we press our pointer down.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.portrait&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;clip-path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--clip&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--splat&lt;/span&gt;&lt;span class="p"&gt;)));&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.portrait&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="py"&gt;--clip&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--splattier&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.portrait&lt;/span&gt;&lt;span class="nd"&gt;:active&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="py"&gt;--clip&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--splatted&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Throw that together and we get something like this. Try hovering over the splat and pressing it.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/jh3y/embed/yLVdewB?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#adding-some-character"&gt;
  &lt;/a&gt;
  Adding Some Character
&lt;/h2&gt;

&lt;p&gt;Now we can transition the splat, it needs a little something extra. What if we transform it in those states too?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.portrait&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;clip-path&lt;/span&gt; &lt;span class="m"&gt;0.2s&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;transform&lt;/span&gt; &lt;span class="m"&gt;0.2s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;scale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--scale&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--rotate&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0deg&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.portrait&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="py"&gt;--scale&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.15&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--rotate&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;30deg&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.portrait&lt;/span&gt;&lt;span class="nd"&gt;:active&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="py"&gt;--scale&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.85&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--rotate&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-10deg&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Using scoped CSS variables to apply a &lt;code&gt;transform&lt;/code&gt;, we can add something. Here we update the &lt;code&gt;scale&lt;/code&gt; and &lt;code&gt;rotation&lt;/code&gt; of our splat. We can experiment with different values and play with different effects here. Translating the element a little could look good?&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/jh3y/embed/wvoLGJL?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#adding-a-portrait"&gt;
  &lt;/a&gt;
  Adding a Portrait.
&lt;/h2&gt;

&lt;p&gt;Now for the fun stuff! I wouldn't recommend using these pictures of me. But, you can if you want ha! I had this idea that I'd take three silly pictures of myself and have them respond to the user. I got some help and ended up with these three pictures.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gpod8Eom--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h58z44yzbuscn6dxsa5x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gpod8Eom--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h58z44yzbuscn6dxsa5x.png" alt="Three Silly Poses"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then we need to put them into the portrait.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"portrait"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"portrait__img"&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"/me--standing.png"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"Me"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"portrait__img"&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"/me--noticing.png"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"Me"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"portrait__img"&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"/me--falling.png"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"Me"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That won‚Äôt look great. They need some styles.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.portrait&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.portrait__img&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Almost.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/jh3y/embed/jOVjrEB?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;How can we show and hide them on &lt;code&gt;:hover&lt;/code&gt; and &lt;code&gt;:active&lt;/code&gt;. It's a little verbose but we can use &lt;code&gt;nth-of-type&lt;/code&gt; with &lt;code&gt;display: none&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.portrait__img&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.portrait__img&lt;/span&gt;&lt;span class="nd"&gt;:nth-of-type&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.portrait&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt; &lt;span class="nc"&gt;.portrait__img&lt;/span&gt;&lt;span class="nd"&gt;:nth-of-type&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;1&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
&lt;span class="nc"&gt;.portrait&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt; &lt;span class="nc"&gt;.portrait__img&lt;/span&gt;&lt;span class="nd"&gt;:nth-of-type&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;3&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.portrait&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt; &lt;span class="nc"&gt;.portrait__img&lt;/span&gt;&lt;span class="nd"&gt;:nth-of-type&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;2&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.portrait&lt;/span&gt;&lt;span class="nd"&gt;:active&lt;/span&gt; &lt;span class="nc"&gt;.portrait__img&lt;/span&gt;&lt;span class="nd"&gt;:nth-of-type&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;1&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
&lt;span class="nc"&gt;.portrait&lt;/span&gt;&lt;span class="nd"&gt;:active&lt;/span&gt; &lt;span class="nc"&gt;.portrait__img&lt;/span&gt;&lt;span class="nd"&gt;:nth-of-type&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;2&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.portrait&lt;/span&gt;&lt;span class="nd"&gt;:active&lt;/span&gt; &lt;span class="nc"&gt;.portrait__img&lt;/span&gt;&lt;span class="nd"&gt;:nth-of-type&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;3&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Why not refactor those styles and group them up? The cascade will kick in and we won't get the effect we want.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/jh3y/embed/qBqzNrv?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#parallax-icons"&gt;
  &lt;/a&gt;
  Parallax Icons
&lt;/h2&gt;

&lt;p&gt;We're getting there but it looks a little bland. We could create a rudimentary parallax effect if we pull in an icon. Let's go with this one.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--L9lynL2k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2rrb40nhy12kjo756p00.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L9lynL2k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2rrb40nhy12kjo756p00.png" alt="Code Brackets Icon"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The trick here is to use an image as a background for our element but size it so that it tiles with &lt;code&gt;background-repeat&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.portrait&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sx"&gt;url("/code-icon.svg")&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;hsl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;80%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;70%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Neat.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/jh3y/embed/XWNLKqy?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;But, we want parallax! To get that parallax effect, we can update the &lt;code&gt;background-position&lt;/code&gt; in response to pointer movement. And we can map the pointer position against some limit that we define.&lt;/p&gt;

&lt;p&gt;Let's start by creating a utility that generates a mapping function for us. The returned function will give us the result of a value in one range mapped onto another.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;genMapper&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;inputLower&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;inputUpper&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;outputLower&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;outputUpper&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;inputRange&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;inputUpper&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;inputLower&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;outputRange&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;outputUpper&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;outputLower&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;MAP&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;input&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;outputLower&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(((&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;inputLower&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nx"&gt;inputRange&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;outputRange&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;MAP&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Take a moment to understand what‚Äôs happening here. For example, if our input range was &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;500&lt;/code&gt; and our output range was &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;100&lt;/code&gt;. What would the result of calling the returned function be with &lt;code&gt;250&lt;/code&gt;? It would be &lt;code&gt;50&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Generate a function&lt;/span&gt;
&lt;span class="nx"&gt;genMapper&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// Returns a function by going through these steps&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;inputRange&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;outputRange&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;MAP&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;input&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(((&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// If our input value is 250&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;250&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mf"&gt;0.5&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="c1"&gt;// The result!&lt;/span&gt;
&lt;span class="mi"&gt;50&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once we have our utility function to generate the mapping functions, we need a limit to use with it. And we need to generate a mapper for both the horizontal and vertical axes.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;LIMIT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;25&lt;/span&gt; &lt;span class="c1"&gt;// The amount our icons can move in pixels in either direction&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getX&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;genMapper&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerWidth&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;LIMIT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;LIMIT&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;genMapper&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHeight&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;LIMIT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;LIMIT&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The final part is tying that up to an event listener. We destructure the &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; value from the event and set CSS variables on the portrait element. The value comes from passing &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; into the respective mapping functions.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;PORTRAIT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;.portrait&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;pointermove&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;PORTRAIT&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;--x&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;getX&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="nx"&gt;PORTRAIT&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;--y&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;getY&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And now we have parallax icons!&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/jh3y/embed/vYyqKQL?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-squeak"&gt;
  &lt;/a&gt;
  The Squeak
&lt;/h2&gt;

&lt;p&gt;Last touch. It's in the title. We need some squeaks. I usually find audio bytes on sites like &lt;a href="https://freesound.org"&gt;freesound.org&lt;/a&gt;. You can get them in all places though and even record them yourself if you want.&lt;/p&gt;

&lt;p&gt;It‚Äôs not a bad idea to create an object where you can reference your &lt;code&gt;Audio&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;AUDIO&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;IN&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Audio&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/squeak-in.mp3&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="na"&gt;OUT&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Audio&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/squeak-out.mp3&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, to play an audio clip, all we need do is&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;AUDIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;IN&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;play&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We need to integrate this with our portrait. We can use the &lt;code&gt;pointerdown&lt;/code&gt; and &lt;code&gt;pointerup&lt;/code&gt; events here ‚Äì the idea being that we play one squeak when we press and another on release.&lt;/p&gt;

&lt;p&gt;If a user clicks the portrait a lot in quick succession this could cause undesirable effects. The trick is to play the desired sound and at the same time, stop the other. To "stop" a piece of &lt;code&gt;Audio&lt;/code&gt;, we can pause it and set the &lt;code&gt;currentTime&lt;/code&gt; to &lt;code&gt;0&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;PORTRAIT&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;pointerdown&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;AUDIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;OUT&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pause&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="nx"&gt;AUDIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;IN&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;currentTime&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;AUDIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;OUT&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;currentTime&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
  &lt;span class="nx"&gt;AUDIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;IN&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;play&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="nx"&gt;PORTRAIT&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;pointerup&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;AUDIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;IN&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pause&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="nx"&gt;AUDIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;IN&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;currentTime&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;AUDIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;OUT&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;currentTime&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
  &lt;span class="nx"&gt;AUDIO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;OUT&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;play&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And that gives us a ‚ÄúSqueaky Portrait‚Äù!&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/jh3y/embed/jOVjMQR?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#thats-it"&gt;
  &lt;/a&gt;
  That‚Äôs It!
&lt;/h2&gt;

&lt;p&gt;That's how you make "Squeaky Portraits". But, the actionable thing here is having fun while trying out new things.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/jh3y/embed/qBqqKRw?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;I could have morphed a couple of shapes and left it there. But, why stop there? Why not come up with an idea and have some fun with it? It's a great way to try things out and explore techniques.&lt;/p&gt;

&lt;p&gt;We:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Created the clips&lt;/li&gt;
&lt;li&gt;Morphed them with transitions&lt;/li&gt;
&lt;li&gt;Made interactive images&lt;/li&gt;
&lt;li&gt;Added Audio&lt;/li&gt;
&lt;li&gt;Created parallax with a mapping utility&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;What could you do with &lt;code&gt;clip-path: path()&lt;/code&gt;? What would your "Squeaky Portrait" look like? It could do something completely different. I'd love to see what you make!&lt;/p&gt;

&lt;p&gt;As always, thanks for reading. Wanna see more? Come find me on &lt;a href="https://twitter.com/jh3yy"&gt;Twitter&lt;/a&gt; or check out the &lt;a href="https://twitch.tv/jh3yy"&gt;the live stream&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;p.s If you want to grab all the code. It‚Äôs here in this &lt;a href="https://codepen.io/collection/nkONJa"&gt;CodePen collection&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Stay Awesome!  ï ‚Ä¢·¥•‚Ä¢ î&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>tutorial</category>
      <category>webdev</category>
      <category>css</category>
      <category>javascript</category>
    </item>
    <item>
      <title>10 Simple Toggle Switch Animation Using CSS And JavaScript</title>
      <author>Kiran Raj R</author>
      <pubDate>Thu, 29 Apr 2021 20:08:34 +0000</pubDate>
      <link>https://dev.to/kiranrajvjd/10-simple-toggle-switch-animation-using-css-and-javascript-3gpn</link>
      <guid>https://dev.to/kiranrajvjd/10-simple-toggle-switch-animation-using-css-and-javascript-3gpn</guid>
      <description>&lt;p&gt;Here I list 10 simple toggle button animation examples. All of them work based on simple transition property. JavaScript is used to toggle class to the elements and mimic the checkbox effect. I am not going to comment how this is created, try to build with your idea, this is simple, I limit the CSS styling to reduce complexities. Its just beginner level code, you can do it without any help. If you are have any doubt, comment it I will help you. I hope you will be able to design better than me. happy Coding&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/kiran-r-raj/embed/MWJRJOK?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/kiran-r-raj/embed/ZELNzVN?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/kiran-r-raj/embed/XWpwWzK?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/kiran-r-raj/embed/YzNbzMj?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/kiranrajvjd" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u_is5DQe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--7VaB3EeY--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/555812/2bf2e16e-98a9-450b-af3a-1fbd51fce623.png" alt="kiranrajvjd image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/kiranrajvjd/10-best-javascript-based-github-repos-for-web-developers-49pc" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;10 Awesome GitHub Repos For Web Developers &lt;/h2&gt;
      &lt;h3&gt;Kiran Raj R „Éª Apr 26 „Éª 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#productivity&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/kiranrajvjd" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u_is5DQe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--7VaB3EeY--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/555812/2bf2e16e-98a9-450b-af3a-1fbd51fce623.png" alt="kiranrajvjd image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/kiranrajvjd/12-simple-css-hover-effects-95d" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;12 Simple CSS Hover Effects&lt;/h2&gt;
      &lt;h3&gt;Kiran Raj R „Éª Apr 26 „Éª 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#codenewbie&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/kiranrajvjd" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u_is5DQe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--7VaB3EeY--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/555812/2bf2e16e-98a9-450b-af3a-1fbd51fce623.png" alt="kiranrajvjd image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/kiranrajvjd/awesome-css-generators-3709" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;25+ Awesome CSS Code Generators For Your Next Project&lt;/h2&gt;
      &lt;h3&gt;Kiran Raj R „Éª Apr 29 „Éª 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#codenewbie&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/kiranrajvjd" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u_is5DQe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--7VaB3EeY--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/555812/2bf2e16e-98a9-450b-af3a-1fbd51fce623.png" alt="kiranrajvjd image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/kiranrajvjd/10-awesome-svg-shape-generators-for-your-web-projects-2mob" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;10+ Awesome SVG Shape Generators For Your Web Projects&lt;/h2&gt;
      &lt;h3&gt;Kiran Raj R „Éª Apr 29 „Éª 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#productivity&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


</description>
      <category>javascript</category>
      <category>css</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Is there anything you want to know about Netlify or JAMstack? Answer for the chance to be featured on our podcast!</title>
      <author>Gracie Gregory (she/her)</author>
      <pubDate>Thu, 29 Apr 2021 20:01:43 +0000</pubDate>
      <link>https://dev.to/devteam/is-there-anything-you-want-to-know-about-netlify-or-jamstack-answer-for-the-chance-to-be-featured-on-our-podcast-10cp</link>
      <guid>https://dev.to/devteam/is-there-anything-you-want-to-know-about-netlify-or-jamstack-answer-for-the-chance-to-be-featured-on-our-podcast-10cp</guid>
      <description>&lt;p&gt;The &lt;a href="//dev.to/devdiscuss"&gt;DevDiscuss Podcast&lt;/a&gt; begins with an interview and ends with commentary from listeners ‚Äî and we like to feature the actual voices from our community!&lt;/p&gt;

&lt;p&gt;To inform an upcoming episode of the show, we'd like to know...&lt;/p&gt;

&lt;blockquote&gt;
&lt;h3&gt;
  &lt;a href="#is-there-anything-you-want-to-know-about-netlify-or-jamstack"&gt;
  &lt;/a&gt;
  &lt;strong&gt;‚ÄúIs there anything you want to know about Netlify or JAMstack?‚Äù‚Äù&lt;/strong&gt;
&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;p&gt;For your chance to hear your actual comments on an upcoming episode, answer the question above by:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Calling our Google Voice at +1 (929)500-1513 and leave a message üìû&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Sending a voice memo to &lt;a href="mailto:pod@dev.to"&gt;pod@dev.to&lt;/a&gt; üéô&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;OR, leaving a comment here (we'll read your response aloud for you) üó£&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Please send in your recordings by Wednesday, May 5th at Midnight, ET (9 PM PT, 4 AM UTC)&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#voice-recordings-will-be-given-priority-placement"&gt;
  &lt;/a&gt;
  Voice recordings will be given priority placement üòâ
&lt;/h4&gt;

</description>
      <category>podcast</category>
      <category>netlify</category>
      <category>jamstack</category>
    </item>
    <item>
      <title>How to Use GitBook for Technical Documentation</title>
      <author>Arctype Team</author>
      <pubDate>Thu, 29 Apr 2021 19:49:48 +0000</pubDate>
      <link>https://dev.to/arctype/how-to-use-gitbook-for-technical-documentation-23hm</link>
      <guid>https://dev.to/arctype/how-to-use-gitbook-for-technical-documentation-23hm</guid>
      <description>&lt;p&gt;&lt;em&gt;by Hanan Younes&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;For the past three months, I have had the distinct pleasure of working as an &lt;a href="http://outreachy.org"&gt;Outreachy&lt;/a&gt; intern for an open-source project called Intermine, where I was tasked with creating new user training documentation. For this project, I entirely rewrote the &lt;a href="https://intermine.org"&gt;Intermine&lt;/a&gt; user documentation‚Äîwhich included images, code snippets, tables, mathematical formulas, and more‚Äîusing GitBook. This guide will share my experience creating technical documentation using GitBook and act as a de-facto quick-start guide to GitBook.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-gitbook"&gt;
  &lt;/a&gt;
  What is GitBook?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://gitbook.com"&gt;GitBook&lt;/a&gt; is a collaborative documentation tool that allows anyone to document anything‚Äîsuch as products and APIs‚Äîand share knowledge through a user-friendly online platform. According to GitBook, ‚ÄúGitBook is a flexible platform for all kinds of content and collaboration.‚Äù It provides a single unified workspace for different users to create, manage and share content without using multiple tools. For example:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Individuals can use GitBook to track their personal projects, add notes or ideas.&lt;/li&gt;
&lt;li&gt;Teams can centralize and share their internal knowledge bases on GitBook, which improves collaboration and makes finding information more convenient.&lt;/li&gt;
&lt;li&gt;Organizations, including Arctype, can create beautiful docs to guide and support their users and contributors. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--o36B2FO9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://arctype.com/blog/content/images/size/w1000/2021/04/Arctype-1-1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--o36B2FO9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://arctype.com/blog/content/images/size/w1000/2021/04/Arctype-1-1.png" alt="Arctype documentation powered by GitBook"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-is-gitbook-the-best-documentation-solution"&gt;
  &lt;/a&gt;
  Why Is GitBook the Best Documentation Solution?
&lt;/h2&gt;

&lt;p&gt;Given that digital documentation solutions have been around since the dawn of the digital age, it is entirely fair to ask, ‚Äúwhy does the world need another documentation tool?‚Äù‚Äîor in other words, ‚Äúwhy should anyone use GitBook?‚Äù Of course, other good solutions can be utilized to build user and developer documentation, such as &lt;a href="https://readthedocs.org/"&gt;ReadTheDocs&lt;/a&gt;, &lt;a href="https://mkdocs.org"&gt;MKDocs&lt;/a&gt;, and &lt;a href="https://docsify.js.org"&gt;Docsify&lt;/a&gt;. These popular tools share some features with GitBook, including supporting custom domains, PDF export, search, and navigation abilities. However, GitBook outperforms these documentation solutions in many aspects, including but not limited to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Superior customization capabilities to reflect any brand‚Äôs identity&lt;/li&gt;
&lt;li&gt;Great plugin system¬≠ with almost 700 plugins that extend the default GitBook functionally&lt;/li&gt;
&lt;li&gt;The most convenient GitHub integration you‚Äôll find to easily sync your documentation with GitHub and keep everything up-to-date!‚Äå&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Therefore, in a scenario where requirements like advanced branding, customizable UI design, and features extensibility are essential, existing alternatives cannot compete with GitBook.&lt;/p&gt;

&lt;p&gt;As a more concrete example, Intermine had some specific requirements for my documentation overhaul project, which included search and customization abilities, as well as markdown support. Similar to the scenario described above, I started comparing several options and ultimately chose Gitbook to create the new user training material because it:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Comes standard with both a great online WYSIWYG editor and markdown support&lt;/li&gt;
&lt;li&gt;Allows for team collaboration&lt;/li&gt;
&lt;li&gt;Can be customized to match any organization‚Äôs branding&lt;/li&gt;
&lt;li&gt;Offers a base version that is entirely free for personal use, and the paid, premium version can also be licensed to open-source projects free of charge&lt;/li&gt;
&lt;li&gt;Can display your content, publicly or privately, with anyone‚Äîincluding non-GitBook users.&lt;/li&gt;
&lt;li&gt;It can be configured to synchronize your content with GitHub and also create PDF versions of your documentation.&lt;/li&gt;
&lt;li&gt;It supports integration with other tools, such as Slack, Intercom, and Google Analytics.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Disclaimer: The above list is not comprehensive nor complete.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-three-fundamentals-of-gitbook"&gt;
  &lt;/a&gt;
  The Three Fundamentals of GitBook
&lt;/h2&gt;

&lt;p&gt;According to the GitBook documentation, there are some fundamentals that you‚Äôll need to know to start with GitBook. I will demonstrate these basics using the Arctype documentation written in GitBook. &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Space:&lt;/strong&gt; in GitBook, spaces are projects ‚Äì public or private - where you can start writing your personal notes, documenting a product, or sharing knowledge-base simultaneously with your team or individually. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Organization:&lt;/strong&gt; an organization is a place where one or several projects are stored. If your organization works on many different projects, you can create a space for each one, and you can invite members to join your organization and start collaborating! &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;GitHub Integration:&lt;/strong&gt; you can easily synchronize your work on GitBook with any GitHub repository, which keeps your documentation up-to-date.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#step-by-step-guide-to-creating-your-first-documentation-on-gitbook"&gt;
  &lt;/a&gt;
  Step by Step Guide to Creating Your First Documentation on GitBook
&lt;/h2&gt;

&lt;p&gt;Now that we understand the underlying fundamentals of GitBook, we're ready to start creating documentation!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#signing-up-and-creating-your-first-project"&gt;
  &lt;/a&gt;
  Signing Up and Creating Your First Project
&lt;/h3&gt;

&lt;p&gt;First, you need to sign up for GitBook using your email, GitHub, or Gmail account. As you can see in the screenshot below, you will first be prompted to create a new space dedicated to your projects that you can share publicly or with your team. You can also create an organization that might include several projects or spaces: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D_5uV3qr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://arctype.com/blog/content/images/size/w1000/2021/04/Gitbook-2-3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D_5uV3qr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://arctype.com/blog/content/images/size/w1000/2021/04/Gitbook-2-3.png" alt="initial screen after signing up for GitBook"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I will keep things simple, and you‚Äôll only need to create a new space to follow along. I created a public space, GitBook Tutorial, shown in the following screenshots. The initial page of your new space should look something like this: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6_8J7H_---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://arctype.com/blog/content/images/size/w1000/2021/04/new-space-3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6_8J7H_---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://arctype.com/blog/content/images/size/w1000/2021/04/new-space-3.png" alt="starting page for a new space/project Gitbook"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#creating-and-linking-to-a-github-repository"&gt;
  &lt;/a&gt;
  Creating and Linking to a GitHub Repository
&lt;/h3&gt;

&lt;p&gt;As previously mentioned, you can integrate your GitBook content with a GitHub repository. So, you will have to &lt;a href="https://github.com/new"&gt;create a repository&lt;/a&gt; in GiHhub ‚Äì public or private - to link with your new GitBook space or use a pre-existing one. I‚Äôve created a new private repository for the sake of this guide. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_U6zpBd_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://arctype.com/blog/content/images/size/w1000/2021/04/Create-a-New-Repository.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_U6zpBd_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://arctype.com/blog/content/images/size/w1000/2021/04/Create-a-New-Repository.png" alt="I created a new private repository named GitBook-Tutorial"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Remember to not edit the new repository on GitHub for now. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0D6jX-lz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://arctype.com/blog/content/images/size/w1000/2021/04/Screenshot--1066-.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0D6jX-lz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://arctype.com/blog/content/images/size/w1000/2021/04/Screenshot--1066-.png" alt="screenshot of repository quick-setup on GitHub for GitBook"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To set up the GitHub integration, click on the Integrations tab from the left sidebar and then select the GitHub checkbox, which will allow GitBook to access your GitHub account. Now, you must choose the repository that you want to link. Since my repository is private, I clicked the &lt;strong&gt;List all repositories&lt;/strong&gt; option and chose the newly created repo. Note, if your repository is public, select &lt;strong&gt;List only public repositories&lt;/strong&gt; instead. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XTJY6x5m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://arctype.com/blog/content/images/size/w1000/2021/04/Github-integration.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XTJY6x5m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://arctype.com/blog/content/images/size/w1000/2021/04/Github-integration.png" alt="link to your github repository"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;During the setup, you will be asked to select branches to synchronize.  GitBook imports the master branch by default; however, you can specify other branches.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gip01yhB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://arctype.com/blog/content/images/size/w1000/2021/04/Screenshot--1068-.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gip01yhB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://arctype.com/blog/content/images/size/w1000/2021/04/Screenshot--1068-.png" alt="select the branch you want to link with GitBook"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next, you will be promoted to choose the content to be used for first synchronization. Since our new GitHub repository is empty, we'll select the &lt;strong&gt;I write my content on GitBook&lt;/strong&gt; option, and &lt;strong&gt;GitBook&lt;/strong&gt; add the content of the new space to GitHub.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WGtA6MMT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://arctype.com/blog/content/images/size/w1000/2021/04/Screenshot--1070-.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WGtA6MMT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://arctype.com/blog/content/images/size/w1000/2021/04/Screenshot--1070-.png" alt="first synchronization content"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once you‚Äôre successfully done the linking process between GitHub and GitBook, you should see the following:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uRKlNLHU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://arctype.com/blog/content/images/size/w1000/2021/04/Screenshot--1071-.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uRKlNLHU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://arctype.com/blog/content/images/size/w1000/2021/04/Screenshot--1071-.png" alt="successful github integration"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Please note that you can only make changes to your GitBook space or GitHub repository, not to both simultaneously.&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#merging-changes-to-your-gitbook-pages"&gt;
  &lt;/a&gt;
  Merging Changes to Your GitBook Pages
&lt;/h3&gt;

&lt;p&gt;Now, you can add some changes (new draft) on GitBook and merge them to your GitHub repo. GitBook doesn‚Äôt automatically save your edits; so, you need to use ‚ÄúSave‚Äù to save your draft and ‚ÄúMerge‚Äù to commit your changes to your GitHub repository. Remember to add a brief description to every change/draft you make as shown below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_03-b2Dy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://arctype.com/blog/content/images/size/w1000/2021/04/Screenshot--1076-.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_03-b2Dy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://arctype.com/blog/content/images/size/w1000/2021/04/Screenshot--1076-.png" alt="adding new content to your space"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once merged, you can verify the new changes on your linked GitHub repository.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dxiKs--c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://arctype.com/blog/content/images/size/w1000/2021/04/Screenshot--1078-.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dxiKs--c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://arctype.com/blog/content/images/size/w1000/2021/04/Screenshot--1078-.png" alt="changes are successfully pushed to github"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#viewing-and-sharing-your-documentation"&gt;
  &lt;/a&gt;
  Viewing and Sharing Your Documentation
&lt;/h3&gt;

&lt;p&gt;You can now share your documentation with others using the &lt;strong&gt;Shareable Link.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nb7Dam2l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://arctype.com/blog/content/images/size/w1000/2021/04/Screenshot--1082-.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nb7Dam2l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://arctype.com/blog/content/images/size/w1000/2021/04/Screenshot--1082-.png" alt="sharing your work"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can also preview your work on the web by clicking the &lt;strong&gt;Open&lt;/strong&gt; button.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--v1fVCGi7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://arctype.com/blog/content/images/size/w1000/2021/04/Screenshot--1081-.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--v1fVCGi7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://arctype.com/blog/content/images/size/w1000/2021/04/Screenshot--1081-.png" alt="gitbook new page preview"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I hope this guide helped you understand how to use GitBook for documenting your work‚Äîplease leave a comment to let me know about your experience!&lt;/p&gt;

</description>
      <category>tutorial</category>
      <category>beginners</category>
      <category>gitbook</category>
      <category>documentation</category>
    </item>
  </channel>
</rss>
