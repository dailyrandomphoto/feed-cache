<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Centering a DIV like a PRO - #1</title>
      <author>Abhishek Raj</author>
      <pubDate>Mon, 19 Jul 2021 13:57:10 +0000</pubDate>
      <link>https://dev.to/abhishekraj272/centering-a-div-like-a-pro-1-49kf</link>
      <guid>https://dev.to/abhishekraj272/centering-a-div-like-a-pro-1-49kf</guid>
      <description>&lt;p&gt;In this series of article, I will show some best ways to center a div in HTML.&lt;/p&gt;

&lt;p&gt;In the below &lt;strong&gt;codepen&lt;/strong&gt;, I have used &lt;em&gt;inset&lt;/em&gt; to set top, right, bottom, left to 0, then setting the margin to auto.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/abhishekraj272/embed/MWmoBYO?height=600&amp;amp;default-tab=css,result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Connect Me @ &lt;a href="https://www.linkedin.com/in/abhishekraj272/"&gt;Linkedin&lt;/a&gt; &lt;a href="https://github.com/abhishekraj272"&gt;Github&lt;/a&gt; &lt;a href="https://twitter.com/abhishekraj272"&gt;Twitter&lt;/a&gt; &lt;a href="https://www.youtube.com/channel/UCvHn2T8DSJzEWzYDdK3Dt8A"&gt;Youtube&lt;/a&gt; 😇&lt;/p&gt;

&lt;p&gt;Thanks @&lt;a href="https://www.youtube.com/channel/UCJZv4d5rbIKd4QHMPkcABCw"&gt;Kevin Powell&lt;/a&gt; for this trick.&lt;/p&gt;

</description>
      <category>html</category>
      <category>webdev</category>
      <category>css</category>
      <category>frontend</category>
    </item>
    <item>
      <title>O Mito da Transição de Carreira</title>
      <author>TechSisters Brasil</author>
      <pubDate>Mon, 19 Jul 2021 13:48:16 +0000</pubDate>
      <link>https://dev.to/techsistersbrasil/o-mito-da-transicao-de-carreira-1aap</link>
      <guid>https://dev.to/techsistersbrasil/o-mito-da-transicao-de-carreira-1aap</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MkJsVrxg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x8027tcscvlwx4r45uuv.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MkJsVrxg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x8027tcscvlwx4r45uuv.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Ainda hoje, pra muita gente, o termo transição de carreira chega a causar um arrepio na espinha. Motivo? Permanecem presos naquela ideia de que devemos sair da escola escolher uma profissão e seguir com ela até o final da vida.&lt;/p&gt;

&lt;p&gt;É o velho lema: Entre numa faculdade, faça um bom estágio, dê o seu melhor para entrar em uma grande empresa e faça sua carreira lá! Acredite! Não tem como dar errado!&lt;/p&gt;

&lt;p&gt;Pois é, pode até não dar tudo errado, mas também pode não dar muito certo… 🤷🏽‍♀️&lt;/p&gt;

&lt;p&gt;Até pouco tempo atrás esse modelo de vida fazia muito sentido pra mim, afinal, o que é mais seguro do que &lt;em&gt;“seguir o plano à risca?”&lt;/em&gt; A verdade é que a gente gosta daquela sensação de segurança e de ter controle total dos ganhos e resultados. Mas controle, meus amigos, não passa de uma mera ilusão.&lt;/p&gt;

&lt;p&gt;Quando eu decidi mudar de carreira — pela terceira vez — eu tive os mesmos questionamentos que muitos tem: &lt;em&gt;“E se não der certo?”&lt;/em&gt;, “E se o mercado me achar “velha” para iniciar?”, “E se eu descobrir que também não gosto disso?”, Será que ainda sou capaz de aprender coisas novas?.&lt;/p&gt;

&lt;p&gt;São muitas as dúvidas que nos cercam e as vezes a gente fica com aquela sensação de estar empacado no mesmo lugar! Então, eu percebi que por mais que eu estivesse empolgada com aquela situação, eu precisava encontrar pessoas que estivessem passando pela mesma situação para que eu pudesse compartilhar as minhas angústias e não me sentir tão sozinha. E isso fez TODA a diferença!&lt;/p&gt;

&lt;p&gt;Quando entendi isso, passei a procurar grupos de apoio e comecei a conversar com pessoas — &lt;em&gt;especialmente mulheres&lt;/em&gt; — que estavam migrando para a TI.❤️&lt;/p&gt;

&lt;p&gt;Não há nada melhor do que ouvir e ver pessoas na mesma situação que você enfrentando e te mostrando todas as ferramentas necessárias para ultrapassar esse processo.&lt;/p&gt;

&lt;p&gt;Nesses espaços me senti mais confiante e percebi que muitas das minhas crenças sobre carreira e profissão já estavam mais que ultrapassadas! Lá entendi que não há idade para percorrermos nossos sonhos e que a vida passa rápido demais para deixarmos o nosso destino a mercê das circunstâncias. 🌎&lt;/p&gt;

&lt;p&gt;Após experiências e aprendizados, sinto que a diferença está justamente em acharmos um grupo de pessoas que nos compreenda e caminharmos juntos com elas para alcançar o objetivo em comum!&lt;/p&gt;

&lt;p&gt;Hoje, gostaria de poder olhar pra trás, para aquela menina de 32 anos, que se achava velha e incapaz de aprender uma nova tecnologia e dizer: — &lt;strong&gt;VAI FUNDO! VOCÊ CONSEGUE!&lt;/strong&gt; 🏅&lt;/p&gt;

&lt;p&gt;A inserção no mundo da tecnologia me sacudiu de várias maneiras, mas também trouxe um novo suspiro e reativou a motivação que eu precisava para inspirar e transformar a vida de outras pessoas através da minha experiência! 🚀&lt;/p&gt;

&lt;p&gt;E, ao longo desse percurso, tão desafiador, posso dizer que: Aprendi a Aprender. Aprendi a me desafiar. Aprendi a confiar e acreditar que sou capaz de escolher o caminho que quero trilhar! E, no final das contas, tem sido uma das experiências mais recompensantes e significativas da minha vida! 👩🏽‍💻&lt;/p&gt;

&lt;p&gt;Se você chegou nesse post, é porque você também está pensando em começar uma mudança na sua vida. E que bom! Fico feliz que você tenha dado o primeiro passo e começado a avaliar as possibilidades! ✅&lt;/p&gt;

&lt;p&gt;Encontre um grupo, converse com pessoas, tire as suas próprias conclusões. E ee eu puder te ajudar de alguma maneira, me chame! Mas não fique parado, tome as rédeas da sua carreira! Dê mais um passo! E mais um passo e outro passo. De passo em passo você chega lá 🙂&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;E daqui a um ano você vai se orgulhar de ter começado HOJE!&lt;/strong&gt; 💪🏼&lt;/p&gt;




&lt;p&gt;Se esse conteúdo foi útil pra você, compartilhe!&lt;/p&gt;

&lt;p&gt;📝 escrito com 💜 por &lt;a href="https://dev.to/simonepedrosa"&gt;Simone Pedrosa&lt;/a&gt;&lt;/p&gt;

</description>
      <category>career</category>
      <category>transicaodecarreira</category>
    </item>
    <item>
      <title>GraphQL resources, new App Framework features and Algolia search implementations</title>
      <author>Stefan Judis</author>
      <pubDate>Mon, 19 Jul 2021 13:41:19 +0000</pubDate>
      <link>https://dev.to/contentful/graphql-resources-new-app-framework-features-and-algolia-search-implementations-3gi2</link>
      <guid>https://dev.to/contentful/graphql-resources-new-app-framework-features-and-algolia-search-implementations-3gi2</guid>
      <description>&lt;h2&gt;
  &lt;a href="#aloha-and-happy-july-contentful-community"&gt;
  &lt;/a&gt;
  Aloha and happy July, Contentful community
&lt;/h2&gt;

&lt;p&gt;I just came back from a few days of vacation and am excited to share some Contentful updates with you.&lt;/p&gt;

&lt;p&gt;This month's newsletter is full of resources about GraphQL, new App Framework features and Algolia search implementations.&lt;/p&gt;

&lt;p&gt;I'm also interested in what you're building. Please share it with us --- you can tweet &lt;a href="https://twitter.com/contentful"&gt;@contentful&lt;/a&gt; what you've built using #BuiltWithContentful, or &lt;a href="//mailto:stefan.judis@contentful.com"&gt;reach out to me&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Let's get into some nerdy stuff, shall we?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#exciting-things-from-the%C2%A0internet"&gt;
  &lt;/a&gt;
  Exciting things from the internet
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#the-graphql-spec%C2%A0simplified"&gt;
  &lt;/a&gt;
  &lt;a href="https://blog.graphql.guide/the-graphql-spec-simplified-93005ce0671f"&gt;The GraphQL Spec, Simplified&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;GraphQL lingo can be confusing. What's a Field, a Fragment or a Directive? Loren Sands-Ramshaw wrote a great introductory article that helps you get ready for GraphQL small talk.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#graphql-outside-the-happy%C2%A0path"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.youtube.com/watch?app=desktop&amp;amp;t=2589&amp;amp;v=H84go6sEkEM&amp;amp;feature=youtu.be"&gt;GraphQL outside the happy path&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Our very own Stephan Schneider spoke at GraphQL Wrocław and got knee-deep into GraphQL error handling. In his talk, he covers the GraphQL request cycle and shares error handling best practices.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#a-complete-guide-to-accessible-frontend%C2%A0components"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.smashingmagazine.com/2021/03/complete-guide-accessible-front-end-components/"&gt;A Complete Guide To Accessible Front-End Components&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This Smashing Magazine article is a link for your bookmarks. Vitaly Friedman collected countless resources on accessible front-end components.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#contentful-corner"&gt;
  &lt;/a&gt;
  Contentful corner
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#how-to-add-algolia-instantsearch-to-your-nextjs%C2%A0application"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.contentful.com/blog/2021/07/02/add-algolia-instantsearch-to-nextjs-app/"&gt;How to add Algolia InstantSearch to your Next.js application&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;If you want to learn how to sync Contentful data to Algolia and implement the search UI components in your Next.js application, this post is for you. Read about how Salma added search to her blog and implemented &lt;a href="https://www.algolia.com/doc/guides/building-search-ui/what-is-instantsearch/js/"&gt;Algolia InstantSeach&lt;/a&gt;. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#app-hosting-with-the-contentful-app%C2%A0framework"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.contentful.com/blog/2021/06/23/app-hosting-contentful-app-framework/"&gt;App hosting with the Contentful App Framework&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Our App Framework allows you to customize the Contentful UI and establish new content workflows. Previously, you had to host your app and provide a publicly accessible URL. This has now changed! You can now host your apps right in Contentful. That's huge!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-filter-entries-by-linked-references-in%C2%A0graphql"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.contentful.com/blog/2021/06/15/filter-entries-by-linked-references-in-graphql-api/"&gt;How to filter entries by linked references in GraphQL&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;People often ask us how they can filter entry references in our GraphQL API. Unfortunately, that's not possible right now, but you can flip your queries around and achieve the same result using the linkedFrom field. Salma explains how to do that on our blog.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#contentful-tip"&gt;
  &lt;/a&gt;
  Contentful tip
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IKDxHSIA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.ctfassets.net/fo9twyrwpveg/3sUspWsM9tJX5f2WGYujdc/f1116e8e26da52f2883b5e839544fefc/pasted_image_0__8_.png%3Ffm%3Dwebp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IKDxHSIA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.ctfassets.net/fo9twyrwpveg/3sUspWsM9tJX5f2WGYujdc/f1116e8e26da52f2883b5e839544fefc/pasted_image_0__8_.png%3Ffm%3Dwebp" alt="If you're autogenerating your URLs using the &amp;quot;Slug&amp;quot; appearance setting, you can now choose which field should be slugified."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you're autogenerating your URLs using the "Slug" appearance setting, you can now choose which field should be slugified. 🎉&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#changelog"&gt;
  &lt;/a&gt;
  Changelog
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#new-compose-launch-trials-have-been-extended-from-10-days-to-60%C2%A0days"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.contentful.com/developers/changelog/#new-compose-+-launch-trials-have-been-extended-from-10-days-to-60-days"&gt;New Compose + Launch trials have been extended from 10 days to 60 days&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;The free trial of Compose + Launch for Team and Community users has been extended from 10 days to 60 days.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#app-hosting-has-been%C2%A0released"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.contentful.com/developers/changelog/#app-hosting"&gt;App hosting has been released&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;You can now host your apps using Contentful without any external hosting providers. App hosting stores and serves your app securely without any additional setup. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#duplicate-pages-in%C2%A0compose"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.contentful.com/developers/changelog/#duplicate-pages-in-compose"&gt;Duplicate pages in Compose&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;Compose now supports duplicating pages. If you have cases when you need to create new pages that are very similar to an existing page you have, then this new feature is for you.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#stay-safe-and-well-check-in-with-you-next%C2%A0month"&gt;
  &lt;/a&gt;
  Stay safe, and we'll check in with you next month!
&lt;/h3&gt;

&lt;p&gt;That's it for July! Visit &lt;a href="https://www.contentful.com/developers/"&gt;our developer portal to stay up to date&lt;/a&gt;. It includes developer blog posts, videos and tutorials. Let us know via &lt;a href="https://www.contentful.com/slack/"&gt;Slack&lt;/a&gt; or &lt;a href="https://twitter.com/contentful"&gt;Twitter&lt;/a&gt; how we can continue to help you make awesome things, nd don't forget to show us what you've built on Twitter with #BuiltWithContentful!&lt;/p&gt;

&lt;p&gt;If you enjoyed this newsletter, &lt;a href="https://www.contentful.com/resources/dev-newsletter/"&gt;sign up to receive the next one in your inbox&lt;/a&gt;!&lt;/p&gt;

</description>
      <category>contentful</category>
    </item>
    <item>
      <title>Using Polywork to Break My Unconscious Biases</title>
      <author>Michael Jolley</author>
      <pubDate>Mon, 19 Jul 2021 13:02:00 +0000</pubDate>
      <link>https://dev.to/michaeljolley/using-polywork-to-break-my-unconscious-biases-1mli</link>
      <guid>https://dev.to/michaeljolley/using-polywork-to-break-my-unconscious-biases-1mli</guid>
      <description>&lt;p&gt;This past year I've been examining the communities I'm a part of. It didn't take long to notice that I was living in a bubble of people who look, act, and think like me. It was one of those unconscious things, that when recognized, seems obvious and repulsive. I have always valued diversity on my teams and I want my social connections to be equally diverse. That's why, when I was offered an invite to join Polywork, I knew this was an opportunity to ensure my "bubble" was diverse.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-polywork"&gt;
  &lt;/a&gt;
  What is Polywork?
&lt;/h2&gt;

&lt;p&gt;Before I get into what I did, let's talk about what Polywork is. First, I don't work for or represent Polywork, so don't take my explanation as their "official description." I see Polywork as a LinkedIn replacement that better represents technical and artistic communities. Whereas, LinkedIn focuses on what positions you've held and education you've completed, Polywork focuses on what you've done.&lt;/p&gt;

&lt;p&gt;Polywork recognizes that for many software developers, some of our most exciting projects take place outside of the office. Things like blog posts, conference &amp;amp; meetup talks, and YouTube/Twitch videos can all be highlighted on your profile. You can also use Polywork to find other individuals who are open to mentoring you, speaking at your event, and more.&lt;/p&gt;

&lt;p&gt;They also provide a "follow" feature which is similar to what you would be accustomed to on platforms like Twitter. This is where my journey to expanding my bubble begins.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#polywork-follows-the-way"&gt;
  &lt;/a&gt;
  Polywork Follows: The !== Way
&lt;/h2&gt;

&lt;p&gt;Whenever I see content, regardless of platform, I always follow or subscribe to the creator so I can see more content like that. I normally don't pay attention to who the person is, but I do notice what their role is, what company they work for, etc. But there are so many white guys in the tech space, it's hard not to quickly fill up a "following" list of the same people. This is the first place I changed my habits.&lt;/p&gt;

&lt;p&gt;Step one in operation Expand The Bubble was realizing that I have an unconscious inclination to follow content created by white guys, here on referred to as White Guy Creators (WGC). Does that mean I stop following creators who look like me? Nope. Instead, I decided to counteract this disposition by following 3 non-WGCs for every one WGC. So if I see content I enjoy from a WGC, I give them a follow/subscribe. Then I go on the hunt and don't leave the computer until I've identified 3 non-WGCs that had interesting content.&lt;/p&gt;

&lt;p&gt;What has been the result? Gold. Absolute gold. There are a plethora of amazing content creators out there that are never recommended to me, or whose content never reached my feed before. I don't know if this is due to the algorithms employed by Twitter/Instagram/TikTok/etc, but by actively counter-balancing who I follow, it appears I've broken through to this wonderland of amazing content that I had never seen before.&lt;/p&gt;

&lt;p&gt;For the first time, I actually enjoy logging into the timeline to see what new, amazing stuff I'll find.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#can-you-hear-them-now"&gt;
  &lt;/a&gt;
  Can You Hear Them Now?
&lt;/h2&gt;

&lt;p&gt;I'll admit, step two in my plans has been hampered. Soon after starting this journey, my mother was diagnosed with stage 4 cancer. Within 4 weeks of diagnosis, we had spent 2 weeks in the hospital and now a week at home on hospice trying to make her comfortable as she becomes more confused and less the amazing woman who raised me on her own. I only write this step because it was and still is in my plans moving forward. If anything, it will help me stay accountable.&lt;/p&gt;

&lt;p&gt;Back to step two: Amplification. Now that I'm getting to see this awesome content by non-WGC, I want to make a conscious effort to break existing algorithms and expose people who may follow me to these amazing creators. So each time I see content that inspires, teaches, or encourages me, I want to share it with my community.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#break-out-of-your-bubble"&gt;
  &lt;/a&gt;
  Break Out of Your Bubble
&lt;/h2&gt;

&lt;p&gt;If you'd like to join Polywork, they've given me a VIP code for anyone reading who'd like to get in on the action. Go to &lt;a href="https://polywork.com"&gt;https://polywork.com&lt;/a&gt; and use the code &lt;code&gt;baldbeardbuild&lt;/code&gt;. Once you're in, I highly recommend using the steps above to expand your bubble and amplify the amazing content you find.&lt;/p&gt;

&lt;p&gt;How do you actively combat your unconscious biases? Hit me up on &lt;a href="https://twitter.com/baldbeardbuild"&gt;Twitter&lt;/a&gt; and let me know.&lt;/p&gt;

</description>
      <category>diversity</category>
      <category>inclusion</category>
    </item>
    <item>
      <title>A Guide to MetaMask Ecosystem: The Leading Ethereum Blockchain Wallet</title>
      <author>Manbir Singh Marwah</author>
      <pubDate>Mon, 19 Jul 2021 12:48:03 +0000</pubDate>
      <link>https://dev.to/manbir/a-guide-to-metamask-ecosystem-leading-ethereum-blockchain-wallet-59k7</link>
      <guid>https://dev.to/manbir/a-guide-to-metamask-ecosystem-leading-ethereum-blockchain-wallet-59k7</guid>
      <description>&lt;p&gt;MetaMask is an open-source crypto wallet and a gateway to blockchain apps. It makes accessing and building on Ethereum's DApp Ecosystem easier, right from the browser without running a full Ethereum node. MetaMask can be installed as a browser extension (on Chrome, Firefox, Brave and Edge) or as an app on Android and iOS devices.&lt;/p&gt;

&lt;p&gt;Being one of the most secure hot wallets, MetaMask works with JavaScript by injecting a Web3 object into the webpage you're on. It is important to note that this does not alter the website in any manner. Instead, it only adds a functionality that makes it possible to access the Ethereum platform.&lt;/p&gt;

&lt;p&gt;Let's walk down the steps on how to install and use MetaMask right from your browser, real quick! &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-visit-httpsmetamaskio-and-click-on-download-now"&gt;
  &lt;/a&gt;
  1. Visit &lt;a href="https://metamask.io/"&gt;https://metamask.io/&lt;/a&gt; and click on 'Download Now'
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3jLF7KmH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rmzsbet5f0x4yceka2dw.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3jLF7KmH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rmzsbet5f0x4yceka2dw.jpg" alt="metamask-1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-click-on-install-metamask-for-chrome"&gt;
  &lt;/a&gt;
  2. Click on 'Install MetaMask for Chrome'
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--awUzAmPy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lcz424oppp22o858j94m.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--awUzAmPy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lcz424oppp22o858j94m.jpg" alt="metamask-add-chrome"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-click-on-the-add-to-chrome-button"&gt;
  &lt;/a&gt;
  3. Click on the 'Add to Chrome' button
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--szA6VjP_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xvneybjl92o69861hnzl.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--szA6VjP_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xvneybjl92o69861hnzl.jpg" alt="metamask-add-to-chrome"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-select-add-extension-option-from-the-popup"&gt;
  &lt;/a&gt;
  4. Select 'Add Extension' option from the pop-up
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EY8UEMp1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bj54si2cj4p8k2ndxoa5.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EY8UEMp1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bj54si2cj4p8k2ndxoa5.jpg" alt="metamask-add-extension"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-view-metamask-in-the-chrome-extensions-menu"&gt;
  &lt;/a&gt;
  5. View MetaMask in the Chrome extensions menu
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UuK4qZjq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1fnrgi9a2sf0ei36cr3e.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UuK4qZjq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1fnrgi9a2sf0ei36cr3e.jpg" alt="metamask-ext-icon"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-click-on-get-started-and-create-wallet"&gt;
  &lt;/a&gt;
  6. Click on 'Get Started' and 'Create Wallet'
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--klrnVT_4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v7sdcomc2hvua08h2r5z.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--klrnVT_4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v7sdcomc2hvua08h2r5z.jpg" alt="metamask-create-wallet"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#7-enter-a-password-and-click-create"&gt;
  &lt;/a&gt;
  7. Enter a password and click 'Create'
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9n0sAobv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iknmzd581v1l9kq12cfj.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9n0sAobv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iknmzd581v1l9kq12cfj.jpg" alt="metamask-create-password"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#8-reveal-or-download-and-store-backup-seed-phrase"&gt;
  &lt;/a&gt;
  8. Reveal or download and store backup seed phrase
&lt;/h3&gt;

&lt;p&gt;The seed phrase is a randomly-generated string of words cryptographically derived from the wallet’s private key and paired with 12 words from a list of 2,048 English words called the BIP39 Wordlist. This sequence can also be converted to a corresponding series of mapped numbers that provide the user access to his wallet and its public-private key pair. &lt;br&gt;
A crypto wallet’s software is designed to generate these phrases, which users are then tasked to keep. This ensures that even if the hardware malfunctions or gets lost or stolen, they can always download the wallet software again and use the seed phrases to restore access to their assets back.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NlrsuGqo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r31oxeupnt49gb75mc3p.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NlrsuGqo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r31oxeupnt49gb75mc3p.jpg" alt="metamask-reveal-secret"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;MetaMask uses BIP39 to generate a seed phrase for your wallet. Your seed phrase will cover every token, address, and transaction generated by your wallet. Think of it as your backup master key. Backing up your seed phrase ensures you will always have access to your funds.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#9-view-backup-phrase"&gt;
  &lt;/a&gt;
  9. View backup phrase
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PIER0X0p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hs8idwfbjzmm36b9xdvq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PIER0X0p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hs8idwfbjzmm36b9xdvq.png" alt="metamask-approve"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#10-confirm-backup-seed-phrase-by-clicking-the-words-in-the-order-it-was-shown-previously-and-click-next"&gt;
  &lt;/a&gt;
  10. Confirm backup seed phrase by clicking the words in the order it was shown previously and click 'Next'
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mwi4ONR2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/02qzrivv6kby7h1yawnu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mwi4ONR2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/02qzrivv6kby7h1yawnu.png" alt="metamask-confirm-approve"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#11-agree-to-terms-and-conditions"&gt;
  &lt;/a&gt;
  11. Agree to terms and conditions
&lt;/h3&gt;

&lt;p&gt;Congratulations, you have successfully setup MetaMask and created your first wallet!&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mPQJgEmF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nsl9qdgzz5ul2mj1zklz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mPQJgEmF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nsl9qdgzz5ul2mj1zklz.png" alt="metamask-congrats"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is how the wallet should look in expanded view:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h6C_N3i8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cwu5fc34csfqo6m7v8gu.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h6C_N3i8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cwu5fc34csfqo6m7v8gu.jpg" alt="metamask-wallet"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#adding-a-custom-token"&gt;
  &lt;/a&gt;
  Adding a Custom Token
&lt;/h2&gt;

&lt;p&gt;We can add multiple custom tokens to the MetaMask wallet, such as wBTC, USDT, UNI etc. To add one, &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Open MetaMask and click on 'Assets' to see the tokens in your wallet.&lt;/li&gt;
&lt;li&gt;Scroll down to the bottom and click on 'Add Token'.&lt;/li&gt;
&lt;li&gt;Click on 'Custom Token'.&lt;/li&gt;
&lt;li&gt;Paste the contract address for the token you want to add, into the Token Contract Address field. For example, if you're adding Tether USD (USDT), the token contract would be: &lt;code&gt;0x5dbcF33D8c2E976c6b560249878e6F1491Bca25c&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--p03zQb3k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://metamask.zendesk.com/hc/article_attachments/360078216672/Screen_Shot_2020-12-01_at_12.36.01_PM.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p03zQb3k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://metamask.zendesk.com/hc/article_attachments/360078216672/Screen_Shot_2020-12-01_at_12.36.01_PM.png" alt="custom-token"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can look-up for the contract of the token you want to add through &lt;a href="https://etherscan.io/"&gt;Etherscan&lt;/a&gt;, the Ethereum Blockchain Explorer. You can also explore an address, transaction hash, block or ENS through the same.  &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#configuring-a-custom-network-for-binance-smart-chain"&gt;
  &lt;/a&gt;
  Configuring a Custom Network for Binance Smart Chain
&lt;/h2&gt;

&lt;p&gt;MetaMask supports addition of other networks apart from Ethereum, such as Binance Smart Chain (BSC)—a blockchain network built for running smart contract-based applications and holding BEP2 tokens. To add BSC MainNet to MetaMask, you'd need to visit the 'Settings' menu through the wallet. Under the 'Networks' section, manually add the following entries to add Binance Smart Chain to your wallet:  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Network Name&lt;/strong&gt;: Smart Chain&lt;br&gt;
&lt;strong&gt;New RPC URL&lt;/strong&gt;: &lt;a href="https://bsc-dataseed.binance.org/"&gt;https://bsc-dataseed.binance.org/&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;ChainID&lt;/strong&gt;: 56&lt;br&gt;
&lt;strong&gt;Symbol&lt;/strong&gt;: BNB&lt;br&gt;
&lt;strong&gt;Block Explorer URL&lt;/strong&gt;: &lt;a href="https://bscscan.com"&gt;https://bscscan.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You'll now be able to access BSC through the 'Networks' tab at the top of your wallet. &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#swapping-tokens-on-metamask"&gt;
  &lt;/a&gt;
  Swapping tokens on MetaMask
&lt;/h2&gt;

&lt;p&gt;MetaMask allows us to swap tokens directly from the desktop or mobile wallet. The Swaps feature combines data from decentralized exchange aggregators, market makers, and DEXs, to ensure we get the best price with the lowest network fees.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5FHR731v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://metamask.io/images/swapsscreens-p-1600.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5FHR731v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://metamask.io/images/swapsscreens-p-1600.png" alt="metamask-swap"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#exploring-dapps"&gt;
  &lt;/a&gt;
  Exploring DApps
&lt;/h2&gt;

&lt;p&gt;MetaMask offers a broad ecosystem of Decentralized Applications (or DApps). The following are a few of the DApps that you can explore and use with MetaMask:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.cryptokitties.co/"&gt;CryptoKitties&lt;/a&gt;: This DApp allows you to create and sell cartoon kittens. With MetaMask, the process of selling the kitties is simple and fun.&lt;br&gt;
Blockchain arcades: These are DApps created to allow gamers to use ETH and ERC-20 tokens for video game tournaments. For example, one of the requirements for the &lt;a href="http://etherplay.io/"&gt;Etherplay site&lt;/a&gt; is to have MetaMask.&lt;br&gt;
The Digital Art: This is another app that is becoming very popular in crypto communities. The app allows users to hold auctions where they sell collectibles. With MetaMask, for example, you can bid on a WWII collectible from Japan.&lt;br&gt;
Also check out &lt;a href="https://www.stateofthedapps.com/collections/best-of-metamask"&gt;Best of MetaMask—State of the DApps&lt;/a&gt; for more. &lt;/p&gt;

&lt;p&gt;Good luck exploring the future of web! ;)&lt;/p&gt;

</description>
      <category>blockchain</category>
      <category>ethereum</category>
    </item>
    <item>
      <title>Validate CSV Input With ActiveModel::Validations</title>
      <author>Kevin Murphy</author>
      <pubDate>Mon, 19 Jul 2021 12:17:47 +0000</pubDate>
      <link>https://dev.to/thegnarco/validate-csv-input-with-activemodel-validations-15d8</link>
      <guid>https://dev.to/thegnarco/validate-csv-input-with-activemodel-validations-15d8</guid>
      <description>&lt;h2&gt;
  &lt;a href="#standard-library-parsing"&gt;
  &lt;/a&gt;
  Standard Library Parsing
&lt;/h2&gt;

&lt;p&gt;We're maintaining a system that tracks information about books, including their publication dates. On occasion, publishers will send us CSVs with updated publication dates, and we need to update our Rails application to have those dates.&lt;/p&gt;

&lt;p&gt;We want a repeatable process, so rather than updating these by hand, let's use Ruby's &lt;a href="https://ruby-doc.org/stdlib-3.0.1/libdoc/csv/rdoc/CSV.html"&gt;CSV class&lt;/a&gt; to parse this data.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="no"&gt;CSV&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;csv_text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;headers: &lt;/span&gt;&lt;span class="kp"&gt;true&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;map&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="n"&gt;book&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Book&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;find_by&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;isbn: &lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"ISBN"&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
  &lt;span class="n"&gt;book&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;publication_date: &lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"Pub Date"&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Four lines and we have a functionally complete parser that updates our system how we expect. That all seems great. Until, that is, we actually run it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#book-checked-out"&gt;
  &lt;/a&gt;
  Book Checked Out
&lt;/h2&gt;

&lt;p&gt;We execute our parser on the first data file we receive, and it quickly stops with the following error:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;NoMethodError: undefined method `update' for nil:NilClass
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;On inspecting the state of our database, we see that the first three books in the CSV file had their publication dates updated, but the rest didn't. Looking at the fourth row in the CSV, we discover that the ISBN for that row isn't in our database. In that case &lt;code&gt;find_by&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt;, and calling &lt;code&gt;update&lt;/code&gt; on &lt;code&gt;nil&lt;/code&gt; is exactly our problem. An exception is raised, and further rows of the CSV aren't parsed.&lt;/p&gt;

&lt;p&gt;We can fix that! If we don't find the book, let's log the error and move on to the next row, without calling &lt;code&gt;update&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="no"&gt;CSV&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;csv_text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;headers: &lt;/span&gt;&lt;span class="kp"&gt;true&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;map&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="n"&gt;book&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Book&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;find_by&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;isbn: &lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"ISBN"&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;book&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;blank?&lt;/span&gt;
    &lt;span class="no"&gt;Rails&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;logger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Could not find book"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;next&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="n"&gt;book&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;publication_date: &lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"Pub Date"&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now the entire CSV processes, our books are updated, and everyone's happy. Right?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#blank-pages"&gt;
  &lt;/a&gt;
  Blank Pages
&lt;/h2&gt;

&lt;p&gt;Days later, we discover that a book which previously had a publication date doesn't anymore. It's not unusual for a book to not have a publication date - we have records of books that haven't been published yet. However, books shouldn't &lt;em&gt;lose&lt;/em&gt; an existing publication date.&lt;/p&gt;

&lt;p&gt;We see that the book in question was in the CSV, and the Pub Date column was empty for that row. Turns out, that was an error from the publisher in preparing the CSV. Any book in that file should always have a publication date - the purpose of this process is to provide publication dates.&lt;/p&gt;

&lt;p&gt;We can prevent this from happening in the future by ensuring that a row has a publication date before attempting to process it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="no"&gt;CSV&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;csv_text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;headers: &lt;/span&gt;&lt;span class="kp"&gt;true&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;map&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"Pub Date"&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nf"&gt;blank?&lt;/span&gt;
    &lt;span class="no"&gt;Rails&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;logger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Skipped updating book with no publication date"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;next&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="n"&gt;book&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Book&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;find_by&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;isbn: &lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"ISBN"&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;book&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;blank?&lt;/span&gt;
    &lt;span class="no"&gt;Rails&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;logger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Could not find book"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;next&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="n"&gt;book&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;publication_date: &lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"Pub Date"&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#losing-the-plot"&gt;
  &lt;/a&gt;
  Losing The Plot
&lt;/h2&gt;

&lt;p&gt;Our "simple" parser is now a lot more complicated. Business rules about the shape, structure, and expectations of the data are now littered along with actions consuming the data to do things like find the book and update it with the appropriate publication date. It's harder to identify what the core responsibility of this snippet of code is.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#adding-chapters"&gt;
  &lt;/a&gt;
  Adding Chapters
&lt;/h2&gt;

&lt;p&gt;Let's try to increase the clarity of our code by separating out how to process an individual row of the CSV.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#first-act-establishing-a-new-character-class"&gt;
  &lt;/a&gt;
  First Act: Establishing A New Character (Class)
&lt;/h3&gt;

&lt;p&gt;We'll start by making a class that takes in the needed data from the CSV row and finds the book associated with the ISBN.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;BookPublicationDateImportRow&lt;/span&gt;
  &lt;span class="nb"&gt;attr_reader&lt;/span&gt; &lt;span class="ss"&gt;:isbn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;:publication_date&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;initialize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;isbn&lt;/span&gt;&lt;span class="p"&gt;:,&lt;/span&gt; &lt;span class="n"&gt;publication_date&lt;/span&gt;&lt;span class="p"&gt;:)&lt;/span&gt;
    &lt;span class="vi"&gt;@isbn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;isbn&lt;/span&gt;
    &lt;span class="vi"&gt;@publication_date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;publication_date&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;book&lt;/span&gt;
    &lt;span class="vi"&gt;@book&lt;/span&gt; &lt;span class="o"&gt;||=&lt;/span&gt; &lt;span class="no"&gt;Book&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;find_by&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;isbn: &lt;/span&gt;&lt;span class="n"&gt;isbn&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Perhaps you've heard of a &lt;a href="https://thoughtbot.com/blog/activemodel-form-objects"&gt;form object&lt;/a&gt; to represent data associated with a particular form on your web application. You can consider that's what we're doing here, except our input isn't from a form on a web page - it's a row from a CSV file.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#second-act-rising-validations"&gt;
  &lt;/a&gt;
  Second Act: Rising Validations
&lt;/h3&gt;

&lt;p&gt;Now, rather than rewriting validation logic, as we had in our procedural code initially, we can use ActiveModel's &lt;a href="https://api.rubyonrails.org/v6.1.3.1/classes/ActiveModel/Validations.html"&gt;Validations&lt;/a&gt; module. That'll allow us access to the validation &lt;a href="https://guides.rubyonrails.org/active_record_validations.html#validation-helpers"&gt;helpers&lt;/a&gt; we're used to using with other Rails ActiveRecord models.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;BookPublicationDateImportRow&lt;/span&gt;
  &lt;span class="kp"&gt;include&lt;/span&gt; &lt;span class="no"&gt;ActiveModel&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Validations&lt;/span&gt;

  &lt;span class="n"&gt;validates&lt;/span&gt; &lt;span class="ss"&gt;:book&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;presence: &lt;/span&gt;&lt;span class="kp"&gt;true&lt;/span&gt;
  &lt;span class="n"&gt;validates&lt;/span&gt; &lt;span class="ss"&gt;:publication_date&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;presence: &lt;/span&gt;&lt;span class="kp"&gt;true&lt;/span&gt;
  &lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We would have caught our last problem of losing publication dates if that validation were on the Book model itself - and we may be tempted to look to add it now. However, remember - having a book with no publication date is totally normal for our application. It's only in &lt;strong&gt;this&lt;/strong&gt; instance of receiving a publication date update from a publisher with no publication date where it's unacceptable to have a value for that attribute.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#third-act-update-resolution"&gt;
  &lt;/a&gt;
  Third Act: Update Resolution
&lt;/h3&gt;

&lt;p&gt;We'll also mirror ActiveRecord's API by adding in a &lt;code&gt;save&lt;/code&gt; method that makes sure our instance is passing its own validations before updating the book:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;BookPublicationDateImportRow&lt;/span&gt;
  &lt;span class="o"&gt;...&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;save&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kp"&gt;false&lt;/span&gt; &lt;span class="k"&gt;unless&lt;/span&gt; &lt;span class="n"&gt;valid?&lt;/span&gt;

    &lt;span class="n"&gt;book&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;publication_date: &lt;/span&gt;&lt;span class="vi"&gt;@publication_date&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#rewriting-the-intro"&gt;
  &lt;/a&gt;
  Rewriting The Intro
&lt;/h2&gt;

&lt;p&gt;Now that we have something that's responsible for managing an individual row, we can update our parsing code to be responsible for iterating through that CSV and pass off the details of how to manage that data to our new class.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="no"&gt;CSV&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;csv_text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;headers: &lt;/span&gt;&lt;span class="kp"&gt;true&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;map&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="n"&gt;book_import&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;BookPublicationDateImportRow&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="ss"&gt;isbn: &lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"ISBN"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="ss"&gt;publication_date: &lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"Pub Date"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;book_import&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;save&lt;/span&gt;
    &lt;span class="no"&gt;Rails&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;logger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;book_import&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;errors&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;full_messages&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;", "&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#epilogue"&gt;
  &lt;/a&gt;
  Epilogue
&lt;/h2&gt;

&lt;p&gt;By adding this new class, we've given ourselves an extension point for additional logic on the row. Any data transformation, like converting the publication date string to a date object, can be handled here (however, for CSV parsing, do take a look at the standard library's &lt;a href="https://ruby-doc.org/stdlib-3.0.1/libdoc/csv/rdoc/CSV.html#class-CSV-label-Built-In+Field+Converters"&gt;converters&lt;/a&gt; as well!).&lt;/p&gt;

&lt;p&gt;Any further validations that need to be exercised on the data can take place in this separate class. Moreover, we can use framework features and concepts that we're already familiar with, rather than rewriting our own business logic for validation.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This post originally published on &lt;a href="https://blog.thegnar.co/active-model-validations-csv"&gt;The Gnar Company blog&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>ruby</category>
      <category>rails</category>
    </item>
    <item>
      <title>Invest time into writing questions: Tips for writing better questions</title>
      <author>Tom Collins</author>
      <pubDate>Mon, 19 Jul 2021 12:11:58 +0000</pubDate>
      <link>https://dev.to/collinstommy/invest-time-into-writing-questions-tips-for-writing-better-questions-2e12</link>
      <guid>https://dev.to/collinstommy/invest-time-into-writing-questions-tips-for-writing-better-questions-2e12</guid>
      <description>&lt;p&gt;The essence of writing code is problem solving. This problem solving will often be a solitary task, you, the keyboard and a code editor. Not all problems are easily solved in this vacuum. For many problems we will benefit from the help of others.&lt;/p&gt;

&lt;p&gt;Every problem or task when writing code is a chance to learn from others. A complex task can usually benefit from the input of multiple developers. &lt;/p&gt;

&lt;p&gt;The more effort we put into asking a question, the more likely we will get an appropriate answer. When posing a question, whether this be over slack, email or in person, we should think of the time put into asking this question as an investment. A poorly framed question with little context will likely yield low quality answers, if any at all. &lt;strong&gt;A well structured question that describes the problem in full is far more likely to be answered well.&lt;/strong&gt; With that, let's look at how we can ask better questions.&lt;/p&gt;

&lt;p&gt;Asking good questions is all about context. We should frame the question with as much information as we can. When asking online you will likely need to give more context that when asking within a team. The same rules generally apply to either scenario though.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-include-information-on-the-environment"&gt;
  &lt;/a&gt;
  1. Include information on the environment
&lt;/h2&gt;

&lt;p&gt;A key piece of information will always be where this software is running. Is this a performance issue in production? Is this on your local machine? Documentation should be provided with any steps required to set up the environment.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-your-issue-should-be-reproducible"&gt;
  &lt;/a&gt;
  2. Your issue should be reproducible
&lt;/h2&gt;

&lt;p&gt;If there are some UI steps required to reproduce a bug, be specific about these. Include the branch name if relevant. Always have your code pushed to a remote repo.&lt;/p&gt;

&lt;p&gt;If you are asking online (stack overflow), create a reproducible code sample on Codepen, Code Sandbox or some other publicly available sandbox. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-include-errors"&gt;
  &lt;/a&gt;
  3. Include errors
&lt;/h2&gt;

&lt;p&gt;Don't stop at describing the issue. Include any stack traces from logs or console output. Check the network tab for any related network errors and include anything that is relevant&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-list-the-steps-you-have-taken"&gt;
  &lt;/a&gt;
  4. List the steps you have taken
&lt;/h2&gt;

&lt;p&gt;Give information on what you have already tried. What commands did you run? What code did you change? What debugging did you do? This will help frame the question and narrow the focus by eliminating these steps.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-link-to-code"&gt;
  &lt;/a&gt;
  5. Link to code
&lt;/h2&gt;

&lt;p&gt;When the question is on a specific piece of code, link to this in github or give a file path and line number. Don't just give a function name. Help other developers find the code you are referring to.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-explain-the-problem-in-full"&gt;
  &lt;/a&gt;
  6. Explain the problem in full
&lt;/h2&gt;

&lt;p&gt;For more general questions on what technology or a library to use, explain what you are trying to achieve. List the things that matter as well as what matters less. Include any constraints you may have.&lt;/p&gt;

&lt;p&gt;In summary:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Ensure you give enough information so that the same state can be reached in the application&lt;/li&gt;
&lt;li&gt;Add as much context as you can&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>beginners</category>
      <category>writing</category>
    </item>
    <item>
      <title>Delegating Effectively as a Tech Lead</title>
      <author>Tyler Hawkins</author>
      <pubDate>Mon, 19 Jul 2021 11:15:15 +0000</pubDate>
      <link>https://dev.to/thawkin3/delegating-effectively-as-a-tech-lead-3gge</link>
      <guid>https://dev.to/thawkin3/delegating-effectively-as-a-tech-lead-3gge</guid>
      <description>&lt;p&gt;Being a tech lead is difficult.&lt;/p&gt;

&lt;p&gt;As a tech lead, you’re often expected to continue to be a high performer as an individual contributor while also taking on additional responsibilities to help the team. These additional responsibilities may include breaking down work into clearly defined tasks, grooming the backlog, prioritizing work, mentoring junior engineers, and resolving blockers for the team.&lt;/p&gt;

&lt;p&gt;The hardest part of being a tech lead is learning to balance your individual work with the needs of the team.&lt;/p&gt;

&lt;p&gt;How do you get your own work done while helping the team remain productive? You can’t do it all, and you certainly don’t want to burn yourself out by working longer hours.&lt;/p&gt;

&lt;p&gt;One solution to managing this added workload lies in learning to delegate effectively. So the question is, when should you delegate and when should you do something yourself?&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#the-delegation-matrix"&gt;
  &lt;/a&gt;
  The Delegation Matrix
&lt;/h2&gt;

&lt;p&gt;Tasks can often be characterized along two spectrums — complexity and frequency. A task may be simple or complex, and a task may need to be performed frequently or infrequently. We can use these attributes to determine when work should or should not be delegated.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_rFy_WaS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d6bi4tj9r3cdpgu4raf6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_rFy_WaS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d6bi4tj9r3cdpgu4raf6.png" alt="The delegation matrix (empty)"&gt;&lt;/a&gt;&lt;/p&gt;
The delegation matrix (empty)






&lt;h2&gt;
  &lt;a href="#simple-and-frequent-tasks"&gt;
  &lt;/a&gt;
  Simple and Frequent Tasks
&lt;/h2&gt;

&lt;p&gt;Engineers love to automate tedious work. Ideally, anything that you have to do frequently should be automated as much as possible. For example, if you need to gather metrics for your team’s work each sprint, see if there’s a way to automate that process.&lt;/p&gt;

&lt;p&gt;In the event that the task cannot be automated, simple and frequent tasks should be delegated. These could be things like running standup meeting or performing simple code reviews. Simple and frequent tasks are things that anyone on the team should be able to do with little or no additional training, so don’t make the mistake of thinking you have to do everything yourself. You’re here to help your team, but your team is also here to help you.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#simple-and-infrequent-tasks"&gt;
  &lt;/a&gt;
  Simple and Infrequent Tasks
&lt;/h2&gt;

&lt;p&gt;If a task is easy and rarely needs to be done, just do it yourself. If it would take longer for you to explain to someone how to do the task than it would for you to just do it, then go ahead and tackle it on your own.&lt;/p&gt;

&lt;p&gt;Please don’t misunderstand. There is a lot of value in training team members and helping others grow. However, these kinds of simple and infrequent tasks generally are not core responsibilities of someone’s job and are not essential to anyone’s career progression.&lt;/p&gt;

&lt;p&gt;An example of a simple and infrequent task might be running a script once per quarter to generate a report. Or it could be purchasing tickets for an upcoming team activity — nothing too exciting, and nothing too time consuming.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#complex-and-frequent-tasks"&gt;
  &lt;/a&gt;
  Complex and Frequent Tasks
&lt;/h2&gt;

&lt;p&gt;Again, automate everything you can. If you can take a complex and frequent task and automate the process to complete it, you should!&lt;/p&gt;

&lt;p&gt;Assuming you can’t automate the task, complex and frequent tasks should be delegated to your team members to help them grow. As a tech lead, you are someone who is good at breaking down work, planning projects, resolving blockers, and handling incidents. Train your team members to develop these skills too!&lt;/p&gt;

&lt;p&gt;Ask a team member to lead the planning session for the next project your team is assigned. Delegate to a colleague  the exercise of breaking down complex work into smaller tasks. The next incident that occurs, invite a teammate to debug the problem with you.&lt;/p&gt;

&lt;p&gt;When you can train your team to handle these complex and frequent tasks, they will progress in their careers. It also frees you up to focus your time and energy elsewhere, as you are no longer the only person capable of doing this kind of work.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#complex-and-infrequent-tasks"&gt;
  &lt;/a&gt;
  Complex and Infrequent Tasks
&lt;/h2&gt;

&lt;p&gt;Complex and infrequent tasks are oftentimes the most difficult to delegate. These tasks don’t happen regularly, so they don’t consume too much of your time. They may be valuable for other team members to learn, but due to the infrequency of the task, the return on investment of training and delegating the work isn’t as high.&lt;/p&gt;

&lt;p&gt;Complex and infrequent tasks should be delegated to rising leaders on your team as stretch assignments. You might ask a senior engineer to help provide a performance review for the intern that they mentored last summer. Or you might ask a senior engineer to do some research and then give a high-level estimate for a new feature that product management is considering but hasn’t committed to yet.&lt;/p&gt;

&lt;p&gt;These types of tasks don’t come up often, but they can be good learning experiences for all involved.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;Let’s return to the delegation matrix. Here it is, all filled out:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1Y1CG6Tm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ky0o8qge4wxqzexwo88h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1Y1CG6Tm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ky0o8qge4wxqzexwo88h.png" alt="Delegation matrix (filled out)"&gt;&lt;/a&gt;&lt;/p&gt;
Delegation matrix (filled out)



&lt;p&gt;As you can see, much of your work can be delegated! Your role as tech lead is to help keep the team productive, and oftentimes the best way to do that is to invest some time up front to train your team members so that soon they can handle even the most complex tasks on their own.&lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;

</description>
      <category>leadership</category>
      <category>career</category>
      <category>productivity</category>
      <category>programming</category>
    </item>
    <item>
      <title>Run Docker commands inside Jenkins Docker container</title>
      <author>Kshitij (kd)</author>
      <pubDate>Mon, 19 Jul 2021 11:14:10 +0000</pubDate>
      <link>https://dev.to/dhingrachief/run-docker-commands-inside-jenkins-docker-k6d</link>
      <guid>https://dev.to/dhingrachief/run-docker-commands-inside-jenkins-docker-k6d</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;If you want to initiate docker containers from within you jenkin containers,this is what you have to do:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;In the Jenkins Dockerfile, add commands docker, docker-compose installed. &lt;/li&gt;
&lt;li&gt;bind mount the docker socket.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And thats it! This is how the Dockerfile looks like:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#jenkins-dockerfile"&gt;
  &lt;/a&gt;
  Jenkins Dockerfile
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;FROM jenkins/jenkins

# Docker install
USER root
RUN apt-get update &amp;amp;&amp;amp; apt-get install -y \
       apt-transport-https \
       ca-certificates \
       curl \
       gnupg2 \
       software-properties-common \


RUN curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -
RUN apt-key fingerprint 0EBFCD88
RUN add-apt-repository \
       "deb [arch=amd64] https://download.docker.com/linux/debian \
       $(lsb_release -cs) \
       stable"

RUN curl -L https://github.com/docker/compose/releases/download/1.27.4/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose \
&amp;amp;&amp;amp; chmod +x /usr/local/bin/docker-compose

RUN apt-get update &amp;amp;&amp;amp; apt-get install -y docker-ce-cli

USER jenkins

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now to build the image:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker build -t jenkins-docker .
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To run the docker-image, including the volume mounts:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; docker run -d --group-add $(stat -c '%g' /var/run/docker.sock) \
-v /var/run/docker.sock:/var/run/docker.sock -p 8080:8080 -p 50000:50000 \
-v `pwd`/jenkins:/var/jenkins_home --log-opt max-size=50k   --log-opt max-file=5   --name jenkins -P jenkins-docker
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here you can see docker.sock file has been mounted.Also, jenkins_home folder has been mounted so that you can persist the information regarding your pipeline/configuration/users etc.&lt;br&gt;
Dont forget to take backup of jenkins_home directory!&lt;/p&gt;

&lt;p&gt;I have uploaded a &lt;a href="https://github.com/kdsama/Jenkins-Docker/blob/main/makefile"&gt;makefile&lt;/a&gt; and a similar &lt;a href="https://github.com/kdsama/Jenkins-Docker/blob/main/Dockerfile"&gt;Dockerfile&lt;/a&gt; on github.&lt;/p&gt;

&lt;p&gt;And thats it! &lt;/p&gt;

</description>
      <category>docker</category>
      <category>jenkins</category>
      <category>devops</category>
    </item>
    <item>
      <title>Algorithm Problems - Baby Steps in Providing Solutions Using JavaScript</title>
      <author>NJOKU SAMSON EBERE</author>
      <pubDate>Mon, 19 Jul 2021 10:50:05 +0000</pubDate>
      <link>https://dev.to/ebereplenty/algorithm-problems-baby-steps-in-providing-solutions-using-javascript-1edp</link>
      <guid>https://dev.to/ebereplenty/algorithm-problems-baby-steps-in-providing-solutions-using-javascript-1edp</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;Recruiters who are interested in the problem solving skills of their candidate, present them problems and ask them to write an algorithm for that problem. By so doing, recruiters are able to separate those who just copy and paste codes from those who really understand the syntax and how it works. But What is an Algorithm?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#jump-to"&gt;
  &lt;/a&gt;
  JUMP TO:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#1"&gt;Steps in Solving an Algorithm Problem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#3"&gt;25 Algorithm to Sharpen Your Problem Solving Skills&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#4"&gt;Bonus&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#4"&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Algorithm (pronounced AL-go-rith-um) is a procedure or formula for solving a problem, based on conducting a sequence of specified actions. A computer program can be viewed as an elaborate algorithm. In mathematics and computer science, an algorithm usually means a small procedure that solves a recurrent problem - &lt;a href="https://whatis.techtarget.com/definition/algorithm"&gt;whatis&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;From the definition above, we can deduce that algorithm is used to solve problems and for one to build an effective algorithm, the person must have a good understanding of the problem being solved.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OAb-cqi_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xzto8gd1wyx01tjd1ieu.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OAb-cqi_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xzto8gd1wyx01tjd1ieu.jpg" alt="Solving Problems With Algorithm"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Algorithm or Problem Solving interviews are almost unavoidable today with the current trends in technology. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eYIbQ2nT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bujnnihdzgvm4icmxgk3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eYIbQ2nT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bujnnihdzgvm4icmxgk3.png" alt="Algorithm Interviews"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In view of this reality, how can you achieve an algorithm to solve a problem?&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#steps-in-solving-an-algorithm-problem"&gt;
  &lt;/a&gt;
  Steps in Solving an Algorithm Problem
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dzadx6fB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6gidy88wsnragk2h5qug.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dzadx6fB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6gidy88wsnragk2h5qug.jpg" alt="Steps in Problem Solving"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;UNDERSTAND&lt;/strong&gt; - Try to understand the problem and break it down into the smallest parts possible.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;STRATEGIZE&lt;/strong&gt; - Find out what tools are available for you in your programming language &lt;em&gt;(We are using JavaScript for the purpose of this article)&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;IMPLEMENT&lt;/strong&gt; - Solve each of the small problems with those tools and combine the solutions to form one solution to the whole problem.&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;For Example, if you are presented with a &lt;em&gt;word palindrome&lt;/em&gt; problem, how do you go about writing the algorithm to that problem?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#lets-apply-the-steps-above"&gt;
  &lt;/a&gt;
  Let's apply the steps above
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/3oz8xW1WD6hLm1oHHq/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/3oz8xW1WD6hLm1oHHq/giphy.gif" alt="Applying the Steps for problem Solving"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-a-understand"&gt;
  &lt;/a&gt;
  &lt;strong&gt;STEP A:&lt;/strong&gt; UNDERSTAND
&lt;/h3&gt;

&lt;p&gt;The big problem here is to check if the word we are given is the same if reversed. &lt;/p&gt;

&lt;p&gt;However, for us to make that happen, we have to provide solutions to smaller problems like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;How to keep a reference to the original word we are given.&lt;/li&gt;
&lt;li&gt;How to reverse the word.&lt;/li&gt;
&lt;li&gt;But for us to reverse the word we need to split the word into characters.&lt;/li&gt;
&lt;li&gt;If we eventually reverse it, we need to join the characters&lt;/li&gt;
&lt;li&gt;Finally, we need to compare the new word to the old one&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#step-b-strategize"&gt;
  &lt;/a&gt;
  &lt;strong&gt;STEP B:&lt;/strong&gt; STRATEGIZE
&lt;/h3&gt;

&lt;p&gt;Some of the tools We have at our displosal include the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;variables&lt;/li&gt;
&lt;li&gt;.split()&lt;/li&gt;
&lt;li&gt;spread operator&lt;/li&gt;
&lt;li&gt;if...else... conditional statement&lt;/li&gt;
&lt;li&gt;ternary operator&lt;/li&gt;
&lt;li&gt;.reverse()&lt;/li&gt;
&lt;li&gt;.join()&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#step-c-implement"&gt;
  &lt;/a&gt;
  &lt;strong&gt;STEP C:&lt;/strong&gt; IMPLEMENT
&lt;/h3&gt;

&lt;p&gt;Having broken down this problem into smaller bits, we have a way to keep a copy of the original word given to us using the &lt;code&gt;variable&lt;/code&gt; tool provided for us by JavaScript&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;orginalWord&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;word&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Since we cannot just reverse a string, we need to split the word and make it an array using the &lt;code&gt;.split("")&lt;/code&gt; method&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;splittedWord&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;word&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we can reverse the array using the &lt;code&gt;.reverse()&lt;/code&gt; like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;reversedWord&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;splittedWord&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reverse&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It is now reversed. But we need to return it to a string without anything separating the characters. So we can use the &lt;code&gt;.join("")&lt;/code&gt; to do that:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;newWord&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;reversedWord&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally, let's compare the word we were given initially, and the one we have now reversed&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
   &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;orginalWord&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;newWord&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
     &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#final-code"&gt;
  &lt;/a&gt;
  Final Code
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;palindrome&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;word&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;orginalWord&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;word&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;splittedWord&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;word&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;reversedWord&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;splittedWord&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reverse&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
   &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;newWord&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;reversedWord&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

   &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;orginalWord&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;newWord&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
     &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Someone else can solve the problem with the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;palindrome&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;word&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;word&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="p"&gt;[...&lt;/span&gt;&lt;span class="nx"&gt;word&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;reverse&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Notice how easy it is to Conquer any problem if you divide it. So basically, algorithm is all about how you can divide and conquer!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Practice, they say breeds perfection. So with that in mind, I am presenting you with the following series to help you get better in your problem solving skills. The series was made a while ago when I decided to embrace algorithm. That decision has improved my programming skills generally and I am sure that it will enhance yours too as well as you chances of winning at technical interviews.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;So please, enjoy the series...&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/3o7527WMiaRJmrWMTe/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/3o7527WMiaRJmrWMTe/giphy.gif" alt="enjoy the series"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#25-algorithm-to-sharpen-your-problem-solving-skills"&gt;
  &lt;/a&gt;
  25 Algorithm to Sharpen Your Problem Solving Skills
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/algorithm-101-7-ways-to-reverse-a-string-15cb"&gt;Algorithm 101: 7 Ways to Reverse a String&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/algorithm-101-13-ways-to-count-vowels-in-a-string-de5"&gt;Algorithm 101: 13 Ways to Count Vowels in a String&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/algorithm-101-6-ways-to-find-the-most-recurring-character-in-a-string-5036"&gt;Algorithm 101: 6 Ways to Find the Most Recurring Character in a String&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/algorithm-101-8-ways-to-capitalize-a-sentence-3bia"&gt;Algorithm 101: 8 Ways to Capitalize a Sentence&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/algorithm-101-6-ways-to-check-if-a-word-is-a-palindrome-40a3"&gt;Algorithm 101: 6 Ways to Check if a Word is a Palindrome&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/algorithm-101-3-ways-to-find-hamming-distance-45mo"&gt;Algorithm 101: 3 Ways to Find Hamming Distance&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/algorithm-101-6-ways-to-find-the-longest-word-in-a-sentence-3d89"&gt;Algorithm 101: 6 Ways to Find the Longest Word in a Sentence&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/algorithm-101-9-ways-to-search-and-replace-a-word-24jk"&gt;Algorithm 101: 9 Ways to Search and Replace a Word&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/algorithm-101-3-ways-to-check-if-two-words-are-anagrams-1j6l"&gt;Algorithm 101: 3 Ways to Check If Two Words are Anagrams&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/algorithm-101-3-ways-to-create-pig-latin-513m"&gt;Algorithm 101: 3 Ways to Create Pig Latin&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/algorithm-101-3-ways-to-check-if-two-sentences-are-anagrams-55jc"&gt;Algorithm 101: 3 Ways to Check if Two Sentences are Anagrams&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/algorithm-202-array-chunking-in-3-ways-1ank"&gt;Algorithm 202: Array Chunking in 3 Ways&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/algorithm-202-array-merging-without-duplicates-in-4-ways-17h3"&gt;Algorithm 202: Array Merging Without Duplicates in 4 Ways&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/algorithm-202-falsy-bouncer-in-4-ways-36p4"&gt;Algorithm 202: Falsy Bouncer in 4 Ways&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/algorithm-202-where-i-belong-in-3-ways-1chk"&gt;Algorithm 202: Where I Belong in 3 Ways&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/algorithm-101-3-ways-to-reverse-an-integer-24gn"&gt;Algorithm 101: 3 Ways to Reverse an Integer&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/algorithm-202-3-ways-to-sum-a-range-of-values-5g93"&gt;Algorithm 202: 3 Ways to Sum a Range of Values&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/algorithm-202-my-interview-question-grouping-anagrams-in-3-ways-49i4"&gt;Algorithm 202 (My Interview Question): Grouping Anagrams in 3 Ways&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/algorithm-101-4-ways-to-fizzbuzz-a-single-number-380d"&gt;Algorithm 101: 4 Ways to FizzBuzz a Single Number&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/algorithm-101-2-ways-to-fizzbuzz-a-range-of-numbers-8f8"&gt;Algorithm 101: 2 Ways to FizzBuzz a Range of Numbers&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/algorithm-101-3-ways-to-get-the-fibonacci-sequence-1i1c"&gt;Algorithm 101: 3 Ways to Get the Fibonacci Sequence&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/algorithm-101-2-ways-to-find-the-largest-product-yielded-by-3-integers-fpf"&gt;Algorithm 101: 2 Ways to Find the Largest Product Yielded by 3 Integers&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/algorithm-101-interview-question-2-ways-to-determine-if-2-words-are-isomorphic-11ap"&gt;Algorithm 101 (Interview Question): 2 Ways to Determine if 2 Words are Isomorphic &lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/algorithm-202-interview-question-matching-parenthesis-in-2-ways-3381"&gt;Algorithm 202 (Interview Question): Matching Parenthesis in 2 Ways&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/hackerrank-sock-merchant-1cgh"&gt;Algorithm 202: Sock Merchant&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/66c2LdxdRxu4E/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/66c2LdxdRxu4E/giphy.gif" alt="BONUS"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bonus"&gt;
  &lt;/a&gt;
  BONUS
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/how-many-tutorial-before-i-become-a-pro-newbie-asks-1fa"&gt;How Many Tutorials Before I become a Pro? - Newbie Asks&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/ebereplenty/3-things-to-help-you-land-your-first-software-engineering-role-46hn"&gt;3 Things to Help You Land Your First Software Engineering Job&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;With the forgoing, you can see that algorithm isn't as difficult as it looks. Basically, it is all about solving day to day problems. However without practicing, it will not be easy to solve problems easily.&lt;/p&gt;

&lt;p&gt;So I encourage you to follow and practice with the algorithm series presented above for you.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/EBEREGIT/Algorithms"&gt;Check out some of the solutions on github&lt;/a&gt;&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>javascript</category>
      <category>algorithms</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Make a Discord Bot with Eris</title>
      <author>DET171</author>
      <pubDate>Mon, 19 Jul 2021 10:47:56 +0000</pubDate>
      <link>https://dev.to/canaris/make-a-discord-bot-with-eris-phi</link>
      <guid>https://dev.to/canaris/make-a-discord-bot-with-eris-phi</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;Hello there, this sentence will mark the beginning of my first ever article released to the public. In this article, I will be writing how to build a Discord bot with &lt;a href="https://abal.moe/Eris/"&gt;Eris&lt;/a&gt; and &lt;a href="https://eritbh.me/yuuko/"&gt;Yuuko&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In this tutorial, I will be using the following format for the code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="c1"&gt;// This line should be added to your code&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="c1"&gt;// This line should be removed from your code&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;A basic knowledge of JavaScript&lt;/li&gt;
&lt;li&gt;Node.js (v12) and NPM (v7) installed on your machine&lt;/li&gt;
&lt;li&gt;A basic knowledge of the &lt;a href="https://discord.com/developers/docs/intro"&gt;Discord API&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#background-info"&gt;
  &lt;/a&gt;
  Background Info
&lt;/h1&gt;

&lt;p&gt;So, what is Eris exactly?&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A lightweight NodeJS Discord Library.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;What is Yuuko, then?&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A Discord command framework for Javascript and Typescript.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I assume that if you've ever wanted to make a Discord Bot, you would have at least googled it up. The first and most common answer you'd see is probably "How to build a Discord Bot with Discord.js". What exactly is the difference between Eris and Discord.js?&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#features"&gt;
  &lt;/a&gt;
  Features
&lt;/h1&gt;

&lt;p&gt;D.js covers 100% of the Discord API while Eris does not. However, covering 100% of the Discord API has its disadvantages.&lt;br&gt;
D.js has a larger memory footprint, and when the bot is in many servers, it starts having performance issues. That is why many large bots, like &lt;a href="https://dankmemer.lol/"&gt;Dank Memer&lt;/a&gt; (The 4th largest Discord Bot), are made using Eris.&lt;/p&gt;

&lt;p&gt;However, there are some packages on NPM that can help with the functions that Eris lacks, for example, &lt;a href="https://www.npmjs.com/package/eris-additions"&gt;Eris Additions&lt;/a&gt;. There are even command handlers for Eris on NPM, like &lt;a href="https://www.npmjs.com/package/yuuko"&gt;Yuuko&lt;/a&gt; and &lt;a href="https://www.npmjs.com/package/eris-boiler"&gt;Eris Boiler&lt;/a&gt;. For developers moving from D.js to Eris, there is &lt;a href="https://www.npmjs.com/package/chariot.js"&gt;Chariot.js&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting started
&lt;/h1&gt;

&lt;p&gt;Now, without further delay, let us dive into the magical world of Discord Bots.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#creating-a-discord-bot-account"&gt;
  &lt;/a&gt;
  Creating a Discord Bot account
&lt;/h1&gt;

&lt;p&gt;Now, the first thing you need to do is to create a Discord Bot account.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Head over to the &lt;a href="https://discord.com/developers/applications"&gt;Discord Applications page&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Click the &lt;code&gt;New Application&lt;/code&gt; button on the top right corner.&lt;/li&gt;
&lt;li&gt;Now name your application (You can change it afterwards). Enter the name and hit &lt;code&gt;Create&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Now that you have created the application, now you need to create the bot account. Head over to &lt;code&gt;Bot&lt;/code&gt; and click on &lt;code&gt;Add Bot&lt;/code&gt;, and then click &lt;code&gt;Click on Yes, do it!&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Under the &lt;code&gt;TOKEN&lt;/code&gt; section, click &lt;code&gt;Copy&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Awesome! Now you have your Bot Token!&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Last but not least, do remember to invite your bot into your server in order to "talk" to it.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#set-up-your-project"&gt;
  &lt;/a&gt;
  Set up your project
&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;Create your project folder and &lt;code&gt;package.json&lt;/code&gt;.
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;mkdir&lt;/span&gt; &amp;lt;your-project-name&amp;gt;
&lt;span class="nb"&gt;cd&lt;/span&gt; &amp;lt;your-project-name&amp;gt;
npm init
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Ensure that the &lt;code&gt;main&lt;/code&gt; in your &lt;code&gt;package.json&lt;/code&gt; is set to &lt;code&gt;index.js&lt;/code&gt;.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Install the relevant dependencies now.
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm i eris yuuko dotenv
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Should you be using a version of NPM below 4.5 &lt;em&gt;(you shouldn't)&lt;/em&gt;, run the following instead:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm i eris yuuko dotenv &lt;span class="nt"&gt;--save&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Install &lt;code&gt;nodemon&lt;/code&gt; as well.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm i &lt;span class="nt"&gt;-g&lt;/span&gt; nodemon
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Create a &lt;code&gt;.env&lt;/code&gt; and &lt;code&gt;index.js&lt;/code&gt; file, and a &lt;code&gt;commands&lt;/code&gt; and &lt;code&gt;events&lt;/code&gt; folder.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#optional-steps"&gt;
  &lt;/a&gt;
  Optional Steps
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Install &lt;code&gt;bufferutil&lt;/code&gt;, &lt;code&gt;zlib-sync&lt;/code&gt; or &lt;code&gt;abalabahaha/erlpack&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Install a linter and create the config file
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt; npm i eslint &lt;span class="nt"&gt;-D&lt;/span&gt;
 &lt;span class="c"&gt;# -D is short for --save-dev&lt;/span&gt;
 npx eslint &lt;span class="nt"&gt;--init&lt;/span&gt;
 &lt;span class="c"&gt;# Just answer the prompts&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's about the end of setting up your project!&lt;br&gt;
Your project tree should look something like this now:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;|   .env
│   index.js
│   package-lock.json
│   package.json
│
├───commands
├───events
└───node_modules
    │   ...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#now-lets-start-coding"&gt;
  &lt;/a&gt;
  Now, let's start coding!
&lt;/h1&gt;

&lt;p&gt;Note: The final code will be included at the end :)&lt;/p&gt;

&lt;p&gt;First, open the project in you favourite text editor, and fill in the &lt;code&gt;.env&lt;/code&gt; file with the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;TOKEN=&amp;lt;your-token-here&amp;gt;
PREFIX=&amp;lt;your-bot-prefix&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Of course, replace &lt;code&gt;&amp;lt;your-token-here&amp;gt;&lt;/code&gt; with the Bot token you obtained earlier, and &lt;code&gt;&amp;lt;your-bot-prefix&amp;gt;&lt;/code&gt; with your bot prefix.&lt;br&gt;
If you do not understand &lt;code&gt;dotenv&lt;/code&gt; and &lt;code&gt;.env&lt;/code&gt; files,&lt;br&gt;
Now that we are no longer concerned with the bot configurations, let us write our basic bot code!&lt;br&gt;
Head over to your &lt;code&gt;index.js&lt;/code&gt; file, and insert the following at the top to require the packages.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Client&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;yuuko&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Imports the Client constructor&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;path&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// For joining paths&lt;/span&gt;
&lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dotenv&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// Imports the variables in the `.env` file&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see, we have imported the &lt;code&gt;Client&lt;/code&gt; constructor from &lt;code&gt;Yuuko&lt;/code&gt; but not the &lt;code&gt;Command&lt;/code&gt; constructor. Why? We will be putting the commands in &lt;code&gt;js&lt;/code&gt; files in the &lt;code&gt;command&lt;/code&gt; folder, so our &lt;code&gt;index.js&lt;/code&gt; file will not be crowded with commands. Neat!&lt;/p&gt;

&lt;p&gt;We can create a client with the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;bot&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;token&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;TOKEN&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;prefix&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PREFIX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;ignoreBots&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;ignoreBots: true&lt;/code&gt; in the code tells our bot to ignore all messages sent by other bots.&lt;br&gt;
If you want to allow commands to be used in only servers, you can set it using the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;globalCommandRequirements&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;guildOnly&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;However, if you want to allow commands to be used in only DMs, you can set it using the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;globalCommandRequirements&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;dmOnly&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To pass context/variables to the commands in other files, you can set in &lt;code&gt;index.js&lt;/code&gt; by doing&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;extendContext&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;variableOne&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Variable number 1!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The variables set here will be passed to commands and event listeners under &lt;code&gt;context.&amp;lt;variable-name&amp;gt;.&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now get you bot to scan the directories and import any event listeners and commands, and lastly, connect to Discord:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;bot&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addDir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;commands&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addDir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;events&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Your &lt;code&gt;index.js&lt;/code&gt; file should now look something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Client&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;yuuko&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;path&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;dotenv&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dotenv&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;env&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;dotenv&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;env&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;bot&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;token&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;TOKEN&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;prefix&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PREFIX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;ignoreBots&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;extendContext&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;variableOne&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Variable number 1!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="nx"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;editStatus&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dnd&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// edits bot status&lt;/span&gt;

&lt;span class="nx"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;error&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;globalCommandRequirements&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;guildOnly&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;bot&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addDir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;commands&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addDir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;events&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#the-raw-ready-endraw-event"&gt;
  &lt;/a&gt;
  The &lt;code&gt;Ready&lt;/code&gt; event
&lt;/h2&gt;

&lt;p&gt;Create a file in &lt;code&gt;./events&lt;/code&gt; and name it &lt;code&gt;ready.js&lt;/code&gt;.&lt;br&gt;
Require the EventListener:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;EventListener&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;yuuko&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and create an event listener:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;EventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ready&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// context.client = bot&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Logged in as &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;usename&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Alternatively, you may also do:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;EventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ready&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// client = bot&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Logged in as &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;usename&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;instead of importing the whole &lt;code&gt;context&lt;/code&gt;. You may be thinking:&lt;br&gt;
'Hey, I didn't define the &lt;code&gt;client&lt;/code&gt; variable in &lt;code&gt;bot.extendContext({})&lt;/code&gt;! Why can it be used here?'&lt;br&gt;
Well, Yuuko automatically sets the &lt;code&gt;client&lt;/code&gt; as the &lt;code&gt;bot&lt;/code&gt;, so you do not need to worry about it!&lt;/p&gt;

&lt;p&gt;Now, start your project:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;nodemon &lt;span class="nb"&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Your final &lt;code&gt;ready.js&lt;/code&gt; code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;EventListener&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;yuuko&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;EventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ready&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// client = bot&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Logged in as &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;usename&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#you-first-command"&gt;
  &lt;/a&gt;
  You first command
&lt;/h2&gt;

&lt;p&gt;Now, create a file in &lt;code&gt;./commands&lt;/code&gt;.&lt;br&gt;
What command should we create, then?&lt;br&gt;
Let's look to our dear friend Dank Memer for some inspiration:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_3I81xP6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/r700Hs1/2021-07-19.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_3I81xP6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/r700Hs1/2021-07-19.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There! Let's make this command then. Name the file you created &lt;code&gt;owo.js&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Open it, and put the following code inside:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Command&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;yuuko&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Command&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;owo&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;channel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;OwO&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and you're done! Your bot should now respond with 'OwO' when you type in the command. It's that easy!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;Eris is a great library to build Discord Bots, as it is lightweight and fast! I will be teaching you how to make a &lt;code&gt;meme&lt;/code&gt; command in my following post. Stay tuned!&lt;br&gt;
(PS You might have to wait quite a while as I have a lot of homework, and have upcoming National Exams to take.)&lt;/p&gt;

&lt;p&gt;Oops. I nearly forgot. The tree of your project folder should now be something like&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;│   .env
│   index.js
│   package-lock.json
│   package.json
│
├───commands
│       owo.js
│
├───events
│       ready.js
│
└───node_modules
    │   ...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Take care and goodbye for now!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>discord</category>
      <category>node</category>
    </item>
    <item>
      <title>8 Free Websites to learn Coding!</title>
      <author>SAIFULLAH🇮🇳</author>
      <pubDate>Mon, 19 Jul 2021 10:46:45 +0000</pubDate>
      <link>https://dev.to/saifullah/8-free-websites-to-learn-coding-3c5</link>
      <guid>https://dev.to/saifullah/8-free-websites-to-learn-coding-3c5</guid>
      <description>&lt;p&gt;Do you love reading more than watching tutorials, then my friend this post is for you. I'm going to reveal &lt;strong&gt;8 free websites&lt;/strong&gt; to learn &lt;strong&gt;Coding&lt;/strong&gt; or &lt;strong&gt;Programming&lt;/strong&gt; for free.&lt;br&gt;
If you want to know the difference between Coding and Programming than check out my previous post &lt;a href="https://dev.to/saifullah/are-you-a-programmer-then-you-must-know-this-differences-oea"&gt;https://dev.to/saifullah/are-you-a-programmer-then-you-must-know-this-differences-oea&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So, let's start.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-w3schools"&gt;
  &lt;/a&gt;
  1 W3schools
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--67MDkiqB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p9owohjnbaubxtj2et2g.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--67MDkiqB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p9owohjnbaubxtj2et2g.jpg" alt="Image of website"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;W3schools is an educational website for learning &lt;strong&gt;web technologies&lt;/strong&gt; online. Contents includes tutorials and references related to &lt;strong&gt;HTML, CSS, JS, JSON, PHP, PYTHON, JAVA, C++ and C#&lt;/strong&gt;&lt;br&gt;
All are present from scratch to advance with exercises in it.&lt;br&gt;
&lt;a href="https://www.w3schools.com/"&gt;W3Schools&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-freecodecamp"&gt;
  &lt;/a&gt;
  2 freeCodeCamp
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XCAi3p2N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zivfgopq6gc2661zd61a.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XCAi3p2N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zivfgopq6gc2661zd61a.jpg" alt="Website Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;freeCodeCamp is an organization that consist of an interactive learning web platform, an &lt;strong&gt;online community forum, chat rooms, online publications and local organization&lt;/strong&gt; that intend to make learning web development accessible to anyone.&lt;br&gt;
&lt;strong&gt;NOTE&lt;/strong&gt; : You can get free Certificate also after completing the tasks.&lt;br&gt;
&lt;a href="https://www.freecodecamp.org/"&gt;freeCodeCamp&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-sololearn"&gt;
  &lt;/a&gt;
  3 Sololearn
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f5WdUI53--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g9a0t3csbo5pibqe3eo1.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f5WdUI53--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g9a0t3csbo5pibqe3eo1.jpg" alt="Image of site"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Sololearn allows users to learn a variety of programming languages and concepts through &lt;strong&gt;short lessons.&lt;/strong&gt; Code Challenges and quizzes included.&lt;br&gt;
&lt;a href="https://www.sololearn.com/"&gt;Sololearn&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-upskill"&gt;
  &lt;/a&gt;
  4 Upskill
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vlrhJN2A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kyrtbvorc432hkb1015v.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vlrhJN2A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kyrtbvorc432hkb1015v.jpg" alt="Upskill website"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Learn how to code from &lt;strong&gt;scratch.&lt;/strong&gt; New contents added regularly to keep you update. &lt;strong&gt;Engaging&lt;/strong&gt; Teaching style. They offer over &lt;strong&gt;200 free lessons!&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://upskillcourses.com/"&gt;Upskill&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-programiz"&gt;
  &lt;/a&gt;
  5 Programiz
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DCz4QmUb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yazo6nd10eaag9oal7sm.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DCz4QmUb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yazo6nd10eaag9oal7sm.jpg" alt="Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Learn to code in &lt;strong&gt;Python, C/C++, Java and other popular programming languages&lt;/strong&gt; with their easy to follow tutorials, examples, online compiler and references.&lt;br&gt;
&lt;a href="https://www.programiz.com/"&gt;Programiz&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-geeksforgeeks"&gt;
  &lt;/a&gt;
  6 GeeksforGeeks
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DJmCy8jQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ccgwxb9doe8u8ghuedwk.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DJmCy8jQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ccgwxb9doe8u8ghuedwk.jpg" alt="image of geeks"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A Computer Science portal for geeks. It contains well written, well thought and well explained &lt;strong&gt;computer science and programming articles, quizzes and more.&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://www.geeksforgeeks.org/"&gt;GeeksforGeeks&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-studytonight"&gt;
  &lt;/a&gt;
  7 Studytonight
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--t04RI8gM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9ymkck75cx56qkk0quix.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t04RI8gM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9ymkck75cx56qkk0quix.jpg" alt="website image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Best place to learn &lt;strong&gt;Engineering subjects&lt;/strong&gt; like Core Java, C++, DBMS, Data Structures etc. Through Hand-written simple Tutorial, Tests, Video tutorials and more.&lt;br&gt;
&lt;a href="https://www.studytonight.com/"&gt;Studytonight&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-javatpoint"&gt;
  &lt;/a&gt;
  8 Javatpoint
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HfFOsUBf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9shgv1mesp652zwq7il3.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HfFOsUBf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9shgv1mesp652zwq7il3.jpg" alt="Java image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Free Online Tutorials, Javatpoint provides &lt;strong&gt;tutorials and interview questions of all technology&lt;/strong&gt; like java tutorial, android, java frameworks, javascript, etc.&lt;br&gt;
&lt;a href="https://www.javatpoint.com/"&gt;Javatpoint&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Happy learning!&lt;br&gt;
If you know something better learning platform comment below.&lt;br&gt;
Thank you.&lt;/p&gt;

</description>
      <category>codenewbie</category>
      <category>webdev</category>
      <category>webassembly</category>
    </item>
  </channel>
</rss>
