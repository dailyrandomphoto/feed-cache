<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How to use ControlValueAccessor to enhance date input with automatic conversion and validation</title>
      <author>Dharmen Shah</author>
      <pubDate>Thu, 03 Jun 2021 09:26:56 +0000</pubDate>
      <link>https://dev.to/shhdharmen/how-to-use-controlvalueaccessor-to-enhance-date-input-with-automatic-conversion-and-validation-3lo4</link>
      <guid>https://dev.to/shhdharmen/how-to-use-controlvalueaccessor-to-enhance-date-input-with-automatic-conversion-and-validation-3lo4</guid>
      <description>&lt;p&gt;Overall idea behind this article to explain and demonstrate the usage of &lt;code&gt;ControlValueAccessor&lt;/code&gt; and &lt;code&gt;Validator&lt;/code&gt; interfaces . The former is used to bind together a FormControl from Forms package and native DOM elements. The latter is used to implement validation logic. They can exist independently of each other, but in this article we’ll implement both using a single directive. Our directive will add the following functionality to the application:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Conversion between input value and control value&lt;/li&gt;
&lt;li&gt;Validation for invalid date&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you’re using &lt;code&gt;ControlValueAccessor&lt;/code&gt; for the first time, I would recommend going through this article first: &lt;a href="https://indepth.dev/posts/1055/never-again-be-confused-when-implementing-controlvalueaccessor-in-angular-forms"&gt;Never again be confused when implementing ControlValueAccessor in Angular forms&lt;/a&gt;. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conversion-of-values"&gt;
  &lt;/a&gt;
  Conversion of values
&lt;/h2&gt;

&lt;p&gt;We will first create a directive and handle conversion between UI and control value.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// src/app/directives/date-input.directive.ts&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Directive&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@angular/core&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;ControlValueAccessor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;NG_VALUE_ACCESSOR&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@angular/forms&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Directive&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;selector&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;input[type=date]&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;providers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;provide&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;NG_VALUE_ACCESSOR&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;useExisting&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;DateInputDirective&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;multi&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;DateInputDirective&lt;/span&gt; &lt;span class="k"&gt;implements&lt;/span&gt; &lt;span class="nx"&gt;ControlValueAccessor&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
  &lt;span class="nx"&gt;writeValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
  &lt;span class="nx"&gt;registerOnChange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fn&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
  &lt;span class="nx"&gt;registerOnTouched&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fn&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We mainly did 3 things for directive:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Set the selector to &lt;code&gt;input[type=date]&lt;/code&gt; - This will add the conversion mechanism and validations to all date-inputs without any extra effort.&lt;/li&gt;
&lt;li&gt;Defined &lt;code&gt;DateInputDirective&lt;/code&gt; class as Value Accessor through the &lt;code&gt;NG_VALUE_ACCESSOR&lt;/code&gt; token. Our directive will be used by Angular to set-up synchronisation with &lt;code&gt;FormControl&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;implement&lt;/code&gt;ed the &lt;code&gt;ControlValueAccessor&lt;/code&gt; interface&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For this example, we are only concerned with two methods on the interface:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;code&gt;writeValue&lt;/code&gt; - this method is used to write a value to the native DOM element. Simply put, this can be utilised to convert &lt;code&gt;FormControl&lt;/code&gt; value to UI value.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;registerOnChange&lt;/code&gt; - This method will help us to store a function, which will be called by value-changes on the UI. In simpler terms, with this we can convert UI value to &lt;code&gt;FormControl&lt;/code&gt; value.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This illustration from the linked article above demonstrates this mechanism:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j5Kg5IBr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622711830989/ScvpcAtnV.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j5Kg5IBr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622711830989/ScvpcAtnV.png" alt="This illustration from the linked article above demonstrates this mechanism"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#writing-value-to-the-native-dom-element-with-raw-writevalue-endraw-"&gt;
  &lt;/a&gt;
  Writing value to the native DOM element with &lt;code&gt;writeValue&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;We want to show the correct and formatted date on the UI when it gets updated through &lt;code&gt;FormControl&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;For example, let’s assume that we are getting &lt;a href="https://www.w3.org/TR/NOTE-datetime"&gt;ISO string of date&lt;/a&gt; from our API, which looks something like this: &lt;code&gt;1994-11-05T08:15:30-05:00&lt;/code&gt;, and when we set the value for &lt;code&gt;FormControl&lt;/code&gt; bound to the date input, we want the &lt;code&gt;input[type=date]&lt;/code&gt; to display date in correct format.&lt;/p&gt;

&lt;p&gt;The code below demonstrates how we convert the ISO string into &lt;code&gt;YYYY-MM-DD&lt;/code&gt; before we set the resulting value for the native &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/date"&gt;HTML date input&lt;/a&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// src/app/directives/date-input.directive.ts&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;formatDate&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@angular/common&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// ...&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;DateInputDirective&lt;/span&gt; &lt;span class="k"&gt;implements&lt;/span&gt; &lt;span class="nx"&gt;ControlValueAccessor&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;writeValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dateISOString&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;UIValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;formatDate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dateISOString&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;YYYY-MM-dd&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;en-IN&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_renderer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;_elementRef&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;nativeElement&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;value&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;UIValue&lt;/span&gt;
      &lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here’s what’s going on above:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;We are creating a string called &lt;code&gt;UIValue&lt;/code&gt;, which will hold the date in &lt;code&gt;YYYY-MM-DD&lt;/code&gt; format. As you can see, we have used the &lt;a href="https://angular.io/api/common/formatDate"&gt;&lt;code&gt;formatDate&lt;/code&gt;&lt;/a&gt; function from &lt;code&gt;@angular/common&lt;/code&gt; to get the formatted date.&lt;/li&gt;
&lt;li&gt;And then, we are setting &lt;code&gt;input&lt;/code&gt;’s &lt;code&gt;value&lt;/code&gt; attribute using &lt;code&gt;Renderer2&lt;/code&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Let’s quickly try out the above changes.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// src/app/app.component.ts&lt;/span&gt;

&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Component&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;selector&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;app-root&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;templateUrl&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./app.component.html&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;AppComponent&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;fg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;FormGroup&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;date&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;FormControl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;toISOString&lt;/span&gt;&lt;span class="p"&gt;()),&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="kd"&gt;get&lt;/span&gt; &lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;date&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note 2 things in above code:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;We set the current date’s ISO string in &lt;code&gt;date&lt;/code&gt; &lt;code&gt;FormControl&lt;/code&gt;, ideally you would get it from API.&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We created a &lt;code&gt;date&lt;/code&gt; getter to get the &lt;code&gt;FormControl&lt;/code&gt;. In a reactive form, you can always access any form control through the &lt;code&gt;get&lt;/code&gt; method on its parent group, but sometimes it's useful to define getters as shorthand for the template.&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="c"&gt;&amp;lt;!-- src/app/app.component.html --&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;code&amp;gt;
    &amp;lt;b&amp;gt;Control Value: &amp;lt;/b&amp;gt;{{ date.value }}
&amp;lt;/code&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;


If you look at the output now, it is setting the correct date in input:

![Output after setting writeValue](https://cdn.hashnode.com/res/hashnode/image/upload/v1622711924429/MLYhqFPtG.png)

## Getting value from the native DOM element with `registerOnChange`

The DOM element holds the value as formatted date. When the user updates the value, we'll need to convert it to a valid ISO string.

Let’s add a `HostListener` first:



```typescript
// src/app/directives/date-input.directive.ts

// …

export class DateInputDirective implements ControlValueAccessor {

  // …

  @HostListener('input', ['$event.target.valueAsNumber'])
  onInput = (_: any) =&amp;gt; {};
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We are using &lt;code&gt;valueAsNumber&lt;/code&gt; to read the value. &lt;code&gt;valueAsNumber&lt;/code&gt; returns the timestamp in milliseconds, the reason we are using it is because it will help us directly get date using &lt;code&gt;new Date(valueAsNumber)&lt;/code&gt;. Also notice the &lt;code&gt;onInput&lt;/code&gt; function above, it’s just a skeleton for now.&lt;/p&gt;

&lt;p&gt;It’s time to implement the conversion logic in &lt;code&gt;registerOnChange&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// src/app/directives/date-input.directive.ts&lt;/span&gt;

&lt;span class="c1"&gt;// …&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;DateInputDirective&lt;/span&gt; &lt;span class="k"&gt;implements&lt;/span&gt; &lt;span class="nx"&gt;ControlValueAccessor&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="c1"&gt;// …&lt;/span&gt;

  &lt;span class="nx"&gt;registerOnChange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fn&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onInput&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;fn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getDate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toISOString&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
      &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;registerOnChange&lt;/code&gt; is called just once by Angular, passing us the callback named &lt;code&gt;fn&lt;/code&gt; in the code above. We can use this callback to update the &lt;code&gt;FormControl&lt;/code&gt; value as a reaction to DOM element update. And we are calling it on the &lt;code&gt;input&lt;/code&gt; event of date-input through &lt;code&gt;onInput&lt;/code&gt; function.&lt;/p&gt;

&lt;p&gt;We also need to create a couple of helper functions, you can change them as per your need:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;  &lt;span class="nx"&gt;getDate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;dateObj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isValidDate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dateObj&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;dateObj&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;toISOString&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;toISOString&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;isValidDate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;d&lt;/span&gt; &lt;span class="k"&gt;instanceof&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;isNaN&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;d&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;unknown&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let’s look at the output now:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0O21nZyL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622712049749/CTIkd2cUv.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0O21nZyL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622712049749/CTIkd2cUv.gif" alt="Output after setting registerOnChange"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see, it’s updating the control's value with a valid ISO string.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#validation"&gt;
  &lt;/a&gt;
  Validation
&lt;/h2&gt;

&lt;p&gt;Now we will add the validation part so that date-input supports validation out-of-the box.&lt;/p&gt;

&lt;p&gt;We will first add &lt;code&gt;NG_VALIDATORS&lt;/code&gt; in providers:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// src/app/directives/date-input.directive.ts&lt;/span&gt;

&lt;span class="c1"&gt;// …&lt;/span&gt;

&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Directive&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;selector&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;input[type=date]&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;providers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;provide&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;NG_VALUE_ACCESSOR&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;useExisting&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;DateInputDirective&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;multi&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;provide&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;NG_VALIDATORS&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;useExisting&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;DateInputDirective&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;multi&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, we will implement the &lt;code&gt;Validator&lt;/code&gt; interface and add &lt;code&gt;validate&lt;/code&gt; method:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;DateInputDirective&lt;/span&gt; &lt;span class="k"&gt;implements&lt;/span&gt; &lt;span class="nx"&gt;ControlValueAccessor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Validator&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="c1"&gt;// ...&lt;/span&gt;

  &lt;span class="nx"&gt;validate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;control&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;AbstractControl&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nx"&gt;ValidationErrors&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;control&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;control&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isValidDate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;date&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Angular will call the &lt;code&gt;validate&lt;/code&gt; method whenever the value of the control changes.&lt;/p&gt;

&lt;p&gt;Let’s modify the template:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;form&lt;/span&gt; &lt;span class="na"&gt;[formGroup]=&lt;/span&gt;&lt;span class="s"&gt;"fg"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt;
        &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"date"&lt;/span&gt;
        &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"birthDate"&lt;/span&gt;
        &lt;span class="na"&gt;formControlName=&lt;/span&gt;&lt;span class="s"&gt;"date"&lt;/span&gt;
      &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"invalid-feedback"&lt;/span&gt; &lt;span class="na"&gt;*ngIf=&lt;/span&gt;&lt;span class="s"&gt;"(date?.touched || date?.dirty) &amp;amp;&amp;amp; date?.invalid"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        Invalid Date
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see, we added a &lt;code&gt;div&lt;/code&gt; to show a validation message. It uses the &lt;code&gt;date&lt;/code&gt; getter defined in the component class.&lt;/p&gt;

&lt;p&gt;Let’s understand the &lt;code&gt;*ngIf&lt;/code&gt; expression:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;ngIf&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;(date?.touched || date?.dirty) &amp;amp;&amp;amp; date?.invalid&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;We don’t want to show validation message if user has not interacted with the input, so we have added &lt;code&gt;date?.touched || date?.dirty&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;We also don’t want to show if &lt;code&gt;date&lt;/code&gt; is valid, so we added &lt;code&gt;date?.invalid&lt;/code&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You can read more about &lt;a href="https://angular.io/guide/form-validation#validating-form-input"&gt;Validating form input on Angular docs&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Let’s look at the output now:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ECMerjgk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622712111240/8bzSQUJnv.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ECMerjgk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622712111240/8bzSQUJnv.gif" alt="Output after implementing Validator"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;We learned below:&lt;/p&gt;

&lt;p&gt;✅  How to use &lt;code&gt;ControlValueAccessor&lt;/code&gt; to&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Convert UI value to valid ISO string and attach it to form-control’s value&lt;/li&gt;
&lt;li&gt;  Convert form-control’s ISO string value to &lt;code&gt;YYYY-MM-DD&lt;/code&gt; format and update the same on UI&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;✅  How to use &lt;code&gt;Validator&lt;/code&gt; to validate user input for date&lt;/p&gt;

&lt;p&gt;You can find the code on &lt;a href="https://stackblitz.com/edit/angular-ivy-khuzec?file=src/app/date-input.directive.ts"&gt;Stackblitz&lt;/a&gt; and &lt;a href="https://github.com/shhdharmen/angular-date-input-directive"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;

</description>
      <category>angular</category>
      <category>typescript</category>
    </item>
    <item>
      <title>Why `hsl` is better</title>
      <author>Siddharth</author>
      <pubDate>Thu, 03 Jun 2021 09:16:39 +0000</pubDate>
      <link>https://dev.to/siddharthshyniben/why-hsl-is-better-3inl</link>
      <guid>https://dev.to/siddharthshyniben/why-hsl-is-better-3inl</guid>
      <description>&lt;p&gt;I prefer &lt;code&gt;hsl&lt;/code&gt; over &lt;code&gt;rgb&lt;/code&gt;. It's really impossible to get colors manually using &lt;code&gt;rgb&lt;/code&gt; (unless you have some paint and a palette near you). &lt;code&gt;hsl(h, s, l)&lt;/code&gt;/&lt;code&gt;hsla(h, s, l, a)&lt;/code&gt; is really easy to understand.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;h&lt;/code&gt; - &lt;strong&gt;Hue:&lt;/strong&gt; The hue. It's the only thing you actually need to know. Think of it like a color wheel. Around 0&lt;sup&gt;o&lt;/sup&gt; and 360&lt;sup&gt;o&lt;/sup&gt; are reds. 120&lt;sup&gt;o&lt;/sup&gt; is where greens are and 240&lt;sup&gt;o&lt;/sup&gt; are blues. Use anything in between 0-360. Values above and below will be modulus 360.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;s&lt;/code&gt; - &lt;strong&gt;Saturation:&lt;/strong&gt; 0% is completely desaturated (grayscale). 100% is fully saturated (full color).&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;l&lt;/code&gt; - &lt;strong&gt;Lightness:&lt;/strong&gt; 0% is completely dark (black). 100% is completely light (white). 50% is average lightness.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;a&lt;/code&gt; - &lt;strong&gt;Alpha:&lt;/strong&gt; Opacity/Transparency value. 0 is fully transparent. 1 is fully opaque. 0.5 is 50% transparent.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can hand-manipulate any of those four values and have a decent idea of what's going to take place. Change the hue to take a journey around the color wheel. Change the saturation to get deeper or more muted hues. Change the lightness to essentially mix in black or white.&lt;/p&gt;

&lt;p&gt;You may know what &lt;code&gt;rgb(0, 0, 0)&lt;/code&gt; and &lt;code&gt;rgb(255, 0, 0)&lt;/code&gt; is, but creating a sea blue and going a bit darker or getting a deep yellow isn't exactly math.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;hsl&lt;/code&gt; is also easy to manipulate with JavaScript. You could create a color scheme from a hue by adjusting the saturation and lightness.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>How I Got Selected into Google Summer of Code</title>
      <author>Rohan Lekhwani</author>
      <pubDate>Thu, 03 Jun 2021 08:55:25 +0000</pubDate>
      <link>https://dev.to/rohanlekhwani/how-i-got-selected-into-google-summer-of-code-27</link>
      <guid>https://dev.to/rohanlekhwani/how-i-got-selected-into-google-summer-of-code-27</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;More than 50,000 students around the world register for GSoC every year and of those who submit a proposal only 1200 are accepted.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Organizations at GSoC work within Operating Systems to Web to Cloud and even applications within Science and Medicine thereby covering almost the entire spectrum of Computer Science.&lt;/p&gt;

&lt;p&gt;I got selected by Rocket.Chat.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UTLpnVzj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sag594vzwpfylfeai52d.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UTLpnVzj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sag594vzwpfylfeai52d.jpg" alt="GSoC Acceptance Mail"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://rocket.chat"&gt;Rocket.Chat&lt;/a&gt; is the ultimate communication platform for teams — say an open-sourced Slack with a different business model.&lt;/p&gt;

&lt;p&gt;It offers web and phone based communication platforms, integrated omnichannel features and even has an &lt;a href="https://rocket.chat/marketplace/"&gt;App Store&lt;/a&gt; of its own where you can publish and monetize apps that run on Rocket.Chat!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-i-did-before-applying-to-gsoc"&gt;
  &lt;/a&gt;
  What I did before applying to GSoC
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Selecting Organizations&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Around December, I started going through organizations that got selected into GSoC the past year and shortlisting them based on a few &lt;strong&gt;criteria&lt;/strong&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The last word is super-important here — to set out a criteria before selecting an organization.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;My plan was to select 3 organizations and then shortlist one or two out of them further as time progressed. Here is what I set my org criteria to:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;1. Work related to Web and Javascript.
2. Multiple projects awarded consistently.
3. Org selected every year at GSoC.
4. Repository remains active on GitHub.
5. A bigger org.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After about a week, I had shortlisted CircuitVerse, CloudCV and of course Rocket.Chat. Out of these three, Rocket.Chat fitted all of my criteria.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Open-source Contribution Leaderboard&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Rocket.Chat has this amazing &lt;a href="https://gsoc.rocket.chat/"&gt;GSoC contribution leaderboard&lt;/a&gt; (started by a past GSoCer at Rocket.Chat) that counts how many contributions every student is making across all Rocket.Chat repositories. The top-10 contributors get a chance for a one-on-one with Gabriel Engel, the Founder and CEO of Rocket.Chat.&lt;/p&gt;

&lt;p&gt;I joined the &lt;a href="https://open.rocket.chat/channel/gsoc2021"&gt;#gsoc2021&lt;/a&gt; channel within Rocket.Chat and started making smaller contributions to the Rocket.Chat main repository at first. Communicating with Rocketeers led me to start working on the &lt;a href="https://github.com/RocketChat/Opensource-Contribution-Leaderboard"&gt;GSoC contribution leaderboard&lt;/a&gt; repository in a team of four.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m1Zf1Ohx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p9e9a9kp455g5ts7i14m.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m1Zf1Ohx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p9e9a9kp455g5ts7i14m.jpg" alt="GSoC Contribution Leaderboard. I’m at number 5 :P"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I worked on filtering contributors by time, building an inclusion/exclusion list where the admin would be able to select which Rocket.Chat repositories to consider when counting contributions, dockerizing the application and fixing bugs. &lt;/p&gt;

&lt;p&gt;My contributions to this repository can be found &lt;a href="https://github.com/search?q=author:RonLek+repo:RocketChat/Opensource-Contribution-Leaderboard&amp;amp;type=issues"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;RC4Community&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;After deploying the GSoC Contribution Leaderboard, we started working on a more ambitious project in January — RC4Community!&lt;/p&gt;

&lt;p&gt;RC4Community, a project we built from scratch, was set to be a one-stop collaboration platform for teams using Git, in other words, Rocket.Chat’s own Gitter. Our power-team (as we called ourselves :P) worked super-hard for the next 3 months to give life to RC4Community.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kJSdzEsG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m0lvs2a4vuywlc3bdwqg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kJSdzEsG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m0lvs2a4vuywlc3bdwqg.png" alt="RC4Community in action at [https://community.rocket.chat/](https://community.rocket.chat/)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I worked specifically on the frontend and backend for creating channels and communities on a Rocket.Chat server from the RC4Community client, providing real-time user statistics — that is real-time updation of when users were online or away, repository information for every channel linked to a repository, CRUD operations for custom GitHub webhooks for repositories, embed badges for direct links to RC4Community rooms, dockerizing the application and a demo mode within RC4Community that set the path for what was to come.&lt;/p&gt;

&lt;p&gt;My contributions to RC4Community can be found &lt;a href="https://github.com/search?q=author:RonLek+repo:RocketChat/RC4Community&amp;amp;type=issues"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;MemeBuddy&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Around the end of March, I started developing an interest within Rocket.Chat Apps. These were Typescript coded (which I was unfamiliar with back then) and worked within the Rocket.Chat ecosystem.&lt;/p&gt;

&lt;p&gt;I had an idea that I thought was really cool. What if there was an app bot that could fetch memes from Reddit and post it directly within a Rocket.Chat room? The idea for MemeBuddy was born. It is Discord’s equivalent to DankMemer (installed on 5 million Discord servers) for Rocket.Chat.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fCm8IJfW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rd3e7bsflnr2nnt6pzjy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fCm8IJfW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rd3e7bsflnr2nnt6pzjy.gif" alt="MemeBuddy triggered by /meme serving within Rocket.Chat"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I extended MemeBuddy to not only work within the Rocket.Chat team collaboration platform but also within their LiveChat Widget used by millions of users on a daily basis. Find MemeBuddy on the &lt;a href="https://rocket.chat/marketplace?category=Social+%26+Fun"&gt;Rocket.Chat Apps Marketplace&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;The repository for MemeBuddy can be found &lt;a href="https://github.com/RonLek/Rocket.Chat.MemeBuddy"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you found this cool. I even wrote a Medium &lt;a href="https://rohanlekhwani.medium.com/making-a-rocket-chat-app-8eaaa0263e39"&gt;blog&lt;/a&gt; over how you can make your own Rocket.Chat App.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-i-did-while-applying-to-gsoc"&gt;
  &lt;/a&gt;
  What I did while applying to GSoC
&lt;/h3&gt;

&lt;p&gt;Every year Rocket.Chat publishes its &lt;a href="https://docs.rocket.chat/contributors/google-summer-of-code/google-summer-of-code-2021"&gt;ideas list&lt;/a&gt; for GSoC. I was particularly interested in the Poll App Mega Extensions project (since I was fascinated with apps) and the Community Collaboration Platform: Improvements project (this is RC4Community in case you’re wondering :P).&lt;/p&gt;

&lt;p&gt;I got in touch with mentors of both the projects through Rocket.Chat rooms made specifically for discussion about each individual project idea. Mentors at Rocket.Chat were truly welcoming and made every effort to resolve doubts and confusions regarding ideas.&lt;/p&gt;

&lt;p&gt;I made sure to reciprocate mentors’ efforts by building sort of an MVP for a few features within the project ideas and got feedback over it. I followed a similar approach while writing my proposal. I read through the proposals of past GSoCers at Rocket.Chat and gleaned the important stuff I could use in mine. I made sure to get feedback after my first and final drafts from my mentors.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Getting feedback from mentors is of utmost importance. Make sure you leave enough time for them to review your proposal.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I included Figma designs and code snippets for implementation details. I tried making my proposal as detailed and substance-driven as possible. In the timeline section I made sure to give a week-by-week estimate of what I would do.&lt;/p&gt;

&lt;p&gt;By the end of the application period I had submitted two proposals — one for the Poll App (31 pages!) and the other for the RC4Community project (18 pages). I’ll be sure to share links to both of my proposals along with Figma files later in this blog series.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-project"&gt;
  &lt;/a&gt;
  The Project
&lt;/h3&gt;

&lt;p&gt;My Poll App Mega Extensions proposal got accepted! (good observation if you already saw that coming in the acceptance mail)&lt;/p&gt;

&lt;p&gt;The Poll App is the &lt;a href="https://rocket.chat/blog/product/top-8-the-most-popular-rocket-chat-apps/"&gt;numero uno&lt;/a&gt; among the most popular Rocket.Chat Apps. My mission during GSoC is to revamp the App to match it with its competitors (Polly.ai, Mentimeter, Kahoot!) by providing a truck-load of features.&lt;/p&gt;

&lt;p&gt;I’ll be working with my mentor during the GSoC period to extend the Poll App both through improved visualizations and additional functionalities.&lt;/p&gt;

&lt;p&gt;I’ll be writing biweekly blogs about my GSoC journey at Rocket.Chat. Follow my voyage on &lt;a href="https://rohanlekhwani.medium.com/about"&gt;Medium&lt;/a&gt;. ⭐&lt;/p&gt;




&lt;p&gt;Like what I do? Help me pull my next all-nighter. Consider &lt;a href="https://www.buymeacoffee.com/rohanlekhwani"&gt;buying me a coffee&lt;/a&gt;.🥤&lt;/p&gt;

&lt;p&gt;Rohan Lekhwani is an open source contributor and enthusiast. You can connect with him on &lt;a href="https://www.linkedin.com/in/rohanlekhwani/"&gt;LinkedIn&lt;/a&gt;, &lt;a href="http://github.com/RonLek"&gt;GitHub&lt;/a&gt;, &lt;a href="https://twitter.com/Rohanlekhwani"&gt;Twitter&lt;/a&gt;, and his &lt;a href="https://ronlek.github.io/"&gt;website&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>typescript</category>
      <category>webdev</category>
      <category>career</category>
    </item>
    <item>
      <title>Future of CSS - Container Query</title>
      <author>Suprabha</author>
      <pubDate>Thu, 03 Jun 2021 08:37:07 +0000</pubDate>
      <link>https://dev.to/suprabhasupi/future-of-css-container-query-4ma4</link>
      <guid>https://dev.to/suprabhasupi/future-of-css-container-query-4ma4</guid>
      <description>&lt;p&gt;&lt;span&gt;A&lt;/span&gt; web page consists of different sections and components, and we make them responsive by using CSS media queries. There is nothing wrong with that, but it has limitations.&lt;/p&gt;

&lt;p&gt;To use container queries we have to tell the container (the parent of the element we want to apply the query to) that we care about its dimensions, we do this with the new contain property.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#css-containment"&gt;
  &lt;/a&gt;
  CSS Containment 🔥
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;My blog&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;section&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;Heading of a nice section&lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Content here.&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;section&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;Another heading of another section&lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;More content here.&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;section&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="py"&gt;contain&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;none&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Indicates the element renders as normal, with no containment applied.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;strict&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Indicates that all containment rules except style are applied to the element. This is equivalent to &lt;code&gt;contain: size layout paint&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;content&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If we give each &lt;code&gt;&amp;lt;section&amp;gt;&lt;/code&gt; the contain property with a value of content, when new elements are inserted the browser understands it does not need to relayout or repaint any area outside of the containing element's subtree, although if the &lt;code&gt;&amp;lt;section&amp;gt;&lt;/code&gt; is styled such that its size depends on its contents (e.g. with height: auto), then the browser may need to account for its size changing).&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;content&lt;/code&gt; value is shorthand for &lt;code&gt;contain: layout paint&lt;/code&gt; .&lt;/p&gt;

&lt;p&gt;It tells the browser that the internal layout of the element is totally separate from the rest of the page, and that everything about the element is painted inside its bounds.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;size&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It does not offer much in the way of performance optimizations when used on its own.&lt;/p&gt;

&lt;p&gt;If you turn on contain: size you need to also specify the size of the element you have applied this to. It will end up being zero-sized in most cases, if you don't manually give it a size.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;layout&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Indicates that nothing outside the element may affect its internal layout and vice versa.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;style&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Indicates that, for properties that can have effects on more than just an element and its descendants, those effects don't escape the containing element. Note that this value is marked "at-risk" in the spec and may not be supported everywhere.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;paint&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Indicates that descendants of the element don't display outside its bounds. If the containing box is offscreen, the browser does not need to paint its contained elements — these must also be offscreen as they are contained completely by that box. And if a descendant overflows the containing element's bounds, then that descendant will be clipped to the containing element's border-box.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;When we use media queries, most of the time we care about the available width (or &lt;strong&gt;inline-size&lt;/strong&gt;).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: You can  which will update as the spec is formed.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-problem-do-container-queries-solve"&gt;
  &lt;/a&gt;
  What problem do container queries solve? 🤔
&lt;/h3&gt;

&lt;p&gt;When creating a responsive design you often use a media query to change the document layout based on the size of the viewport. Media queries give us the ability to size things based on ranges.&lt;/p&gt;

&lt;p&gt;Instead of looking at the viewport size, we can look at the container size and make our layout adjustments according to the space in the container.&lt;/p&gt;

&lt;p&gt;You need to install &lt;a href="https://www.google.com/intl/en/chrome/canary/"&gt;Google Chrome Canary&lt;/a&gt; to run this feature. Once you’ve activated the feature in chrome://flags and enable it. Then a restart chrome canary will be needed.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3F9osX-w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/N6OOX7G.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3F9osX-w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/N6OOX7G.png" alt="CSS Google chrome canary"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, you can then begin to write code like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.parent&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="py"&gt;contain&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;layout&lt;/span&gt; &lt;span class="n"&gt;inline-size&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;@container&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;min-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;400px&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nc"&gt;.child&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;flex-wrap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;wrap&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Checkout this Codepen for how it works 👇&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/suprabhasupi/embed/QWpQrqP?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#browser-support"&gt;
  &lt;/a&gt;
  Browser Support 🌐
&lt;/h2&gt;

&lt;p&gt;Support for &lt;code&gt;container query&lt;/code&gt; is not good at this moment!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5ougXgQI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/KtAW5hg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5ougXgQI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/KtAW5hg.png" alt="CSS container query browser support"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#community-input"&gt;
  &lt;/a&gt;
  Community Input 👭
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://ishadeed.com/article/say-hello-to-css-container-queries/"&gt;Container Query By Ahmad Shadeed&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#reference"&gt;
  &lt;/a&gt;
  Reference 🧐
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Containment"&gt;CSS Containment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Container_Queries"&gt;CSS Container Query&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://caniuse.com/css-container-queries"&gt;Can I Use CSS Container Queries&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/suprabhasupi"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aDe0OdcG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/4t25pJE.png" alt="Buy Me A Coffee"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;
        🌟 &lt;a href="https://twitter.com/suprabhasupi"&gt; Twitter&lt;/a&gt;
      &lt;/td&gt;
      &lt;td&gt;
        👩🏻‍💻 &lt;a href="https://www.suprabha.me/"&gt; suprabha.me&lt;/a&gt;
      &lt;/td&gt;
&lt;td&gt;
        🌟 &lt;a href="https://www.instagram.com/suprabhasupi/"&gt; Instagram&lt;/a&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

</description>
      <category>css</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Solution: Maximum Area of a Piece of Cake After Horizontal and Vertical Cuts</title>
      <author>seanpgallivan</author>
      <pubDate>Thu, 03 Jun 2021 08:16:36 +0000</pubDate>
      <link>https://dev.to/seanpgallivan/solution-maximum-area-of-a-piece-of-cake-after-horizontal-and-vertical-cuts-45p8</link>
      <guid>https://dev.to/seanpgallivan/solution-maximum-area-of-a-piece-of-cake-after-horizontal-and-vertical-cuts-45p8</guid>
      <description>&lt;p&gt;&lt;em&gt;This is part of a series of Leetcode solution explanations (&lt;a href="https://dev.to/seanpgallivan/leetcode-solutions-index-57fl"&gt;index&lt;/a&gt;). If you liked this solution or found it useful,&lt;/em&gt; &lt;strong&gt;&lt;em&gt;please like&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;this post and/or&lt;/em&gt; &lt;strong&gt;&lt;em&gt;upvote&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;&lt;a href="https://leetcode.com/problems/maximum-area-of-a-piece-of-cake-after-horizontal-and-vertical-cuts/discuss/1248591"&gt;my solution post on Leetcode's forums&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#leetcode-problem-1465-medium-maximum-area-of-a-piece-of-cake-after-horizontal-and-vertical-cuts"&gt;
  &lt;/a&gt;
  &lt;a href="https://leetcode.com/problems/maximum-area-of-a-piece-of-cake-after-horizontal-and-vertical-cuts/"&gt;Leetcode Problem #1465 (&lt;em&gt;Medium&lt;/em&gt;): Maximum Area of a Piece of Cake After Horizontal and Vertical Cuts&lt;/a&gt;
&lt;/h4&gt;




&lt;h4&gt;
  &lt;a href="#description"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Description:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt; || &lt;em&gt;Code&lt;/em&gt;: &lt;a href="#javascript-code"&gt;&lt;em&gt;JavaScript&lt;/em&gt;&lt;/a&gt; | &lt;a href="#python-code"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; | &lt;a href="#java-code"&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt; | &lt;a href="#c-code"&gt;&lt;em&gt;C++&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Given a rectangular cake with height &lt;code&gt;h&lt;/code&gt; and width &lt;code&gt;w&lt;/code&gt;, and two arrays of integers &lt;code&gt;horizontalCuts&lt;/code&gt; and &lt;code&gt;verticalCuts&lt;/code&gt; where &lt;code&gt;horizontalCuts[i]&lt;/code&gt; is the distance from the top of the rectangular cake to the &lt;code&gt;i&lt;/code&gt;th horizontal cut and similarly, &lt;code&gt;verticalCuts[j]&lt;/code&gt; is the distance from the left of the rectangular cake to the &lt;code&gt;j&lt;/code&gt;th vertical cut.&lt;/p&gt;

&lt;p&gt;Return &lt;em&gt;the maximum area of a piece of cake after you cut at each horizontal and vertical position provided in the arrays &lt;code&gt;horizontalCuts&lt;/code&gt; and &lt;code&gt;verticalCuts&lt;/code&gt;&lt;/em&gt;. Since the answer can be a huge number, return this modulo &lt;code&gt;10^9 + 7&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#examples"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Examples:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 1:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;h = 5, w = 4, horizontalCuts = [1,2,4], verticalCuts = [1,3]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Explanation:&lt;/td&gt;
&lt;td&gt;The figure above represents the given rectangular cake. Red lines are the horizontal and vertical cuts. After you cut the cake, the green piece of cake has the maximum area.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Visual:&lt;/td&gt;
&lt;td&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1PSJApys--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://assets.leetcode.com/uploads/2020/05/14/leetcode_max_area_2.png" alt="Example 1 Visual"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 2:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;h = 5, w = 4, horizontalCuts = [3,1], verticalCuts = [1]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Explanation:&lt;/td&gt;
&lt;td&gt;The figure above represents the given rectangular cake. Red lines are the horizontal and vertical cuts. After you cut the cake, the green and yellow pieces of cake have the maximum area.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Visual:&lt;/td&gt;
&lt;td&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--U0D2UBHP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://assets.leetcode.com/uploads/2020/05/14/leetcode_max_area_3.png" alt="Example 2 Visual"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 3:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;h = 5, w = 4, horizontalCuts = [3], verticalCuts = [3]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#constraints"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Constraints:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;2 &amp;lt;= h, w &amp;lt;= 10^9&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= horizontalCuts.length &amp;lt; min(h, 10^5)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= verticalCuts.length &amp;lt; min(w, 10^5)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= horizontalCuts[i] &amp;lt; h&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= verticalCuts[i] &amp;lt; w&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;It is guaranteed that all elements in &lt;code&gt;horizontalCuts&lt;/code&gt; are distinct.&lt;/li&gt;
&lt;li&gt;It is guaranteed that all elements in &lt;code&gt;verticalCuts&lt;/code&gt; are distinct.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#idea"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Idea:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;em&gt;Code&lt;/em&gt;: &lt;a href="#javascript-code"&gt;&lt;em&gt;JavaScript&lt;/em&gt;&lt;/a&gt; | &lt;a href="#python-code"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; | &lt;a href="#java-code"&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt; | &lt;a href="#c-code"&gt;&lt;em&gt;C++&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;The trick to this problem is realizing that if the horizontal slices and vertical slices are perpendicular, then all vertical slices cross all horizontal slices. This means that we just need to find the largest of each, and the cross-section should be the largest slice.&lt;/p&gt;

&lt;p&gt;To find the largest slice of each, we need to first &lt;strong&gt;sort&lt;/strong&gt; the horizontal cuts (&lt;strong&gt;hc&lt;/strong&gt;) and vertical cuts (&lt;strong&gt;vc&lt;/strong&gt;), then iterate through both sets and keep track of the maximum difference found between two consecutive cuts (&lt;strong&gt;maxh&lt;/strong&gt;, &lt;strong&gt;maxv&lt;/strong&gt;). We need to not forget to include the two end cuts, which are found using &lt;strong&gt;0&lt;/strong&gt; and &lt;strong&gt;h&lt;/strong&gt;/&lt;strong&gt;w&lt;/strong&gt;, as well.&lt;/p&gt;

&lt;p&gt;Once we have the largest difference for both, we can just &lt;strong&gt;return&lt;/strong&gt; the product of these two numbers, &lt;strong&gt;modulo 1e9+7&lt;/strong&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Time Complexity: O(N * log(N) + M * log(M))&lt;/strong&gt;  where &lt;strong&gt;N&lt;/strong&gt; is the length of &lt;strong&gt;hc&lt;/strong&gt; and &lt;strong&gt;M&lt;/strong&gt; is the length of &lt;strong&gt;vc&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Space Complexity: O(1)&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h4&gt;
  &lt;a href="#javascript-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Javascript Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;maxArea&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;h&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;hc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;vc&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;hc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;vc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;maxh&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;hc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;h&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;hc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;hc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]),&lt;/span&gt;
        &lt;span class="nx"&gt;maxv&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;vc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;w&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;vc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;vc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;hc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nx"&gt;maxh&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;maxh&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;hc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;hc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;vc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nx"&gt;maxv&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;maxv&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;vc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;vc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;maxh&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;maxv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;1000000007&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#python-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Python Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;maxArea&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;hc&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;vc&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;hc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;vc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;maxh&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;maxv&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;hc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]),&lt;/span&gt; &lt;span class="nb"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;vc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hc&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
            &lt;span class="n"&gt;maxh&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;maxh&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;hc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;hc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vc&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
            &lt;span class="n"&gt;maxv&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;maxv&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;vc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;vc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;maxh&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;maxv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;1000000007&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#java-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Java Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;maxArea&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;hc&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;vc&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;Arrays&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;sort&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hc&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="nc"&gt;Arrays&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;sort&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vc&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;maxh&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;max&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hc&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;],&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;hc&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;hc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]),&lt;/span&gt;
            &lt;span class="n"&gt;maxv&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;max&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vc&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;],&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;vc&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;vc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]);&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;hc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++)&lt;/span&gt;
            &lt;span class="n"&gt;maxh&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;max&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;maxh&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;hc&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;hc&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]);&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;vc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++)&lt;/span&gt;
            &lt;span class="n"&gt;maxv&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;max&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;maxv&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;vc&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;vc&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;)((&lt;/span&gt;&lt;span class="kt"&gt;long&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="n"&gt;maxh&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;maxv&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;1000000007&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#c-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;C++ Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;public:&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;maxArea&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;hc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;vc&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;hc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
        &lt;span class="n"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;vc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;maxh&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;hc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;back&lt;/span&gt;&lt;span class="p"&gt;()),&lt;/span&gt;
            &lt;span class="n"&gt;maxv&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;vc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;back&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;hc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;maxh&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;maxh&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;hc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;hc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;vc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;maxv&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;maxv&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;vc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;vc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)((&lt;/span&gt;&lt;span class="kt"&gt;long&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;maxh&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;maxv&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;1000000007&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>algorithms</category>
      <category>javascript</category>
      <category>java</category>
      <category>python</category>
    </item>
    <item>
      <title>देसी  भाषा में एक्सट्रीम बिगिनर्स के लिए डॉकर :) Layman Docker ( translate in ur language too)</title>
      <author>manish srivastava</author>
      <pubDate>Thu, 03 Jun 2021 08:11:15 +0000</pubDate>
      <link>https://dev.to/manishfoodtechs/layman-docker-translate-in-ur-language-too-5g1</link>
      <guid>https://dev.to/manishfoodtechs/layman-docker-translate-in-ur-language-too-5g1</guid>
      <description>&lt;h6&gt;
  &lt;a href="#-%E0%A4%9B%E0%A5%8B%E0%A4%9F%E0%A4%BE-%E0%A4%B8%E0%A4%BE-%E0%A4%85%E0%A4%A8%E0%A5%81%E0%A4%B0%E0%A5%8B%E0%A4%A7-%E0%A4%85%E0%A4%A8%E0%A5%81%E0%A4%B0%E0%A5%8B%E0%A4%A7"&gt;
  &lt;/a&gt;
  *** छोटा सा अनुरोध अनुरोध:***
&lt;/h6&gt;

&lt;h6&gt;
  &lt;a href="#%E0%A4%AE%E0%A5%87%E0%A4%B0%E0%A5%80-%E0%A4%9F%E0%A5%80%E0%A4%AE-%E0%A4%B6%E0%A4%BE%E0%A4%AE%E0%A4%BF%E0%A4%B2-%E0%A4%B9%E0%A5%8B%E0%A4%A8%E0%A5%87-%E0%A4%95%E0%A5%87-%E0%A4%B2%E0%A4%BF%E0%A4%8F-%E0%A4%AB%E0%A5%89%E0%A4%B0%E0%A5%8D%E0%A4%AE-%E0%A4%AE%E0%A5%87%E0%A4%82-%E0%A4%B6%E0%A4%BE%E0%A4%AE%E0%A4%BF%E0%A4%B2-%E0%A4%B9%E0%A5%8B%E0%A4%A8%E0%A5%87-%E0%A4%95%E0%A5%87-%E0%A4%B2%E0%A4%BF%E0%A4%8F-%E0%A4%86%E0%A4%AA%E0%A4%95%E0%A4%BE-%E0%A4%B8%E0%A5%8D%E0%A4%B5%E0%A4%BE%E0%A4%97%E0%A4%A4-%E0%A4%B9%E0%A5%88"&gt;
  &lt;/a&gt;
  मेरी टीम &lt;a href="https://forms.gle/pSCALuEWHus3pg9F6"&gt;शामिल होने के लिए फॉर्म&lt;/a&gt; में शामिल होने के लिए आपका स्वागत है।
&lt;/h6&gt;

&lt;h6&gt;
  &lt;a href="#%E0%A4%87%E0%A4%B8%E0%A4%95%E0%A5%87-%E0%A4%85%E0%A4%B2%E0%A4%BE%E0%A4%B5%E0%A4%BE-%E0%A4%93%E0%A4%AA%E0%A4%A8-%E0%A4%B8%E0%A5%8B%E0%A4%B0%E0%A5%8D%E0%A4%B8-%E0%A4%87%E0%A4%82%E0%A4%9F%E0%A5%87%E0%A4%B2%E0%A4%BF%E0%A4%9C%E0%A5%87%E0%A4%82%E0%A4%9F-%E0%A4%B8%E0%A4%BF%E0%A4%B8%E0%A5%8D%E0%A4%9F%E0%A4%AE-osint-%E0%A4%AE%E0%A5%87%E0%A4%82-%E0%A4%B6%E0%A4%BE%E0%A4%AE%E0%A4%BF%E0%A4%B2-%E0%A4%B9%E0%A5%8B%E0%A4%A8%E0%A5%87-%E0%A4%95%E0%A5%87-%E0%A4%B2%E0%A4%BF%E0%A4%8F-%E0%A4%86%E0%A4%AA%E0%A4%95%E0%A4%BE-%E0%A4%B8%E0%A5%8D%E0%A4%B5%E0%A4%BE%E0%A4%97%E0%A4%A4-%E0%A4%B9%E0%A5%88-%E0%A4%AF%E0%A4%A6%E0%A4%BF-%E0%A4%86%E0%A4%AA-%E0%A4%95%E0%A5%8B%E0%A4%B0%E0%A5%8B%E0%A4%A8%E0%A4%BE-%E0%A4%AA%E0%A5%8D%E0%A4%B0%E0%A4%95%E0%A5%8B%E0%A4%AA-%E0%A4%9C%E0%A5%88%E0%A4%B8%E0%A5%80-%E0%A4%B5%E0%A4%BF%E0%A4%AD%E0%A4%BF%E0%A4%A8%E0%A5%8D%E0%A4%A8-%E0%A4%AC%E0%A5%80%E0%A4%AE%E0%A4%BE%E0%A4%B0%E0%A4%BF%E0%A4%AF%E0%A5%8B%E0%A4%82-%E0%A4%B8%E0%A5%87-%E0%A4%AE%E0%A4%A8%E0%A5%81%E0%A4%B7%E0%A5%8D%E0%A4%AF%E0%A5%8B%E0%A4%82-%E0%A4%95%E0%A5%80-%E0%A4%B0%E0%A4%95%E0%A5%8D%E0%A4%B7%E0%A4%BE-%E0%A4%95%E0%A5%87-%E0%A4%B8%E0%A4%82%E0%A4%AC%E0%A4%82%E0%A4%A7-%E0%A4%AE%E0%A5%87%E0%A4%82-%E0%A4%93%E0%A4%AA%E0%A4%A8-%E0%A4%B8%E0%A5%8B%E0%A4%B0%E0%A5%8D%E0%A4%B8-%E0%A4%AA%E0%A5%8D%E0%A4%B0%E0%A5%8B%E0%A4%9C%E0%A5%87%E0%A4%95%E0%A5%8D%E0%A4%9F-%E0%A4%AE%E0%A5%87%E0%A4%82-%E0%A4%AE%E0%A4%A6%E0%A4%A6-%E0%A4%95%E0%A4%B0-%E0%A4%B8%E0%A4%95%E0%A4%A4%E0%A5%87-%E0%A4%B9%E0%A5%88%E0%A4%82"&gt;
  &lt;/a&gt;
  &lt;em&gt;इसके अलावा ओपन सोर्स इंटेलिजेंट सिस्टम (OSINT) में शामिल होने के लिए आपका स्वागत है यदि आप कोरोना प्रकोप जैसी विभिन्न बीमारियों से मनुष्यों की रक्षा के संबंध में ओपन सोर्स प्रोजेक्ट में मदद कर सकते हैं&lt;/em&gt;
&lt;/h6&gt;

&lt;h6&gt;
  &lt;a href="#httpsgithubcommanishfoodtechsosinthrhwiki"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/Manishfoodtechs/OSINTHRH/wiki"&gt;https://github.com/Manishfoodtechs/OSINTHRH/wiki&lt;/a&gt;
&lt;/h6&gt;

&lt;p&gt;मैंने सर्वर, क्लाउड और कंटेनरों पर शुरुआती लोगों के लिए सरल भाषा में विभिन्न लेख लिखे हैं। आप मेरी प्रोफाइल पर जाकर उन्हें ढूंढ सकते हैं। ऐसा ही एक लेख यहां फिर से अलग शीर्षक के साथ है।&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#%E0%A4%B8%E0%A5%8D%E0%A4%A4%E0%A4%B0-%E0%A4%B6%E0%A5%82%E0%A4%A8%E0%A5%8D%E0%A4%AF-%E0%A4%A1%E0%A5%87%E0%A4%B8%E0%A5%8D%E0%A4%95%E0%A4%9F%E0%A5%89%E0%A4%AA-%E0%A4%94%E0%A4%B0-%E0%A4%B8%E0%A4%B0%E0%A5%8D%E0%A4%B5%E0%A4%B0-%E0%A4%95%E0%A5%87-%E0%A4%AC%E0%A5%80%E0%A4%9A-%E0%A4%85%E0%A4%82%E0%A4%A4%E0%A4%B0"&gt;
  &lt;/a&gt;
  &lt;strong&gt;स्तर शून्य&lt;/strong&gt;: &lt;strong&gt;&lt;em&gt;डेस्कटॉप और सर्वर के बीच अंतर&lt;/em&gt;&lt;/strong&gt;
&lt;/h1&gt;

&lt;h5&gt;
  &lt;a href="#%E0%A4%A1%E0%A5%87%E0%A4%B8%E0%A5%8D%E0%A4%95%E0%A4%9F%E0%A5%89%E0%A4%AA-%E0%A4%95%E0%A5%8D%E0%A4%AF%E0%A4%BE-%E0%A4%B9%E0%A5%88-%E0%A4%8F%E0%A4%95-%E0%A4%A1%E0%A5%87%E0%A4%B8%E0%A5%8D%E0%A4%95%E0%A4%9F%E0%A5%89%E0%A4%AA-%E0%A4%AE%E0%A5%87%E0%A4%82-%E0%A4%B8%E0%A5%80%E0%A4%AA%E0%A5%80%E0%A4%AF%E0%A5%82-%E0%A4%B0%E0%A5%88%E0%A4%AE-%E0%A4%B9%E0%A4%BE%E0%A4%B0%E0%A5%8D%E0%A4%A1-%E0%A4%A1%E0%A5%8D%E0%A4%B0%E0%A4%BE%E0%A4%87%E0%A4%B5-%E0%A4%86%E0%A4%A6%E0%A4%BF-%E0%A4%94%E0%A4%B0-%E0%A4%91%E0%A4%AA%E0%A4%B0%E0%A5%87%E0%A4%9F%E0%A4%BF%E0%A4%82%E0%A4%97-%E0%A4%B8%E0%A4%BF%E0%A4%B8%E0%A5%8D%E0%A4%9F%E0%A4%AE-%E0%A4%B9%E0%A5%8B%E0%A4%A4%E0%A4%BE-%E0%A4%B9%E0%A5%88-%E0%A4%AF%E0%A4%B9-%E0%A4%91%E0%A4%AA%E0%A4%B0%E0%A5%87%E0%A4%9F%E0%A4%BF%E0%A4%82%E0%A4%97-%E0%A4%B8%E0%A4%BF%E0%A4%B8%E0%A5%8D%E0%A4%9F%E0%A4%AE-%E0%A4%B5%E0%A4%BF%E0%A4%82%E0%A4%A1%E0%A5%8B%E0%A4%9C-%E0%A4%B2%E0%A4%BF%E0%A4%A8%E0%A4%95%E0%A5%8D%E0%A4%B8-%E0%A4%AE%E0%A5%88%E0%A4%95-%E0%A4%86%E0%A4%A6%E0%A4%BF-%E0%A4%B9%E0%A5%8B-%E0%A4%B8%E0%A4%95%E0%A4%A4%E0%A4%BE-%E0%A4%B9%E0%A5%88-%E0%A4%86%E0%A4%AA%E0%A4%95%E0%A5%87-%E0%A4%AA%E0%A4%BE%E0%A4%B8-%E0%A4%A1%E0%A5%87%E0%A4%B8%E0%A5%8D%E0%A4%95%E0%A4%9F%E0%A5%89%E0%A4%AA-%E0%A4%AE%E0%A5%87%E0%A4%82-%E0%A4%97%E0%A5%8D%E0%A4%B0%E0%A4%BE%E0%A4%AB%E0%A4%BF%E0%A4%95%E0%A4%B2-%E0%A4%87%E0%A4%82%E0%A4%9F%E0%A4%B0%E0%A4%AB%E0%A5%87%E0%A4%B8-%E0%A4%9C%E0%A5%80%E0%A4%AF%E0%A5%82%E0%A4%86%E0%A4%88-%E0%A4%B9%E0%A5%88-%E0%A4%B2%E0%A5%87%E0%A4%95%E0%A4%BF%E0%A4%A8-%E0%A4%85%E0%A4%97%E0%A4%B0-%E0%A4%86%E0%A4%AA-%E0%A4%9C%E0%A5%80%E0%A4%AF%E0%A5%82%E0%A4%86%E0%A4%88-%E0%A4%B9%E0%A4%9F%E0%A4%BE%E0%A4%A4%E0%A5%87-%E0%A4%B9%E0%A5%88%E0%A4%82-%E0%A4%A4%E0%A5%8B-%E0%A4%AF%E0%A4%B9-%E0%A4%B8%E0%A4%B0%E0%A5%8D%E0%A4%B5%E0%A4%B0-%E0%A4%AC%E0%A4%A8-%E0%A4%9C%E0%A4%BE%E0%A4%A4%E0%A4%BE-%E0%A4%B9%E0%A5%88-%E0%A4%B9%E0%A4%AE-%E0%A4%87%E0%A4%B8%E0%A5%87-%E0%A4%A7%E0%A4%BE%E0%A4%A4%E0%A5%81-%E0%A4%B8%E0%A4%B0%E0%A5%8D%E0%A4%B5%E0%A4%B0-bare-metal-server-%E0%A4%95%E0%A4%B9%E0%A4%A4%E0%A5%87-%E0%A4%B9%E0%A5%88%E0%A4%82"&gt;
  &lt;/a&gt;
  डेस्कटॉप क्या है? एक डेस्कटॉप में सीपीयू, रैम, हार्ड ड्राइव आदि और ऑपरेटिंग सिस्टम होता है। यह ऑपरेटिंग सिस्टम विंडोज, लिनक्स, मैक आदि हो सकता है। आपके पास डेस्कटॉप में ग्राफिकल इंटरफेस (जीयूआई) है लेकिन अगर आप जीयूआई हटाते हैं तो यह सर्वर बन जाता है। हम इसे "धातु सर्वर" (Bare Metal server) कहते हैं।
&lt;/h5&gt;

&lt;h1&gt;
  &lt;a href="#%E0%A4%B8%E0%A5%8D%E0%A4%A4%E0%A4%B0-%E0%A4%8F%E0%A4%95-%E0%A4%8F%E0%A4%95-%E0%A4%B8%E0%A4%B0%E0%A5%8D%E0%A4%B5%E0%A4%B0-%E0%A4%95%E0%A5%87-%E0%A4%85%E0%A4%82%E0%A4%A6%E0%A4%B0-%E0%A4%95%E0%A4%88-%E0%A4%B8%E0%A4%B0%E0%A5%8D%E0%A4%B5%E0%A4%B0-%E0%A4%AA%E0%A5%8D%E0%A4%B0%E0%A4%BE%E0%A4%AA%E0%A5%8D%E0%A4%A4-%E0%A4%95%E0%A4%B0%E0%A4%A8%E0%A4%BE"&gt;
  &lt;/a&gt;
  &lt;strong&gt;स्तर एक&lt;/strong&gt;: &lt;strong&gt;&lt;em&gt;एक सर्वर के अंदर कई सर्वर प्राप्त करना&lt;/em&gt;&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VVVuKkeZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.open.edu/openlearn/ocw/pluginfile.php/1399956/mod_oucontent/oucontent/72266/55f4befe/0c0a3587/2-2-13.small.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VVVuKkeZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.open.edu/openlearn/ocw/pluginfile.php/1399956/mod_oucontent/oucontent/72266/55f4befe/0c0a3587/2-2-13.small.jpg" alt="वर्चुअलाइजेशन"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#%E0%A4%AE%E0%A5%87%E0%A4%9F%E0%A4%B2-%E0%A4%B8%E0%A4%B0%E0%A5%8D%E0%A4%B5%E0%A4%B0-%E0%A4%B8%E0%A4%AC%E0%A4%B8%E0%A5%87-%E0%A4%AE%E0%A4%B9%E0%A4%82%E0%A4%97%E0%A5%87-%E0%A4%B9%E0%A5%88%E0%A4%82-%E0%A4%87%E0%A4%B8%E0%A4%B2%E0%A4%BF%E0%A4%8F-%E0%A4%B2%E0%A5%8B%E0%A4%97%E0%A5%8B%E0%A4%82-%E0%A4%A8%E0%A5%87-%E0%A4%89%E0%A4%A8%E0%A5%8D%E0%A4%B9%E0%A5%87%E0%A4%82-%E0%A4%B8%E0%A4%BE%E0%A4%9D%E0%A4%BE-%E0%A4%95%E0%A4%BF%E0%A4%AF%E0%A4%BE-%E0%A4%94%E0%A4%B0-%E0%A4%89%E0%A4%A8%E0%A5%8D%E0%A4%B9%E0%A5%87%E0%A4%82-%E0%A4%B5%E0%A4%B0%E0%A5%8D%E0%A4%9A%E0%A5%81%E0%A4%85%E0%A4%B2-%E0%A4%AA%E0%A5%8D%E0%A4%B0%E0%A4%BE%E0%A4%87%E0%A4%B5%E0%A5%87%E0%A4%9F-%E0%A4%B8%E0%A4%B0%E0%A5%8D%E0%A4%B5%E0%A4%B0-vpsvm-%E0%A4%95%E0%A4%B9%E0%A4%BE-%E0%A4%B2%E0%A5%87%E0%A4%95%E0%A4%BF%E0%A4%A8-%E0%A4%B9%E0%A4%B0-%E0%A4%95%E0%A5%8B%E0%A4%88-%E0%A4%B5%E0%A4%BF%E0%A4%82%E0%A4%A1%E0%A5%8B%E0%A4%9C%E0%A4%BC-%E0%A4%9C%E0%A5%88%E0%A4%B8%E0%A4%BE-%E0%A4%93%E0%A4%8F%E0%A4%B8-%E0%A4%A8%E0%A4%B9%E0%A5%80%E0%A4%82-%E0%A4%9A%E0%A4%BE%E0%A4%B9%E0%A4%A4%E0%A4%BE-%E0%A4%B9%E0%A5%88-%E0%A4%95%E0%A5%81%E0%A4%9B-%E0%A4%B2%E0%A4%BF%E0%A4%A8%E0%A4%95%E0%A5%8D%E0%A4%B8-%E0%A4%9A%E0%A4%BE%E0%A4%B9%E0%A4%A4%E0%A5%87-%E0%A4%B9%E0%A5%88%E0%A4%82-20-%E0%A4%B8%E0%A4%BE%E0%A4%B2-%E0%A4%AA%E0%A4%B9%E0%A4%B2%E0%A5%87-%E0%A4%B9%E0%A4%BE%E0%A4%87%E0%A4%AA%E0%A4%B0%E0%A4%B5%E0%A4%BE%E0%A4%87%E0%A4%9C%E0%A4%B0%E0%A5%8D%E0%A4%B8-%E0%A4%A8%E0%A4%BE%E0%A4%AE%E0%A4%95-%E0%A4%B8%E0%A5%89%E0%A4%AB%E0%A5%8D%E0%A4%9F%E0%A4%B5%E0%A5%87%E0%A4%AF%E0%A4%B0-%E0%A4%95%E0%A4%BE-%E0%A4%8F%E0%A4%95-%E0%A4%9F%E0%A5%81%E0%A4%95%E0%A4%A1%E0%A4%BC%E0%A4%BE-%E0%A4%86%E0%A4%A4%E0%A4%BE-%E0%A4%B9%E0%A5%88-%E0%A4%9C%E0%A5%8B-%E0%A4%8F%E0%A4%95-%E0%A4%B9%E0%A5%80-%E0%A4%AE%E0%A4%B6%E0%A5%80%E0%A4%A8-%E0%A4%B8%E0%A5%87-%E0%A4%B5%E0%A4%BF%E0%A4%82%E0%A4%A1%E0%A5%8B%E0%A4%9C-%E0%A4%94%E0%A4%B0-%E0%A4%B2%E0%A4%BF%E0%A4%A8%E0%A4%95%E0%A5%8D%E0%A4%B8-%E0%A4%95%E0%A5%8B-%E0%A4%9A%E0%A4%B2%E0%A4%BE%E0%A4%A8%E0%A4%BE-%E0%A4%B8%E0%A4%82%E0%A4%AD%E0%A4%B5-%E0%A4%AC%E0%A4%A8%E0%A4%BE%E0%A4%A4%E0%A4%BE-%E0%A4%B9%E0%A5%88-%E0%A4%94%E0%A4%B0-%E0%A4%87%E0%A4%B8-%E0%A4%A4%E0%A4%95%E0%A4%A8%E0%A5%80%E0%A4%95-%E0%A4%95%E0%A5%8B-%E0%A4%B5%E0%A4%B0%E0%A5%8D%E0%A4%9A%E0%A5%81%E0%A4%85%E0%A4%B2%E0%A4%BE%E0%A4%87%E0%A4%9C%E0%A5%87%E0%A4%B6%E0%A4%A8-%E0%A4%95%E0%A4%B9%E0%A4%BE-%E0%A4%9C%E0%A4%BE%E0%A4%A4%E0%A4%BE-%E0%A4%B9%E0%A5%88-60-%E0%A4%B8%E0%A4%BE%E0%A4%B2-%E0%A4%AA%E0%A4%B9%E0%A4%B2%E0%A5%87-%E0%A4%86%E0%A4%88%E0%A4%AC%E0%A5%80%E0%A4%8F%E0%A4%AE-%E0%A4%A8%E0%A5%87-%E0%A4%B5%E0%A4%B0%E0%A5%8D%E0%A4%9A%E0%A5%81%E0%A4%85%E0%A4%B2%E0%A4%BE%E0%A4%87%E0%A4%9C%E0%A5%87%E0%A4%B6%E0%A4%A8-%E0%A4%AA%E0%A4%B0-%E0%A4%95%E0%A4%BE%E0%A4%AE-%E0%A4%B6%E0%A5%81%E0%A4%B0%E0%A5%82-%E0%A4%95%E0%A4%BF%E0%A4%AF%E0%A4%BE-%E0%A4%A5%E0%A4%BE"&gt;
  &lt;/a&gt;
  मेटल सर्वर सबसे महंगे हैं। इसलिए, लोगों ने उन्हें साझा किया और उन्हें वर्चुअल प्राइवेट सर्वर (VPS/VM) कहा। लेकिन हर कोई विंडोज़ जैसा ओएस नहीं चाहता है। कुछ लिनक्स चाहते हैं। 20 साल पहले, "हाइपरवाइजर्स" नामक सॉफ्टवेयर का एक टुकड़ा आता है, जो एक ही मशीन से विंडोज और लिनक्स को चलाना संभव बनाता है, और इस तकनीक को वर्चुअलाइजेशन कहा जाता है। 60 साल पहले आईबीएम ने वर्चुअलाइजेशन पर काम शुरू किया था।
&lt;/h5&gt;

&lt;h6&gt;
  &lt;a href="#%E0%A4%B8%E0%A4%AE%E0%A4%AF-%E0%A4%B0%E0%A5%87%E0%A4%96%E0%A4%BE-%E0%A4%B5%E0%A5%88%E0%A4%95%E0%A4%B2%E0%A5%8D%E0%A4%AA%E0%A4%BF%E0%A4%95-%E0%A4%AF%E0%A4%B9%E0%A4%BE%E0%A4%82-%E0%A4%AA%E0%A4%A2%E0%A4%BC%E0%A5%87%E0%A4%82"&gt;
  &lt;/a&gt;
  &lt;a href="https://en.wikipedia.org/wiki/Timeline_of_virtualization_Development"&gt;समय रेखा, वैकल्पिक यहां पढ़ें&lt;/a&gt;।
&lt;/h6&gt;

&lt;h4&gt;
  &lt;a href="#%E0%A4%B8%E0%A5%8D%E0%A4%A4%E0%A4%B0-%E0%A4%8F%E0%A4%95-%E0%A4%B9%E0%A4%BE%E0%A4%87%E0%A4%AA%E0%A4%B0%E0%A4%B5%E0%A4%BE%E0%A4%87%E0%A4%9C%E0%A4%B0-%E0%A4%95%E0%A5%87-%E0%A4%AC%E0%A5%80%E0%A4%9A-%E0%A4%B2%E0%A4%A1%E0%A4%BC%E0%A4%BE%E0%A4%88-%E0%A4%B8%E0%A5%89%E0%A4%AB%E0%A5%8D%E0%A4%9F%E0%A4%B5%E0%A5%87%E0%A4%AF%E0%A4%B0-%E0%A4%95%E0%A4%BE-%E0%A4%8F%E0%A4%95-%E0%A4%9F%E0%A5%81%E0%A4%95%E0%A4%A1%E0%A4%BC%E0%A4%BE-%E0%A4%9C%E0%A5%8B-%E0%A4%91%E0%A4%AA%E0%A4%B0%E0%A5%87%E0%A4%9F%E0%A4%BF%E0%A4%82%E0%A4%97-%E0%A4%B8%E0%A4%BF%E0%A4%B8%E0%A5%8D%E0%A4%9F%E0%A4%AE-%E0%A4%95%E0%A5%87-%E0%A4%AD%E0%A5%80%E0%A4%A4%E0%A4%B0-%E0%A4%8F%E0%A4%95-%E0%A4%91%E0%A4%AA%E0%A4%B0%E0%A5%87%E0%A4%9F%E0%A4%BF%E0%A4%82%E0%A4%97-%E0%A4%B8%E0%A4%BF%E0%A4%B8%E0%A5%8D%E0%A4%9F%E0%A4%AE-%E0%A4%AC%E0%A4%A8%E0%A4%BE%E0%A4%A4%E0%A4%BE-%E0%A4%B9%E0%A5%88"&gt;
  &lt;/a&gt;
  &lt;strong&gt;स्तर एक&lt;/strong&gt;: &lt;strong&gt;&lt;em&gt;हाइपरवाइजर के बीच लड़ाई- सॉफ्टवेयर का एक टुकड़ा जो ऑपरेटिंग सिस्टम के भीतर एक ऑपरेटिंग सिस्टम बनाता है।&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;वर्चुअलाइजेशन: पूर्ण वर्चुअलाइजेशन (हार्डवेयर वर्चुअलाइजेशन), पैरा-वर्चुअलाइजेशन और ओएस-लेवल वर्चुअलाइजेशन तीन प्रकार के होते हैं।&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;पूर्ण वर्चुअलाइजेशन:&lt;/em&gt;&lt;/strong&gt; कर्नेल-आधारित हाइपरविजर (केवीएम आदि..) प्रत्येक मशीन के लिए रैम/कोर/हार्ड ड्राइव आदि संसाधनों फिक्स तरीके से बाट देता है।  । इसने VMs के बीच एक संसाधन समस्या पैदा कर दी | क्यूंकि कम संसाधन वाली सर्वर पे ज्यादा लोड हो सकता है और ज्यादा संसाधन वाले सर्वर पे कम।  क्यूंकि संसाधन फिक्स हैं इसलिए अगर कम संसाधन वाले सर्वर को ज्यादा रैम चाहिए होगा तो उसे नहीं उपलब्ध होगा क्यूंकि सबकुछ पहले से ही हमने फिक्स कर दिया है। यही कारण है की आप वर्चुअल बॉक्स को होस्टिंग के लिए नहीं उपयोग कर पाते। &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;मशीनों के बीच लड़ाई- रिसोर्स पूलिंग द्वारा हल&lt;/strong&gt;&lt;br&gt;
कर्नेल में वर्चुअलाइजेशन के बजाय, इन नए OS आधारित हाइपरविजर (OpenVZ, आदि..) ने ram, HDD, आदि जैसे संसाधनों का एक पूल बनाया और आवश्यकता पड़ने पर उन्हें वर्चुअल मशीनों के साथ साझा किया। इसने कुछ हद तक संसाधन लड़ाई को नियंत्रित किया।&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;वर्चुअल मशीनें ट्रंकी हैं, लाइट सॉल्यूशन की जरूरत है&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;कर्नेल हाइपरवाइजर या ओएस-आधारित हाइपरवाइजर आधारित मशीनों को स्थापित करने के लिए बड़ी फाइलों [.iso (1-4 जीबी)] की आवश्यकता होती है। एक छोटी वर्चुअल मशीन को व्यवस्थित करने में समय लगता है। इसके अलावा, वे हार्ड ड्राइव पर भारी हैं। इसका मुकाबला करने के लिए, हाल के वर्षों में एक नई हल्की तकनीक का विकास किया गया है जिसे हम "कंटेनर" कहते हैं। वे कुछ हद तक ओएस-आधारित विज़ुअलाइज़र के समान हैं, सिवाय इसके कि उनके पास इंटरनेट पर संपीड़ित छवियां हैं जिन्हें आप डाउनलोड कर सकते हैं और अपनी पसंद का ओएस बना सकते हैं।&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;जब हमारे पास चलने के लिए अच्छी जमीन है, तो हमें बादलो (cloud :) ) की आवश्यकता क्यों है&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;आज आप सबसे लोकप्रिय ओएस - उबंटू आईएसओ सीडी (1 जीबी+) से या एक कंटेनर (93 एमबी) में भी प्राप्त कर सकते हैं। सीडी और कंटेनर के बीच उबंटू प्राप्त करने के लिए आकार (size)  और समय (time to up) में  बड़ा अंतर क्लाउड की वास्तविक आवश्यकता है।&lt;/p&gt;
&lt;h6&gt;
  &lt;a href="#-%E0%A4%85%E0%A4%B5%E0%A4%B6%E0%A5%8D%E0%A4%AF-%E0%A4%AA%E0%A4%A2%E0%A4%BC%E0%A5%87%E0%A4%82-%E0%A4%85%E0%A4%AA%E0%A4%A8%E0%A5%80-%E0%A4%95%E0%A5%8D%E0%A4%B2%E0%A4%BE%E0%A4%89%E0%A4%A1-%E0%A4%B8%E0%A5%87%E0%A4%B5%E0%A4%BE-%E0%A4%AC%E0%A4%A8%E0%A4%BE%E0%A4%A8%E0%A5%87-%E0%A4%95%E0%A5%87-%E0%A4%B8%E0%A4%82%E0%A4%AC%E0%A4%82%E0%A4%A7-%E0%A4%AE%E0%A5%87%E0%A4%82-%E0%A4%AE%E0%A5%87%E0%A4%B0%E0%A5%80-%E0%A4%AA%E0%A4%BF%E0%A4%9B%E0%A4%B2%E0%A5%80-%E0%A4%AA%E0%A5%8B%E0%A4%B8%E0%A5%8D%E0%A4%9F-%E0%A4%A6%E0%A5%87%E0%A4%96%E0%A5%87%E0%A4%82-%E0%A4%AD%E0%A4%BE%E0%A4%97-1-%E0%A4%94%E0%A4%B0-%E0%A4%AD%E0%A4%BE%E0%A4%972-%E0%A4%94%E0%A4%B0-part3"&gt;
  &lt;/a&gt;
  ** अवश्य पढ़ें:** अपनी क्लाउड सेवा  बनाने के संबंध में मेरी पिछली पोस्ट देखें। &lt;a href="https://dev.to/manishfoodtechs/creating-your-cloud-infrastructure-like-google-cloud-and-digital-ocean-from-scratch-part-1-3gnm"&gt;भाग 1&lt;/a&gt; और &lt;a href="https://dev.to/manishfoodtechs/creating-your-cloud-infrastructure-like-google-cloud-and-digital-ocean-from-scratch-part-2-5f7f"&gt;भाग-2 &lt;/a&gt; और &lt;a href="//https%20://dev.to/manishfoodtechs/creating-your-cloud-infrastructure-like-google-cloud-and-digital-ocean-from-scratch-part-3-coding-stuff-20eo"&gt;Part-3&lt;/a&gt;
&lt;/h6&gt;
&lt;h5&gt;
  &lt;a href="#%E0%A4%B8%E0%A5%8D%E0%A4%A4%E0%A4%B0-%E0%A4%8F%E0%A4%95-%E0%A4%B8%E0%A4%82%E0%A4%95%E0%A5%8D%E0%A4%B7%E0%A5%87%E0%A4%AA-%E0%A4%AE%E0%A5%87%E0%A4%82-20-%E0%A4%B8%E0%A4%BE%E0%A4%B2-%E0%A4%AA%E0%A4%B9%E0%A4%B2%E0%A5%87-%E0%A4%B9%E0%A4%AE-%E0%A4%8F%E0%A4%95-%E0%A4%91%E0%A4%AA%E0%A4%B0%E0%A5%87%E0%A4%9F%E0%A4%BF%E0%A4%82%E0%A4%97-%E0%A4%B8%E0%A4%BF%E0%A4%B8%E0%A5%8D%E0%A4%9F%E0%A4%AE-%E0%A4%B8%E0%A5%87-%E0%A4%95%E0%A4%88-%E0%A4%91%E0%A4%AA%E0%A4%B0%E0%A5%87%E0%A4%9F%E0%A4%BF%E0%A4%82%E0%A4%97-%E0%A4%B8%E0%A4%BF%E0%A4%B8%E0%A5%8D%E0%A4%9F%E0%A4%AE-%E0%A4%AA%E0%A5%8D%E0%A4%B0%E0%A4%BE%E0%A4%AA%E0%A5%8D%E0%A4%A4-%E0%A4%95%E0%A4%B0%E0%A4%A8%E0%A5%87-%E0%A4%AE%E0%A5%87%E0%A4%82-%E0%A4%B8%E0%A4%95%E0%A5%8D%E0%A4%B7%E0%A4%AE-%E0%A4%A5%E0%A5%87-%E0%A4%B2%E0%A5%87%E0%A4%95%E0%A4%BF%E0%A4%A8-%E0%A4%B8%E0%A4%82%E0%A4%B8%E0%A4%BE%E0%A4%A7%E0%A4%A8-%E0%A4%8F%E0%A4%95-%E0%A4%B8%E0%A4%AE%E0%A4%B8%E0%A5%8D%E0%A4%AF%E0%A4%BE-%E0%A4%A5%E0%A5%80-%E0%A4%AA%E0%A5%82%E0%A4%B0%E0%A5%8D%E0%A4%A3-%E0%A4%B9%E0%A4%BE%E0%A4%B0%E0%A5%8D%E0%A4%A1%E0%A4%B5%E0%A5%87%E0%A4%AF%E0%A4%B0-%E0%A4%B5%E0%A4%B0%E0%A5%8D%E0%A4%9A%E0%A5%81%E0%A4%85%E0%A4%B2%E0%A4%BE%E0%A4%87%E0%A4%9C%E0%A5%87%E0%A4%B6%E0%A4%A8-%E0%A4%AB%E0%A4%BF%E0%A4%B0-%E0%A4%AA%E0%A5%88%E0%A4%B0%E0%A4%BE%E0%A4%B5%E0%A4%B0%E0%A5%8D%E0%A4%9A%E0%A5%81%E0%A4%85%E0%A4%B2%E0%A4%BE%E0%A4%87%E0%A4%9C%E0%A5%87%E0%A4%B6%E0%A4%A8-%E0%A4%AB%E0%A4%BF%E0%A4%B0-%E0%A4%95%E0%A4%82%E0%A4%9F%E0%A5%87%E0%A4%A8%E0%A4%B0-%E0%A4%8F%E0%A4%B2%E0%A4%8F%E0%A4%95%E0%A5%8D%E0%A4%B8%E0%A4%A1%E0%A5%80-%E0%A4%94%E0%A4%B0-%E0%A4%A1%E0%A5%89%E0%A4%95%E0%A4%B0%E0%A5%8D%E0%A4%B8-%E0%A4%9C%E0%A4%BE%E0%A4%A8%E0%A5%87%E0%A4%AE%E0%A4%BE%E0%A4%A8%E0%A5%87-%E0%A4%95%E0%A4%82%E0%A4%9F%E0%A5%87%E0%A4%A8%E0%A4%B0-%E0%A4%B9%E0%A5%88%E0%A4%82-%E0%A4%94%E0%A4%B0-%E0%A4%AA%E0%A4%A2%E0%A4%BC%E0%A5%87%E0%A4%82-httpswwwunixarenacom201712paravirtualizationfullvirtualizationhardwareassistedvirtualizationhtml"&gt;
  &lt;/a&gt;
  स्तर एक (संक्षेप में): 20 साल पहले हम एक ऑपरेटिंग सिस्टम से कई ऑपरेटिंग सिस्टम प्राप्त करने में सक्षम थे लेकिन संसाधन एक समस्या थी। पूर्ण हार्डवेयर वर्चुअलाइजेशन फिर पैरावर्चुअलाइजेशन फिर कंटेनर। एलएक्सडी और डॉकर्स जाने-माने कंटेनर हैं। और पढ़ें: &lt;a href="https://www.unixarena.com/2017/12/para-virtualization-full-virtualization-hardware-assisted-virtualization.html/"&gt;https://www.unixarena.com/2017/12/para-virtualization-full-virtualization-hardware-assisted-virtualization.html/&lt;/a&gt;
&lt;/h5&gt;
&lt;h1&gt;
  &lt;a href="#%E0%A4%B8%E0%A5%8D%E0%A4%A4%E0%A4%B0-%E0%A4%A6%E0%A5%8B-%E0%A4%85%E0%A4%AA%E0%A4%A8%E0%A5%80-%E0%A4%96%E0%A5%81%E0%A4%A6-%E0%A4%95%E0%A5%80-%E0%A4%B5%E0%A4%B0%E0%A5%8D%E0%A4%9A%E0%A5%81%E0%A4%85%E0%A4%B2-%E0%A4%AE%E0%A4%B6%E0%A5%80%E0%A4%A8-%E0%A4%AC%E0%A4%A8%E0%A4%BE%E0%A4%A8%E0%A4%BE-%E0%A4%9A%E0%A4%BE%E0%A4%B9%E0%A4%A4%E0%A5%87-%E0%A4%B9%E0%A5%88%E0%A4%82"&gt;
  &lt;/a&gt;
  &lt;strong&gt;स्तर दो&lt;/strong&gt;: &lt;strong&gt;&lt;em&gt;अपनी खुद की वर्चुअल मशीन बनाना चाहते हैं?&lt;/em&gt;&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;आप केवीएम के साथ एक मेटल सर्वर खरीद सकते हैं या अपने विंडोज़ डेस्कटॉप में वर्चुअलबॉक्स या वीएमवेयर प्ले स्टेशन का उपयोग कर सकते हैं। आप विंडोज़ डेस्कटॉप पर अपने लिनक्स सर्वर को स्पिन करने के लिए .iso इमेज (लगभग 1GB) का उपयोग करेंगे।&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#%E0%A4%B8%E0%A5%8D%E0%A4%A4%E0%A4%B0-%E0%A4%A4%E0%A5%80%E0%A4%A8-%E0%A4%95%E0%A4%82%E0%A4%9F%E0%A5%87%E0%A4%A8%E0%A4%B0"&gt;
  &lt;/a&gt;
  &lt;strong&gt;स्तर तीन&lt;/strong&gt;: &lt;strong&gt;&lt;em&gt;कंटेनर?&lt;/em&gt;&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;.iso छवि (लगभग 1GB) का उपयोग करने के बजाय, हम अपनी वर्चुअल मशीनों को स्पिन करने के लिए इंटरनेट पर होस्ट की गई छोटी छवियों (100 एमबी) का उपयोग करेंगे (एक बेहतर शब्द एक कंटेनर है)।&lt;/p&gt;

&lt;p&gt;दो सबसे लोकप्रिय कंटेनर प्रौद्योगिकियां एलएक्सडी और डॉकर्स हैं। लेकिन वे थोड़े अलग हैं। एलएक्सडी (LXD) में आप वीएम जैसे सर्वर की एक छवि लॉन्च करते हैं लेकिन डॉकर में, आप सर्वर और ऐप्स की छवियों को लॉन्च कर सकते हैं।&lt;/p&gt;

&lt;p&gt;ठीक है, मैं आपको एक उदाहरण देता हूं:&lt;/p&gt;

&lt;p&gt;मान लीजिए आपके पास PHP वेबसाइट है। इस PHP वेबसाइट को चलाने के लिए आपको एक अपाचे सर्वर (जैसे xampp) और MySQL डेटाबेस की आवश्यकता होती है।&lt;/p&gt;

&lt;p&gt;LXD में आप एक ubuntu सर्वर बनाएंगे और उसके अंदर आप apache सर्वर और MySQL डेटाबेस को इंस्टॉल करेंगे। [१ कंटेनर अपाचे के अंदर रखता है, mysql]&lt;/p&gt;

&lt;p&gt;लेकिन डॉकटर में, आपके पास दो अलग-अलग कंटेनर हो सकते हैं: एक अपाचे के लिए और दूसरा MySQL के लिए। और अपाचे सर्वर के लिए सिर्फ एक कंटेनर ही क्यों? आइए दो अपाचे कंटेनर और तीन MySQL लें ... यदि कोई विफल रहता है तो अन्य चलने लगेंगे ... और हमारा ऐप कभी भी "बंद नहीं होगा"। [विभिन्न कंटेनर अलग-अलग ऐप्स रखते हैं]&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#%E0%A4%B8%E0%A5%8D%E0%A4%A4%E0%A4%B0-%E0%A4%9A%E0%A4%BE%E0%A4%B0-%E0%A4%95%E0%A4%82%E0%A4%9F%E0%A5%87%E0%A4%A8%E0%A4%B0%E0%A5%8B%E0%A4%82-%E0%A4%95%E0%A4%BE-%E0%A4%89%E0%A4%AA%E0%A4%AF%E0%A5%8B%E0%A4%97-%E0%A4%95%E0%A5%88%E0%A4%B8%E0%A5%87-%E0%A4%95%E0%A4%B0%E0%A5%87%E0%A4%82"&gt;
  &lt;/a&gt;
  &lt;strong&gt;स्तर चार&lt;/strong&gt; : &lt;strong&gt;कंटेनरों का उपयोग कैसे करें?&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;कंटेनर सर्वर हैं !!! चलो इस तरह मान लेते हैं।&lt;br&gt;
तो, हमें पता होना चाहिए:&lt;br&gt;
(१) सर्वर कैसे लॉन्च करें।&lt;br&gt;
(२) सर्वर कैसे शुरू करें।&lt;br&gt;
(३) सर्वर के अंदर कोडिंग कैसे करें: - सर्वर के अंदर ऐप्स / प्रोग्राम डालें।&lt;br&gt;
(४) सर्वर को कैसे रोकें।&lt;br&gt;
(५) इंटरनेट के माध्यम से हमारे सर्वर को दुनिया के लिए कैसे सुलभ बनाया जाए।&lt;br&gt;
(६) इससे नया सर्वर बनाने के लिए सर्वर की इमेज कैसे बनाएं।&lt;br&gt;
(७) एक ही होस्ट के भीतर एक ही प्रोग्राम द्वारा अनेक सर्वरों का प्रबंधन कैसे करें।&lt;br&gt;
(८) मेरे पास दुनिया के अलग-अलग हिस्सों में होस्ट किए गए सर्वर हैं। क्या मैं इसे एक कार्यक्रम द्वारा प्रबंधित कर सकता हूं?&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#%E0%A4%AA%E0%A4%BE%E0%A4%82%E0%A4%9A%E0%A4%B5%E0%A4%BE%E0%A4%82-%E0%A4%B8%E0%A5%8D%E0%A4%A4%E0%A4%B0-%E0%A4%89%E0%A4%A4%E0%A5%8D%E0%A4%A4%E0%A4%B0-%E0%A4%95%E0%A4%82%E0%A4%9F%E0%A5%87%E0%A4%A8%E0%A4%B0%E0%A5%8B%E0%A4%82-%E0%A4%95%E0%A4%BE-%E0%A4%89%E0%A4%AA%E0%A4%AF%E0%A5%8B%E0%A4%97-%E0%A4%95%E0%A5%88%E0%A4%B8%E0%A5%87-%E0%A4%95%E0%A4%B0%E0%A5%87%E0%A4%82"&gt;
  &lt;/a&gt;
  &lt;strong&gt;पांचवां स्तर&lt;/strong&gt; : &lt;strong&gt;उत्तर... कंटेनरों का उपयोग कैसे करें?&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;एलएक्सडी स्थापित करें: snap install lxd&lt;br&gt;
डॉकर स्थापित करें:sudo apt install docker.io -y &amp;amp;&amp;amp; sudo systemctl enable --now docker &amp;amp;&amp;amp; sudo usermod -aG docker root &amp;amp;&amp;amp; docker --version&lt;/p&gt;

&lt;p&gt;शुरू करने से पहले: याद रखें: उबंटू 'छवि' है और हम इस छवि से 'कंटेनर (सर्वर कहें)' बनाते हैं। मेजबान वह मशीन है जिसका उपयोग हम अपनी पसंद के कंटेनर जैसे उबंटू, सेंटोस, फेडोरा इत्यादि बनाने के लिए करते हैं।&lt;/p&gt;

&lt;p&gt;सर्वर = कंटेनर (कहते हैं)&lt;/p&gt;

&lt;p&gt;(१) सर्वर कैसे लॉन्च करें।&lt;br&gt;
एलएक्सडी: lxc launch ubuntu:18.04 myfirstcontainer&lt;br&gt;
डॉकर: docker pull ubuntu:latest औरdocker run -it myfirstcontainer ubuntu:latest&lt;/p&gt;

&lt;p&gt;(२) सर्वर कैसे शुरू करें।&lt;br&gt;
एलएक्सडी: lxc start myfirstcontainer&lt;br&gt;
डॉकर: docker start myfirstcontainer&lt;/p&gt;

&lt;p&gt;(३) सर्वर के अंदर कोडिंग कैसे करें: - सर्वर के अंदर ऐप्स / प्रोग्राम डालें।&lt;br&gt;
चलो कंटेनर के अंदर आते हैं और कुछ कोडिंग करते हैं जैसे Nginx सर्वर स्थापित करना।&lt;br&gt;
LXD: lxc exec my first container bash&lt;br&gt;
Docker: docker ps -a --&amp;gt; कंटेनर आईडी प्राप्त करें और फिर docker exec -it ed58974dd bash&lt;/p&gt;

&lt;p&gt;ed58974dd docker द्वारा दी गई कंटेनर आईडी है। एलएक्सडी के विपरीत, आपको डॉकर प्रदाता यादृच्छिक आईडी का उपयोग करना होगा।&lt;/p&gt;

&lt;p&gt;इंस्टाल करने के बाद... exitकंटेनर से बाहर आने के लिए टाइप करें।&lt;/p&gt;

&lt;p&gt;(४) सर्वर को कैसे रोकें।&lt;br&gt;
एलएक्सडी: lxc stop myfirstcontainer&lt;br&gt;
डॉकर: docker stop ed58974dd&lt;/p&gt;

&lt;p&gt;(५) इंटरनेट&lt;br&gt;
एलएक्सडी द्वारा हमारे सर्वर को दुनिया के लिए कैसे सुलभ बनाया जाए : जब भी आप एक कंटेनर बनाते हैं, तो आपको उस कंटेनर का एक आईपी पता मिलता है। ip aआपको कंटेनर का पता देगा या एलएक्ससी सूची देगा। हमने nginx के साथ एक lxd कंटेनर बनाया था। ngnix पोर्ट 80 पर सुनेगा। इंटरनिप&lt;br&gt;
: 80 । लेकिन इस इंटर्नैप को इंटरनेट द्वारा एक्सेस नहीं किया जा सकता है। इंटरनेट पर केवल होस्ट आईपी उपलब्ध है। इस इंटर्निप को रूट करने के लिए : 80 से होस्टिप: 8945 (जो भी पोर्ट आप चाहते हैं) आपको iptables करने की आवश्यकता है।&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/manishfoodtechs/networking-is-easy-connecting-multiple-vms-servers-containers-devices-on-single-external-ip-in-one-command-139a"&gt;https://dev.to/manishfoodtechs/networking-is-easy-connecting-multiple-vms-servers-containers-devices-on-single-external-ip-in-one-command-139a&lt;/a&gt; आपकी मदद करने के लिए यहां एक लेख है :)&lt;/p&gt;

&lt;p&gt;डॉकर: कंटेनरों के निर्माण के बाद यह थोड़ा मुश्किल है। इसलिए आपको डोकर इमेज को स्पिन करने से पहले पता होना चाहिए कि आपको किस पोर्ट की आवश्यकता होगी। Nginx के इस उदाहरण के लिए हम इसके पोर्ट 80 को जानते हैं, इसलिए हमारा सिंटैक्स हो सकता हैdocker run -p 8945:80 -t -i Ubuntu। इसके अलावा, डॉकटर में iptables का उपयोग करने के तरीके हैं&lt;/p&gt;

&lt;p&gt;(६) सर्वर से एक नया सर्वर बनाने के लिए उसकी छवि कैसे बनाएं?&lt;br&gt;
अब हमने इसके अंदर एक Nginx रखने के लिए एक कंटेनर बनाया है। इस छवि के साथ एक नए कंटेनर को स्पिन करने के लिए हमें बाद की तारीख में इसका उपयोग करने की आवश्यकता हो सकती है।&lt;/p&gt;

&lt;p&gt;एलएक्सडी: lxc stop myfirstcontainer&lt;/p&gt;

&lt;p&gt;lxc publish myfirstcontainer --alias ubuntunginx&lt;br&gt;
lxc image list&lt;br&gt;
lxc image export ubuntunginx&lt;br&gt;
lxc image import ubuntunginx.tar.gz --ubuntunginx&lt;br&gt;
lxc launch ubuntunginx mysecondcontainer&lt;/p&gt;

&lt;p&gt;निर्यात की गई छवि रूट/फ़ोल्डर में tar.gz के समान है ls। फिर आप इस tar.gz फ़ाइल को अपने ड्राइव या ईमेल पर निर्यात कर सकते हैं: या जो भी आप चाहते हैं&lt;/p&gt;

&lt;p&gt;डोकर: docker commit -m "ubuntu1804" -a "root" ed58974dd manishfoodtechs/ubuntunginx:latest&lt;/p&gt;

&lt;p&gt;टार बॉल के रूप में: docker export ed5 &amp;gt; ubuntunginx.tar.xz&lt;/p&gt;

&lt;p&gt;डॉकर हब पर पुश करें: डॉकर में, आप अपनी छवियों को डॉकर हब पर धकेल सकते हैं।&lt;br&gt;
docker push manishfoodtechs/ubuntunginx:latest&lt;br&gt;
docker list images&lt;/p&gt;

&lt;p&gt;(७) एक ही होस्ट के भीतर एक ही प्रोग्राम द्वारा कई सर्वरों का प्रबंधन कैसे करें?&lt;br&gt;
एलएक्सडी: एलएक्सडी बड़े लड़कों के लिए है। यह आपको आपके रास्ते की स्वतंत्रता और असीमित रास्ता देता है। कुछ lxd कंटेनर प्रबंधन प्रोग्राम हैं जिन्हें आप lxd कंटेनरों को स्थापित और प्रबंधित कर सकते हैं: &lt;a href="https://lxc-webpanel.github.io/"&gt;https://lxc-webpanel.github.io/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;डॉकर: &lt;a href="https://www.portaneer.io/"&gt;https://www.portaneer.io/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;(८) मेरे पास दुनिया के विभिन्न हिस्सों में होस्ट किए गए सर्वर हैं। क्या मैं इसे एक कार्यक्रम द्वारा प्रबंधित कर सकता हूं?&lt;br&gt;
कुबेरनेट्स और डॉकर-झुंड&lt;/p&gt;

&lt;p&gt;मैं आपसे अपने लैपटॉप/डेस्कटॉप पर वीएमवेयर वर्कस्टेशन डाउनलोड करने का अनुरोध करूंगा। होस्ट के रूप में ubuntu 18.04 LTS सर्वर को स्पिन करने का प्रयास करें। फिर होस्ट के अंदर आप lxd और docker चला सकते हैं। इसके अलावा, LXC के अंदर docker चलाने का प्रयास करें। लेकिन आप docker के अंदर lxc नहीं चला सकते लेकिन docker के अंदर docker चला सकते हैं।&lt;/p&gt;

&lt;p&gt;मुझे उम्मीद है कि आप लोगों को उपरोक्त लेख पसंद आया होगा और कुछ सीखा होगा।&lt;/p&gt;

&lt;p&gt;मेरे टीम फॉर्म में शामिल होने के लिए आपका स्वागत है ।&lt;/p&gt;

&lt;p&gt;संपर्क ईमेल: &lt;a href="mailto:manishfoodtechs@gmail.com"&gt;manishfoodtechs@gmail.com&lt;/a&gt; ।&lt;/p&gt;

&lt;p&gt;यदि आपको कोई समस्या है, तो हमारी टीम पेशेवर परामर्श और वितरण में भी लगी हुई है।&lt;br&gt;
आगे क्या?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;1. Learn about Podman: deamon less and rootless implementation of docker. More secure.&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/manishfoodtechs" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AyoLr6Eq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--nGkJnCB3--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/221659/353cc208-374e-4d32-8304-bf9aba600a40.jpg" alt="manishfoodtechs image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/manishfoodtechs/time-to-say-bye-bye-docker-era-of-docker-is-over-2n06" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;TIME TO SAY BYE BYE DOCKER !!! Era of Docker is over...&lt;/h2&gt;
      &lt;h3&gt;manish srivastava ・ May 28 '20 ・ 6 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#docker&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#linux&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#devops&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#showdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;
. &lt;strong&gt;&lt;em&gt;2.How to install rootless docker.&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/manishfoodtechs" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AyoLr6Eq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--nGkJnCB3--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/221659/353cc208-374e-4d32-8304-bf9aba600a40.jpg" alt="manishfoodtechs image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/manishfoodtechs/rootless-docker-kick-docker-hackers-and-make-docker-more-secure-new-concept-70g" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;New Type of Docker : Rootless + Safer : for every Docker user.&lt;/h2&gt;
      &lt;h3&gt;manish srivastava ・ Jun 1 '20 ・ 9 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#docker&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#linux&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#devops&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#showdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;Original Post:&lt;br&gt;
&lt;a href="https://dev.to/manishfoodtechs/docker-for-extreme-beginners-in-desi-layman-language-1e0n"&gt;https://dev.to/manishfoodtechs/docker-for-extreme-beginners-in-desi-layman-language-1e0n&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Read in your Language:&lt;br&gt;
&lt;a href="https://translate.google.com/?sl=auto&amp;amp;tl=hi&amp;amp;text=https%3A%2F%2Fdev.to%2Fmanishfoodtechs%2Fdocker-for-extreme-beginners-in-desi-layman-language-1e0n&amp;amp;op=translate"&gt;https://translate.google.com/?sl=auto&amp;amp;tl=hi&amp;amp;text=https%3A%2F%2Fdev.to%2Fmanishfoodtechs%2Fdocker-for-extreme-beginners-in-desi-layman-language-1e0n&amp;amp;op=translate&lt;/a&gt;&lt;/p&gt;

</description>
      <category>docker</category>
      <category>beginners</category>
      <category>linux</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>How to Build your First Machine Learning Model in Python</title>
      <author>Data Professor</author>
      <pubDate>Thu, 03 Jun 2021 07:45:53 +0000</pubDate>
      <link>https://dev.to/dataprofessor/how-to-build-your-first-machine-learning-model-in-python-2dmm</link>
      <guid>https://dev.to/dataprofessor/how-to-build-your-first-machine-learning-model-in-python-2dmm</guid>
      <description>&lt;p&gt;A while back I wrote a blog on &lt;a href="https://towardsdatascience.com/how-to-build-a-machine-learning-model-439ab8fb3fb1"&gt;How to Build a Machine Learning Model (A Visual Guide to Learning Data Science)&lt;/a&gt; which takes you on a visual and conceptual journey on how a machine learning model is built. What the article did not show was how to implement the actual building of the model.&lt;/p&gt;

&lt;p&gt;In this article, you will learn how to build your first machine learning model in Python. Particularly, you will be building regression models using traditional linear regression as well as other machine learning algorithms.&lt;/p&gt;

&lt;p&gt;I’ve created the following YouTube video to serve as a supplement to this article, particularly it will get you up to speed on the concepts of machine learning model building as also covered in the first blog post mentioned above.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://towardsdatascience.com/how-to-build-your-first-machine-learning-model-in-python-e70fd1907cdd"&gt;Read the Full Article&lt;/a&gt;&lt;/p&gt;

</description>
      <category>machinelearning</category>
      <category>datascience</category>
      <category>python</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Data Science Starter Kit</title>
      <author>Data Professor</author>
      <pubDate>Thu, 03 Jun 2021 07:35:50 +0000</pubDate>
      <link>https://dev.to/dataprofessor/data-science-starter-kit-17gf</link>
      <guid>https://dev.to/dataprofessor/data-science-starter-kit-17gf</guid>
      <description>&lt;p&gt;This article presents you the Data Science Starter Kit that will serve as a self-help guide to help you get started in your data science journey. Nope, I’m not selling you a course. Nor is it going to be a magical formula that will effortlessly instill you with data science knowledge and skills.&lt;/p&gt;

&lt;p&gt;This Data Science Starter Kit is going to cost you ZERO dollars (although the learning service providers mentioned herein does). What this starter kit can do for you is provide a framework that will help pinpoint you in the right direction and help you take your first steps.&lt;/p&gt;

&lt;p&gt;It’s going to be tough journey. You might even want to give up, but with perseverance and the right mindset you can do this. There’s a lot to cover here and without further ado, let’s get started!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://towardsdatascience.com/data-science-starter-kit-2d8e2291914b"&gt;Read the Full Article&lt;/a&gt;&lt;/p&gt;

</description>
      <category>datascience</category>
      <category>machinelearning</category>
      <category>python</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>We built an API Builder for our API-based automation platform</title>
      <author>Ralph Vaz</author>
      <pubDate>Thu, 03 Jun 2021 07:27:48 +0000</pubDate>
      <link>https://dev.to/ralphwjz/we-built-an-api-builder-for-our-api-based-automation-platform-1e6d</link>
      <guid>https://dev.to/ralphwjz/we-built-an-api-builder-for-our-api-based-automation-platform-1e6d</guid>
      <description>&lt;p&gt;&lt;a href="https://pathfix.com/automation"&gt;Pathfix Automation&lt;/a&gt; runs on APIs only &lt;strong&gt;(think: if Zapier and Postman had a baby)&lt;/strong&gt;, so it made sense for us to spend a lot of time to build out a slick and easy to use API builder.&lt;/p&gt;

&lt;p&gt;With Automation, we want to give our users the ability to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;build complex workflows (both internal and user-facing)&lt;/li&gt;
&lt;li&gt;call any API&lt;/li&gt;
&lt;li&gt;enrich the data&lt;/li&gt;
&lt;li&gt;transform data&lt;/li&gt;
&lt;li&gt;send to the next API&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;……..and essentially, work the way they wanted – without any limitations!&lt;/p&gt;

&lt;p&gt;This made the API builder a very cruicial feature in our platform.&lt;/p&gt;

&lt;p&gt;(But first, a little introduction)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-pathfix-automation"&gt;
  &lt;/a&gt;
  What is Pathfix Automation?
&lt;/h2&gt;

&lt;p&gt;Automation is an API based automation platform that allows users to build flows using only APIs. Users can add multiple APIs and then stitch them all together to build out any automation they want.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HpMLMDdZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622283420126/EzLd7oyo5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HpMLMDdZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622283420126/EzLd7oyo5.png" alt="2.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Automation platform came from the idea that existing tools are a bit too restrictive and doesn’t allow you to &lt;strong&gt;simply work with APIs.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;So, based on many (many!) user requests, we decided to build a platform that ran purely on APIs, this meant that you can automate any process with any provider that has an API available.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Not just internal automation&lt;/strong&gt; – More exciting is that you would be able to add user facing automation (integration) to your platform.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GY9fiRwO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622283463282/5Q4E409n1.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GY9fiRwO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622283463282/5Q4E409n1.jpeg" alt="Pathfix Automation.jpeg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-api-builder"&gt;
  &lt;/a&gt;
  The API Builder
&lt;/h2&gt;

&lt;p&gt;We needed to start by answering the basic questions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;How many APIs will our users have&lt;/li&gt;
&lt;li&gt;Should we have one dedicated page for APIs built (or, have it accessible from a popup)&lt;/li&gt;
&lt;li&gt;Allow for Search by multiple methods (keywords, url etc.)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We knew our users will have multiple APIs (I mean, ours is an API ONLY automation platform) but, we did not want them to lose context by leaving their design environment.&lt;/p&gt;

&lt;p&gt;Enter – &lt;strong&gt;Single Page App&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We added Design, Connections, Constants and the most important APIs as a quick popup – all without the user ever leaving their design environment.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Et Voila!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QCSSnAnK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622283542614/xjhTv06qn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QCSSnAnK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622283542614/xjhTv06qn.png" alt="api1.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Design With Function&lt;/strong&gt;&lt;br&gt;
We just had one goal – &lt;strong&gt;make adding APIs effortless!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To achieve this, we started to look at other API builders and connectors. Read reviews, researched on forums to understand what users wanted and what caused them the most pain while adding APIs.&lt;/p&gt;

&lt;p&gt;Here’s where we settled:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It needed to be &lt;strong&gt;nocode&lt;/strong&gt; (read: no nonsense)&lt;/li&gt;
&lt;li&gt;Postman was the standard when it came to working with APIs. It’s ease of use and general ‘known’ feel was unmatched of course&lt;/li&gt;
&lt;li&gt;Bubble.io’s API Connector was simple, to the point and had a few elements we knew we could use (yes, the API Connector is a bit complex and has wayyy too many options that complicate makers. But we’re not gonna go there 🙂 )&lt;/li&gt;
&lt;li&gt;With this in mind, we started building out the API Builder. We knew we had to have the basic functionality including calling multiple methods, endpoint, Body, Headers and Query Params&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here’s what the builder looks like:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--k4DlqT1a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622283595067/DDgErDgO5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k4DlqT1a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622283595067/DDgErDgO5.png" alt="api3.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Apart from these, we added a few features that checked the ‘convenience factor’ box.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Import configuration from library (ours and yours)&lt;/li&gt;
&lt;li&gt;Import from CURL&lt;/li&gt;
&lt;li&gt;Import from JSON&lt;/li&gt;
&lt;li&gt;Export to JSON&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This just made it super easy to work with APIs. So if you are not familiar with working with APIs, simply import a curl and we will get you all sorted!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YDNHcc3Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622283669951/JxWpDjmFd.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YDNHcc3Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622283669951/JxWpDjmFd.jpeg" alt="API5.jpeg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dynamic Values&lt;/strong&gt;&lt;br&gt;
The power of Pathfix Automation was in the fact that we allowed users to play with the data received, handle the transformation and push dynamic data to another API.&lt;/p&gt;

&lt;p&gt;Since Dynamic Values was pretty important, we added the easiest way for users to add this – add &amp;lt;&amp;gt; brackets to any dynamic field.&lt;/p&gt;

&lt;p&gt;Once added, users can simply select the dynamic values for these fields from any API calls made in the flow.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qDRmZxea--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622283728003/GKI1rQnnD.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qDRmZxea--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622283728003/GKI1rQnnD.png" alt="dynamic.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;See what we did there? Our 4th task used data pulled from our 2nd and 3rd task. Just select the API and select the field.&lt;/p&gt;

&lt;p&gt;Automation takes care of the rest!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;API Builder Video&lt;/strong&gt;&lt;br&gt;
We created a video that details how you can use the API builder and walks through how it works.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.youtube.com/watch?feature=player_embedded&amp;amp;v=Jl5mOPkRF1o&amp;lt;br&amp;gt;%0A"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MAyYsDK7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1d0rnestrnnhclnnpu0m.png" alt="API Builder"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;&lt;br&gt;
Building the API Builder was definitely a challenge. The team at Pathfix took on the challenge head-on and fun along the way!&lt;/p&gt;

&lt;p&gt;Sign up free for our  &lt;a href="https://automation.pathfix.com/"&gt;Automation platform&lt;/a&gt;  and take the Builder for a spin.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>showdev</category>
    </item>
    <item>
      <title>How JavaScript works? The Execution Context || My Handwritten notes || Part 1</title>
      <author>Swastik Yadav</author>
      <pubDate>Thu, 03 Jun 2021 07:18:14 +0000</pubDate>
      <link>https://dev.to/swastikyadav/how-javascript-works-the-execution-context-my-handwritten-notes-part-1-1h3b</link>
      <guid>https://dev.to/swastikyadav/how-javascript-works-the-execution-context-my-handwritten-notes-part-1-1h3b</guid>
      <description>&lt;p&gt;Hello Everyone!&lt;/p&gt;

&lt;p&gt;JavaScript is the most hated as well as most loved and popular programming language in the world.&lt;/p&gt;

&lt;p&gt;The reason for the hate is because most people don't understand the underlying beauty of JavaScript.&lt;/p&gt;

&lt;p&gt;In this series of posts we will explore: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;How JavaScript works behind the scene?&lt;/li&gt;
&lt;li&gt;What is Execution Context?&lt;/li&gt;
&lt;li&gt;What is Call Stack?&lt;/li&gt;
&lt;li&gt;What is Hoisting in JavaScript?&lt;/li&gt;
&lt;li&gt;What is Event Loop?&lt;/li&gt;
&lt;li&gt;The "this" keyword?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And much more...&lt;/p&gt;

&lt;p&gt;I wil keep updating this post with further parts. Now let's dive in.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-execution-context"&gt;
  &lt;/a&gt;
  The Execution Context
&lt;/h2&gt;

&lt;p&gt;Everything in JavaScript happens inside an &lt;strong&gt;Execution Context&lt;/strong&gt;. This Execution Context works in 2 phases.&lt;/p&gt;

&lt;p&gt;Both phases are known by multiple names.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Declaration Phase || Memory Allocation Phase || Creation Phase&lt;/li&gt;
&lt;li&gt;Execution Phase || Implementation Phase&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#1-declaration-phase"&gt;
  &lt;/a&gt;
  1 Declaration Phase
&lt;/h2&gt;

&lt;p&gt;In this phase JavaScript scans through the entire code and allocates memory to the variables and functions.&lt;/p&gt;

&lt;p&gt;Variables are initialized with &lt;strong&gt;Undefined&lt;/strong&gt; as value.&lt;/p&gt;

&lt;p&gt;That's it. This phase don't care about executing the code. It just initializes all the variables with undefined.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-execution-phase"&gt;
  &lt;/a&gt;
  2 Execution Phase
&lt;/h2&gt;

&lt;p&gt;In this phase &lt;strong&gt;Undefined&lt;/strong&gt; value of variables are replaced by the actual value.&lt;/p&gt;

&lt;p&gt;For all the function calls (invocation) a new &lt;strong&gt;Function Execution Context&lt;/strong&gt; (FEC) is created inside the &lt;strong&gt;Global Execution Context&lt;/strong&gt; (GEC is the main parent execution context).&lt;/p&gt;

&lt;p&gt;And this FEC will again follow the entire 2 phase process of execution context.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#my-handwritten-visual-notes"&gt;
  &lt;/a&gt;
  My handwritten visual notes
&lt;/h2&gt;

&lt;p&gt;Every execution context (global OR function) maintains a memory. For GEC it is the Global Memory and for FEC it is the local memory.&lt;/p&gt;

&lt;p&gt;First JavaScript looks in the local memory for a variable if not found then it looks for it in the global memory.&lt;/p&gt;

&lt;p&gt;Here are my handwritten visual notes.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1jiOA921--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/E24XAvYVUAc7eJG%3Fformat%3Djpg%26name%3Dlarge" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1jiOA921--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/E24XAvYVUAc7eJG%3Fformat%3Djpg%26name%3Dlarge" alt="execution context notes"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DjfvAYwg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/E24XAxnUYAApfmI%3Fformat%3Djpg%26name%3Dlarge" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DjfvAYwg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/E24XAxnUYAApfmI%3Fformat%3Djpg%26name%3Dlarge" alt="execution context notes"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I hope these will help.&lt;/p&gt;




&lt;p&gt;In part 2 of this series we will discuss about how JS manages all these nested Function Execution Context. The Call Stack.&lt;/p&gt;

&lt;p&gt;If you enjoyed it or found useful, please consider joining my weekly Newsletter: &lt;a href="https://www.getrevue.co/profile/codeswastik"&gt;https://www.getrevue.co/profile/codeswastik&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>tutorial</category>
      <category>webdev</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>GitHub-101</title>
      <author>Hafiz Muhammad Attaullah</author>
      <pubDate>Thu, 03 Jun 2021 07:12:33 +0000</pubDate>
      <link>https://dev.to/attaullahshafiq10/github-101-lpa</link>
      <guid>https://dev.to/attaullahshafiq10/github-101-lpa</guid>
      <description>&lt;p&gt;Every time I share my opensource code, most of time people asks me a common question, What is GITHUB???&lt;br&gt;
So&lt;br&gt;
Basically writing code can be complex, but it’s a lot easier with the right support and tools. In order to become an elite programmer, you need version control support and also the support of others who code. Whether they are members of your team, or are just generally familiar with the type of problem you are trying to solve, finding helpful individuals who can give you guidance and help you elevate your work is essential in the world of programming.&lt;/p&gt;

&lt;p&gt;GitHub brings together teams and coding experts onto one collaborative platform where they can share ideas and methods and make awesome software together. But just what is GitHub, what is GitHub for, how does it work, and what makes it so beneficial? This brief GitHub tutorial will help you get started as you learn how to use GitHub.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-github"&gt;
  &lt;/a&gt;
  What is GitHub?
&lt;/h2&gt;

&lt;p&gt;GitHub is one of the world’s largest community of developers. It’s an intricate platform that fosters collaboration and communication between developers. GitHub has a number of useful features that enable development teams to work together on the same project and easily create new versions of software without disrupting the current versions, but it doesn’t stop there.&lt;/p&gt;

&lt;p&gt;Once new additions to a program are complete, for example, they can easily be incorporated into existing programs. GitHub also makes it extremely simple to work together on strings of code to really dial in and perfect even the smallest parts of a program. With GitHub, you can collaborate and work on projects with others anywhere in the world.&lt;/p&gt;

&lt;p&gt;Of course, that’s only scratching the surface, because when it comes to the question “What is GitHub?” the answer is all about what it can do for you.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-the-benefits-of-github"&gt;
  &lt;/a&gt;
  What are the Benefits of GitHub?
&lt;/h2&gt;

&lt;p&gt;Why use GitHub? There are a number of reasons.. The first is that it enables slick and easy collaboration and version control. This allows you to work on code with anyone from anywhere. Additionally, many employers use GitHub. So, if you plan on getting a job, you’ll look really good if you already know your way around GitHub. And don’t forget about the connections, learning, and portfolio aspects. GitHub is a robust learning and collaboration platform. Take time to explore it and see just how much it can expand your programming knowledge.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-do-i-use-a-github"&gt;
  &lt;/a&gt;
  How do I Use a GitHub?
&lt;/h2&gt;

&lt;p&gt;GitHub is complex, but understanding a few basics will help you get started. In order to use GitHub, you’ll need to first be able to complete these few steps. How to use GitHub:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sign-up-for-github"&gt;
  &lt;/a&gt;
  Sign up for GitHub
&lt;/h2&gt;

&lt;p&gt;Install Git&lt;br&gt;
Create a Repository&lt;br&gt;
Create a Branch&lt;br&gt;
Create and Commit Changes to a Branch&lt;br&gt;
Open a Pull Request&lt;br&gt;
Merge Your Pull Request&lt;/p&gt;

&lt;p&gt;More About GitHub: The Open Source Community&lt;br&gt;
There’s a lot to explore in GitHub. We’ve only scratched the surface so far, but we hope that brief GitHub tutorial was beneficial. You’ll quickly come to learn that GitHub is much more than just a version-control platform. You’ll find it’s almost a type of social media platform for programmers. The GitHub open source community gives you access to millions of open source projects. There you can get involved with a project or start one of your very own. Working on open source software is an awesome way to learn new skills and collaborate with bright programmers from whom you can learn a lot.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#promoting-your-github-profile"&gt;
  &lt;/a&gt;
  Promoting Your GitHub Profile
&lt;/h2&gt;

&lt;p&gt;GitHub is a great place to not only expand your programming knowledge, but also showcase your best work. Your GitHub Profile is a great place for recruiters to find you and reach out about potential jobs and projects. Many people strive to gain GitHub followers by writing engaging and helpful blog posts, or even by creating podcasts or YouTube GitHub tutorials. The more followers you have, the more opportunities will be open to you, and the greater ability you’ll have to become a thought leader in the programming space.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#learning-and-growing-with-github"&gt;
  &lt;/a&gt;
  Learning and Growing With GitHub
&lt;/h2&gt;

&lt;p&gt;The best programmers are always learning. The world of computer programming is constantly evolving and new problems are being solved with code every day. In order to stay sharp, you need to be consistently discovering new ways to tackle problems. You need to be trying new things and collaborating with other programmers. The coding community is a tight-knit one, but it’s also large. There are so many people to learn from. GitHub has a wealth of features that enable you to collaborate with and learn from the best in the industry. Take some time to explore GitHub and discover how you can unlock your full potential and become an expert programmer.&lt;/p&gt;

&lt;p&gt;You can follow me on Github: &lt;a href="https://github.com/attaullahshafiq10"&gt;https://github.com/attaullahshafiq10&lt;/a&gt;&lt;/p&gt;

</description>
      <category>github</category>
      <category>opensource</category>
      <category>programming</category>
    </item>
    <item>
      <title>How to never type passwords when using Git</title>
      <author>Michelle Mannering</author>
      <pubDate>Thu, 03 Jun 2021 06:54:01 +0000</pubDate>
      <link>https://dev.to/github/how-to-never-type-passwords-when-using-git-18bb</link>
      <guid>https://dev.to/github/how-to-never-type-passwords-when-using-git-18bb</guid>
      <description>&lt;p&gt;Have you been using Git on the command line? Notice how you have to &lt;em&gt;always&lt;/em&gt; type in your password? Not only is this SUPER annoying, it also presents a security issue. Here's a bunch of ways to authenticate Git so you don't have to type a password with every action. It will also keep your code more safe and secure.&lt;/p&gt;

&lt;p&gt;If you're using Git and GitHub then there are a few ways to authenticate to ensure your code is secure.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ssh-keys"&gt;
  &lt;/a&gt;
  SSH keys
&lt;/h2&gt;

&lt;p&gt;If you work in tech, you've probably heard the term SSH keys. The term often comes up when you're trying to login or use a cloud service outside a web browser. It's also a term associated with connecting from one machine to another.&lt;/p&gt;

&lt;p&gt;SSH or Secure Shell keys is the name of the key (or protocol) used when you need to authenticate in order to use a provider. Using SSH protocol makes a network much more secure. Someone can't just login remotely from one system into another. Instead, the encryption is used to manage this login and therefore secure your login details.&lt;/p&gt;

&lt;p&gt;There are lots of different types of SSH keys. If you're on Windows, a lot of SSH credentials are done for you. If you're using macOS, you can generate SSH keys in order to authenticate your GitHub account. Check out the &lt;a href="https://docs.github.com/en/github-ae@latest/github/authenticating-to-github/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent"&gt;GitHub Docs&lt;/a&gt; for how to manually generate keys.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#personal-access-tokens"&gt;
  &lt;/a&gt;
  Personal Access Tokens
&lt;/h2&gt;

&lt;p&gt;You don't just have to use the terminal in order to generate keys. If the command line isn't your cup of tea, then you can generate keys from the GitHub web:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Go to GitHub.com&lt;/li&gt;
&lt;li&gt;Select "Settings"&lt;/li&gt;
&lt;li&gt;Scroll down and select "Developer Settings" from the left&lt;/li&gt;
&lt;li&gt;Select "Personal Access Tokens" from the left&lt;/li&gt;
&lt;li&gt;Create your Token
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aqMqbrqE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qcc6n1lusdc0fwfu9zmo.JPG" alt="Tokens"&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In these settings you can generate and manage tokens.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#oauth-applications"&gt;
  &lt;/a&gt;
  OAuth Applications
&lt;/h2&gt;

&lt;p&gt;There's also a way for you to track which applications have access to your GitHub account:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Go to GitHub.com&lt;/li&gt;
&lt;li&gt;Select "Settings"&lt;/li&gt;
&lt;li&gt;Scroll down to "Applications"&lt;/li&gt;
&lt;li&gt;Click "Authorized OAuth Apps"&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now you can see which applications have access to your GitHub account and revoke any if necessary.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rsmY6lXO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lvopnvj8mrye4hbbetk6.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rsmY6lXO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lvopnvj8mrye4hbbetk6.JPG" alt="OAuth"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Note, this isn't the same place as your Developer Settings OAuth Apps. If you are creating applications and you want to enable GitHub authentication, then check out the &lt;a href="https://docs.github.com/en/developers/apps/building-oauth-apps"&gt;GitHub Docs on creating and authorising OAuth apps&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#credential-manager"&gt;
  &lt;/a&gt;
  Credential Manager
&lt;/h2&gt;

&lt;p&gt;Unless you're a Windows user (👋 there) you would have noticed you need to enter your password with every Git operation. When you install Git on Windows, a credential manager is automatically installed on your computer. This means you only need to log into your account once and then you are authenticated.&lt;/p&gt;

&lt;p&gt;We can replicate this on macOS and Linux as well. Using a client manager such as &lt;a href="https://dev.toGit-Crediential-Manager-Core"&gt;Git Credential Manager Core (GCM Core)&lt;/a&gt; is one way to do single-factor authentication on macOS and Linux. The Linux version of this is still in preview, but you can try it out now.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/microsoft"&gt;
        microsoft
      &lt;/a&gt; / &lt;a href="https://github.com/microsoft/Git-Credential-Manager-Core"&gt;
        Git-Credential-Manager-Core
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Secure, cross-platform Git credential storage with authentication to GitHub, Azure Repos, and other popular Git hosting services.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Git Credential Manager Core&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/microsoft/Git-Credential-Manager-Core/actions/workflows/continuous-integration.yml"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aaSdQUFB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/microsoft/Git-Credential-Manager-Core/actions/workflows/continuous-integration.yml/badge.svg" alt="Build Status"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/microsoft/Git-Credential-Manager-Core"&gt;Git Credential Manager Core&lt;/a&gt; (GCM Core) is a secure Git credential helper built on &lt;a href="https://dotnet.microsoft.com" rel="nofollow"&gt;.NET&lt;/a&gt; that runs on Windows and macOS. Linux support is in an early preview.&lt;/p&gt;
&lt;p&gt;Compared to Git's built-in credential helpers (Windows: wincred, macOS: osxkeychain, Linux: gnome-keyring) which provides single-factor authentication support working on any HTTP-enabled Git repository, GCM Core provides multi-factor authentication support for &lt;a href="https://dev.azure.com/" rel="nofollow"&gt;Azure DevOps&lt;/a&gt;, Azure DevOps Server (formerly Team Foundation Server), GitHub, and Bitbucket.&lt;/p&gt;
&lt;p&gt;Git Credential Manager Core (GCM Core) replaces the .NET Framework-based &lt;a href="https://github.com/microsoft/Git-Credential-Manager-for-Windows"&gt;Git Credential Manager for Windows&lt;/a&gt; (GCM), and the Java-based &lt;a href="https://github.com/microsoft/Git-Credential-Manager-for-Mac-and-Linux"&gt;Git Credential Manager for Mac and Linux&lt;/a&gt; (Java GCM), providing a consistent authentication experience across all platforms.&lt;/p&gt;
&lt;h2&gt;
Current status&lt;/h2&gt;
&lt;p&gt;Git Credential Manager Core is currently available for macOS and Windows, with Linux support in preview. If the Linux version of GCM Core is insufficient then SSH still remains an option:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/azure/devops/repos/git/use-ssh-keys-to-authenticate?view=azure-devops" rel="nofollow"&gt;Azure DevOps SSH&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://help.github.com/en/articles/connecting-to-github-with-ssh"&gt;GitHub SSH&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://confluence.atlassian.com/bitbucket/ssh-keys-935365775.html" rel="nofollow"&gt;Bitbucket&lt;/a&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/microsoft/Git-Credential-Manager-Core"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;If you want to try a few things other than the Git command line or webpage, there are a few options.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#authenticate-with-github-desktop"&gt;
  &lt;/a&gt;
  Authenticate with GitHub Desktop
&lt;/h2&gt;

&lt;p&gt;After &lt;a href="https://desktop.github.com/"&gt;GitHub Desktop&lt;/a&gt; was launched a couple of years ago, this application has been a great way to use GitHub. Not only can you can you manage your repos, but it's a great way to authenticate and manage your account.&lt;/p&gt;

&lt;p&gt;Download GitHub Desktop and log into your account. This will open a browser window so you can authenticate. There's also a light and dark mode!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aMNzP_D6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zy70t9matol9yyew7t8r.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aMNzP_D6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zy70t9matol9yyew7t8r.gif" alt="DesktopZoom"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;In a similar way you can also authenticate various applications such as editors like &lt;a href="https://code.visualstudio.com/"&gt;VS Code&lt;/a&gt; or &lt;a href="https://atom.io/"&gt;Atom&lt;/a&gt; or other git clients like &lt;a href="https://www.gitkraken.com/"&gt;Git Kraken&lt;/a&gt;. Don't forget you can go into OAuth settings to see which applications you've given access to GitHub.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#github-cli"&gt;
  &lt;/a&gt;
  GitHub CLI
&lt;/h2&gt;

&lt;p&gt;Yes it's still the command line, but GitHub has its own CLI. You can &lt;a href="https://cli.github.com/"&gt;download it&lt;/a&gt; then use &lt;code&gt;gh auth login&lt;/code&gt; and follow the steps. This will allow access to your GitHub account and you can continue using the command line as normal. You can even use &lt;code&gt;gh auth login --with-token&lt;/code&gt; to use a personal token.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hJnpbKcE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z4p6luatvuo0c3vo8su6.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hJnpbKcE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z4p6luatvuo0c3vo8su6.gif" alt="v1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The CLI is available on Windows, macOS, and Linux. It's completely free and it's &lt;a href="https://github.com/cli/cli"&gt;open source&lt;/a&gt; so you can even contribute to it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-physical-security-keys"&gt;
  &lt;/a&gt;
  Using physical security keys
&lt;/h2&gt;

&lt;p&gt;Lately, physical security keys, such as a &lt;a href="https://www.yubico.com/"&gt;YubiKey&lt;/a&gt;, have been very popular. They are a great way to secure and can't be replicated.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--97FEoI52--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n8hqy9zbs92nj6oy6j6r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--97FEoI52--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n8hqy9zbs92nj6oy6j6r.png" alt="YubiKey"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;YubiKeys are also really easy to setup:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Go to GitHub.com&lt;/li&gt;
&lt;li&gt;Click "Account Security"&lt;/li&gt;
&lt;li&gt;Scroll down to "Security keys" and click "edit"&lt;/li&gt;
&lt;li&gt;Select "Register new security key" and follow the prompts&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you decide to setup a security key, you'll need to save your recovery codes in a secure location. If you have 2FA or security keys for your account, recovery codes are the only way to access your account if you lose your YubiKey or can't use your 2FA.&lt;/p&gt;

&lt;p&gt;YubiKeys are also really great because they can be used on desktops, laptops, and mobile phones. There's a bunch of different types from Lighting, to USB-A, USB-C, and even NFC. Read more about security keys &lt;a href="https://docs.github.com/en/github/authenticating-to-github/securing-your-account-with-two-factor-authentication-2fa/configuring-two-factor-authentication#configuring-two-factor-authentication-using-a-security-key"&gt;on the GitHub Docs&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#up-your-security-and-save-time"&gt;
  &lt;/a&gt;
  Up your security and save time
&lt;/h2&gt;

&lt;p&gt;Hopefully that gives you some ideas on how to take your security to the next level AND save time by not typing in your password with every Git command. If you want to read more about security keys or SSH keys, check out the &lt;a href="https://github.blog/2021-05-10-security-keys-supported-ssh-git-operations/"&gt;GitHub blog&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I'm curious to know what everyone's preferred method of authentication is. Let me know below.&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>github</category>
      <category>git</category>
      <category>security</category>
    </item>
  </channel>
</rss>
