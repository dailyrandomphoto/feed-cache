<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>JavaScript Absolute Value - Math.abs()</title>
      <author>hrishikesh1990</author>
      <pubDate>Thu, 14 Oct 2021 11:58:21 +0000</pubDate>
      <link>https://dev.to/hrishikesh1990/javascript-absolute-value-mathabs-179k</link>
      <guid>https://dev.to/hrishikesh1990/javascript-absolute-value-mathabs-179k</guid>
      <description>&lt;p&gt;In this short tutorial, we look at the JavaScript absolute value (math.abs()) method. We explain the syntax with a real-world example.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#table-of-contents-absolute-value-python"&gt;
  &lt;/a&gt;
  Table of Contents - Absolute Value Python:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#javascript-absolute-value"&gt;JavaScript Absolute Value&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#how-to-use-the-mathabs-function"&gt;How to use the math.abs() function?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#code-and-explanation"&gt;Code and Explanation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#closing-thoughts-javascript-absolute-method"&gt;Closing thoughts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#tldr-how-to-find-the-absolute-value-in-javascript"&gt;
  &lt;/a&gt;
  TL;DR - How to find the absolute value in JavaScript?
&lt;/h2&gt;

&lt;p&gt;The math.abs() function is used to return the absolute value in JavaScript. It negates the native sign of a number and returns the relevant positive value.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

&lt;span class="c1"&gt;//Output = 2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#javascript-absolute-value"&gt;
  &lt;/a&gt;
  JavaScript Absolute Value:
&lt;/h2&gt;

&lt;p&gt;JavaScript Absolute value is a method of the Math object in JavaScript. This method helps return the absolute values of a number. Absolute value or modules essentially means a non-negative value of x.&lt;/p&gt;

&lt;p&gt;To understand the math involved let’s first understand what absolute value actually means. Absolute value is the distance between any number and 0 on the number line. Since it is the distance, there are no negative values.&lt;/p&gt;

&lt;p&gt;Subsequently, when a 0 is passed, JavaScript returns 0 as the distance would also be 0.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-use-the-mathabs-function"&gt;
  &lt;/a&gt;
  How to use the Math.abs() function?
&lt;/h2&gt;

&lt;p&gt;Using the Math.abs() method is quite straightforward. The only thing that you have to keep in mind is that abs() is a static method of Math. Hence you would have to add the Math. prefix in case you want to use it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#javascript-absolute-value-syntax"&gt;
  &lt;/a&gt;
  JavaScript Absolute Value - Syntax:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#parameters"&gt;
  &lt;/a&gt;
  Parameters:
&lt;/h3&gt;

&lt;p&gt;X - A number&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#return-values"&gt;
  &lt;/a&gt;
  Return Values:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;“x” if x &amp;gt; 0&lt;/li&gt;
&lt;li&gt;“x” if x &amp;lt; 0&lt;/li&gt;
&lt;li&gt;“-x” if x = 0&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#code-and-explanation"&gt;
  &lt;/a&gt;
  Code and Explanation:
&lt;/h2&gt;

&lt;p&gt;The best way to familiarise yourself with the JavaScript Absolute method is to practice and try breaking it. In the below code we have used math.abs() methods on a list of values.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;     &lt;span class="c1"&gt;// 10&lt;/span&gt;
&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;       &lt;span class="c1"&gt;// 10&lt;/span&gt;
&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;-10&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;     &lt;span class="c1"&gt;// 10&lt;/span&gt;
&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;       &lt;span class="c1"&gt;// 0&lt;/span&gt;
&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;([]);&lt;/span&gt;       &lt;span class="c1"&gt;// 0&lt;/span&gt;
&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;     &lt;span class="c1"&gt;// 0&lt;/span&gt;
&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;      &lt;span class="c1"&gt;// 2&lt;/span&gt;
&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;    &lt;span class="c1"&gt;// NaN&lt;/span&gt;
&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;({});&lt;/span&gt;       &lt;span class="c1"&gt;// NaN&lt;/span&gt;
&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Ten&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// NaN&lt;/span&gt;
&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;         &lt;span class="c1"&gt;// NaN&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Another important point to remember while using the math.abs() methods, is it converts strings containing a number and returns its absolute value.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#closing-thoughts-javascript-absolute-method"&gt;
  &lt;/a&gt;
  Closing Thoughts - JavaScript Absolute method:
&lt;/h2&gt;

&lt;p&gt;This method is mostly used before displaying a particular value. A common example would be while displaying distance on a map. In cases where you cross your destination, you are not returned with a negative value but rather the absolute value from the destination.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Top 10 articles of the week for beginners👋.</title>
      <author>Kavindu Santhusa</author>
      <pubDate>Thu, 14 Oct 2021 11:38:06 +0000</pubDate>
      <link>https://dev.to/ksengine/top-10-articles-of-the-week-for-beginners-29k7</link>
      <guid>https://dev.to/ksengine/top-10-articles-of-the-week-for-beginners-29k7</guid>
      <description>&lt;p&gt;DEV is a community of software developers getting together to help one another out. The software industry relies on collaboration and networked learning. They provide a place for that to happen.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;"A journey of a thousand miles begins with a single step." - Chinese Proverb&lt;/p&gt;
&lt;/blockquote&gt;


&lt;div class="ltag__tag ltag__tag__id__555"&gt;
  
    .ltag__tag__id__555 .follow-action-button{
      background-color: #008335 !important;
      color: #FFFFFF !important;
      border-color: #008335 !important;
    }
  
    &lt;div class="ltag__tag__content"&gt;
      &lt;h2&gt;#&lt;a href="https://dev.to/t/beginners" class="ltag__tag__link"&gt;beginners&lt;/a&gt; Follow
&lt;/h2&gt;
      &lt;div class="ltag__tag__summary"&gt;
        "A journey of a thousand miles begins with a single step." -Chinese Proverb
      &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;Here is the most popular articles published on this platform.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#1"&gt;
  &lt;/a&gt;
  #1
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://dev.to/coderamrin/build-10-css-projects-in-10-days-project-5-301b"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qF_VSjRb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--lbGXpTCh--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_500%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4bkbpfu0frtaafcsbvd1.jpg" alt="Image of post"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/coderamrin" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jR81b4tk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--6UFIxl2j--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/712382/4cbc42e8-71bc-46ab-906f-bdb3e4b7768f.jpeg" alt="coderamrin"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/coderamrin/build-10-css-projects-in-10-days-project-5-301b" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Build 10 CSS Projects in 10 days: Project 5&lt;/h2&gt;
      &lt;h3&gt;Amrin ・ Oct 9 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#projects&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h1&gt;
  &lt;a href="#2"&gt;
  &lt;/a&gt;
  #2
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://dev.to/stackbit/7-ways-to-escape-css-hell-2ck6"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fTu3giUz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--yCkLdEJ5--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_500%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x541lcu7atud9e8ec80a.png" alt="Image of post"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/stackbit" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__org__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LT_BmGE0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--oA4wtXAe--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/organization/profile_image/826/846d3882-e4e6-4577-b6f9-a15abbc4f52a.png" alt="Stackbit"&gt;
      &lt;div class="ltag__link__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LjDbStrT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--0Rfj94Ja--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/460257/90c84e8e-b0e2-43d2-a7ef-5f753e6f4b81.jpg" alt=""&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/stackbit/7-ways-to-escape-css-hell-2ck6" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;7 Ways to Escape CSS Hell&lt;/h2&gt;
      &lt;h3&gt;Ryland @ Stackbit for Stackbit ・ Oct 12 ・ 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h1&gt;
  &lt;a href="#3"&gt;
  &lt;/a&gt;
  #3
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://dev.to/abh1navv/understanding-domain-driven-design-with-some-pizza-4gkn"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--F8emQwO---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--LHKcln72--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_500%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b09winy1kwyg6qsytw7g.png" alt="Image of post"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/abh1navv" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KGrqn2zx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--DoVdWWG3--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/440730/f0fc3149-bd2f-4450-99bb-39bdc8c95824.jpg" alt="abh1navv"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/abh1navv/understanding-domain-driven-design-with-some-pizza-4gkn" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Understanding Domain Driven Design with some Pizza &lt;/h2&gt;
      &lt;h3&gt;Abhinav Pandey ・ Oct 10 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#architecture&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#microservices&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h1&gt;
  &lt;a href="#4"&gt;
  &lt;/a&gt;
  #4
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://dev.to/sagarbarapatre/build-a-node-js-api-in-under-30-minutes-57"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--txdWXt5K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--zdpzMtAW--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_500%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4htfc9tylt6bsk91lkfi.png" alt="Image of post"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/sagarbarapatre" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Kxr02seM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--Nnun1FpK--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/470482/74b368d4-9604-42ed-ad75-d5a1fc9a6aa2.png" alt="sagarbarapatre"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/sagarbarapatre/build-a-node-js-api-in-under-30-minutes-57" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Build a Node.js API in Under 30 Minutes&lt;/h2&gt;
      &lt;h3&gt;Sagar Barapatre ・ Oct 11 ・ 10 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#node&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h1&gt;
  &lt;a href="#5"&gt;
  &lt;/a&gt;
  #5
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://dev.to/sagarbarapatre/react-authentication-with-twitter-google-facebook-and-github-149n"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Pp_njF5M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--3YC2vohL--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_500%2Cq_66%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7zxqr7qwfikeqqf97e77.gif" alt="Image of post"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/sagarbarapatre" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Kxr02seM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--Nnun1FpK--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/470482/74b368d4-9604-42ed-ad75-d5a1fc9a6aa2.png" alt="sagarbarapatre"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/sagarbarapatre/react-authentication-with-twitter-google-facebook-and-github-149n" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;React Authentication with Twitter, Google, Facebook and Github&lt;/h2&gt;
      &lt;h3&gt;Sagar Barapatre ・ Oct 12 ・ 12 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#react&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h1&gt;
  &lt;a href="#6"&gt;
  &lt;/a&gt;
  #6
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://dev.to/collins87mbathi/blog-site-api-with-authentication-in-node-express-and-mongodb-59h4"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---m-iCNue--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--kxnTrpmD--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_500%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kyox46e4lpjoryxftdi7.png" alt="Image of post"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/collins87mbathi" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LsTjd2lg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--08eekAQP--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/645126/d375cfdd-85cd-42c4-ad1a-575aa35566ae.jpeg" alt="collins87mbathi"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/collins87mbathi/blog-site-api-with-authentication-in-node-express-and-mongodb-59h4" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Blog site API with Authentication in Node, Express and MongoDB&lt;/h2&gt;
      &lt;h3&gt;Collins Mbathi ・ Oct 11 ・ 7 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#node&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h1&gt;
  &lt;a href="#7"&gt;
  &lt;/a&gt;
  #7
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://dev.to/ericchapman/create-a-backend-in-javascript-part-4-create-your-first-http-server-5k1"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m949rvRX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--YjETeAEU--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_500%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1ph7yc1i1vqqgwpxegw5.png" alt="Image of post"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/ericchapman" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mL1AYjEb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--Pv8vsbxD--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/462537/34d1837f-a6d2-47ef-84e7-3090e74c3f16.png" alt="ericchapman"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/ericchapman/create-a-backend-in-javascript-part-4-create-your-first-http-server-5k1" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Create a backend in Javascript (part 4): Create your first HTTP Server&lt;/h2&gt;
      &lt;h3&gt;Eric The Coder ・ Oct 7 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#node&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h1&gt;
  &lt;a href="#8"&gt;
  &lt;/a&gt;
  #8
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://dev.to/javascriptacademy/matrix-raining-code-effect-using-javascript-4hep"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4O4qylz7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--wqxlbtDB--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_500%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j0cr1ew0rv14nnqa8hco.png" alt="Image of post"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/javascriptacademy" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LkWxoaxf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--MUpyHc88--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/721655/7d35b014-cc4c-46cb-a9c6-11f944a4f604.png" alt="javascriptacademy"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/javascriptacademy/matrix-raining-code-effect-using-javascript-4hep" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Matrix raining code effect using JavaScript&lt;/h2&gt;
      &lt;h3&gt;Adam Nagy ・ Oct 11 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h1&gt;
  &lt;a href="#9"&gt;
  &lt;/a&gt;
  #9
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://dev.to/magarrent-org/how-to-send-a-web-form-without-code-or-any-backend-4lio"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2okVoSyO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--7LVLh2-H--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_500%2Cq_auto%2Cw_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zp6wy1gd83f5uxzdv8qx.png" alt="Image of post"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/magarrent-org" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__org__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--58z_5oxc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--cb0SPXZI--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/organization/profile_image/4633/473b8856-6779-401e-a83c-50cd4be38b8d.jpg" alt="Marc Garcia - Magarrent"&gt;
      &lt;div class="ltag__link__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GRDGrXsz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--qGFS68KS--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/684181/3f6f2f07-5f00-4c87-b7ab-19e4c165ddaf.jpeg" alt=""&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/magarrent-org/how-to-send-a-web-form-without-code-or-any-backend-4lio" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;How to send a web form without code or any backend&lt;/h2&gt;
      &lt;h3&gt;Marc Garcia Torrent for Marc Garcia - Magarrent ・ Oct 8 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#productivity&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h1&gt;
  &lt;a href="#10"&gt;
  &lt;/a&gt;
  #10
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://dev.to/sonam_shukla_707cc1e27f23/i-got-my-first-freelance-job-to-build-a-site-and-i-don-t-know-how-to-write-up-a-proposal-contract-1m1j"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NBGmTqle--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/social_previews/article/857636.png" alt="Image of post"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/sonam_shukla_707cc1e27f23" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XRQcFEf3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--7DSfvKaM--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/722384/dfed678f-e077-4ac8-b6c9-fa7087db7f70.png" alt="sonam_shukla_707cc1e27f23"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/sonam_shukla_707cc1e27f23/i-got-my-first-freelance-job-to-build-a-site-and-i-don-t-know-how-to-write-up-a-proposal-contract-1m1j" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;I got my first freelance job to build a site and I don’t know how to write up a proposal/contract&lt;/h2&gt;
      &lt;h3&gt;Sonam Shukla ・ Oct 9 ・ 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;Orginal authors of this articles are &lt;a class="mentioned-user" href="https://dev.to/coderamrin"&gt;@coderamrin&lt;/a&gt;
, &lt;a class="mentioned-user" href="https://dev.to/rylandking"&gt;@rylandking&lt;/a&gt;
, &lt;a class="mentioned-user" href="https://dev.to/abh1navv"&gt;@abh1navv&lt;/a&gt;
, &lt;a class="mentioned-user" href="https://dev.to/sagarbarapatre"&gt;@sagarbarapatre&lt;/a&gt;
, &lt;a class="mentioned-user" href="https://dev.to/sagarbarapatre"&gt;@sagarbarapatre&lt;/a&gt;
, &lt;a class="mentioned-user" href="https://dev.to/collins87mbathi"&gt;@collins87mbathi&lt;/a&gt;
, &lt;a class="mentioned-user" href="https://dev.to/ericchapman"&gt;@ericchapman&lt;/a&gt;
, javascriptacademy, magarrent, sonam_shukla_707cc1e27f23.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Enjoy these articles.&lt;br&gt;
Follow me for more articles.&lt;br&gt;
Thanks 💖💖💖&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Day 6 of 100 Days of Code &amp; Scrum: How to GraphQL Completed</title>
      <author>Rammina</author>
      <pubDate>Thu, 14 Oct 2021 11:37:23 +0000</pubDate>
      <link>https://dev.to/rammina/day-6-of-100-days-of-code-scrum-how-to-graphql-completed-29ke</link>
      <guid>https://dev.to/rammina/day-6-of-100-days-of-code-scrum-how-to-graphql-completed-29ke</guid>
      <description>&lt;p&gt;Good morning, everyone!&lt;/p&gt;

&lt;p&gt;Today was a rather productive day!&lt;/p&gt;

&lt;p&gt;I got a lot of networking done for various services, I met both of my GraphQL coding and Scrum studying goals, and I managed to work on my company logo.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CXuhBJNL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/go9t0fxjxc1rqcili013.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CXuhBJNL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/go9t0fxjxc1rqcili013.png" alt="Juggling"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I'm starting to get a better hang of balancing coding, studying, and networking. I checked my emails less, and I don't feel as for us to check all notifications on social media. Focusing on one thing at a time is just crucial for productivity.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#yesterday"&gt;
  &lt;/a&gt;
  Yesterday
&lt;/h2&gt;

&lt;p&gt;I learned about &lt;code&gt;setContext&lt;/code&gt; and &lt;code&gt;ApolloClient&lt;/code&gt;'s caching methods such as &lt;code&gt;readQuery&lt;/code&gt; and &lt;code&gt;writeQuery&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#today"&gt;
  &lt;/a&gt;
  Today
&lt;/h2&gt;

&lt;p&gt;Here are some of the things I've learned:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#graphql"&gt;
  &lt;/a&gt;
  GraphQL
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;useLazyQuery&lt;/code&gt; is a version of &lt;code&gt;useQuery&lt;/code&gt; that needs to be manually executed for it to retrieve data from the server&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;useQuery&lt;/code&gt;, on the other hand, runs automatically when the component mounts&lt;/li&gt;
&lt;li&gt;GraphQL &lt;code&gt;subscriptions&lt;/code&gt; allows the server to automatically send data to the client side when triggered by a specific event&lt;/li&gt;
&lt;li&gt;with GraphQL &lt;code&gt;subscriptions&lt;/code&gt;, the client and server have a steady connection instead of following a typical request-and-response cycle&lt;/li&gt;
&lt;li&gt;GraphQL &lt;code&gt;subscriptions&lt;/code&gt; use &lt;code&gt;WebSocketLink&lt;/code&gt; which uses a WebSocket connection instead of HTTP (which queries and mutations use).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I managed to finish the React + Apollo client tutorial at &lt;a href="https://www.howtographql.com/"&gt;https://www.howtographql.com/&lt;/a&gt;. It was a pretty useful resource and tutorial.&lt;/p&gt;

&lt;p&gt;However, I still think I have a lot of gaps in my knowledge and I can't reliably use the hooks, functions and other concepts yet. I should probably build the project on my own that uses GraphQL, which is most likely going to help me cement my knowledge.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#scrum"&gt;
  &lt;/a&gt;
  Scrum
&lt;/h3&gt;

&lt;p&gt;The purpose of the Sprint Retrospective is to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Inspect how the last Sprint went with regards to people, relationships, process, and tools.&lt;/li&gt;
&lt;li&gt;Identify and order the major items that went well and potential improvements&lt;/li&gt;
&lt;li&gt;Create a plan for implementing improvements to the way the Scrum Team does its work.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BYa8jKZL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/41a7n99bfnxd4vdhg5vz.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BYa8jKZL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/41a7n99bfnxd4vdhg5vz.jpg" alt="Double Thumbsup"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#resourcesrecommended-readings"&gt;
  &lt;/a&gt;
  Resources/Recommended Readings
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.howtographql.com/"&gt;The Fullstack Tutorial for GraphQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.apollographql.com/docs/"&gt;Apollo Docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://scrumguides.org/scrum-guide.html"&gt;The 2020 Scrum Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mlapshin.com/index.php/scrum-quizzes/"&gt;Mikhail Lapshin's Scrum Quizzes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;How is everyone doing in their learning journey? Feel free to chat with me in the comments and/via DM!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#disclaimer"&gt;
  &lt;/a&gt;
  DISCLAIMER
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;This is not a guide&lt;/strong&gt;, it is just me sharing my experiences and learnings. This post only expresses my thoughts and opinions (based on my limited knowledge) and is in no way a substitute for actual references. If I ever make a mistake or if you disagree, I would appreciate corrections in the comments!&lt;/p&gt;

</description>
      <category>graphql</category>
      <category>webdev</category>
      <category>100daysofcode</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Dark-Mode Toggle Hook in React</title>
      <author>coder4life</author>
      <pubDate>Thu, 14 Oct 2021 11:26:17 +0000</pubDate>
      <link>https://dev.to/coder4_life/dark-mode-toggle-hook-in-react-ddm</link>
      <guid>https://dev.to/coder4_life/dark-mode-toggle-hook-in-react-ddm</guid>
      <description>&lt;p&gt;With this reuseable darkmode hook it gets easy to toggle dark and light mode throughout the application. With the current state saved in localStorage the user will even get his preferred setting on next visit.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/IQgn4qOC0c8"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>tutorial</category>
      <category>webdev</category>
    </item>
    <item>
      <title>I Made A Game In 72 Hours That Uses GitHub Issues To Crowd Source Maps</title>
      <author>Jesse Freeman</author>
      <pubDate>Thu, 14 Oct 2021 11:20:25 +0000</pubDate>
      <link>https://dev.to/jessefreeman/i-made-a-game-in-72-hours-that-using-github-issues-to-crowd-source-maps-13ba</link>
      <guid>https://dev.to/jessefreeman/i-made-a-game-in-72-hours-that-using-github-issues-to-crowd-source-maps-13ba</guid>
      <description>&lt;p&gt;&lt;strong&gt;Space Station 8&lt;/strong&gt; is a &lt;code&gt;Micro Platformer&lt;/code&gt; created &lt;a href="https://ldjam.com"&gt;in 72 hours for Ludum Dare 49&lt;/a&gt; based on a game I used to play on my original Macintosh called &lt;a href="https://en.wikipedia.org/wiki/Spacestation_Pheta"&gt;Spacestation Pheta&lt;/a&gt;. Space Station 8 is also heavily inspired by &lt;a href="http://make.bitsy.org"&gt;Bitsy&lt;/a&gt; and my Fantasy Console, &lt;a href="https://pixelvision8.com"&gt;Pixel Vision 8&lt;/a&gt;, which I used to create the game.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--W3Bq-DU7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mi7riee5sxdkeicrzanj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--W3Bq-DU7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mi7riee5sxdkeicrzanj.png" alt="Space Station Pheta"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Unlike some of the other games I've created for game jams like Ludum Dare, there are no pre-made maps at all! Instead, the entire game revolves around a simple map editor, and I invited people to submit their games via a  &lt;a href="https://docs.github.com/en/communities/using-templates-to-encourage-useful-issues-and-pull-requests/configuring-issue-templates-for-your-repository"&gt;custom GitHub issue&lt;/a&gt;. In addition, I use  &lt;a href="https://github.com/features/actions"&gt;GitHub Actions&lt;/a&gt; to automatically build new versions of the game every time I check in new code and update the wiki, which has all the instructions. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Urqeuu5c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ywksrgdl8bmpagk5hlec.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Urqeuu5c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ywksrgdl8bmpagk5hlec.png" alt="Game Screenshot"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this post, I'll walk you through how the level editor works, how I designed the map files to be easy to share, and some of the tricks I used to leverage GitHub to help crowdsource my game's levels.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#making-maps"&gt;
  &lt;/a&gt;
  Making Maps
&lt;/h2&gt;

&lt;p&gt;The goal of Space Station 8 is to escape before you run out of oxygen. To do that, you will need to navigate the level, find the key, and make it to the exit in time. Each level is self-contained, and you are scored based on your ability to complete it within the amounted time and lives. There are also some prized gems you may want to collect on your way out while avoiding aliens and other deadly obstacles like spikes.&lt;/p&gt;

&lt;p&gt;When you first load Space Station 8 up, it loads up the default map. You can immediately begin editing it, or you can drag a &lt;code&gt;spacestation8.png&lt;/code&gt; map onto the game and load that up. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--65hpn2W0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nbxwspl5ikfnt2p6eb2l.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--65hpn2W0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nbxwspl5ikfnt2p6eb2l.gif" alt="Drag Map"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Space Station 8 map's should be at least &lt;code&gt;160&lt;/code&gt; x &lt;code&gt;132&lt;/code&gt; pixels:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Mx5WWyx_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y0rcco7ic8p8z4ieo20z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Mx5WWyx_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y0rcco7ic8p8z4ieo20z.png" alt="Empty Map 160x132"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can also provide a map that is &lt;code&gt;160&lt;/code&gt; x &lt;code&gt;152&lt;/code&gt;, where the last two rows are the sprites for the map:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TYtgHX1a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/phzac2lfrb1vqcba82b1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TYtgHX1a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/phzac2lfrb1vqcba82b1.png" alt="Empty Map 160x152"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Whenever you go to the splash screen, Space Station 5 will automatically create a new &lt;code&gt;map.spacestation8.png&lt;/code&gt; for you in your &lt;code&gt;/Levels/&lt;/code&gt; folder:&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Version&lt;/th&gt;
&lt;th&gt;Path&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Windows&lt;/td&gt;
&lt;td&gt;C:\Users\UserName\Documents\SpaceStation8\Levels\&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MacOS&lt;/td&gt;
&lt;td&gt;/Users/UserName/SpaceStation8/Levels/&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Linux&lt;/td&gt;
&lt;td&gt;/Users/UserName/SpaceStation8/Levels/&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Space Station 8 shows you the map editor before you can play a map. The editor has two main areas, the map and the tile picker on the bottom:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--s-KzBvXD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/480vs8k6nuqzam5cmwnr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s-KzBvXD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/480vs8k6nuqzam5cmwnr.png" alt="Map Editor Panels"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The white blinking box in the map area previews where the tile will be drawn. You can move the tile highlighter via a controller's d-pad, the keyboard arrows, or the mouse. By default, the mouse is hidden unless you move it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zmw0aR7a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vk3r73bj1xqh0g9pejst.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zmw0aR7a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vk3r73bj1xqh0g9pejst.gif" alt="Move Mouse In Editor.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can pick from any of the 20 tiles on the bottom of the screen to draw with. The tile with the white background is the currently selected tile. You'll also see it previewed on the map. Some tiles have a flip or alternative state. This can be used for changing the direction of an enemy or spikes.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6xPRMdgd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y2qax6smlbewj22gm064.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6xPRMdgd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y2qax6smlbewj22gm064.gif" alt="Map Editor Alt Tiles"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Finally, for a map to work, you need three things: a player, a key, and a door. When you start the game, if these things are not present, it will bring you back to the editor. There is no cap on how many players, keys, or doors you can draw on the map, but the game will only use the first of each when it processes all the tiles.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#submitting-maps-with-github-issues"&gt;
  &lt;/a&gt;
  Submitting Maps With GitHub Issues
&lt;/h2&gt;

&lt;p&gt;Once you are happy with a map, you can share it with someone else by sending them the &lt;code&gt;map.spacestation8.png&lt;/code&gt; file. There are several ways to do this. You can attach it in a comment on the game's page, send it directly to them, or &lt;a href="https://github.com/PixelVision8/SpaceStation8/issues/new?assignees=jessefreeman&amp;amp;labels=map&amp;amp;template=new_map.md&amp;amp;title="&gt;file a ticket on GitHub&lt;/a&gt; and include it there.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XGny6UMJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uj7zgbddmbz6rm2e6cxk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XGny6UMJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uj7zgbddmbz6rm2e6cxk.png" alt="Github Map Issue"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;One thing to note is that some social networks like Twitter may compress the image. This will break the tilemap parser unless the image is pixel-perfect at 160 x 132 or 160 x 142. &lt;/p&gt;

&lt;p&gt;The default map template looks like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wq9HnMQe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tn81ojdfrpvshx8kt7ug.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wq9HnMQe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tn81ojdfrpvshx8kt7ug.png" alt="Map Template"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see, a map is comprised of a &lt;code&gt;20&lt;/code&gt; x &lt;code&gt;17&lt;/code&gt; tile grid where each tile is &lt;code&gt;8&lt;/code&gt; x &lt;code&gt;8&lt;/code&gt; pixels. The top row is ignored, and for map images that are &lt;code&gt;142&lt;/code&gt; pixels high, the last two rows (&lt;code&gt;18&lt;/code&gt; and &lt;code&gt;19&lt;/code&gt;) are used for the game's sprites.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AyyCBh6r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8ifoj4rbpw83lyerhrrc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AyyCBh6r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8ifoj4rbpw83lyerhrrc.png" alt="Map Sprites"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There are &lt;code&gt;40&lt;/code&gt; sprites which you can also modify if you want to re-skin the game. Each sprite is fixed to a corresponding element in the game, so while you can re-skin the graphics, you will not make new ones or change the internal sprite mapping.&lt;/p&gt;

&lt;p&gt;The last thing to keep in mind when modifying the sprites, or even using drawing tools like &lt;a href="https://www.aseprite.org"&gt;Aseprite&lt;/a&gt; to modify map files, is that you will have to use the following four colors (&lt;code&gt;#2D1B2E&lt;/code&gt;, &lt;code&gt;#574B67&lt;/code&gt;, &lt;code&gt;#937AC5&lt;/code&gt;, #F9F4EA) .&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XE-1Xfv8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z92e7jw8vgaqd7c8yzfb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XE-1Xfv8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z92e7jw8vgaqd7c8yzfb.png" alt="Palette"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Finally, I use some custom GitHub issues to make filing bugs, requesting features. If you are unfamiliar with the GitHub issue templates, they live inside your project's &lt;code&gt;.github/ISSUE_TEMPLATE&lt;/code&gt; folder. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--USLvkYpj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g1y72xn6voeaqu3ivcoi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--USLvkYpj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g1y72xn6voeaqu3ivcoi.png" alt="Github Issue Template"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The first thing I needed to do was clean up my project's issue categories to match up with the templates I used.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h9D3M7yh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o0gcl43bhyw1o78km25p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h9D3M7yh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o0gcl43bhyw1o78km25p.png" alt="GitHub Issues"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Finally, I created a &lt;code&gt;new_map.md&lt;/code&gt; file with the following markdown inside:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;---
name: Submit New Map
about: Did you create a level that you'd like to have included with the source code?
title: ''"
labels: map
assignees: jessefreeman
---

**Who Created the level**
Name: Jesse Freeman
Website: https://jessefreeman.com
Twitter: [@jessefreeman](https://twitter.com/jessefreeman)

**Screenshots**
Attach your map png, [add screenshots from PV8](https://docs.pixelvision8.com/pixelvisionos/screenshots) to be included in the game.

**Additional information**
Add any other context or screenshots about the map you'd like to share.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The markdown frontmatter directly maps to the issue form, and you can use it to automatically assign a label and whom the issues should go to on the project's team.&lt;/p&gt;

&lt;p&gt;Here is what the new issue looks like when someone wants to submit a new issue:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oVv28lda--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vp7jj7w53omv8rf468zl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oVv28lda--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vp7jj7w53omv8rf468zl.png" alt="Submit Issue"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, I can go through each map and decide if I want to include it in the project or not. While I could have done this with pull requests, the thinking behind using an issue is that others can see the map before adding to the game and leaving comments.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--L_DQijgM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kc75cl29hgrlmhapjyoh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L_DQijgM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kc75cl29hgrlmhapjyoh.png" alt="Filter Map Issues"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#automated-release-with-github-actions"&gt;
  &lt;/a&gt;
  Automated Release With GitHub Actions
&lt;/h2&gt;

&lt;p&gt;In addition to creating custom issues, I use GitHub actions to automatically create new builds of my game whenever I push new code to the repo. I set this up early on in the game jam and having a simple continuous integration build system removed all the stress at the end of the game jam because I point people to the latest build, and it's always up-to-date by directing them to &lt;a href="https://github.com/PixelVision8/SpaceStation8/releases/latest/"&gt;SpaceStation8/releases/latest/&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;When I finished the game jam, I added a link to the last build,  &lt;a href="https://github.com/PixelVision8/SpaceStation8/releases/tag/v1.17.0"&gt;tag v1.17.0&lt;/a&gt;, for a snapshot of the state of the game so I could continue to make improvements after the jam.&lt;/p&gt;

&lt;p&gt;I'll write a more in-depth article on how I use GitHub Actions, but at a high level, you need to create a specific folder in your repo, &lt;code&gt;.github/workflows/&lt;/code&gt; and put your &lt;code&gt;yml&lt;/code&gt; file inside. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ClUSpxEG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bjezqppkh9eqjdvlfllr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ClUSpxEG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bjezqppkh9eqjdvlfllr.png" alt="GitHub Workflow Folder"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I was already using Gulp to package up my game anyway, so I made an action that does the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Creates a new release and tag ( &lt;a href="https://github.com/actions/create-release"&gt;actions/create-release@v1&lt;/a&gt; )&lt;/li&gt;
&lt;li&gt;Checks out my code on Ubuntu ( &lt;a href="https://github.com/marketplace/actions/checkout"&gt;actions/checkout@v2&lt;/a&gt; )&lt;/li&gt;
&lt;li&gt;Create a changelog ( &lt;a href="https://github.com/marketplace/actions/beast-changelog"&gt;jimschubert/beast-changelog-action@v1&lt;/a&gt; )&lt;/li&gt;
&lt;li&gt;Install .net 5 ( &lt;a href="https://github.com/marketplace/actions/setup-net-core-sdk"&gt;actions/setup-dotnet@v1&lt;/a&gt; )&lt;/li&gt;
&lt;li&gt;Install NodeJS and call my Gulp build task ( &lt;a href="https://github.com/marketplace/actions/setup-node-js-environment"&gt;actions/setup-node@v1&lt;/a&gt; )&lt;/li&gt;
&lt;li&gt;Upload the zipped Win, Mac, and Linus build artifacts to the release ( &lt;a href="https://github.com/marketplace/actions/github-release-create-update-and-upload-assets"&gt;meeDamian/github-release@2.0&lt;/a&gt; )&lt;/li&gt;
&lt;li&gt;Update the wiki ( &lt;a href="https://github.com/marketplace/actions/update-wiki"&gt;OrlovM/Wiki-Action@v1&lt;/a&gt; )&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It sounds like a lot of steps, but once you get used to working with Gulp and GitHub Actions, the process to orchestrate all of this is relatively straightforward.  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#next-steps"&gt;
  &lt;/a&gt;
  Next Steps
&lt;/h2&gt;

&lt;p&gt;I took a break from working on my game to recharge, and I have plans to build a more robust level editor, clean up all the bugs I'm seeing from the maps people are submitting, and add some new features to make this micro platformer engine a bit more modular.&lt;/p&gt;

&lt;p&gt;I encourage you to think outside of the box and leverage all of these fantastic free, open-source tools and services to speed up your development. I don't know many people that would take half a day out of a game jam to build a CI system, but I've had too many last-minute panic attacks where my game won't build, or I can't upload it because the jam site is slammed by everyone else trying to upload their game at the same time.  &lt;/p&gt;




&lt;p&gt;If you like this project, please leave a 👍  and  &lt;a href="https://github.com/PixelVision8/SpaceStation8"&gt;⭐️ on Github&lt;/a&gt;. Don't forget to create a level and submit it because I plan on adding a way to browse, load, and edit other people's maps in the next major update I release!&lt;/p&gt;

</description>
      <category>gamedev</category>
      <category>opensource</category>
      <category>github</category>
      <category>pixelvision8</category>
    </item>
    <item>
      <title>Learning Python- Intermediate course: Day 43, DDD and more on OOP</title>
      <author>Aatmaj</author>
      <pubDate>Thu, 14 Oct 2021 11:12:16 +0000</pubDate>
      <link>https://dev.to/aatmaj/learning-python-intermediate-course-day-43-ddd-and-more-on-oop-2npf</link>
      <guid>https://dev.to/aatmaj/learning-python-intermediate-course-day-43-ddd-and-more-on-oop-2npf</guid>
      <description>&lt;h2&gt;
  &lt;a href="#today-we-will-cover-some-oop-properties-that-are-not-covered-in-python-and-look-at-how-python-resolves-the-deadly-diamond-of-death"&gt;
  &lt;/a&gt;
  Today we will cover some OOP properties that are not covered in Python and look at how Python resolves the Deadly Diamond of Death.
&lt;/h2&gt;




&lt;p&gt;Python is a language mainly designed to use for data oriented analysis. Today, the most popular use of Python is Data science and ML. Although Python is used as a full-stack to some extent, heavy backending applications which require OOP are still made in Java to a certain extent. &lt;/p&gt;

&lt;p&gt;Java is OOP. It is the best suited for design patterns and other beautiful OOP stuff. Python is suited for Data science.. This is why probably Python doesn't support a few features of OOP which are critical to design patterns. Two most significant features are &lt;strong&gt;Abstract classes&lt;/strong&gt; and &lt;strong&gt;interfaces&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Although these features may not be available in core Python, we can still use them with the aid of a module know as &lt;code&gt;abc&lt;/code&gt; But that is not for this course.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Disclaimer! Advanced concepts like Multiple inheritance, duck typing, abc module will be covered in the advanced part of this course. This part is only for a brief upon those concepts.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h3&gt;
  &lt;a href="#interfaces"&gt;
  &lt;/a&gt;
  Interfaces
&lt;/h3&gt;

&lt;p&gt;Why do we even need interfaces when Python supports multiple inheritance? An interface is the Java workaround for multiple inheritance. All features of interfaces are covered by two python aspects- multiple inheritance and duck typing. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Still, a few use cases of interfaces are not resolved fully. If you want to make base classes that cannot be instantiated, but provide a specific interface or part of an implementation, interfaces are a must. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4&gt;
  &lt;a href="#duck-typing-in-python"&gt;
  &lt;/a&gt;
  Duck typing in Python
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;"If it walks like duck, swims like duck, looks like a duck, then it probably should be a duck."&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In other words, of a class has methods, properties of another class, it is another class. This simply means types go for a toss in Python as long as methods and attributes are the same.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;I know you have not understood anything.... this will be covered in detail in the advanced part of this course.&lt;/em&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#multiple-inheritance-in-python"&gt;
  &lt;/a&gt;
  Multiple inheritance in Python
&lt;/h4&gt;

&lt;p&gt;Python supports multiple inheritance. This means that one class can inherit two or more classes. The method resolution is done clearly in Python, unlike C++ and helps resolve most of the issues&lt;br&gt;
More about it in the advanced part of this course&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#deadly-diamond-of-death"&gt;
  &lt;/a&gt;
  Deadly Diamond of Death
&lt;/h4&gt;

&lt;p&gt;Python has a simple way of handling the diamond problem. The method of the first superclass passed is called.&lt;/p&gt;

&lt;p&gt;Let us continue with yesterday's program&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ape&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;food&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;weight&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;weight&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;weight&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;cry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;pass&lt;/span&gt; &lt;span class="c1"&gt;# Do nothing
&lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;eat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;food&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;chimpanzee&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ape&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;weight&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;weight&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;food&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"bananas"&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;cry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"I am a chimp"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;gorrilla&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ape&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;weight&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;weight&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;food&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"fruits"&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;cry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"I am a gorrilla"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;gorranzee&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;chimpanzee&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;gorrilla&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;pass&lt;/span&gt;

&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;gorranzee&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;food&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cry&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;bananas
I am a chimp

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ape&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;food&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;weight&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;weight&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;weight&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;cry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;pass&lt;/span&gt; &lt;span class="c1"&gt;# Do nothing
&lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;eat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;food&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;chimpanzee&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ape&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;weight&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;weight&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;food&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"bananas"&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;cry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"I am a chimp"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;gorrilla&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ape&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;weight&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;weight&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;food&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"fruits"&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;cry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"I am a gorrilla"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;gorranzee&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gorrilla&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;chimpanzee&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;pass&lt;/span&gt;

&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;gorranzee&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;food&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cry&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;fruits
I am a gorrilla

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If gorilla is passed first, then the &lt;code&gt;cry()&lt;/code&gt; method and constructor of gorilla class will run. And if chimpanzee is passed first, then the cry and constructor of chimpanzee class will be run.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#abc-module"&gt;
  &lt;/a&gt;
  abc module
&lt;/h3&gt;

&lt;p&gt;The abc (Abstract Base Classes) is a inbuilt Python module which enables the usage of abstract classes and inheritance in Python.&lt;br&gt;
This module provides the metaclass ABCMeta for defining ABCs and a helper class ABC to alternatively define ABCs through inheritance.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The package zope.interface provides an implementation of “object interfaces” for Python. It is maintained by the Zope Toolkit project. The package exports two objects, ‘Interface’ and ‘Attribute’ directly. It also exports several helper methods. It aims to provide stricter semantics and better error messages than Python’s built-in abc module.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://twistedmatrix.com/documents/current/core/howto/plugin.html"&gt;The Twisted Plugin System&lt;/a&gt; is an alternative to the zope interface.&lt;/p&gt;




&lt;p&gt;And at last, before ending today's last session, some philosophical sermon&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Python follows the EAFP (Easier to Ask Forgiveness than Permission) rather than the LBLY (Look Before You Leap) philosophy. The EAFP is somewhat linked to the "duck typing" style.&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>learningpython</category>
      <category>python</category>
      <category>programming</category>
      <category>oop</category>
    </item>
    <item>
      <title>Using NativeBase v3 The Right Way!</title>
      <author>Rohit Singh</author>
      <pubDate>Thu, 14 Oct 2021 10:57:19 +0000</pubDate>
      <link>https://dev.to/rayan1810/using-nativebase-v3-the-right-way-dp2</link>
      <guid>https://dev.to/rayan1810/using-nativebase-v3-the-right-way-dp2</guid>
      <description>&lt;p&gt;Since the release of NativeBase v3, many developers have built  and as the co-creator of a library, you are always curious to know how the community is using it. We have been speaking to developers and collecting feedback to see how they use NativeBase v3. We realize a lot of folks are not utilizing v3 to its full extent and making it super complex. In reality, it's simpler than you think.&lt;/p&gt;

&lt;p&gt;Since this version is based on a complete philosophical change in how you should approach making an application that runs on Native as well as web platforms, we wrote an introductory guide on how to adopt the v3 philosophy of creating beautiful and efficient UIs while using NativeBase.&lt;/p&gt;

&lt;p&gt;We are look through the following six segments in this article:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Setting up your project&lt;/li&gt;
&lt;li&gt;Utility Props vs StyleSheet API&lt;/li&gt;
&lt;li&gt;Importing from a single source&lt;/li&gt;
&lt;li&gt;Thinking in terms of pseudo props&lt;/li&gt;
&lt;li&gt;Utilising the hooks to the fullest&lt;/li&gt;
&lt;li&gt;Strict Mode&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#1-setting-up-your-project"&gt;
  &lt;/a&gt;
  1. Setting up your project
&lt;/h2&gt;

&lt;p&gt;If you are creating a new project and want to use NativeBase, it is recommended that you use the example templates that are provided with the component library. This will not only save you a lot of time but it is a good starting point to look through how light and dark mode can be implemented along with a glimpse of the custom theme setup which you can edit or remove based on your requirement. &lt;/p&gt;

&lt;p&gt;The commands for setting up the templates in expo, CRA, React Native and Next.js projects are given below for your reference.&lt;/p&gt;

&lt;p&gt;To implement a template on an &lt;strong&gt;Expo Project&lt;/strong&gt;, use the code given below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# JavaScript&lt;/span&gt;
expo init my-app &lt;span class="nt"&gt;--template&lt;/span&gt; expo-template-native-base

&lt;span class="c"&gt;# Typescript&lt;/span&gt;
expo init my-app &lt;span class="nt"&gt;--template&lt;/span&gt; expo-template-native-base-typescript
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To implement a template on a &lt;strong&gt;create-react-app Project&lt;/strong&gt;, use the code given below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# JavaScript&lt;/span&gt;
npx create-react-app my-app &lt;span class="nt"&gt;--template&lt;/span&gt; nativebase

&lt;span class="c"&gt;# Typescript&lt;/span&gt;
npx create-react-app my-app &lt;span class="nt"&gt;--template&lt;/span&gt; nativebase-typescript
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To implement a template on a &lt;strong&gt;React Native Project&lt;/strong&gt;, use the code given below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Javascript&lt;/span&gt;
npx react-native init my-app &lt;span class="nt"&gt;--template&lt;/span&gt; react-native-template-native-base

&lt;span class="c"&gt;# Typescript&lt;/span&gt;
npx react-native init my-app &lt;span class="nt"&gt;--template&lt;/span&gt; react-native-template-native-base-typescript
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To implement a template on a &lt;strong&gt;NextJS Project&lt;/strong&gt;, use the code given below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Javascript&lt;/span&gt;
yarn create next-app &lt;span class="nt"&gt;-e&lt;/span&gt; https://github.com/GeekyAnts/nativebase-templates/tree/master/nextjs-with-native-base

&lt;span class="c"&gt;# Typescript&lt;/span&gt;
yarn create next-app &lt;span class="nt"&gt;-e&lt;/span&gt; https://github.com/GeekyAnts/nativebase-templates/tree/master/nextjs-with-native-base-typescript
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;All the templates on NativeBase v3 come with a customTheme setup using which you can customise themes very easily.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#2-utility-props-vs-stylesheet-api"&gt;
  &lt;/a&gt;
  2. Utility Props vs StyleSheet API
&lt;/h2&gt;

&lt;p&gt;We highly recommend all users of NativeBase to use Utility Props over &lt;code&gt;StyleSheets&lt;/code&gt; where ever they can. &lt;/p&gt;

&lt;p&gt;NativeBase components accepts tons of utility props for your use. You can find the list of them &lt;a href="http://docs.nativebase.io/utility-props"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Let's see an example and compare both approaches:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FoTAZ8kY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1hvglxh4753t8kinpv7b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FoTAZ8kY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1hvglxh4753t8kinpv7b.png" alt="Example Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;If you choose to use a React Native &lt;code&gt;StyleSheet&lt;/code&gt;, refer to the code given below
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;View&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;StyleSheet&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-native&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="c1"&gt;// The code looks cleaner here but it's really hard to tell what is what and how that component would look.&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;View&lt;/span&gt; &lt;span class="na"&gt;style&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;styles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;container&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;View&lt;/span&gt; &lt;span class="na"&gt;style&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;styles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;card&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;View&lt;/span&gt; &lt;span class="na"&gt;style&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;styles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;row&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Text&lt;/span&gt; &lt;span class="na"&gt;style&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;styles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;subHeading&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Business&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Text&lt;/span&gt; &lt;span class="na"&gt;style&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;styles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;period&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;1 month ago&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;View&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Text&lt;/span&gt; &lt;span class="na"&gt;style&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;styles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;heading&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Marketing License&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Text&lt;/span&gt; &lt;span class="na"&gt;style&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;styles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;paragraph&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          Unlock powerfull time-saving tools for creating email delivery and
          collecting marketing data
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Text&lt;/span&gt; &lt;span class="na"&gt;style&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;styles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;link&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Read More&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;View&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;View&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// You need to switch back and forth to understand which component has which style&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;styles&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;StyleSheet&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;container&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;justifyContent&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;center&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;alignItems&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;center&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;backgroundColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#374151&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;card&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;296&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;backgroundColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#f9fafb&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;borderRadius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;paragraph&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;marginTop&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;fontSize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;fontWeight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;medium&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#6b7280&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;period&lt;/span&gt;&lt;span class="p"&gt;:{&lt;/span&gt;
    &lt;span class="na"&gt;fontSize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#a1a1aa&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;heading&lt;/span&gt;&lt;span class="p"&gt;:{&lt;/span&gt;
    &lt;span class="na"&gt;marginTop&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;fontSize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;fontWeight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;link&lt;/span&gt;&lt;span class="p"&gt;:{&lt;/span&gt;
    &lt;span class="na"&gt;marginTop&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#0891b2&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;fontWeight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;medium&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;fontSize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;subHeading&lt;/span&gt;&lt;span class="p"&gt;:{&lt;/span&gt;
    &lt;span class="na"&gt;fontSize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#71717a&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;row&lt;/span&gt;&lt;span class="p"&gt;:{&lt;/span&gt;
    &lt;span class="na"&gt;flexDirection&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;row&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;justifyContent&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;space-between&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;alignItems&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;flex-start&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Expo Snack:&lt;/strong&gt; &lt;a href="https://snack.expo.dev/pu9jBPcut"&gt;https://snack.expo.dev/pu9jBPcut&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Now the same UI can be implemented on NativeBase using its Utility Props. Refer to the code given below:
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;Center&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;NativeBaseProvider&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;HStack&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;Box&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;Spacer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;native-base&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="c1"&gt;// Though it doesn't look as slick as the previous example but try reading the code.&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;NativeBaseProvider&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Center&lt;/span&gt; &lt;span class="na"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;bg&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"coolGray.700"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="c1"&gt;// Every line of code is so much intuitive, one can easily understand what it does.}&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Box&lt;/span&gt; &lt;span class="na"&gt;bg&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"blueGray.50"&lt;/span&gt; &lt;span class="na"&gt;p&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"5"&lt;/span&gt; &lt;span class="na"&gt;w&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"296"&lt;/span&gt; &lt;span class="na"&gt;rounded&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"8"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;HStack&lt;/span&gt; &lt;span class="na"&gt;alignItems&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"flex-start"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Text&lt;/span&gt; &lt;span class="na"&gt;fontSize&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"12"&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"gray.500"&lt;/span&gt; &lt;span class="na"&gt;fontWeight&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"medium"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
              Business
            &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Spacer&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Text&lt;/span&gt; &lt;span class="na"&gt;fontSize&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"10"&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"gray.400"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
              1 month ago
            &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;HStack&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Text&lt;/span&gt; &lt;span class="na"&gt;mt&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"3"&lt;/span&gt; &lt;span class="na"&gt;fontWeight&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"medium"&lt;/span&gt; &lt;span class="na"&gt;fontSize&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"20"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            Marketing License
          &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Text&lt;/span&gt; &lt;span class="na"&gt;mt&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"2"&lt;/span&gt; &lt;span class="na"&gt;fontSize&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"14"&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"gray.500"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            Unlock powerfull time-saving tools for creating email delivery and
            collecting marketing data
          &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Text&lt;/span&gt; &lt;span class="na"&gt;mt&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"2"&lt;/span&gt; &lt;span class="na"&gt;fontSize&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"12"&lt;/span&gt; &lt;span class="na"&gt;fontWeight&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"medium"&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"cyan.600"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            Read More
          &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Box&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;/&lt;/span&gt;&lt;span class="na"&gt;Center&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;NativeBaseProvider&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="si"&gt;}&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Expo Snack:&lt;/strong&gt; &lt;a href="https://snack.expo.dev/AGNgFxZ4L"&gt;https://snack.expo.dev/AGNgFxZ4L&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The advantages of using Utility Props are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Massive productivity boost&lt;/li&gt;
&lt;li&gt;Better code readability&lt;/li&gt;
&lt;li&gt;No need to remember style names&lt;/li&gt;
&lt;li&gt;Emphasis on creating reusable components instead of reusable stylesheets&lt;/li&gt;
&lt;li&gt;Using Theme Tokens.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Alternatively, you can use Utility Props in &lt;code&gt;StyleSheet&lt;/code&gt; APIs by creating objects of utility props and spreading them even through this method is not recommended.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;
  &lt;a href="#3-importing-from-a-single-source"&gt;
  &lt;/a&gt;
  3. Importing from a single source
&lt;/h2&gt;

&lt;p&gt;We selected few common components from the core React Native Library that you might commonly need while developing your and passed them through our &lt;code&gt;Factory&lt;/code&gt; function to help us to import from a single source. This action helps to pack in all the good stuff that NativeBase has to offer without a worry of having to import a new component from any other line.&lt;/p&gt;

&lt;p&gt;If you are using NativeBase v3, then we highly recommend that you use the following  components from the NativeBase library:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;ScrollView&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;View&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;KeyboardAvoidingView&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;StatusBar&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;FlatList&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;SectionList&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;native-base&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The components are listed below along with their documentation links:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;code&gt;ScrollView&lt;/code&gt; - &lt;a href="https://docs.nativebase.io/scrollview"&gt;https://docs.nativebase.io/scrollview&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;View&lt;/code&gt; - &lt;a href="https://docs.nativebase.io/view"&gt;https://docs.nativebase.io/view&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;KeyboardAvoidingView&lt;/code&gt; - &lt;a href="https://docs.nativebase.io/keyboard-avoiding-view"&gt;https://docs.nativebase.io/keyboard-avoiding-view&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;StatusBar&lt;/code&gt; - &lt;a href="https://docs.nativebase.io/status-bar"&gt;https://docs.nativebase.io/status-bar&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;FlatList&lt;/code&gt; - &lt;a href="https://docs.nativebase.io/flat-list"&gt;https://docs.nativebase.io/flat-list&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;SectionList&lt;/code&gt; - &lt;a href="https://docs.nativebase.io/section-list"&gt;https://docs.nativebase.io/section-list&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#4-thinking-in-terms-of-pseudo-props"&gt;
  &lt;/a&gt;
  4. Thinking in terms of pseudo props
&lt;/h2&gt;

&lt;p&gt;We, at NativeBase, have put a lot of thought on making the development experience simpler for the tech community. To extend that thought, we have provided a few pseudo props that entirely changes how you approach making applications all together. Let's understand this with a few examples.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#color-mode-pseudo-props"&gt;
  &lt;/a&gt;
  Color Mode Pseudo Props:
&lt;/h3&gt;

&lt;p&gt;NativeBase provides hooks to check what is the current theme and color mode i.e. &lt;strong&gt;&lt;code&gt;Light&lt;/code&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;code&gt;Dark&lt;/code&gt;&lt;/strong&gt; , but this comes with the hassle of importing the hook, calling it, conditionally checking the color mode etc which can be tedious.&lt;/p&gt;

&lt;p&gt;Instead, you can just add your props in &lt;code&gt;_light&lt;/code&gt; and &lt;code&gt;_dark&lt;/code&gt; pseudo props and NativeBase will apply those props based on the relevant color mode only. Lets check this out this example:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;In this example, let's suppose that there is a button that needs to have a &lt;strong&gt;&lt;code&gt;backgroundColor&lt;/code&gt;&lt;/strong&gt; = "primary.500" in &lt;code&gt;light mode&lt;/code&gt; and the default background color when in &lt;code&gt;dark mode&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Conditionally, the text color should be "primary.800" in &lt;code&gt;dark mode&lt;/code&gt; and default in &lt;code&gt;light mode&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Use the following code to check the current theme and color mode using hooks:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;Button&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;Center&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;useColorMode&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// Step 1 Importing the hook&lt;/span&gt;
  &lt;span class="nx"&gt;NativeBaseProvider&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;native-base&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;TestApp&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;colorMode&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useColorMode&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// Step 2 Calling the hook&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Button&lt;/span&gt;
      &lt;span class="na"&gt;bg&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;colorMode&lt;/span&gt;&lt;span class="o"&gt;===&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;light&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;primary.500&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;primary.400&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="c1"&gt;// Step 3 Conditionally applying props&lt;/span&gt;
      &lt;span class="na"&gt;_text&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;colorMode&lt;/span&gt;&lt;span class="o"&gt;===&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;light&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;primary.800&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;white&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="c1"&gt;// Step 3 Conditionally applying props&lt;/span&gt;
    &lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      Button
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;NativeBaseProvider&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Center&lt;/span&gt; &lt;span class="na"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;TestApp&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Center&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;NativeBaseProvider&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Use the following code to check the current theme and color mode  using &lt;strong&gt;&lt;code&gt;_light&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;_dark&lt;/code&gt;&lt;/strong&gt; pseudo props:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;Button&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;Center&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;NativeBaseProvider&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;native-base&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;TestApp&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Button&lt;/span&gt;
      &lt;span class="na"&gt;_light&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;bg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;primary.500&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="c1"&gt;// Step 1 Conditionally pass props to _light and _dark&lt;/span&gt;
      &lt;span class="na"&gt;_dark&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;_text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;primary.800&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      Button
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;NativeBaseProvider&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Center&lt;/span&gt; &lt;span class="na"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;TestApp&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Center&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;NativeBaseProvider&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The following is the resulting of executing the aforementioned code. Using this example, you can now easily understand how these pseudo props can be used to make developers lives much easier:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--52qjf9xJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jwqatftbw1b9trl0b8h6.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--52qjf9xJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jwqatftbw1b9trl0b8h6.gif" alt="Gif showing light and dark mode design"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#platform-pseudo-props"&gt;
  &lt;/a&gt;
  Platform Pseudo Props:
&lt;/h3&gt;

&lt;p&gt;Remember doing something like this to conditionally pass props to your components based on Platform.OS?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Input&lt;/span&gt; 
    &lt;span class="na"&gt;numberOfLines&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Platform&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;OS&lt;/span&gt;&lt;span class="o"&gt;===&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;android&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;4&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt; &lt;span class="si"&gt;}&lt;/span&gt; 
    &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Platform&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;OS&lt;/span&gt;&lt;span class="o"&gt;===&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;web&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;48&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;80%&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="si"&gt;}&lt;/span&gt; 
&lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Well, that not an issue anymore on the latest version of NativeBase! You can simply use &lt;strong&gt;&lt;code&gt;_web&lt;/code&gt;, &lt;code&gt;_android&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;_ios&lt;/code&gt;&lt;/strong&gt; props and pass the relevent one to a certain platform and you are good to go.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Input&lt;/span&gt; &lt;span class="na"&gt;_android&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;numberOfLines&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;_web&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;48&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"80%"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Platform props override other props when the particular  platform is true as they top the precedence level &lt;/p&gt;

&lt;p&gt;There are more pseudo props on NativeBase which which we will cover in an upcoming blogs along with introductory guides to implement them. Hope to see you there too!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-utilising-the-hooks-to-the-fullest"&gt;
  &lt;/a&gt;
  5. Utilising the hooks to the fullest
&lt;/h2&gt;

&lt;p&gt;NativeBase also comes with a lot of easy-to-use custom hooks to help you build your applications super fast, so keep in mind to use them when you can. &lt;/p&gt;

&lt;p&gt;For example, let's look into how to implement the  &lt;code&gt;useDisclose&lt;/code&gt;  hook. Refer to the code given below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;Modal&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;Button&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;Center&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;useDisclose&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;NativeBaseProvider&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;native-base&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;UseDiscloseExample&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// handles common open, close, or toggle scenarios&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;isOpen&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;onOpen&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;onClose&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useDisclose&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="c1"&gt;// no need to create your own state and helper functions&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Modal&lt;/span&gt; &lt;span class="na"&gt;isOpen&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;isOpen&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;onClose&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;onClose&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Modal&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Content&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Modal&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;CloseButton&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Modal&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Header&lt;/span&gt; &lt;span class="na"&gt;fontSize&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"4xl"&lt;/span&gt; &lt;span class="na"&gt;fontWeight&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"bold"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            Hello World
          &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Modal&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Header&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Modal&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            Lorem ipsum dolor sit amet consectetur adipisicing elit. Quos quasi
            cupiditate expedita, ipsa corporis officia totam similique delectus!
            Debitis esse, ea blanditiis iste enim iure at odit fugiat autem.
            Accusamus?
          &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Modal&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Modal&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Footer&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Button&lt;/span&gt; &lt;span class="na"&gt;colorScheme&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"blue"&lt;/span&gt; &lt;span class="na"&gt;mr&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"1"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
              Save
            &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Button&lt;/span&gt; &lt;span class="na"&gt;onPress&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;onClose&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Close&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Modal&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Footer&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Modal&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Content&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Modal&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Button&lt;/span&gt; &lt;span class="na"&gt;onPress&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;onOpen&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Open Modal&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;NativeBaseProvider&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Center&lt;/span&gt; &lt;span class="na"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;UseDiscloseExample&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Center&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;NativeBaseProvider&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Another important hook is the &lt;code&gt;useBreakpointValue&lt;/code&gt; which returns the value for the current breakpoint. Refer to the code given below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Box&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useBreakpointValue&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;NativeBaseProvider&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Center&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;native-base&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;UseBreakpointValueExample&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// the value of color will change based on the screen sizes.&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useBreakpointValue&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;base&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;red.200&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;sm&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;blue.200&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;md&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;blue.200&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Box&lt;/span&gt; &lt;span class="na"&gt;bg&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;w&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;100px&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      This is a box
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Box&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;NativeBaseProvider&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Center&lt;/span&gt; &lt;span class="na"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;UseBreakpointValueExample&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Center&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;NativeBaseProvider&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Below is a list of other hooks along with their docs:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;code&gt;useDisclose&lt;/code&gt; - &lt;a href="https://docs.nativebase.io/use-disclosure"&gt;https://docs.nativebase.io/use-disclosure&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;useBreakpointValue&lt;/code&gt; - &lt;a href="https://docs.nativebase.io/use-breakPoint-value"&gt;https://docs.nativebase.io/use-breakPoint-value&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;useClipboard&lt;/code&gt; - &lt;a href="https://docs.nativebase.io/use-clipboard"&gt;https://docs.nativebase.io/use-clipboard&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;useMediaQuery&lt;/code&gt; - &lt;a href="https://docs.nativebase.io/use-media-query"&gt;https://docs.nativebase.io/use-media-query&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;useTheme&lt;/code&gt; - &lt;a href="https://docs.nativebase.io/use-theme"&gt;https://docs.nativebase.io/use-theme&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;useToken&lt;/code&gt; - &lt;a href="https://docs.nativebase.io/use-token"&gt;https://docs.nativebase.io/use-token&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;useColorMode&lt;/code&gt; - &lt;a href="https://docs.nativebase.io/use-color-mode"&gt;https://docs.nativebase.io/use-color-mode&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;useColorModeValue&lt;/code&gt; - &lt;a href="https://docs.nativebase.io/use-color-mode-value"&gt;https://docs.nativebase.io/use-color-mode-value&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;useContrastText&lt;/code&gt; - &lt;a href="https://docs.nativebase.io/use-contrast-text"&gt;https://docs.nativebase.io/use-contrast-text&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;useAccessibleColors&lt;/code&gt; - &lt;a href="https://docs.nativebase.io/use-accessible-colors"&gt;https://docs.nativebase.io/use-accessible-colors&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#6-strict-mode"&gt;
  &lt;/a&gt;
  6. Strict Mode
&lt;/h2&gt;

&lt;p&gt;NativeBase v3 now also has a Strict Mode that lets you control the level of strictness of the app development environment. A really handy tool to maintain the best possible practices through out your codebase, Strict Mode is a configuration that you can pass into your NativeBase configuration settings. It takes in three values, &lt;code&gt;error&lt;/code&gt;, &lt;code&gt;warn&lt;/code&gt; and &lt;code&gt;off&lt;/code&gt; , out of which the setting is &lt;code&gt;off&lt;/code&gt; by default. Based on your chosen option, it goes through every prop in your project and checks if you have used the proper  &lt;code&gt;token values&lt;/code&gt; from &lt;code&gt;theme&lt;/code&gt; by only passing &lt;code&gt;string&lt;/code&gt; values to the props. If this condition is not satisfied, it throws an error/warning or does nothing.&lt;/p&gt;

&lt;p&gt;If you are previously used to passing numbers to utility props, then please use string tokens since the version 3.2.0 have new token values added that might cause a dilemma. Refer to the code given below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// If you previously had something like this in your code&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Box&lt;/span&gt; &lt;span class="na"&gt;p&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;mx&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;my&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"12px"&lt;/span&gt; &lt;span class="na"&gt;bg&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"primary.400"&lt;/span&gt; &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"50%"&lt;/span&gt; &lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    Hello World
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Box&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="c1"&gt;// Then now the correct way would be&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Box&lt;/span&gt; &lt;span class="na"&gt;p&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"4"&lt;/span&gt; &lt;span class="na"&gt;mx&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"3"&lt;/span&gt; &lt;span class="na"&gt;my&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"3"&lt;/span&gt; &lt;span class="na"&gt;bg&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"primary.400"&lt;/span&gt; &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"1/2"&lt;/span&gt; &lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    Hello World
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Box&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;This wraps up our introduction on how to utilise the latest features on NativeBase in the best possible way. With its most recent improvements, NativeBase can be used to create accessible and far more customisable components than ever before. I hope this article prompts you to try out the new functionalities that v3 comes with and we'll have more guides for you in the future to help you create beautiful applications using the rich component library that NativeBase has to offer. &lt;/p&gt;

&lt;p&gt;Do tell us about your experiments on on ourFuture is al Discord channel by &lt;a href="//nativebase.io/discord"&gt;clicking here&lt;/a&gt; .&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>reactnative</category>
      <category>react</category>
      <category>nativebase</category>
    </item>
    <item>
      <title>Create React-App</title>
      <author>King</author>
      <pubDate>Thu, 14 Oct 2021 10:46:19 +0000</pubDate>
      <link>https://dev.to/flt_s3nyo/create-react-app-ip9</link>
      <guid>https://dev.to/flt_s3nyo/create-react-app-ip9</guid>
      <description>&lt;p&gt;React is a javascript library used for creating user interfaces. People who are new to create don't seem to fully appreciate how far we have come with React.js when it comes to setting up projects. It seems so simple now and that is the point of technology, for innovations to become as automated as possible.&lt;/p&gt;

&lt;p&gt;Writing a single line of React code was quite intricate when compared to now, with so many build tools that we had to manually set as well as the numerous dependencies and requirements such as &lt;strong&gt;webpack&lt;/strong&gt; and &lt;strong&gt;babel&lt;/strong&gt;, all these before we could think of writing a react code.&lt;/p&gt;

&lt;p&gt;As time went on there was the need to automate this process and to make React beginner friendly. The Create React App CLI  came to save the day.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-create-react-app"&gt;
  &lt;/a&gt;
  What is create react app?
&lt;/h2&gt;

&lt;p&gt;create-react-app CLI is a tool created by Facebook to automate the process of setting up a react project so users could only concentrate on writing code only. It was the abstraction we yearned for and setting up a react project takes less than a minute now.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#requirements"&gt;
  &lt;/a&gt;
  Requirements
&lt;/h2&gt;

&lt;p&gt;create-react-app works on many operating systems we have today and it is maintained by Facebook. Before creating a react app we are required to have &lt;strong&gt;Node Package Manager (NPM) &amp;gt;= 10&lt;/strong&gt; on our local development machine.&lt;/p&gt;

&lt;p&gt;We can then create a react app using the following methods;&lt;/p&gt;

&lt;p&gt;npm&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V3-6PiXq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s0scwuvrpi7kwonivipn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V3-6PiXq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s0scwuvrpi7kwonivipn.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;npx&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gsVjWkqm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9ed7ihgufir0ofgjcu5g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gsVjWkqm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9ed7ihgufir0ofgjcu5g.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;yarn&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IwQB2ABb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xjksga6kylq0kr3owj2q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IwQB2ABb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xjksga6kylq0kr3owj2q.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;npm, yarn and npx&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;npm&lt;/strong&gt; is the acronym for Node Package Manager. It is the default package manager for the JavaScript runtime environment Node.js. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;yarn&lt;/strong&gt; is the acronym for Yet Another Resource Negotiator. It was created by Facebook at a time when npm was buggy.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;npx&lt;/strong&gt;; both npm and yarn install node packages globally while npx executes node packages. It runs a command of a package without installing it explicitly&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  Output
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jRtK-oSH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1gvgeavcd9urfa6gwaw7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jRtK-oSH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1gvgeavcd9urfa6gwaw7.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, we are going to explain what those folders mean.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;node_modules&lt;/strong&gt;: The node_modules directory contains the React library and all other downloaded dependencies you'd use for your project locally.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;src&lt;/strong&gt;: src or source folder is where the application lives. All the code we write for our application lives in the src folder. It contains the App.css, App.js, App.test.js, index.css, index.js, and serviceWorker.js files.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kwcqhlgw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fkpije1iljjzannl8462.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kwcqhlgw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fkpije1iljjzannl8462.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;public&lt;/strong&gt;: It contains all the public assets of the application. The public assets are created when we call the build scripts. React script converts all the Javascript files in the src folder into Javascript in HTML that the browser understands and the converted files are stored in the public folder&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--szz0-789--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w4w0ajzvznl52ryglqxq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--szz0-789--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w4w0ajzvznl52ryglqxq.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;package-lock.json&lt;/strong&gt; : its automatically generated for any operations where npm modifies either the node_modules tree, or package. json . It describes the exact tree that was generated, such that subsequent installs are able to generate identical trees, regardless of intermediate dependency updates.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;package.json&lt;/strong&gt;: its used to store the metadata associated with the project as well as to store the list of dependency packages.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_NxXX8mZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fk59br79l629ejn4hkyz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_NxXX8mZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fk59br79l629ejn4hkyz.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The package.json also contains the React-scripts. It is this script that allows us to not worry about manually setting up &lt;strong&gt;webpack&lt;/strong&gt; and &lt;strong&gt;babel&lt;/strong&gt;. It includes four scripts which perform various functions for us;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Start&lt;/strong&gt;: This command starts our project and serves it up onto our localhost:3000&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;build&lt;/strong&gt;:when your project has several components these separate files need to be merged or bundled to be precise in one single file. The build script does that. &lt;strong&gt;babel&lt;/strong&gt; converts our Javascript into a version of Javascript that our browsers can understand. &lt;strong&gt;Webpack&lt;/strong&gt; takes all our Javascript files and bundles them into one file. All these conversions and bundling of the src files are stored in the public folder.&lt;/p&gt;

&lt;p&gt;****&lt;strong&gt;&lt;em&gt;TO BE CONTINUED&lt;/em&gt;&lt;/strong&gt;****&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Frontend, Backend and Fullstack In Software Development, explained.</title>
      <author>Nwachukwu Wisdom Ndubuisi</author>
      <pubDate>Thu, 14 Oct 2021 10:37:35 +0000</pubDate>
      <link>https://dev.to/crypticwisdom/frontend-backend-and-fullstack-in-software-development-explained-4igg</link>
      <guid>https://dev.to/crypticwisdom/frontend-backend-and-fullstack-in-software-development-explained-4igg</guid>
      <description>&lt;p&gt;You must have wondered what the differences are between a Frontend Developer, Backend Developer and a FullStack as a beginner or Web enthusiasts.&lt;br&gt;
In this post, our example will be on Web Applications.&lt;br&gt;
Without further ado let's delve in.🥳&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#the-generic-name"&gt;
  &lt;/a&gt;
  The Generic name.
&lt;/h1&gt;

&lt;p&gt;Let's first talk about what leads to being either a &lt;strong&gt;Frontend, Backend or Full Stack developer&lt;/strong&gt;, which is Software Development.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Software development&lt;/strong&gt; is the process of creating computer software using one or more programming languages.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#types-of-software-development"&gt;
  &lt;/a&gt;
  Types of Software Development.
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Web Development.&lt;/li&gt;
&lt;li&gt;Web Application development.&lt;/li&gt;
&lt;li&gt;Mobile Development.
&lt;a href="https://vocal.media/01/10-different-types-of-software-development"&gt;Read more&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h1&gt;
  &lt;a href="#web-development-vs-web-application-development"&gt;
  &lt;/a&gt;
  Web development vs Web Application Development.
&lt;/h1&gt;

&lt;p&gt;The simple difference between them is,&lt;br&gt;
Web development is more like building a less interactive software, like a site that simply tells you about a business &lt;a href="https://www.belovedtwins.com"&gt;belovedtwins&lt;/a&gt;, while Web Application Development is the creation of a high level interactive web software, e.g &lt;a href="https://m.facebook.com"&gt;facebook&lt;/a&gt; or &lt;a href="https://www.github.com/crypticwisdom"&gt;Github&lt;/a&gt;.&lt;br&gt;
Knowing this simple difference between Web development and Web application development.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#building-a-web-application"&gt;
  &lt;/a&gt;
  Building a Web Application.
&lt;/h1&gt;

&lt;p&gt;In building Web Applications we should know the 2 parts of a Web Application, which are:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Frontend&lt;/strong&gt; : in abstract, the frontend of a web application is simply the visible part of the application (User Interface) and more in-depth look is the feel (User Experience) of the web application. The person in charge of this part is called a &lt;strong&gt;Frontend Developer&lt;/strong&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Backend&lt;/strong&gt; : this is the logical part of the whole web application system, it is the more critical part of a web app. This include Payment Processing, User Data handling , A.P.I creation(resources meant to be accessed by mobile phones for the Mobile version of the particular web app or other software like Desktop apps.), Frontend integration and so on...&lt;br&gt;
A backend developer handles all data coming from the frontend and the data is being processed, stored, or returned back as information to the user in the Frontend.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Having these 2 skills of a Frontend Developer and a Backend Developer in one person makes him a &lt;strong&gt;FullStack Developer&lt;/strong&gt;😌.&lt;/p&gt;

&lt;p&gt;Note: Frontend, Backend and FullStack terminologies in Web Application are also applicable in other Software Development Areas such as Mobile Application. &lt;/p&gt;

&lt;p&gt;If you find this article helpful please follow for more and also drop a comment on what topic(s) should be treated next. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How to know what kind of developer to become.&lt;/strong&gt;😌&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What Technologies should you use as a Frontend, Backend or FullStack Developer ? You wanna know ?&lt;/strong&gt;😌&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>programming</category>
      <category>django</category>
      <category>react</category>
    </item>
    <item>
      <title>using sphinx to generate documentation</title>
      <author>domonic</author>
      <pubDate>Thu, 14 Oct 2021 10:24:49 +0000</pubDate>
      <link>https://dev.to/domonic/using-sphinx-to-generate-documentation-1a45</link>
      <guid>https://dev.to/domonic/using-sphinx-to-generate-documentation-1a45</guid>
      <description>&lt;p&gt;Have you tried Sphinx for generating documentation?&lt;/p&gt;

&lt;p&gt;it converts .rst files and auto imports docstrings from code&lt;/p&gt;

&lt;p&gt;I made my docs with it...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://domonic.readthedocs.io/"&gt;https://domonic.readthedocs.io/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;check out this huge list of software that use it for their docs.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.sphinx-doc.org/en/master/examples.html"&gt;https://www.sphinx-doc.org/en/master/examples.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It's very easy to use. Just cd to the docs folder and type&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;make html&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;That's it!&lt;/p&gt;

</description>
      <category>python</category>
      <category>html</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>A boilerplate for fiber versioning</title>
      <author>Visarut Phusua</author>
      <pubDate>Thu, 14 Oct 2021 10:02:28 +0000</pubDate>
      <link>https://dev.to/aofdev/a-boilerplate-for-fiber-versioning-2ng9</link>
      <guid>https://dev.to/aofdev/a-boilerplate-for-fiber-versioning-2ng9</guid>
      <description>&lt;p&gt;👋 Hello! I just created a boilerplate, clean architecture, API versioning, data versioning. Any feedback is welcome!&lt;/p&gt;

&lt;p&gt;
  &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aWtqO4vn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pqw6aagpv154xvl0lhm0.gif" class="article-body-image-wrapper"&gt;&lt;img alt="demo" src="https://res.cloudinary.com/practicaldev/image/fetch/s--aWtqO4vn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pqw6aagpv154xvl0lhm0.gif"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#features"&gt;
  &lt;/a&gt;
  Features ✨
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;API Versioning&lt;/li&gt;
&lt;li&gt;Data Versioning&lt;/li&gt;
&lt;li&gt;Dynamic Struct Type&lt;/li&gt;
&lt;li&gt;Clean Architecture&lt;/li&gt;
&lt;li&gt;Postman Collections&lt;/li&gt;
&lt;li&gt;API Documentation with swagger&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#project-structure"&gt;
  &lt;/a&gt;
  Project structure 📁
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;api
  ├── adapters
  │  └── mongo.go
  ├── app.go
  ├── handlers
  │  ├── errors.go
  │  ├── parser_body.go
  │  └── response.go
  ├── utilities
  │  ├── configuration.go
  │  └── converter.go
  └── versions
    ├── v1
    │  ├── entities
    │  ├── factories
    │  ├── repositories
    │  ├── routes
    │  └── usecases
    └── v2
        ├── entities
        ├── factories
        ├── repositories
        ├── routes
        └── usecases

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#here-is-my-github-link-for-this-project"&gt;
  &lt;/a&gt;
  Here is my GitHub link for this project:
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://github.com/aofdev/fiber-versioning-boilerplate"&gt;https://github.com/aofdev/fiber-versioning-boilerplate&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thank you for reading my post 😊&lt;br&gt;
Thanks! Don't forget to give a ♥️ and follow :)&lt;/p&gt;

</description>
      <category>go</category>
      <category>fiber</category>
      <category>api</category>
      <category>showdev</category>
    </item>
    <item>
      <title>Join us for Hacktoberfest and Win 1 of the 10 special Creative Tim prizes</title>
      <author>Creative Tim</author>
      <pubDate>Thu, 14 Oct 2021 09:54:43 +0000</pubDate>
      <link>https://dev.to/creativetim_official/join-us-for-hacktoberfest-and-win-1-of-the-10-special-creative-tim-prizes-3fc7</link>
      <guid>https://dev.to/creativetim_official/join-us-for-hacktoberfest-and-win-1-of-the-10-special-creative-tim-prizes-3fc7</guid>
      <description>&lt;p&gt;Autumn is here, and for developers around the world, it comes with a celebration. Every October brings the &lt;strong&gt;&lt;a href="https://hacktoberfest.digitalocean.com/"&gt;Hacktoberfest&lt;/a&gt;&lt;/strong&gt;, an online event which is a month-long celebration of open-source software run by DigitalOcean in partnership with &lt;a href="https://github.com/"&gt;GitHub&lt;/a&gt; and &lt;a href="https://www.twilio.com/"&gt;Twilio&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Are you a fan of open-source resources, too? The ideology of open-source is that everyone can contribute to making a better project. Therefore, the project becomes more accessible and more reliable as, sometimes, you can have tens of experts working on one project, guaranteeing quality.&lt;/p&gt;

&lt;p&gt;We, at &lt;a href="www.creative-tim.com?ref=devto"&gt;Creative Tim&lt;/a&gt;, believe in the power of sharing and collaborating in order to develop a better web. &lt;strong&gt;Therefore, this year, we are offering a special Creative Tim T-shirt for ten collaborators on our open-source 🎁&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;In the list below, we've gathered five of our open-source projects that are included in the Hacktoberfest 2021 event and can help you create quality pull requests and build on your open-source knowledge. Let's have a look!&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#1-ira-design"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://github.com/ira-design/ira-illustrations"&gt;1. Ira Design&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://github.com/ira-design/ira-illustrations"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Yf9ccTIp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2021/10/Ira-Design-2.jpg" alt="ira design"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://iradesign.io/"&gt;Ira Design&lt;/a&gt; is a tool for building amazing illustrations by using its awesome gradients and hand-drawn sketch components. Mix and match five available color gradients and then choose your favourite hand-drawn characters and objects. The final illustrations are perfect for creating mobile apps or website kits. It is released under MIT license, so you can use it both for personal and commercial projects for free. &lt;br&gt;
&lt;a href="https://github.com/ira-design/ira-illustrations" rel="nofollow"&gt;➡️ Check out its Github repo&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#2-vue-material"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://github.com/vuematerial/vue-material" rel="nofollow"&gt;2. Vue Material&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://github.com/vuematerial/vue-material"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xgzMEhuj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2021/09/vue-material.png" alt="vue-material"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.creative-tim.com/vuematerial/?ref=devto"&gt;Vue Material&lt;/a&gt; is an open-source, simple, lightweight framework built exactly according to the Google Material Design specs. It helps developers build well-designed apps that can fit on every screen with support to all modern Web Browsers. Using Vue Material you can generate and use themes dynamically, use components on demand, take advantage of UI Elements and Components with an easy-to-use API.&lt;br&gt;
&lt;a href="https://github.com/vuematerial/vue-material" rel="nofollow"&gt;➡️ Check out its Github repo&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#3-galio"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://github.com/galio-org/galio" rel="nofollow"&gt;3. Galio&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://github.com/galio-org/galio"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UiLsPFh6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2021/09/galio.png" alt="galio"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://galio.io/?ref=devto" rel="nofollow"&gt;Galio&lt;/a&gt; is an open-source React Native framework built to help mobile developers get everything they need to create their fully functional applications in just minutes. It comes with tons of ready-to-use features &amp;amp; components, and the samples contain several pages that you can use "as is" or add new blocks from the UI Kit.&lt;br&gt;
&lt;a href="https://github.com/galio-org/galio" rel="nofollow"&gt;➡️ Check out its Github repo&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#4-material-tailwind"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://github.com/creativetimofficial/material-tailwind" rel="nofollow"&gt;4. Material Tailwind&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://github.com/creativetimofficial/material-tailwind"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lDDw7svh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2021/09/material-tailwind.png" alt="material-tailwind"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://material-tailwind.com/?ref=devto" rel="nofollow"&gt;Material Tailwind&lt;/a&gt; is an easy-to-use components library for Tailwind CSS and Material Design. It is open-source and features multiple React components, all written with Tailwind CSS classes and Material Design guidelines. This awesome Tailwind framework also comes with three fully coded sample pages so you can start working instantly.&lt;br&gt;
&lt;a href="https://github.com/creativetimofficial/material-tailwind" rel="nofollow"&gt;➡️ Check out its Github repo&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#5-tailwind-starter-kit"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://github.com/creativetimofficial/material-tailwind" rel="nofollow"&gt;5. Tailwind Starter Kit&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://github.com/creativetimofficial/material-tailwind"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5UjaY8aq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogct.creative-tim.com/blog/content/images/2021/09/tailwind-starter-kit.png" alt="tailwind starter kit"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://material-tailwind.com/?ref=devto" rel="nofollow"&gt;Tailwind Starter Kit&lt;/a&gt; is a beautiful extension for TailwindCSS.  It does not change or add any CSS to the already one from TailwindCSS. It features multiple HTML elements and it comes with dynamic components for ReactJS, Vue, and Angular. Every element that you need in a product comes built-in as a component with different colours.&lt;br&gt;
&lt;a href="https://github.com/creativetimofficial/material-tailwind" rel="nofollow"&gt;➡️ Check out its Github repo&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#final-thoughts"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Final Thoughts&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Did you find your favorite repo so far? Hacktoberfest is open to everyone in the global community. This year, if you make four approved pull requests (PRs) on opted-in projects between October 1-31, you will win an Hacktoberfest T-shirt. All you have to do is &lt;a href="https://hacktoberfest.digitalocean.com/"&gt;sign up here&lt;/a&gt; and start contributing.&lt;/p&gt;

&lt;p&gt;Also, do not forget about our special Creative Tim T-shirts. The winners will be decided by drawing lots on 1st November 2021 and announced through our special &lt;a href="https://twitter.com/CreativeTim/status/1445731588369621003"&gt;Twitter post&lt;/a&gt;. No worries if you do not see the post, the winners will be contacted by email. So join us to have a double chance this year.&lt;/p&gt;

&lt;p&gt;Good luck!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://hacktoberfest.digitalocean.com/" rel="nofollow"&gt;➡️ More info about Hacktoberfest 2021&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Do you have questions regarding our open-source projects/prizes? Share them with us through our &lt;a href="https://twitter.com/CreativeTim/status/1445731588369621003"&gt;Twitter post&lt;/a&gt; ❤️&lt;/p&gt;




</description>
      <category>hacktoberfest</category>
      <category>opensource</category>
      <category>webdev</category>
    </item>
  </channel>
</rss>
