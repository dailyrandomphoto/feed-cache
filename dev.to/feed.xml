<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How to convert a string to an array in javascript?</title>
      <author>hrishikesh1990</author>
      <pubDate>Tue, 01 Jun 2021 11:17:49 +0000</pubDate>
      <link>https://dev.to/hrishikesh1990/how-to-convert-a-string-to-an-array-in-javascript-54g1</link>
      <guid>https://dev.to/hrishikesh1990/how-to-convert-a-string-to-an-array-in-javascript-54g1</guid>
      <description>&lt;p&gt;In this short tutorial, we look at how to convert a string into an array of characters using javascript. We also look at a few examples and caveats.&lt;/p&gt;

&lt;p&gt;This tutorial is a part of our initiative at &lt;a href="https://flexiple.com/"&gt;Flexiple&lt;/a&gt;, to write short curated tutorials around often used or interesting concepts. However, in case you are here only for the solution use this &lt;a href="#code-amp-explanation"&gt;link&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#table-of-content"&gt;
  &lt;/a&gt;
  Table of Content
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#string-to-array-in-javascript"&gt;String to Array in JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#converting-string-to-array-using-split"&gt;Converting strings to array using split&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#limitations-amp-caveats"&gt;Limitations &amp;amp; Caveats&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#string-to-array-in-javascript"&gt;
  &lt;/a&gt;
  String to Array in JavaScript
&lt;/h2&gt;

&lt;p&gt;Converting strings to arrays in JavaScript is done quite frequently and JavaScript comes with a few handy functions to help achieve this. Initially, the only method used was &lt;code&gt;split&lt;/code&gt; however after the addition of ES6 a few other methods were also introduced that could be used to convert string to array in JavaScript. Although in this tutorial we focus on the &lt;code&gt;split&lt;/code&gt;  the other methods that could be used to convert a string to array in JavaScript are &lt;code&gt;Spread&lt;/code&gt;, &lt;code&gt;Object.assign&lt;/code&gt;, and &lt;code&gt;Array.from&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Once you have understood how strings are converted to array using &lt;code&gt;split&lt;/code&gt; please feel free to explore the other methods as well. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#converting-string-to-array-using-split"&gt;
  &lt;/a&gt;
  Converting string to array using split
&lt;/h2&gt;

&lt;p&gt;As the name suggests, the &lt;code&gt;split()&lt;/code&gt; method is used to split a string into ordered substrings. And once split, the substrings are returned in an array. Using this method we are able to convert strings to arrays in JavaScript. With the use of a delimiter the string is split into substrings, these delimiters could be either a &lt;code&gt;" "&lt;/code&gt; or even a &lt;code&gt;,&lt;/code&gt;. And while converting a string to an array in javascript we are required to pass these values as an argument. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#syntax-of-split"&gt;
  &lt;/a&gt;
  Syntax of split:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;delimiter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;limit&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;here, &lt;code&gt;string&lt;/code&gt; refers to the original string that we are looking to convert.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#parameters"&gt;
  &lt;/a&gt;
  Parameters:
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;delimiter&lt;/code&gt; - Optional, the character to be used to split the string. In case it is left empty the entire character in the string is returned in an array.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;limit&lt;/code&gt; - Optional, an integer value indicating how many times the string needs to be split.    &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#code-amp-explanation"&gt;
  &lt;/a&gt;
  Code &amp;amp; Explanation:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;str1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hire the top 1% freelance developers&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;split_string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;str1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;split_string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;//Output = ["Hire", "the", "top", "1%", "freelance", "developers"]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you could see, we have passed a &lt;code&gt;" "&lt;/code&gt; as the delimiter and an array with elements has been returned. Similarly, changing the delimiter accordingly can help you convert strings to arrays in JavaScript. Let's look at a case where &lt;code&gt;,&lt;/code&gt; is a delimiter.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;str1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;JavaScript,Python,C++,PHP&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;split_string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;str1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;,&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;split_string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;//Output = ["JavaScript", "Python", "C++", "PHP"]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, let's take a look at what happens in case a delimiter is not passed while trying to convert a string to array in JavaScript.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;str1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Freelance Develoeprs&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;split_string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;str1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;split_string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;//Output = ["F", "r", "e", "e", "l", "a", "n", "c", "e", " ", "D", "e", "v", "e", "l", "o", "e", "p", "r", "s"]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And as mentioned above an array with each character of the string is returned. Next, let's take a look at an example using the &lt;code&gt;limit&lt;/code&gt; parameter.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;str1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hire the top 1% freelance developers&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;split_string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;str1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;split_string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;//Output = ["Hire", "the", "top", "1%"]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see, the items after the limit were not split. However, keep in mind that the limit does not refer to the index but rather the 4th occurrence of the delimiter. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#limitations-amp-caveats"&gt;
  &lt;/a&gt;
  Limitations &amp;amp; Caveats
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;While using the split to convert string to array in JavaScript, keep in mind that it only returns an array and that the original string still remains a string.&lt;/li&gt;
&lt;li&gt;If no delimiter is passed the entire string is returned as one element in an array and if an empty string &lt;code&gt;""&lt;/code&gt; is passed, the string splits each character and an array.&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>tutorial</category>
      <category>beginners</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Knapsack Variation</title>
      <author>Santhosh Balasa</author>
      <pubDate>Tue, 01 Jun 2021 11:08:23 +0000</pubDate>
      <link>https://dev.to/sbalasa/knapsack-variation-5d0i</link>
      <guid>https://dev.to/sbalasa/knapsack-variation-5d0i</guid>
      <description>&lt;p&gt;An investor has saved some money and wants to invest in the stock market. There are a number of stocks to choose from, and they want to buy at most 1 share in any company. The total invested cannot exceed the funds available. A friend who is a stock market expert has predicted the value of each stock after 1 year. Determine the maximum profit that can be earned at the end of the year assuming the predictions come true.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;saving = 250
current_value = [175, 133, 109, 201, 97]
future_value = [200, 125, 128, 228, 133]

# This is a 0/1 knapsack based algorithm
t = [[-1 for i in range(1000)] for j in range(saving)] # n x W matrix
def knapsack(w, v, W, n):
    if n == 0 or W == 0:
        return 0
    if t[n][W] != -1:
        return t[n][W]
    if w[n-1] &amp;lt;= W:
        t[n][W] = max(
            v[n-1] + knapsack(w, v, W-w[n-1], n-1),
            knapsack(w, v, W, n-1)
        )
    else:
        t[n][W] = knapsack(w, v, W, n-1)
    return t[n][W]

profits = [0 if j&amp;lt;j else j-i for i, j in zip(current_value, future_value)]
print(knapsack(current_value, profits, saving, len(current_value)))
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>algorithms</category>
    </item>
    <item>
      <title>30+ Free eBooks for all developers</title>
      <author>Pasca Vlad</author>
      <pubDate>Tue, 01 Jun 2021 11:03:03 +0000</pubDate>
      <link>https://dev.to/pascavld/30-free-ebooks-for-all-developers-30pf</link>
      <guid>https://dev.to/pascavld/30-free-ebooks-for-all-developers-30pf</guid>
      <description>&lt;p&gt;&lt;em&gt;If you found value in this thread you will most likely enjoy my tweets too so make sure you follow me on &lt;a href="https://twitter.com/VladPasca5"&gt;Twitter&lt;/a&gt;  for more information about web development and how to improve as a developer. This article was first published on my &lt;a href="https://vladpasca.hashnode.dev/"&gt;Blog&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;A Visual Git Reference - &lt;a href="http://marklodato.github.io/visual-git-guide/index-en.html"&gt;http://marklodato.github.io/visual-git-guide/index-en.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Conversational Git - &lt;a href="http://blog.anvard.org/conversational-git/"&gt;http://blog.anvard.org/conversational-git/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Introduction to Git and Github eBook - &lt;a href="https://github.com/bobbyiliev/introduction-to-git-and-github-ebook"&gt;https://github.com/bobbyiliev/introduction-to-git-and-github-ebook&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A beginner's guide to HTML&amp;amp;CSS - &lt;a href="http://learn.shayhowe.com/html-css/"&gt;http://learn.shayhowe.com/html-css/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Dive into HTML5 - &lt;a href="http://diveinto.html5doctor.com/"&gt;http://diveinto.html5doctor.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Learn CSS Layout - &lt;a href="http://learnlayout.com/"&gt;http://learnlayout.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Magic of CSS - &lt;a href="https://adamschwartz.co/magic-of-css/"&gt;https://adamschwartz.co/magic-of-css/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Basic JavaScript for impatient programmer - &lt;a href="http://www.2ality.com/2013/06/basic-javascript.html"&gt;http://www.2ality.com/2013/06/basic-javascript.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Exploring ES6 - &lt;a href="http://exploringjs.com/es6/"&gt;http://exploringjs.com/es6/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You don't know JS - &lt;a href="https://github.com/getify/You-Dont-Know-JS"&gt;https://github.com/getify/You-Dont-Know-JS&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Oh my JS - &lt;a href="https://web.archive.org/web/20150317231950/https://leanpub.com/ohmyjs/read"&gt;https://web.archive.org/web/20150317231950/https://leanpub.com/ohmyjs/read&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Angular.js Guide - &lt;a href="https://docs.angularjs.org/guide/"&gt;https://docs.angularjs.org/guide/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Introduction to Node.js - &lt;a href="https://nodejs.dev/learn"&gt;https://nodejs.dev/learn&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Full-Stack React Projects - &lt;a href="https://www.packtpub.com/free-ebooks/full-stack-react-projects"&gt;https://www.packtpub.com/free-ebooks/full-stack-react-projects&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hacking with React - &lt;a href="http://www.hackingwithreact.com/"&gt;http://www.hackingwithreact.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Programming React Native - &lt;a href="https://leanpub.com/programming-react-native"&gt;https://leanpub.com/programming-react-native&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;30 Days of Vue - &lt;a href="https://www.newline.co/30-days-of-vue"&gt;https://www.newline.co/30-days-of-vue&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;MySQL - &lt;a href="http://www.techotopia.com/index.php/MySQL_Essentials"&gt;http://www.techotopia.com/index.php/MySQL_Essentials&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Clean Code PHP - &lt;a href="https://github.com/jupeter/clean-code-php"&gt;https://github.com/jupeter/clean-code-php&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;PHP Best Practices - &lt;a href="https://phpbestpractices.org/"&gt;https://phpbestpractices.org/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Learn PowerShell in Y Minutes - &lt;a href="https://learnxinyminutes.com/docs/powershell/"&gt;https://learnxinyminutes.com/docs/powershell/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;100 Page Python Intro - &lt;a href="https://learnbyexample.github.io/100_page_python_intro/"&gt;https://learnbyexample.github.io/100_page_python_intro/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A Beginner's Python Tutorial - &lt;a href="https://en.wikibooks.org/wiki/A_Beginner%27s_Python_Tutorial"&gt;https://en.wikibooks.org/wiki/A_Beginner%27s_Python_Tutorial&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;CodeCademy Python - &lt;a href="https://www.codecademy.com/learn/python"&gt;https://www.codecademy.com/learn/python&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Effective Django - &lt;a href="https://web.archive.org/web/20181130092020/http://www.effectivedjango.com/"&gt;https://web.archive.org/web/20181130092020/http://www.effectivedjango.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;SQK For Web Nerds - &lt;a href="http://philip.greenspun.com/sql/"&gt;http://philip.greenspun.com/sql/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Learn TypeScript in Y Minutes - &lt;a href="https://learnxinyminutes.com/docs/typescript/"&gt;https://learnxinyminutes.com/docs/typescript/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A byte of vim - &lt;a href="http://www.swaroopch.com/notes/vim/"&gt;http://www.swaroopch.com/notes/vim/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Explore Flask - &lt;a href="https://exploreflask.com/"&gt;https://exploreflask.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Learn Markdown - &lt;a href="https://www.gitbook.com/book/gitbookio/markdown/details"&gt;https://www.gitbook.com/book/gitbookio/markdown/details&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Getting Started with Ubuntu - &lt;a href="http://ubuntu-manual.org/"&gt;http://ubuntu-manual.org/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;3D Programming in Java - &lt;a href="http://www.mat.uniroma2.it/%7Epicard/SMC/didattica/materiali_did/Java/Java_3D/Java_3D_Programming.pdf"&gt;http://www.mat.uniroma2.it/~picard/SMC/didattica/materiali_did/Java/Java_3D/Java_3D_Programming.pdf&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;IoT in five days - &lt;a href="https://github.com/marcozennaro/IPv6-WSN-book/tree/master/Releases"&gt;https://github.com/marcozennaro/IPv6-WSN-book/tree/master/Releases&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Btw, did you know that I also have a free eBook?&lt;/p&gt;

&lt;p&gt;It contains a Roadmap for Web Developers with free resources and a guide on how to grow your Twitter audience&lt;/p&gt;

&lt;p&gt;You can get it from here for FREE - &lt;a href="https://gumroad.com/l/2-free-sections"&gt;https://gumroad.com/l/2-free-sections&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-end"&gt;
  &lt;/a&gt;
  The end
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;I hope found this useful and if you did please let me know. If you have any question feel free to DM me on  &lt;a href="https://twitter.com/VladPasca5"&gt;Twitter&lt;/a&gt; .&lt;/em&gt;&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>webdev</category>
      <category>programming</category>
      <category>javascript</category>
    </item>
    <item>
      <title>5 mini-projects to sharpen your frontend development skills!</title>
      <author>Yogini Bende</author>
      <pubDate>Tue, 01 Jun 2021 10:47:33 +0000</pubDate>
      <link>https://dev.to/ms_yogii/5-mini-projects-to-sharpen-your-frontend-development-skills-5ghh</link>
      <guid>https://dev.to/ms_yogii/5-mini-projects-to-sharpen-your-frontend-development-skills-5ghh</guid>
      <description>&lt;p&gt;Hi folks, &lt;/p&gt;

&lt;p&gt;Frontend development is continuously evolving  with new technologies and frameworks. It is always said that the best way to master a new framework is by building something in it while learning. Though we all know this, the question which remains constant is, what to build?&lt;/p&gt;

&lt;p&gt;Most tutorials start with either a to-do app or a counter. These are the best examples to cover the basics while learning, but they are also very repetitive. So let’s see some fun and real life relevant projects to practice any frontend framework. In this article, I have shared 5 fun projects which are inspired by real life use-cases to solidify your frontend skills. &lt;/p&gt;

&lt;p&gt;Most of these projects require different components to build. But they are tricky enough to make you understand different features and their implementation patterns of the framework. &lt;/p&gt;

&lt;p&gt;You can build these projects in any framework. I have also created a &lt;a href="https://github.com/ms-yogi/frontendQuickbytes"&gt;github repository&lt;/a&gt; to store all these project ideas. If you like these challenges, would appreciate getting a star to this repository 🌟. You can also contribute to these challenge lists or share your solutions. We can create a solutions section too for those links!&lt;/p&gt;

&lt;p&gt;Here is the list of all challenges -&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="#smart-textarea"&gt;&lt;strong&gt;Smart Textarea&lt;/strong&gt;: Twitter like textarea with character count&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#dropdown-component"&gt;&lt;strong&gt;Dropdown Component with select/multiselect feature&lt;/strong&gt; - Similar to React Select&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#autosuggest-input"&gt;&lt;strong&gt;Autosuggest Input&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#manage-cookies-pop-up"&gt;&lt;strong&gt;Manage cookies pop-up&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#progress-bar"&gt;&lt;strong&gt;Progress Bar&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#smart-textarea"&gt;
  &lt;/a&gt;
  Smart Textarea
&lt;/h2&gt;

&lt;p&gt;Twitter like textarea with character count&lt;/p&gt;

&lt;p&gt;If you have ever used twitter, you must know your tweet will have a character count limit of 280 characters and once you cross that character limit twitter starts marking your characters with red background and you will see a character count going in a negative value! That's it, that is the task. You can build the same textarea with a customised character count limit.&lt;/p&gt;

&lt;p&gt;Features to include in it -&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create a simple textarea and add necessary styling.&lt;/li&gt;
&lt;li&gt;There should be a customisable character count limit to your textarea.&lt;/li&gt;
&lt;li&gt;Show this limit below the textarea. &lt;em&gt;Improvement - You can add progress circle showing the count.&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;If characters goes beyond the limit, highlight them, decrease the count to negative value and disable the submit button.&lt;/li&gt;
&lt;li&gt;You can also add warnings when only the 10% character limit is remaining.&lt;/li&gt;
&lt;li&gt;If a user is adding symbols such as &lt;code&gt;@&lt;/code&gt; or &lt;code&gt;#&lt;/code&gt; made them as a link with relevant href.&lt;/li&gt;
&lt;li&gt;After a submit button, display that paragraph.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#dropdown-component"&gt;
  &lt;/a&gt;
  Dropdown Component
&lt;/h2&gt;

&lt;p&gt;A component with select/multi select feature, similar to &lt;a href="https://react-select.com/home"&gt;React Select&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Dropdowns are part of most applications and they are smart to implement components. &lt;a href="https://react-select.com/home"&gt;React Select&lt;/a&gt; is one of those libraries which I heavily trust on for any type of dropdown I need. But while learning if we can create a simple dropdown component, it will have so many benefits over going for the library.&lt;/p&gt;

&lt;p&gt;Features to include in it -&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Dropdown component, where list will be open on click of dropdown.&lt;/li&gt;
&lt;li&gt;This list should get closed on clicking the dropdown again, on pressing &lt;code&gt;esc&lt;/code&gt; key, on clicking outside and after selecting any element.&lt;/li&gt;
&lt;li&gt;Enable multi select option as well.&lt;/li&gt;
&lt;li&gt;Search function on type will be a bonus.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#autosuggest-input"&gt;
  &lt;/a&gt;
  Autosuggest Input
&lt;/h2&gt;

&lt;p&gt;We all have tried Google search input. It's pretty cool how it shows you some suggestions based on your typing. We need to create exactly the same. Consider a search location feature, where you are adding names to your city and country. Implement a search feature with a list of cities and countries and show user options based on what the user is typing.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;This is one of the most frequently asked questions in the interviews. So that is a bonus point.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Features to include in it -&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;A search input with auto suggest option.&lt;/li&gt;
&lt;li&gt;Enable debouncing feature to save excess api calls.&lt;/li&gt;
&lt;li&gt;Use any api or json list to show suggestions&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#manage-cookies-popup"&gt;
  &lt;/a&gt;
  Manage cookies pop-up
&lt;/h2&gt;

&lt;p&gt;Ever opened a website and saw an annoying pop-up asking to accept cookies or manage your preferences? We need to build that! A custom pop-up component for creating and managing cookies in an application.&lt;/p&gt;

&lt;p&gt;Features to include in it -&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;After loading a page, a pop-up asking to accept cookies should show up.&lt;/li&gt;
&lt;li&gt;Users should have preferences on accepting all/some or no cookies.&lt;/li&gt;
&lt;li&gt;Same preference should work in your app.&lt;/li&gt;
&lt;li&gt;After 10-15 seconds the pop-up should become hidden with a default state.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#progress-bar"&gt;
  &lt;/a&gt;
  Progress Bar
&lt;/h2&gt;

&lt;p&gt;Progress bars showing progress of something are commonly seen. Here you can develop 3 types of progress bar&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Progress bar showing page scroll progress, at the top most position of your page.&lt;/li&gt;
&lt;li&gt;Progress bar showing progress as per value passed in percentage.&lt;/li&gt;
&lt;li&gt;Circular variant of same progress bar.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;That’s it for now. Do not forget to check the &lt;a href="https://github.com/ms-yogi/frontendQuickbytes"&gt;github repo&lt;/a&gt; for the same, as I will be adding more challenges to this list. If you have more such ideas, please create a pull request for the same or if you have created any solution for this, I will link that too, below the challenge. &lt;/p&gt;

&lt;p&gt;Thank you so much for reading this article. Let me know your thoughts on this and you can follow me on &lt;a href="https://twitter.com/ms_yogii"&gt;twitter&lt;/a&gt; for more daily updates 😇&lt;/p&gt;

&lt;p&gt;Happy coding and keep learning 🙌&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>let, var &amp; const explained.</title>
      <author>Shreyansh Sinha</author>
      <pubDate>Tue, 01 Jun 2021 10:45:01 +0000</pubDate>
      <link>https://dev.to/shreyanshsinha/let-var-const-explained-1jf0</link>
      <guid>https://dev.to/shreyanshsinha/let-var-const-explained-1jf0</guid>
      <description>&lt;p&gt;&lt;strong&gt;Scope of var&lt;/strong&gt;&lt;br&gt;
Scope essentially means where these variables are available for use. var declarations are globally scoped or function/locally scoped.&lt;/p&gt;

&lt;p&gt;The scope is global when a var variable is declared outside a function. This means that any variable that is declared with var outside a function block is available for use in the whole window. &lt;/p&gt;

&lt;p&gt;var is function scoped when it is declared within a function. This means that it is available and can be accessed only within that function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var variable1 = "outside";
function func() {
    var variable2 = "inside";
}
console.log(variable1) //correct
console.log(variable2) //error
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here variable1 has global scope while variable2 has local/function scope. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;var variables can be re-declared and re-updated.&lt;/strong&gt;&lt;br&gt;
Eg:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var variable1 = "first"; //correct
var variable1 = "second"; //correct
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var variable1 = "initial"; //correct
variable1 = "final"; //correct
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Hoisting of var&lt;/strong&gt;&lt;br&gt;
Hoisting is a JavaScript mechanism where variables and function declarations are moved to the top of their scope before code execution.&lt;/p&gt;

&lt;p&gt;Eg:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;console.log(name)
var name = "shreyansh";
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;would be interpreted as&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var name
console.log(name) //name is undefined
name = "shreyansh"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Another Example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;getName();
console.log(x);
var x = 7;
function getName () {
    console.log('shreyansh');
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;is actually interpreted as&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function getName() {
    console.log('shreyansh');
}
var x;
getName(); // shreyansh 
console.log(x); // undefined
x = 7; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;var variables are hoisted to the top of their scope and initialized with a value of undefined.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;let&lt;/strong&gt;&lt;br&gt;
Let is block scoped. A block is a chunk of code bounded by {}. A block lives in curly braces. Anything within curly braces is a block.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;   let greeting = "Hello, myself Shreyansh";
   let value = 4;

   if (value &amp;gt; 3) {
        let hello = "hello everyone";
        console.log(hello);// "hello everyone"
    }
   console.log(hello) // hello is not defined
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Let can be updated but not redeclared.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Correct:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let greeting = "say Hi";
greeting = "say Hello instead";
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Incorrect:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let greeting = "say Hi";
let greeting = "say Hello instead"; // error: Identifier 'greeting' has already been declared.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;However, if the same variable is defined in different scopes, there will be no error:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let greeting = "say Hi";
       if (true) {
           let greeting = "say Hello instead";
           console.log(greeting); // "say Hello instead"
       }
console.log(greeting); // "say Hi"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Why is there no error? &lt;br&gt;
This is because both instances are treated as different variables since they have different scopes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Hoisting of let&lt;/strong&gt;&lt;br&gt;
Just like var, let declarations are hoisted to the top. Unlike var which is initialized as undefined, the let keyword is not initialized. So if you try to use a let variable before its declaration, you'll get a Reference Error.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;const&lt;/strong&gt;&lt;br&gt;
Like let declarations, const declarations can only be accessed within the block they were declared.&lt;br&gt;
&lt;strong&gt;const cannot be updated or re-declared.&lt;/strong&gt;&lt;br&gt;
This means that the value of a variable declared with const remains the same within its scope. It cannot be updated or re-declared. &lt;br&gt;
However, this is not true for objects. While a const object cannot be updated, the properties of these objects can be updated.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const greeting = {
    message: "say Hi",
    times: 4
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Wrong&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;greeting = {
    words: "Hello",
    number: "five"
} // error:  Assignment to constant variable.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Correct&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;greeting.message = "say Hello instead";
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Hoisting of const&lt;/strong&gt;&lt;br&gt;
Just like let, const declarations are hoisted to the top but are not initialized.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>es6</category>
    </item>
    <item>
      <title>Mobile App Monetization: An Essential Guide</title>
      <author>Krowser Web Services </author>
      <pubDate>Tue, 01 Jun 2021 10:40:59 +0000</pubDate>
      <link>https://dev.to/krowser/mobile-app-monetization-an-essential-guide-31f5</link>
      <guid>https://dev.to/krowser/mobile-app-monetization-an-essential-guide-31f5</guid>
      <description>&lt;p&gt;Mobile app monetization is a must for most of today’s mobile apps. Given the sheer size of the mobile app market, mobile app monetization has almost become a science in its own right with various tactics you can use not just to secure visibility to your mobile apps, but also to make money out of them. Unfortunately, due to somewhat clogged market, mobile app monetization has become very hard and you will need a lot of patience, diligence, knowledge and creativity to create an actionable monetization model, one that brings revenue both long and short term.&lt;/p&gt;

&lt;p&gt;During the last 7 months, we have worked with many people who were both successful and unsuccessful in monetizing their mobile apps. Being a digital marketer myself, mobile app monetization is one of the areas that shines the most when it comes to various marketing tactics. Although this guide can’t cover all the mobile app monetization models out there (like I said, it’s incredibly complex), it will give you enough insights to get you going so you can hopefully get the most out of your mobile apps.&lt;/p&gt;

&lt;p&gt;In it you’ll learn:&lt;br&gt;
The importance of planning for mobile app monetization before development.&lt;br&gt;
What the most popular mobile app monetization strategies are and how to put them to use.&lt;br&gt;
How to break the barrier and think outside the box when it comes to mobile apps and games monetization.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Please feel free to leave questions in the comments section.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--REsKK-_d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s1g8befgj6hyjg53e11b.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--REsKK-_d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s1g8befgj6hyjg53e11b.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;WHAT IS MOBILE APP MONETIZATION?&lt;/strong&gt;&lt;br&gt;
Mobile app monetization is the process of finding a suitable and sustainable bankable model that will help you earn money out of the mobile app you developed.&lt;/p&gt;

&lt;p&gt;Unless you have been living under a rock for past couple of years, you must have noticed that mobile app development has become a serious business. Some mobile developers have become rich overnight and we all know what that means. When something can turn you rich overnight, everyone wants to do it. This has quickly lead to market oversaturation.&lt;/p&gt;

&lt;p&gt;Enormous amounts of money that some apps have brought to the table can trick inexperienced developers into thinking that mobile app monetization is an easy task, but it’s not. Like I said numerous times on this blog, developing something isn’t where the work stops and modern developers should think like business developers. This is the 21st century software market we’re talking about.&lt;/p&gt;

&lt;p&gt;Mobile app monetization is a difficult task and you should take it seriously if you want to achieve desired results. Even then, nobody can guarantee you success.&lt;/p&gt;

&lt;p&gt;Mobile app monetization assumes that you have a clear understanding of what your app currently is and what you want it to be.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RqwaTb2L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/idgxo3n2kt3f2hfnxwyb.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RqwaTb2L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/idgxo3n2kt3f2hfnxwyb.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;PLANNING BEFORE MONETIZATION&lt;/strong&gt;&lt;br&gt;
I hate it when I have to state the obvious, as everyone will tell you to plan beforehand, but this is something that can’t be stated enough. You need to have a plan.&lt;/p&gt;

&lt;p&gt;Unfortunately, a lot of people tend to overlook and underestimate the importance of planning. Planning your mobile app monetization should be of utmost priority to you and it should be as detailed as possible. Actually, the plan itself should be so good that you could even monetize the plan itself if you wanted to.&lt;/p&gt;

&lt;p&gt;A lot of developers fall into the trap of building first and monetizing after. This is problematic as it undermines the importance of mobile app monetization planning.&lt;/p&gt;

&lt;p&gt;It is important that you develop your mobile app monetization plan even before you actually start developing your app or in the early stages of development. A lot of your app’s core features will depend on the monetization plan and vice versa so it’s important that you have that figured out.&lt;/p&gt;

&lt;p&gt;I know that a lot of developers display certain disdain for this sequence of doing things, thinking that it puts a lot of restraint upon them. I call this bullshit. The fact that you’re trying to make money out of it means that you should start thinking like a business developer and that includes the dreaded marketing and planning. Mobile app monetization plan means that you should:&lt;/p&gt;

&lt;p&gt;Know your audience. What does my app do? What purpose does it serve? Does anyone need this? Why would anyone spend their time using my app? How old are they? What’s their sex? Age?&lt;br&gt;
Know your competition. How unique is my app? Does my app make a difference? What is the value I am adding and the others aren’t?&lt;br&gt;
Be honest to yourself. Is my app really good? Why would anyone spend money on it if there are free alternatives? Why would anyone spend their money on it at all?&lt;br&gt;
Having a plan forces you to look at the development process from another perspective.&lt;/p&gt;

&lt;p&gt;It helps you decide how your app should look like and how it should function. Knowing your audience will help you adapt your monetization model to their specific profile, their wants and their needs.&lt;/p&gt;

&lt;p&gt;Defining your target audience not only helps you develop the mobile app monetization strategy but it also allows you to market it accordingly. Users not only spend their money but also.&lt;/p&gt;

&lt;p&gt;Users influence others. They can become ambassadors of your brand.&lt;br&gt;
They can amplify your social media presence.&lt;br&gt;
You will have to model your mobile app monetization strategy according to your target audience. The difference in tolerance threshold when it comes to ads varies greatly across various demographic groups. For example, using ads is ok if you are developing a casual app aimed at teenagers but common reason alone tells you that this isn’t the brightest idea to have glittery ads flying all across your serious B2B app. Knowing your audience and your app/game will help you make easier development decisions and, ultimately, it should make it easier for you when you face the hardest question of all – should you go free or paid?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TnL8-TUk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g5h0ureqdnyo1wrajcks.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TnL8-TUk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g5h0ureqdnyo1wrajcks.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;PAID VS. FREE&lt;/strong&gt;&lt;br&gt;
Deciding whether you should go free or paid is probably the biggest mobile app monetization decision you will face. It’s a decision that will have profound impact on how the app behaves on the market and it influences how your app or game will behave in terms of available features.&lt;/p&gt;

&lt;p&gt;As I mentioned in the previous chapter, this should be an integral part of your mobile app monetization strategy and needs to be decided upon even before you really start developing your app/game. There are two reasons to do this:&lt;/p&gt;

&lt;p&gt;Choosing the model beforehand will help you adapt your app/game to the needs of the model of your choosing.&lt;br&gt;
The mobile app monetization model you choose will have tremendous impact on the core features of your app/game and will dictate the way it’s used or played and developed.&lt;br&gt;
Make your life easier and figure out the mobile app monetization strategy on time. It’s a two-way relationship that shows just how important preparation is.&lt;/p&gt;

&lt;p&gt;Each one of these model has its strengths and weaknesses and the sheer amount of available mobile app monetization models just makes the decision harder. Not only is every model fundamentally different in terms of how it’s used, not every model fits every mobile app or game. If you want to get the most out of your mobile app or game, you will have to use the right monetization model for the right kind of product.&lt;/p&gt;

&lt;p&gt;Disclaimer: There are no strict rules regarding mobile app monetization as every app or game is unique and draws unique crowd with unique preferences and unique consumer behavior. Most of monetization strategies are purely anecdotal and you should make the decision with a grain of salt. You are welcome to experiment and see what works for you. My oppinions laid out in this article are based on the analysis of hundreds of various mobile apps and games, and while some of the strategies might not work for you, they are strategies that work for most people most of the time.&lt;/p&gt;

&lt;p&gt;Luckily for you, this decision isn’t hard as it used to be. The sole reason – everyone is going for the free-to-use business model these days. Let’s look at the numbers. As of this day, according to appshopper, out of 200 top grossing iPhone apps, only eight of them are paid apps. Among those seven apps, only two crack the top100 list and only Minecraft: Pocket Edition barely cracks the top20.&lt;/p&gt;

&lt;p&gt;The fact that most of apps and games nowadays are free to use doesn’t mean that you should automatically opt for the free model. True, it is the most popular mobile app monetization model at the moment and it will probably remain the most popular for a very long time, but paid model will not go down without a fight. It’s still a go-to model for many apps and games, especially high quality ones. No matter how much momentum the free-to-use model gains, there are still thousands and thousands of paid apps and games, some of which are making serious money. Don’t be fooled by various top100/200/500 ladders. While it’s hard for paid apps and games to enter that company these days, it’s hard to enter that company in the first place, even for free apps. This exclusive company shouldn’t be discouraging. It should inspire you to join it. Proceed cautiously and be smart, picking the model that works the best for you.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--28whw90V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z43wknbv080ufl0qolhh.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--28whw90V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z43wknbv080ufl0qolhh.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;CHOOSING PAID&lt;/strong&gt;&lt;br&gt;
As I already mentioned, paid apps aren’t the go to model nowadays. There are various reasons why this is so. If you look at your average user, the lifespan of average app or game is very short. They often install numerous apps and games at once, give it a shot, get bored quickly and delete them. The mobile app market has become cluttered with thousands and thousands of apps that make it hard for average developer to monetize a paid mobile app.&lt;/p&gt;

&lt;p&gt;Unless your name is PewDiePie, the chances of you cracking the top 20 spot of Top Grossing Android Apps are rather slim.&lt;br&gt;
Unless your name is PewDiePie, the chances of you cracking the top 20 spot of Top Grossing Android Apps are rather slim. // Source: Google play&lt;/p&gt;

&lt;p&gt;Simply put – users just don’t want to pay money for something that they will use casually for a day or two and delete it afterwards, not unless they get really high levels of utility from it. While most of authors tend to call the paid model dead, I disagree with this statement as there are numerous apps that prove otherwise. It is true that this monetization model isn’t as viable as it used to be, but it’s too early to call it dead.&lt;/p&gt;

&lt;p&gt;The real question you should be asking yourself here isn’t “is the paid model dead?” but “is the paid model the best model I can use to monetize my mobile app or game?”. The answer, as always, is – it depends.&lt;/p&gt;

&lt;p&gt;If you ask me, there are two questions one must have in mind when considering paid mobile app monetization model.&lt;/p&gt;

&lt;p&gt;Is my mobile app providing users with enough utility?&lt;br&gt;
Am I providing the users with a new and innovative concept that is fun and/or engaging enough that they would be willing to pay for it?&lt;br&gt;
If the answer to at least one of these two questions is YES, it would be wise for you consider the paid model. It doesn’t mean that you should use that model, but you should at least consider it.&lt;/p&gt;

&lt;p&gt;First of all, let’s consider the pros of this model in relation to free model:&lt;/p&gt;

&lt;p&gt;The biggest advantage of this model is direct revenue. No unnecessary complications. You develop an app, put a price tag on it and reap the fruits of your labor. Financially, this model is very predictable, making it easy to calculate the time it takes to cover the expenses.&lt;br&gt;
The perceived value of your mobile app or game is higher. You aren’t bothering the users with ads and various “pay to advance” models. It’s all there. Pay and use the without distractions. If it’s a mobile game we are talking about, especially a multiplayer based one – you don’t have to deal with users bitching about “OMG, this game is so P2W, the paid crystals are so op, OMG”.&lt;br&gt;
The more popular the free model becomes, the less of a paid market competition you have making it easier for you to improve your ranks among other paid apps or games.&lt;br&gt;
Bear in mind that going paid means you’ll have to develop a quality product. The quality of your product will be a judged a lot more than the quality of a free mobile app or game. After all, the users paid for finished product so it’s perfectly normal that they expect it to look and behave like it’s finished. Their patience threshold concerning various bugs is inversely proportional to the amount of money they paid for the app or game. If you’re not going to make absolutely sure that the quality matches user standards, don’t even think about going paid.&lt;/p&gt;

&lt;p&gt;Now, let’s see what it takes to successfully monetize a paid app.&lt;/p&gt;

&lt;p&gt;First, let’s take a look at eight paid apps that somehow crawled their way into the top200 and see what do we have there:&lt;/p&gt;

&lt;p&gt;Minecraft: Pocket Edition ($6.99) – You know what this is&lt;br&gt;
Purify Blocker ($3.99) – Most popular premium blocker for Safari on iOS&lt;br&gt;
Facetune ($3.99) – Portrait &amp;amp;selfie photo editor&lt;br&gt;
Bloons TD 5 ($2.99) – Tower defense game&lt;br&gt;
Trivia Crack (Ad Free) ($2.99) – Ad free version of a popular quiz game&lt;br&gt;
GrindrXtra ($.99) – LGBT social network&lt;br&gt;
Crystal ($.99) – Content blocker for iPhone &amp;amp;iPad&lt;br&gt;
Plague Inc.($.99) – Strategy and simulation game&lt;br&gt;
True, this is a small sample, but looking at 200 top grossing PAID apps enables us to put things in perspective and see the bigger picture. Here are some of my conclusions concerning monetization for those who wish to pursue paid model.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uNc5Rkpq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pj92wjl727wavhuiyn4g.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uNc5Rkpq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pj92wjl727wavhuiyn4g.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;PAID IS GREAT FOR MOBILE GAMES&lt;/strong&gt;&lt;br&gt;
Paid model goes relatively well with mobile games, especially mobile ports of big name PC or console games. It is a good monetization option to consider if you are developing a high quality mobile game that provides players with quality, bug-free, gameplay and content that most of other mobile games can’t provide.&lt;/p&gt;

&lt;p&gt;This is a suitable monetization mode for serious games, or just for games that offer an innovative concept to the player. Since developing such games usually takes a lot more time, effort and resources, going paid is a good way to recoup the losses. It’s not a good monetization strategy to use with casual games as they are called “casual” for a reason and an average casual player isn’t really too keen on paying for a game that will most likely be deleted in two days.&lt;/p&gt;

&lt;p&gt;Also, various free to play monetization tactics are better when it comes to casual games, but I’ll talk about that later. It enables ad-free, complete gameplay that is mandatory for a game that takes itself seriously. Imagine playing Silent Hill and having ads popping out every couple of minutes. That wouldn’t be so fun and scary, don’t you agree? If the game you are developing is being played just for fun or for a quick time killing, having paid content and/or ads isn’t so bothersome for the casual player. Again, as I mentioned before, this is a decision you will have to make by yourself, but if you are looking to develop an immersive, quality game that offers exceptional GAMING experience, going paid seems like a good decision.&lt;/p&gt;

&lt;p&gt;Top grossing paid games for Android. Note how most of these games offer extended and high quality gameplay with various features not found in free mobile games.&lt;br&gt;
Top grossing paid games for Android. Note how most of these games offer extended and high quality gameplay with various features not found in free mobile games. // Source: Google play&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Hn7k5D2w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mrhv5lnrv2lbauoy4hww.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Hn7k5D2w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mrhv5lnrv2lbauoy4hww.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;TEST, TEST, TEST! TALK, TALK, TALK!&lt;/strong&gt;&lt;br&gt;
In case you decide going paid, absolutely make sure your app works exceptionally well and is well tested, as there is no room for errors and bugs.&lt;/p&gt;

&lt;p&gt;Compared to free apps and games, paid ones are much more review-dependent, meaning that your paid app or game will be judged by the reviews more than apps and games that are free to use. Make sure do everything it takes to get the best possible reviews. Also, make sure to talk to your audience. Answer their complaints. Acknowledge their praises. Create a culture where the users know that you are listening to them and that you are willing to admit and correct your mistakes.&lt;/p&gt;

&lt;p&gt;If someone downloads a free app and finds it shitty, he has relatively low incentive to write a review because it was free so who cares, right. If someone pays $15 for an app and finds it shitty, expect a shitstorm of biblical proportions to be heading your way. Free app developers do get second chances. Paid app developers don’t. Remember – the users are ambassadors of your app/game. Treat them that way.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Oqq7VM7U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ch4qfwpi0gzba6o7ppr5.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Oqq7VM7U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ch4qfwpi0gzba6o7ppr5.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;PUT A LOT OF EFFORT IN PROMOTION&lt;/strong&gt;&lt;br&gt;
Make sure to provide them with as much valuable material as possible. Include attractive screenshots, vivid descriptions, gameplay footages, etc. If you expect users to pay in advance, at least make their decision easier. Work on your promotion. You should provide users with as much relevant and valuable information as possible.&lt;/p&gt;

&lt;p&gt;Put that limited amount of space to best use for promotion. Not a lot of users decide to spend money on apps and games (compared to free variations) and they will make sure to gather as much information as they can. Go out there and help them.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NPv8etwg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nzcr4r4oqnvyhh89bsvs.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NPv8etwg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nzcr4r4oqnvyhh89bsvs.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;MAKE SURE THAT PAID MODEL IS ABSOLUTELY THE BEST MODEL IF YOU’RE DEVELOPING A SOCIAL APP&lt;/strong&gt;&lt;br&gt;
Be careful when developing social apps as the paid app strategy isn’t the best you can use when dealing with this kind of apps. It does work pretty well with social apps that aim at specific target niche group, but that’s the only case of paid model being good model for paid apps that I can think of.&lt;/p&gt;

&lt;p&gt;Let’s say you are developing an app aimed for Harley Davidson owners. Yeah, sure, you could charge for that. Maybe you are developing an app that only rich kids or fishermen will use. Charging for the app would be a good idea. You are targeting a specific group here – a group that expects a good value for money so, as always, make sure to provide them with specialized and relevant content in case you decide to go paid.&lt;/p&gt;

&lt;p&gt;Specific target groups expect specific utility from your social app so, in order to make them pay, use that to your advantage and include features that other social apps don’t have. If there is a reason for them to pay for a social app that they will benefit from (professionally, for example), they will, trust me. Let’s say you are developing a social app targeting hunters – for a group that gives big amount of cash for various tools that make hunting easier and more enjoyable, paying $3 for a social app that connects them with other hunters and provides them with relevant content is a bargain. Specific target groups that benefit greatly from specific features of your apps will pay, but bear in mind that most of social apps rely on monetizing large numbers of users. So, if your goal is to develop new Instagram – don’t even think about going paid. Choose free instead.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--olWnPLAU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b8opvepymeqivjr3fjch.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--olWnPLAU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b8opvepymeqivjr3fjch.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;B2B APPS AND PAID MODEL FIT LIKE A GLOVE&lt;/strong&gt;&lt;br&gt;
If you are developing some kind of a B2B app, paid is usually the way to go, especially if it’s a niche B2B app we’re talking about. Almost all (if not all) of its users will use it ease or improve their own business and they won’t be counting every penny nor do they have time or patience to fuck around with various ads and payment options. Keep it simple, keep it useful and keep it relevant.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--umGgisTV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ibuvwq2xm39czw0tegae.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--umGgisTV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ibuvwq2xm39czw0tegae.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;PAID MODEL USUALLY ISN’T THE BEST FOR BEGINNERS&lt;/strong&gt;&lt;br&gt;
If you are just starting out, paid model probably isn’t the best for you as modern users are suspicious about new developers, on top of being reluctant to spend money. That being said, if you are sure that your app or game has potential and is going to be high in quality, feel free to go paid, but for the most part, new and inexperienced developers should make their apps and games free and pursue some other mobile app monetization options. Once your name gains some weight to it, it will be easier for you to go paid as your name will start selling itself.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f7YqXCtz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ibum5vz0x3zs5omw563d.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f7YqXCtz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ibum5vz0x3zs5omw563d.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;CHOOSING FREE&lt;/strong&gt;&lt;br&gt;
As I already discussed, going free is the go-to mobile app monetization model for most developers. In a world where, well, everyone has a smartphone, apps have become a sort of fast moving consumer goods so it’s not surprising that most of the users just don’t want to paid for something that they use casually or something that can easily be replaced with a free alternative.&lt;/p&gt;

&lt;p&gt;Consider this – why would anyone want to pay for your flashlight application, even if it costs just 1 cent, if they can get one for free? What? Your flashlight app is ad-free? Don’t make me laugh.&lt;/p&gt;

&lt;p&gt;See, as I mentioned before, it’s all about the kind of content you’re offering and the amount of utility users are getting from it. If the app they are downloading is used for fun, like an app that mimics the sounds of guns being fired, the users aren’t likely to be bothered by various ads. The same goes for ultra casual games which they play just to kill some time.&lt;/p&gt;

&lt;p&gt;If you plan on developing a casual Tetris rip off, monetizing it by putting a price tag on it isn’t the best idea. Sure, you could get a download or two, but the majority of users don’t get the level of utility needed to make them pay, nor do they seem to be bothered by ads or paid content in games such as this. As a general rule of thumb – if you are aiming at casual, heterogeneous, userbase – go free.&lt;/p&gt;

&lt;p&gt;Now that we have that figured out, let’s see what “going free” actually means.&lt;/p&gt;

&lt;p&gt;Going free is one of the two most popular mobile app monetization models out there. First model, the paid model, is a natural model of monetizing stuff and has been discussed in the previous chapter. Rather paradoxically, the most popular way of making money out of mobile apps and games is to make them free. Going free means to offer your app or game for free and then use certain strategies to make money out of it. Here is where the fun starts. The sheer amount of variations can sometimes be overwhelming, but I’ll try to cover the basic and most popular ones.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EixeIsTH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bea5cfed7d914dvvwpik.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EixeIsTH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bea5cfed7d914dvvwpik.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;FREEMIUM&lt;/strong&gt;&lt;br&gt;
Freemium mobile app monetization model is based on offering apps and games for free, but charging for certain features. Users have access to basic app’s and game’s features but in order to access all of the features, they have to pay. Now, what do we mean by “accessing all the features”? Well, that varies drastically from one app/game to another. Some apps and games just offer a slight glimpse of its possibilities and charge for almost anything. Other apps and games charge just for particular cosmetic content. Some apps (especially games) offer everything for free, provided that you grind meticulously enough.&lt;/p&gt;

&lt;p&gt;Candy crush saga freemium mobile app monetization&lt;br&gt;
Candy Crush Saga is a perfect example of how freemium model is executed. You are free to play the game and you can finish it without spending a dime, but you can purchase various powerups, additional lives and similar.&lt;/p&gt;

&lt;p&gt;At this point, freemium is the king and seems to be the most popular mobile app monetization option worldwide. The reason is simple – casual users/gamers get their share of casual usage and those who are in need of higher amounts of utility, well, they pay for it. If there was a certain mobile app monetization model I’d advise you to stick to, freemium would be that model.&lt;/p&gt;

&lt;p&gt;Before you decide to go freemium, make sure that you realize that freemium isn’t a goldmine. Developing an app and blindly deciding to charge for some features isn’t how freemium is supposed to be done. Quality freemium mobile app monetization, as any other monetization model, requires you to think of a strategy and stick to it. Again – there are no monetization models that allow you to sit back, do nothing and watch your bank account skyrocket. If you think such a model exists – I think you should stop doing this before it’s too late.&lt;/p&gt;

&lt;p&gt;To successfully launch a freemium monetization model, you should fine tune your app or game in a way that you find a right balance of free and paid content. Put too little free content and you’ll have a hard time convincing the users to buy premium content. Put too much free content, and most of them will see the value of paid content as negligible and you won’t earn anything. There are couple of options you can chew over if you decide to go freemium.&lt;/p&gt;

&lt;p&gt;• If you are aiming at making a social app for heterogeneous userbase, your revenue will most likely depend on its size. I would advise you make all the basic features free to use and leave premium only for those features that serve as cosmetic features. Let’s say you are making a photo sharing social app. Leave all the basic functions free but charge for content such as having custom visual templates or something like that. The main obstacle you’ll be facing here, though, isn’t the monetization model itself (it’s pretty straightforward), but your ability to draw a large enough userbase. Good luck with that.&lt;/p&gt;

&lt;p&gt;• Don’t overdo it! If you ever downloaded a freemium game you know just how frustrating it can be if the game requires you to pay for every life, star, candy, mushroom or whatever you collect in the game. Sure, Candy Crush is doing the same and they are doing just fine, but let’s be honest here – you are not making a new Candy Crush game. Try to find a good balance between various elements. Don’t charge for every single breath they take while playing your game. Make it challenging and engaging enough that it encourages casual play but requires payment for those who want to spend more than 20,30 or whatever minutes with it.&lt;/p&gt;

&lt;p&gt;• If you are making a mobile game, please, avoid the “pay to win” model, meaning you should avoid the kind of monetization that makes your game beatable only if you pay for certain features, items, etc. It’s true that there are some players willing to spend large amounts of money just to beat a game or be better than others if the game is multiplayer, but they are not really so common. On top of that, once players place a “P2W” label on your game it’s almost impossible to shake it off. That usually results in huge drop of player experience and leads to drop in active playerbase. Instead of going P2W, make all necessary features obtainable with enough grinding but offer a chance to pay for them if players don’t want to spend time grinding. As for various cosmetic improvements and features – put a price tag on them as they are not an integral part of user experience.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HMU0sJUV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a6ibmm997x237w1hz5o5.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HMU0sJUV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a6ibmm997x237w1hz5o5.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;IN-APP ADVERTISING&lt;/strong&gt;&lt;br&gt;
For the last few years, freemium mobile app monetization model has been extremely popular and it rightfully remains so. In-App Advertising comes in as a close second.&lt;/p&gt;

&lt;p&gt;What In-App Advertising does is that it removes the price tag from your mobile app or game, thus making it free to use. The monetization part consists of you making income through various ads being displayed to users using your app or playing your game. The ads are usually for other apps and games.&lt;/p&gt;

&lt;p&gt;This model is popular as it is fairly simpe to set up and use. Also, this is one of the safest and easiest methods to generate revenue as mobile apps and games are a perfect way to collect enormous amounts of user data, making the ads very effective. On the other hand, apps and games that use in-app advertising are among most popular as they usually offer all features for free at the cost of rather small nuisance that ads are.&lt;/p&gt;

&lt;p&gt;Compared to freemium model that gives you free gameplay, but charges for extra lives in case you want to play some more (or you can wait for 2 hours for your life to replenish), in-app ad monetization model works like a glove as it gives you unlimited gameplay in exchange for a few ads. That’s what I call a bargain. Personally, I believe that this model is going to be the most popular model BY FAR in the near future, especially as the advertising part gets more subtle and better integrated.&lt;/p&gt;

&lt;p&gt;Like with other mobile app monetization models, in-app advertising is not a goldmine. True, it’s simple, it’s popular, but it’s not a goldmine. It’s usability and effectiveness depends on various factors, such as active userbase, how engaging the apps are and how many ads are displayed during a session. Here are some general tips regarding the in-app ad monetization model.&lt;/p&gt;

&lt;p&gt;• Make sure that the ads displayed are as relevant to the user as possible. Let’s be honest here – people don’t like advertisement. If they really have to go through advertisement, help them by making sure that the ads they are getting are relevant. Nobody wants to play a medievalesque RPG, running around slaying demons, while being shown ads for prostate pills. So, unless you want your app/game to become tiresome really fast, make them relevant.&lt;/p&gt;

&lt;p&gt;• Choose the ad placement and timing wisely. The ads shouldn’t be placed in a matter that they are too distracting, especially if it’s a game we are talking about. You don’t want ads to interrupt users/players when they really don’t want to be interrupted. Basically, you’ll have to take care of WHERE and WHEN do you place ads, both of whom are equally important. There is no specific answer to this question, as it depends on the features and layout of the app/game. If you’re developing a mobile game, try to display ads during the completion of a certain level/quest, during “game over” screen, during saving game or similar game elements that don’t have to do a lot with the gameplay itself. Try to avoid ads being displayed during the gameplay because it can alter the gameplay experience so hard that you risk losing playerbase due to your game being overly irritating.&lt;/p&gt;

&lt;p&gt;• The more user data you can gather, the more effective the ads will be. This is especially true for social apps as they usually require specific user data in order to register and use the app itself. User data can be collected in mobile games, as well, but not as easy and precise as in case with mobile apps. By collecting relevant user data, it’s easier for the ads to target specific audience, thus making them more effective.&lt;/p&gt;

&lt;p&gt;• In-app/in-game advertisement works wonders for both microapps/games and large, complex games/apps. This may seem paradoxical at first, but think about it. If we are talking about microapps (such as flashlight apps) or microgames (such as Flappy Bird), ads are, basically, your only source of income. Your app or game isn’t complex enough that people would pay for it (well, Flappy Bird was an exception, but you get the deal), nor do they have enough complex features to make them freemium. In case with microgames, this is especially true. Microgames are usually fast paced with player restarting a lot and dying a lot. The game over screen, shown so often in microgames, is a perfect place to place ads as they are not tiresome, nor do they alter gameplay in any way. Large, complex apps are another case of ad-friendliness. This requires a good marketing strategy, though. Going free allows you to reach large audience who will be more than willing to use your app/play your game for free. This requires a lot of tinkering as the costs of development are probably very big, but if used smart and subtle, a lot of ads can be placed inside apps and games without driving users away.&lt;/p&gt;

&lt;p&gt;Flappy Birds monetization&lt;br&gt;
Flappy Bird – this microgame classic is a great example of a game worth displaying ads in. Players will die. A lot. Why not display some ads during the game over screen?&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FEIsW2Yu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/okzft7xwjfpst17a8mrm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FEIsW2Yu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/okzft7xwjfpst17a8mrm.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;OK, WHAT DO I DO?&lt;/strong&gt;&lt;br&gt;
In case you read the whole damn article thinking “when is he finally going to shut up and tell me what to do?”, I’m very sorry, but there are only two answers I can give you and none of them will be really satisfactory as you heard them before:&lt;/p&gt;

&lt;p&gt;I don’t know&lt;br&gt;
It depends&lt;br&gt;
I guess these weren’t exactly the kind of answers you wanted to see, but that’s the only honest answer I can give. Anyone saying otherwise is either a mobile app monetization god or a liar. The sole purpose of this giant ass article was to explore some of the most popular methods of monetization in order to get a grasp of turning lines of code into cash. While I am no developer, I am marketer who, for the purpose of this article, analyzed countless of various mobile apps and games and this is what I have learned. The more I explored, the more I started to realize that there is no such thing as the universal approach, as not every app and game is the same. They all have serve different purposes and have distinct features that make some monetization models suitable and some utterly useless.&lt;/p&gt;

&lt;p&gt;You can use this guide as a source of valuable information and you will probably do good, as it analyzes what the most successful mobile games and apps used as their go-to monetization model. But, if you truly wish to reach the highest levels of monetization, you will need to sit your ass down and think.&lt;/p&gt;

&lt;p&gt;What does my app bring to the table? Am I copying someone? Is someone copying me? Are these features revolutionary? Who is my audience? How much money do they make? Will they pay? Are they going to crush their smartphones at the first sight of ads popping out? Are they crazy enough to spend hundreds and hundreds of dollars for additional wheat in my cute farming simulation? Do I have to have ads? Maybe I can put the “donate” button? Are ads really the best solution for my soon-to-go-viral micro game? Am I working on this alone? Are there other people working for me? Can I afford to risk?&lt;/p&gt;

&lt;p&gt;These are just some of the questions you will have ask yourself even before you type the first line of code. Choosing the right mobile app monetization strategy for your mobile app or game requires such a relativistic answer that it’s simply impossible to provide a unified monetization strategy. No matter what I tell you to do, you will still need to adapt your mobile app monetization strategy to the specific attributes of your app/game. Think about your users. Become an user and learn how to think like a user. Now, how do you get out the most of them? How to make them pay?&lt;/p&gt;

&lt;p&gt;From my perspective, I’d like everything to be free to use. But you shouldn’t give a shit about me. I am your user, so what? Sure, we all like solidarity. If you are a gamer, you know how irritating monetization can sometimes be. But, you are not a gamer now. You are an developer. Maybe you have mortgage. Maybe you recently got married and need to pay for the ceremony. Gamer solidarity won’t feed your kids – you will, so stop giving things for free. Just stop it. It is possible to provide good user/gamer experience while making money out of it. You just have to think. You don’t have to be a scumbag developer to feed your kids the same way you don’t have to rob banks to feed your kids. You just have to think.&lt;/p&gt;

&lt;p&gt;Think about core functions of your apps. Does your app/game depend on large numbers of users/players? Think about how you can make the users recommend it to their friends? Maybe luck plays important role in deciding whether people can pass a certain level in your game. How about including some paid power ups to help those who aren’t patient or lucky enough? Find their weak spot. If you aren’t content with acting like a predator, you are probably not too interested in making a living selling mobile apps and games. Yes, you should act like a predator and that’s perfectly ok. Just don’t make the users think that you are trying to rip their guts off (don’t try to rip them off in the first place). The only way of keeping both sides satisfied is to act like a predator with silk gloves. The more time and effort you put into it, the less you can afford to act like a “good guy”. It’s easy to say that gameplay matters when you are a gamer, but if you are employing 20 developers each of whom requires a hefty sum, you will have to do whatever it takes to get them paid. That’s what being a predator is all about. It doesn’t mean you should use scumbag tactics, it means you should be as tactful, prudent and wise as possible to ensure long-term returns. Successful mobile app monetization means you should:&lt;/p&gt;

&lt;p&gt;Know and analyze your audience&lt;br&gt;
Provide valuable content and experience&lt;br&gt;
Keep them satisfied&lt;br&gt;
Reward them for investing time&lt;br&gt;
Don’t ruin their user experience&lt;br&gt;
Use monetization that provides value to users&lt;br&gt;
Don’t rip them off&lt;br&gt;
If you succeed at this, I have absolutely no doubts that your mobile app or game is going to be successful. Congratulations, you made it and I am happy for you.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YHBnz2ju--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r9uarbd85z9mytwfalbs.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YHBnz2ju--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r9uarbd85z9mytwfalbs.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;WHAT DOES THE FUTURE HOLD?&lt;/strong&gt;&lt;br&gt;
As I have highlighted numerous times throughout this article, paid apps aren’t in the best sport right now and that’s likely to continue during next couple of years. However, I do think that paid apps and games are poised for a comeback. It’s not going to be big enough to make paid apps and games reach the headlines, but I do think that users are slowly beginning to realize that free apps and games are usually costing them much more than paid apps, although that cost adds over time and isn’t visible at first. This has a lot to do with various scumbag monetization models out on the market. True, these models are popular for a reason, but their effectiveness depends on general level of computer and Internet literacy that is, unfortunately, still quite low. As the time goes on, this won’t be the case.&lt;/p&gt;

&lt;p&gt;The industry is slowly running out of various scumbag tactics which, if you ask me, is a good thing. This will rebuild the trust in the industry. The image of mobile app and game industry as money grabbing scumbags has gone too far. While I don’t care what that means for casual games and apps, it has most certainly made some developers quit on interesting ideas due to fear of not making enough money to cover the costs of development. The less popular various scumbag tactics are, the higher the content quality has to be in order to draw audience to it and I don’t need to explain why this is a good thing.&lt;/p&gt;

&lt;p&gt;While I don’t think that paid mobile apps and games will ever again be a dominant force they used to be, I do think that we are approaching the end of a scumbag era and that’s wonderful. Free model is here to stay, which isn’t a bad thing since it seems that most of the free monetization tactics seem to favor the production of good and useful content that is monetized using subtle and often useful (from user’s perspective) monetization technique.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>devops</category>
      <category>webdev</category>
      <category>android</category>
    </item>
    <item>
      <title>Copy and Paste Emoji ✂ 👍</title>
      <author>Emojipedia</author>
      <pubDate>Tue, 01 Jun 2021 10:33:10 +0000</pubDate>
      <link>https://dev.to/emojipedia/copy-and-paste-emoji-4kk3</link>
      <guid>https://dev.to/emojipedia/copy-and-paste-emoji-4kk3</guid>
      <description>&lt;p&gt;Are you looking 👀 for emoji symbols you could copy and paste to another website or app❓ Online ⌨️ Emoji Keyboard 2021 for 💻 PC, tablets and 📱 smartphones. Copy and paste every emoji with 👍 no apps required❗ Emojis are supported on iOS, Android, macOS, Windows, Linux and ChromeOS. Copy and paste emojis for Twitter, Facebook, Slack, Instagram, Snapchat, Slack, GitHub, Instagram, WhatsApp and more 👌. Our new mobile-friendly web app provides a simple, beautiful &lt;strong&gt;&lt;a href="https://listemoji.com"&gt;copy and paste emoji&lt;/a&gt;&lt;/strong&gt; keyboard interface WITH search and auto-copy technology.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-emoji-and-where-are-these-used"&gt;
  &lt;/a&gt;
  What are Emoji and where are these used?
&lt;/h2&gt;

&lt;p&gt;Emoji are emoticons, smileys and ideograms used to express emotions in websites or electronic messages. With the use of them, users convey a certain emotion which creates an emotional impact for the receiver. These characters or images are very popular on social media websites and messaging apps like Instagram, Facebook, Twitter, Google Hangouts, Snapchat, iMessage, Whatsapp and others. You can also notice emojis used on Snapchat Trophies. Currently, Emoji symbols are supported on all major platforms including OS X, iOS, Windows, and Android.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-copy-amp-paste-emoji-service"&gt;
  &lt;/a&gt;
  What is "Copy &amp;amp; Paste Emoji" service?
&lt;/h2&gt;

&lt;p&gt;Originated from Japan, now Emoji symbols are popular in all major operating systems, social websites and messaging apps. Each Emoji has the same code and meaning however visual appearance can vary by platform. We know some websites and apps support Emojis however users are not provided with Emoji keyboard to easily use them on their systems. What is more, have you ever needed Emoji for PC? That is the problem we are trying to solve with our website. We have collected all Emoji symbols in one place for you to easily &lt;br&gt;
copy and paste them wherever you want.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-an-emoji"&gt;
  &lt;/a&gt;
  What is an Emoji?
&lt;/h2&gt;

&lt;p&gt;Emoji is a digital symbol that is used mostly in electronic conversation to send feelings, emotions, or ideas. Emoji was initially discovered in Japan. The Shigetaka Kurita realized that there were some missing elements of human emotions and feelings that are not expressed with letters and numbers in text messages. Shigetaka Kurita took inspirations from a weather report then, he created initially 176 symbols. He called that new creation an 'Emoji'. Emoji means picture and Moji means characters. He was released that emojis in mobile phone companies NTT Docomo in 1999. Emoji is used to represent the facial expression, ideas and feelings. Now, Emoji used in every social media platform, and emoji makes communication better than text. An emoji is a visual representation of an emotion, object or symbol. Emoji can are in modern communication apps such as your smartphone’s text messaging or social networking apps such as Facebook, Instagram, Twitter, and Snapchat. To access your library of emoticons in any app, tap the smiley face icon on the keyboard. This will reveal a library of emoticons organized into categories. On iOS, your most recently used emoticons are displayed, followed by emotive images, animals/creatures, food, sports/activities, motor vehicles, technology/equipment, hearts/symbols, and flags. The categorization is a bit convoluted and not well organized. Often, it might be difficult to find an emoticon you want. Apple promises to make this easier in the next version of iOS by activating words into emotions by just tapping them.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://listemoji.com"&gt;https://listemoji.com&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>showdev</category>
      <category>emoji</category>
      <category>socialmedia</category>
    </item>
    <item>
      <title>Azure CLI: Get Azure repositories list in 4 steps</title>
      <author>Pradeep Pradyumna</author>
      <pubDate>Tue, 01 Jun 2021 10:29:37 +0000</pubDate>
      <link>https://dev.to/pradeepradyumna/azure-cli-get-repositories-list-1b40</link>
      <guid>https://dev.to/pradeepradyumna/azure-cli-get-repositories-list-1b40</guid>
      <description>&lt;p&gt;If you're looking for an azure cli command to get a list of repositories, you can follow the steps:&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#step-1"&gt;
  &lt;/a&gt;
  Step 1:
&lt;/h1&gt;

&lt;p&gt;Download Azure CLI from &lt;a href="https://docs.microsoft.com/cli/azure/install-azure-cli?view=azure-cli-latest"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#step-2"&gt;
  &lt;/a&gt;
  Step 2:
&lt;/h1&gt;

&lt;p&gt;Add the Azure DevOps extension&lt;br&gt;
&lt;code&gt;az extension add --name azure-devops&lt;/code&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#step-3"&gt;
  &lt;/a&gt;
  Step 3:
&lt;/h1&gt;

&lt;p&gt;Configure defaults. Give YOUR organization and project names&lt;br&gt;
&lt;code&gt;az devops configure --defaults organization=https://dev.azure.com/&amp;lt;ORGANIZATION_NAME&amp;gt; project=&amp;lt;PROJECT_NAME&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#step-4"&gt;
  &lt;/a&gt;
  Step 4:
&lt;/h1&gt;

&lt;p&gt;Get list by running either of the below commands&lt;/p&gt;

&lt;p&gt;&lt;code&gt;az repos list --org "https://dev.azure.com/&amp;lt;ORGANIZATION_NAME&amp;gt;" -p "&amp;lt;PROJECT_NAME&amp;gt;" -o tsv --query [].name&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;or&lt;/p&gt;

&lt;p&gt;&lt;code&gt;az repos list --query '[].{Name:name, Url:remoteUrl}' -o json&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Cheers!&lt;br&gt;
Thanks for reading!&lt;span&gt; 💛&lt;/span&gt;&lt;/p&gt;

</description>
      <category>azure</category>
      <category>git</category>
      <category>todayilearned</category>
    </item>
    <item>
      <title>Free Flutter Templates 2021</title>
      <author>Pablo Discobar</author>
      <pubDate>Tue, 01 Jun 2021 10:26:40 +0000</pubDate>
      <link>https://dev.to/pablonax/free-flutter-templates-2021-2hm0</link>
      <guid>https://dev.to/pablonax/free-flutter-templates-2021-2hm0</guid>
      <description>&lt;p&gt;In this article, you will finally find your BFF's. And by BFF I mean the Best Free Flutter Templates, of course.Enjoy it and write in the comments which ones you liked the most. &lt;/p&gt;

&lt;p&gt;Personally, my favorite is the Tip Calculator Template!&lt;/p&gt;

&lt;ol&gt;
    &lt;li&gt;
&lt;h3&gt;&lt;a href="https://code.market/product/restaurant-app-ui-kit/"&gt;Restaurant App UI KIT Flutter template app&lt;/a&gt;&lt;/h3&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BIDkmdi0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://code.market/wp-content/uploads/2021/05/%25D0%25A1%25D0%25BD%25D0%25B8%25D0%25BC%25D0%25BE%25D0%25BA-%25D1%258D%25D0%25BA%25D1%2580%25D0%25B0%25D0%25BD%25D0%25B0-2021-05-20-%25D0%25B2-20.38.59-900x530.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BIDkmdi0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://code.market/wp-content/uploads/2021/05/%25D0%25A1%25D0%25BD%25D0%25B8%25D0%25BC%25D0%25BE%25D0%25BA-%25D1%258D%25D0%25BA%25D1%2580%25D0%25B0%25D0%25BD%25D0%25B0-2021-05-20-%25D0%25B2-20.38.59-900x530.png" alt="Restaurant App UI KIT Flutter template app"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I like to read reviews before going to a restaurant, or read the menu in advance. This is a very useful feature in modern reality, because you will definitely never make a mistake. This kit can be used to create applications faster to save your time. There is nothing unnecessary in this template, the code is completely clean. The template is easy to customize, you can change the objects as you require. Also, the template is created in a dark and light style, which has become the most relevant recently among all applications.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;ol start="2"&gt;
    &lt;li&gt;
&lt;h3&gt;&lt;a href="https://code.market/product/swiggy-restaurant-app-ui-kit/"&gt;Swiggy Restaurant APP UI Kit template app&lt;/a&gt;&lt;/h3&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RjyUJcz9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://code.market/wp-content/uploads/2021/05/%25D0%25A1%25D0%25BD%25D0%25B8%25D0%25BC%25D0%25BE%25D0%25BA-%25D1%258D%25D0%25BA%25D1%2580%25D0%25B0%25D0%25BD%25D0%25B0-2021-05-20-%25D0%25B2-20.40.05-900x530.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RjyUJcz9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://code.market/wp-content/uploads/2021/05/%25D0%25A1%25D0%25BD%25D0%25B8%25D0%25BC%25D0%25BE%25D0%25BA-%25D1%258D%25D0%25BA%25D1%2580%25D0%25B0%25D0%25BD%25D0%25B0-2021-05-20-%25D0%25B2-20.40.05-900x530.png" alt="Restaurant App UI KIT Flutter template app"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Another useful app that brings restaurants closer to consumers. When the Cavid-19 pandemic began, the titans of the delivery services stood up to protect psychological health and the national economy. So this Flutter template can also be your savior, with it you will save time, because you won't have to create everything from scratch.&lt;/p&gt;

&lt;p&gt;There are more than 20 screens in this set that you can easily customize as you want. A clean code and a detailed description will allow you to understand the structure of this template, even if you don’t have any knowledge in the field of coding.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;ol start="3"&gt;
    &lt;li&gt;
&lt;h3&gt;&lt;a href="https://code.market/product/flutter-folio-mobileios-android-desktop-windows-macos-linux-web/"&gt;Flutter Folio – mobile (ios, android), desktop (windows, macos, linux), web template app&lt;/a&gt;&lt;/h3&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jIW41rSi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://code.market/wp-content/uploads/2021/05/%25D0%25A1%25D0%25BD%25D0%25B8%25D0%25BC%25D0%25BE%25D0%25BA-%25D1%258D%25D0%25BA%25D1%2580%25D0%25B0%25D0%25BD%25D0%25B0-2021-05-20-%25D0%25B2-20.42.22-900x424.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jIW41rSi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://code.market/wp-content/uploads/2021/05/%25D0%25A1%25D0%25BD%25D0%25B8%25D0%25BC%25D0%25BE%25D0%25BA-%25D1%258D%25D0%25BA%25D1%2580%25D0%25B0%25D0%25BD%25D0%25B0-2021-05-20-%25D0%25B2-20.42.22-900x424.png" alt="Flutter Folio – mobile(ios, android), desktop (windows, macos, linux), web template "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is not just a template, it is a template for getting experience in working with Flutter. If you are a beginner Flutter developer or designer, then this will be a great opportunity to try Flutter as a tool. This application works for all operating systems and it is very easy to install, so that any user can handle it. You can train yourself in creating a website, fill your hand, and then send the link to your friends or family.&lt;/p&gt;

&lt;ol start="4"&gt;
    &lt;li&gt;
&lt;h3&gt;&lt;a href="https://code.market/product/gif-finder-using-giphy-api/"&gt;Gif Finder Using GIPHY API template app&lt;/a&gt;&lt;/h3&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JlObh_hw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://code.market/wp-content/uploads/2021/05/%25D0%25A1%25D0%25BD%25D0%25B8%25D0%25BC%25D0%25BE%25D0%25BA-%25D1%258D%25D0%25BA%25D1%2580%25D0%25B0%25D0%25BD%25D0%25B0-2021-05-20-%25D0%25B2-20.44.00-900x530.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JlObh_hw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://code.market/wp-content/uploads/2021/05/%25D0%25A1%25D0%25BD%25D0%25B8%25D0%25BC%25D0%25BE%25D0%25BA-%25D1%258D%25D0%25BA%25D1%2580%25D0%25B0%25D0%25BD%25D0%25B0-2021-05-20-%25D0%25B2-20.44.00-900x530.png" alt="Gif Finder Using GIPHY API template app"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Gif is a bitmap format for graphic images. Gif finder is a convenient way to search for images. Sometimes ordinary emojis are not enough to express your emotions, and then GIFs come for help. This format for transmitting emotions, humor, or just cute pictures with cats has become so popular that now with this template, you can put the search for GIFs in your own messenger.&lt;/p&gt;

&lt;ol start="5"&gt;
    &lt;li&gt;
&lt;h3&gt;&lt;a href="https://code.market/product/flutter-travel-app-concept/"&gt;Flutter Travel App Concept &lt;/a&gt;&lt;/h3&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oF56NMRM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://code.market/wp-content/uploads/2021/05/%25D0%25A1%25D0%25BD%25D0%25B8%25D0%25BC%25D0%25BE%25D0%25BA-%25D1%258D%25D0%25BA%25D1%2580%25D0%25B0%25D0%25BD%25D0%25B0-2021-05-20-%25D0%25B2-20.47.22-900x371.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oF56NMRM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://code.market/wp-content/uploads/2021/05/%25D0%25A1%25D0%25BD%25D0%25B8%25D0%25BC%25D0%25BE%25D0%25BA-%25D1%258D%25D0%25BA%25D1%2580%25D0%25B0%25D0%25BD%25D0%25B0-2021-05-20-%25D0%25B2-20.47.22-900x371.png" alt="Flutter Travel App Concept"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This template is appropriate for any operating system, therefore, using this template is as easy as booking a hotel room. But we remind you that to work with Flutter templates, you need some knowledge in the field of programming. In order to use this template properly, you need to have a good understanding of Dart.&lt;/p&gt;

&lt;ol start="6"&gt;
    &lt;li&gt;
&lt;h3&gt;&lt;a href="https://code.market/product/flutter-task-planner-app-design/"&gt;Flutter Task Planner App Design&lt;/a&gt;&lt;/h3&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Abhh3juO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://code.market/wp-content/uploads/2021/05/%25D0%25A1%25D0%25BD%25D0%25B8%25D0%25BC%25D0%25BE%25D0%25BA-%25D1%258D%25D0%25BA%25D1%2580%25D0%25B0%25D0%25BD%25D0%25B0-2021-05-20-%25D0%25B2-20.48.20-900x506.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Abhh3juO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://code.market/wp-content/uploads/2021/05/%25D0%25A1%25D0%25BD%25D0%25B8%25D0%25BC%25D0%25BE%25D0%25BA-%25D1%258D%25D0%25BA%25D1%2580%25D0%25B0%25D0%25BD%25D0%25B0-2021-05-20-%25D0%25B2-20.48.20-900x506.png" alt="Flutter Task Planner App Design"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After long holidays or just some failures, it is always difficult to start active work. There are several motivational theories to beat procrastination, but I believe that the most effective solution is the user-friendly Task Planner App.&lt;/p&gt;

&lt;p&gt;With this app, it’s possible to view, schedule and manage tasks as well as see projects that are being worked on. The nice color palette of this design perfectly copes with its task-it pleases the eye, but does not distract from the really important things.&lt;/p&gt;

&lt;p&gt;Be careful, this is only a design. No backend.&lt;/p&gt;

&lt;ol start="7"&gt;
    &lt;li&gt;
&lt;h3&gt;&lt;a href="https://code.market/product/flutter-ebook-app/"&gt;Flutter eBook App&lt;/a&gt;&lt;/h3&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--g0DvRVca--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://code.market/wp-content/uploads/2021/05/%25D0%25A1%25D0%25BD%25D0%25B8%25D0%25BC%25D0%25BE%25D0%25BA-%25D1%258D%25D0%25BA%25D1%2580%25D0%25B0%25D0%25BD%25D0%25B0-2021-05-20-%25D0%25B2-20.50.50-900x482.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g0DvRVca--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://code.market/wp-content/uploads/2021/05/%25D0%25A1%25D0%25BD%25D0%25B8%25D0%25BC%25D0%25BE%25D0%25BA-%25D1%258D%25D0%25BA%25D1%2580%25D0%25B0%25D0%25BD%25D0%25B0-2021-05-20-%25D0%25B2-20.50.50-900x482.png" alt="Flutter eBook App"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Useful reading (reading good books) expands a person's horizons, enriches his inner world, makes him smarter and has a positive effect on memory. Reading books increases a person's vocabulary, contributes to the development of clearer thinking, which allows you to formulate and express thoughts more lucidly. It also has a great effect on the sense of humor, which in the modern world is put on a par with the ability to communicate.&lt;/p&gt;

&lt;p&gt;So, that's why, applications for reading books are most relevant in today's reading society. Apps like Apple Books, Amazon Kindle, or Bookmate have been on the market for a long time and show excellent results. This template is in no way less than the book giants.&lt;/p&gt;

&lt;p&gt;Everything brilliant is quite simple. Like this template. There is nothing superfluous in the interface. Books are downloaded from public domain sources. Users of the app can read online or download books to use the app, for example, in flight. The app also has a dark mode to make it easier to read at night.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;ol start="8"&gt;
    &lt;li&gt;
&lt;h3&gt;&lt;a href="https://code.market/product/fluttre-tip-calculator/"&gt;Flutter Tip Calculator App Source Code&lt;/a&gt;&lt;/h3&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vBSYNBLz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://code.market/wp-content/uploads/2021/05/%25D0%25A1%25D0%25BD%25D0%25B8%25D0%25BC%25D0%25BE%25D0%25BA-%25D1%258D%25D0%25BA%25D1%2580%25D0%25B0%25D0%25BD%25D0%25B0-2021-05-20-%25D0%25B2-20.52.55-900x590.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vBSYNBLz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://code.market/wp-content/uploads/2021/05/%25D0%25A1%25D0%25BD%25D0%25B8%25D0%25BC%25D0%25BE%25D0%25BA-%25D1%258D%25D0%25BA%25D1%2580%25D0%25B0%25D0%25BD%25D0%25B0-2021-05-20-%25D0%25B2-20.52.55-900x590.png" alt="Flutter Tip Calculator App Source Code"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you often go to restaurants with friends, then you are probably tired of the frequent calculation of tips for a general check. It is for this case that the tip calculator template was developed. Very simple, fast, and most importantly convenient.&lt;/p&gt;

&lt;ol start="9"&gt;
    &lt;li&gt;
&lt;h3&gt;&lt;a href="https://code.market/product/foodybite-flutte%E2%80%A6urant-search-app/"&gt;FlutterFoodybite&lt;/a&gt;&lt;/h3&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--erogcXDM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://code.market/wp-content/uploads/2021/05/%25D0%25A1%25D0%25BD%25D0%25B8%25D0%25BC%25D0%25BE%25D0%25BA-%25D1%258D%25D0%25BA%25D1%2580%25D0%25B0%25D0%25BD%25D0%25B0-2021-05-20-%25D0%25B2-20.54.43-900x425.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--erogcXDM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://code.market/wp-content/uploads/2021/05/%25D0%25A1%25D0%25BD%25D0%25B8%25D0%25BC%25D0%25BE%25D0%25BA-%25D1%258D%25D0%25BA%25D1%2580%25D0%25B0%25D0%25BD%25D0%25B0-2021-05-20-%25D0%25B2-20.54.43-900x425.png" alt="Flutter representation of a Restaurant app UI"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For gastronomic aesthetes, an application template for finding restaurants and cafes has been developed. Using the function of division into categories, you can easily find something that will suit your taste. Bon Appetit!&lt;/p&gt;

&lt;ol start="10"&gt;
    &lt;li&gt;
&lt;h3&gt;&lt;a href="https://code.market/product/flutter-furniture-app-concept/"&gt;FlutterFurnitureAppUI&lt;/a&gt;&lt;/h3&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8WBkplMg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://code.market/wp-content/uploads/2021/05/%25D0%25A1%25D0%25BD%25D0%25B8%25D0%25BC%25D0%25BE%25D0%25BA-%25D1%258D%25D0%25BA%25D1%2580%25D0%25B0%25D0%25BD%25D0%25B0-2021-05-20-%25D0%25B2-21.04.25-900x609.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8WBkplMg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://code.market/wp-content/uploads/2021/05/%25D0%25A1%25D0%25BD%25D0%25B8%25D0%25BC%25D0%25BE%25D0%25BA-%25D1%258D%25D0%25BA%25D1%2580%25D0%25B0%25D0%25BD%25D0%25B0-2021-05-20-%25D0%25B2-21.04.25-900x609.png" alt="Flutter Furniture App Concept"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There is such a science as ergonomics – this is the science of convenience, about the organization of the working space for a comfortable and effective work of the employee, based on the physical and psychological characteristics of the human body. In today's world of freelancing and distance learning, ergonomics is becoming a part of everyone's life. After all, it is very important that your workspace meets all the requirements of this science.&lt;/p&gt;

&lt;p&gt;Therefore, not only the furniture should be comfortable, but also the application for its purchase. This template is made extremely comfortable. With a little knowledge of the Dart language, you can easily customize this template and make a quality product for your consumer.&lt;/p&gt;

&lt;ol start="11"&gt;
    &lt;li&gt;
&lt;h3&gt;&lt;a href="https://code.market/product/fryo-grocery-sho%E2%80%A6app-template-kit/"&gt;FlutterGrocery-ShoppingAppUI&lt;/a&gt;&lt;/h3&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VL7aMGum--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://code.market/wp-content/uploads/2021/05/%25D0%25A1%25D0%25BD%25D0%25B8%25D0%25BC%25D0%25BE%25D0%25BA-%25D1%258D%25D0%25BA%25D1%2580%25D0%25B0%25D0%25BD%25D0%25B0-2021-05-20-%25D0%25B2-21.06.01.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VL7aMGum--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://code.market/wp-content/uploads/2021/05/%25D0%25A1%25D0%25BD%25D0%25B8%25D0%25BC%25D0%25BE%25D0%25BA-%25D1%258D%25D0%25BA%25D1%2580%25D0%25B0%25D0%25BD%25D0%25B0-2021-05-20-%25D0%25B2-21.06.01.png" alt="Grocery Shopping App"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Grocery stores have long migrated to the web. Instead of hauling heavy bags home, it's much easier to order a delivery. And also just don't create the app yourself from scratch, but use a template. Moreover, the author of this template reports that only a couple of fingers are needed for successful use.&lt;/p&gt;

&lt;ol start="12"&gt;
    &lt;li&gt;
&lt;h3&gt;&lt;a href="https://code.market/product/flutter-login-kit/"&gt;Flutter login kit&lt;/a&gt;&lt;/h3&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tuA9zR_x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://code.market/wp-content/uploads/2021/05/%25D0%25A1%25D0%25BD%25D0%25B8%25D0%25BC%25D0%25BE%25D0%25BA-%25D1%258D%25D0%25BA%25D1%2580%25D0%25B0%25D0%25BD%25D0%25B0-2021-05-20-%25D0%25B2-21.08.38-900x500.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tuA9zR_x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://code.market/wp-content/uploads/2021/05/%25D0%25A1%25D0%25BD%25D0%25B8%25D0%25BC%25D0%25BE%25D0%25BA-%25D1%258D%25D0%25BA%25D1%2580%25D0%25B0%25D0%25BD%25D0%25B0-2021-05-20-%25D0%25B2-21.08.38-900x500.png" alt="Flutter Login Kit"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Sometimes one finished piece of work can make life much easier. So I recommend you take a closer look at this login template. In a ready-made application, the login is the first thing the user sees, so you can't make a mistake here. Trust the professionals and ready-made solutions to your problems!&lt;/p&gt;

&lt;ol start="13"&gt;
    &lt;li&gt;
&lt;h3&gt;&lt;a href="https://www.ionicfirebaseapp.com/products/Flutter-Todo-app"&gt; FLUTTER TODO APP&lt;/a&gt;&lt;/h3&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f6toaDuX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://code.market/wp-content/uploads/2021/05/%25D0%25A1%25D0%25BD%25D0%25B8%25D0%25BC%25D0%25BE%25D0%25BA-%25D1%258D%25D0%25BA%25D1%2580%25D0%25B0%25D0%25BD%25D0%25B0-2021-05-20-%25D0%25B2-21.09.28-900x532.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f6toaDuX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://code.market/wp-content/uploads/2021/05/%25D0%25A1%25D0%25BD%25D0%25B8%25D0%25BC%25D0%25BE%25D0%25BA-%25D1%258D%25D0%25BA%25D1%2580%25D0%25B0%25D0%25BD%25D0%25B0-2021-05-20-%25D0%25B2-21.09.28-900x532.png" alt="FLUTTER TODO APP SCREENS"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This application is perfect for everyone who does not sit on the neck of their parents, and earns honest work. The built-in calendar lets you schedule events, set reminders, and make you more efficient day-to-day. If you are concerned about the issue of procrastination in the world, and you want to create your own convenient application for tracking tasks, then this is your choice!&lt;/p&gt;

&lt;ol start="14"&gt;
    &lt;li&gt;
&lt;h3&gt; &lt;a href="https://www.ionicfirebaseapp.com/products/flutter-news-app"&gt;FLUTTER NEWS MOBILE APP&lt;/a&gt;
&lt;/h3&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ptFdFF4W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://code.market/wp-content/uploads/2021/05/%25D0%25A1%25D0%25BD%25D0%25B8%25D0%25BC%25D0%25BE%25D0%25BA-%25D1%258D%25D0%25BA%25D1%2580%25D0%25B0%25D0%25BD%25D0%25B0-2021-05-20-%25D0%25B2-21.10.38-900x503.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ptFdFF4W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://code.market/wp-content/uploads/2021/05/%25D0%25A1%25D0%25BD%25D0%25B8%25D0%25BC%25D0%25BE%25D0%25BA-%25D1%258D%25D0%25BA%25D1%2580%25D0%25B0%25D0%25BD%25D0%25B0-2021-05-20-%25D0%25B2-21.10.38-900x503.png" alt="FLUTTER NEWS MOBILE APP"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;News doesn't stay fresh for long.That is why you need an app that will keep the whole world in the center of events. Whether it's sports news, politics, or just a forecast of an impending storm. In today's world, it is important to be one step ahead. And with this template, you will be one step ahead of your competitors! After all, while they are developing their app, your app is already working for you!&lt;/p&gt;

&lt;ol start="15"&gt;
    &lt;li&gt;
&lt;h3&gt; &lt;a href="https://code.market/product/flutter-movies-app/"&gt;Flutter-movies-app&lt;/a&gt;
&lt;/h3&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0tL9mwEp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://code.market/wp-content/uploads/2021/05/%25D0%25A1%25D0%25BD%25D0%25B8%25D0%25BC%25D0%25BE%25D0%25BA-%25D1%258D%25D0%25BA%25D1%2580%25D0%25B0%25D0%25BD%25D0%25B0-2021-05-20-%25D0%25B2-21.11.40.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0tL9mwEp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://code.market/wp-content/uploads/2021/05/%25D0%25A1%25D0%25BD%25D0%25B8%25D0%25BC%25D0%25BE%25D0%25BA-%25D1%258D%25D0%25BA%25D1%2580%25D0%25B0%25D0%25BD%25D0%25B0-2021-05-20-%25D0%25B2-21.11.40.png" alt="Flutter Movies App"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What movie should I watch tonight? It's not on Netflix, and it's not on HBO. So everything will be in your own streaming service!&lt;/p&gt;

&lt;ol start="16"&gt;
    &lt;li&gt;
&lt;h3&gt;&lt;a href="https://code.market/product/e-commerce-complate-app-flutter-ui/"&gt;E-commerce-Complete-Flutter-UI&lt;/a&gt;&lt;/h3&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VeCuBfUb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://code.market/wp-content/uploads/2021/05/%25D0%25A1%25D0%25BD%25D0%25B8%25D0%25BC%25D0%25BE%25D0%25BA-%25D1%258D%25D0%25BA%25D1%2580%25D0%25B0%25D0%25BD%25D0%25B0-2021-05-20-%25D0%25B2-21.13.25-900x510.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VeCuBfUb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://code.market/wp-content/uploads/2021/05/%25D0%25A1%25D0%25BD%25D0%25B8%25D0%25BC%25D0%25BE%25D0%25BA-%25D1%258D%25D0%25BA%25D1%2580%25D0%25B0%25D0%25BD%25D0%25B0-2021-05-20-%25D0%25B2-21.13.25-900x510.png" alt="E-Commerce Complate App"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Probably everyone has ever thought of creating their own brand or clothing store, so that they no longer spend hours looking for the perfect pair of trousers in the shopping center. But not many people succeeded. But if you are one of those lucky ones, then you probably need a stylish and user-friendly e-commerce app. I strongly recommend that you use this template to start active sales as soon as possible!&lt;/p&gt;

&lt;ol start="17"&gt;
    &lt;li&gt;
&lt;h3&gt;&lt;a href="https://code.market/product/flutter-ecommerce-app/"&gt;Flutter_ecommerce_app&lt;/a&gt;&lt;/h3&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aDekYakT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://code.market/wp-content/uploads/2021/05/%25D0%25A1%25D0%25BD%25D0%25B8%25D0%25BC%25D0%25BE%25D0%25BA-%25D1%258D%25D0%25BA%25D1%2580%25D0%25B0%25D0%25BD%25D0%25B0-2021-05-20-%25D0%25B2-21.14.48-900x403.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aDekYakT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://code.market/wp-content/uploads/2021/05/%25D0%25A1%25D0%25BD%25D0%25B8%25D0%25BC%25D0%25BE%25D0%25BA-%25D1%258D%25D0%25BA%25D1%2580%25D0%25B0%25D0%25BD%25D0%25B0-2021-05-20-%25D0%25B2-21.14.48-900x403.png" alt="E-Commerce app"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Another awesome, free and very beautiful template for an ecommerce app. Bright colors are perfectly complemented by a white background, on which any thing will look even more attractive.&lt;/p&gt;

&lt;ol start="18"&gt;
    &lt;li&gt;
&lt;h3&gt;&lt;a href="https://code.market/product/e-commerce-app-flutter-ui/"&gt;E-commerce-App-UI-Flutter&lt;/a&gt;&lt;/h3&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--K3Qw6eDk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://code.market/wp-content/uploads/2021/05/%25D0%25A1%25D0%25BD%25D0%25B8%25D0%25BC%25D0%25BE%25D0%25BA-%25D1%258D%25D0%25BA%25D1%2580%25D0%25B0%25D0%25BD%25D0%25B0-2021-05-20-%25D0%25B2-21.16.17-900x494.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--K3Qw6eDk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://code.market/wp-content/uploads/2021/05/%25D0%25A1%25D0%25BD%25D0%25B8%25D0%25BC%25D0%25BE%25D0%25BA-%25D1%258D%25D0%25BA%25D1%2580%25D0%25B0%25D0%25BD%25D0%25B0-2021-05-20-%25D0%25B2-21.16.17-900x494.png" alt="E-commerce App - Flutter UI"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Everyone can sell products, but not everyone can do it nicely! This template is made quite original. Here everything is taken into account so as to show the product at the right angle. The main feature of this template is that the background of each product favorably emphasizes the color and texture of the product itself.&lt;/p&gt;

&lt;ol start="19"&gt;
    &lt;li&gt;
&lt;h3&gt;&lt;a href="https://code.market/product/flutter-firebase-shopping-app/"&gt;Flutter-firebase-shopping-app&lt;/a&gt;&lt;/h3&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UeBqQs9_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://code.market/wp-content/uploads/2021/05/%25D0%25A1%25D0%25BD%25D0%25B8%25D0%25BC%25D0%25BE%25D0%25BA-%25D1%258D%25D0%25BA%25D1%2580%25D0%25B0%25D0%25BD%25D0%25B0-2021-05-20-%25D0%25B2-21.17.27-900x458.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UeBqQs9_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://code.market/wp-content/uploads/2021/05/%25D0%25A1%25D0%25BD%25D0%25B8%25D0%25BC%25D0%25BE%25D0%25BA-%25D1%258D%25D0%25BA%25D1%2580%25D0%25B0%25D0%25BD%25D0%25B0-2021-05-20-%25D0%25B2-21.17.27-900x458.png" alt="shop_app"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is the most versatile template for e-commerce. With this template, you can sell anything from club T-shirts to car parts. The concise design does not distract  with flashy colors or pictures from the products, so that the customer can easily navigate in the app. This template is for those who know what they need!&lt;/p&gt;

&lt;ol start="20"&gt;
    &lt;li&gt;
&lt;h3&gt;&lt;a href="https://code.market/product/blog-app-develop%E2%80%A6dejs-and-mongodb/"&gt;Flutter-Blog-App&lt;/a&gt;&lt;/h3&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pX7K6XXl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://code.market/wp-content/uploads/2021/05/%25D0%25A1%25D0%25BD%25D0%25B8%25D0%25BC%25D0%25BE%25D0%25BA-%25D1%258D%25D0%25BA%25D1%2580%25D0%25B0%25D0%25BD%25D0%25B0-2021-05-20-%25D0%25B2-21.18.29.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pX7K6XXl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://code.market/wp-content/uploads/2021/05/%25D0%25A1%25D0%25BD%25D0%25B8%25D0%25BC%25D0%25BE%25D0%25BA-%25D1%258D%25D0%25BA%25D1%2580%25D0%25B0%25D0%25BD%25D0%25B0-2021-05-20-%25D0%25B2-21.18.29.png" alt="Blog App Development Front-End and Back-End "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Green in psychology today means growth, development, prosperity, stability, new beginnings. Therefore, it is perfectly suitable for the design of a blog application. Learn new things, live long and prosper.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

</description>
      <category>flutter</category>
      <category>ios</category>
      <category>android</category>
      <category>dart</category>
    </item>
    <item>
      <title>A Deep Dive Into Kubernetes Schema Validation</title>
      <author>Eyar Zilberman</author>
      <pubDate>Tue, 01 Jun 2021 10:24:16 +0000</pubDate>
      <link>https://dev.to/datreeio/a-deep-dive-into-kubernetes-schema-validation-39ll</link>
      <guid>https://dev.to/datreeio/a-deep-dive-into-kubernetes-schema-validation-39ll</guid>
      <description>&lt;h2&gt;
  &lt;a href="#why-run-schema-validation"&gt;
  &lt;/a&gt;
  Why run schema validation?
&lt;/h2&gt;

&lt;p&gt;How do you ensure the stability of your Kubernetes clusters? How do you know that your manifests are syntactically valid? Are you sure you don’t have any invalid data types? Are any mandatory fields missing? &lt;/p&gt;

&lt;p&gt;Most often, we only become aware of these misconfigurations at the worst time - when trying to deploy the new manifests. &lt;/p&gt;

&lt;p&gt;Specialized tools and a “shift-left” approach make it possible to verify a Kubernetes schema before they’re applied to a cluster. In this article, I'll address how you can avoid misconfigurations and which tools are best to use.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  TL;DR
&lt;/h3&gt;

&lt;p&gt;Running schema validation tests is important, and the sooner the better.&lt;/p&gt;

&lt;p&gt;If all machines (local developers environment, CI, etc.) have access to your Kubernetes cluster, run &lt;code&gt;kubectl --dry-run&lt;/code&gt; in server mode on every code change. If this isn’t possible, and you want to perform schema validation tests offline, use kubeconform together with a policy enforcement tool to have optimal validation coverage.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#available-tools"&gt;
  &lt;/a&gt;
  Available tools
&lt;/h2&gt;

&lt;p&gt;Verifying the state of Kubernetes manifests may seem like a trivial task, because the Kubernetes CLI (kubectl) has the ability to verify resources before they’re applied to a cluster.  You can verify the schema by using the &lt;a href="https://github.com/kubernetes/enhancements/blob/master/keps/sig-api-machinery/576-dry-run/README.md"&gt;dry-run&lt;/a&gt; flag (&lt;code&gt;--dry-run=client/server&lt;/code&gt;) when specifying the &lt;code&gt;kubectl create&lt;/code&gt; or &lt;code&gt;kubectl apply&lt;/code&gt; commands, which will perform the validation without applying Kubernetes resources to the cluster.&lt;/p&gt;

&lt;p&gt;But I can assure you that it’s actually more complex. A running Kubernetes cluster is required to obtain the schema for the set of resources being validated. So, when incorporating manifest verification into a CI process, you must also manage connectivity and credentials to perform the validation. This becomes even more challenging when dealing with multiple microservices in several environments (prod, dev, etc.).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/instrumenta/kubeval/tree/master/kubeval"&gt;Kubeval&lt;/a&gt; and &lt;a href="https://github.com/yannh/kubeconform"&gt;kubeconform&lt;/a&gt; are command-line tools that were developed with the intent to validate Kubernetes manifests without the requirement of having a running Kubernetes environment. Because kubeconform is based on kubeval, they operate similarly — verification is performed against pre-generated JSON schemas that are created from the OpenAPI specifications (&lt;a href="https://raw.githubusercontent.com/kubernetes/kubernetes/master/api/openapi-spec/swagger.json"&gt;swagger.json&lt;/a&gt;) for each particular Kubernetes version. All that remains &lt;a href="https://github.com/datreeio/kubernetes-schema-validation#running-schema-validation-tests"&gt;to run&lt;/a&gt; the schema validation tests is to point the tool executable to a single manifest, directory or pattern.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vJ3Bo3hj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n6dd2b38kr7o57z9fxv9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vJ3Bo3hj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n6dd2b38kr7o57z9fxv9.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#comparing"&gt;
  &lt;/a&gt;
  Comparing
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;kubeval&lt;/li&gt;
&lt;li&gt;kubeconform&lt;/li&gt;
&lt;li&gt;kubectl dry-run in ‘client’ mode&lt;/li&gt;
&lt;li&gt;kubectl dry-run in ‘server’ mode&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now that we covered the tools that are available for Kubernetes schema validation, let’s compare some core abilities (misconfigurations coverage, speed test, different versions support, CRD support and docs).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#misconfigurations-coverage1"&gt;
  &lt;/a&gt;
  Misconfigurations coverage&lt;sup id="fnref1"&gt;&lt;a href="#fn1"&gt;1&lt;/a&gt;&lt;/sup&gt;
&lt;/h3&gt;

&lt;p&gt;I donned my QA hat and generated some (basic) Kubernetes manifest files with some &lt;a href="https://github.com/datreeio/kubernetes-schema-validation/tree/main/misconfigs"&gt;intended misconfigurations&lt;/a&gt;, and then ran it against all four tools&lt;sup id="fnref2"&gt;&lt;a href="#fn2"&gt;2&lt;/a&gt;&lt;/sup&gt;:&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Misconfig/Tool&lt;/th&gt;
&lt;th&gt;kubeval / kubeconform&lt;/th&gt;
&lt;th&gt;kubectl dry-run in ‘client’ mode&lt;/th&gt;
&lt;th&gt;kubectl dry-run in ‘server’ mode&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/datreeio/kubernetes-schema-validation#api-deprecationyaml"&gt;API deprecation&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;✅ Caught&lt;/td&gt;
&lt;td&gt;✅ Caught&lt;/td&gt;
&lt;td&gt;✅ Caught&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/datreeio/kubernetes-schema-validation#invalid-kind-valueyaml"&gt;Invalid kind value&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;✅ Caught&lt;/td&gt;
&lt;td&gt;❌ Didn't catch&lt;/td&gt;
&lt;td&gt;🚧 Caught&lt;sup id="fnref3"&gt;&lt;a href="#fn3"&gt;3&lt;/a&gt;&lt;/sup&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/datreeio/kubernetes-schema-validation#invalid-label-valueyaml"&gt;Invalid label value&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;❌ Didn't catch&lt;/td&gt;
&lt;td&gt;❌ Didn't catch&lt;/td&gt;
&lt;td&gt;✅ Caught&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/datreeio/kubernetes-schema-validation#invalid-protocol-typeyaml"&gt;Invalid protocol type&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;✅ Caught&lt;/td&gt;
&lt;td&gt;❌ Didn't catch&lt;/td&gt;
&lt;td&gt;✅ Caught&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/datreeio/kubernetes-schema-validation#invalid-spec-keyyaml"&gt;Invalid spec key&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;✅ Caught&lt;/td&gt;
&lt;td&gt;✅ Caught&lt;/td&gt;
&lt;td&gt;✅ Caught&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/datreeio/kubernetes-schema-validation#missing-imageyaml"&gt;Missing image&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;❌ Didn't catch&lt;/td&gt;
&lt;td&gt;❌ Didn't catch&lt;/td&gt;
&lt;td&gt;✅ Caught&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/datreeio/kubernetes-schema-validation#wrong-k8s-indentationyaml"&gt;Wrong K8s indentation&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;✅ Caught&lt;/td&gt;
&lt;td&gt;✅ Caught&lt;/td&gt;
&lt;td&gt;✅ Caught&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Conclusion: Running kubectl dry-run in ‘server’ mode caught all misconfigurations, while kubeval/kubeconform missed two of them. It’s also interesting to see that running kubectl dry-run in ‘client’ mode is almost useless because it’s missing some obvious misconfigurations, and also requires a connection to a running Kubernetes environment.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#benchmark-speed-test"&gt;
  &lt;/a&gt;
  Benchmark speed test
&lt;/h3&gt;

&lt;p&gt;I used &lt;a href="https://github.com/sharkdp/hyperfine"&gt;hyperfine&lt;/a&gt; to benchmark the execution time of each tool&lt;sup id="fnref4"&gt;&lt;a href="#fn4"&gt;4&lt;/a&gt;&lt;/sup&gt;. First I ran it against &lt;a href="https://github.com/datreeio/kubernetes-schema-validation/tree/main/misconfigs"&gt;(1)&lt;/a&gt; all the files with misconfigurations (seven files in total), and then I ran it against &lt;a href="https://github.com/datreeio/kubernetes-schema-validation/tree/main/benchmark"&gt;(2)&lt;/a&gt; 100 Kubernetes files (all the files contain the same config).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;(1)&lt;/strong&gt; Results for running the tools against seven files with different Kubernetes schema misconfigurations:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aPyo-bD3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/azbwpj5ppcf92pku1qiw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aPyo-bD3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/azbwpj5ppcf92pku1qiw.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;(2)&lt;/strong&gt; Results for running the tools against 100 files with valid Kubernetes schemas:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QdfLzRRB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/id0o1tf7t5ytg6vyqwdc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QdfLzRRB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/id0o1tf7t5ytg6vyqwdc.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Conclusion: We can see that while &lt;code&gt;kubeconform&lt;/code&gt; (#1), &lt;code&gt;kubeval&lt;/code&gt; (#2) and &lt;code&gt;kubectl --dry-run=client&lt;/code&gt; (#3) are providing fast results on both tests, while &lt;code&gt;kubectl --dry-run=server&lt;/code&gt; (#4) is working slower, especially when it needs to evaluate 100 files — 60 seconds for generating a result is still a good outcome in my opinion.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#kubernetes-versions-support"&gt;
  &lt;/a&gt;
  Kubernetes versions support
&lt;/h3&gt;

&lt;p&gt;Both kubeval and kubeconform accept the Kubernetes schema version as a flag. Although both tools are similar (as mentioned, kubeconfrom is based on kubeval), one of the key differences between them is that each tool relies on its own set of pre-generated JSON schemas:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Kubeval&lt;/strong&gt; - &lt;a href="https://github.com/instrumenta/kubernetes-json-schema"&gt;instrumenta/kubernetes-json-schema&lt;/a&gt; &lt;em&gt;(last commit: 133f848 on April 29, 2020)&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Kubeconform&lt;/strong&gt; - &lt;a href="https://github.com/yannh/kubernetes-json-schema"&gt;yannh/kubernetes-json-schema&lt;/a&gt; &lt;em&gt;(last commit: a660f03 on May 15, 2021)&lt;/em&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As of today (May 2021), kubeval only supports Kubernetes schema versions up to 1.18.1, while kubeconform supports the latest Kubernetes schema available today — 1.21.0. With kubectl, it’s a little bit trickier. I don’t know which version of kubectl introduced the dry-run, but I tried it with Kubernetes version 1.16.0 and it still worked, so I know it’s available in Kubernetes versions 1.16.0-1.18.0.&lt;/p&gt;

&lt;p&gt;The variety of Kubernetes schemas support is especially important if you want to migrate to a new Kubernetes version. With kubeval and kubeconform you can set the version and start the process of evaluating which configurations must be changed to support the cluster upgrade.&lt;/p&gt;

&lt;p&gt;Conclusion: The fact that kubeconform has all the schemas for all the different Kubernetes versions available — and also doesn’t require minikube setup (as kubectl does) — makes it a superior tool when comparing these capabilities to its alternatives.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#other-things-to-consider"&gt;
  &lt;/a&gt;
  Other things to consider
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Custom Resource Definition (CRD) support&lt;/strong&gt;&lt;br&gt;
Both kubectl dry-run and kubeconform support resource type &lt;a href="https://kubernetes.io/docs/concepts/extend-kubernetes/api-extension/custom-resources/"&gt;CRD&lt;/a&gt;, while kubeval does not. According to kubeval docs, you can pass a flag to kubeval to ignore missing schemas, so it will not fail when testing a bunch of manifests for which only some are resource type CRD.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Documentation&lt;/strong&gt; &lt;br&gt;
Kubeval is a more popular project than kubeconform, and therefore, its community and &lt;a href="https://kubeval.instrumenta.dev/"&gt;documentation&lt;/a&gt; are more extensive. Kubeconform doesn't have official docs but it does have a well-written &lt;a href="https://github.com/yannh/kubeconform/blob/master/Readme.md"&gt;README&lt;/a&gt; file that explains pretty well its capabilities. The interesting part is that although Kubernetes native tools, like kubectl, are usually well-documented, it was really hard to find the necessary information needed to understand how the &lt;code&gt;dry-run&lt;/code&gt; flag actually works and its limitations.&lt;/p&gt;

&lt;p&gt;Conclusion: Although it’s not as famous as kubeval, the CRD support and good-enough documentation make kubeconform the winner in my opinion.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#comparison-summary"&gt;
  &lt;/a&gt;
  Comparison summary
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Item/Tool&lt;/th&gt;
&lt;th&gt;kubeval&lt;/th&gt;
&lt;th&gt;kubeconform&lt;/th&gt;
&lt;th&gt;dry-run client&lt;/th&gt;
&lt;th&gt;dry-run server&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Misconfigurations coverage&lt;/td&gt;
&lt;td&gt;+/-&lt;/td&gt;
&lt;td&gt;+/-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;+&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Benchmark speed test&lt;/td&gt;
&lt;td&gt;+/-&lt;/td&gt;
&lt;td&gt;+&lt;/td&gt;
&lt;td&gt;+/-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Kubernetes versions support&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;+&lt;/td&gt;
&lt;td&gt;+/-&lt;/td&gt;
&lt;td&gt;+/-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;CRD support&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;+&lt;/td&gt;
&lt;td&gt;+&lt;/td&gt;
&lt;td&gt;+&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Documentation&lt;/td&gt;
&lt;td&gt;+&lt;/td&gt;
&lt;td&gt;+/-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Now that you know the pros and cons associated with each tool, here are some best practices for how to best leverage them within your Kubernetes production-scale development flow. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#strategies-for-validating-kubernetes-schema-using-these-tools"&gt;
  &lt;/a&gt;
  Strategies for validating Kubernetes schema using these tools
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;⬅️ Shift-left: When possible, the best setup is if you can run &lt;code&gt;kubectl --dry-run=server&lt;/code&gt; on every code change, but you probably can’t do it because you can’t allow every developer or CI machine in your organization to have a connection to your cluster. So, the second-best effort is to run kubeconform. &lt;/li&gt;
&lt;li&gt;🚔 Because kubeconform doesn’t cover all common misconfigurations, it’s recommended to run it with a policy enforcement tool on every code change to fill the coverage gap.&lt;/li&gt;
&lt;li&gt;💸 Buy vs. build: If you enjoy the &lt;a href="https://jrott.com/posts/why-buy/"&gt;engineering overhead&lt;/a&gt;, then kubeconform + &lt;a href="https://www.conftest.dev/"&gt;conftest&lt;/a&gt; is a great combination of tools to get good coverage. Alternatively, there are tools that can provide you with an out-of-the-box experience to help you save time and resources, such as &lt;a href="https://hub.datree.io/schema-validation/?utm_source=dev.to&amp;amp;utm_medium=schema-validation"&gt;Datree&lt;/a&gt;&lt;sup id="fnref5"&gt;&lt;a href="#fn5"&gt;5&lt;/a&gt;&lt;/sup&gt; (whose schema validation is powered by kubeconform).&lt;/li&gt;
&lt;li&gt;🚀 During the CD step, it shouldn’t be a problem to have a connection with your cluster, so you should always run &lt;code&gt;kubectl --dry-run=server&lt;/code&gt; before deploying your new code changes. &lt;/li&gt;
&lt;li&gt;👯 Another option for using kubectl dry-run in server mode, without having a connection to your Kubernetes environment, is to run minikube + &lt;code&gt;kubectl --dry-run=server&lt;/code&gt;. The downside of this hack is that it’s also required to set up the minikube cluster like prod (same volumes, namespace, etc.) or you’ll encounter errors when trying to validate your Kubernetes manifests.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#gratitude"&gt;
  &lt;/a&gt;
  GRATITUDE
&lt;/h4&gt;

&lt;p&gt;&lt;em&gt;Thank you to &lt;a href="https://github.com/yannh"&gt;Yann Hamon&lt;/a&gt; for creating kubeconform - it’s awesome!&lt;/em&gt;&lt;br&gt;
&lt;em&gt;This article wouldn’t be possible without you. Thank you for all of your guidance.&lt;/em&gt;&lt;/p&gt;




&lt;ol&gt;

&lt;li id="fn1"&gt;
&lt;p&gt;All the schemas validation tests performed against Kubernetes version 1.18.0 &lt;a href="#fnref1"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li id="fn2"&gt;
&lt;p&gt;Because kubeconform is based on kubeval, they provide the same result and run them against the files with the misconfigurations. kubectl is one tool but each mode (client or server) produces a different result as you can see from the table &lt;a href="#fnref2"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li id="fn3"&gt;
&lt;p&gt;Server mode didn’t mark the file as valid (exit code 1) but the error message is wrong: &lt;code&gt;Kind=pod doesn't support dry-run&lt;/code&gt; &lt;a href="#fnref3"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li id="fn4"&gt;
&lt;p&gt;All benchmark test performed on my MacBook Pro with a 2.3 GHz Quad-Core Intel Core i7 processor &lt;a href="#fnref4"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li id="fn5"&gt;
&lt;p&gt;Disclaimer - self-promotion here :) &lt;a href="#fnref5"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;/ol&gt;

</description>
      <category>kubernetes</category>
      <category>devops</category>
      <category>tutorial</category>
      <category>gitops</category>
    </item>
    <item>
      <title>Do you have a YouTube channel? If so share it here</title>
      <author>Bobby Iliev</author>
      <pubDate>Tue, 01 Jun 2021 10:18:48 +0000</pubDate>
      <link>https://dev.to/bobbyiliev/do-you-have-a-youtube-channel-if-so-share-it-here-5f82</link>
      <guid>https://dev.to/bobbyiliev/do-you-have-a-youtube-channel-if-so-share-it-here-5f82</guid>
      <description>&lt;p&gt;Do you have a YouTube channel?&lt;/p&gt;

&lt;p&gt;Please share a link 🔗 to it here so that we all can see it, and watch some of your videos!&lt;/p&gt;

&lt;p&gt;Thank you! 🎉&lt;/p&gt;

&lt;p&gt;I will start.&lt;/p&gt;

&lt;p&gt;Here is the link to &lt;a href="https://www.youtube.com/channel/UCQWmdHTeAO0UvaNqve9udRw"&gt;my channel&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Feel free to share your feedback!&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>showdev</category>
    </item>
    <item>
      <title>I made 100 more CSS loaders for your next project</title>
      <author>Temani Afif</author>
      <pubDate>Tue, 01 Jun 2021 10:15:30 +0000</pubDate>
      <link>https://dev.to/afif/i-made-100-more-css-loaders-for-your-next-project-4ioa</link>
      <guid>https://dev.to/afif/i-made-100-more-css-loaders-for-your-next-project-4ioa</guid>
      <description>&lt;p&gt;not 100, not 200 but 300! Yes, a new collection and a total of 300 CSS loaders. &lt;/p&gt;

&lt;p&gt;This time, I am going to rely on more elements to create the loaders ... No, I am joking 😜, still only &lt;strong&gt;one&lt;/strong&gt; &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; per loader, nothing more!&lt;/p&gt;

&lt;p&gt;PS: I wanted to make it clear that all what I am sharing is my own work done from scratch. It's &lt;strong&gt;not&lt;/strong&gt; a listing of other people works. it's &lt;strong&gt;not&lt;/strong&gt; a collection of CSS loaders picked from different places. I only share what &lt;strong&gt;I&lt;/strong&gt; have done. To be used for free of course.&lt;/p&gt;

&lt;p&gt;Let's go!&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#table-of-content"&gt;
  &lt;/a&gt;
  Table of content
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#the-classic-iii"&gt;The Classic III&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-dots-iii"&gt;The Dots III&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-hypnotic-ii"&gt;The Hypnotic II&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-bars-ii"&gt;The Bars II&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-spinner-iii"&gt;The Spinner III&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-dots-vs-the-bars"&gt;The Dots vs The Bars&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-nature"&gt;The Nature&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-time"&gt;The Time&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-shapes-iii"&gt;The Shapes III&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-hungry"&gt;The Hungry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-discord"&gt;The Discord&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-ben"&gt;The Ben&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#the-classic-iii"&gt;
  &lt;/a&gt;
  The Classic III
&lt;/h3&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/WNpddpq?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-dots-iii"&gt;
  &lt;/a&gt;
  The Dots III
&lt;/h3&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/mdWppmj?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-hypnotic-ii"&gt;
  &lt;/a&gt;
  The Hypnotic II
&lt;/h3&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/gOmooRQ?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-bars-ii"&gt;
  &lt;/a&gt;
  The Bars II
&lt;/h3&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/zYZppdN?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-spinner-iii"&gt;
  &lt;/a&gt;
  The Spinner III
&lt;/h3&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/ZEevvXW?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;sup&gt;The last spinner is detailed in a &lt;a href="https://stackoverflow.com/a/55159993/8620333"&gt;Stack Overflow answer I gave&lt;/a&gt;&lt;/sup&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-dots-vs-the-bars"&gt;
  &lt;/a&gt;
  The Dots vs The Bars
&lt;/h3&gt;

&lt;p&gt;They start as friends but ...&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/gOmooGQ?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;To be continued ...&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-nature"&gt;
  &lt;/a&gt;
  The Nature
&lt;/h3&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/qBrppVV?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-time"&gt;
  &lt;/a&gt;
  The Time
&lt;/h3&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/eYvyyyd?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-shapes-iii"&gt;
  &lt;/a&gt;
  The Shapes III
&lt;/h3&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/bGqaaaP?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-hungry"&gt;
  &lt;/a&gt;
  The Hungry
&lt;/h3&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/abJEEqw?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-discord"&gt;
  &lt;/a&gt;
  The Discord
&lt;/h3&gt;

&lt;p&gt;Someone challenged me so I had to do it.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/BaWJJre?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;It's not a perfect replicate but close enough 😁&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-ben"&gt;
  &lt;/a&gt;
  The Ben
&lt;/h3&gt;

&lt;p&gt;A last one for the fun. I added a click handler to avoid the spoils. Click and wait until the end &lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/MWprrGe?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;A small joke to remind you that even if you use a loader, your website need to be fast 😉 and yes Ben is done with pure CSS, I am not using any image. I know it's crazy...&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#thats-it"&gt;
  &lt;/a&gt;
  That's it!
&lt;/h3&gt;

&lt;p&gt;I hope you enjoyed this 3rd collection. If you want more don't forget to ❤🦄! If you have some funny or crazy ideas of loaders you want me to do, leave a comment 👇&lt;/p&gt;

&lt;p&gt;I don't do only loaders if you want more fun:&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/afif" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jSZolrIL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--5k2bquNj--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/577896/343fde9f-609b-419b-95d1-07d16b320a37.png" alt="afif image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/afif/100-more-underline-overlay-animations-the-upgraded-css-collection-4c25" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;100 more underline/overlay animations | The upgraded CSS collection 🥇🥈🥉&lt;/h2&gt;
      &lt;h3&gt;Temani Afif ・ Apr 15 ・ 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#codepen&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


</description>
      <category>css</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>html</category>
    </item>
  </channel>
</rss>
