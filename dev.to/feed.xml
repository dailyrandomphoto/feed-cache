<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Microsoft Server Üzerinde SQLite Kurulumu</title>
      <author>Zeki Ahmet Bayar</author>
      <pubDate>Tue, 24 Aug 2021 12:43:10 +0000</pubDate>
      <link>https://dev.to/aciklab/microsoft-server-uzerinde-sqlite-kurulumu-23k0</link>
      <guid>https://dev.to/aciklab/microsoft-server-uzerinde-sqlite-kurulumu-23k0</guid>
      <description>&lt;p&gt;SQLite bilindiği gibi çokça tercih edilen bir veri tabanı yazılımı. Diğer veri tabanı yazılımlarına göre daha sade olması ile öne çıkan SQLite'ın Microsoft Server 2016 üzerinde bir Powershell scripti içerisinde nasıl kullanılacağını beraber inceleyelim.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#versiyon-kontrol%C3%BC"&gt;
  &lt;/a&gt;
  Versiyon kontrolü
&lt;/h3&gt;

&lt;p&gt;Bu aşamada sistemimizle alakalı bazı versiyon bilgilerini öğreneceğiz. Bu bilgiler bize bir sonraki adım olan indirme adımında hangi SQLite versiyonunu indireceğimize karar verirken yardımcı olacak.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight powershell"&gt;&lt;code&gt;&lt;span class="n"&gt;PS&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;IntPtr&lt;/span&gt;&lt;span class="p"&gt;]::&lt;/span&gt;&lt;span class="nx"&gt;Size&lt;/span&gt;&lt;span class="w"&gt; 

&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;komutu sisteminizin kaç bit görmemize yardımcı olur. Bu komuttan 8 çıktısını alıyorsanız 64, 4 çıktısını alıyorsanız 32 bit bir sisteme sahip olduğunuz anlamına gelir.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight powershell"&gt;&lt;code&gt;&lt;span class="n"&gt;PS&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="bp"&gt;$PSVersionTable&lt;/span&gt;&lt;span class="w"&gt;


&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="w"&gt;                           &lt;/span&gt;&lt;span class="nx"&gt;Value&lt;/span&gt;&lt;span class="w"&gt;                                                                                                                                                                                                                             
&lt;/span&gt;&lt;span class="o"&gt;----&lt;/span&gt;&lt;span class="w"&gt;                           &lt;/span&gt;&lt;span class="o"&gt;-----&lt;/span&gt;&lt;span class="w"&gt;                                                                                                                                                                                                                             
&lt;/span&gt;&lt;span class="n"&gt;PSVersion&lt;/span&gt;&lt;span class="w"&gt;                      &lt;/span&gt;&lt;span class="nx"&gt;5.1.14393.693&lt;/span&gt;&lt;span class="w"&gt;                                                                                                                                                                                                                     
&lt;/span&gt;&lt;span class="n"&gt;PSEdition&lt;/span&gt;&lt;span class="w"&gt;                      &lt;/span&gt;&lt;span class="nx"&gt;Desktop&lt;/span&gt;&lt;span class="w"&gt;                                                                                                                                                                                                                           
&lt;/span&gt;&lt;span class="n"&gt;PSCompatibleVersions&lt;/span&gt;&lt;span class="w"&gt;           &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;2.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;3.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;4.0&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;                                                                                                                                                                                                           
&lt;/span&gt;&lt;span class="n"&gt;BuildVersion&lt;/span&gt;&lt;span class="w"&gt;                   &lt;/span&gt;&lt;span class="nx"&gt;10.0.14393.693&lt;/span&gt;&lt;span class="w"&gt;                                                                                                                                                                                                                    
&lt;/span&gt;&lt;span class="n"&gt;CLRVersion&lt;/span&gt;&lt;span class="w"&gt;                     &lt;/span&gt;&lt;span class="nx"&gt;4.0.30319.42000&lt;/span&gt;&lt;span class="w"&gt;                                                                                                                                                                                                                   
&lt;/span&gt;&lt;span class="n"&gt;WSManStackVersion&lt;/span&gt;&lt;span class="w"&gt;              &lt;/span&gt;&lt;span class="nx"&gt;3.0&lt;/span&gt;&lt;span class="w"&gt;                                                                                                                                                                                                                               
&lt;/span&gt;&lt;span class="n"&gt;PSRemotingProtocolVersion&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nx"&gt;2.3&lt;/span&gt;&lt;span class="w"&gt;                                                                                                                                                                                                                               
&lt;/span&gt;&lt;span class="n"&gt;SerializationVersion&lt;/span&gt;&lt;span class="w"&gt;           &lt;/span&gt;&lt;span class="nx"&gt;1.1.0.1&lt;/span&gt;&lt;span class="w"&gt;            
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;komut çıktısında ise ihtiyacımız olan CLRVersion bilgisi. Örneğin yukarıdaki çıktı için bu bilgi bize .NET 4.0 sürümünü kullanmamız gerektiğini ifade ediyor.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#uygun-sqlite-s%C3%BCr%C3%BCm%C3%BCn%C3%BCn-i%CC%87ndirilmesi"&gt;
  &lt;/a&gt;
  Uygun SQLite Sürümünün İndirilmesi
&lt;/h3&gt;

&lt;p&gt;SQLite &lt;a href="https://system.data.sqlite.org/index.html/doc/trunk/www/downloads.wiki"&gt;indirme bağlantısına&lt;/a&gt; giderek edindiğimiz versiyon bilgilerine göre sistemimize uygun SQLite sürümünü indirelim. Bu işlem tarayıcı ya da komut satırı üzerinden gerçekleştirilebilir.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--alIohtq3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a6jdo3tybx0gqtc04dj0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--alIohtq3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a6jdo3tybx0gqtc04dj0.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;PS&amp;gt; Invoke-WebRequest -Uri "https://system.data.sqlite.org/blobs/1.0.114.0/sqlite-netFx45-binary-bundle-Win32-2012-1.0.114.0.zip" -OutFile C:\Windows\Temp\sqlite.zip
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Sıkıştırılmış dosya indirildikten sonra arayüz ya da komut satırı üzerinden ilgili dizine çıkartılmalıdır.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;mkdir C:\Windows\sqlite
Expand-Archive C:\Temp\sqlite.zip -DestinationPath C:\Windows\sqlite
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#i%CC%87ndirilen-dosyan%C4%B1n-sisteme-eklenmesi"&gt;
  &lt;/a&gt;
  İndirilen Dosyanın Sisteme Eklenmesi
&lt;/h3&gt;

&lt;p&gt;İndirilen SQLite dosyasının aşağıdaki gibi sisteme eklenmesi gerekmektedir.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;PS&amp;gt; Add-Type -Path "C:\Windows\sqlite\System.Data.SQLite.dll"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>sql</category>
      <category>sqlite</category>
      <category>powershell</category>
    </item>
    <item>
      <title>Interviews are about telling a story</title>
      <author>Laurie</author>
      <pubDate>Tue, 24 Aug 2021 12:34:23 +0000</pubDate>
      <link>https://dev.to/laurieontech/interviews-are-about-telling-a-story-21no</link>
      <guid>https://dev.to/laurieontech/interviews-are-about-telling-a-story-21no</guid>
      <description>&lt;p&gt;Last week I was in &lt;a href="https://twitter.com/DThompsonDev"&gt;Danny Thompson's&lt;/a&gt; twitter space talking about tech interviews. One piece of advice I gave was about preparing for conversational interviews and the types of questions you get asked.&lt;/p&gt;

&lt;p&gt;Apparently, people wanted to learn more!  And as always, I'm happy to oblige.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tech-interviews-arent-only-about-code"&gt;
  &lt;/a&gt;
  Tech Interviews aren't only about code
&lt;/h2&gt;

&lt;p&gt;You may be familiar with guides for studying and preparing to ace tech interviews. Oftentimes they focus on algorithms and data structures. You'll also find write-ups and websites on studying for systems design interviews and other abstract exercises. Prepping for these types of questions are great. However, they aren't the only type of interview rounds you're likely to encounter.&lt;/p&gt;

&lt;p&gt;In most interview processes you'll have rounds that are very conversational in nature. They're typically a mix of technical and people skills questions. This post is about setting yourself up for success in these interviews.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-type-of-questions-can-you-expect"&gt;
  &lt;/a&gt;
  What type of questions can you expect?
&lt;/h2&gt;

&lt;p&gt;The interviewer in conversational rounds can be anyone from a manager to a colleague to a skip level director. However, their goal is often the same. How do you collaborate? How do you communicate? What level of experience do you have handling challenges that are both technical and people-focused?&lt;/p&gt;

&lt;p&gt;Examples of the types of questions they might ask are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Tell me about a time where you had to say no to a request?&lt;/li&gt;
&lt;li&gt;Have you ever had to give feedback to a more senior engineer? Can you tell me about that?&lt;/li&gt;
&lt;li&gt;What mistakes have you made in implementing a system? What would you do differently next time?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are hundreds of these types of questions, but you get the idea.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-does-a-good-answer-look-like"&gt;
  &lt;/a&gt;
  What does a good answer look like?
&lt;/h2&gt;

&lt;p&gt;Sometimes these answers explicitly ask for a story, e.g. "tell me about a time". Sometimes it's less overt and they say "how would you handle". In either case, having a real life example you can point to helps ground your answer and show the experience you have.&lt;/p&gt;

&lt;p&gt;Stories should have a beginning, a middle and an end. They should show a positive outcome or an outcome where you can point to the mistakes that were made and what you'd do differently. They also need to be clear, concise and effective. Most importantly, the story needs to clearly connect to the question being asked.&lt;/p&gt;

&lt;p&gt;This sounds like a lot to ask on the spot! You have to think about the question, come up with an anecdote, package it well, and relay it back to the interviewer. All in 5 or so minutes, maybe less. Yikes!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how"&gt;
  &lt;/a&gt;
  How?!
&lt;/h2&gt;

&lt;p&gt;This is where my original advice comes into play. You don't need to think of every question you might be asked. But you should think of some stories ahead of time.&lt;/p&gt;

&lt;p&gt;Have 3-5 stories in your back pocket going into an interview. They should highlight different aspects of your collaboration and communication style so that they can fit the questions being asked.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A story where you did everything right&lt;/li&gt;
&lt;li&gt;A story where you did something wrong and learned from it&lt;/li&gt;
&lt;li&gt;A story involving a peer&lt;/li&gt;
&lt;li&gt;A story involving management&lt;/li&gt;
&lt;li&gt;A story involving another team, company, or external player&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This list isn't exhaustive, but it will help you start thinking about some good anecdotes. Once you've zeroed in on your stories you can start to practice talking about them.&lt;/p&gt;

&lt;p&gt;When prepping a story consider an interview enviroment. You want to:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Get to the point quickly - remove any extraneous or overly detailed pieces of information&lt;/li&gt;
&lt;li&gt;Be clear - beginning, middle and end, make sure that your point comes across&lt;/li&gt;
&lt;li&gt;Connect to the question - this takes some practice, but try and mention the keywords of the question as you're concluding the story and drive home how it connects&lt;/li&gt;
&lt;li&gt;Show off - this doesn't mean you should brag, but try and show yourself in a positive light, even when the story involves a misadventure&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Thinking through all of this ahead of time will give you confidence going into these types of interviews. You won't be stuck trying to think of a good anecdote in live time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#important-caveats"&gt;
  &lt;/a&gt;
  Important caveats
&lt;/h2&gt;

&lt;p&gt;There are a couple mistakes to avoid.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;If they ask for a time you weren't successful, don't use a story where you were. Always have a story for when you messed up. Be able to analyze what you could have done differently, but don't avoid the point of the question.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You don't need to be an engineer to answer these questions well. If you are a career changer you can tell a story involving retail managers, your fellow line cook, the military. Whatever it is, this is a great opportunity to show how your current experience relates to the role and why you have more to offer than someone straight out of school.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#interviews-are-about-you"&gt;
  &lt;/a&gt;
  Interviews are about you
&lt;/h2&gt;

&lt;p&gt;For all the flaws with technical interviews, conversational interviews are different. You don't need to be the most outgoing person in the room or have studied a textbook worth of potential questions. A few focused areas of prep will help you show off your skills and experience.&lt;/p&gt;

</description>
      <category>career</category>
      <category>interview</category>
      <category>beginners</category>
      <category>productivity</category>
    </item>
    <item>
      <title>5 Things to do before making the build for Production. (React JS)</title>
      <author>Atul Bhatt</author>
      <pubDate>Tue, 24 Aug 2021 12:25:58 +0000</pubDate>
      <link>https://dev.to/atulbhattsystem32/5-things-to-do-before-making-the-build-for-production-react-js-j8b</link>
      <guid>https://dev.to/atulbhattsystem32/5-things-to-do-before-making-the-build-for-production-react-js-j8b</guid>
      <description>&lt;p&gt;This article is not something you might not already know but maybe you might not have it all listed in a one place. There can be more things that I'll surely be missing in this article which I would like you to mention down in the comments so that I can compile another part to this article. And this is a beginner level post.&lt;/p&gt;

&lt;p&gt;So let's start on listing the things that I feel one should do before pushing their production build. These are the things that I have used for the react project I have built but they are definitely the points which can surely be helpful in other projects.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; Clearing all the &lt;code&gt;console.logs&lt;/code&gt; that are absolutely not intended for the users. And it's rare that &lt;code&gt;console.logs&lt;/code&gt; are there for users.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt; Remove all the &lt;code&gt;commented code&lt;/code&gt; which doesn't serves any purpose or in the end is just misleading. Comments are meant for giving extra context to why something has been done not the other way around.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9C7MQvmU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7ttpxsa5z79q4077anq4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9C7MQvmU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7ttpxsa5z79q4077anq4.png" alt="Screenshot (309)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The above screenshot depicts how there is a &lt;code&gt;useless console log&lt;/code&gt; which the developer might have used for the &lt;code&gt;testing purpose&lt;/code&gt; which should be &lt;code&gt;removed&lt;/code&gt; once everything is wrapped up in development and the project is ready for getting into production.&lt;/p&gt;

&lt;p&gt;Another thing worth keeping note is the commented code which serves no purpose in the end.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;3.&lt;/strong&gt; Removing all the &lt;code&gt;unused npm packages&lt;/code&gt; and &lt;code&gt;libraries&lt;/code&gt; that are installed.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4.&lt;/strong&gt; Deleting all the &lt;code&gt;unused files&lt;/code&gt; that are just clogging up.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;It might feel overwhelming to find all the unused packages and files manually but don't you worry.&lt;br&gt;
As the diamond cuts the diamond, in the same way we will use another package to remove the dead files. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You can follow the packages below:&lt;br&gt;
&lt;a href="https://www.npmjs.com/package/depcheck"&gt;depcheck&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.npmjs.com/package/unimported"&gt;unimported&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KmXtWWmb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/935ega4ef8386v4uqz5k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KmXtWWmb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/935ega4ef8386v4uqz5k.png" alt="Screenshot (119)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5.&lt;/strong&gt; Check how the build works by &lt;code&gt;serving the build&lt;/code&gt; in react. I know that I used to create a build and then push it to staging server to check how it will behave there because I wasn't aware of the fact that React offers this functionality. It's always good to check your build before pushing it to the server.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NzF2Hvkt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pfijqotdyhfohsq6zfqk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NzF2Hvkt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pfijqotdyhfohsq6zfqk.png" alt="Screenshot (310)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;So basically this is not about improving the code or optimizing it. These things go hand in hand when you are doing development.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;The goal🎯 of this article is primarily on giving the finishing touch to your React Web App before making it live in the production.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;I hope this article was helpful to you. I would be more than happy to receive your feedback on this article. Thanks for your precious time reading this. Stay tuned for more insightful reading by me.😊&lt;/em&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>react</category>
      <category>writing</category>
    </item>
    <item>
      <title>All about .NET MAUI (+15 NEW Features)🏅</title>
      <author>Dotnetsafer</author>
      <pubDate>Tue, 24 Aug 2021 11:56:37 +0000</pubDate>
      <link>https://dev.to/dotnetsafer/all-about-net-maui-15-new-features-4dge</link>
      <guid>https://dev.to/dotnetsafer/all-about-net-maui-15-new-features-4dge</guid>
      <description>&lt;p&gt;.NET MAUI means &lt;strong&gt;.NET Multi-Platform&lt;/strong&gt; App User Interface and allows us to build native desktop and mobile apps with a single code base. .NET MAUI will be running on .NET 6, which will be released in &lt;strong&gt;November 2021.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;According to Microsoft, .NET MAUI is an &lt;strong&gt;evolution&lt;/strong&gt; of Xamarin Forms with rebuilt controls from the group up for performance and extensibility.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#whats-the-difference-between-net-maui-and-xamarin-forms"&gt;
  &lt;/a&gt;
  What’s the difference between .NET MAUI and Xamarin Forms?
&lt;/h2&gt;

&lt;p&gt;With .NET MAUI based on .NET 6, the evolution of Xamarin Forms will be integrated into the new world of a single .NET.&lt;/p&gt;

&lt;p&gt;With .NET 6 native app development becomes part of .NET like other frameworks such as &lt;strong&gt;ASP.NET Core&lt;/strong&gt; already have with &lt;strong&gt;.NET 5.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In .NET MAUI, &lt;strong&gt;all your code is in a single project&lt;/strong&gt; compared to Xamarin Forms, where you had to have a project for every platform. It should reduce complexity and make it an overall better developer experience.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#net-maui-features-lets-start-with-basics"&gt;
  &lt;/a&gt;
  🟢.NET MAUI features: Let’s start with basics
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#support"&gt;
  &lt;/a&gt;
  🟢Support
&lt;/h3&gt;

&lt;p&gt;.NET 6 will be released in November 2021 and will be supported for three years, as a Long Term Support (LTS) release. The platform matrix has been significantly expanded compared to .NET 5.&lt;/p&gt;

&lt;p&gt;The additions are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Android.&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;iOS.&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Mac&lt;/strong&gt; and &lt;strong&gt;Mac Catalyst&lt;/strong&gt;, for x64 and Apple Silicon (AKA “M1”).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Windows Arm64 (specifically &lt;strong&gt;Windows Desktop&lt;/strong&gt;).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;.NET 6 Debian container images are based on Debian 11 (“bullseye”), which is currently in testing.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h3&gt;
  &lt;a href="#startup"&gt;
  &lt;/a&gt;
  🟢 Startup
&lt;/h3&gt;

&lt;p&gt;The .NET MAUI applications will use a Startup class that will allow:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Configure&lt;/strong&gt; method to pipe service registration, handler registration, or application customization processes.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Be able to &lt;strong&gt;create&lt;/strong&gt; a custom HostBuilder.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For instance 👇&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;Configure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;IAppHostBuilder&lt;/span&gt; &lt;span class="n"&gt;appBuilder&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;     
  &lt;span class="n"&gt;appBuilder&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;appBuilder&lt;/span&gt;         
 &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;UseCompatibilityRenderers&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;         
 &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;UseMauiApp&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;MyApp&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;();&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;By default, if you don’t want to customize anything special, or you want to use your own dependency container or something, you can.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#accessibility"&gt;
  &lt;/a&gt;
  🟢 Accessibility
&lt;/h3&gt;

&lt;p&gt;Adding more control and improving the accessibility &lt;strong&gt;API&lt;/strong&gt; to avoid confusion in addition to aligning the behavior in all cases and platforms is one of the priorities in one of the sections with such importance as accessibility.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Entry&lt;/span&gt;     
  &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Entry text TH"&lt;/span&gt;     
  &lt;span class="n"&gt;FontSize&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"14"&lt;/span&gt;     
  &lt;span class="n"&gt;SemanticProperties&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Description&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Description text"&lt;/span&gt;    
  &lt;span class="n"&gt;SemanticProperties&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Hint&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Hint text"&lt;/span&gt;&lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The concept of &lt;strong&gt;SemanticProperties&lt;/strong&gt; is added. Microsoft are talking about a series of properties that add extra information to Views to allow it to correctly interpret what happens when using the screen reader, or keyboard navigation.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#workload-installation"&gt;
  &lt;/a&gt;
  🟢 Workload Installation
&lt;/h3&gt;

&lt;p&gt;As part of &lt;strong&gt;.NET&lt;/strong&gt; unification, Microsoft have introduced the concept of SDK workloads to enable specific developer scenarios on top of the .NET SDK. In previous preview the underlying SDKs for &lt;strong&gt;iOS, Mac Catalyst, macOS, Android&lt;/strong&gt; were enabled. Now they are introducing the maui, maui-desktop, maui-mobile and workloads. The first will acquire and install all the required SDKs for building .NET MAUI applications.&lt;/p&gt;

&lt;p&gt;In the near future &lt;strong&gt;Visual Studio 2022&lt;/strong&gt; will include these with its installer.&lt;/p&gt;

&lt;p&gt;If you want use them, just open a CLI and check what you have installed 👇&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="n"&gt;dotnet&lt;/span&gt; &lt;span class="n"&gt;sdk&lt;/span&gt; &lt;span class="n"&gt;check&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--H5osV6Yb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1050/1%2A7MQ88aV7HyNHMpcD0SNfCA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H5osV6Yb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1050/1%2A7MQ88aV7HyNHMpcD0SNfCA.png" alt="Checking dotnet sdk version&amp;lt;br&amp;gt;
"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After verifying what’s installed, you can see how the additional workloads are running 👇&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="n"&gt;dotnet&lt;/span&gt; &lt;span class="n"&gt;workload&lt;/span&gt; &lt;span class="n"&gt;list&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FfwOWmXe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1050/1%2AQPgx0DyQUuNW_lnFWeMZfw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FfwOWmXe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1050/1%2AQPgx0DyQUuNW_lnFWeMZfw.png" alt="Checking additional workloads&amp;lt;br&amp;gt;
"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Finally to install .NET MAUI you need to execute 👇&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="n"&gt;dotnet&lt;/span&gt; &lt;span class="n"&gt;workload&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;maui&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#net-maui-features-ui-and-ux"&gt;
  &lt;/a&gt;
  🟡.NET MAUI features: UI and UX
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#shared-fonts-images-and-app-icons"&gt;
  &lt;/a&gt;
  🟡Shared fonts, images, and app icons
&lt;/h3&gt;

&lt;p&gt;Fonts and images can be placed in one location in your solution and .NET MAUI will enable them to natively work on all platforms you target. These are tracked in your *.csproj as SharedImage and SharedFont.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ItemGroup&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;SharedImage&lt;/span&gt; &lt;span class="n"&gt;Include&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"appicon.svg"&lt;/span&gt; &lt;span class="n"&gt;ForegroundFile&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"appiconfg.svg"&lt;/span&gt; &lt;span class="n"&gt;IsAppIcon&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"true"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;SharedFont&lt;/span&gt; &lt;span class="n"&gt;Include&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Resources\Fonts\ionicons.ttf"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;ItemGroup&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Both accept wildcards to include all files within a location.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ItemGroup&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;SharedImage&lt;/span&gt; &lt;span class="n"&gt;Include&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"appicon.svg"&lt;/span&gt; &lt;span class="n"&gt;ForegroundFile&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"appiconfg.svg"&lt;/span&gt; &lt;span class="n"&gt;IsAppIcon&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"true"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;SharedImage&lt;/span&gt; &lt;span class="n"&gt;Include&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Resources\Images*"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;SharedFont&lt;/span&gt; &lt;span class="n"&gt;Include&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Resources\Fonts*"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;ItemGroup&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#font-scaling"&gt;
  &lt;/a&gt;
  🟡 Font Scaling
&lt;/h3&gt;

&lt;p&gt;All controls across all platforms now have font scaling enabled by default. This means as your application users adjust their text scaling preferences in the OS, your &lt;strong&gt;UI&lt;/strong&gt; will reflect their choice. This produces a more accessible app by default.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DUN_GIjI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1050/1%2AN6J5nyt4BkCfJep908esRQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DUN_GIjI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1050/1%2AN6J5nyt4BkCfJep908esRQ.png" alt=".NET MAUI font scaling feature&amp;lt;br&amp;gt;
"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Each control has an added FontAutoScalingEnabled, and it even works with FontImageSource or your font icons. Setting a FontSize is your 100% size, and to lock it in you’ll set FontAutoScalingEnabled =”false" 👇&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;VerticalStackLayout&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Label&lt;/span&gt;
    &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Scaling disabled"&lt;/span&gt;
    &lt;span class="n"&gt;FontSize&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"18"&lt;/span&gt;
    &lt;span class="n"&gt;FontAutoScalingEnabled&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"False"&lt;/span&gt;&lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Label&lt;/span&gt;
    &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Scaling enabled"&lt;/span&gt;
    &lt;span class="n"&gt;FontSize&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"18"&lt;/span&gt;&lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;VerticalStackLayout&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#new-layouts"&gt;
  &lt;/a&gt;
  🟡 New Layouts
&lt;/h3&gt;

&lt;p&gt;Microsoft also tells us that the layouts that have been used in the &lt;strong&gt;.NET MAUI&lt;/strong&gt; are the &lt;strong&gt;Xamarin.Forms&lt;/strong&gt; layouts. They say they started with that approach to quickly get the user interface on screen and focus on completing their library of &lt;strong&gt;UI 40&lt;/strong&gt; controls.&lt;/p&gt;

&lt;p&gt;At the same time, they have been creating streamlined layouts based on a new LayoutManager approach that employs its long &lt;strong&gt;7 years&lt;/strong&gt; of Xamarin.Forms design training to optimize consistency, performance, and maintainability.&lt;/p&gt;

&lt;p&gt;One of the updates that you may have noticed is the leveling out of the default spacing values in these layouts: &lt;strong&gt;0&lt;/strong&gt;. If you’ve used the legacy layouts, then you already know the different arbitrary values previously set there. Zero sets a clearer expectation and prompts you to set your preferred values that best suit your design needs.&lt;/p&gt;

&lt;p&gt;A very easy way is 👇&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ResourceDictionary&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Style&lt;/span&gt; &lt;span class="n"&gt;TargetType&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"StackLayout"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Setter&lt;/span&gt; &lt;span class="n"&gt;Property&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Spacing"&lt;/span&gt; &lt;span class="n"&gt;Value&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"6"&lt;/span&gt;&lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;Style&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Style&lt;/span&gt; &lt;span class="n"&gt;TargetType&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Grid"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Setter&lt;/span&gt; &lt;span class="n"&gt;Property&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"ColumnSpacing"&lt;/span&gt; &lt;span class="n"&gt;Value&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"6"&lt;/span&gt;&lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Setter&lt;/span&gt; &lt;span class="n"&gt;Property&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"RowSpacing"&lt;/span&gt; &lt;span class="n"&gt;Value&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"6"&lt;/span&gt;&lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;Style&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;ResourceDictionary&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#native-alerts"&gt;
  &lt;/a&gt;
  🟡 Native Alerts
&lt;/h3&gt;

&lt;p&gt;Each platform has a native way of displaying alerts to users. These can be simple informational popups, simple input forms, and even action sheets with multiple options to guide a user.&lt;br&gt;
These are available from any Page in a .NET MAUI application. 👇&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nf"&gt;DisplayAlert&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Alert"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"You have been alerted"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"OK"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wqGRHQEd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/459/1%2AFEud8Hr07E3yTupU2A_rJw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wqGRHQEd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/459/1%2AFEud8Hr07E3yTupU2A_rJw.png" alt=".NET MAUI new alert feature"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#clipping"&gt;
  &lt;/a&gt;
  🟡 Clipping
&lt;/h3&gt;

&lt;p&gt;When you need to mask content you can now add shapes to the clipping region of a layout or view. The most common use for this is to make a circle image.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5mOlPBA---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1050/1%2A4HZuLcl8LBX0d1JsHagZXg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5mOlPBA---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1050/1%2A4HZuLcl8LBX0d1JsHagZXg.png" alt="Clipping function in .NET MAUI"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#gestures"&gt;
  &lt;/a&gt;
  🟡Gestures
&lt;/h3&gt;

&lt;p&gt;Gesture recognizers allow you to apply tap, pinch, pan, swipe, and drag-and-drop to any view instance. You can apply them easily in &lt;strong&gt;XAML.&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Grid&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Grid&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GestureRecognizers&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;TapGestureRecognizer&lt;/span&gt; &lt;span class="n"&gt;NumberOfTapsRequired&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"2"&lt;/span&gt; &lt;span class="n"&gt;Command&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"{Binding OnTileTapped}"&lt;/span&gt;&lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;Grid&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GestureRecognizers&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;!--&lt;/span&gt; &lt;span class="n"&gt;Grid&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="p"&gt;--&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;Grid&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tCMn1OL4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://miro.medium.com/max/1050/1%2A3rZ4xnBHEzrplaASsczMtQ.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tCMn1OL4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://miro.medium.com/max/1050/1%2A3rZ4xnBHEzrplaASsczMtQ.gif" alt=".NET MAUI gestures"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#splash-screen"&gt;
  &lt;/a&gt;
  🟡 Splash Screen
&lt;/h3&gt;

&lt;p&gt;On mobile platforms especially you want your first screen to appear as quickly as possible, and this is done by implementing a static splash screen. &lt;strong&gt;.NET MAUI&lt;/strong&gt; now has a single place to describe your splash screen for all platforms that support them.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;MauiSplashScreen&lt;/span&gt; &lt;span class="n"&gt;Include&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Resources\appiconfg.svg"&lt;/span&gt; &lt;span class="n"&gt;Color&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"#512BD4"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0FiZDjaJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/900/1%2AiU1Ic31XPhM6ZPyGQ96bLw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0FiZDjaJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/900/1%2AiU1Ic31XPhM6ZPyGQ96bLw.png" alt=".NET MAUI splash screen"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#new-control-handlers"&gt;
  &lt;/a&gt;
  🟡 New Control Handlers
&lt;/h3&gt;

&lt;p&gt;They have introduced the first controls and properties that implement a new handler approach. These include partial implementations of &lt;strong&gt;Button, Label, and Entry, Slider, and Switch.&lt;/strong&gt; They are now accepting pull requests to fill out complete implementations, and several contributors have already successfully contributed.&lt;/p&gt;

&lt;p&gt;The HelloMaui sample application now runs from a single project to macOS, iOS, and Android showcasing the current set of ported controls.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;macOS&lt;/strong&gt; 👇&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1GbmOZnZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1050/1%2AHx6JuzXFekHJ093Dud-zQA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1GbmOZnZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1050/1%2AHx6JuzXFekHJ093Dud-zQA.png" alt=".NET MAUI Control handlers (macOS)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;iOS&lt;/strong&gt; 👇&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IGKXB2HC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/449/1%2AWfra-g6uuRkDBNTjmCYLzA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IGKXB2HC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/449/1%2AWfra-g6uuRkDBNTjmCYLzA.png" alt=".NET MAUI Control handlers (iOS)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Android&lt;/strong&gt; 👇&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#"&gt;
  &lt;/a&gt;
  &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UzxDORYG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/422/1%2A4fKSw3HBCMtZoxE4rAnhTw.png" alt=".NET MAUI Control handlers (Android)"&gt;
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#net-maui-better-improvements"&gt;
  &lt;/a&gt;
  🟠 .NET MAUI: Better improvements
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#mac-catalyst"&gt;
  &lt;/a&gt;
  🟠 Mac Catalyst
&lt;/h3&gt;

&lt;p&gt;You can add the following TargetFramework settings to your project to build for macOS desktop, using Mac Catalyst.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;TargetFrameworks&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;net6&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="n"&gt;android&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;net6&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ios&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;TargetFrameworks&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;TargetFrameworks&lt;/span&gt; &lt;span class="n"&gt;Condition&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;" '$(OS)' != 'Windows_NT' "&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TargetFrameworks&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="n"&gt;net6&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="n"&gt;maccatalyst&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;TargetFrameworks&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#single-project-and-windows"&gt;
  &lt;/a&gt;
  🟠 Single Project and Windows
&lt;/h3&gt;

&lt;p&gt;Microsoft have made a few updates to single project based on developer feedback and Windows support to adopt the latest features.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The NuGet package is replaced with the .NET MAUI workload (true in the .csproj).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Single project solutions now nest individual platforms within a “Platforms” folder for tidy organization.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Updated to Windows App SDK 0.8.1 RC. Use the latest Visual Studio 2022 compatible extension from the marketplace.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AV5aw6xO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/783/1%2AqMgirzF3t1OY7XyGCB8W-g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AV5aw6xO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/783/1%2AqMgirzF3t1OY7XyGCB8W-g.png" alt=".NET MAUI single project and Windows"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#the-top-of-net-maui"&gt;
  &lt;/a&gt;
  🔴 The TOP of .NET MAUI
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#net-hot-reload"&gt;
  &lt;/a&gt;
  🔴 .NET Hot Reload
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;.NET Hot Reload&lt;/strong&gt; is a new experience that enables you to make live edits to your &lt;strong&gt;.NET MAUI&lt;/strong&gt; app’s source code while it is running, reducing the number of times you need to rebuild your app.&lt;br&gt;
To start testing this feature install both &lt;strong&gt;.NET 6 Preview 4&lt;/strong&gt; and Visual Studio 2019 version 16.11 Preview 1. Start your app through the Visual Studio debugger (&lt;strong&gt;F5&lt;/strong&gt;) targeting a WinUI 3 host. Once your app is running, you’ll now have the new option to make code changes and apply them using our new &lt;strong&gt;“apply code changes”&lt;/strong&gt; button as illustrated below.&lt;/p&gt;

&lt;p&gt;In coming releases &lt;strong&gt;.NET Hot Reload&lt;/strong&gt; will also be available for Android, iOS, and macOS, and we’ll be integrating &lt;strong&gt;XAML Hot Reload&lt;/strong&gt; and the Live Visual Tree as well.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WbSAWSAd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://miro.medium.com/max/1050/1%2AYH4fGom4aqIhMUy_zGx9CQ.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WbSAWSAd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://miro.medium.com/max/1050/1%2AYH4fGom4aqIhMUy_zGx9CQ.gif" alt=".NET MAUI Hot Reload feature"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#conclution"&gt;
  &lt;/a&gt;
  🔹 Conclution:
&lt;/h2&gt;

&lt;p&gt;.NET MAUI has only a few months left to go officially. The latest features mentioned by Microsoft in the Previews are very powerful. At the moment we still have a little left to have it and apparently it will greatly facilitate developers to program web, console or mobile applications.&lt;/p&gt;

&lt;p&gt;What do you think?🤔&lt;/p&gt;

</description>
      <category>csharp</category>
      <category>dotnet</category>
      <category>programming</category>
    </item>
    <item>
      <title>Cross-Validation and Hyperparameter Search in scikit-learn - A Complete Guide</title>
      <author>Bala Priya C</author>
      <pubDate>Tue, 24 Aug 2021 11:21:22 +0000</pubDate>
      <link>https://dev.to/balapriyac/cross-validation-and-hyperparameter-search-in-scikit-learn-a-complete-guide-5ed8</link>
      <guid>https://dev.to/balapriyac/cross-validation-and-hyperparameter-search-in-scikit-learn-a-complete-guide-5ed8</guid>
      <description>&lt;p&gt;This post is inspired by Kevin Markham's course &lt;a href="https://courses.dataschool.io/courses/introduction-to-machine-learning-with-scikit-learn"&gt;Introduction to Machine Learning with scikit-learn&lt;/a&gt; on Data School. If you're a beginner looking to get started with Machine Learning using scikit-learn, I would highly recommend this course to gain all the required foundational skills. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;In just a few hours, you'd be able to understand and build basic regression and classification models with optimal hyperparameters.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If this sounds interesting, please be sure to check the course at &lt;a href="https://courses.dataschool.io/courses/introduction-to-machine-learning-with-scikit-learn"&gt;this&lt;/a&gt; link. &lt;/p&gt;

&lt;p&gt;That said, we shall cover the following in this post.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;How to use cross-validation to search for best model hyperparameters&lt;/li&gt;
&lt;li&gt;How to use grid search for hyperparameter search&lt;/li&gt;
&lt;li&gt;How to search more efficiently for hyperparameters using randomized search&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#how-to-use-crossvalidation-to-evaluate-a-machine-learning-model"&gt;
  &lt;/a&gt;
  How to Use Cross-Validation to Evaluate a Machine Learning Model
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#how-do-we-validate-a-machine-learning-model"&gt;
  &lt;/a&gt;
  How do we validate a machine learning model?
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;When evaluating a machine learning model, training and testing on the same dataset is not a great idea. Why? Let us draw a relatable analogy.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Ever since school days, we’ve been giving exams, and how are our exams designed? Well, they’ve been designed so as to test our understanding of the subjects rather than our ability to memorize! The same analogy can be transposed to our machine learning model as well!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Here’s the answer to the question ‘Why can we not evaluate a model on the same data that it was trained on?’&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It is because this process inherently encourages the model to memorize the training data. So, the model performs extremely well on the training data. However, it generalizes rather poorly and performs badly on the data that it has never seen before.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-does-raw-traintestsplit-endraw-do"&gt;
  &lt;/a&gt;
  What does &lt;code&gt;train_test_split&lt;/code&gt; do?
&lt;/h3&gt;

&lt;p&gt;As a model's performance on data that it has never seen before is a more reliable estimate of its performance, we usually validate the model by checking how it performs on out-of-sample data, that is, on data that it has never seen before. &lt;/p&gt;

&lt;p&gt;If you remember, it is for this reason, we use the &lt;code&gt;train_test_split&lt;/code&gt; method, in our very friendly and nifty library, scikit-learn.&lt;/p&gt;

&lt;p&gt;This &lt;code&gt;train_test_split&lt;/code&gt; splits the available data into two sets: the train and test sets in certain proportions; for example, train on 70% of the available data and test on the remaining 30% of the data. In this way, we can ensure that every record in the dataset can either be in the training set or the test set but not both! By doing so, we are making sure that we test the model’s performance on unseen data.&lt;/p&gt;

&lt;p&gt;But, is this good enough? Or do we take this with a pinch of salt?&lt;br&gt;
Let us train a simple &lt;code&gt;KNeighborsClassifier&lt;/code&gt; in scikit-learn on the iris dataset.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#necessary-imports"&gt;
  &lt;/a&gt;
  Necessary imports
&lt;/h4&gt;

&lt;p&gt;As shown below, we import the necessary modules.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sklearn.datasets&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;load_iris&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sklearn.model_selection&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;train_test_split&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sklearn.neighbors&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;KNeighborsClassifier&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sklearn&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;metrics&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#load-the-data"&gt;
  &lt;/a&gt;
  Load the data
&lt;/h4&gt;

&lt;p&gt;Let us load the iris data and separate out the features(Sepal Length, Sepal Width, Petal Length and Petal Width) and the target variables which are the class labels indicating the iris type. (Setosa, Versicolour, and Virginica)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# read in the iris data
&lt;/span&gt;&lt;span class="n"&gt;iris&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;load_iris&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c1"&gt;# create X (features) and y (response)
&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;iris&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;
&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;iris&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;target&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#create-traintestsplit"&gt;
  &lt;/a&gt;
  Create train_test_split
&lt;/h4&gt;

&lt;p&gt;Let’s create the train and test sets with &lt;code&gt;random_state= 4&lt;/code&gt;; Setting the &lt;code&gt;random_state&lt;/code&gt; ensures reproducibility.&lt;/p&gt;

&lt;p&gt;In this case, it ensures that the records that go into the train and test sets stay the same every time our code is run.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# use train/test split with different random_state values
&lt;/span&gt;&lt;span class="n"&gt;X_train&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;X_test&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y_train&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y_test&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;train_test_split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;random_state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#check-classification-accuracy"&gt;
  &lt;/a&gt;
  Check Classification Accuracy
&lt;/h4&gt;

&lt;p&gt;We now instantiate the &lt;code&gt;KNeighborsClassifier&lt;/code&gt; with &lt;code&gt;n_neighbors=9&lt;/code&gt; and fit the classifier on the training set and predict on the test set.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;knn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;KNeighborsClassifier&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n_neighbors&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;knn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X_train&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y_train&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;y_pred&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;knn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;predict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X_test&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;metrics&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;accuracy_score&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y_test&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y_pred&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="c1"&gt;# Output
&lt;/span&gt;&lt;span class="mf"&gt;0.9736842105263158&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, let us change the &lt;code&gt;random_state&lt;/code&gt; to a different value. What do you think the accuracy score would be?&lt;/p&gt;

&lt;p&gt;Well, please feel free to insert your favorite number in the &lt;code&gt;random_state&lt;/code&gt; and check for yourselves. It'd be a different accuracy score this time.&lt;/p&gt;

&lt;p&gt;Setting the &lt;code&gt;random_state&lt;/code&gt; to another value, we would get another value for the accuracy score. The evaluation metric thus obtained is therefore susceptible to high variance.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The accuracy score may depend heavily on which data points end up in the training set and which end up in the test set. &lt;/li&gt;
&lt;li&gt;Thus the accuracy score may be significantly different depending on how the division is made. Clearly, this doesn’t seem like the best way to validate our model’s performance!&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#how-do-we-reach-a-consensus-on-how-to-calculate-the-accuracy-score"&gt;
  &lt;/a&gt;
  How do we reach a consensus on how to calculate the accuracy score?
&lt;/h4&gt;

&lt;p&gt;One very natural thing to do would be to create multiple train/test splits, calculate the accuracy for each such split, and compute the average of all the accuracy scores thus obtained. This definitely seems like a better estimate of the accuracy, doesn’t it?&lt;/p&gt;

&lt;p&gt;This is precisely the essence of cross-validation, which we shall see in the subsequent section.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#understanding-kfold-crossvalidation"&gt;
  &lt;/a&gt;
  Understanding K-fold cross-validation
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#steps-in-kfold-crossvalidation"&gt;
  &lt;/a&gt;
  Steps in K-fold cross-validation
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;Split the dataset into K equal partitions (or “folds”).&lt;/li&gt;
&lt;li&gt;Use fold 1 for testing and the union of the other folds as the training set.&lt;/li&gt;
&lt;li&gt;Calculate accuracy on the test set.&lt;/li&gt;
&lt;li&gt;Repeat steps 2 and 3 K times, using a different fold for testing each time.&lt;/li&gt;
&lt;li&gt;Use the average accuracy on different test sets as the estimate of out-of-sample accuracy.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Let us try to visualize this by splitting a dataset of 25 observations into 5 equal folds as shown below.&lt;/p&gt;

&lt;p&gt;The dataset contains 20 observations (numbered 0 through 24).&lt;br&gt;
5-fold cross-validation runs for 5 iterations.&lt;/p&gt;

&lt;p&gt;Let's see how the folds are created&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# simulate splitting a dataset of 25 observations into 5 folds
&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sklearn.model_selection&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;KFold&lt;/span&gt;
&lt;span class="n"&gt;kf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;KFold&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n_splits&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;shuffle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="c1"&gt;# print the contents of each training and testing set
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'{} {:^61} {}'&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Iteration'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'Training set observations'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'Testing set observations'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;iteration&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;enumerate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;kf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
   &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'{:^9} {} {:^25}'&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;iteration&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])))&lt;/span&gt;

&lt;span class="c1"&gt;# Output
&lt;/span&gt;
&lt;span class="n"&gt;Iteration&lt;/span&gt;                   &lt;span class="n"&gt;Training&lt;/span&gt; &lt;span class="nb"&gt;set&lt;/span&gt; &lt;span class="n"&gt;observations&lt;/span&gt;                   &lt;span class="n"&gt;Testing&lt;/span&gt; &lt;span class="nb"&gt;set&lt;/span&gt; &lt;span class="n"&gt;observations&lt;/span&gt;
    &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;  &lt;span class="mi"&gt;6&lt;/span&gt;  &lt;span class="mi"&gt;7&lt;/span&gt;  &lt;span class="mi"&gt;8&lt;/span&gt;  &lt;span class="mi"&gt;9&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt; &lt;span class="mi"&gt;17&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt; &lt;span class="mi"&gt;19&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt; &lt;span class="mi"&gt;21&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt; &lt;span class="mi"&gt;23&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;       
    &lt;span class="mi"&gt;2&lt;/span&gt;     &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;  &lt;span class="mi"&gt;1&lt;/span&gt;  &lt;span class="mi"&gt;2&lt;/span&gt;  &lt;span class="mi"&gt;3&lt;/span&gt;  &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt; &lt;span class="mi"&gt;17&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt; &lt;span class="mi"&gt;19&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt; &lt;span class="mi"&gt;21&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt; &lt;span class="mi"&gt;23&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;       
    &lt;span class="mi"&gt;3&lt;/span&gt;     &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;  &lt;span class="mi"&gt;1&lt;/span&gt;  &lt;span class="mi"&gt;2&lt;/span&gt;  &lt;span class="mi"&gt;3&lt;/span&gt;  &lt;span class="mi"&gt;4&lt;/span&gt;  &lt;span class="mi"&gt;5&lt;/span&gt;  &lt;span class="mi"&gt;6&lt;/span&gt;  &lt;span class="mi"&gt;7&lt;/span&gt;  &lt;span class="mi"&gt;8&lt;/span&gt;  &lt;span class="mi"&gt;9&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt; &lt;span class="mi"&gt;17&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt; &lt;span class="mi"&gt;19&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt; &lt;span class="mi"&gt;21&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt; &lt;span class="mi"&gt;23&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;     &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;     
    &lt;span class="mi"&gt;4&lt;/span&gt;     &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;  &lt;span class="mi"&gt;1&lt;/span&gt;  &lt;span class="mi"&gt;2&lt;/span&gt;  &lt;span class="mi"&gt;3&lt;/span&gt;  &lt;span class="mi"&gt;4&lt;/span&gt;  &lt;span class="mi"&gt;5&lt;/span&gt;  &lt;span class="mi"&gt;6&lt;/span&gt;  &lt;span class="mi"&gt;7&lt;/span&gt;  &lt;span class="mi"&gt;8&lt;/span&gt;  &lt;span class="mi"&gt;9&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt; &lt;span class="mi"&gt;21&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt; &lt;span class="mi"&gt;23&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;     &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt; &lt;span class="mi"&gt;17&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt; &lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;     
    &lt;span class="mi"&gt;5&lt;/span&gt;     &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;  &lt;span class="mi"&gt;1&lt;/span&gt;  &lt;span class="mi"&gt;2&lt;/span&gt;  &lt;span class="mi"&gt;3&lt;/span&gt;  &lt;span class="mi"&gt;4&lt;/span&gt;  &lt;span class="mi"&gt;5&lt;/span&gt;  &lt;span class="mi"&gt;6&lt;/span&gt;  &lt;span class="mi"&gt;7&lt;/span&gt;  &lt;span class="mi"&gt;8&lt;/span&gt;  &lt;span class="mi"&gt;9&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt; &lt;span class="mi"&gt;17&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt; &lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;     &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt; &lt;span class="mi"&gt;21&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt; &lt;span class="mi"&gt;23&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We observe the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;For each iteration, every observation is either in the training set or the testing set, but not both.&lt;/li&gt;
&lt;li&gt;Every observation is in the test set exactly once.&lt;/li&gt;
&lt;li&gt;Each fold is used as the test set exactly once and in the training set (K-1) times.&lt;/li&gt;
&lt;li&gt;The average accuracy thus obtained is a more accurate estimate of out-of-sample accuracy.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This process uses data more efficiently as every observation is used for both training and testing.&lt;/p&gt;

&lt;p&gt;It is recommended to use stratified sampling for creating the folds, as this ensures that all class labels are represented in equal proportions in each fold. And, scikit-learn’s &lt;code&gt;cross_val_score&lt;/code&gt; does this by default.&lt;/p&gt;

&lt;p&gt;In practice, we can do even better by doing the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;“Hold out” a portion of the data before beginning the model building process.&lt;/li&gt;
&lt;li&gt;Find the best model using cross-validation on the remaining data, and test it using the hold-out set. &lt;/li&gt;
&lt;li&gt;This gives a more reliable estimate of out-of-sample performance since the hold-out set is truly out-of-sample.&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#how-to-use-crossvalidation-to-search-for-best-model-hyperparameters"&gt;
  &lt;/a&gt;
  How to Use Cross-Validation to Search for Best Model Hyperparameters
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#crossvalidation-for-hyperparameter-tuning"&gt;
  &lt;/a&gt;
  Cross-validation for hyperparameter tuning
&lt;/h3&gt;

&lt;p&gt;For the KNN classifier on the iris dataset, can we possibly use cross-validation to find the optimal value for &lt;code&gt;K&lt;/code&gt;? That is, to search for the optimal value of &lt;code&gt;n_neighbors&lt;/code&gt;?&lt;/p&gt;

&lt;p&gt;Remember, &lt;code&gt;K&lt;/code&gt; in KNN classifier is the number of neighbors (&lt;code&gt;n_neighbors&lt;/code&gt;) that we take into account for predicting the class label of the test sample. Not to be confused with the &lt;code&gt;K&lt;/code&gt; in K-fold cross-validation.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sklearn.model_selection&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;cross_val_score&lt;/span&gt;
&lt;span class="c1"&gt;# 10-fold cross-validation with K=5 for KNN (the n_neighbors parameter)
&lt;/span&gt;&lt;span class="n"&gt;knn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;KNeighborsClassifier&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n_neighbors&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;scores&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cross_val_score&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;knn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cv&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;scoring&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'accuracy'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;scores&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Output
&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;1.&lt;/span&gt;         &lt;span class="mf"&gt;0.93333333&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;         &lt;span class="mf"&gt;1.&lt;/span&gt;         &lt;span class="mf"&gt;0.86666667&lt;/span&gt; &lt;span class="mf"&gt;0.93333333&lt;/span&gt;
 &lt;span class="mf"&gt;0.93333333&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;         &lt;span class="mf"&gt;1.&lt;/span&gt;         &lt;span class="mf"&gt;1.&lt;/span&gt;        &lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;# use average accuracy as an estimate of out-of-sample accuracy
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;scores&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="c1"&gt;# Output
&lt;/span&gt;
&lt;span class="mf"&gt;0.9666666666666668&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, we shall run the K fold cross-validation for the models with different values of &lt;code&gt;n_neighbors&lt;/code&gt;, as shown below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# search for an optimal value of K for KNN
&lt;/span&gt;&lt;span class="n"&gt;k_range&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;31&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;k_scores&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;k_range&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;    
   &lt;span class="n"&gt;knn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;KNeighborsClassifier&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n_neighbors&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;    
   &lt;span class="n"&gt;scores&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cross_val_score&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;knn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cv&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;scoring&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'accuracy'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="n"&gt;k_scores&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;scores&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;k_scores&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# Output k_scores
&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;0.96&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.9533333333333334&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.9666666666666666&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.9666666666666666&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.9666666666666668&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.9666666666666668&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.9666666666666668&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.9666666666666668&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.9733333333333334&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.9666666666666668&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.9666666666666668&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.9733333333333334&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.9800000000000001&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.9733333333333334&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.9733333333333334&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.9733333333333334&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.9733333333333334&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.9800000000000001&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.9733333333333334&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.9800000000000001&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.9666666666666666&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.9666666666666666&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.9733333333333334&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.96&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.9666666666666666&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.96&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.9666666666666666&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.9533333333333334&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.9533333333333334&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.9533333333333334&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let us plot the values to get a better idea.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;plt&lt;/span&gt;
&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;matplotlib&lt;/span&gt; &lt;span class="n"&gt;inline&lt;/span&gt;

&lt;span class="c1"&gt;# plot the value of K for KNN (x-axis) versus the cross-validated accuracy (y-axis)
&lt;/span&gt;&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;k_range&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;k_scores&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xlabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Value of K for KNN'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ylabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Cross-Validated Accuracy'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wOde8Zho--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wdzir812ln0cbv4jqsqx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wOde8Zho--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wdzir812ln0cbv4jqsqx.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We see that &lt;code&gt;n_neighbors (K)&lt;/code&gt; values from 13 to 20 yield higher accuracy, especially &lt;code&gt;K&lt;/code&gt;=13,18 and 20.As a larger value of &lt;code&gt;K&lt;/code&gt; yields a less complex model, we choose &lt;code&gt;K&lt;/code&gt;=20.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This process of searching for the optimal values of hyperparameters is called hyperparameter tuning.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In this example, we chose the values of &lt;code&gt;K&lt;/code&gt; that resulted in higher mean accuracy score under 10-fold cross validation. &lt;/p&gt;

&lt;p&gt;This is how cross-validation can be used to search for the best hyperparameters and this process can be done much more efficiently in scikit-learn.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;In KNN classifiers, setting a very small value for &lt;code&gt;K&lt;/code&gt; will make the model needlessly complex, and a very large value of &lt;code&gt;K&lt;/code&gt; would result in a model with high bias that yields suboptimal performance.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As &lt;code&gt;K&lt;/code&gt;=13,18 and 20 gave the highest accuracy score, close to 0.98, we decided to choose &lt;code&gt;K&lt;/code&gt;=20 as a larger value of &lt;code&gt;K&lt;/code&gt; would yield a less complex model.&lt;/p&gt;

&lt;p&gt;While it is not particularly difficult to write the for loop, we do realize that we may have to do it often.&lt;/p&gt;

&lt;p&gt;Therefore, it would be good to have a more convenient way of doing the hyperparameter search, without having to write a loop every time and identify the best parameter through inspection.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#how-to-use-grid-search-for-hyperparameter-search"&gt;
  &lt;/a&gt;
  How to Use Grid Search for Hyperparameter Search
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#import-gridsearchcv-class"&gt;
  &lt;/a&gt;
  Import GridSearchCV Class
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sklearn.model_selection&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;GridSearchCV&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#define-the-parameter-grid"&gt;
  &lt;/a&gt;
  Define the Parameter Grid
&lt;/h4&gt;

&lt;p&gt;We now define the parameter grid (&lt;code&gt;param_grid&lt;/code&gt;), a Python dictionary, whose key is the name of the hyperparameter whose best value we’re trying to find and the value is the list of possible values that we would like to search over for the hyperparameter.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# define the parameter values that should be searched
&lt;/span&gt;&lt;span class="n"&gt;k_range&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;31&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="c1"&gt;# create a parameter grid: map the parameter names to the values that should be searched
&lt;/span&gt;&lt;span class="n"&gt;param_grid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n_neighbors&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;k_range&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;param_grid&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# param_grid
&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;21&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;26&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;27&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;28&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;29&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We now instantiate &lt;code&gt;GridSearchCV&lt;/code&gt;. Note that we specify the &lt;code&gt;param_grid&lt;/code&gt; instead of the &lt;code&gt;n_neighbors&lt;/code&gt; argument that we had specified for &lt;code&gt;cross_val_score&lt;/code&gt; earlier. &lt;/p&gt;

&lt;p&gt;Why is this valid?&lt;/p&gt;

&lt;p&gt;Remember, the parameter grid, &lt;code&gt;param_grid&lt;/code&gt; is a dictionary whose key is &lt;code&gt;n_neighbors&lt;/code&gt; and the value is a list of possible values of &lt;code&gt;n_neighbors&lt;/code&gt;. Therefore, specifying the &lt;code&gt;param_grid&lt;/code&gt; ensures that the value at index &lt;code&gt;i&lt;/code&gt; is fetched as the value of &lt;code&gt;n_neighbors&lt;/code&gt; in the i_th run.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#instantiate-fit-the-grid-and-view-the-results"&gt;
  &lt;/a&gt;
  Instantiate, fit the grid and view the results
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# instantiate the grid
&lt;/span&gt;&lt;span class="n"&gt;grid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;GridSearchCV&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;knn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;param_grid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cv&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;scoring&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'accuracy'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;return_train_score&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We now go ahead and fit the grid with data, and access the &lt;code&gt;cv_results_&lt;/code&gt; attribute to get the mean accuracy score after 10-fold cross-validation, standard deviation and the parameter values. &lt;/p&gt;

&lt;p&gt;For convenience, we may store the results in a pandas DataFrame. The mean and standard deviation of the accuracy scores for &lt;code&gt;n_neighbors&lt;/code&gt;=1 to 10 are shown below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# fit the grid with data
&lt;/span&gt;&lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# view the results as a pandas DataFrame
&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;
&lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cv_results_&lt;/span&gt;&lt;span class="p"&gt;)[[&lt;/span&gt;&lt;span class="s"&gt;'mean_test_score'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'std_test_score'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'params'&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;
&lt;span class="c1"&gt;# Output
&lt;/span&gt;
&lt;span class="n"&gt;mean_test_score&lt;/span&gt; &lt;span class="n"&gt;std_test_score&lt;/span&gt;  &lt;span class="n"&gt;params&lt;/span&gt;
&lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mf"&gt;0.960000&lt;/span&gt;    &lt;span class="mf"&gt;0.053333&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="mf"&gt;0.953333&lt;/span&gt;    &lt;span class="mf"&gt;0.052068&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="mi"&gt;2&lt;/span&gt;   &lt;span class="mf"&gt;0.966667&lt;/span&gt;    &lt;span class="mf"&gt;0.044721&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="mi"&gt;3&lt;/span&gt;   &lt;span class="mf"&gt;0.966667&lt;/span&gt;    &lt;span class="mf"&gt;0.044721&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="mi"&gt;4&lt;/span&gt;   &lt;span class="mf"&gt;0.966667&lt;/span&gt;    &lt;span class="mf"&gt;0.044721&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="mi"&gt;5&lt;/span&gt;   &lt;span class="mf"&gt;0.966667&lt;/span&gt;    &lt;span class="mf"&gt;0.044721&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="mi"&gt;6&lt;/span&gt;   &lt;span class="mf"&gt;0.966667&lt;/span&gt;    &lt;span class="mf"&gt;0.044721&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="mi"&gt;7&lt;/span&gt;   &lt;span class="mf"&gt;0.966667&lt;/span&gt;    &lt;span class="mf"&gt;0.044721&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="mi"&gt;8&lt;/span&gt;   &lt;span class="mf"&gt;0.973333&lt;/span&gt;    &lt;span class="mf"&gt;0.032660&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="mi"&gt;9&lt;/span&gt;   &lt;span class="mf"&gt;0.966667&lt;/span&gt;    &lt;span class="mf"&gt;0.044721&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When using &lt;code&gt;cross_val_score&lt;/code&gt;, we tried eyeballing the accuracy scores to identify the best hyperparameters and to make it easier, we plotted the value of hyperparameters vs the respective cross-validated accuracy scores! &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Sounds good but doesn’t seem to be a great option though!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Once we’ve completed the grid search, the following attributes can be very useful! We can choose to examine:&lt;br&gt;
☑ the best_score_ , the highest cross-validated accuracy score&lt;br&gt;
☑ the best_params_, the optimal value for the hyperparameters, and&lt;br&gt;
☑ the best_estimator_, which is the best model that has the best hyperparameter.&lt;/p&gt;

&lt;p&gt;Let us now examine these for our example.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# examine the best model
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;best_score_&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;best_params_&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;best_estimator_&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Output
&lt;/span&gt;&lt;span class="mf"&gt;0.9800000000000001&lt;/span&gt;

&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;KNeighborsClassifier&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;algorithm&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'auto'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;leaf_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;metric&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'minkowski'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                     &lt;span class="n"&gt;metric_params&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n_jobs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n_neighbors&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                     &lt;span class="n"&gt;weights&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'uniform'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;K&lt;/code&gt;=13 has been chosen, remember, &lt;code&gt;K&lt;/code&gt;=13 was one of the values of &lt;code&gt;K&lt;/code&gt; that gave highest cross-validated accuracy score.✔&lt;br&gt;
So far so good!&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#searching-for-multiple-hyperparameters"&gt;
  &lt;/a&gt;
  Searching for Multiple Hyperparameters
&lt;/h3&gt;

&lt;p&gt;In this example, the only hyperparameter that we searched for was &lt;code&gt;n_neighbors&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;What if there were many such hyperparameters?&lt;br&gt;
We may think, “Why not tune each hyperparameter independently?”&lt;/p&gt;

&lt;p&gt;Well, we may independently search for the optimal values for each of the hyperparameters; but the model may perform best at some values of the parameters that are very different from the individual best values.&lt;/p&gt;

&lt;p&gt;So, we have to search for the combination of the parameters that optimizes performance rather than the individual best parameters.&lt;br&gt;
Let us build on the same example of KNNClassifier. &lt;/p&gt;

&lt;p&gt;In addition to &lt;code&gt;n_neighbors&lt;/code&gt;, let us also search for the optimal weighting strategy.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The default weighting option is &lt;code&gt;‘uniform’&lt;/code&gt; where all points are weighted equally and &lt;code&gt;‘distance’&lt;/code&gt; option weights points by the inverse of their distance.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In this case, closer neighbors of a query point will have a greater influence than neighbors which are far away.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#define-the-parameter-grid"&gt;
  &lt;/a&gt;
  Define the Parameter Grid
&lt;/h4&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# define the parameter values that should be searched
&lt;/span&gt;&lt;span class="n"&gt;k_range&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;31&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;weight_options&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'uniform'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'distance'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="c1"&gt;# create a parameter grid: map the parameter names to the values that should be searched
&lt;/span&gt;&lt;span class="n"&gt;param_grid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n_neighbors&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;k_range&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;weights&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;weight_options&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;param_grid&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# param_grid
&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;21&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;26&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;27&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;28&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;29&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;

&lt;span class="s"&gt;'weights'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'uniform'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'distance'&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Let us instantiate and fit the grid and view results, as before.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# instantiate and fit the grid
&lt;/span&gt;&lt;span class="n"&gt;grid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;GridSearchCV&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;knn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;param_grid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cv&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;scoring&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'accuracy'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;return_train_score&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# view the results
&lt;/span&gt;&lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cv_results_&lt;/span&gt;&lt;span class="p"&gt;)[[&lt;/span&gt;&lt;span class="s"&gt;'mean_test_score'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'std_test_score'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'params'&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;
&lt;span class="c1"&gt;# Results
&lt;/span&gt;&lt;span class="n"&gt;mean_test_score&lt;/span&gt; &lt;span class="n"&gt;std_test_score&lt;/span&gt;  &lt;span class="n"&gt;params&lt;/span&gt;
&lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mf"&gt;0.960000&lt;/span&gt;    &lt;span class="mf"&gt;0.053333&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'weights'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'uniform'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="mf"&gt;0.960000&lt;/span&gt;    &lt;span class="mf"&gt;0.053333&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'weights'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'distance'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="mi"&gt;2&lt;/span&gt;   &lt;span class="mf"&gt;0.953333&lt;/span&gt;    &lt;span class="mf"&gt;0.052068&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'weights'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'uniform'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="mi"&gt;3&lt;/span&gt;   &lt;span class="mf"&gt;0.960000&lt;/span&gt;    &lt;span class="mf"&gt;0.053333&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'weights'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'distance'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="mi"&gt;4&lt;/span&gt;   &lt;span class="mf"&gt;0.966667&lt;/span&gt;    &lt;span class="mf"&gt;0.044721&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'weights'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'uniform'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="mi"&gt;5&lt;/span&gt;   &lt;span class="mf"&gt;0.966667&lt;/span&gt;    &lt;span class="mf"&gt;0.044721&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'weights'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'distance'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="mi"&gt;6&lt;/span&gt;   &lt;span class="mf"&gt;0.966667&lt;/span&gt;    &lt;span class="mf"&gt;0.044721&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'weights'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'uniform'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="mi"&gt;7&lt;/span&gt;   &lt;span class="mf"&gt;0.966667&lt;/span&gt;    &lt;span class="mf"&gt;0.044721&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'weights'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'distance'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="mi"&gt;8&lt;/span&gt;   &lt;span class="mf"&gt;0.966667&lt;/span&gt;    &lt;span class="mf"&gt;0.044721&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'weights'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'uniform'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="mi"&gt;9&lt;/span&gt;   &lt;span class="mf"&gt;0.966667&lt;/span&gt;    &lt;span class="mf"&gt;0.044721&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'weights'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'distance'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="mi"&gt;10&lt;/span&gt;  &lt;span class="mf"&gt;0.966667&lt;/span&gt;    &lt;span class="mf"&gt;0.044721&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'weights'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'uniform'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="mi"&gt;11&lt;/span&gt;  &lt;span class="mf"&gt;0.966667&lt;/span&gt;    &lt;span class="mf"&gt;0.044721&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'weights'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'distance'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="mi"&gt;12&lt;/span&gt;  &lt;span class="mf"&gt;0.966667&lt;/span&gt;    &lt;span class="mf"&gt;0.044721&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'weights'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'uniform'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="mi"&gt;13&lt;/span&gt;  &lt;span class="mf"&gt;0.966667&lt;/span&gt;    &lt;span class="mf"&gt;0.044721&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'weights'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'distance'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="mi"&gt;14&lt;/span&gt;  &lt;span class="mf"&gt;0.966667&lt;/span&gt;    &lt;span class="mf"&gt;0.044721&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'weights'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'uniform'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;  &lt;span class="mf"&gt;0.966667&lt;/span&gt;    &lt;span class="mf"&gt;0.044721&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'weights'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'distance'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="mi"&gt;16&lt;/span&gt;  &lt;span class="mf"&gt;0.973333&lt;/span&gt;    &lt;span class="mf"&gt;0.032660&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'weights'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'uniform'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="mi"&gt;17&lt;/span&gt;  &lt;span class="mf"&gt;0.973333&lt;/span&gt;    &lt;span class="mf"&gt;0.032660&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'weights'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'distance'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="mi"&gt;18&lt;/span&gt;  &lt;span class="mf"&gt;0.966667&lt;/span&gt;    &lt;span class="mf"&gt;0.044721&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'weights'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'uniform'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We see that we have 30*2=60 models.(As we had 30 possible values for &lt;code&gt;n_neighbors&lt;/code&gt; and 2 possible values for weights)&lt;br&gt;
As we chose 10-fold cross-validation, there will be 60*10=600 predictions made!&lt;/p&gt;

&lt;p&gt;Time to look at our model’s best score and parameters that yielded the best score.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# examine the best model
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;best_score_&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;best_params_&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# best score and best parameters
&lt;/span&gt;&lt;span class="mf"&gt;0.9800000000000001&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'weights'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'uniform'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We obtain the same best cross-validated accuracy score of 0.98, with n_neighbors=13 and weights= ‘uniform’.&lt;br&gt;
Now, let us say we have to tune 4 hyperparameters and we have a list of 10 possible values for each of the hyperparameters.&lt;br&gt;
This process creates 10*10*10*10 =10,000 models and when we run 10 fold cross-validation, there are 100,000 predictions made.&lt;br&gt;
Clearly, things do scale up very quickly and can soon become computationally infeasible.&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#how-to-search-more-efficiently-for-hyperparameters-using-randomized-search"&gt;
  &lt;/a&gt;
  How to Search More Efficiently for Hyperparameters Using Randomized Search
&lt;/h2&gt;

&lt;p&gt;We shall now try to rephrase the limitations of Grid Search better, in a more formal way.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Say we have to search for M parameters; Let &lt;code&gt;p_1, p_2,p_3, …, p_M&lt;/code&gt; be the &lt;code&gt;M&lt;/code&gt; parameters. &lt;/li&gt;
&lt;li&gt;Let the number of values that we would like to search over for &lt;code&gt;p_1&lt;/code&gt; be &lt;code&gt;n1&lt;/code&gt;, for &lt;code&gt;p_2&lt;/code&gt; be &lt;code&gt;n2&lt;/code&gt;, and so on, with &lt;code&gt;nM&lt;/code&gt; values for &lt;code&gt;p_M&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Grid Search considers all possible hyperparameter settings (combinations) into account and creates a model for each possible setting to choose the best model with optimal hyperparameters.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;To understand it better, assume that out of &lt;code&gt;M&lt;/code&gt; parameters, we decide to freeze the values of all hyperparameters except one, say the M_th parameter &lt;code&gt;p_M&lt;/code&gt;. So, Grid Search involves searching through the list of &lt;code&gt;nM&lt;/code&gt; values for the M_th hyperparameter; So, there are &lt;code&gt;nM&lt;/code&gt; models created.&lt;/li&gt;
&lt;li&gt;Suppose we now freeze the values of all hyperparameters except two, say the last two (&lt;code&gt;p_M&lt;/code&gt; and &lt;code&gt;p_(M-1)&lt;/code&gt;). We now have to search through all possible combinations of &lt;code&gt;p_M&lt;/code&gt; and &lt;code&gt;p_(M-1)&lt;/code&gt;, each having &lt;code&gt;nM&lt;/code&gt; and &lt;code&gt;n_(M-1)&lt;/code&gt; possible values that we could search over.&lt;/li&gt;
&lt;li&gt;We now take a step back and freeze the value of &lt;code&gt;p_M-1&lt;/code&gt; and search through all values for &lt;code&gt;p_M&lt;/code&gt;; To account for all possible combinations, we should repeat the procedure for all &lt;code&gt;n_M-1&lt;/code&gt; values for &lt;code&gt;p_M-1&lt;/code&gt;. So, this process would leave us with &lt;code&gt;n_(M-1) * nM&lt;/code&gt; models.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Hope it’s clear how the complexity scales with increasing values of the number of values each hyperparameter could take. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;For the above example with M hyperparameters, we would have &lt;code&gt;n1*n2*n3*…*n_M&lt;/code&gt; models. This is why we said that things could scale up quickly and become computationally intractable with Grid Search.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With this motivation to make hyperparameter search computationally more efficient, let us proceed to understand Randomized Search.&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#understanding-randomizedsearchcv"&gt;
  &lt;/a&gt;
  Understanding RandomizedSearchCV
&lt;/h3&gt;

&lt;p&gt;In contrast to &lt;code&gt;GridSearchCV&lt;/code&gt;, not all parameter values are tried out in &lt;code&gt;RandomizedSearchCV&lt;/code&gt;, but rather a fixed number of parameter settings is sampled from the specified distributions/ list of parameters.&lt;/p&gt;

&lt;p&gt;If some of the hyperparameters that we’re searching for are continuous, then we should specify the distribution rather than the list of values, while defining the parameter grid. How do we define the fixed number of parameter settings?&lt;/p&gt;

&lt;p&gt;The number of parameter settings that are tried is given by &lt;code&gt;n_iter&lt;/code&gt;. There's a quality vs computational cost trade-off in picking &lt;code&gt;n_iter&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;A very small value of &lt;code&gt;n_iter&lt;/code&gt; would imply that we’re more likely to find a suboptimal solution, because we are actually considering too few combinations.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A very high value of n_iter would mean we can ideally get closer to finding the best hyperparameters that yield the best model, but this again comes with a high computation cost as before. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In fact, if we set &lt;code&gt;n_iter= n1*n2*n3*…*n_M&lt;/code&gt; from the previous example, then, we’re essentially considering all possible hyperparameter combinations and now Randomized Search and Grid Search are equivalent.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let us build on the same example of KNNClassifier from the previous section.&lt;/p&gt;

&lt;p&gt;Let us search for the optimal weighting strategy and &lt;code&gt;n_neighbors&lt;/code&gt;. And now, let us implement Randomized Search in scikit-learn and do the following steps, as we did for Grid Search.&lt;br&gt;
&lt;strong&gt;1. Import RandomizedSearchCV class&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sklearn.model_selection&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;RandomizedSearchCV&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;2. Define the parameter grid&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# specify "parameter distributions" rather than a "parameter grid"
&lt;/span&gt;&lt;span class="n"&gt;param_dist&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n_neighbors&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;k_range&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;weights&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;weight_options&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;3. Instantiate the grid; Set n_iter=10, Fit the grid &amp;amp; View the results&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# n_iter controls the number of searches
&lt;/span&gt;&lt;span class="n"&gt;rand&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;RandomizedSearchCV&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;knn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;param_dist&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cv&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;scoring&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'accuracy'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n_iter&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;random_state&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;return_train_score&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;rand&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rand&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cv_results_&lt;/span&gt;&lt;span class="p"&gt;)[[&lt;/span&gt;&lt;span class="s"&gt;'mean_test_score'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'std_test_score'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'params'&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;

&lt;span class="c1"&gt;#DataFrame
&lt;/span&gt;
&lt;span class="n"&gt;mean_test_score&lt;/span&gt; &lt;span class="n"&gt;std_test_score&lt;/span&gt;  &lt;span class="n"&gt;params&lt;/span&gt;
&lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mf"&gt;0.973333&lt;/span&gt;    &lt;span class="mf"&gt;0.032660&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'weights'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'distance'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="mf"&gt;0.966667&lt;/span&gt;    &lt;span class="mf"&gt;0.033333&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'weights'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'uniform'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="mi"&gt;2&lt;/span&gt;   &lt;span class="mf"&gt;0.980000&lt;/span&gt;    &lt;span class="mf"&gt;0.030551&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'weights'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'uniform'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="mi"&gt;3&lt;/span&gt;   &lt;span class="mf"&gt;0.966667&lt;/span&gt;    &lt;span class="mf"&gt;0.044721&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'weights'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'uniform'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;27&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="mi"&gt;4&lt;/span&gt;   &lt;span class="mf"&gt;0.953333&lt;/span&gt;    &lt;span class="mf"&gt;0.042687&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'weights'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'uniform'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;29&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="mi"&gt;5&lt;/span&gt;   &lt;span class="mf"&gt;0.973333&lt;/span&gt;    &lt;span class="mf"&gt;0.032660&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'weights'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'distance'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="mi"&gt;6&lt;/span&gt;   &lt;span class="mf"&gt;0.966667&lt;/span&gt;    &lt;span class="mf"&gt;0.044721&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'weights'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'distance'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="mi"&gt;7&lt;/span&gt;   &lt;span class="mf"&gt;0.973333&lt;/span&gt;    &lt;span class="mf"&gt;0.044222&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'weights'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'uniform'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="mi"&gt;8&lt;/span&gt;   &lt;span class="mf"&gt;0.973333&lt;/span&gt;    &lt;span class="mf"&gt;0.044222&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'weights'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'distance'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="mi"&gt;9&lt;/span&gt;   &lt;span class="mf"&gt;0.973333&lt;/span&gt;    &lt;span class="mf"&gt;0.032660&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'weights'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'uniform'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;4. Examine the best score and best hyperparameters&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# examine the best model
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rand&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;best_score_&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rand&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;best_params_&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Output
&lt;/span&gt;&lt;span class="mf"&gt;0.9800000000000001&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'weights'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'uniform'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'n_neighbors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Parameters of the best model&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Surprisingly, we see that the highest accuracy score obtained in this case, where we only looked at 10 different parameter settings instead of 60 in Grid Search, is the same as before: 0.98 ✔&lt;/li&gt;
&lt;li&gt;And the value for n_neighbors= 18, which is also one of the optimal values that we got when we initially searched for the optimal value of n_neighbors. (Recall from the earlier blog post with the same example)&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Maybe we just got lucky?&lt;br&gt;
What is the guarantee that we will always get the best results?&lt;br&gt;
Ah, this question makes perfect sense, doesn’t it?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Let us do the following now: Let us run &lt;code&gt;RandomizedSearchCV&lt;/code&gt; for multiple times and see how many times we really end up getting lucky!&lt;/p&gt;

&lt;p&gt;➡️Run RandomizedSearchCV 20 times and see what happens; We log the best_score_ for every run.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# run RandomizedSearchCV 20 times (with n_iter=10) and record the best score
&lt;/span&gt;&lt;span class="n"&gt;best_scores&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="n"&gt;rand&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;RandomizedSearchCV&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;knn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;param_dist&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cv&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;scoring&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'accuracy'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n_iter&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;return_train_score&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;rand&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;best_scores&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rand&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;best_score_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;Let&lt;/span&gt; &lt;span class="n"&gt;us&lt;/span&gt; &lt;span class="n"&gt;examine&lt;/span&gt; &lt;span class="nb"&gt;all&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt; &lt;span class="n"&gt;best&lt;/span&gt; &lt;span class="n"&gt;scores&lt;/span&gt; &lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;best_scores&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# Output: Best Scores
&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;0.973&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.98&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.98&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.98&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.973&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.98&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.98&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.973&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.98&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.973&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.973&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.98&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.98&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.98&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.98&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.973&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.98&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.98&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.98&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.973&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Upon examining the best scores above for all the 20 runs, we see that we get the best accuracy score of 0.98 about 13 times.&lt;br&gt;
Looks like we’re lucky indeed! What about the other 7 times when we didn't quite get the best accuracy score? These accuracy scores are around 0.973 which is pretty close to 0.98.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This observation convinces us that even though Randomized Search may not always give the hyperparameters of the best performing model, the models obtained by using these hyperparameters do not perform much worse compared to the best model obtained from Grid Search. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This means, the best models thus obtained, with the hyperparameters from randomized search are clearly very close to the optimal model.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;In essence, these may not be the best hyperparameters, but certainly close to the best hyperparameters, except that these are found under resource-constrained settings. Hope you all understood how we could use Randomized Search for hyperparameter tuning.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Hope you all enjoyed reading this post.😀&lt;/p&gt;

&lt;p&gt;Happy Learning! Until next time!✨&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h2&gt;

&lt;p&gt;[1]&lt;a href="https://courses.dataschool.io/courses/introduction-to-machine-learning-with-scikit-learn"&gt;https://courses.dataschool.io/courses/introduction-to-machine-learning-with-scikit-learn&lt;/a&gt;&lt;br&gt;
[2]&lt;a href="http://scikitlearn.org/stable/modules/cross_validation.html"&gt;http://scikitlearn.org/stable/modules/cross_validation.html&lt;/a&gt;&lt;br&gt;
[3]&lt;a href="http://scikitlearn.org/stable/modules/generated/sklearn.model_selection.GridSearchCV.html"&gt;http://scikitlearn.org/stable/modules/generated/sklearn.model_selection.GridSearchCV.html&lt;/a&gt;&lt;br&gt;
[4]&lt;a href="http://scikitlearn.org/stable/modules/generated/sklearn.model_selection.RandomizedSearchCV.html"&gt;http://scikitlearn.org/stable/modules/generated/sklearn.model_selection.RandomizedSearchCV.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Cover Image: Photo by &lt;a href="https://unsplash.com/@rosssneddon?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Ross Sneddon&lt;/a&gt; on &lt;a href="https://unsplash.com/?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This post is a comprehensive post for understanding model evaluation, and hyperparameter search. This is a compiled, and improved version of a few of my earlier shorter posts.&lt;/p&gt;

</description>
      <category>python</category>
      <category>tutorial</category>
      <category>machinelearning</category>
    </item>
    <item>
      <title>Shop by Brand Extension for Magento 2
</title>
      <author>Mehul Patel</author>
      <pubDate>Tue, 24 Aug 2021 11:10:51 +0000</pubDate>
      <link>https://dev.to/dolphinwebsolution/shop-by-brand-extension-for-magento-2-5hb5</link>
      <guid>https://dev.to/dolphinwebsolution/shop-by-brand-extension-for-magento-2-5hb5</guid>
      <description>&lt;p&gt;Allows your customers in their desire to navigate the store in search of the favourite brands. Create customised pages, slider, A-Z alphabetical listing, and more features.&lt;/p&gt;

&lt;p&gt;Display brands separately as the main menu item.&lt;br&gt;
Sort and arrange the brands in an Asc/Desc manner.&lt;br&gt;
Layered navigation on brand-specific product listing pages.&lt;br&gt;
Display featured brand slider on any page using custom widget.&lt;br&gt;
Upload a custom logo for the brand.&lt;br&gt;
Display brands as sliders.&lt;br&gt;
Alphabetical listing of brands.&lt;br&gt;
Search Filters &amp;amp; Alphabetical order display.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#overview"&gt;
  &lt;/a&gt;
  OVERVIEW
&lt;/h2&gt;

&lt;p&gt;It is proven that nine-in-ten online searchers stick to the store brands. Additionally, customers always stick to a single brand.&lt;br&gt;
In a multi-brand store, shoppers expect to have a possibility to shop by brands.&lt;/p&gt;

&lt;p&gt;Shoppers become emotionally attached to brands very quickly. Especially when the products they once found attractive and suitable confirm their quality regularly. Thus, the first thing they often do when they reach online stores is to browse by their favorite brand. Apparently, it is better not to stand in the customers' way when they are rushing to their favorite brands. with &lt;a href="https://dolphinwebsolution.com/shop/shop-by-brand-for-magento.html"&gt;Magento 2 Shop by Brand extension&lt;/a&gt;, you can make the brand-to-customer connection a lot easier and well-directed.&lt;/p&gt;

&lt;p&gt;Shop by Brand Magento 2 extension creates a separate searching tool for your shoppers to freely investigate each brand on your website. All brands will be gathered on one page to let your visitors choose from. After clicking any of the brand the category page will be open and product related to that brand will be listed there. Moreover, each brand will have its own space which contains the description, logo, and products. It is obvious that your shoppers now can shop with ease when being able to filter items by brands. Another important point of this extension is that if admin wants to display featured brand slider then he can do that simply by adding custom widget from the backend. Admin can create as many brands as they want, edit brand details (name, description, and image), filterable by brand, and easily customize the product page and product list page. Admin can also set the Meta details for the brand page. Customers will easily be able to sort brands by alphabetical names and also in Asc and Desc order.&lt;/p&gt;

&lt;p&gt;For more detail click Here: &lt;a href="https://dolphinwebsolution.com/shop/shop-by-brand-for-magento.html"&gt;Shop by brand Extension&lt;/a&gt;&lt;/p&gt;

</description>
      <category>magento2extension</category>
    </item>
    <item>
      <title>HighlightJS - How to show some code safely?</title>
      <author>Maxime Guilbert</author>
      <pubDate>Tue, 24 Aug 2021 11:06:36 +0000</pubDate>
      <link>https://dev.to/adaendra/highlightjs-how-to-show-some-code-safely-3j0d</link>
      <guid>https://dev.to/adaendra/highlightjs-how-to-show-some-code-safely-3j0d</guid>
      <description>&lt;p&gt;In our job, it can be really useful to expose a bloc of code without execute it. Generally, we can use Markdown or some Wiki to do it. But sometimes, we want to use it on a website.&lt;/p&gt;

&lt;p&gt;And in this case, &lt;strong&gt;HighlightJS&lt;/strong&gt; is our savior!&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#what-is-highlightjs"&gt;
  &lt;/a&gt;
  What is HighlightJS?
&lt;/h2&gt;

&lt;p&gt;It's a JavaScript syntax highlighter with language auto-detection and zero dependencies.&lt;/p&gt;

&lt;p&gt;And currently &lt;strong&gt;192 languages&lt;/strong&gt; and &lt;strong&gt;242 styles&lt;/strong&gt; are implemented!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;example&lt;/em&gt;&lt;br&gt;
&lt;iframe height="600" src="https://codepen.io/Tibixx/embed/NLpNar?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#how-to-use-it"&gt;
  &lt;/a&gt;
  How to use it?
&lt;/h2&gt;

&lt;p&gt;Once you've installed it &lt;em&gt;(with NodeJS or basic JavaScript import)&lt;/em&gt;, put some &lt;strong&gt;pre/code&lt;/strong&gt; &lt;em&gt;(Example just below)&lt;/em&gt; blocks with our code to show and that's it!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;pre&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;code&amp;gt;&lt;/span&gt;
    ...
  &lt;span class="nt"&gt;&amp;lt;/code&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/pre&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Otherwise, you can define which language to highlight&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;pre&amp;gt;&amp;lt;code&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"language-html"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;...&lt;span class="nt"&gt;&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;or add a class to ignore some blocks.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;pre&amp;gt;&amp;lt;code&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"nohighlight"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;...&lt;span class="nt"&gt;&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Their &lt;a href="https://highlightjs.org/usage/"&gt;documentation&lt;/a&gt; is quite complete, so go check it if you want more informations!&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#links"&gt;
  &lt;/a&gt;
  Links
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;HighlightJS website : &lt;a href="https://highlightjs.org/"&gt;https://highlightjs.org/&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;I hope it will help you ! 🍺&lt;/p&gt;

</description>
      <category>ui</category>
      <category>html</category>
    </item>
    <item>
      <title>Should I use Twitter as a Dev? Tell me about your Twitter experiences..</title>
      <author>Rob OLeary</author>
      <pubDate>Tue, 24 Aug 2021 10:59:39 +0000</pubDate>
      <link>https://dev.to/robole/should-i-use-twitter-as-a-dev-i-have-never-have-tell-me-about-your-twitter-experiences-2pld</link>
      <guid>https://dev.to/robole/should-i-use-twitter-as-a-dev-i-have-never-have-tell-me-about-your-twitter-experiences-2pld</guid>
      <description>&lt;p&gt;I have never used Twitter. From time to time, I see people talk about Dev Twitter, and occasionally a story leads me to read a Twitter thread (as a visitor killing the popups to get to the content). &lt;/p&gt;

&lt;p&gt;The pandemic did make me consider starting a Twitter account, because the opportunities for doing things in real life were more limited, but I resisted so far. &lt;/p&gt;

&lt;p&gt;What I would like to know from you, as a Dev on Twitter, how have you benefited from using Twitter? &lt;/p&gt;




&lt;p&gt;Cover Image - loud white birds By Arnoudt, BE on noun project&lt;/p&gt;

</description>
      <category>watercooler</category>
    </item>
    <item>
      <title>Develop Crypto Payment Gateway</title>
      <author>Stephen Hardy</author>
      <pubDate>Tue, 24 Aug 2021 10:37:16 +0000</pubDate>
      <link>https://dev.to/stephen_hardy98/develop-crypto-payment-gateway-1ap6</link>
      <guid>https://dev.to/stephen_hardy98/develop-crypto-payment-gateway-1ap6</guid>
      <description>&lt;p&gt;Bitcoin and Ethereum continue to be the most used digital currencies for processing payments. The circulating supply of Bitcoin is 43.5% and Ethereum 18.5% respectively. According to Statista, the number of Ethereum and Bitcoin payments in July 2021 was 1.1 million and 250,000 respectively. &lt;/p&gt;

&lt;p&gt;Are you that entrepreneur who wishes to do everything fast? The business of cryptocurrency transaction processing is apt for you. Bitcoin, the world’s most valuable digital currency, witnessed a speed of 9000 transactions per second on its Scaling Test Network (STN) in January 2021. Hence, aspiring techpreneurs can take the big step now and commence customized Crypto payment gateway development. &lt;/p&gt;

&lt;p&gt;Source:&amp;gt;&amp;gt;&amp;gt; &lt;a href="https://www.appdupe.com/blog/cryptocurrency-payment-gateway-development/"&gt;Cryptocurrency Payment Gateway Development - A Detailed Guide&lt;/a&gt;&lt;/p&gt;

</description>
      <category>crypto</category>
      <category>blockchain</category>
      <category>cryptocurrency</category>
      <category>bitcoinpayment</category>
    </item>
    <item>
      <title>Learning Python- Intermediate course: Day 13, The Statistics Module</title>
      <author>Aatmaj</author>
      <pubDate>Tue, 24 Aug 2021 10:25:29 +0000</pubDate>
      <link>https://dev.to/aatmaj/learning-python-intermediate-course-day-13-the-statistics-module-2bb5</link>
      <guid>https://dev.to/aatmaj/learning-python-intermediate-course-day-13-the-statistics-module-2bb5</guid>
      <description>&lt;h2&gt;
  &lt;a href="#today-we-will-cover-the-raw-statistics-endraw-module-in-python"&gt;
  &lt;/a&gt;
  Today we will cover the &lt;code&gt;statistics&lt;/code&gt; module in python.
&lt;/h2&gt;




&lt;p&gt;Python has the built-in module &lt;code&gt;statistics&lt;/code&gt; that you can use to calculate mathematical statistics of numeric data. You do not require to install anything extra. This &lt;code&gt;statistics&lt;/code&gt; module was introduced new in Python 3.4.&lt;/p&gt;

&lt;p&gt;The below sample shows the various functions in the module. I have ordered the methods as per the level of usage.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;statistics&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;st&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#Calculates the mean (average) of the given data
&lt;/span&gt;&lt;span class="mf"&gt;5.3&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#Calculates the mode (central tendency) of the given numeric or nominal data
&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;harmonic_mean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="c1"&gt;#Calculates the harmonic mean of the given data
&lt;/span&gt;&lt;span class="mf"&gt;2.8317788515563547&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;harmonic_mean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#StatisticsError is raised if data is empty, or any element is less than zero. 
#Harmonic mean doesn't support negative numbers
&lt;/span&gt;&lt;span class="n"&gt;Traceback&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;most&lt;/span&gt; &lt;span class="n"&gt;recent&lt;/span&gt; &lt;span class="n"&gt;call&lt;/span&gt; &lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s"&gt;"&amp;lt;stdin&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s"&gt;"C:\Users&lt;/span&gt;&lt;span class="se"&gt;\a&lt;/span&gt;&lt;span class="s"&gt;atma\AppData\Local\Programs\Python\Python39\lib\statistics.py"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;406&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;harmonic_mean&lt;/span&gt;
    &lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;total&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;_sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;_fail_neg&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;errmsg&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s"&gt;"C:\Users&lt;/span&gt;&lt;span class="se"&gt;\a&lt;/span&gt;&lt;span class="s"&gt;atma\AppData\Local\Programs\Python\Python39\lib\statistics.py"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;164&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;_sum&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;typ&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;values&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;groupby&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s"&gt;"C:\Users&lt;/span&gt;&lt;span class="se"&gt;\a&lt;/span&gt;&lt;span class="s"&gt;atma\AppData\Local\Programs\Python\Python39\lib\statistics.py"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;406&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;genexpr&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;total&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;_sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;_fail_neg&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;errmsg&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s"&gt;"C:\Users&lt;/span&gt;&lt;span class="se"&gt;\a&lt;/span&gt;&lt;span class="s"&gt;atma\AppData\Local\Programs\Python\Python39\lib\statistics.py"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;289&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;_fail_neg&lt;/span&gt;
    &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="n"&gt;StatisticsError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;errmsg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;statistics&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StatisticsError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;harmonic&lt;/span&gt; &lt;span class="n"&gt;mean&lt;/span&gt; &lt;span class="n"&gt;does&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;support&lt;/span&gt; &lt;span class="n"&gt;negative&lt;/span&gt; &lt;span class="n"&gt;values&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;median&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#Calculates the median (middle value) of the given data
&lt;/span&gt;&lt;span class="mf"&gt;6.5&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdev&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#Calculates the standard deviation from a sample of data
&lt;/span&gt;&lt;span class="mf"&gt;2.94580681270476&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;variance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#Calculates the variance from a sample of data
&lt;/span&gt;&lt;span class="mf"&gt;8.677777777777777&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;median_high&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#Calculates the high median of the given data
&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;median_low&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#Calculates the low median of the given data
&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;median_grouped&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#Calculates the median of grouped continuous data
&lt;/span&gt;&lt;span class="mf"&gt;6.5&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pvariance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#Calculates the variance of an entire population(dataset)
&lt;/span&gt;&lt;span class="mf"&gt;7.81&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pstdev&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#Calculates the standard deviation from an entire population
&lt;/span&gt;&lt;span class="mf"&gt;2.794637722496424&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;st&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;median&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# If data is empty, StatisticsError will be raised.
&lt;/span&gt;&lt;span class="n"&gt;Traceback&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;most&lt;/span&gt; &lt;span class="n"&gt;recent&lt;/span&gt; &lt;span class="n"&gt;call&lt;/span&gt; &lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s"&gt;"&amp;lt;stdin&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s"&gt;"C:\Users&lt;/span&gt;&lt;span class="se"&gt;\a&lt;/span&gt;&lt;span class="s"&gt;atma\AppData\Local\Programs\Python\Python39\lib\statistics.py"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;430&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;median&lt;/span&gt;
    &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="n"&gt;StatisticsError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"no median for empty data"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;statistics&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StatisticsError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;no&lt;/span&gt; &lt;span class="n"&gt;median&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;empty&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You will find a more detailed and comprehensive explaination at the &lt;a href="https://docs.python.org/3/library/statistics.html"&gt;official documentation&lt;/a&gt;&lt;/p&gt;

</description>
      <category>learningpython</category>
      <category>python</category>
      <category>codenewbie</category>
      <category>programming</category>
    </item>
    <item>
      <title>Trusted Solution for  How to Migrate Emails from Gmail to Office 365</title>
      <author>Isha</author>
      <pubDate>Tue, 24 Aug 2021 10:13:23 +0000</pubDate>
      <link>https://dev.to/isha13556615/trusted-solution-for-how-to-migrate-emails-from-gmail-to-office-365-2jo7</link>
      <guid>https://dev.to/isha13556615/trusted-solution-for-how-to-migrate-emails-from-gmail-to-office-365-2jo7</guid>
      <description>&lt;p&gt;How to migrate emails from Gmail to Office 365 directly?&lt;br&gt;
Here is the best way to export, import, move, transfer Gmail emails to Office 365 with Eml to Office 365 Migration Tool.&lt;/p&gt;

&lt;h2&gt;&lt;strong&gt;How to Export Gmail Emails to Office 365 Direct Solution&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;Have you been utilizing Gmail messages to send and accept your messages? Commonly individuals search for some incredible answers for moving messages starting with one customer then onto the next Migrate Emails from Gmail to Office 365. As we as a whole realize that Gmail is an email administration that gives some magnificent provisions yet because of the developments of the market, individuals are currently Migrate Emails from Gmail to Office 365. &lt;/p&gt;

&lt;p&gt;Presently on the off chance that we talk about Microsoft Office 365, it has to bring to the table clients with the absolute most fundamental provisions. Another best part is that you needn't bother with a specific gadget to get to your messages. Independent of your place and time, you can view your messages just by having a solid web association. &lt;/p&gt;

&lt;p&gt;This blog is about the clarification of why you need to move from Gmail emails to office 365. When you go through the steps referenced underneath, ready to comprehend the whole thing and carry out it with no problems. &lt;/p&gt;


&lt;h2&gt;&lt;strong&gt;Why do Users Migrate Emails from Gmail to Office 365 With Reasons?&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;Being a mainstream and notable suite, MS Office 365 is something that can help you a ton. How about we go through this segment with the goal that we can comprehend the significance of this move: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Components are magnificent:&lt;/strong&gt; it is the provisions of something that either acquire clients or decrease them. With the extraordinary provisions of Office 365, it assists clients with upgrading their proficiency in the most ideal manners.&lt;/li&gt; 

&lt;li&gt;
&lt;strong&gt;No Data Loss:&lt;/strong&gt; being a cloud-based stage, utilizes the capacity to chip away at their information without stressing over the misfortune.&lt;/li&gt; 

&lt;li&gt;
&lt;strong&gt;Safe stockpiling:&lt;/strong&gt; When it is tied in with getting and saving your information, no other email customer can beat Microsoft Office 365. That’s why users Migrate Emails from Gmail to Office 365&lt;/li&gt; 

&lt;li&gt;
&lt;strong&gt;Access from anyplace:&lt;/strong&gt;  simply a solid reliable web association is sufficient assuming you need to get to the records even from the bright corner of the world.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Since you are entirely mindful of the explanations behind moving your Emails from Gmail to office 365, we should see how we can do it with full proficiency &lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;How Might You Export Gmail Emails to Office 365 Step by Step?&lt;/strong&gt;&lt;/h3&gt; 

&lt;p&gt;Assuming you need to move Gmail emails to office 365, the most significant thing which is required is the right device to make it happen. We have introduced an astounding apparatus named &lt;strong&gt;&lt;a href="https://corbettsoftware.com/migration/eml/office-365.html"&gt;EML to Office 365 Migration Tool&lt;/a&gt;&lt;/strong&gt;, which consummately moves the messages. Not simply it makes the relocation cycle less overwhelming, you can things also. Presently, go through the steps offered underneath to comprehend the whole methodology of bringing in Gmail emails to Office 365: &lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;Remarkable Steps to Migrate Emails from Gmail to Office 365&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Step 1:&lt;/strong&gt; The initial step is to &lt;strong&gt;download&lt;/strong&gt; the product from the above Download Now Button and afterward get it introduced &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kSCIV1J3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://corbettsoftware.com/img/guide/imap-to-office-365/1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kSCIV1J3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://corbettsoftware.com/img/guide/imap-to-office-365/1.png" alt="Alt text of image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 2:&lt;/strong&gt; In this step, open the product and snap on the&lt;strong&gt; ‘Open’&lt;/strong&gt; catch &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yFTNJUh9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://corbettsoftware.com/img/guide/imap-to-office-365/2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yFTNJUh9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://corbettsoftware.com/img/guide/imap-to-office-365/2.png" alt="Alt text of image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 3:&lt;/strong&gt; After that hit&lt;strong&gt; ‘Email Accounts’&lt;/strong&gt; and afterward tap double an&lt;strong&gt; ‘Add Account’&lt;/strong&gt; &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UOxw9nx3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://corbettsoftware.com/img/guide/imap-to-office-365/3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UOxw9nx3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://corbettsoftware.com/img/guide/imap-to-office-365/3.png" alt="Alt text of image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 4:&lt;/strong&gt; Fill the&lt;strong&gt; Gmail email id and password&lt;/strong&gt; to continue and Go to the &lt;strong&gt;‘Advanced Setting’&lt;/strong&gt; choices underneath &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9P8vck_u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://corbettsoftware.com/img/guide/imap-to-office-365/4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9P8vck_u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://corbettsoftware.com/img/guide/imap-to-office-365/4.png" alt="Alt text of image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 5:&lt;/strong&gt;Enter your &lt;strong&gt;IMAP server&lt;/strong&gt; any place it is inquired or hit &lt;strong&gt;Find&lt;/strong&gt; to auto fill &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iqj_ZHyv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://corbettsoftware.com/img/guide/imap-to-office-365/5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iqj_ZHyv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://corbettsoftware.com/img/guide/imap-to-office-365/5.png" alt="Alt text of image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 6:&lt;/strong&gt; Then, at that point, will consequently peruse the documents, files, and folders of Gmail Emails&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kZuuuiIa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://corbettsoftware.com/img/guide/imap-to-office-365/6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kZuuuiIa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://corbettsoftware.com/img/guide/imap-to-office-365/6.png" alt="Alt text of image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 7:&lt;/strong&gt;Then, You should simply tap on&lt;strong&gt; ‘Export’&lt;/strong&gt; out of the given alternatives tap on &lt;strong&gt;‘Office 365’&lt;/strong&gt; to proceed with the interaction &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3XPjt557--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://corbettsoftware.com/img/guide/imap-to-office-365/16.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3XPjt557--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://corbettsoftware.com/img/guide/imap-to-office-365/16.png" alt="Alt text of image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Well once you execute every one of the steps effectively, get your answer and you will want to change over Gmail emails to Office 365. Simply don't commit any errors since it can prompt a significant difficulty. &lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;Why Choose This Tool to Migrate Emails from Gmail to Office 365&lt;/strong&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;You will want to perform IMAP to the IMAP worker movement&lt;/li&gt; 

&lt;li&gt;You will not need to run over the issue of information misfortune&lt;/li&gt; 

&lt;li&gt;Specific relocation just as cluster movement is conceivable&lt;/li&gt; 

&lt;li&gt;Document configurations can likewise be changed over with the assistance of this device&lt;/li&gt; 

&lt;li&gt;Not simply that, the Corbett wizard tool permits you to export documents as per your comfort. You can easily convert into different file formats, document files, etc.&lt;/li&gt;
&lt;/ul&gt; 

&lt;h3&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;With the assistance of this blog, you may have seen how to move Gmail Emails to Office 365 in the most ideal manner. Simply this software and the right procedure are sufficient to help you complete the interaction&lt;/p&gt;

</description>
    </item>
    <item>
      <title>AWS SDKs for .Net : 1- AWSSDK.S3</title>
      <author>Ahmed Adel</author>
      <pubDate>Tue, 24 Aug 2021 10:09:14 +0000</pubDate>
      <link>https://dev.to/ahmedadel/aws-sdks-for-net-1-awssdk-s3-5e36</link>
      <guid>https://dev.to/ahmedadel/aws-sdks-for-net-1-awssdk-s3-5e36</guid>
      <description>&lt;p&gt;Let's start s series of articles about &lt;code&gt;AWS SDKs&lt;/code&gt; available for &lt;code&gt;.Net&lt;/code&gt; developers to use in their applications.&lt;/p&gt;

&lt;p&gt;First of all, let's ask a simple question...&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#%E2%9E%BDwhat-is-the-aws-sdk-for-net"&gt;
  &lt;/a&gt;
  ➽What is the AWS SDK for .NET?
&lt;/h1&gt;

&lt;p&gt;☞The AWS SDK for .NET makes it easier to build .NET applications that tap into cost-effective, scalable, and reliable AWS services such as Amazon Simple Storage Service (&lt;code&gt;Amazon S3&lt;/code&gt;) and Amazon Elastic Compute Cloud (&lt;code&gt;Amazon EC2&lt;/code&gt;). The SDK simplifies the use of AWS services by providing a set of libraries that are consistent and familiar for .NET developers.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JMQ54ChT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0gezp1dj5xdijne3b6n6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JMQ54ChT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0gezp1dj5xdijne3b6n6.png" alt="AWS SDKs"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's start in this article with the first SDK which is &lt;code&gt;AWSSDK.S3&lt;/code&gt; ...&lt;/p&gt;

&lt;p&gt;&lt;code&gt;AWSSDK.S3&lt;/code&gt; is a SDK that helps .Net Developers to use Access Amazon Simple Storage Service (&lt;code&gt;Amazon S3&lt;/code&gt;) in their applications  to create buckets and store objects.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Amazon S3&lt;/code&gt; is storage for the Internet. It is designed to make web-scale computing easier.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Amazon S3&lt;/code&gt; has a simple web services interface that you can use to store and retrieve any amount of data, at any time, from anywhere on the web. It gives any developer access to the same highly scalable, reliable, fast, and inexpensive data storage infrastructure that Amazon uses to run its own global network of web sites, to read more about it &lt;a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/Welcome.html"&gt;go here&lt;/a&gt;.&lt;/p&gt;




&lt;p&gt;Before starting, Here is the Github Repo for the code we are going to write today, clone it and use it if you want to test the SDK&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/Ahmed-Adel3"&gt;
        Ahmed-Adel3
      &lt;/a&gt; / &lt;a href="https://github.com/Ahmed-Adel3/AWSSDK.S3-Demo"&gt;
        AWSSDK.S3-Demo
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      This is a simple implementation for AWSSDK.S3 which is one of the SDK provided by AWS for .Net applications to handle connections and operations on S3 buckets
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
➽To use this repo :&lt;/h1&gt;
&lt;p&gt;☞You just to put your ows &lt;strong&gt;AWS Access Key&lt;/strong&gt; and &lt;strong&gt;AWS Secret Access Key&lt;/strong&gt; in the main method in the console app and try.&lt;/p&gt;

&lt;h1&gt;
➽What is the AWS SDK for .NET?&lt;/h1&gt;
&lt;p&gt;☞The AWS SDK for .NET makes it easier to build .NET applications that tap into cost-effective, scalable, and reliable AWS services such as Amazon Simple Storage Service (&lt;code&gt;Amazon S3&lt;/code&gt;) and Amazon Elastic Compute Cloud (&lt;code&gt;Amazon EC2&lt;/code&gt;). The SDK simplifies the use of AWS services by providing a set of libraries that are consistent and familiar for .NET developers.&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/54df0e316c22fb004f8df909de0fa9a3519be99d5db8fda7b2e4abdcd4c69e6f/68747470733a2f2f6465762d746f2d75706c6f6164732e73332e616d617a6f6e6177732e636f6d2f75706c6f6164732f61727469636c65732f3067657a7031646a357864696a6e653362366e362e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/54df0e316c22fb004f8df909de0fa9a3519be99d5db8fda7b2e4abdcd4c69e6f/68747470733a2f2f6465762d746f2d75706c6f6164732e73332e616d617a6f6e6177732e636f6d2f75706c6f6164732f61727469636c65732f3067657a7031646a357864696a6e653362366e362e706e67" alt="AWS SDKs"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Let's start in this article with the first SDK which is &lt;code&gt;AWSSDK.S3&lt;/code&gt; ...&lt;/p&gt;
&lt;p&gt;&lt;code&gt;AWSSDK.S3&lt;/code&gt; is a SDK that helps .Net Developers to use Access Amazon Simple Storage Service (&lt;code&gt;Amazon S3&lt;/code&gt;) in their applications  to create buckets and store objects.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Amazon S3&lt;/code&gt; is storage for the Internet. It is designed to…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/Ahmed-Adel3/AWSSDK.S3-Demo"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h1&gt;
  &lt;a href="#%E2%9E%BDinstalling-awssdks3-"&gt;
  &lt;/a&gt;
  ➽Installing AWSSDK.S3 :
&lt;/h1&gt;

&lt;p&gt;☞&lt;code&gt;AWSSDK.S3&lt;/code&gt; is installed mainly from Nuget, which is a package management system for the .NET platform. With NuGet, you can install the AWSSDK packages, as well as several other extensions, to your project, and here is &lt;a href="https://www.nuget.org/"&gt;Nuget Website&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There is 3 ways to install &lt;code&gt;AWSSDK.S3&lt;/code&gt; (or any other Nuget Package in General)&lt;/p&gt;

&lt;p&gt;✎ &lt;strong&gt;1- Using NuGet from the Command prompt or terminal:&lt;/strong&gt;&lt;br&gt;
➤ Go to the &lt;a href="https://www.nuget.org/profiles/awsdotnet"&gt;AWSSDK packages on NuGet&lt;/a&gt;&lt;br&gt;
 and determine which packages you need in your project; today we will install , &lt;a href="https://www.nuget.org/packages/AWSSDK.S3/"&gt;AWSSDK.S3&lt;/a&gt;.&lt;br&gt;
➤ Copy the .NET CLI command from that package's webpage, as shown in the following example.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="n"&gt;dotnet&lt;/span&gt; &lt;span class="k"&gt;add&lt;/span&gt; &lt;span class="n"&gt;package&lt;/span&gt; &lt;span class="n"&gt;AWSSDK&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;S3&lt;/span&gt; &lt;span class="p"&gt;--&lt;/span&gt;&lt;span class="n"&gt;version&lt;/span&gt; &lt;span class="m"&gt;3.3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="m"&gt;110.19&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;➤ In your project's directory, run that .NET CLI command. NuGet also installs any dependencies, such as &lt;strong&gt;AWSSDK.Core&lt;/strong&gt; (which is the main dependency for all AWS SDKs for .Net ).&lt;/p&gt;

&lt;p&gt;✎ &lt;strong&gt;2- Using NuGet Package Manager in Visual Studio:&lt;/strong&gt;&lt;br&gt;
➤ In Solution Explorer, right-click your project, and then choose Manage NuGet Packages from the context menu.&lt;/p&gt;

&lt;p&gt;➤ In the left pane of the NuGet Package Manager, choose Browse. You can then use the search box to search for the package you want to install.&lt;/p&gt;

&lt;p&gt;➤ The following figure shows installation of the &lt;code&gt;AWSSDK.S3&lt;/code&gt; package.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--C_oV5UiI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n4lkyb66z16pt22piytz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C_oV5UiI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n4lkyb66z16pt22piytz.png" alt="Nuget Package Manager"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;✎ &lt;strong&gt;3- Using NuGet from the Package Manager Console:&lt;/strong&gt;&lt;br&gt;
➤ In Visual Studio, choose Tools, NuGet Package Manager, Package Manager Console.&lt;/p&gt;

&lt;p&gt;➤ You can install the AWSSDK packages you want from the Package Manager Console by using the Install-Package command. For example, to install AWSSDK.S3, use the following command.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="n"&gt;PM&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Install&lt;/span&gt;&lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Package&lt;/span&gt; &lt;span class="n"&gt;AWSSDK&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;S3&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;➤ If you need to install an earlier version of a package, use the -Version option and specify the package version you want, as shown in the following example.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="n"&gt;PM&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Install&lt;/span&gt;&lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Package&lt;/span&gt; &lt;span class="n"&gt;AWSSDK&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;S3&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Version&lt;/span&gt; &lt;span class="m"&gt;3.3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="m"&gt;106.6&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#%E2%9E%BDso-how-can-we-use-it-"&gt;
  &lt;/a&gt;
  ➽So, How can we use it ?
&lt;/h1&gt;

&lt;p&gt;☞ Let's assume that we have a &lt;code&gt;.Net Core 3.1&lt;/code&gt; application:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1- Get AWS Access keys:&lt;/strong&gt;&lt;br&gt;
➤ the first step you need to do is to get your access key ID and secret access key and here is the steps to do that ..&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;a)&lt;/strong&gt; Use your AWS account ID or account alias, your IAM user name, and your password to sign in to the IAM console.&lt;br&gt;
&lt;a href="https://console.aws.amazon.com/iam"&gt;https://console.aws.amazon.com/iam&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;b)&lt;/strong&gt; In the navigation bar on the upper right, choose your user name, and then choose My Security Credentials.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oC-cfjuB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/usctm0q1m2heq6v3cl3o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oC-cfjuB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/usctm0q1m2heq6v3cl3o.png" alt="My Security Credentials"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;c)&lt;/strong&gt; Expand the Access keys (access key ID and secret access key) section.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;d)&lt;/strong&gt; Choose Create New Access Key then copy the key to paste it somewhere else for safekeeping, choose Show Access Key. To save the access key ID and secret access key to a .csv file to a secure location on your computer, choose Download Key File.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Now we have our access key ID and secret access key, let's continue ...&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2- let's start coding:&lt;/strong&gt;&lt;br&gt;
➤ First let's assume that we have a class called "MyS3Service" registered in our app to handle connection to S3 Buckets.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;System&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;Amazon&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;Amazon.S3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;Amazon.S3.Util&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;Amazon.S3.Model&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;Amazon.S3.Transfer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;System.Threading.Tasks&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MyS3Service&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;readonly&lt;/span&gt; &lt;span class="n"&gt;IAmazonS3&lt;/span&gt; &lt;span class="n"&gt;s3Client&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;MyS3Service&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;s3Client&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;AmazonS3Client&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
             &lt;span class="s"&gt;"Your Aws Access Key Id here"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
             &lt;span class="s"&gt;"Your Aws Secret Access Key here"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
             &lt;span class="n"&gt;RegionEndpoint&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;GetBySystemName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Your Region Name here"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; I included all the namespaces needed for the upcoming APIs...&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;➤ Fill your keys and your region name in &lt;code&gt;AmazonS3Client&lt;/code&gt; constructor (Note that: this constructor has many other overloads to connect to your account)&lt;/p&gt;

&lt;p&gt;✅ that's it , you are now connected to your AWS account...&lt;/p&gt;


&lt;h1&gt;
  &lt;a href="#%E2%9E%BDlets-now-check-what-we-can-do-with-this-sdk-"&gt;
  &lt;/a&gt;
  ➽Let's now check what we can do with this SDK ...
&lt;/h1&gt;

&lt;p&gt;☞&lt;strong&gt;1- Creating S3 Bucket:&lt;/strong&gt;&lt;br&gt;
• Let's add a function to our previously created class MyS3Service&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt; &lt;span class="nf"&gt;CreateNewBucketAsync&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// to check if there is another bucket with the same name&lt;/span&gt;
        &lt;span class="c1"&gt;// make sure to use V2 of the function because V1 is obsolete&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(!(&lt;/span&gt;&lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;AmazonS3Util&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;DoesS3BucketExistV2Async&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s3Client&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Your New Bucket Name Here"&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;putBucketRequest&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;PutBucketRequest&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;BucketName&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Your New Bucket Name Here"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="n"&gt;UseClientRegion&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;
            &lt;span class="p"&gt;};&lt;/span&gt;
            &lt;span class="n"&gt;PutBucketResponse&lt;/span&gt; &lt;span class="n"&gt;putBucketResponse&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;s3Client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;PutBucketAsync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;putBucketRequest&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;AmazonS3Exception&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Error encountered on server. Message:'{0}' when writing an object"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Exception&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Unknown encountered on server. Message:'{0}' when writing an object"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;Note that the following rules apply for naming buckets in Amazon S3:&lt;/p&gt;

&lt;p&gt;• Bucket names must be between 3 and 63 characters long.&lt;/p&gt;

&lt;p&gt;• Bucket names can consist only of lowercase letters, numbers, dots (.), and hyphens (-).&lt;/p&gt;

&lt;p&gt;• Bucket names must begin and end with a letter or number.&lt;/p&gt;

&lt;p&gt;• Bucket names must not be formatted as an IP address (for example, 192.168.5.4).&lt;/p&gt;

&lt;p&gt;• Bucket names must not start with the prefix xn--.&lt;/p&gt;

&lt;p&gt;• Bucket names must not end with the suffix -s3alias. This suffix is reserved for access point alias names&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;☞&lt;strong&gt;2- Upload an Object in the bucket:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt; &lt;span class="nf"&gt;UploadObjectAsync&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Method 1. Put object-specify only key name for the new object.&lt;/span&gt;
        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;putRequest1&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;PutObjectRequest&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;BucketName&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Your Bucket Name Here"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;Key&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Unique identifier for the object"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;ContentBody&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"sample text"&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;

        &lt;span class="n"&gt;PutObjectResponse&lt;/span&gt; &lt;span class="n"&gt;response1&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;s3Client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;PutObjectAsync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;putRequest1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="c1"&gt;//______________________________________________________________________&lt;/span&gt;

        &lt;span class="c1"&gt;//Method  2. Put the object-set ContentType and add metadata.&lt;/span&gt;
        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;putRequest2&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;PutObjectRequest&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;BucketName&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Your Bucket Name Here"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;Key&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Unique identifier for the object"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;FilePath&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"File path goes here"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;ContentType&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"text/plain"&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;

        &lt;span class="n"&gt;putRequest2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Metadata&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"x-amz-meta-title"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"someTitle"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;PutObjectResponse&lt;/span&gt; &lt;span class="n"&gt;response2&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;s3Client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;PutObjectAsync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;putRequest2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;AmazonS3Exception&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="s"&gt;"Error encountered ***. Message:'{0}' when writing an object"&lt;/span&gt;
                &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Exception&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="s"&gt;"Unknown encountered on server. Message:'{0}' when writing an object"&lt;/span&gt;
            &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;☞&lt;strong&gt;3- Upload a file:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt; &lt;span class="nf"&gt;UploadFileAsync&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;yourBucketName&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"TestBucket"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;yourFilepath&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Your File path"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;yourfileKey&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Your Unique Key here"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;fileTransferUtility&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;TransferUtility&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s3Client&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="c1"&gt;// Option 1. Upload a file. The file name is used as the object key name.&lt;/span&gt;
        &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;fileTransferUtility&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;UploadAsync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;yourFilepath&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;yourBucketName&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Upload 1 completed"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="c1"&gt;//______________________________________________________________________&lt;/span&gt;

        &lt;span class="c1"&gt;// Option 2. Specify object key name explicitly.&lt;/span&gt;
        &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;fileTransferUtility&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;UploadAsync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;yourFilepath&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;yourBucketName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;yourfileKey&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Upload 2 completed"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="c1"&gt;//______________________________________________________________________&lt;/span&gt;

        &lt;span class="c1"&gt;// Option 3. Upload data from a type of System.IO.Stream.&lt;/span&gt;
        &lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;fileToUpload&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;FileStream&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;yourFilepath&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;FileMode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Open&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;FileAccess&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Read&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;fileTransferUtility&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;UploadAsync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fileToUpload&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;yourBucketName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;yourfileKey&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Upload 3 completed"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="c1"&gt;//______________________________________________________________________&lt;/span&gt;
        &lt;span class="c1"&gt;// Option 4. Specify advanced settings.&lt;/span&gt;
        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;fileTransferUtilityRequest&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;TransferUtilityUploadRequest&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;BucketName&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;yourBucketName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;FilePath&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;yourFilepath&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;StorageClass&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;S3StorageClass&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StandardInfrequentAccess&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;PartSize&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="m"&gt;6291456&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// 6 MB.&lt;/span&gt;
            &lt;span class="n"&gt;Key&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;yourfileKey&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;CannedACL&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;S3CannedACL&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PublicRead&lt;/span&gt; &lt;span class="c1"&gt;// to determine Access control list to file&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;

        &lt;span class="c1"&gt;//if you need to add metadata to your files&lt;/span&gt;
        &lt;span class="n"&gt;fileTransferUtilityRequest&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Metadata&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"param1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Value1"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;fileTransferUtilityRequest&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Metadata&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"param2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Value2"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;fileTransferUtility&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;UploadAsync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fileTransferUtilityRequest&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Upload 4 completed"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;AmazonS3Exception&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Error encountered on server. Message:'{0}' when writing an object"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Exception&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Unknown encountered on server. Message:'{0}' when writing an object"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;☞&lt;strong&gt;4- Get Object data:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt; &lt;span class="nf"&gt;ReadObjectDataAsync&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;yourBucketName&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"TestBucket"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;yourfileKey&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Your Unique Key here"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;responseBody&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;GetObjectRequest&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;GetObjectRequest&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;BucketName&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;yourBucketName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;Key&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;yourfileKey&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;
        &lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;GetObjectResponse&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;s3Client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;GetObjectAsync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Stream&lt;/span&gt; &lt;span class="n"&gt;responseStream&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ResponseStream&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;StreamReader&lt;/span&gt; &lt;span class="n"&gt;reader&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;StreamReader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;responseStream&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Metadata&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"x-amz-meta-title"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt; &lt;span class="c1"&gt;// Assume you have "title" as medata added to the object.&lt;/span&gt;
            &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;contentType&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Headers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"Content-Type"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
            &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Object metadata, Title: {0}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Content type: {0}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;contentType&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;responseBody&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;reader&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ReadToEnd&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// Now you process the response body.&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;AmazonS3Exception&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// If bucket or object does not exist&lt;/span&gt;
        &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Error encountered ***. Message:'{0}' when reading object"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Exception&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Unknown encountered on server. Message:'{0}' when reading object"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;☞&lt;strong&gt;5- Delete Object:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt; &lt;span class="nf"&gt;DeleteObject&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;yourBucketName&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"TestBucket"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;yourfileKey&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Your Unique Key here"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;deleteObjectRequest&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;DeleteObjectRequest&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;BucketName&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;yourBucketName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;Key&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;yourfileKey&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;

        &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Deleting an object"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;s3Client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;DeleteObjectAsync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;deleteObjectRequest&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;AmazonS3Exception&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Error encountered on server. Message:'{0}' when deleting an object"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Exception&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Unknown encountered on server. Message:'{0}' when deleting an object"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;☞&lt;strong&gt;6- List all objects in a bucket:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt; &lt;span class="nf"&gt;GetObjectsList&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;ListVersionsRequest&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;ListVersionsRequest&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;BucketName&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Your Bucket Name"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="c1"&gt;// You can optionally specify key name prefix in the request&lt;/span&gt;
            &lt;span class="c1"&gt;// if you want list of object versions of a specific object.&lt;/span&gt;

            &lt;span class="c1"&gt;// For this example we limit response to return list of 2 versions.&lt;/span&gt;
            &lt;span class="n"&gt;MaxKeys&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;
        &lt;span class="k"&gt;do&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;ListVersionsResponse&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;s3Client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ListVersionsAsync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="c1"&gt;// Process response.&lt;/span&gt;
            &lt;span class="k"&gt;foreach&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S3ObjectVersion&lt;/span&gt; &lt;span class="n"&gt;entry&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Versions&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"key = {0} size = {1}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Size&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;

            &lt;span class="c1"&gt;// If response is truncated, set the marker to get the next &lt;/span&gt;
            &lt;span class="c1"&gt;// set of keys.&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IsTruncated&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;KeyMarker&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NextKeyMarker&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;VersionIdMarker&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NextVersionIdMarker&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;request&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt; &lt;span class="p"&gt;!=&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;AmazonS3Exception&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Error encountered on server. Message:'{0}' when writing an object"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Exception&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Unknown encountered on server. Message:'{0}' when writing an object"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;p&gt;That's is for now :)&lt;br&gt;
Please wait for other topics about AWS other SDKs ..&lt;/p&gt;

&lt;p&gt;Please have a look at the repo of this topic &lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/Ahmed-Adel3"&gt;
        Ahmed-Adel3
      &lt;/a&gt; / &lt;a href="https://github.com/Ahmed-Adel3/AWSSDK.S3-Demo"&gt;
        AWSSDK.S3-Demo
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      This is a simple implementation for AWSSDK.S3 which is one of the SDK provided by AWS for .Net applications to handle connections and operations on S3 buckets
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
➽To use this repo :&lt;/h1&gt;
&lt;p&gt;☞You just to put your ows &lt;strong&gt;AWS Access Key&lt;/strong&gt; and &lt;strong&gt;AWS Secret Access Key&lt;/strong&gt; in the main method in the console app and try.&lt;/p&gt;

&lt;h1&gt;
➽What is the AWS SDK for .NET?&lt;/h1&gt;
&lt;p&gt;☞The AWS SDK for .NET makes it easier to build .NET applications that tap into cost-effective, scalable, and reliable AWS services such as Amazon Simple Storage Service (&lt;code&gt;Amazon S3&lt;/code&gt;) and Amazon Elastic Compute Cloud (&lt;code&gt;Amazon EC2&lt;/code&gt;). The SDK simplifies the use of AWS services by providing a set of libraries that are consistent and familiar for .NET developers.&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/54df0e316c22fb004f8df909de0fa9a3519be99d5db8fda7b2e4abdcd4c69e6f/68747470733a2f2f6465762d746f2d75706c6f6164732e73332e616d617a6f6e6177732e636f6d2f75706c6f6164732f61727469636c65732f3067657a7031646a357864696a6e653362366e362e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/54df0e316c22fb004f8df909de0fa9a3519be99d5db8fda7b2e4abdcd4c69e6f/68747470733a2f2f6465762d746f2d75706c6f6164732e73332e616d617a6f6e6177732e636f6d2f75706c6f6164732f61727469636c65732f3067657a7031646a357864696a6e653362366e362e706e67" alt="AWS SDKs"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Let's start in this article with the first SDK which is &lt;code&gt;AWSSDK.S3&lt;/code&gt; ...&lt;/p&gt;
&lt;p&gt;&lt;code&gt;AWSSDK.S3&lt;/code&gt; is a SDK that helps .Net Developers to use Access Amazon Simple Storage Service (&lt;code&gt;Amazon S3&lt;/code&gt;) in their applications  to create buckets and store objects.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Amazon S3&lt;/code&gt; is storage for the Internet. It is designed to…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/Ahmed-Adel3/AWSSDK.S3-Demo"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;
&lt;strong&gt;➽To use this repo :&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
☞You just to put your ows &lt;strong&gt;AWS Access Key&lt;/strong&gt; and &lt;strong&gt;AWS Secret Access Key&lt;/strong&gt; in the main method in the console app and try.&lt;/p&gt;

</description>
      <category>aws</category>
      <category>cloud</category>
      <category>dotnet</category>
      <category>csharp</category>
    </item>
  </channel>
</rss>
