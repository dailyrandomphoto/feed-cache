<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>yo</title>
      <author>Coder rudra</author>
      <pubDate>Wed, 15 Dec 2021 09:28:13 +0000</pubDate>
      <link>https://dev.to/coderrudra/yo-53ed</link>
      <guid>https://dev.to/coderrudra/yo-53ed</guid>
      <description>&lt;p&gt;are you following me? are you subscribed to me if not GET OUT OF MY SIGHT&lt;/p&gt;

</description>
      <category>yo</category>
    </item>
    <item>
      <title>Luos Get Startedd: tuto #3</title>
      <author>Emanuel Allely</author>
      <pubDate>Wed, 15 Dec 2021 09:08:17 +0000</pubDate>
      <link>https://dev.to/luos/luos-get-startedd-tuto-3-4537</link>
      <guid>https://dev.to/luos/luos-get-startedd-tuto-3-4537</guid>
      <description>&lt;p&gt;After the tutorials #1 and #2 of the Luos Get Started (&lt;a href="https://youtu.be/VcK-LJ-gnDo"&gt;https://youtu.be/VcK-LJ-gnDo&lt;/a&gt;). Here is the final one → &lt;a href="https://youtu.be/3NsDadp1IYM"&gt;https://youtu.be/3NsDadp1IYM&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Luos is an open-source and real-time orchestrator for distributed architectures, to easily design, test and deploy embedded applications (like Tesla, SpaceX and Dyson do!).&lt;/p&gt;

&lt;p&gt;If you have questions, join the Community: &lt;a href="https://www.luos.io"&gt;https://www.luos.io&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/3NsDadp1IYM"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>tutorial</category>
      <category>opensource</category>
      <category>embedded</category>
      <category>luos</category>
    </item>
    <item>
      <title>Why Every Developer should Learn Docker in 2022</title>
      <author>javinpaul</author>
      <pubDate>Wed, 15 Dec 2021 08:39:56 +0000</pubDate>
      <link>https://dev.to/javinpaul/why-every-developer-should-learn-docker-in-2022-2ndi</link>
      <guid>https://dev.to/javinpaul/why-every-developer-should-learn-docker-in-2022-2ndi</guid>
      <description>&lt;p&gt;&lt;em&gt;Disclosure: This post includes affiliate links; I may receive compensation if you purchase products or services from the different links provided in this article.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.educative.io/courses/working-with-containers-docker-docker-compose?affiliate_id=5073518643380224"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3zoaZNWJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.educative.io/cdn-cgi/image/f%3Dauto%2Cfit%3Dcover%2Cw%3D620/v2api/collection/10370001/6445473125629952/image/5769023684870144" alt="Working with Containers: Docker &amp;amp;amp; Docker Compose - Learn Interactively" width="620" height="310"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hello Devs, if you are wondering whether you should learn Docker in 2022 or not then you have come to the right place. I have been asking my readers to learn Docker since last year and also shared &lt;a href="(https://www.java67.com/2018/02/5-free-docker-courses-for-java-and-DevOps-engineers.html)"&gt;free Docker courses&lt;/a&gt; and &lt;a href="https://javarevisited.blogspot.com/2020/04/top-5-books-to-learn-docker-for-beginners.html"&gt;best Docker books&lt;/a&gt; to encourage them to learn Docker. &lt;/p&gt;

&lt;p&gt;Why have I been doing this? Because Docker is not just another tool, it's a game-changer, and I firmly believe that every Programmer, be it a Java developer, a C++ developer, or a Web Developer coding in JavaScript, all should learn Docker. &lt;/p&gt;

&lt;p&gt;The first and foremost reason is that Docker simplifies both the development and Deployment of Software projects, for example, you can deploy a &lt;a href="https://javarevisited.blogspot.com/2018/02/top-5-spring-microservices-courses-with-spring-boot-and-spring-cloud.html"&gt;Java Microservice&lt;/a&gt; in the same way as a node application once you wrap them in a container. &lt;/p&gt;

&lt;p&gt;Just like &lt;a href="https://medium.com/javarevisited/6-best-maven-courses-for-beginners-in-2020-23ea3cba89"&gt;Maven&lt;/a&gt; made it easy to maintain project dependencies, Docker takes it to another level by building applications and shipping them into containers.&lt;/p&gt;

&lt;p&gt;When you ship applications into the container, you don't need to deploy your application, OS, database, runtimes separately, instead you use them together as a container. &lt;/p&gt;

&lt;p&gt;This makes deployment and scaling easier. If you want to scale further, you can deploy more containers very quickly instead of setting up a whole new environment.&lt;/p&gt;

&lt;p&gt;Similarly, if you want to scale down, you can destroy containers quickly, and the best thing is you don't need to do that yourself, there are tools like &lt;a href="https://javarevisited.blogspot.com/2019/05/top-5-courses-to-learn-docker-and-kubernetes-for-devops.html#axzz6ehrUZiIN"&gt;Kubernetes&lt;/a&gt; which can manage and scale your Docker containers automatically.&lt;/p&gt;

&lt;p&gt;Docker is also a big help for programmers, especially when you are starting on a new application. It is often troublesome to set up your application in IDE and run it from your Windows or &lt;a href="https://medium.com/javarevisited/top-10-courses-to-learn-linux-command-line-in-2020-best-and-free-f3ee4a78d0c0"&gt;Linux machine&lt;/a&gt; where you are doing development because of dependencies like on OS or a particular library, which is only available in specific versions of OS.&lt;/p&gt;

&lt;p&gt;With &lt;a href="https://medium.com/javarevisited/10-free-courses-to-learn-docker-and-devops-for-frontend-developers-691ac7652cee"&gt;Docker&lt;/a&gt;, you don't need that, you can just ship your application as a Docker image, and your team member can start and debug the application by running Docker images as a container. &lt;/p&gt;

&lt;p&gt;This makes the Developer's life easy. Docker also helps with &lt;a href="https://medium.com/javarevisited/13-best-courses-to-learn-devops-for-senior-developers-in-2020-a2997ff7c33c"&gt;DevOps&lt;/a&gt; because it simplifies deployment and scaling, and that's why Every DevOps engineer should learn Docker in 2022.&lt;/p&gt;

&lt;p&gt;These simplification of development, deployment, scalability, and DevOps are significant reasons to learn Docker in 2022, now that you know the crux of it let's go into a little bit more detail to understand why &lt;a href="https://javarevisited.blogspot.com/2018/02/10-free-docker-container-courses-for-Java-Developers.html"&gt;Docker&lt;/a&gt; is such an essential tool for programmers and DevOps professionals.&lt;/p&gt;

&lt;p&gt;With every organization going towards the Cloud, the container model is going to be even more critical in the coming years, and Docker and Kubernetes will play a significant role in deploying and running software from Cloud.&lt;/p&gt;

&lt;p&gt;That's why it's very, very important for both programmers and DevOps engineers to learn Docker and Kubernetes to do well on their current job and add an in-demand technical skill into their colorful resume.&lt;/p&gt;

&lt;p&gt;And if you are serious about learning Docker in 2022 then I highly recommend you to check out Maximilian Schwarzmuller's  &lt;strong&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fdocker-kubernetes-the-practical-guide%2F"&gt;Docker &amp;amp; Kubernetes: The Practical Guide&lt;/a&gt;&lt;/strong&gt; course on Udemy This 23 course is now available for just $10 only on Udemy sale, which is like free considering its value.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fdocker-kubernetes-the-practical-guide%2F"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9sgMsdAJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ytimg.com/vi/1mzlOUyPkzU/maxresdefault.jpg" alt="Docker &amp;amp;amp; Kubernetes: The Practical Guide best course" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#1-what-is-a-docker-image"&gt;
  &lt;/a&gt;
  1. &lt;strong&gt;What is a Docker image?&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Docker image is like a snapshot of your application. It is an executable file (like a big tarball) that contains everything your application needs to run, including operating systems, third-party libraries, configuration, and any other dependencies you need to execute your application.&lt;/p&gt;

&lt;p&gt;You create a docker image by running the docker build command which takes your Dockerfile and creates a Docker image.&lt;/p&gt;

&lt;p&gt;`` $ docker build -t myapp:v1.0 .&lt;/p&gt;

&lt;p&gt;This command is building a Docker image from the docker file **myapp **which is present in the current directory. It has multiple layers stacked on top of each other and is represented as a single object. A docker image is created using a docker file, we will get to that in a bit.&lt;/p&gt;

&lt;p&gt;You can also see all the images using the docker image command.  You can further see &lt;strong&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=CuIbQrBnhiw&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fdocker-mastery%2F"&gt;Docker Mastery: with Kubernetes +Swarm from a Docker Captain &lt;/a&gt;&lt;/strong&gt; course to learn more about essential Docker concepts and commands. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fdocker-kubernetes-the-practical-guide%2F"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RoIIg6o0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://1.bp.blogspot.com/-XdysovKSUNs/XuW3jYV8uCI/AAAAAAAAf5w/0rCx4qYFT8UswPckI6WBYwxLpU1HPWEGQCLcBGAsYHQ/w400-h211/Docker%252Bimage%252Band%252BDocker%252Bcontainer%252BPluralsight%252Bcourse.png" alt="Why Developer should learn Docker" width="394" height="211"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#2-what-is-a-docker-container"&gt;
  &lt;/a&gt;
  2. &lt;strong&gt;What is a Docker container?&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Docker Container is a running instance of your docker image. When you run your docker image using the $ docker run command then these containers are created. Y*ou can run as many containers as you want using the same docker image.*&lt;/p&gt;

&lt;p&gt;You can even run them on the same host as they are completely &lt;em&gt;separated&lt;/em&gt; from each other. This is truly great and allows you to run any command from the web as the effect will be isolated to only that Docker container. Many online interactive courses platform like &lt;a href="https://javarevisited.blogspot.com/2020/05/top-10-educative-courses-for-programmers.html"&gt;Educative&lt;/a&gt;, use Docker containers to allow users to run code from the browser.&lt;/p&gt;

&lt;p&gt;So, you can see that it's straightforward to use Docker. All you need is to make a start, download &lt;a href="https://www.docker.com/"&gt;Docker&lt;/a&gt;, create a Docker image by reusing an existing one from the &lt;a href="https://hub.docker.com/"&gt;Docker hub&lt;/a&gt;, and start running your application inside Docker container.&lt;/p&gt;

&lt;p&gt;``$ docker run -p 8084:8084 -d myapp:v1.0&lt;/p&gt;

&lt;p&gt;This command will start the docker container which will listen on port 8084. It will also be running in the background because we started the container in detached mode ( -d  option).&lt;/p&gt;

&lt;p&gt;Now when you run the docker ps command you can see this container running on the host/&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.java67.com/2019/03/5-free-devops-courses-to-learn-jenkins.html"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6kAg9_QK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://1.bp.blogspot.com/-rKWkeYq8B8o/XuW2fmcM9pI/AAAAAAAAf5Y/a_i_O5jtx5MeyXW1YDUyf1V2i_6MS2bSQCLcBGAsYHQ/w400-h308/Docker%252Bcontainer%252Bon%252BLinux%252BUdemy%252BCourse.png" alt="why Java developer should learn Docker" width="398" height="308"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#3-what-is-difference-between-virtual-machine-and-docker"&gt;
  &lt;/a&gt;
  3. What is difference between Virtual Machine and Docker?
&lt;/h3&gt;

&lt;p&gt;Many developers often confuse between a VM and a Docker container. Let me tell you that both of them are different things.&lt;/p&gt;

&lt;p&gt;They may look similar, but the most crucial difference between a Virtual Machine and Docker is that the underlying physical host and its resources are shared in containers but not in a Virtual Machine.&lt;/p&gt;

&lt;p&gt;Since a picture is worth a thousand words, here is a diagram that clearly shows the difference between a Virtual machine and a &lt;a href="https://medium.com/javarevisited/top-15-online-courses-to-learn-docker-kubernetes-and-aws-for-fullstack-developers-and-devops-d8cc4f16e773"&gt;Docker&lt;/a&gt; or any other container:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.java67.com/2018/02/5-free-docker-courses-for-java-and-DevOps-engineers.html"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2rMJTbJh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://1.bp.blogspot.com/-7LLnVOvSriY/XuW0iPFjJjI/AAAAAAAAf5I/yYICo2gtsMcjidkSYsLH6IxSejWuOU7CwCLcBGAsYHQ/w400-h200/Docker%252BContainer%252Bvs%252BVirtual%252BMachines.png" alt="Docker vs Virtual Machine" width="395" height="200"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#4-how-do-you-use-docker"&gt;
  &lt;/a&gt;
  4. &lt;strong&gt;How do you use Docker?&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Now the question comes, how can programmers use Docker? Well, to use Docker you need to install it. Once you install Docker, you can execute docker commands to create a Docker file that contains the instructor to create a Docker image.&lt;/p&gt;

&lt;p&gt;Once you have a Docker image you can run them using the $ docker run command and it will create Docker containers running your application.&lt;/p&gt;

&lt;p&gt;I use Docker to run our apps which can only be run on Linux servers, earlier I used Virtual Box but with Docker I don't really need it. &lt;/p&gt;

&lt;p&gt;You can further see &lt;a href="https://www.educative.io/courses/docker-for-developers?affiliate_id=5073518643380224"&gt;Docker for Developers&lt;/a&gt; course on Educative to learn more about how developers can use Docker to make their life simple. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.educative.io/courses/docker-for-developers?affiliate_id=5073518643380224"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DJ8FYBIg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.educative.io/cdn-cgi/image/f%3Dauto%2Cfit%3Dcover%2Cw%3D620/v2api/collection/10370001/6598398019371008/image/5016866440871936" alt="Docker for Developers - Learn Interactively course" width="620" height="310"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#5-why-do-developers-and-devops-use-docker"&gt;
  &lt;/a&gt;
  5. Why do Developers and DevOps use Docker?
&lt;/h3&gt;

&lt;p&gt;A couple of years back, when the business needed other applications, the &lt;a href="https://javarevisited.blogspot.com/2018/09/10-devops-courses-for-experienced-java-developers.html"&gt;DevOps&lt;/a&gt; or infra team would raise a request to purchase new servers and buy a server without knowing the performance requirements of the new application.&lt;/p&gt;

&lt;p&gt;This often results in a wastage of money and resources, which could be used for other apps. They try to solve this problem by sharing a single host with multiple applications by running them on different participation, but that also put some management and operational overhead.&lt;/p&gt;

&lt;p&gt;Then comes a wave of Virtualization and Virtual machines or VM, which allowed &lt;a href="https://medium.com/javarevisited/top-5-online-courses-to-become-a-devops-engineer-in-2020-764f5e60c2b"&gt;DevOps engineers&lt;/a&gt; to run multiple applications on the same physical resource but as a completely different server like you have separate runtime space and name, but there was a potential drawback.&lt;/p&gt;

&lt;p&gt;Every Virtual machine required an entire OS to run. Every OS needs its own CPU, RAM, etc. to run, it needs patching and licensing, which in turn increases cost and resiliency. &lt;/p&gt;

&lt;p&gt;Then comes the container model or Docker model, which was aimed to address the shortcomings of the Virtual Machine and mitigate the wastage of resources by sharing OS, CPU, and RAM and so far its most successful model.&lt;/p&gt;

&lt;p&gt;It helps you scale your application on-demand as Docker makes the deployment easy and Kubernetes makes the deployment of Docker container at scale easier (see **&lt;a href="https://www.educative.io/courses/practical-guide-to-kubernetes?affiliate_id=5073518643380224"&gt;A Practical Guide to Kubernetes&lt;/a&gt; **course) on Cloud Platforms like AWS, Azure, and Google Cloud Platform.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=CuIbQrBnhiw&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Flearn-docker%2F"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--po9esdJj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://1.bp.blogspot.com/-ecK4k9DB_AU/X_G9JaF68MI/AAAAAAAAlYg/pLse1PgHc3kkRjs00MBb_6EF0PS-QZoHgCLcBGAsYHQ/w400-h259/Why%252Bevery%252Bprogrammer%252Bshould%252Blearn%252BDocker.png" alt="why every developer should learn Docker" width="400" height="259"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#6-how-does-docker-helps-developers"&gt;
  &lt;/a&gt;
  6. How does Docker helps Developers?
&lt;/h3&gt;

&lt;p&gt;The most significant benefit of Docker from a programmer's or developer's perspective is that it makes sure that the execution environment is the same for all developers and all servers I mean, including UAT, QA, Production.&lt;/p&gt;

&lt;p&gt;The good thing is that any member of the team can set up the project quickly, with no need to mess with config, install libraries, set up dependencies, etc. In simple language, Docker is a platform that enables us to develop, deploy, and run applications with containers.&lt;/p&gt;

&lt;p&gt;You can further check &lt;strong&gt;&lt;a href="https://pluralsight.pxf.io/c/1193463/424552/7490?u=https%3A%2F%2Fwww.pluralsight.com%2Fcourses%2Fdocker-getting-started"&gt;Getting Started with Docker&lt;/a&gt;&lt;/strong&gt; By Nigel Poulton on Pluralsight to learn more about what benefits Docker offers to web developers. This diagram highlights some of the major benefits Docker offers to programmers and developers.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://pluralsight.pxf.io/c/1193463/424552/7490?u=https%3A%2F%2Fwww.pluralsight.com%2Fcourses%2Fdocker-getting-started"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S7ZLR1my--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://1.bp.blogspot.com/-B01GYFxVm84/XuW3jQICFCI/AAAAAAAAf50/oFzEIcZPlKoG7n6N7kzwuW-EDzZ5-GnhgCLcBGAsYHQ/w400-h187/Docker%252Bbenefit%252Bfor%252BWeb%252Bdevelopers%252Bpluralsight%252Bcourse.png" alt="best Pluralsight course to learn Docker" width="391" height="187"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;By the way, you will need a Pluralsight membership to join this course which costs around $29 per month or $199 per year &lt;strong&gt;(40% discount now&lt;/strong&gt;). I highly recommend this subscription to all programmers as it provides instant access to more than 7000+ online courses to learn any tech skill. Alternatively, you can also use their &lt;strong&gt;&lt;a href="https://pluralsight.pxf.io/c/1193463/424552/7490?u=https%3A%2F%2Fwww.pluralsight.com%2Flearn"&gt;10-day-free-trial&lt;/a&gt;&lt;/strong&gt; to watch this course for FREE.&lt;/p&gt;




&lt;p&gt;That's all about &lt;strong&gt;why a developer should learn Docker in 2022.&lt;/strong&gt; As I said, Docker really simplifies how you develop and deploy your code, and run your application. Shipping your application into a container makes deployment and scaling smooth and drives automation. It makes DevOps easy and makes your production environment robust.&lt;/p&gt;

&lt;p&gt;With a more significant push to Cloud every year, the container model is going to be the default model for software development, and Docker and Kubernetes will play an essential role in the near future. &lt;/p&gt;

&lt;p&gt;That's why every Developer and DevOps engineer should learn Docker to do well in their current job and also add an in-demand skill on their resume to get a better job.&lt;/p&gt;

&lt;p&gt;Other &lt;strong&gt;DevOps Articles and Courses&lt;/strong&gt; you may like&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://dev.to/javinpaul/top-10-courses-to-learn-docker-and-kubernetes-for-programmers-4lg0"&gt;10 Docker and Kubernetes Courses for Programmers&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/hackernoon/the-2018-devops-roadmap-31588d8670cb"&gt;The DevOps Developer RoadMap&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/javarevisited/top-10-courses-to-learn-devops-for-experienced-programmers-d93b666db151"&gt;My favorite courses to learn DevOps for experienced&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/javarevisited/top-10-courses-to-learn-amazon-web-services-aws-cloud-in-2020-best-and-free-317f10d7c21d"&gt;10 Free Courses to learn AWS and Cloud for Programmers&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/javarevisited/top-7-courses-to-learn-selenium-for-java-and-c-developers-to-learn-automation-testing-free-and-e91637cd9622"&gt;7 Free Courses to learn Selenium for DevOps&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.sg/2018/02/10-free-docker-container-courses-for-Java-Developers.html"&gt;10 Free Docker Courses for Java and DevOps Professionals&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2018/09/top-5-jenkins-courses-for-java-and-DevOps-Programmers.html"&gt;Top 5 Courses to Learn Jenkins for Automation and DevOps&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/javarevisited/7-free-online-courses-to-learn-kubernetes-in-2020-3b8a68ec7abc"&gt;7 Free Online Courses to learn Kubernetes&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2020/05/top-5-amazon-web-services-aws-courses-for-beginners-and-experienced-programmers.html"&gt;My favorite courses to learn Amazon Web Service&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/javarevisited/13-best-courses-to-learn-devops-for-senior-developers-in-2020-a2997ff7c33c"&gt;13 Best DevOps Courses for Senior Developers &lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2020/04/top-5-books-to-learn-devops-for-developers.html"&gt;Top 5 Books to learn DevOps for Beginners&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/javarevisited/top-15-online-courses-to-learn-docker-kubernetes-and-aws-for-fullstack-developers-and-devops-d8cc4f16e773"&gt;15 online Courses to learn Docker, Kubernetes, and AWS &lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thanks for reading this article so far. If you also think that &lt;em&gt;every developer or Programmer should learn Docker in 2022&lt;/em&gt;, then please share it with your friends and colleagues. Together we'll help each other to become better programmers and developers.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;P. S. -&lt;/strong&gt; If you are want to learn Docker and Kubernetes in-depth and looking for the best online courses then you can also check out Stephen Grider's &lt;strong&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fdocker-and-kubernetes-the-complete-guide%2F"&gt;Docker and Kubernetes: The Complete Guide&lt;/a&gt;&lt;/strong&gt; course on Udemy. It's a great course to learn both of these tools in 2022.&lt;/p&gt;

</description>
      <category>docker</category>
      <category>devops</category>
      <category>programming</category>
      <category>developer</category>
    </item>
    <item>
      <title>ES6 - A beginners guide - Promises and Fetch</title>
      <author>Stefan Wright</author>
      <pubDate>Wed, 15 Dec 2021 08:00:48 +0000</pubDate>
      <link>https://dev.to/stefanwrightcodes/es6-a-beginners-guide-promises-and-fetch-24ln</link>
      <guid>https://dev.to/stefanwrightcodes/es6-a-beginners-guide-promises-and-fetch-24ln</guid>
      <description>&lt;h2&gt;
  &lt;a href="#promises-and-fetch"&gt;
  &lt;/a&gt;
  Promises and Fetch
&lt;/h2&gt;

&lt;p&gt;This time I am going to cover ES6's introduction of Promise and Fetch as native JavaScript functionality in the browser. A lot of dev's will use 3rd party libraries such as Axios, SuperAgent, or jQuery although it might not always be necessary to do so and it may just add bloat to your projects. We'll start by looking at ES6 Promises, before heading on over to details about Fetch&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#promises"&gt;
  &lt;/a&gt;
  Promises
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#what-is-a-promise"&gt;
  &lt;/a&gt;
  What is a Promise?
&lt;/h3&gt;

&lt;p&gt;Much like in the real world, a promise is the result of saying we will do something and give something back. Let's say we wanted to run this piece of code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;http://www.json.com&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;makeRequest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above, our console.log will result in showing undefined because we will simply be executing line 3 immediately after line 2, regardless of how quick that makeRequest function runs, it will never be quicker than the execution of the following line. JavaScript Promises give us a method of using 3 different states whilst waiting for something to complete, such as an AJAX request. The three states were can use are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;unresolved&lt;/code&gt; - This is out "waiting" phase, if we were to check in on the value of a Promise periodically using a setTimeout() or similar we would see this until the promise either completed or failed&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;resolved&lt;/code&gt; - This is our "finished" state, we have finished getting the data, the promise is fulfilled and something is ready to be returned.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;rejected&lt;/code&gt; - This is our "error" state, something went wrong, this would be used to trigger some form of error handling.
Off the back of these states we have two possible callbacks that we can use:&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;then&lt;/code&gt; - This can be used after a &lt;code&gt;resolved&lt;/code&gt; state is triggered, it tells our code what to do next&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;catch&lt;/code&gt; - Much like with a try/catch loop, this is where we perform our error handling
### How about an example?
The following examples, can easily be plugged straight into the Dev Tools of your browser and run from the Console screen. Let's get started:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;promise&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Uh oh! we got an error, but why? well, if you run the above code you should see an error similar to &lt;code&gt;Uncaught TypeError: Promise resolver undefined is not a function&lt;/code&gt;. This error response is telling us that the browser knows what a Promise is, but we haven't told it what to do in order to resolve the promise. It's actually really simple to fix. Let's fix it now:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;promise&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we have created a promise, if you run the above code you'll see that it gives a response similar to this:&lt;br&gt;
&lt;code&gt;Promise {&amp;lt;pending&amp;gt;}[[Prototype]]: Promise[[PromiseState]]: "pending"[[PromiseResult]]: undefined&lt;/code&gt;. So now we have created a promise, it doesn't do much right now though. When we define a promise we need to handle how/when its resolved and rejected, luckily the &lt;code&gt;Promise&lt;/code&gt; had two built in arguments that we can use, these are &lt;code&gt;resolve&lt;/code&gt; and &lt;code&gt;reject&lt;/code&gt;. Let's have a look at that:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;promiseResolve&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the code above you'll see we create a new &lt;code&gt;Promise&lt;/code&gt;, we include our two arguments in our inner function. We then call &lt;code&gt;resolve()&lt;/code&gt; inside our function in order to complete the execution. If you run the code above the browser will output something like: &lt;code&gt;Promise {&amp;lt;fulfilled&amp;gt;: undefined}&lt;/code&gt;. Likewise we can do the same with &lt;code&gt;reject()&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;promiseReject&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Wait! we got a warning, we have the following returned &lt;code&gt;Promise {&amp;lt;rejected&amp;gt;: undefined}&lt;/code&gt; this is expected, however we also got &lt;code&gt;Uncaught (in promise) undefined&lt;/code&gt; because we didn't handle the rejection properly. Let's look at our callbacks, they'll help us handle both state calls above.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#using-callbacks"&gt;
  &lt;/a&gt;
  Using callbacks
&lt;/h3&gt;

&lt;p&gt;ES6 Promises give us two built in callback methods as mentioned above they are &lt;code&gt;.then()&lt;/code&gt; and &lt;code&gt;.catch()&lt;/code&gt;. We can use &lt;code&gt;.then()&lt;/code&gt; when we resolve a promise to instruct our code on the next action, and the parameter in the function will automatically take the value that was returned in our promise. Let's look at an example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;promiseResolve&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Promise resolved&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;promiseResolve&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;resolvedValue&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;resolvedValue&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Still resolved&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Notice how in our first &lt;code&gt;.then()&lt;/code&gt; we have a parameter for our function, we then use that parameter in the return of the arrow function, however rather than giving us an error about the variable being undefined the above code will actually give use the following output:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Promise resolved
Still resolved
Promise {&amp;lt;fulfilled&amp;gt;: undefined}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So as we can see &lt;code&gt;resolvedValue&lt;/code&gt; actually gives us the value we passed back in the resolve. We're going to revisit this later in the article when we look at using &lt;code&gt;fetch&lt;/code&gt; to pull remote data. Now on to error handling, let's jump straight into an example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;promiseReject&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Promise rejected&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;promiseReject&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Promise resolved&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Still resolved&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As with the above, we can now see that our catch is including a parameter and our console.log message contains &lt;code&gt;Promise rejected&lt;/code&gt; but we do not output &lt;code&gt;Promise resolved&lt;/code&gt; or &lt;code&gt;Still resolved&lt;/code&gt; and this is because we fired the &lt;code&gt;reject()&lt;/code&gt; line in out promise.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#using-asyncronous-callbacks"&gt;
  &lt;/a&gt;
  Using asyncronous callbacks
&lt;/h3&gt;

&lt;p&gt;We can use asyncronous callback in our ES6 Promises, this can help to simulate what would happen when making an AJAX call or similar to pull data. In the example below we will wait for 5 seconds before resolving our promise.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;promiseAsync&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Starting Promise...&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Promise resolved&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)},&lt;/span&gt; &lt;span class="mi"&gt;5000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;promiseAsync&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Promise rejected&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can use a library like jQuery to make a request and using a promise we can then take an action when it completes, take a look below, we will add a log to say we have started, then we'll fetch a JSON sample of blog posts in a promise, and then log that response&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;promiseAsync&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Starting promise&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ajax&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://jsonplaceholder.typicode.com/posts/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;GET&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;success&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;error&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="nx"&gt;promiseAsync&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Promise rejected&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Running the code above gives us &lt;code&gt;Starting promise&lt;/code&gt; and then &lt;code&gt;Array(100)&lt;/code&gt; in the dev tools. I ran this on JSFiddle so that I could ensure jQuery was included.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#so-what-about-fetch"&gt;
  &lt;/a&gt;
  So what about Fetch?
&lt;/h2&gt;

&lt;p&gt;Fetch is a new feature included with ES6, it provides us to combine a network request with a promise in a super simple form! It does have its limitations though, and i'll go into them in a bit, but first...you know what's coming...an example!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://jsonplaceholder.typicode.com/posts/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The code above will simply give us a pending Promise in the browser, that's no use to us in this state. With a Promise, as above, we would have to supply a function to handle the resolve/reject conditions, fetch does this for us though. All we need to do is supply callbacks&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://jsonplaceholder.typicode.com/posts/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Well, we're getting there, we now get the following output when we use this in the Console window:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Promise {&amp;lt;pending&amp;gt;}
Response {type: 'cors', url: 'https://jsonplaceholder.typicode.com/posts/', redirected: false, status: 200, ok: true, …}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This doesn't give us the actual response data, just some metadata. If we want to extract the actual information from jsonplaceholder we are going to pass this through a different function first, let's take a look:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://jsonplaceholder.typicode.com/posts/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Above, we are first using &lt;code&gt;.json()&lt;/code&gt; in order to take the response stream and render the response body text as JSON (&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Response/json"&gt;MDN Documentation&lt;/a&gt;), we then call &lt;code&gt;.then()&lt;/code&gt; again, this time taking in the return value from &lt;code&gt;response.json()&lt;/code&gt; and then passing that to &lt;code&gt;console.log&lt;/code&gt;. This gives us the following output:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Promise {&amp;lt;pending&amp;gt;}
(100) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#but-stefan-you-mentioned-some-downfalls-of-fetch"&gt;
  &lt;/a&gt;
  But Stefan, you mentioned some downfalls of Fetch??
&lt;/h2&gt;

&lt;p&gt;That's right, I did. I mentioned that we can use &lt;code&gt;.then()&lt;/code&gt; and &lt;code&gt;.catch()&lt;/code&gt; with Fetch, however the &lt;code&gt;.catch()&lt;/code&gt; handler isn't always triggered when you expect it. For example, if you go to a page/endpoint that does not exist and gives you an HTTP404 response you won't actually hit the &lt;code&gt;.catch()&lt;/code&gt; code&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;badUrl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://jsonplaceholder.typicode.com/posts1321654646186/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;badUrl&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;SUCCESS: &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ERROR&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The code above will give ue the following output:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Promise {&amp;lt;pending&amp;gt;}
GET https://jsonplaceholder.typicode.com/posts1321654646186/ 404 (Not Found)
SUCCESS: Response {type: 'cors', url: 'https://jsonplaceholder.typicode.com/posts1321654646186/', redirected: false, status: 404, ok: false, …}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can see we got a 404 response, but the output is from our &lt;code&gt;.then()&lt;/code&gt; callback. Fetch is designed in such a way that you would only hit the &lt;code&gt;.catch()&lt;/code&gt; callback is there was a network level error (such as a failed DNS lookup). The following example would actually go to the &lt;code&gt;.catch()&lt;/code&gt; callback:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;badUrlHost&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://jsonplaceholder.typicode12345.com/posts/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;badUrlHost&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;SUCCESS: &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ERROR&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This time our console gives us:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Promise {&amp;lt;pending&amp;gt;}
GET https://jsonplaceholder.typicode12345.com/posts/ net::ERR_TUNNEL_CONNECTION_FAILED
ERROR TypeError: Failed to fetch at &amp;lt;anonymous&amp;gt;:2:1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is ok, but we still want to handle HTTP4XX or HTTP5XX errors gracefully&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#there-is-a-way-around-this"&gt;
  &lt;/a&gt;
  There is a way around this
&lt;/h3&gt;

&lt;p&gt;There are generally a couple of suggested "workarounds" for working with these kinds of requests. If you NEED to use the Fetch API, then the following kind of code construction would be better for you:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;badUrl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://jsonplaceholder.typicode.com/posts1321654646186/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;badUrl&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ok&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;I'm an error&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Response Data&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ERROR&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the code above we are now throwing an exception because the response metadatas property for &lt;code&gt;ok&lt;/code&gt; was false.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Promise {&amp;lt;pending&amp;gt;}
GET https://jsonplaceholder.typicode.com/posts1321654646186/ 404 (Not Found)
ERROR Error: I'm an error
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;From the metadata we could use either &lt;code&gt;.ok&lt;/code&gt; or &lt;code&gt;.status&lt;/code&gt; if we wanted to handle errors differently for HTTP4xx errors as opposed to HTTP5XX errors (for example), or we could use both for generic error handling, such as below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;badUrl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://jsonplaceholder.typicode.com/posts1321654646186/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;badUrl&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ok&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; - &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;statusText&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Response Data&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ERROR&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we see the following error output:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Promise {&amp;lt;pending&amp;gt;}
GET https://jsonplaceholder.typicode.com/posts1321654646186/ 404 (Not Found)
ERROR Error: 404 - Not Found
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I mentioned that there were a couple of suggestions for workarounds, alternatives to the above would be using 3rd Party Libraries/Tools such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;jQuery (&lt;a href="https://jquery.com"&gt;https://jquery.com&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Axios (&lt;a href="https://axios-http.com/docs/intro"&gt;https://axios-http.com/docs/intro&lt;/a&gt;) - This is my personal favourite and I use it in my own projects&lt;/li&gt;
&lt;li&gt;SuperAgent (&lt;a href="https://github.com/visionmedia/superagent"&gt;https://github.com/visionmedia/superagent&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You could also just use XMLHttpRequest which has long been baked into browsers as default functionality, information on that can be found on &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest"&gt;MDN here&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Creating markdown blog or docs generator with js (serverless).</title>
      <author>SHUBHAM </author>
      <pubDate>Wed, 15 Dec 2021 07:55:20 +0000</pubDate>
      <link>https://dev.to/shubham_ingale/creating-markdown-blog-or-docs-generator-with-js-serverless-2e6b</link>
      <guid>https://dev.to/shubham_ingale/creating-markdown-blog-or-docs-generator-with-js-serverless-2e6b</guid>
      <description>&lt;p&gt;Hey there everyone ,&lt;br&gt;
If you've created blog on dev.to , you're might be familiar with blog generator with md.&lt;br&gt;
I'll share how you can create that type of generator with only js.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#libraries-to-use"&gt;
  &lt;/a&gt;
  libraries to use.
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/showdownjs/showdown"&gt;Showdown.js&lt;/a&gt; @showdownjs&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://sgi-capp-at2.github.io/"&gt;Markdown.css by sindresorhus&lt;/a&gt; @markdown-css&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#showdownjs"&gt;
  &lt;/a&gt;
  showdown.js
&lt;/h2&gt;

&lt;p&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hbOe4h0q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/showdownjs/logo/master/dist/logo.readme.png" class="article-body-image-wrapper"&gt;&lt;img alt="showdownjs-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--hbOe4h0q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/showdownjs/logo/master/dist/logo.readme.png" width="251" height="49"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;Showdownjs is a library which converts markdown code into HTML code.&lt;br&gt;
From&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight markdown"&gt;&lt;code&gt;&lt;span class="gh"&gt;# header&lt;/span&gt;
&lt;span class="gs"&gt;**Bold**&lt;/span&gt;
&lt;span class="ge"&gt;_italic_&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;header&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;strong&amp;gt;&lt;/span&gt;bold&lt;span class="nt"&gt;&amp;lt;/strong&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;em&amp;gt;&lt;/span&gt;italic&lt;span class="nt"&gt;&amp;lt;/em&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#how-to-use-showdownjs"&gt;
  &lt;/a&gt;
  How to use showdown.js
&lt;/h3&gt;

&lt;p&gt;You should visit to &lt;a href="https://github.com/showdownjs/showdown"&gt;official docs&lt;/a&gt; for advanced level tools of library.&lt;br&gt;
I'll show you how you can convert the md into html with GitHub flavour of markdown.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;my_markdown_input&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#mdinput&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;converter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;showdown&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;converter&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;converted_text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;converter&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;makeHtml&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;my_markdown_input&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// converted_text will be variable having html code &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#markdown-css"&gt;
  &lt;/a&gt;
  Markdown css
&lt;/h2&gt;

&lt;p&gt;The style created by sindresorhus which looks like github markdown body.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-use-markdown-css-"&gt;
  &lt;/a&gt;
  How to use markdown css ?
&lt;/h3&gt;

&lt;p&gt;The markdown css by sindresorhus is very simple to use. You just have to add classname "markdown-body" and it will convert html into GitHub like markdown styled html.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"markdown-body"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://sgi-capp-at2.github.io/blogs/Creating%20markdown%20blog%20or%20docs%20generator%20with%20js%20(serverless)./#how-to-use-markdown-css-"&gt;..Read More&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>markdown</category>
      <category>html</category>
      <category>webdev</category>
    </item>
    <item>
      <title>GitHub Students Developer Pack: Get $10000+ benefits</title>
      <author>Nomadev💻🔱</author>
      <pubDate>Wed, 15 Dec 2021 07:34:15 +0000</pubDate>
      <link>https://dev.to/thenomadevel/github-students-developer-pack-get-10000-benefits-2i84</link>
      <guid>https://dev.to/thenomadevel/github-students-developer-pack-get-10000-benefits-2i84</guid>
      <description>&lt;p&gt;Hello, techies  &lt;a href="https://twitter.com/thenomadevel"&gt;Nomadev &lt;/a&gt; here, back with another blog on tech. Today I will share what is possibly the best deal in tech, the  &lt;a href="https://education.github.com/pack"&gt;&lt;strong&gt;GitHub Student Developer Pack&lt;/strong&gt;&lt;/a&gt;. If you are wondering it's clickbait, the answer is a big no. GitHub Student Developer Pack is one of the most underrated and the most useful free developer pack of tools and resources a student can have. Before moving further first let's know about GitHub first.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-github"&gt;
  &lt;/a&gt;
  What is GitHub?
&lt;/h2&gt;

&lt;p&gt;It is a web-based version-control and collaboration platform for software developers. GitHub facilitates social coding by providing a web interface to the Git code repository and management tools for collaboration. GitHub is owned by &lt;strong&gt;Microsoft&lt;/strong&gt; and it is well known for being the best code hosting platform for version control and collaboration.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#github-student-developer-pack"&gt;
  &lt;/a&gt;
  GitHub Student Developer Pack
&lt;/h2&gt;

&lt;p&gt;GitHub Student Developer Pack is a super collection of all the things you need to learn how to code. This is made for the student developers to help them to have hands-on experience in various technologies. As for most students, real-world tools can be cost-prohibitive. GitHub created Student Developer Pack with some of their partners to help students to learn to code effectively for &lt;strong&gt;free&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2tyy4RVW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639552850180/_5p_LFPZWD.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2tyy4RVW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639552850180/_5p_LFPZWD.png" alt="gsdp.png" width="880" height="343"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-get-it"&gt;
  &lt;/a&gt;
  How to get it?
&lt;/h2&gt;

&lt;p&gt;You have to go to GitHub Education and select the Students section, there you will find an option named Get your Student Developer Pack.&lt;br&gt;
Or you can get there directly -  &lt;a href="https://education.github.com/pack"&gt;GitHub Student Developer Pack&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#requirements"&gt;
  &lt;/a&gt;
  Requirements
&lt;/h2&gt;

&lt;p&gt;To be eligible for the GitHub Student Developer Pack, you must:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Be currently enrolled in a degree or diploma-granting course of studies such as a high school, secondary school, college, university, homeschool, or similar educational institution&lt;/li&gt;
&lt;li&gt;Have a verifiable school-issued email address or upload documents that prove your current student status&lt;/li&gt;
&lt;li&gt;Have a GitHub user account&lt;/li&gt;
&lt;li&gt;Be at least 13 years old&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;In most of the cases, they will only ask your student email id&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-in-the-pack"&gt;
  &lt;/a&gt;
  What's in the pack?
&lt;/h2&gt;

&lt;p&gt;GitHub Student Developers Pack contains many real-world tools and numerous benefits. Here are some top offers.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#canva"&gt;
  &lt;/a&gt;
  Canva
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FhNOk9_8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639554822848/1iWwoPHed.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FhNOk9_8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639554822848/1iWwoPHed.png" alt="canva.png" width="300" height="168"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;With Canva, anyone can create professional-looking graphics and designs. Featuring thousands of templates and an easy-to-use editor.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Benefit&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Free 12 month subscription of Canva's Pro tier.&lt;br&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#jetbrains"&gt;
  &lt;/a&gt;
  JETBRAINS
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---6WNWK0H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639559300103/k7pRLwlyX.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---6WNWK0H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639559300103/k7pRLwlyX.png" alt="jet.png" width="880" height="492"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;About JetBrains - &lt;/p&gt;

&lt;p&gt;Professional desktop IDEs: IntelliJ IDEA, PyCharm, and more.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Benifit&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A free subscription for students, to be renewed annually.&lt;br&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#microsoft-azure"&gt;
  &lt;/a&gt;
  Microsoft Azure
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AuZZQXCh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639559287643/Qq-IcKSgk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AuZZQXCh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639559287643/Qq-IcKSgk.png" alt="azure.png" width="284" height="178"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Access to Microsoft Azure cloud services and learning resources – no credit card required&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Benifit&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Free access to 25+ Microsoft Azure cloud services plus $100 in Azure credit.&lt;br&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#bootstrap-studio"&gt;
  &lt;/a&gt;
  Bootstrap Studio
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7QfVZr4z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639559425415/Y2dvsWsyE.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7QfVZr4z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639559425415/Y2dvsWsyE.jpeg" alt="boot.jfif" width="389" height="129"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Bootstrap Studio is a powerful desktop app for creating responsive websites using the Bootstrap framework.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Benifit&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A free license for Bootstrap Studio while you are a student.&lt;br&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#digitalocean"&gt;
  &lt;/a&gt;
  DigitalOcean
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DlJze93---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639559439674/rnqahzlx0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DlJze93---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639559439674/rnqahzlx0.png" alt="digi.png" width="323" height="156"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Simple cloud hosting, built for developers&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Benifit&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;$100 in platform credit for new users.&lt;/p&gt;



&lt;h3&gt;
  &lt;a href="#github"&gt;
  &lt;/a&gt;
  GitHub
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--brLy1oR2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639559462347/0qyCG_tRrp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--brLy1oR2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639559462347/0qyCG_tRrp.png" alt="github.png" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Powerful collaboration, code review, and code management&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Benifit&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Free GitHub Pro while you are a student.&lt;/p&gt;



&lt;h3&gt;
  &lt;a href="#datacamp"&gt;
  &lt;/a&gt;
  DataCamp
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f9nqRgVt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639559494167/iBXTW8QPs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f9nqRgVt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639559494167/iBXTW8QPs.png" alt="datacamp.png" width="367" height="137"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;DataCamp helps companies and individuals make better use of data. Our users build data fluency while learning from the world’s top data scientists.&lt;/p&gt;

&lt;p&gt;Benefit&lt;/p&gt;

&lt;p&gt;Free 3-month individual subscription for students.&lt;/p&gt;




&lt;p&gt;and much more in the list, you can see explore them from here -  &lt;a href="https://education.github.com/pack"&gt;GitHub Education&lt;/a&gt; and get your real-time tools ready.&lt;/p&gt;

&lt;p&gt;I hope you liked it and for other such information make sure to follow me on  &lt;a href="https://twitter.com/thenomadevel"&gt;Twitter&lt;/a&gt; and here also.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/thenomadevel"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4oXBZZGL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638859846607/CmXZ9RBvb.jpeg" alt="Twitter.jpg" width="880" height="418"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;And if you want to appreciate my work you can  &lt;a href="https://www.buymeacoffee.com/nomadevel"&gt;buy me a coffee&lt;/a&gt;, &lt;strong&gt;Your appreciation is my motivation.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/nomadevel"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8Vno0upf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637869195331/r4SfPP57h.jpeg" alt="coffee.jfif" width="880" height="441"&gt;&lt;/a&gt; &lt;/p&gt;

</description>
      <category>github</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Top Reasons to Choose React as a Frontend</title>
      <author>Bhavik Sadhu</author>
      <pubDate>Wed, 15 Dec 2021 07:21:16 +0000</pubDate>
      <link>https://dev.to/bhaviksadhu/top-reasons-to-choose-react-as-a-frontend-47ml</link>
      <guid>https://dev.to/bhaviksadhu/top-reasons-to-choose-react-as-a-frontend-47ml</guid>
      <description>&lt;p&gt;Do you have a question about whether choose React for your project? Here's a brief review of the Top Reasons to Choose React as a Frontend. This is enough to make a choice.&lt;/p&gt;

&lt;p&gt;There are a lot of frameworks and libraries that may be used to develop frontend applications. Some are not excellent. &lt;a href="https://www.techavidus.com/react-js-development?utm_source=referral&amp;amp;utm_devto=devto&amp;amp;utm_campaign=content_sharing"&gt;React&lt;/a&gt; is among the most well-known and extensively utilized libraries (it's not an actual framework) for front-end development. React, among the fastest-growing and most well-known frontend library has been steadily growing in popularity in the world of developers and business owners. Due to many of its advantages, it could soon be the most popular web development tool.&lt;/p&gt;

&lt;p&gt;What are the reasons to choose React? The most important thing is when is the right time to utilize React? Let's take an overview of the benefits of React and its use cases.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-is-reactjs"&gt;
  &lt;/a&gt;
  What is ReactJS?
&lt;/h1&gt;

&lt;p&gt;React can be described as a declarative, efficient, and adaptable JavaScript library that is used by software developers to create user interfaces. It allows you to build a speedy simple, scalable, and simple frontend for web-based applications.&lt;/p&gt;

&lt;p&gt;The development of React becomes a strategy to problems that have been typically encountered whilst developing JavaScript applications. As applications grew in both complexity and size the issues became more frequent. The fact that React was designed and heavily utilized by Facebook to solve their own problems only adds to the library's reliability and effectiveness in tackling similar issues encountered by other projects. The React team is dedicated to making changes that are positive to ease the lives of the programmers.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#the-reasons-to-choose-reactjs"&gt;
  &lt;/a&gt;
  The Reasons to choose ReactJS
&lt;/h1&gt;

&lt;p&gt;If you were to ask us which front-end technology would be the most to develop software in 2021, we'd most likely say React! It's comparable to Angular with regard to speed, flexibility in development, and its popularity. Vue.js is lighter than its competitors, but it's not a huge benefit in actual use. It sounds great, however, but there may be lots greater to React beyond this!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-easy-to-learn"&gt;
  &lt;/a&gt;
  1. Easy to learn
&lt;/h2&gt;

&lt;p&gt;The reason, as compared with different famous front-end frameworks, consisting of Angular and Vue is much greater easy to learn. If technology is tough to learn, you will probably discover it tough to begin. As it is in our human nature. We tend to avoid things that are difficult to learn.&lt;/p&gt;

&lt;p&gt;Since react is a straightforward framework that is simple to learn and begin using with, big brands and large companies tend to prefer it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-rich-userinterfaces"&gt;
  &lt;/a&gt;
  2. Rich user-interfaces
&lt;/h2&gt;

&lt;p&gt;The design inside the interface for users of the application performs a vital characteristic. If the interface for users is not well-designed, it reduces the chance of an application achieving success.&lt;/p&gt;

&lt;p&gt;If your app's web interface is groovy and excellent that users love, they'll be thrilled to make use of your app. Therefore, creating excellent user interfaces is vital for business success.&lt;/p&gt;

&lt;p&gt;Thus, creating user interfaces with rich features is kind of required for an application to be able to survive and flourish.&lt;br&gt;
There's good news that React is able to create such top-quality, rich user interfaces by using its declarative components. This is the reason we are at our next step.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-faster-development"&gt;
  &lt;/a&gt;
  3. Faster development
&lt;/h2&gt;

&lt;p&gt;Increase your productivity by making use of reused parts and developing tools. The efficiency of developers is crucial since if you are able to complete tasks quickly you will earn more money in a shorter time is not unusual to place to target startups and businesses.&lt;/p&gt;

&lt;p&gt;If it takes a long quantity of time to create something simple and you're losing money, it's a waste of time. However, if you can get your product out quickly, you will make money quickly and your customers will be satisfied.&lt;/p&gt;

&lt;p&gt;There are numerous tools for development available in React that can speed the process. For instance, it's a browser extension known as React Developer Tools, which will make your programming significantly simpler.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-stability-and-reliability-of-the-code"&gt;
  &lt;/a&gt;
  4. Stability and reliability of the code
&lt;/h2&gt;

&lt;p&gt;React uses the downward flow of data so that it is certain that the structure of the parent doesn't be affected by any changes in the child's structure.&lt;/p&gt;

&lt;p&gt;Therefore, when a developer modifies an object, they just need to alter its state and make the appropriate changes. In this way, only a specific component is updated.&lt;/p&gt;

&lt;p&gt;This is a way to improve the flow of data and its structure, in turn, resulting in more stability to the code and better execution of your application.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-trusted-by-great-companies"&gt;
  &lt;/a&gt;
  5. Trusted by great companies
&lt;/h2&gt;

&lt;p&gt;Still, are you unsure whether you should use React instead?&lt;/p&gt;

&lt;p&gt;Take a look at some of the most inspiring instances that illustrate the power of React solutions. React is utilized by top startups and companies like Facebook, Dropbox, Khan Academy, Code Academy, Netflix, Airbnb, PayPal, Walmart, Tesla Motors, IMDb, and so on.&lt;/p&gt;

&lt;p&gt;What is the reason so many great startups and agencies use this software? An answer is truly a top-first-class tool for front-end development.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#final-words"&gt;
  &lt;/a&gt;
  Final Words
&lt;/h1&gt;

&lt;p&gt;This article will come up with the Top Reasons to Choose React as a Frontend. Like Angular, React is an excellent framework that is worth your time. However, there is a drawback with Angular that is what makes React superior in my opinion. The issue lies in the fact that Angular is difficult to master since it's not a straightforward framework. It's a complicated framework for front-end development. However, react is a user-friendly, simple technology.&lt;/p&gt;

</description>
      <category>react</category>
      <category>reactnative</category>
    </item>
    <item>
      <title>Regular Expressions in JavaScript - Day 18 of 100</title>
      <author>Arif Iqbal</author>
      <pubDate>Wed, 15 Dec 2021 07:05:03 +0000</pubDate>
      <link>https://dev.to/arifiqbal/regular-expressions-in-javascript-day-18-of-100-4o2e</link>
      <guid>https://dev.to/arifiqbal/regular-expressions-in-javascript-day-18-of-100-4o2e</guid>
      <description>&lt;p&gt;This post is a part of the &lt;a href="https://dev.to/arifiqbal/series/15795"&gt;Week X of 100DaysOfCode JavaScript Challenge&lt;/a&gt; series.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Match Whitespace:&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;\s&lt;/code&gt; the lowercase &lt;code&gt;s&lt;/code&gt; can match white space and white space between other characters. It includes white space, tab, form feed, new line, carriage return and vertical tab. You can consider it equivalent to the character class &lt;code&gt;[\t\n\r\f\v]&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;whitespace. whitespace everywhere!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;regex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;\s&lt;/span&gt;&lt;span class="sr"&gt;/g&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;regex&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;will return &lt;code&gt;[" ", " "]&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Match Non-Whitespace Characters:&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;\S&lt;/code&gt; the uppercase &lt;code&gt;S&lt;/code&gt; will match everything but not whitespace. It will not match tab character, newline, form feed, carriage return, and vertical tab. You can consider it an equivalent to the character class &lt;code&gt;[^\t\n\r\f\v]&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;whitespace. whitespace everywhere!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;regex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;\S&lt;/span&gt;&lt;span class="sr"&gt;/g&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;regex&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;will return &lt;code&gt;32&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Specify Upper and Lower Number of Matches:&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Previously we learned how to match the letter &lt;em&gt;one or more times&lt;/em&gt; with the &lt;code&gt;+&lt;/code&gt; character and match &lt;em&gt;zero or more times&lt;/em&gt; with the asterisk &lt;code&gt;*&lt;/code&gt; characters. But sometimes you would want to specify a lower and upper bound number for the match. You do this with the help of the &lt;em&gt;quantity specifier&lt;/em&gt;. You specify the upper and lower bound numbers in the curly brackets &lt;code&gt;{}&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;a4&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;aaaah&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;a2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;aah&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;multipleA&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sr"&gt;/a&lt;/span&gt;&lt;span class="se"&gt;{3,5}&lt;/span&gt;&lt;span class="sr"&gt;h/&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;multipleA&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a4&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// true&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;multipleA&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a2&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Specify Only the Lower Number of Matches:&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you specify only the lower bound number in the quantity specifier with the following comma and omit the upper bound number, it will mean a minimum number match.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;a4&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;aaaah&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;a2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;aah&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;multipleA&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sr"&gt;/a&lt;/span&gt;&lt;span class="se"&gt;{3,}&lt;/span&gt;&lt;span class="sr"&gt;h/&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// minimum three times&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;multipleA&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a4&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// true&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;multipleA&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a2&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Specify Exact Number of Matches:&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you specify only one number in the curly brackets &lt;code&gt;{X}&lt;/code&gt;, only that number of times will be matched.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;a4&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;haaaah&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;a2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;haah&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;a3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;haaah&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;threeA&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sr"&gt;/ha&lt;/span&gt;&lt;span class="se"&gt;{3}&lt;/span&gt;&lt;span class="sr"&gt;h/&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// minimum three times&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;threeA&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a4&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// false&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;threeA&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a2&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// false&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;threeA&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a3&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Check for All or None:&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Previously we used the &lt;code&gt;?&lt;/code&gt; mark to &lt;em&gt;lazy&lt;/em&gt; match a string. Another use of this character is to make a character match optional.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/colou&lt;/span&gt;&lt;span class="se"&gt;?&lt;/span&gt;&lt;span class="sr"&gt;r/&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;color&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// true&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/colou&lt;/span&gt;&lt;span class="se"&gt;?&lt;/span&gt;&lt;span class="sr"&gt;r/&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;colour&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>javascript</category>
      <category>programming</category>
      <category>webdev</category>
      <category>100daysofcode</category>
    </item>
    <item>
      <title>Create your own social media with JavaScript.</title>
      <author>Vik 📈</author>
      <pubDate>Wed, 15 Dec 2021 07:04:31 +0000</pubDate>
      <link>https://dev.to/heyvik/create-your-own-social-media-with-javascript-1fbc</link>
      <guid>https://dev.to/heyvik/create-your-own-social-media-with-javascript-1fbc</guid>
      <description>&lt;p&gt;Using Social media is amazing, and if you are a developer, you might have thought about making your own social media. If the answer is yes then this blog is for you.&lt;/p&gt;

&lt;p&gt;There will be a lot of skills that you will learn after completing this, like, firebase, react native, custom hooks in react native, react navigation, react-native-pages, and much much more.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#table-of-content"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Table of Content&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Introduction&lt;/li&gt;
&lt;li&gt;Create-React-App&lt;/li&gt;
&lt;li&gt;Installing Libraries&lt;/li&gt;
&lt;li&gt;Using react-navigation&lt;/li&gt;
&lt;li&gt;Adding fonts to our app&lt;/li&gt;
&lt;li&gt;Adding Firebase to our project&lt;/li&gt;
&lt;li&gt;Creating an onBoarding Screen&lt;/li&gt;
&lt;li&gt;Creating a Signup and Login Screen&lt;/li&gt;
&lt;li&gt;Create and Display tweets&lt;/li&gt;
&lt;li&gt;Profile Page with info&lt;/li&gt;
&lt;li&gt;Edit Profile&lt;/li&gt;
&lt;li&gt;Search Feature&lt;/li&gt;
&lt;li&gt;Conclusion&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#installing-libraries"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Installing Libraries:&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;We will be needing some libraries/packages to complete this project, let's install it one by one. So first, what are those libraries:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;firebase &lt;/li&gt;
&lt;li&gt;react-navigation &lt;/li&gt;
&lt;li&gt;react-native-pages &lt;/li&gt;
&lt;li&gt;expo-font &lt;/li&gt;
&lt;li&gt;expo-app-loading &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So lets then install it like:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;yarn add firebase @react-navigation/native @react-navigation/native-stack @react-navigation/bottom-tabs @react-navigation/drawer react-native-safe-area-context react-native-screens react-native-pages expo-font expo-app-loading&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;So these were the libraries we are going to install. You can use npm install instead of yarn add too.&lt;/p&gt;

&lt;p&gt;Using react-navigation&lt;br&gt;
React navigation is used to ( as you can see ) navigate between screens. Just like we do href in html. We will be adding Screens to react-navigation code when we make one. But first let's setup it:&lt;/p&gt;

&lt;p&gt;First let's import the stuff we need to:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;NavigationContainer&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@react-navigation/native&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createNativeStackNavigator&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@react-navigation/native-stack&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's all the imports used to make a Stack Navigation. Now let's make it work:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Stack&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createNativeStackNavigator&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;NavigationContainer&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Stack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Navigator&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Stack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Screen&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Boarding&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;component&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;BoardingScreen&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Stack.Navigator&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/NavigationContainer&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;   &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You will have to import the Boarding Screen to make it work. So if you run this app right now, it will cause an error. We will fix it later.&lt;/p&gt;

&lt;p&gt;That is all for this blog, if you want to create your fully function social media you can pre-order the book, right now, for only $3. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#pre-order-now"&gt;
  &lt;/a&gt;
  &lt;a href="https://thevik.gumroad.com/l/your-own-twitter"&gt;Pre Order Now&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4zDqu6Le--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sy42fcdqg3k4uevkwtmg.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4zDqu6Le--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sy42fcdqg3k4uevkwtmg.jpg" alt="Image description" width="880" height="616"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>react</category>
      <category>reactnative</category>
    </item>
    <item>
      <title>Who is a Freelance Web Developer?</title>
      <author>Ethan Taylor</author>
      <pubDate>Wed, 15 Dec 2021 07:00:13 +0000</pubDate>
      <link>https://dev.to/ethantaylordeveloper/who-is-a-freelance-web-developer-59nf</link>
      <guid>https://dev.to/ethantaylordeveloper/who-is-a-freelance-web-developer-59nf</guid>
      <description>&lt;p&gt;At first, a web developer may appear to be someone who develops a website in a vague term. However, the web developer job description needs more understanding beyond the assumed meaning. A programmer specializing in World Web Applications based on the client-server model, using in hand expertise of HTML, CSS, JAVAScript, PHP, and many more, is termed as a Web developer. The simple website we see on the screens has hands-on expertise behind it. &lt;/p&gt;

&lt;p&gt;Majorly all the industries, namely service industry or e-commerce industry, very much rely on web development, since it caters to the need of reaching out to the customers, far and wide. Since every business is now at the click of a button, the need for the websites to be both user-friendly as well as mobile-friendly has increased. The revolutionary shift of the users from personal computers to mobile users has increased the demand for mobile UI design and app design. The process and demand both have become complex over the period. A large number of potential web developers work with Eiliana, which cater to the needs of almost every sector of the economy.&lt;/p&gt;

&lt;p&gt;Some of the core responsibilities of a web developer to ensure career growth and generate good business include:&lt;/p&gt;

&lt;p&gt;Deep knowledge and hands-on expertise rise in the field of web applications and programming languages.&lt;/p&gt;

&lt;p&gt;Strong understanding of the security principles and their e-commerce application.&lt;/p&gt;

&lt;p&gt;Regular update on changing market demands and be adjusting to it in terms of expertise needed.&lt;/p&gt;

&lt;p&gt;Deep functional knowledge of UI, cross-browser compatibility, and changing dynamics.&lt;/p&gt;

&lt;p&gt;Stress Management and compatibility in complying with the deadlines.&lt;/p&gt;

&lt;p&gt;Smart enough to apply expertise to solve technical problems.&lt;/p&gt;

&lt;p&gt;Being a web developer at Eiliana you have the complete choice of working as a freelancer.&lt;/p&gt;

&lt;p&gt;How To Become A Web Developer?&lt;/p&gt;

&lt;p&gt;Not many formal certifications are needed as a  Web Developer Prerequisite, but an in-depth and advanced understanding of the skill takes one beyond boundaries. We should be familiar with the web development jobs offered to become one. In general, there are three choices to choose &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Introduction to Data Mesh</title>
      <author>Adit Modi</author>
      <pubDate>Wed, 15 Dec 2021 06:52:31 +0000</pubDate>
      <link>https://dev.to/aws-builders/introduction-to-data-mesh-3f1b</link>
      <guid>https://dev.to/aws-builders/introduction-to-data-mesh-3f1b</guid>
      <description>&lt;ul&gt;
&lt;li&gt;Organizations of all sizes have recognized that data is one of the key factors for increasing and sustaining innovation, and driving value for their customers and business units. &lt;/li&gt;
&lt;li&gt;They are modernizing traditional data platforms with cloud-native technologies that are highly scalable, feature-rich, and cost-effective. &lt;/li&gt;
&lt;li&gt;&lt;p&gt;As you look to make business decisions driven by data, you can be agile and productive by adopting a mindset that delivers data products from specialized teams, rather than through a centralized data management platform that provides generalized analytics.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A centralized model simplifies staffing and training by centralizing data and technical expertise in a single place. This reduces technical debt since you are managing a single data platform, which reduces operational costs. Data platform groups, often part of central IT, are divided into teams based on the technical functions they support. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;For instance, one team might own the ingestion technologies used to collect data from numerous data sources managed by other teams and lines of business (LOBs). A different team might own the data pipelines, the writing and debugging extract, transform, and load (ETL) code, and orchestrating job runs, while validating and fixing data quality issues and ensuring that data processing meets business SLAs. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;However, managing data through a central data platform can create scaling, ownership, and accountability challenges. Central teams might not understand the specific needs of a data domain, due to data types and storage, security, data catalog requirements, or the specific technologies needed for data processing.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You can often reduce these challenges by giving ownership and autonomy to the team who owns the data. This allows them to focus on building data products, rather than being limited to a common central data platform. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;For example, make product teams responsible for ensuring that the product inventory is updated regularly with new products and changes to existing ones. They’re the domain experts of the product inventory datasets, and if a discrepancy occurs, they’re the ones who know how to fix it. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Therefore, they’re best able to implement and operate a technical solution to ingest, process, and produce the product inventory dataset. They own everything leading up to the data being consumed: they choose the technology stack, operate in the mindset of data as a product, enforce security and auditing, and provide a mechanism to expose the data to the organization in an easy-to-consume way. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;This reduces overall friction for information flow in the organization, where the producer is responsible for the datasets they produce and is accountable to the consumer based on the advertised SLAs.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;This data-as-a-product paradigm is similar to the operating model that Amazon uses for building services. Service teams build their services, expose APIs with advertised SLAs, operate their services, and own the end-to-end customer experience. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;This is distinct from the model where one team builds the software, and a different team operates it. The end-to-end ownership model has allowed us to implement faster, with higher efficiency, and to quickly scale to meet customers’ use cases. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We aren’t limited by centralized teams and their ability to scale to meet the demands of the business. Each service we build relies on other services that provide the building blocks. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The analogy to this approach in the data world would be the data producers owning the end-to-end implementation and serving of data products, using the technologies they selected based on their unique needs. &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UJZqRPL5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lao5jezks12kf7hla1gg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UJZqRPL5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lao5jezks12kf7hla1gg.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Building an Analytics Application on AWS&lt;/strong&gt; is a Series containing different articles that cover the key scenarios that are common in many analytics applications and how they influence the design and architecture of your analytics environment in AWS. These series present the assumptions made for each of these scenarios, the common drivers for the design, and a reference architecture for how these scenarios should be implemented.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;people have been talking about the data-driven organization model for years, which consists of data producers and consumers. This model is similar to those used by some of early adopting consumers and has been described by "Zhamak Dehghani of Thoughtworks", who coined the term data mesh.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#characteristics"&gt;
  &lt;/a&gt;
  Characteristics
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Data mesh is a pattern for defining how organizations can organize around data domains with a focus on delivering data as a product. However, it might not be the right pattern for every customer.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A lake house approach and the data lake architecture provide technical guidance and solutions for building a modern data platform on AWS.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The lake house approach with a foundational data lake serves as a repeatable blueprint for implementing data domains and products in a scalable way.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The manner in which you use AWS analytics services in a data mesh pattern might change over time, but remains consistent with the technological recommendations and best practices for each service.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The following are data mesh design goals:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Data as a product&lt;/strong&gt; – Each organizational domain owns their data end to end. They’re responsible for building, operating, serving, and resolving any issues arising from the use of their data. Data accuracy and accountability lies with the data owner within the domain.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Federated data governance&lt;/strong&gt; – Data governance helps ensure that data is secure, accurate, and not misused. The technical implementation of data governance, such as collecting lineage, validating data quality, encrypting data at rest and in transit, and enforcing appropriate access controls, can be managed by each of the data domains. However, central data discovery, reporting, and auditing is needed to make it easy for users to find data, and for auditors to verify compliance.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Common access&lt;/strong&gt; – Data must be easily consumable by subject matter experts, such as data analysts and data scientists, and by purpose-built analytics and machine learning (ML) services, such as Amazon Athena, Amazon Redshift, and Amazon SageMaker. This requires data domains to expose a set of interfaces that make data consumable while enforcing appropriate access controls and audit tracking.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;The following are user experience considerations:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Data teams own their information lifecycle, from the application that creates the original data, to the analytics systems that extract and create business reports and predictions. Through this lifecycle, they own the data model, and determine which datasets are suitable for publication to consumers.&lt;/li&gt;
&lt;li&gt;Data domain producers expose datasets to the rest of the organization by registering them with a central catalog. They can choose what to share, for how long, and how consumers can interact with them. They’re also responsible for maintaining the data and making sure it’s accurate and current.&lt;/li&gt;
&lt;li&gt;Data domain consumers and individual users should be given access to data through a supported interface, such as a data API, that helps ensure consistent performance, tracking, and access controls.&lt;/li&gt;
&lt;li&gt;All data assets are easily discoverable from a single central data catalog. The data catalog contains the datasets registered by data domain producers, including supporting metadata, such as lineage, data quality metrics, ownership information, and business context.&lt;/li&gt;
&lt;li&gt;All actions taken with data, usage patterns, data transformations, and data classifications should be accessible through a single, central place. Data owners, administrators, and auditors should be able to inspect an organization’s data compliance posture in a single place.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Let’s start with a high-level reference design that builds on top of the data mesh pattern. It further separates consumers, producers, and central governance to highlight the key aspects discussed previously. However, note that a data domain, in a data mesh pattern, might represent a data consumer, a data producer, or both.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The AWS Lake House architecture relies on an AWS Glue and AWS Lake Formation Data Catalog for users to access the objects as tables. The users are entitled to these tables using Lake Formation, which is one per AWS account. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Each Lake Formation account has its own Data Catalog, but storing the metadata on the data objects on multiple accounts across various catalogs makes it hard for the consumers to select the table. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A consumer has to log into individual accounts to see the objects, assuming that the consumer knows exactly where to look. A central catalog also makes it easy to feed into a central business catalog and allows easier auditing of grants or revokes (it just makes it easier; it does not provide a single store of audits). Therefore, a central Data Catalog is recommended.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The metadata being on the central catalog does not make the tables in individual lakes accessible to all the consumers automatically. The actual entitlement on tables is individually granted and revoked by the application owner.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;This allowss the data mesh objective of the data strategy where the data is stored in multiple individually managed lakes, as opposed to a single central lake, while being accessible, provided properly entitled, to all the consumers. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The role of the Data Catalog is of paramount importance here as the consumers can locate the proper storage of the data, they are interested in.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Term&lt;/th&gt;
&lt;th&gt;Definition&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Data mesh&lt;/td&gt;
&lt;td&gt;Data is stored in multiple data stores, not in one single store. Consumers can access them as needed, assuming they are properly entitled.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;AWS Lake Formation&lt;/td&gt;
&lt;td&gt;A service that makes the data available as tables. Allows the owner of that table to give permissions to consumers.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;AWS Glue Data Catalog (Data Catalog)&lt;/td&gt;
&lt;td&gt;A data store containing metadata about the data, for example, table name, the columns in them, and user-defined tags. It does not contain actual data. This allows a consumer to know what to select.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Amazon Athena&lt;/td&gt;
&lt;td&gt;A managed service that allows a user to enter a SQL query to select data. It in turn fetches the data and presents it in a tabular format. Athena needs a Data Catalog to let the consumer know the columns to select.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Resource link&lt;/td&gt;
&lt;td&gt;A link that extends from one catalog to another and allows the consumers in the remote catalog to view and query the tables in the remote database as if the tables were in their local database. There are two types of resource links: for a specific table, and for an entire database.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h1&gt;
  &lt;a href="#reference-architecture"&gt;
  &lt;/a&gt;
  Reference architecture
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Here is a pattern for a single producer account, a single consumer account, and a central Lake Formation account. Each account has an AWS Glue Data Catalog. &lt;/li&gt;
&lt;li&gt;The central account's Data Catalog is considered the main catalog. Resource links are established to the producer and consumer accounts. &lt;/li&gt;
&lt;li&gt;&lt;p&gt;This way, when the central account changes something, both accounts get the schema updates. The consumers selecting data will always see the most recent metadata.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The producer account always has the authority to grant or revoke the permissions on the tables in its Data Catalog. The central Lake Formation account is merely a holder of metadata, which sends it to all the consumer accounts which has a subscription via a resource link. Under no circumstances the central Lake Formation account can grant on its own.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;With the concept in place, let’s look at three design patterns for deploying a data mesh architecture.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hWRN-mn1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h336eb7blyqv25ixxjqx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hWRN-mn1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h336eb7blyqv25ixxjqx.png" alt="Image description" width="800" height="459"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Data mesh reference architecture&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Workflow from producer to consumer:&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Data source locations hosted by the producer are created within the producer’s AWS Glue Data Catalog and registered with Lake Formation.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;When a dataset is presented as a product, producers create Lake Formation Data Catalog entities (database, table, columns, attributes) within the central governance account. This makes it easy to find and discover catalogs across consumers. However, this doesn’t grant any permission rights to catalogs or data to all accounts or consumers, and all grants are be authorized by the producer.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The central Lake Formation Data Catalog shares the Data Catalog resources back to the producer account with required permissions via Lake Formation resource links to metadata databases and tables.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Lake Formation permissions are granted in the central account to producer role personas (such as the data engineer role) to manage schema changes and perform data transformations (alter, delete, update) on the central Data Catalog.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Producers accept the resource share from the central governance account so they can make changes to the schema at a later time.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Data changes made within the producer account are automatically propagated into the central governance copy of the catalog.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Based on a consumer access request, and the need to make data visible in the consumer’s AWS Glue Data Catalog, the central account owner grants Lake Formation permissions to a consumer account based on direct entity sharing, or based on tag-based access controls, which can be used to administer access via controls like data classification, cost center, or environment.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Lake Formation in the consumer account can define access permissions on these datasets for local users to consume. Users in the consumer account, like data analysts and data scientists, can query data using their chosen tool such as Athena and Amazon Redshift.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In some cases, multiple catalogs are necessary and there is no other alternative. For example, if data is sent to both Regions, there will be two Data Catalogs that need to be maintained.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Option 1: Central data governance model&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Here is a more practical model with multiple producers and consumers accounts. There is still a single central data governance account, which has resource links to all the other accounts. Note that we didn't deliberately name them with specific lines of business (LOBs), since this model applies to any LOB and any number of lakes. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Roles of various accounts&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Here are the roles of the various types of accounts.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Account&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Producer account&lt;/td&gt;
&lt;td&gt;* Allows data producers to write data into their respective S3 buckets.* Does not allow interactive access to S3 buckets or objects in them.* Allows only production ETL jobs to perform transformation, movement, etc.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Consumer account&lt;/td&gt;
&lt;td&gt;* Allows data consumption through Athena, Redshift Spectrum, and web apps.* Only cataloged items can be queried, not all objects in the bucket.* Isolates the data changes (done by producer account) from data access (consumer accounts).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Central account&lt;/td&gt;
&lt;td&gt;* This is a central catalog of all metadata. If additional consumer accounts are created, the metadata is replicated from this central account.* Since all metadata is in one place, it allows easier auditing of actions like grants and revokes on tables. The actual auditing is still decentralized but a central account makes the reporting easier.* Consumer accounts need to access the metadata using resource links to this central catalog only.* Does not contain any actual data. Only logs are stored here.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;Notes&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;These are just roles and they are not mutually exclusive. It's possible to have one AWS account with both roles of producer and consumer. A batch serving account is such an example.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;These accounts are Region-specific and are all in the same Region. They are not across Regions.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;These accounts interact as shown in the following diagrams.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pIzVdtqe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e7uva0hl8xtb680wijm0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pIzVdtqe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e7uva0hl8xtb680wijm0.png" alt="Image description" width="800" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Central data governance model&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The producers can onboard their dataset table names, but the tables are completely independent and federated in central data governance account.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Advantages&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;All datasets are available in one place for querying.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Entitlements become easier.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A single database to database resource link is enough (assuming database-to-database resource links are allowed).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Single source of data truth – one-way sharing of catalog across various organizations.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The LOBs still have the choice to define metadata, schema evolution and manage permissions. The central Lake Formation account does not enforce anything on them.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Allows centralized auditing.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Allows local sandbox accounts for consumers, which is useful in cases such as model training and serving.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Disadvantages&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;More complex for consumer analysts than using one data warehouse.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Required skills are more aligned to security and governance than analytics.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Technology solution – may not solve issues created by misaligned LOBs incentives.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Option 2: Federated Line of Business (LOB) central governance model&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;In this model, each LOB maintains an independent central Lake Formation account, which eases the use of centralized auditing in that LOB. Consumer accounts can see the data from producer accounts in the same LOB only. For accessing the data across LOBs, they need to establish the resource links to the appropriate catalog.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ghXUz_x6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/laiocn1pyjjh0zcf15t3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ghXUz_x6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/laiocn1pyjjh0zcf15t3.png" alt="Image description" width="800" height="498"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Federated LOB central governance model&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Advantages&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Each LOB still maintains their own Lake Formation central account and access control.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The blast radius in case of non–availability of a single Lake Formation account is reduced.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Disadvantages&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Centralized metadata is impossible since there is no central account. Audits from each central account need to be pulled and consolidated.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Resource links need to be created across multiple catalogs. This makes it difficult to maintain the links, especially as the number of lakes grows.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Option 3: Completely federated data governance model&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;In this model, there is no central Lake Formation. Each producer account maintains their own Data Catalog and each consumer accesses the Data Catalog via a resource link.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jUNAHs-U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v8e0gtq78108g3sud3ak.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jUNAHs-U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v8e0gtq78108g3sud3ak.png" alt="Image description" width="800" height="459"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Completely federated data governance model&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Advantages&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;There is complete separation among the Lake Formation accounts.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Local queries go to the local Lake Formation Data Catalog. They don't need the trip to the central Lake Formation.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Any operator error that deletes a single Lake Formation account will not affect anything else, even inside the same LOB.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Disadvantages&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Entitlements will need to be distributed.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Multiple resource links need to be created and maintained, which quickly becomes a burden in the data organization scale.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;When data from a central business catalog is replicated over to the other Lake Formation catalogs, all those Lake Formation catalogs need to be updated individually.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;Hope this guide gives you an Introduction to Data Mesh, explains the Characteristics and Reference Architecture for Data Mesh.&lt;/p&gt;

&lt;p&gt;Let me know your thoughts in the comment section 👇&lt;br&gt;
And if you haven't yet, make sure to follow me on below handles:&lt;/p&gt;

&lt;p&gt;👋 &lt;strong&gt;connect with me on &lt;a href="https://www.linkedin.com/in/adit-modi-2a4362191/"&gt;LinkedIn&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
🤓 &lt;strong&gt;connect with me on &lt;a href="https://twitter.com/adi_12_modi"&gt;Twitter&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
🐱‍💻 &lt;strong&gt;follow me on &lt;a href="https://github.com/AditModi"&gt;github&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
✍️ &lt;strong&gt;Do Checkout &lt;a href="https://aditmodi.hashnode.dev"&gt;my blogs&lt;/a&gt;&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;Like, share and follow me 🚀 for more content.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://docs.aws.amazon.com/wellarchitected/latest/analytics-lens/data-mesh.html"&gt;Reference Guide&lt;/a&gt;&lt;/p&gt;

</description>
      <category>aws</category>
      <category>datascience</category>
      <category>cloud</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Weekly web development resources #100</title>
      <author>Vincent Will</author>
      <pubDate>Wed, 15 Dec 2021 06:50:21 +0000</pubDate>
      <link>https://dev.to/vincenius/weekly-web-development-resources-100-1ep9</link>
      <guid>https://dev.to/vincenius/weekly-web-development-resources-100-1ep9</guid>
      <description>

&lt;h2&gt;
  &lt;a href="#floating-ui"&gt;
  &lt;/a&gt;
  &lt;a href="https://floating-ui.com/"&gt;Floating UI&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://floating-ui.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4ljlWGxy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/100/floatingui.jpg" alt="Floating UI" width="880" height="481"&gt;&lt;/a&gt;&lt;br&gt;
A library to position all types of floating elements, like tooltips, popovers, dropdowns and more.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#deta"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.deta.sh/"&gt;Deta&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.deta.sh/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tP1b4cxF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/100/deta.jpg" alt="Deta" width="880" height="481"&gt;&lt;/a&gt;&lt;br&gt;
A free and developer friendly cloud platform.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#dracula"&gt;
  &lt;/a&gt;
  &lt;a href="https://draculatheme.com/"&gt;Dracula&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://draculatheme.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hXwf_CaW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/100/dracula.jpg" alt="Dracula" width="880" height="481"&gt;&lt;/a&gt;&lt;br&gt;
A dark color scheme for 227+ code editors and terminal emulators.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#web-browser-engineering"&gt;
  &lt;/a&gt;
  &lt;a href="https://browser.engineering/"&gt;Web Browser Engineering&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://browser.engineering/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DKfPzwRL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/100/web-browser.jpg" alt="Web Browser Engineering" width="880" height="481"&gt;&lt;/a&gt;&lt;br&gt;
A book that explains how to build a basic but complete web browser.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#superseo-tips"&gt;
  &lt;/a&gt;
  &lt;a href="https://superseo.tips/"&gt; SuperSEO Tips&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://superseo.tips/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WROCOjwl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/100/superseotips.jpg" alt=" SuperSEO Tips" width="880" height="462"&gt;&lt;/a&gt;&lt;br&gt;
SEO Tips that will help you rank higher and drive more organic traffic.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#defensive-css"&gt;
  &lt;/a&gt;
  &lt;a href="https://ishadeed.com/article/defensive-css/"&gt;Defensive CSS&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://ishadeed.com/article/defensive-css/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wVd_Bm-u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/100/css.jpg" alt="Defensive CSS" width="880" height="440"&gt;&lt;/a&gt;&lt;br&gt;
A list of defensive CSS techniques to avoid potential future issues.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#ublacklist"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/iorate/uBlacklist"&gt;uBlacklist&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/iorate/uBlacklist"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CFQHa4iZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/100/uBlacklist.jpg" alt="uBlacklist" width="880" height="481"&gt;&lt;/a&gt;&lt;br&gt;
A browser extension prevents blacklisted sites from appearing in Google search results.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#ffflux"&gt;
  &lt;/a&gt;
  &lt;a href="https://fffuel.co/ffflux/"&gt;ffflux&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://fffuel.co/ffflux/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--45to0y3a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/100/ffflux.jpg" alt="ffflux" width="880" height="440"&gt;&lt;/a&gt;&lt;br&gt;
A SVG generator for fluid gradient backgrounds.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#remix"&gt;
  &lt;/a&gt;
  &lt;a href="https://remix.run/"&gt;Remix&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://remix.run/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yuoq57q1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/100/remix.jpg" alt="Remix" width="880" height="460"&gt;&lt;/a&gt;&lt;br&gt;
A framework for building better websites using modern web standards and best practices.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#the-2021-web-almanac"&gt;
  &lt;/a&gt;
  &lt;a href="https://almanac.httparchive.org/en/2021/"&gt;The 2021 Web Almanac&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://almanac.httparchive.org/en/2021/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jR-M8qKU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/100/almanac.jpg" alt="The 2021 Web Almanac" width="880" height="440"&gt;&lt;/a&gt;&lt;br&gt;
HTTP Archive’s annual state of the web report.&lt;/p&gt;




&lt;p&gt;To see all the weeklies check: &lt;a href="https://wweb.dev/weekly"&gt;wweb.dev/weekly&lt;/a&gt;&lt;/p&gt;

</description>
      <category>weekly</category>
      <category>webdev</category>
    </item>
  </channel>
</rss>
