<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Sending Web Analytics the better way!!</title>
      <author>Abhishek Raj</author>
      <pubDate>Thu, 16 Dec 2021 10:23:17 +0000</pubDate>
      <link>https://dev.to/abhishekraj272/sending-web-analytics-the-better-way-1c1</link>
      <guid>https://dev.to/abhishekraj272/sending-web-analytics-the-better-way-1c1</guid>
      <description>&lt;p&gt;Most of the big companies have there own analytics rather than using third party services like Google Analytics.&lt;/p&gt;

&lt;p&gt;I have seen many of the sites using &lt;strong&gt;fetch API&lt;/strong&gt; or &lt;strong&gt;XHRHttpReq&lt;/strong&gt; for sending analytics event.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#whats-the-issue-in-using-that-fetch-apixhr-for-sending-analytics-event"&gt;
  &lt;/a&gt;
  What's the issue in using that fetch API/XHR for sending analytics event?
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Even if its async, we are using our main thread to send the events.&lt;/li&gt;
&lt;li&gt;When the send analytics request is queued and user closes the page, your analytics is lost.&lt;/li&gt;
&lt;li&gt;Poor UX due to slow HTTP Requests, if we put analytics send req on document

&lt;code&gt;unload&lt;/code&gt;

event&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://www.smashingmagazine.com/2018/07/logging-activity-web-beacon-api/#can-t-we-already-do-this"&gt;Read More&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-should-we-do"&gt;
  &lt;/a&gt;
  What should we do?
&lt;/h3&gt;

&lt;p&gt;Almost all browser's (except IE) gives an API for this use case.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#beacon-api"&gt;
  &lt;/a&gt;
  Beacon API
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;The Beacon API is used to send an asynchronous and non-blocking request to a web server. The request does not expect a response. Unlike requests made using XMLHttpRequest or the Fetch API, the browser guarantees to initiate beacon requests before the page is unloaded and to run them to completion. - &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Beacon_API"&gt;MDN&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#why-is-beacon-api-good-for-sending-analytics-event"&gt;
  &lt;/a&gt;
  Why is Beacon API good for sending analytics event?
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;It doesn't block your thread.&lt;/li&gt;
&lt;li&gt;Browser queues it and takes care to sending the request.&lt;/li&gt;
&lt;li&gt;Even after queuing the page is closed, the request will be sent.&lt;/li&gt;
&lt;li&gt;It doesn't takes response from server, sends and forgets.&lt;/li&gt;
&lt;li&gt;Supported by most of the browsers.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Navigator/sendBeacon#browser_compatibility"&gt;Browser Compatability&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#caveats"&gt;
  &lt;/a&gt;
  Caveats
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;It only sends POST request.&lt;/li&gt;
&lt;li&gt;We can't check if request is received by server.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Connect Me @ &lt;a href="https://www.linkedin.com/in/abhishekraj272/"&gt;Linkedin&lt;/a&gt;, &lt;a href="https://github.com/abhishekraj272"&gt;Github&lt;/a&gt;, &lt;a href="https://twitter.com/abhishekraj272"&gt;Twitter&lt;/a&gt; 😃&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>discuss</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Enable smooth typing and cursor animation in VSCode</title>
      <author>Trishiraj</author>
      <pubDate>Thu, 16 Dec 2021 09:36:49 +0000</pubDate>
      <link>https://dev.to/trishiraj/enable-smooth-typing-and-cursor-animation-in-vscode-318d</link>
      <guid>https://dev.to/trishiraj/enable-smooth-typing-and-cursor-animation-in-vscode-318d</guid>
      <description>&lt;p&gt;Not sure how many are aware of this, but i believe this kinda motivates you towards typing your codes all day long. Watching those lines of codes flow like butter along with your cursor is just another satisfying thing to watch for any programmer like the satisfying sounds of their mechanical keyboards. 😌&lt;/p&gt;

&lt;p&gt;So in this article, I am just dropping a screenshot of my Cursor settings from VScode which you can apply and play around to see what suits you best.&lt;/p&gt;

&lt;p&gt;Can be accessed by using &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Ctrl/Cmd + P &lt;/li&gt;
&lt;li&gt;Type "&amp;gt; User Settings"&lt;/li&gt;
&lt;li&gt;Search for "cursor"
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--U2Ltm7G4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u3nuljedeg3nx41s69hf.png" alt="Cursor settings screenshot" width="880" height="714"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Happy coding! 😄&lt;/p&gt;

</description>
      <category>vscode</category>
      <category>programming</category>
      <category>productivity</category>
      <category>beginners</category>
    </item>
    <item>
      <title>API with NodeJS &amp; ExpressJS in just 5 lines of code😉</title>
      <author>Parables</author>
      <pubDate>Thu, 16 Dec 2021 09:35:05 +0000</pubDate>
      <link>https://dev.to/parables/api-with-nodejs-expressjs-in-just-5-lines-of-code-kpm</link>
      <guid>https://dev.to/parables/api-with-nodejs-expressjs-in-just-5-lines-of-code-kpm</guid>
      <description>&lt;h2&gt;
  &lt;a href="#intro"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Intro&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;In this tutorial we will create a simple API with NodeJs and ExpressJS,&lt;br&gt;
connect to MongoDB and perform CRUD operations with the API.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#step-by-step-process"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Step by Step Process&lt;/strong&gt;
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Create a NodeJs project in a new folder by running the command:
&amp;gt; &lt;code&gt;npm init -y&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Install the following packages in the project by running the command:
&amp;gt;    &lt;code&gt;npm install express mongoose dotenv cors nodemon&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Create a new file in your project folder with the name &lt;code&gt;index.js&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Inside &lt;code&gt;index.js&lt;/code&gt; file, create a simple server with ExpressJS
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
   &lt;span class="c1"&gt;//index.js&lt;/span&gt;

   &lt;span class="c1"&gt;// import the packages we need&lt;/span&gt;
   &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;dotenv&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dotenv&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

   &lt;span class="c1"&gt;// loads the env file content into the process.env&lt;/span&gt;
   &lt;span class="c1"&gt;// Use process.env.VARIABLE_NAME to access the value of the variable in our .env file&lt;/span&gt;
   &lt;span class="nx"&gt;dotenv&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="c1"&gt;// create an instance of express&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="c1"&gt;// store the PORT number from the .env file into a constant variable&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;PORT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PORT&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;// create an index route to test the server&lt;/span&gt;
    &lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hello World&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

    &lt;span class="c1"&gt;// start the server to listen to incoming request&lt;/span&gt;
    &lt;span class="c1"&gt;// on the specified PORT&lt;/span&gt;
    &lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;PORT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Server is up and running 🚀🚀🚀 on PORT: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;PORT&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Create a new file in your project folder with the name &lt;code&gt;.env&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Inside &lt;code&gt;.env&lt;/code&gt;  file, add an environment variable for the &lt;code&gt;PORT&lt;/code&gt; number
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
    PORT=5000

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Test the server by running g the command &lt;code&gt;node index.js&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Open your browser and type &lt;code&gt;http://localhost:5000/&lt;/code&gt; to make a GET request to your server and see your first response.&lt;/li&gt;
&lt;li&gt;If you get a "Hello World" response, you have created your first Server that is ready to respond whenever a request comes in.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;
  &lt;a href="#congratulations"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Congratulations 🎊🎊🎉🎉🥳🥳&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;You can end here but an API can do more than just response with a "Hello World".&lt;br&gt;
In the next step we will connect to mongoDB Atlas using a connection string and add more routes to  Create, Read, Update &amp;amp; Delete resources.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#crud-operations"&gt;
  &lt;/a&gt;
  &lt;strong&gt;CRUD operations&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Just like how we created the index route on line 13, we will create more routes to handle different requests.&lt;/p&gt;

&lt;p&gt;A request is made with an HTTP verb/method that specifies the type of operation the request wants to perform on the server. Some of the common HTTP methods we will look at in this tutorial are:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;POST - used to create a new resource on the server&lt;/li&gt;
&lt;li&gt;GET - used to read a resources on the server&lt;/li&gt;
&lt;li&gt;PATCH - used to update a resource on the server by &lt;strong&gt;merging&lt;/strong&gt; the existing resource with the incoming data&lt;/li&gt;
&lt;li&gt;PUT - used to update a resource on the server by &lt;strong&gt;replacing&lt;/strong&gt; the existing resource with the incoming data&lt;/li&gt;
&lt;li&gt;DELETE - used to delete a resource on the server.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;
  &lt;a href="#connecting-to-mongodb-atlas"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Connecting to MongoDB Atlas&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Search for MongoDB Atlas on the browser and signUp for an account. If you already have an account, then please login.&lt;/p&gt;

&lt;p&gt;Follow the welcome guide to create a new project and build your first database cluster.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Please note the password you set for your user account on your cluster as you will need it to connect to the Cluster later on.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Please make sure to allow access from every I.P address&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Go to the network menu on your MongoDB Atlas dashboard, add a new IP address and click on &lt;code&gt;ALLOW ACCESS FROM EVERYWHERE&lt;/code&gt; button.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Click the CONNECT button on the Overview page. Then select Connect your application from the options.&lt;br&gt;
Finally, make sure NodeJS is selected and the version is 4.0 upwards.&lt;/p&gt;

&lt;p&gt;Copy the connection string below and add an environment variable for the &lt;code&gt;MONGO_DB_CON_STRING&lt;/code&gt; in the &lt;code&gt;.env&lt;/code&gt; file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
    PORT=5000

    MONGO_DB_CON_STRING=mongodb+srv://admin:&amp;lt;password&amp;gt;@cluster0.nvren.mongodb.net/myFirstDatabase?retryWrites=true&amp;amp;w=majority

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Make sure to replace &amp;lt;password&amp;gt; with the password you choose during the welcome guide process and replace myFirstDatabase in the connection string with a name for your database. You can give it any name&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;To connect our API with MongoDB, we will use the mongoose package we installed earlier on. Add this line to your import statements at the top of the index.js file&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;mongoose&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mongoose&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Since our server depends on the database to handle requests, its essential to attempt a connection to MongoDB Atlas first. If the connection is successfully, we  then start our server to listen to incoming requests on the specified &lt;code&gt;PORT&lt;/code&gt; number.&lt;br&gt;
If the connection fails, we simply log out the error to the console.&lt;/p&gt;

&lt;p&gt;But feel free to separate the connection to mongoDB from starting the server if your server directly doesn't directly depend on the database.&lt;/p&gt;

&lt;p&gt;Replace this part of code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;   &lt;span class="c1"&gt;// start the server to listen to incoming request&lt;/span&gt;
   &lt;span class="c1"&gt;// on the specified PORT&lt;/span&gt;
   &lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;PORT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Server is up and running 🚀🚀🚀 on PORT: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;PORT&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;with this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// connect to MongoDBAtlas first&lt;/span&gt;
&lt;span class="nx"&gt;mongoose&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;MONGO_DB_CON_STRING&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="c1"&gt;// if we get an error, log it out to the console&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Failed to connect to MongDB &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="c1"&gt;// if connection is successful... start the server&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;MongoDB is connected&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="c1"&gt;// start the server to listen to incoming request&lt;/span&gt;
    &lt;span class="c1"&gt;// on the specified PORT&lt;/span&gt;
    &lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;PORT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Server is up and running 🚀🚀🚀 on PORT: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;PORT&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#model-your-data"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Model your data&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;MongoDB is a NoSQL database.&lt;/p&gt;

&lt;p&gt;In comparison to the relational SQL database:&lt;br&gt;
 a &lt;code&gt;TABLE&lt;/code&gt; in SQL is a &lt;code&gt;COLLECTION&lt;/code&gt; in NoSQL,&lt;br&gt;
 a &lt;code&gt;COLUMN&lt;/code&gt; in SQL is a &lt;code&gt;FIELD&lt;/code&gt; in NoSQL,&lt;br&gt;
 and &lt;code&gt;ROW&lt;/code&gt; in SQL is a &lt;code&gt;DOCUMENT&lt;/code&gt; in NoSQL,&lt;/p&gt;

&lt;p&gt;Meaning, you can structure your document in the Collection any how you want it. To help make storing and retrieving documents, we will create a model to represent how data will be stored and retrieved.&lt;/p&gt;

&lt;p&gt;Inside your project, create a new folder called &lt;code&gt;models&lt;/code&gt; and inside the &lt;code&gt;models&lt;/code&gt; folder create a new file called &lt;code&gt;todo.js&lt;/code&gt; and paste in the following code snippet.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;//import the mongoose package&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;mongoose&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mongoose&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// unpack Schema &amp;amp; model from mongoose&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;Schema&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;mongoose&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// the Schema defines the structure of our Collection(Table) in MongoDB&lt;/span&gt;
&lt;span class="c1"&gt;// the model defines how data will modeled for our collection&lt;/span&gt;
&lt;span class="c1"&gt;// and comes along with built in features  to manipulate the data&lt;/span&gt;

&lt;span class="c1"&gt;// create a new Schema instance specifying which&lt;/span&gt;
&lt;span class="c1"&gt;// fields(columns) we want in our Collection(Table)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;todoSchema&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Schema&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;date&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;time&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;isCompleted&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Boolean&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="c1"&gt;// then make a model&lt;/span&gt;
&lt;span class="c1"&gt;// by passing in the name and a schema for our model&lt;/span&gt;
&lt;span class="c1"&gt;// and export it to be imported used in other files&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Todo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;todo&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;todoSchema&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#adding-more-routes-to-perform-crud-operations"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Adding more routes to perform CRUD operations&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Inside the &lt;code&gt;index.js&lt;/code&gt; file, import the Todo model we just created.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="c1"&gt;// import Todo model to perform crud operations&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Todo&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./models/todo.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;To extract the body of requests made with &lt;code&gt;POST&lt;/code&gt;, &lt;code&gt;PUT&lt;/code&gt; &amp;amp; &lt;code&gt;PATCH&lt;/code&gt;, we need to add line this after we created the server instance in &lt;code&gt;index.js&lt;/code&gt; file;&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="c1"&gt;// create an instance of express&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="c1"&gt;// use the json middleware to&lt;/span&gt;
&lt;span class="c1"&gt;// extract the data stored in the request body&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Importing your files like this will crash your Server. To fix it, inside the &lt;code&gt;package.json&lt;/code&gt; file, add a comma after the "main": "index.js" line and paste this there.&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="nl"&gt;"main"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"index.js"&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"module"&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;"type": "module",&lt;/code&gt; helps us to use the modern import statement. Read more on javascript.info about Modules&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Below the index route, add the following code snippets.&lt;/p&gt;

&lt;p&gt;Each snippet is well commented to explain what the code is doing so be sure to read them.&lt;/p&gt;

&lt;p&gt;The async/await keywords you see simply means our server will keep on listening to more request while it await the results of the asynchronous operation.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;CREATE a todo&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="c1"&gt;// create routes to perform CRUD operations with the Todo model&lt;/span&gt;

&lt;span class="c1"&gt;// CREATE a new Todo resource in the database by making a POST request to /todo &lt;/span&gt;
&lt;span class="c1"&gt;// the data to be saved must be in your request's body in json format &lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/todo&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// extract the necessary fields from the body of the request&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;description&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;isCompleted&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="c1"&gt;// create a Todo model with the necessary fields&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;newTodo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Todo&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;description&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;date&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;time&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;isCompleted&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;isCompleted&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="c1"&gt;// save the Todo model and await the result&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;newTodo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;save&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="c1"&gt;// send back a response with the result in a json format&lt;/span&gt;
  &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;READ all todos&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="c1"&gt;// READ all the Todos from the database by making a GET request to /todos&lt;/span&gt;
&lt;span class="c1"&gt;// the Model.find({}) method takes in a object as parameter that will be used to filter the documents we retrieve. E.g: Retrieve all documents where title is "Learn API with NodeJs &amp;amp; Express" will be written as:&lt;/span&gt;
&lt;span class="c1"&gt;// await Todo.find({"title": "Learn API with NodeJs &amp;amp; Express"});&lt;/span&gt;
&lt;span class="c1"&gt;// an empty object {} means no filter is applied so retrieve all the documents&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/todos&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;Todo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;({});&lt;/span&gt;
  &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;UPDATE a todo by &lt;strong&gt;merging&lt;/strong&gt; existing data with incoming data&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="c1"&gt;// UPDATE a Todo resource in the database by making a PATCH request to /todo/:todoID&lt;/span&gt;
&lt;span class="c1"&gt;// a PATCH request should merge the previous resource with incoming data&lt;/span&gt;
&lt;span class="c1"&gt;// :todoID is a request parameter and can be used by req.params.todoID&lt;/span&gt;
&lt;span class="c1"&gt;// the data to be saved must be in your request's body in json format &lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;patch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/todo/:todoID&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;//find and update a model by&lt;/span&gt;
  &lt;span class="c1"&gt;// passing in the id, the data to be updated,&lt;/span&gt;
  &lt;span class="c1"&gt;// and set the new option to true&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;Todo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;findByIdAndUpdate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;todoID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// _id of the document&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="c1"&gt;// the data to be merged with the existing document&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;new&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="c1"&gt;// options&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;UPDATE a todo by &lt;strong&gt;replacing&lt;/strong&gt; existing data with incoming data&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="c1"&gt;// UPDATE a Todo resource in the database by making a PUT request to /todo/:todoID&lt;/span&gt;
&lt;span class="c1"&gt;// a PUT request is almost similar to a PATCH request&lt;/span&gt;
&lt;span class="c1"&gt;//  except that it overwrites the previous resource with incoming data&lt;/span&gt;
&lt;span class="c1"&gt;// :todoID is a request parameter and can be used by req.params.todoID&lt;/span&gt;
&lt;span class="c1"&gt;// the data to be saved must be in your request's body in json format &lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/todo/:todoID&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;//find and update a model by&lt;/span&gt;
  &lt;span class="c1"&gt;// passing in the id, the data to be updated,&lt;/span&gt;
  &lt;span class="c1"&gt;// and set the new and overwrite options to true&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;Todo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;findByIdAndUpdate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;todoID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// _id of the document&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="c1"&gt;// data to be replaced&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;new&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;overwrite&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="c1"&gt;// options&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;DELETE a todo&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="c1"&gt;// DELETE a Todo resource in the database by making a DELETE request to /todo/:todoID&lt;/span&gt;
&lt;span class="c1"&gt;// :todoID is a request parameter and can be used by req.params.todoID&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/todo/:todoID&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;//find and delete a model by&lt;/span&gt;
  &lt;span class="c1"&gt;// passing in the id and a callback function&lt;/span&gt;
  &lt;span class="c1"&gt;// that takes in the error and the deletedDocument&lt;/span&gt;
  &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;Todo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;findByIdAndDelete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;todoID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;doc&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
     &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Failed to delete the document with _id: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;todoID&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;. Error: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
     &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;404&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Todo with _id: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;todoID&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; was not found`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Todo with _id: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;todoID&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; has been deleted`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#try-out-your-api"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Try out your API&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Anytime you make a change in the code, you have to stop the server and start it again by running &lt;code&gt;node index.js&lt;/code&gt;. This process of restarting the server can get pretty tiring.&lt;/p&gt;

&lt;p&gt;We install &lt;code&gt;nodemon&lt;/code&gt; earlier on when we create the project. &lt;code&gt;nodemon&lt;/code&gt; will watching your project and restart the server whenever you save a file.&lt;/p&gt;

&lt;p&gt;To use nodemon, add the &lt;code&gt;start&lt;/code&gt; &amp;amp; &lt;code&gt;start-dev&lt;/code&gt; commands to the &lt;code&gt;scripts&lt;/code&gt; object inside the &lt;code&gt;package.json&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nl"&gt;"scripts"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"start"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"node index.js"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"start-dev"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"nodemon index.js"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"test"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"echo &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;Error: no test specified&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; &amp;amp;&amp;amp; exit 1"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Start your server in development mode by running &lt;code&gt;npm run start-dev&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;npm run start&lt;/code&gt; will be used in production when you publish your server to hosting providers like cyclic.sh or Heroku to start the serve in production mode&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;VS Code has an extension called &lt;code&gt;Thunder Client&lt;/code&gt; so you can install it and try making request to your server.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Make sure to use the right HTTP verb/methods for your requests and sure you replace &lt;code&gt;:todoID&lt;/code&gt; the &lt;code&gt;_id&lt;/code&gt; of a document  when you are making a &lt;code&gt;PUT&lt;/code&gt;, &lt;code&gt;PATCH&lt;/code&gt; or &lt;code&gt;DELETE&lt;/code&gt; requests.&lt;br&gt;
Also, make sure that for your &lt;code&gt;POST&lt;/code&gt;, &lt;code&gt;PUT&lt;/code&gt; &amp;amp; &lt;code&gt;PATCH&lt;/code&gt; requests, you add the data to be sent in the body of the request in &lt;code&gt;json&lt;/code&gt; format.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;//TODO: Insert screenshot of the using Thunder Client here&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#publish-your-api"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Publish your API&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;To use the API you have just created in your mobile and web apps, you need to publish the server to a hosting provider.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;cyclic.sh is a free hosting provider that makes deploying your NodeJS projects as easy as pushing the codes to GitHub. I highly recommend that you try it out.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#pushing-your-codes-to-github"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Pushing your codes to GitHub&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;GitHub is the Google Drive or DropBox for developers. Its an remote store where you can keep your projects that and share your code with others. You can continue working on any other computer just by going to GitHub and cloning the project to the computer.&lt;/p&gt;

&lt;p&gt;Follow these steps to publish your codes to GitHub from this &lt;a href=""&gt;amazing article&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#deploying-with-cyclicsh"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Deploying with cyclic.sh&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;After you have pushed your codes to GitHub, signUp for an account on cyclic.sh. You can use your GitHub account to signUp.&lt;/p&gt;

&lt;p&gt;Create a new app and link it to your GitHub repository.&lt;/p&gt;

&lt;p&gt;Add your MONGO_DB_CON_STRING environment variable you used in the &lt;code&gt;.env&lt;/code&gt; file in the Environment Secrets section and done.&lt;/p&gt;

&lt;p&gt;Anytime you push your code to GitHub, cyclic.sh will deploy your server and give you a url to access your server. This is known as Continuos Deployment.&lt;/p&gt;

&lt;p&gt;cyclic.sh will generate a random unique url for your server. Use this url instead of &lt;code&gt;http://localhost:5000&lt;/code&gt; when you are making requests.&lt;/p&gt;

&lt;p&gt;Follow this article for a detailed guide to &lt;a href="https://dev.to/_iametornam/deploy-your-nodejs-auth0-rest-api-to-cyclicsh-under-4-minutes-j8h"&gt;deploying your API on cyclic.sh&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;ProTip: Anything can go wrong when a server receives a request. It is recommended that you always wrap your codes in a try/catch block to handle the errors.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you have any issues, please write them in the comments section below.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You can follow me on &lt;a href=""&gt;YouTube&lt;/a&gt; for more juicy contents daily. Find me on &lt;a href=""&gt;Twitter&lt;/a&gt; and browse through the source code for this project on &lt;a href=""&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;That's all folks!!!.&lt;/p&gt;

</description>
      <category>programming</category>
      <category>beginners</category>
      <category>tutorial</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Collection of codepen CSS Fire Animation - 2021</title>
      <author>front-end.codes</author>
      <pubDate>Thu, 16 Dec 2021 09:13:47 +0000</pubDate>
      <link>https://dev.to/codesfrontend/collection-of-codepen-css-fire-animation-2021-2348</link>
      <guid>https://dev.to/codesfrontend/collection-of-codepen-css-fire-animation-2021-2348</guid>
      <description>&lt;p&gt;Free &lt;a href="https://www.front-end.codes/2021/04/css-fire-animation-with-realistic.html"&gt;CSS Fire Animation With Realistic Effect&lt;/a&gt; examples&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bYzUA-NK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7nhy1hc3guayb5eo619p.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bYzUA-NK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7nhy1hc3guayb5eo619p.gif" alt="Image description" width="880" height="429"&gt;&lt;/a&gt;&lt;br&gt;
Preload page - fire animation&lt;br&gt;
Creator - [meow, meow]&lt;/p&gt;

&lt;p&gt;Made With - HTML/CSS(SCSS)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/i_SKY/pen/XbwxBJ"&gt;Demo of Codes&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VffuxF25--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mbtwjgvp3ddysp85e6ci.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VffuxF25--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mbtwjgvp3ddysp85e6ci.gif" alt="Image description" width="880" height="412"&gt;&lt;/a&gt;&lt;br&gt;
Fire&lt;br&gt;
Creator - Brian Bravo&lt;/p&gt;

&lt;p&gt;Made With - HTML/CSS(SCSS)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/BrianBravo/pen/JaFfz"&gt;Demo of Codes&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--k2CDYz0G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qut6753ac5ytha0bjst9.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k2CDYz0G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qut6753ac5ytha0bjst9.gif" alt="Image description" width="880" height="419"&gt;&lt;/a&gt;&lt;br&gt;
Fire Buttons&lt;br&gt;
Creator - Lia Tsernant&lt;/p&gt;

&lt;p&gt;Made With - HTML/CSS(SCSS)/JS&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/LiaTsernant/details/KKvMyLp"&gt;Demo of Codes&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RUJ_EPAX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zscd2i7y3rili0oa09g8.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RUJ_EPAX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zscd2i7y3rili0oa09g8.gif" alt="Image description" width="880" height="419"&gt;&lt;/a&gt;&lt;br&gt;
Text on fire&lt;br&gt;
Creator - Fabio Ottaviani&lt;/p&gt;

&lt;p&gt;Made With - HTML/CSS(SCSS)/JS&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/supah/pen/MWvOOrY"&gt;Demo of Codes&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9ewbkEHd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0g6zgcp15h236zy7sgal.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9ewbkEHd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0g6zgcp15h236zy7sgal.gif" alt="Image description" width="880" height="419"&gt;&lt;/a&gt;&lt;br&gt;
Sparks Float Up From A Blazing Fire&lt;br&gt;
Creator - Jess&lt;/p&gt;

&lt;p&gt;Made With - HTML/CSS(SCSS)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/RebelJess/pen/BaZVGLq"&gt;Demo of Codes&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--t41EJDqp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ibtdpi9zyppc17r56u0l.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t41EJDqp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ibtdpi9zyppc17r56u0l.gif" alt="Image description" width="880" height="419"&gt;&lt;/a&gt;&lt;br&gt;
literally lit Fire elements&lt;br&gt;
Creator - Manan Tank&lt;/p&gt;

&lt;p&gt;Made With - HTML/CSS(SCSS)/JS&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/MananTank/pen/MWmaWwQ"&gt;Demo of Codes&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--B7s-O3Ui--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/75uob9vcknj05izwwd7q.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--B7s-O3Ui--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/75uob9vcknj05izwwd7q.gif" alt="Image description" width="880" height="419"&gt;&lt;/a&gt;&lt;br&gt;
Fire - Congratulations&lt;br&gt;
Creator - MOHAN KHADKA&lt;/p&gt;

&lt;p&gt;Made With - HTML/CSS(SCSS)/JS&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/khadkamhn/pen/MWmWoYx"&gt;Demo of Codes&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IKCHGIJ5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/if1xkp6qcvf2nvucgkrw.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IKCHGIJ5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/if1xkp6qcvf2nvucgkrw.gif" alt="Image description" width="880" height="582"&gt;&lt;/a&gt;&lt;br&gt;
Fire Diya&lt;br&gt;
Creator - Gajanan Patil&lt;/p&gt;

&lt;p&gt;Made With - HTML/CSS(SCSS)/JS&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/gajananpp/pen/mdEvBoL"&gt;Demo of Codes&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---nJzcB4O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3s8enn0kt3vz9ibt4x4a.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---nJzcB4O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3s8enn0kt3vz9ibt4x4a.gif" alt="Image description" width="880" height="527"&gt;&lt;/a&gt;&lt;br&gt;
CSS - Fire&lt;br&gt;
Creator - RayPan&lt;/p&gt;

&lt;p&gt;Made With - HTML/CSS(SCSS)/JS&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/nocni_sovac/pen/PoZVPRz"&gt;Demo of Codes&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e_6mp6pW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y368w3v5oe36sq14kfvc.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e_6mp6pW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y368w3v5oe36sq14kfvc.gif" alt="Image description" width="880" height="549"&gt;&lt;/a&gt;&lt;br&gt;
Multicolour fire camp&lt;br&gt;
Creator - Yoann&lt;/p&gt;

&lt;p&gt;Made With - HTML/CSS(SCSS)/JS&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/yoann-b/pen/JjdEqvL"&gt;Demo of Codes&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--l30jFe3U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/39du22aca617o349vic5.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--l30jFe3U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/39du22aca617o349vic5.gif" alt="Image description" width="880" height="458"&gt;&lt;/a&gt;&lt;br&gt;
Nightscape With Pug and Stylus&lt;br&gt;
Creator - Ruhan tai&lt;/p&gt;

&lt;p&gt;Made With - HTML/CSS(SCSS)/JS&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/ruhantai/pen/KEEqxx"&gt;Demo of Codes&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EigDWZlx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c68fov2c45dwtllgfbio.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EigDWZlx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c68fov2c45dwtllgfbio.gif" alt="Image description" width="880" height="438"&gt;&lt;/a&gt;&lt;br&gt;
SVG + GSAP 3 fire icon animation&lt;br&gt;
Creator - Ksenia Kondrashova&lt;/p&gt;

&lt;p&gt;Made With - HTML/CSS(SCSS)/JS&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/ksenia-k/pen/moYyMw"&gt;Demo of Codes&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e9vh4IvK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/188d8fl5vv7bkxj4bp4j.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e9vh4IvK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/188d8fl5vv7bkxj4bp4j.gif" alt="Image description" width="880" height="477"&gt;&lt;/a&gt;&lt;br&gt;
SVG Animated Fire&lt;br&gt;
Creator - Brendan Carpenter&lt;/p&gt;

&lt;p&gt;Made With - HTML/CSS(SCSS)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/bcarpenter/pen/qvbEpz"&gt;Demo of Codes&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--o_nm0vk4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dzvpljmopiu66j6lg0al.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--o_nm0vk4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dzvpljmopiu66j6lg0al.gif" alt="Image description" width="880" height="477"&gt;&lt;/a&gt;&lt;br&gt;
Codevember Fire&lt;br&gt;
Creator - Romina&lt;/p&gt;

&lt;p&gt;Made With - HTML/CSS(SCSS)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/RominaMartin/pen/KrqMVw"&gt;Demo of Codes&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fhavL3AX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t1o10idodkbwdq64pkuj.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fhavL3AX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t1o10idodkbwdq64pkuj.gif" alt="Image description" width="880" height="477"&gt;&lt;/a&gt;&lt;br&gt;
Diya on Fire&lt;br&gt;
Creator - Rajat Kanti Nandi&lt;/p&gt;

&lt;p&gt;Made With - HTML/CSS(SCSS)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/rajatkantinandi/pen/xQdJoy"&gt;Demo of Codes&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ne0DCMiE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ez2uq4mm4vfmexua4vto.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ne0DCMiE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ez2uq4mm4vfmexua4vto.gif" alt="Image description" width="880" height="477"&gt;&lt;/a&gt;&lt;br&gt;
SVG Fire 🔥&lt;br&gt;
Creator - Steve Gardner&lt;/p&gt;

&lt;p&gt;Made With - HTML/CSS(SCSS)/JS&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/ste-vg/pen/oZXmdL"&gt;Demo of Codes&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nLkvCoNF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lp2e5zad9quc5vmyuopq.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nLkvCoNF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lp2e5zad9quc5vmyuopq.gif" alt="Image description" width="880" height="477"&gt;&lt;/a&gt;&lt;br&gt;
CSS3 fire animation&lt;br&gt;
Creator - RandN&lt;/p&gt;

&lt;p&gt;Made With - HTML/CSS(SCSS)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/RandN/pen/JXwRpr"&gt;Demo of Codes&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Jf5uXEh7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v4wgmhiv2izzhrf6jf0m.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Jf5uXEh7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v4wgmhiv2izzhrf6jf0m.gif" alt="Image description" width="880" height="477"&gt;&lt;/a&gt;&lt;br&gt;
Burning Button (Chrome and Firefox only)&lt;br&gt;
Creator - Jon Kantner&lt;/p&gt;

&lt;p&gt;Made With - HTML/CSS(SCSS)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/jkantner/pen/eYEwWNY"&gt;Demo of Codes&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can find more than &lt;a href="https://www.front-end.codes/2021/04/css-fire-animation-with-realistic.html"&gt;30+ Collection of CSS Fire Animation&lt;/a&gt; Source blog front-end.codes/2021/04/css-fire-animation-with-realistic.html&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>css</category>
      <category>html</category>
      <category>opensource</category>
    </item>
    <item>
      <title>FastWSGI: An ultra-fast WSGI server for Python</title>
      <author>James Roberts</author>
      <pubDate>Thu, 16 Dec 2021 09:01:57 +0000</pubDate>
      <link>https://dev.to/jamesroberts/fastwsgi-an-ultra-fast-wsgi-server-for-python-5dmi</link>
      <guid>https://dev.to/jamesroberts/fastwsgi-an-ultra-fast-wsgi-server-for-python-5dmi</guid>
      <description>&lt;h2&gt;
  &lt;a href="#fastwsgi"&gt;
  &lt;/a&gt;
  FastWSGI
&lt;/h2&gt;

&lt;p&gt;I've been developing a Python extension, written in C, that provides users with an ultra-fast WSGI server that they can run their WSGI applications on (Flask, Django and other WSGI apps).&lt;/p&gt;

&lt;p&gt;I have also recently managed to get it working on multiple platforms (Linux, MacOS and Windows).&lt;/p&gt;

&lt;p&gt;If you want to significantly speed up your WSGI based applications, check it out!&lt;/p&gt;

&lt;p&gt;It is still in early development at the moment. Any feedback would be greatly appreciated!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#links"&gt;
  &lt;/a&gt;
  Links
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jamesroberts/fastwsgi"&gt;Github&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/fastwsgi/"&gt;Pypi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/jamesroberts/fastwsgi/blob/main/performance_benchmarks/PERFORMANCE.md"&gt;Performance benchmarks&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>python</category>
      <category>performance</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>How to easily switch between different versions of Nodejs on your system.
</title>
      <author>Nmurgor</author>
      <pubDate>Thu, 16 Dec 2021 09:01:18 +0000</pubDate>
      <link>https://dev.to/nmurgor/how-to-easily-switch-between-different-versions-of-nodejs-on-your-system-7e8</link>
      <guid>https://dev.to/nmurgor/how-to-easily-switch-between-different-versions-of-nodejs-on-your-system-7e8</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Easily switch between different versions of Nodejs on your system.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In this blog article we'll learn how to switch to a default version when using &lt;code&gt;nvm&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;NVM is a tool that handles what versions of Nodejs you can use. Let’s say one’s working on a cutting edge library that requires the latest version, they would switch/install a version of Nodejs that is compatible with the library.&lt;/p&gt;

&lt;p&gt;Scenario two, one is working on a project that requires an older version of Nodejs, let's say &lt;code&gt;version 8.0.0.&lt;/code&gt; Installing and reinstalling Nodejs becomes hectic and cumbersome. &lt;/p&gt;

&lt;p&gt;&lt;code&gt;nvm&lt;/code&gt; makes handling versions of Nodejs rather painless.&lt;/p&gt;

&lt;p&gt;NVM, (Node Version Manager) enables one to:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Install different versions of Nodejs&lt;/li&gt;
&lt;li&gt;Switch to different versions of Nodejs&lt;/li&gt;
&lt;li&gt;Set a default Nodejs version from the installed versions&lt;/li&gt;
&lt;li&gt;Remove installed versions of Nodejs&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#install-nvm"&gt;
  &lt;/a&gt;
  Install nvm
&lt;/h3&gt;

&lt;p&gt;This assumes that &lt;code&gt;nvm&lt;/code&gt; installed already, if not, install &lt;code&gt;nvm&lt;/code&gt; by:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# install script for nvm&lt;/span&gt;
curl &lt;span class="nt"&gt;-o-&lt;/span&gt; https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note: Curl installation on your system is also required. Curl enables one to make http request from the commandline.&lt;/p&gt;

&lt;p&gt;After downloading and running the &lt;code&gt;bash&lt;/code&gt; script, set your profile file &lt;code&gt;~/.bash_profile&lt;/code&gt;, &lt;code&gt;~/.zshrc&lt;/code&gt;, &lt;code&gt;~/.profile&lt;/code&gt;, or &lt;code&gt;~/.bashrc&lt;/code&gt; so that nvm is available system-wide.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;NVM_DIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;$(&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nt"&gt;-z&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;XDG_CONFIG_HOME&lt;/span&gt;&lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;printf&lt;/span&gt; %s &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;HOME&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/.nvm"&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;printf&lt;/span&gt; %s &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;XDG_CONFIG_HOME&lt;/span&gt;&lt;span class="k"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/nvm"&lt;/span&gt;&lt;span class="si"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nt"&gt;-s&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$NVM_DIR&lt;/span&gt;&lt;span class="s2"&gt;/nvm.sh"&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="se"&gt;\.&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$NVM_DIR&lt;/span&gt;&lt;span class="s2"&gt;/nvm.sh"&lt;/span&gt; &lt;span class="c"&gt;# This loads nvm&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Check if &lt;code&gt;nvm&lt;/code&gt; installed correctly by running:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;nvm &lt;span class="nt"&gt;-v&lt;/span&gt;
&lt;span class="c"&gt;# prints nvm help menu for various options&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="/static/img/default-node-version.png" class="article-body-image-wrapper"&gt;&lt;img src="/static/img/default-node-version.png" alt="terminal screenshot showing nvm"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#install-a-different-version-of-nodejs"&gt;
  &lt;/a&gt;
  Install a different version of nodejs
&lt;/h3&gt;

&lt;p&gt;To install a different node version using nvm:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;nvm &lt;span class="nb"&gt;install &lt;/span&gt;14.0.0
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;NVM handles the installation of the Nodejs version for you, afterwards , you may use this version when needed or as needed:&lt;/p&gt;

&lt;p&gt;To use the Nodejs version from above:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;nvm use 14.0.0
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This command tells NVM to switch Nodejs to this version, the changes apply system-wide which is kinda cool, isn't it?&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#set-a-default-version-of-nodejs-using-nvm"&gt;
  &lt;/a&gt;
  Set a default version of Nodejs using NVM
&lt;/h4&gt;

&lt;p&gt;To set a default version of Nodejs using nvm, use this syntax:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;nvm &lt;span class="nb"&gt;alias &lt;/span&gt;defaut &amp;lt;your_nodejs_default_version&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To switch to version we installed above &lt;code&gt;14.0.0&lt;/code&gt;, run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;nvm &lt;span class="nb"&gt;alias &lt;/span&gt;default 14.0.0
node &lt;span class="nt"&gt;-v&lt;/span&gt; &lt;span class="c"&gt;# prints 14.0.0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;NVM makes handling nodejs versions on your system rather painless and easy especially if you heavily use Nodejs as a tooling for your frontend work flow.&lt;/p&gt;

&lt;p&gt;NVM offers more options such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;uninstall a Nodejs version&lt;/li&gt;
&lt;li&gt;Switch to a Nodejs version, &lt;code&gt;nvm use &amp;lt;nodejs_version&amp;gt;&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Further refference:&lt;br&gt;
&lt;a href="https://github.com/nvm-sh/nvm"&gt;https://github.com/nvm-sh/nvm&lt;/a&gt;&lt;/p&gt;

</description>
      <category>node</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Build Your UI Faster With These FREE UI Kits!</title>
      <author>notmahnoor</author>
      <pubDate>Thu, 16 Dec 2021 08:42:06 +0000</pubDate>
      <link>https://dev.to/notmahnoor/build-your-ui-faster-with-these-free-ui-kits-2fh2</link>
      <guid>https://dev.to/notmahnoor/build-your-ui-faster-with-these-free-ui-kits-2fh2</guid>
      <description>&lt;p&gt;Sometimes, as UI designers, it is asked of us to churn out quick and fast, decent UI designs, and the emergence of Tailwind CSS has already made our jobs easy. But it could be much easier if only we could use pre-built components to plug into our code.&lt;/p&gt;

&lt;p&gt;So here it is. I’ve done the hard work so &lt;em&gt;you&lt;/em&gt; don’t have to. Below is a compiled list of FREE UI Kits to help you achieve the completion of your project within a short time frame.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-mamba-ui"&gt;
  &lt;/a&gt;
  1. &lt;a href="https://mambaui.com/"&gt;Mamba UI&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Mamba UI provides various open-source collections of beautiful UI elements to help make your website in minutes for free. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-tailblocks"&gt;
  &lt;/a&gt;
  2. &lt;a href="https://tailblocks.cc/"&gt;Tailblocks &lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Tailblocks contains 60+ codeblocks that are responsive, have different color variations, and supports dark mode. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-kimia-ui"&gt;
  &lt;/a&gt;
  3. &lt;a href="https://kimia-ui.vercel.app/"&gt;Kimia UI&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Kimia gives you customizable UI kits that are compatible with Gatsby, Next.js, and create-react-app. You just have to copy and paste the component you want to use. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-tailwind-ui-kit"&gt;
  &lt;/a&gt;
  4. &lt;a href="https://tailwinduikit.com/"&gt;Tailwind UI Kit&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;This Kit gives you 250+ free tailwindcss components with 30+ templates, all compatible with React, Angular, and VueJS. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-tailkit"&gt;
  &lt;/a&gt;
  5. &lt;a href="https://www.tailwind-kit.com/"&gt;Tail-Kit&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Tail-Kit gives you 250 components and templates. It is also compatible with React, VueJS, and Angular. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-meraki-ui"&gt;
  &lt;/a&gt;
  6. &lt;a href="https://merakiui.com/"&gt;Meraki UI&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Offers decent tailwindcss components that support RTL languages, and is fully responsive via Flexbox and CSS Grid. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-salvia-kit"&gt;
  &lt;/a&gt;
  7. &lt;a href="https://www.salvia-kit.com/"&gt;Salvia Kit&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;This kit is fully customizable, containing 4 variants: create-react-app, Next.js, Vue, Next.&lt;/p&gt;

&lt;p&gt;So, yes. For your many thanks and appreciation gifts, you can post them all to 221B, Baker Street, and I’ll be there to receive them all with open arms. Until next time, fellow devs!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VjMJMzQW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3fdv4dnd9nd7yvdlj7r6.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VjMJMzQW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3fdv4dnd9nd7yvdlj7r6.gif" alt="happy coding" width="480" height="320"&gt;&lt;/a&gt;&lt;br&gt;
[&lt;em&gt;that's me btw, after making my life easy with UI kits lol&lt;/em&gt;]&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>uikits</category>
      <category>programming</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Cassette: Structured async meetings for remote teams. </title>
      <author>Jorge Avila</author>
      <pubDate>Thu, 16 Dec 2021 08:36:59 +0000</pubDate>
      <link>https://dev.to/jorgeavila_ss/cassette-structured-async-meetings-for-remote-teams-4lkf</link>
      <guid>https://dev.to/jorgeavila_ss/cassette-structured-async-meetings-for-remote-teams-4lkf</guid>
      <description>&lt;p&gt;&lt;strong&gt;Cassette&lt;/strong&gt; is a free multiplatform app created to disrupt the broken meeting culture using voice notes. We believe that asynchronous work should unlock your schedule and bring back your own time. &lt;strong&gt;Cassette provides you an easy way to produce voice messages and consume them efficiently&lt;/strong&gt;. It enhances meetings by adding structure such as agenda, due date and reactions.&lt;/p&gt;

&lt;p&gt;We are releasing our first public version and we are looking forward to having you and your teammates onboard. We have been using Cassette during the last months and have replaced ALL our reporting meetings (daily standups, weekly sync, status report …) so we have unlocked our time to have more focus and be more productive. Now we also do more in-call time for informal talks and team building. &lt;/p&gt;

&lt;p&gt;&lt;a href="http://cassetteapp.com/?utm_source=devto&amp;amp;utm_medium=post&amp;amp;utm_campaign=launch-v1"&gt;Download&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We hope you like it.&lt;/p&gt;

</description>
      <category>meeting</category>
      <category>async</category>
    </item>
    <item>
      <title>How To Document Your Next Open-source Project</title>
      <author>Uduakabaci Udofe</author>
      <pubDate>Thu, 16 Dec 2021 08:34:38 +0000</pubDate>
      <link>https://dev.to/uduakabaci/how-document-your-next-open-source-project-124i</link>
      <guid>https://dev.to/uduakabaci/how-document-your-next-open-source-project-124i</guid>
      <description>&lt;p&gt;I find myself looking at many open-source projects in a given week because I love reading people’s code. Reading another person’s code is one of the best ways to learn new things about your favorite technology and I have not been disappointed in that area. I’ve also been prompted to question some of my logic, but occasionally, I catch myself swearing over a project’s documentation, and according to &lt;a href="https://opensourcesurvey.org/2017/"&gt;this&lt;/a&gt; survey performed in 2017, the numbers are pretty bad.&lt;/p&gt;

&lt;p&gt;While some people omit documentation for their projects because they feel it’s not important, others include half-baked documentation without a demo whatsoever, leaving the reader overwhelmed. You want to provide enough information to the reader in the most detailed way possible, while still being concise. This might sound hard, but it’s worth it. &lt;/p&gt;

&lt;p&gt;The essence of this guide is to provide you with actionable tips on how to write a well-structured, and rich in details documentation that will help people make the most of your, existing or new, pet open-source project. &lt;/p&gt;

&lt;p&gt;Keep in mind that this guide is for people who want to fill out their pet project’s README.md file but do not know how to begin. It is not aimed at big projects, although what you will be doing won’t differ much. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-structure-your-project-documentation"&gt;
  &lt;/a&gt;
  How To Structure Your Project Documentation
&lt;/h2&gt;

&lt;p&gt;One of the most overlooked aspects of documentation is its structure. It’s not enough to write about your project in gory details without structure because the required details, at that point, might be lost in useless information. The best way to do this is to split your documentation into separate sections and provide the details where needed.&lt;/p&gt;

&lt;p&gt;You want to start with a “getting started guide” where you showcase your project’s power and slowly move towards the architectural design where you explain exactly how your project does what it does. Also, the API section comes in handy for projects that expose API so you want to include it. &lt;/p&gt;

&lt;p&gt;Now, let’s go through each section and explain what they do.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#getting-started-guide"&gt;
  &lt;/a&gt;
  Getting Started Guide
&lt;/h3&gt;

&lt;p&gt;This section is where you walk users through your project by performing a task. A good way to do this is to start with a finished result and walk through how to achieve the result with a step-by-step guide. Each step should do one thing and build on top of the last step. Bonus point if you catch some errors the user might run into while setting up the project, it shows you battle-tested the project.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#api-documentation"&gt;
  &lt;/a&gt;
  API  Documentation
&lt;/h3&gt;

&lt;p&gt;The API documentation is where you write in-depth about the APIs the project exposes. Projects with multiple components are good candidates for this. You want to go through each component and highlight what options they expect and the type of options they expect if that matters. &lt;/p&gt;

&lt;p&gt;You can immediately follow through with the architectural design or the “In the production guide”. Keep in mind that the ultimate is goal is to not provide extraneous details. Keep everything as concise as possible.&lt;br&gt;
Architectural Design&lt;br&gt;
The architectural design section is where you write about how your project does what it does. Explain a design decision and why that makes sense for the projects. You can also go through the inspiration for that the said design decision, this helps familiarize the readers with your mental model of the project. &lt;/p&gt;

&lt;p&gt;You can also go into what potential contributors should look out for in the project should they decide to contribute. The best place for this is the CONTRIBUTING.md file, but I find it very helpful to have information like this in the main documentation.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#license"&gt;
  &lt;/a&gt;
  License
&lt;/h3&gt;

&lt;p&gt;This is a very important part of a project’s documentation because it dictates how people will interact with the project. It’s advisable to choose the one you are comfortable with as some licenses require modified copies of your work to be also open-source. This might not be what you want.&lt;/p&gt;

&lt;p&gt;Also, if your project uses another project, be sure to check out that project’s license because some licenses require you to use the same license as the project your project is built upon. Below is a list of some commonly used licenses. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Apache License, Version 2.0&lt;/li&gt;
&lt;li&gt;GNU General Public License v3.0&lt;/li&gt;
&lt;li&gt;MIT License
You can find details for these licenses here.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Make sure you choose the one that fits both you (the author) and your project well.&lt;/p&gt;

&lt;p&gt;That’s pretty much it. If you have suggestions or questions, drop a comment below.&lt;/p&gt;

</description>
      <category>programming</category>
      <category>opensource</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>How could I add regex (regular expression) support to ParseJS using my current method of finding tokens?</title>
      <author>Calin Baenen</author>
      <pubDate>Thu, 16 Dec 2021 08:24:11 +0000</pubDate>
      <link>https://dev.to/baenencalin/how-could-i-add-regex-regular-expression-support-to-parsejs-using-my-current-method-of-finding-tokens-154a</link>
      <guid>https://dev.to/baenencalin/how-could-i-add-regex-regular-expression-support-to-parsejs-using-my-current-method-of-finding-tokens-154a</guid>
      <description>&lt;p&gt;So, ParseJS is a tokenization library I made for JavaScript.&lt;br&gt;
It's core feature is to sort a string into an array of characters (&lt;code&gt;string&lt;/code&gt;s whose length is strictly limited to one (1)) and symbols, where each symbol is a stand-in for a token. (Tokens are &lt;code&gt;symbol&lt;/code&gt;s so you can easily tell between a token and a character.)&lt;/p&gt;

&lt;p&gt;Anyways. Where am I going with this?&lt;br&gt;
Well, ParseJS is &lt;em&gt;&lt;strong&gt;good&lt;/strong&gt;&lt;/em&gt;, but it's not &lt;em&gt;&lt;strong&gt;great&lt;/strong&gt;&lt;/em&gt;.  &lt;/p&gt;

&lt;p&gt;You can statically parse tokens, like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Parameters: (str:string, toks:string[])&lt;/span&gt;
&lt;span class="nx"&gt;parse_string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;test12 test1 test2 test&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;test&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;test1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;test12&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;test2&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and it will reliably produce:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="nb"&gt;Symbol&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;test12&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt; &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nb"&gt;Symbol&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;test1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt; &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nb"&gt;Symbol&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;test2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt; &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nb"&gt;Symbol&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;BUT- there is no way of creating abstract groups of tokens (e.g. like how variable names can be practically anything, but the language doesn't name them for you).&lt;/p&gt;




&lt;ul&gt;
&lt;li&gt;What I have:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;parse_string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;class Test: end&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;class&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;end&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;span class="c1"&gt;// -&amp;gt; [Sym(class), ' ', 'T', 'e', ..., Sym(:), ...]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;What I want:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;parse_string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;class Test: end&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;class&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;end&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;[^&lt;/span&gt;&lt;span class="sr"&gt;0-9&lt;/span&gt;&lt;span class="se"&gt;\W]\w&lt;/span&gt;&lt;span class="sr"&gt;+]/&lt;/span&gt; &lt;span class="c1"&gt;// 'g' flag added automatically.&lt;/span&gt;
&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;span class="c1"&gt;// -&amp;gt; [Sym(class), ' ', Sym(Test), Sym(:), ' ', Sym(end)]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;The goal: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Add regex support to allow abstract token groups to exist.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;How I find tokens:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Loop through each string in &lt;code&gt;toks&lt;/code&gt; and collect the first character of each string in &lt;code&gt;epl&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Loop through each character of &lt;code&gt;str&lt;/code&gt; as &lt;code&gt;c&lt;/code&gt;, and if &lt;code&gt;c&lt;/code&gt; is in &lt;code&gt;epl&lt;/code&gt;, slice the next few characters ahead to see if a valid keyword exists.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The challenge(s):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Unlike strings, the length that a regex represents can be variable and would need to be computed.&lt;/li&gt;
&lt;li&gt;The way I check for tokens is by seeing if the character of a keyword exists. - But, I can't exactly do that, since there's no subscript operator, or way to get the character (or potential characters) in a regex.&lt;/li&gt;
&lt;li&gt;I slice the substring to test based on the length of the keywords that exist. But, since I can't get the length(s) that a regex could be, I can't compute how big of a substring I need to slice to test.&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>help</category>
      <category>watercooler</category>
    </item>
    <item>
      <title>Key Features and Usage of Python Programming Language
</title>
      <author>Ecosmobtech</author>
      <pubDate>Thu, 16 Dec 2021 08:15:53 +0000</pubDate>
      <link>https://dev.to/ecosmob/key-features-and-usage-of-python-programming-language-3jlf</link>
      <guid>https://dev.to/ecosmob/key-features-and-usage-of-python-programming-language-3jlf</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ljUMRmhp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/41z0gc1m2bslgqhd5jrd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ljUMRmhp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/41z0gc1m2bslgqhd5jrd.png" alt="Image description" width="880" height="462"&gt;&lt;/a&gt;Developed in 1991 by Guido van Rossum, Python has gained popularity among programmers throughout the world. Today, the Key features and Usages of Python have grown to one of the top-most programming languages. Python is a general-purpose, high-level programming language that allows developers to accomplish various essential tasks efficiently. It mainly emphasizes code readability and helps developers write clear, logical codes for small and large-scale projects.&lt;/p&gt;

&lt;p&gt;Python helps automate many tasks, thus making the entire app development process much easier and efficient. As compared to various other programming languages, Python is relatively easy to learn and use. Various functions using this programming language can be performed with just the help of simple commands and less text. That’s perhaps the key reason that the Python language is gaining immense popularity among a large number of coders, developers, and tech companies. Some of the key &lt;a href="https://www.ecosmob.com/python-development-company/#Home"&gt;Python development services&lt;/a&gt; that are high in demand include:&lt;/p&gt;

&lt;p&gt;– CMS Development&lt;/p&gt;

&lt;p&gt;– Python Integration&lt;/p&gt;

&lt;p&gt;– Python Web Development&lt;/p&gt;

&lt;p&gt;– Python Applications Development&lt;/p&gt;

&lt;p&gt;– Python Programming&lt;/p&gt;

&lt;p&gt;– E-commerce Development&lt;/p&gt;

&lt;p&gt;Features of Python Programming Language:&lt;/p&gt;

&lt;p&gt;Facilitate Easy Coding&lt;/p&gt;

&lt;p&gt;As compared to Java, JavaScript, C, C#, and various other programming languages, Python is a very easy to learn and developer-friendly language. Even beginners can learn this language in very little time. Developers find it very easy and convenient to code in the Python language.&lt;/p&gt;

&lt;p&gt;Open Source Language&lt;/p&gt;

&lt;p&gt;Python is an open-source language that is available for free at the official website. Since it is open-source, the source code is also available to the public. Users can easily download, use, and share it as well as per their requirements.&lt;/p&gt;

&lt;p&gt;Object-Oriented Language&lt;/p&gt;

&lt;p&gt;Python programming language is object-oriented. Thus, it supports various object-oriented languages and concepts of classes, object encapsulation, etc.&lt;/p&gt;

&lt;p&gt;Huge Standard Library&lt;/p&gt;

&lt;p&gt;Python has access to wide-ranging libraries and standard tools. The huge standard library of Python facilitates a rich set of modules and functions, eliminating writing unique code for every single thing. Some of the most popular libraries of Python include unit-testing, web browsers, regular expressions, etc.&lt;/p&gt;

&lt;p&gt;Dynamically Typed Language&lt;/p&gt;

&lt;p&gt;Python is a dynamically typed language that allows developers to decide the type of a variable at run time instead of specifying it in advance.&lt;br&gt;
Provide GUI Programming Support: Python is a GUI (Graphical User interface) programming support language. It means that various Graphical User interfaces can be created easily using a module like wxPython, PyQt5, PyQt4, or Tkinter (Tk) in python.&lt;/p&gt;

&lt;p&gt;High-Level Programming Language&lt;/p&gt;

&lt;p&gt;Python is a high-level programming language that allows developers to create programs in python easily and conveniently without the need to consider the system architecture. They do not even require managing the memory.&lt;/p&gt;

&lt;p&gt;Portable Language&lt;/p&gt;

&lt;p&gt;Another best thing about Python is that it is a portable language. Developers can easily use the same Python code for various platforms, including Mac, Windows, Linux, Unix, etc without the need to change it.&lt;/p&gt;

&lt;p&gt;Integrated Language&lt;/p&gt;

&lt;p&gt;Python is one such programming language that can be integrated easily with other programming languages such as C, C++, and others.&lt;/p&gt;

&lt;p&gt;Where Can Python Be Used?&lt;/p&gt;

&lt;p&gt;The programming language is often used to develop websites. In addition, this programming language can be used for developing:&lt;/p&gt;

&lt;p&gt;Custom Python GUI&lt;/p&gt;

&lt;p&gt;With the help of frameworks like Flask, Django, and others, Python programming language can be used to develop exceptional websites. These web frameworks allow developers to generate backend server-side code in Python. Since the language supports GUI (Graphical User Interface) programming, features like the Tkinter (Tk) package can create GUI applications. These kinds of applications are generally used to navigate a device and access software. With the help of various GUI frameworks, including Tk, wxPython, or PyForms, Python allows developers to build custom GUI applications easily and efficiently in less time.&lt;/p&gt;

&lt;p&gt;Web Apps and Mobile Applications&lt;/p&gt;

&lt;p&gt;As compared to other programming languages, Python focuses more on code readability. The readable and simple code base allows developers to maintain and update the software without investing extra time and effort. This makes Python a go-to programming language for many web and mobile app developers.&lt;/p&gt;

&lt;p&gt;Machine Learning (ML)&lt;/p&gt;

&lt;p&gt;Python language can be used for ML through specific machine learning libraries and frameworks such as scikit-learn and TensorFlow.&lt;/p&gt;

&lt;p&gt;Game Development&lt;/p&gt;

&lt;p&gt;Python finds its great usage in various game development projects. It is used to script small codes that help to automate multiple tasks. Python framework facilitates gaming development for various operating systems, including Android, iOS, Mac, Windows, Linux, etc.&lt;/p&gt;

&lt;p&gt;In all, the Python programming language can be used to develop software applications, pages within a web browser, games, scientific and mathematical computing, AI &amp;amp; ML projects, etc.&lt;/p&gt;

&lt;p&gt;Conclusion&lt;/p&gt;

&lt;p&gt;So, if you are looking for the best Python development services for your upcoming project, make certain to choose a professional Python Development Company that has years of experience in delivering projects based on the Python language. Also, it must be able to provide custom solutions to meet the specific project requirements.&lt;/p&gt;

&lt;p&gt;To find out more about using Python Development Services, &lt;a href="https://www.ecosmob.com/contact-us#Overview"&gt;get in touch&lt;/a&gt; with us.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>python</category>
      <category>programming</category>
      <category>gamedev</category>
    </item>
    <item>
      <title>Make button transparent</title>
      <author>Rohit Sharma</author>
      <pubDate>Thu, 16 Dec 2021 07:24:45 +0000</pubDate>
      <link>https://dev.to/devrohit0/create-a-transparent-button-bd1</link>
      <guid>https://dev.to/devrohit0/create-a-transparent-button-bd1</guid>
      <description>&lt;p&gt;Hello Everyone, In this post we're going to discuss How we can create a button with transparent background. Yesterday, I created a Linktree like website for my personal use. So, when I'm adding buttons to it, the button background was not looking cool. So, I decided to remove the background of buttons.&lt;/p&gt;

&lt;p&gt;You can also check out my&lt;a href="https://konnect-rohit.netlify.app/"&gt; website&lt;/a&gt; for better understanding. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0kdJNW0r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/83ybkmmuee62zw4rtdtc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0kdJNW0r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/83ybkmmuee62zw4rtdtc.png" alt="Final result" width="447" height="796"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#html"&gt;
  &lt;/a&gt;
  HTML
&lt;/h2&gt;

&lt;p&gt;HTML part is simple we just need a button.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#css"&gt;
  &lt;/a&gt;
  CSS
&lt;/h2&gt;

&lt;p&gt;First of all we need to add a background image to our parent &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; (in my case it is &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt;). Then &lt;code&gt;background-repeat:no-repeat&lt;/code&gt; and &lt;code&gt;background-size:cover&lt;/code&gt;. So, this makes sure that our background-image cover the whole &lt;code&gt;body&lt;/code&gt; area.&lt;/p&gt;

&lt;p&gt;Now, style the &lt;code&gt;button&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;transparent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So, when we set &lt;code&gt;background:transparent&lt;/code&gt; the image that we used in&lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; becomes visible through button but there is border around the button and we also remove it by using property &lt;code&gt;border:none&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;That's it for CSS part. We created our desired button. Now you can add some cool hover effect to make it more attractive(like neon effect).&lt;/p&gt;

&lt;p&gt;If you love it♥ then show some love.&lt;br&gt;
&lt;a href="https://www.buymeacoffee.com/devrohit"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gB5HhZkA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/default-blue.png" alt="Buy Me A Coffee" width="434" height="100"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>css</category>
      <category>tutorial</category>
    </item>
  </channel>
</rss>
