<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>AWS open source news and updates #90</title>
      <author>Ricardo Sueiras</author>
      <pubDate>Mon, 15 Nov 2021 09:02:31 +0000</pubDate>
      <link>https://dev.to/aws/aws-open-source-news-and-updates-90-3ppg</link>
      <guid>https://dev.to/aws/aws-open-source-news-and-updates-90-3ppg</guid>
      <description>&lt;h2&gt;
  &lt;a href="#november-15th-2021-instalment-90"&gt;
  &lt;/a&gt;
  November 15th, 2021 - Instalment #90
&lt;/h2&gt;

&lt;p&gt;Newsletter #90.&lt;/p&gt;

&lt;p&gt;Another packed edition of his newsletter, with some great new open source projects such as ploomber (a project to help you build production pipelines for your notebooks), slic-starter (a complete starter project for production-grade serverless applications) and many more interesting projects covering RStudio, Spring Boot, a serverless software vending solution, Kubernetes on the edge and more. AWS and Community content this week covers AWS CDK, Steampipe, AWS Distro for OpenTelemetry, Dask, Flagger, Cortex, Apache Airflow, Apache Flink, OpenSearch, Reddis, RabbitMQ and more. Make sure you check out the videos too, this week featuring open source Observability and OpenSearch.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#celebrating-open-source-contributors"&gt;
  &lt;/a&gt;
  Celebrating open source contributors
&lt;/h3&gt;

&lt;p&gt;The articles posted in this series are only possible thanks to contributors and project maintainers and so I would like to shout out and thank those folks who really do power open source and enable us all to build on top of what they have created. &lt;/p&gt;

&lt;p&gt;So thank you to the following open source heroes: Azmi Mengü, Pawel Grzybek, Jozef Jaroščiak, fourTheroem, Kyle Davis, Dotan Horovits, Matt Hanson, Ariel Walcutt, Imtranur Rahman, Mary-Elizabeth Morin, Kinnar Sen, Nathaniel Ruiz Nowell, David Boeke, Bob Tordella, Jon Udell, Behram Irani,  Madhav Vishnubhatta, Ethan Fahy, Zac Flamig, Nima Kaviani, Manabu McCloskey, Nicholas Thomson, Tom Zach, Kevin Bell, Stefan Prodan, Ramesh Sencha, Nate Bachmeier, Wallace Printz, Christian Mueller, Alex Pulver, Nick Lynch, Dzenan Softic, Sam Dengler, James Greenwood, Bikash Behera, and Kevin Higgins.&lt;/p&gt;

&lt;p&gt;Make sure you find and follow these builders and keep up to date with their open source projects and contributions.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#community-noticeboard"&gt;
  &lt;/a&gt;
  Community noticeboard
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Research Papers&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Check out the latest research papers released from Amazon focused on natural-language understanding and question answering are areas of focus, with additional topics ranging from self-learning to text summarisation. You can check these out on the post, &lt;a href="https://aws-oss.beachgeek.co.uk/13g"&gt;Amazon’s 23 papers at EMNLP&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS CDK&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you are looking for examples CDK projects, then AWS Community Builder Azmi Mengü has plenty of good examples you can get inspiration from. Head on over to &lt;a href="https://aws-oss.beachgeek.co.uk/13f"&gt;his GitHub repos&lt;/a&gt; and see for yourself.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#latest-open-source-projects"&gt;
  &lt;/a&gt;
  Latest open source projects
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;slic-starter&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/136"&gt;slic-starter&lt;/a&gt; Whilst I was watching the great sessions during AWS Community Day, I came across this project from fourTheorem. SLIC Starter is a complete starter project for production-grade serverless applications on AWS.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MXPNIHjc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/fourTheorem/slic-starter/blob/main/architecture.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MXPNIHjc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/fourTheorem/slic-starter/blob/main/architecture.png%3Fraw%3Dtrue" alt="arch" width="880" height="544"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;lambda-runtimes-stack&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/135"&gt;lambda-runtimes-stack&lt;/a&gt; Pawel Grzybek has put together this project that provides detailed information about the AWS Lambda runtimes versions. Deploy it and every few hours it will show record details of important version information about the AWS Lambda runtimes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;aws-fargate-with-rstudio-open-source&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/134"&gt;aws-fargate-with-rstudio-open-source&lt;/a&gt; this project delivers AWS CDK Python code to provision serverless infrastructure in AWS Cloud to run Open Source RStudio Server and Shiny. This is pretty nice, so make sure you bookmark this. I am also going through the code and going to re-use parts of it for other open source projects too.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LEGnAmUs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/aws-samples/aws-fargate-with-rstudio-open-source/blob/main/images/Rstudio_architecture.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LEGnAmUs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/aws-samples/aws-fargate-with-rstudio-open-source/blob/main/images/Rstudio_architecture.png%3Fraw%3Dtrue" alt="arch" width="880" height="820"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ploomber&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/13a"&gt;ploomber&lt;/a&gt; this project helps you with the challenges of working with .ipynb files allowing teams to develop collaborative, production-ready pipelines using JupyterLab or any text editor. This project is integrated with AWS so you can leverage it in your environments to develop locally, and then deploy to the cloud.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://camo.githubusercontent.com/a08456124b7b417037d672b6b4796ac9f4eb2961095a4bb6183c67f9244eeeb8/68747470733a2f2f706c6f6f6d6265722e696f2f7265706f2d6c61622d6578616d706c652e706e67" class="article-body-image-wrapper"&gt;&lt;img src="https://camo.githubusercontent.com/a08456124b7b417037d672b6b4796ac9f4eb2961095a4bb6183c67f9244eeeb8/68747470733a2f2f706c6f6f6d6265722e696f2f7265706f2d6c61622d6578616d706c652e706e67" alt="arch" width="2770" height="1500"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS-Connect-Manager&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/137"&gt;AWS-Connect-Manager&lt;/a&gt; this project from Jozef Jaroščiak provides Windows users with an easy to use tool to connect with your Amazon EC2 instances.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://camo.githubusercontent.com/a7670895eaf71ab2af0229b8df480d89c987e9d4f568db196356998feaea6b84/68747470733a2f2f692e696d6775722e636f6d2f484973663351722e706e67" class="article-body-image-wrapper"&gt;&lt;img src="https://camo.githubusercontent.com/a7670895eaf71ab2af0229b8df480d89c987e9d4f568db196356998feaea6b84/68747470733a2f2f692e696d6775722e636f6d2f484973663351722e706e67" alt="demo" width="1596" height="922"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;aws-kubernetes-edge-greengrass&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/13b"&gt;aws-kubernetes-edge-greengrass&lt;/a&gt; this project demonstrates how to collect data from edge locations using Kubernetes (k3s) and AWS IoT Greengrass. The code shows you how to get up and running on a Raspberry Pi, and uses AWS CDK - two of my favourite things.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;aws-iam-temporary-elevated-access-broker&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/13e"&gt;aws-iam-temporary-elevated-access-broker&lt;/a&gt; this projects provides a minimal reference implementation for providing temporary elevated access to your AWS environment. James Greenwood, Bikash Behera, and Kevin Higgins walk you through how to use this project in the blog post, &lt;a href="https://aws-oss.beachgeek.co.uk/13l"&gt;Managing temporary elevated access to your AWS environment&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8BOvuFiP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/22d200f8670dbdb3e253a90eee5098477c95c23d/2021/11/02/Managing-temporary-elevated-access-2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8BOvuFiP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/22d200f8670dbdb3e253a90eee5098477c95c23d/2021/11/02/Managing-temporary-elevated-access-2.png" alt="arch" width="880" height="704"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;java-spring-boot-ecs-fargate-redis-caching&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/13h"&gt;java-spring-boot-ecs-fargate-redis-caching&lt;/a&gt; this sample shows how a Spring Boot application can be deployed on ECS Fargate with Redis Caching Support to persist session data and improve application performance. The solution also provides the necessary templates to automatically provision the required infrastructure using CloudFormation to your desired AWS account.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WP7pjAbL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/aws-samples/java-spring-boot-ecs-fargate-redis-caching/blob/main/documentation/images/architecture.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WP7pjAbL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/aws-samples/java-spring-boot-ecs-fargate-redis-caching/blob/main/documentation/images/architecture.png%3Fraw%3Dtrue" alt="arch" width="861" height="771"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;aws-severless-vending-machine&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/13i"&gt;aws-severless-vending-machine&lt;/a&gt; this repository shows you how to create a solution to developer teams consume IaC Products, like a "Vending Machine", to automated deploy cloud service in their AWS Accounts without open a ticket or request in IT department. You can read the blog post &lt;a href="https://aws-oss.beachgeek.co.uk/13j"&gt;Criando um portal de autosserviços para o provisionamento na AWS&lt;/a&gt; (in Portugese, but I tried translating with Amazon Translate and it did a great job) &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--C6kyMEs3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/d435a6cdd786300dff204ee7c2ef942d3e9034e2/2021/11/08/autoservi%25C3%25A7o1.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C6kyMEs3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/d435a6cdd786300dff204ee7c2ef942d3e9034e2/2021/11/08/autoservi%25C3%25A7o1.jpg" alt="arch" width="880" height="338"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;amazon-connect-twitter-listener&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/13k"&gt;amazon-connect-twitter-listener&lt;/a&gt; I was recently chatting with a builder who was trying to implement social media integration with Amazon Connect, so I was pleasantly surprised when this project popped up on my open source radar. This project contains source code and supporting files for twitter streaming to Amazon Connect Tasks. Tweets are filtered on the specified tag and analyzed using comprehend to identify language and sentiment. Both tags are added as attributes to the task so additional branching decisions can be made. You need to set up your Amazon Connect project up first, but details are in the README&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lmwwGV-L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/aws-samples/amazon-connect-twitter-listener/blob/main/imgs/twitter-listener.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lmwwGV-L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/aws-samples/amazon-connect-twitter-listener/blob/main/imgs/twitter-listener.png%3Fraw%3Dtrue" alt="arch" width="880" height="372"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#aws-and-community-blog-posts"&gt;
  &lt;/a&gt;
  AWS and Community blog posts
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;AWS CDK&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A couple of good AWS CDK posts this week, starting off with &lt;a href="https://aws.amazon.com/blogs/opensource/comparing-aws-cloud-development-kit-and-aws-controllers-for-kubernetes/"&gt;Comparing AWS Cloud Development Kit and AWS Controllers for Kubernetes&lt;/a&gt; in which Nima Kaviani, Manabu McCloskey, and Nicholas Thomson come together to compare strategies, tools and technologies to automate infrastructure and software rollout strategies when working with Kubernetes. They look at six areas of focus: Programming, Validation, Execution, Interaction, Operation, and Reconciliation.&lt;/p&gt;

&lt;p&gt;A must read post from Alex Pulver and Nick Lynch is their post, &lt;a href="https://aws-oss.beachgeek.co.uk/133"&gt;Experimental construct libraries are now available in AWS CDK v2&lt;/a&gt; where they share an update on the AWS CDK v2 experimental APIs, and how this can make it even easier to migrate from v1.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Steampipe&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Steampipe is an open source tool for querying cloud APIs in a universal way and reasoning about the data in SQL. David Boeke, Bob Tordella, Jon Udell, and Nathan Wallace have collaborated together on this post, &lt;a href="https://aws-oss.beachgeek.co.uk/12u"&gt;Querying AWS at scale across APIs, Regions, and accounts&lt;/a&gt; where they share a number of different approaches for how you can use this project to deliver the best possible speed and throughput. [hands on]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VaxUCQPi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2021/11/08/spotaws_querying_aws_scale_across_aps_f1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VaxUCQPi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2021/11/08/spotaws_querying_aws_scale_across_aps_f1.png" alt="arch" width="877" height="491"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS Distro for OpenTelemetry&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Nathaniel Ruiz Nowell explains how to get telemetry data from AWS Lambda Python functions, without having to change a line of code, in his post &lt;a href="https://aws-oss.beachgeek.co.uk/12t"&gt;Auto-instrumenting a Python application with an AWS Distro for OpenTelemetry Lambda layer&lt;/a&gt; [hands on]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WMBX64Cr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2021/11/08/enowell_otel-python-lamda_f20_1000.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WMBX64Cr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2021/11/08/enowell_otel-python-lamda_f20_1000.png" alt="arch" width="880" height="693"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We also had with the post, &lt;a href="https://aws-oss.beachgeek.co.uk/12z"&gt;How To Use OpenTelemetry With AWS Lambda&lt;/a&gt; from Tom Zach at Aspecto, that also shows you how to deploy a tracing-enabled lambda with OpenTelemetry.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mv4imbRl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--61Z475GA--/c_limit%252Cf_auto%252Cfl_progressive%252Cq_auto%252Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e174usakq3tm1sqpc3s3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mv4imbRl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--61Z475GA--/c_limit%252Cf_auto%252Cfl_progressive%252Cq_auto%252Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e174usakq3tm1sqpc3s3.png" alt="arch" width="880" height="411"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To wrap up things in ADOT we had Alolita Sharma write &lt;a href="https://aws-oss.beachgeek.co.uk/138"&gt;AWS Distro for OpenTelemetry 0.14 is now available with updated Lambda layers&lt;/a&gt;, providing the release highlights and details on how you can download this image.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Flagger&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Flagger is a CNCF incubating project that takes care of much of the undifferentiated heavy lifting of canary deployments on Kubernetes. In the post &lt;a href="https://aws-oss.beachgeek.co.uk/130"&gt;Performing canary deployments and metrics-driven rollback with Amazon Managed Service for Prometheus and Flagger&lt;/a&gt; Kevin Bell and Stefan Prodan explain how to perform canary deployments on Kubernetes using Flagger to orchestrate the rollout, promotion, and rollback of deployments. Taking care of metrics we have Amazon Managed Service for Prometheus, and letting you observe the canary deployment process, we have Amazon Managed Grafana. Nice! [hands on]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--F5Wpeayf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2021/10/27/kebel_canary-deployments-rollback-prometheus-flagger_f1x1000.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--F5Wpeayf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2021/10/27/kebel_canary-deployments-rollback-prometheus-flagger_f1x1000.png" alt="arch" width="880" height="491"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cortex&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In the post, &lt;a href="https://aws-oss.beachgeek.co.uk/12y"&gt;Scaling Cortex with parallel compaction&lt;/a&gt; Albert Choi, an intern on the Amazon Managed Service for Prometheus team, shares his experience of designing and implementing parallel compactors inside of the Cortex open source project.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--I8idcN9w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2021/11/05/sharma_choi_f3_wh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--I8idcN9w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2021/11/05/sharma_choi_f3_wh.png" alt="illustration" width="691" height="441"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dask and Open Data&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This week we have a couple of interesting posts on how to analyse open data sets using an open source project called Dask (an open source project in Python that provides parallelism for analytics). Combining open data sets together with open source software running on AWS is a growing trend to help provide insights that can help make the lives of emergency managers, climate scientists, and policy makers that much easier. &lt;/p&gt;

&lt;p&gt;First up we have the post, &lt;a href="https://aws-oss.beachgeek.co.uk/12r"&gt;Transforming Geospatial Data to Cloud-Native Frameworks with Element 84 on AWS&lt;/a&gt;, where Matt Hanson and Ariel Walcutt from Element 84&lt;br&gt;
and Imtranur Rahman and Mary-Elizabeth Morin from AWS walk you through a solution you can put together than combines open data sets from Sentinel-2 (satellite imagery) with Dask, and a number of Python libraries to analyse and visualise the data. [hands on] &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3Ly7n7Y4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://s3.us-west-2.amazonaws.com/apnblog.awspartner.com/Element-84-RBG-Image.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3Ly7n7Y4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://s3.us-west-2.amazonaws.com/apnblog.awspartner.com/Element-84-RBG-Image.gif" alt="demo" width="880" height="741"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Following that we have &lt;a href="https://aws-oss.beachgeek.co.uk/12w"&gt;Analyze terabyte-scale geospatial datasets with Dask and Jupyter on AWS&lt;/a&gt;, where Ethan Fahy and Zac Flamig show you how to set up this Kubernetes, Dask and Jupyter Pangeo solution on AWS to automatically scale your cloud compute resources and parallelise your workload across multiple Dask worker nodes. In this example they show you how you can run an example notebook that performs sample analyses on the Coupled Model Intercomparison Project 6 (CMIP6) dataset from the Registry of Open Data on AWS. [hands on]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--u-yDLkd_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/9e6a55b6b4563e652a23be9d623ca5055c356940/2021/11/10/Analyze-terabyte-scale-geospatial-datasets-dask-jupyter-AWS-figure-1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u-yDLkd_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/9e6a55b6b4563e652a23be9d623ca5055c356940/2021/11/10/Analyze-terabyte-scale-geospatial-datasets-dask-jupyter-AWS-figure-1.png" alt="arch" width="880" height="445"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Apache Airflow&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Dzenan Softic and Sam Dengler demonstrate how to use a CodeArtifact repository to load your Python libraries in Apache Airflow in the post, &lt;a href="https://aws-oss.beachgeek.co.uk/139"&gt;Amazon MWAA with AWS CodeArtifact for Python dependencies&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--O_aAOZ_D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2021/11/10/softicd_mwaa-codeartifact-python_f1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--O_aAOZ_D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2021/11/10/softicd_mwaa-codeartifact-python_f1.png" alt="arch" width="880" height="867"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Apache Flink&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In this post, &lt;a href="https://aws-oss.beachgeek.co.uk/12s"&gt;Optimizing Apache Flink on Amazon EKS using Amazon EC2 Spot Instances&lt;/a&gt; Kinnar Sen shows you how to deploy a scalable, highly available, resilient, and cost optimised Flink application using Kubernetes via Amazon EKS and Amazon EC2 Spot Instances. [hands on]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8EIKXko2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/09/23/flink1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8EIKXko2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/09/23/flink1.png" alt="arch" width="880" height="514"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;OpenSearch&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you have a use case where you need to be able to run a single query against many different data sources, then you will find this post from Behram Irani and Madhav Vishnubhatta  will be of interest. Using a capability of Amazon Athena called Amazon Athena Federated Queries, you can use an existing connector for OpenSearch to query your data in both OpenSearch and (in this example) Amazon S3. To find out more, read the post &lt;a href="https://aws-oss.beachgeek.co.uk/12v"&gt;Query data in Amazon OpenSearch Service using SQL from Amazon Athena&lt;/a&gt; [hands on]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cREAlCnp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/b6692ea5df920cad691c20319a6fffd7a4a766b8/2021/11/05/BDB-1590-image001-new.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cREAlCnp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/b6692ea5df920cad691c20319a6fffd7a4a766b8/2021/11/05/BDB-1590-image001-new.png" alt="arch" width="738" height="457"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;RabbitMQ&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Amazon MQ provides two managed broker deployment connection options: public brokers and private brokers.&lt;br&gt;
Nate Bachmeier, Wallace Printz, and Christian Mueller have come together to share how to provision private Amazon MQ brokers behind a secure public load balancer endpoint using an example subdomain in the blog post, &lt;a href="https://aws-oss.beachgeek.co.uk/132"&gt;Creating static custom domain endpoints with Amazon MQ for RabbitMQ&lt;/a&gt; [hands on]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i9uzUe_a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/11/05/static-arch-1007x1024.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i9uzUe_a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/11/05/static-arch-1007x1024.png" alt="arch" width="880" height="895"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Redis&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This post from Ramesh Sencha at Coupa, &lt;a href="https://aws-oss.beachgeek.co.uk/131"&gt;How Coupa migrated from a self-hosted Redis to fully managed Amazon ElastiCache&lt;/a&gt; details why Coupa migrated self managed Redis workloads to Amazon ElastiCache; the benefits, the approach and the architecture they chose.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#quick-updates"&gt;
  &lt;/a&gt;
  Quick updates
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Fluent Bit&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Amazon Elastic Kubernetes Service (EKS) on Fargate now supports the use of Kubernetes Fluent Bit filters which provide enriched Kubernetes-specific metadata to Fluent Bit logs. Customers can now more easily observe and troubleshoot their applications by using the Kubernetes pod, container, or namespace name, among other Kubernetes metadata, to associate with their applications’ logs. Without support for the Kubernetes filter for Fluent Bit on EKS Fargate, customers had to manually read through log files to find the events they were interested in and it was difficult to associate a given log line with a Kubernetes application. Some customers who needed this kind of observability were unable to use Fargate with EKS and couldn’t benefit from its fully managed compute environment.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#video-of-the-week"&gt;
  &lt;/a&gt;
  Video of the week
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;OpenSearch&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In this recording from the AWS Summit, Kyle Davis will give you an understanding of the capabilities of OpenSearch, the first steps to get started (on or off AWS), a picture of how OpenSearch fits in your stack, a look into what’s in store for the future of the project as well as a guide to join the community and contribute.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/DPpbu5Jkkmc"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Open source observability&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Another great video from Dotan Horovits over at Logz.io. In this session he introduces observability, the role of open source in this area and then shows you some of the tools and projects in this space. Well worth 41 minutes of your time.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/McNAwoQtOfg"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#events-for-your-diary"&gt;
  &lt;/a&gt;
  Events for your diary
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Databricks | AWS Lakehouse Dev Day Live Workshop&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;November 16th 9:00 AM PT&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Delta Lake is an open source storage layer that provides ACID transactions, scalable metadata handling, and unifies streaming and batch data processing. You can use Delta Lake on top of your existing data lake. During this workshop you will learn how to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Make your existing Amazon S3 data lakes into a lakehouse with Delta Lake.
&lt;/li&gt;
&lt;li&gt;Provide an easy-to-use platform for analysts to directly query data on your data lake using SQL Analytics&lt;/li&gt;
&lt;li&gt;Simplify and automate data pipelines for streaming and batch data to lower costs and boost productivity for your data teams&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/zs"&gt;Read more and sign up here&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#stay-in-touch-with-open-source-at-aws"&gt;
  &lt;/a&gt;
  Stay in touch with open source at AWS
&lt;/h3&gt;

&lt;p&gt;I hope this summary has been useful. Remember to check out the &lt;a href="https://aws.amazon.com/opensource/?opensource-all.sort-by=item.additionalFields.startDate&amp;amp;opensource-all.sort-order=asc"&gt;Open Source homepage&lt;/a&gt; to keep up to date with all our activity in open source by following us on &lt;a href="https://twitter.com/AWSOpen"&gt;@AWSOpen&lt;/a&gt;&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>aws</category>
    </item>
    <item>
      <title>The Rosetta Code Project</title>
      <author>Mia</author>
      <pubDate>Mon, 15 Nov 2021 08:57:11 +0000</pubDate>
      <link>https://dev.to/miatemma/the-rosetta-code-project-1k1j</link>
      <guid>https://dev.to/miatemma/the-rosetta-code-project-1k1j</guid>
      <description>&lt;h3&gt;
  &lt;a href="#up-to-the-next-level"&gt;
  &lt;/a&gt;
  Up to the next level
&lt;/h3&gt;

&lt;p&gt;Now that we have covered the &lt;strong&gt;basics of PicoLisp&lt;/strong&gt;, I think it makes sense to study examples to get used to the syntax and programming style before we move on to new topics such as &lt;strong&gt;Web Application Programming&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;In many ways, a programming language works the same way like a human language. There is a &lt;strong&gt;syntax&lt;/strong&gt; and a &lt;strong&gt;vocabulary&lt;/strong&gt;, and there are things that can be expressed in every language, while other things are quite difficult to translate. The more languages you learn, the more you get aware of the potential of each language.&lt;/p&gt;

&lt;p&gt;So how can we do this? There is a very interesting project called &lt;a href="http://rosettacode.org/wiki/Rosetta_Code"&gt;"The Rosetta Code Project"&lt;/a&gt; named after the famous &lt;a href="https://en.wikipedia.org/wiki/Rosetta_Stone"&gt;Rosetta Stone&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FnbYZGdb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629972210436/TFhaSQPw8.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FnbYZGdb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629972210436/TFhaSQPw8.jpeg" alt="hieroglphen.jpg" width="320" height="240"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Rosetta Stone is a stele from 194 BC that has inscriptions in three language: Ancient Egyptian, ancient Greek and Demotic. Now the point is that &lt;strong&gt;the meaning of the text is the same in all three languages&lt;/strong&gt;. Since ancient Greek was well known, it was possible to finally decipher the Ancient Egyptian hieroglyphs after the stone was discovered in 1799.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#from-stone-to-code"&gt;
  &lt;/a&gt;
  From Stone to Code
&lt;/h2&gt;

&lt;p&gt;The Rosetta Code Project follows the "Same text, Different languages"  idea by presenting implementations of famous algorithms (like the &lt;a href="http://rosettacode.org/wiki/Dining_philosophers"&gt;"Dining Philosophers"&lt;/a&gt;, &lt;a href="http://rosettacode.org/wiki/Knapsack_problem"&gt;"Knapsack Problem"&lt;/a&gt; or &lt;a href="http://rosettacode.org/wiki/Towers_of_Hanoi"&gt;"Towers of Hanoi"&lt;/a&gt;) in many different programming languages. Besides "standard" languages like C, Python, Java, you will find also many examples for historical or minor languages, which is quite fun to read. Among them of course you will also find many many examples of &lt;a href="http://www.rosettacode.org/wiki/Category:PicoLisp"&gt;PicoLisp&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;During this loose series, we will pick out some interesting code examples and highlight how the algorithmn is implemented and what are its key points. It will also help us to grasp the difference between a &lt;strong&gt;functional implementation&lt;/strong&gt; of a code vs. for example an object-oriented one.&lt;/p&gt;




&lt;p&gt;We will start with the PicoLisp translation of the &lt;a href="https://en.wikipedia.org/wiki/Caesar_cipher"&gt;Caesar Cipher&lt;/a&gt;, which is a very simple cryptographic system. We will mainly need the string and list functions for this one. Stay tuned :)&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#sources"&gt;
  &lt;/a&gt;
  Sources
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Cover: &lt;a href="https://upload.wikimedia.org/wikipedia/commons/thumb/2/2a/2007-08-27_Rosetta_Stone_London_0309.JPG/800px-2007-08-27_Rosetta_Stone_London_0309.JPG"&gt;https://upload.wikimedia.org/wikipedia/commons/thumb/2/2a/2007-08-27_Rosetta_Stone_London_0309.JPG/800px-2007-08-27_Rosetta_Stone_London_0309.JPG&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://www.rosettacode.org/wiki/Rosetta_Code"&gt;http://www.rosettacode.org/wiki/Rosetta_Code&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>picolisp</category>
      <category>algorithms</category>
      <category>rosettacode</category>
    </item>
    <item>
      <title>I have installed Denoland</title>
      <author>sadiul hakim</author>
      <pubDate>Mon, 15 Nov 2021 08:56:16 +0000</pubDate>
      <link>https://dev.to/suhakim/i-have-installed-denoland-47h7</link>
      <guid>https://dev.to/suhakim/i-have-installed-denoland-47h7</guid>
      <description>&lt;p&gt;Wow,Denoland is awesome.We have &lt;code&gt;global&lt;/code&gt; object in &lt;code&gt;nodejs&lt;/code&gt; but you will see a large &lt;code&gt;window&lt;/code&gt; object in Denoland and a lot of functionality.Try to play with Deno if you are already a nodejs developer and if you have any interest to Deno.land &lt;/p&gt;

</description>
    </item>
    <item>
      <title>Steps to Hire Perfect Dedicated AngularJS Developers in 2021</title>
      <author>Krishlee</author>
      <pubDate>Mon, 15 Nov 2021 08:43:30 +0000</pubDate>
      <link>https://dev.to/itsmekrishlee/steps-to-hire-perfect-dedicated-angularjs-developers-in-2021-4ji2</link>
      <guid>https://dev.to/itsmekrishlee/steps-to-hire-perfect-dedicated-angularjs-developers-in-2021-4ji2</guid>
      <description>&lt;p&gt;Steps to Follow While Hiring Skilled AngularJS Developers&lt;br&gt;
The skillset, experience, and competency of a developer play a vital role in how well the application performs. However, if you are looking for AngularJS developers, you should examine some things. For instance, it’s better to know whether they have experience with making AJAX calls, data binding, direct DOM (Document Object Model) manipulation, and creating custom directives, services, and factories.&lt;/p&gt;

&lt;p&gt;Moreover, here’s the complete step-by-step guide to hire AngularJS developers who would prove to be the perfect fit for your project.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Prepare the project description:&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The first and foremost step is preparing the project description. Without a clear description, it’s difficult to find the right talents.  Also, make sure you have not missed any important details about your project. If you already have an existing developer team, you can get their assistance in this. This helps you determine what developer expertise you need. Besides, this will also assist the candidate to know whether they possess the necessary expertise to participate in your project.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Determine the hiring model:&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Based on the complexity of your project, you may select one hiring model. Similarly, the number of developers you need, the budget, and the deadline of the project need to be carefully analyzed. The most common models include full-time, part-time, and milestone. However, if you find it difficult to select one hiring model, consult with project managers at Soft Suave who have decades of experience.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Decide between front-end, back-end, or full-stack developers:&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;To finalize how many developers you require, you can look into the project’s workload and when you need it to be completed. For instance, if it needs 6 months and 1-2 developers, however, you can hire 3-4 developers in case you need to launch the App in 3 months. Sometimes entering the market before your rivals is crucial to attract more users and increase brand recognition.&lt;/p&gt;

&lt;p&gt;Apart from that, a front-end developer cannot work on the back-end part of your project. Likewise, a back-end developer would struggle to work on App’s visual aspects. Therefore, you should plan to hire both front-end and back-end programmers or hire a full-stack developer who can handle all aspects of the development plan.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Check the developer’s skills:&lt;br&gt;
Now, you should ensure that the developer has some necessary skills to successfully incorporate the features in your App. Also, if a developer doesn’t possess certain skills, the project may be delayed or in some worst cases even collapse. So, before making your final hiring decision, check if the developer has these skills.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Look for necessary soft skills:&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Making sure the developer has decent soft skills is also one of the essential steps during the hiring process. This is because how technically strong the developer is would not necessarily make him an ideal choice. They need to be team players as well to avoid conflicts. Also, the proper flow of information requires good communication skills. other aspects include,&lt;/p&gt;

&lt;p&gt;Adaptability&lt;br&gt;
Conflict management&lt;br&gt;
Creativity&lt;br&gt;
Decision making&lt;br&gt;
Dedication&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Sign an NDA agreement:&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;After a series of interviews and practical testing and finding the perfect developers, you need to complete the recruitment process. Above all, you can start your project after making an NDA agreement and doing other administrative tasks. This ensures the utmost privacy and avoids the risk of project information being leaked.&lt;/p&gt;

&lt;p&gt;Source : &lt;a href="https://www.softsuave.com/blog/steps-to-hire-perfect-dedicated-angularjs-developers-in-2021/"&gt;https://www.softsuave.com/blog/steps-to-hire-perfect-dedicated-angularjs-developers-in-2021/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>angular</category>
      <category>java</category>
    </item>
    <item>
      <title>What is WordPress? A super simple guide for beginners</title>
      <author>Amer Sikira</author>
      <pubDate>Mon, 15 Nov 2021 08:32:49 +0000</pubDate>
      <link>https://dev.to/amersikira/what-is-wordpress-a-super-simple-guide-for-beginners-1233</link>
      <guid>https://dev.to/amersikira/what-is-wordpress-a-super-simple-guide-for-beginners-1233</guid>
      <description>&lt;p&gt;&lt;em&gt;This post was originally published at &lt;a href="https://webinuse.com/what-is-wordpress/"&gt;webinuse.com&lt;/a&gt;&lt;/em&gt;&lt;br&gt;
What is WordPress? WordPress is the most popular content management system, or CMS, in the world. According to &lt;a href="https://techjury.net/blog/percentage-of-wordpress-websites/#gref"&gt;TectJury&lt;/a&gt;, more than 30% of all websites are created with WordPress, and according to &lt;a href="https://kinsta.com/knowledgebase/what-is-wordpress/"&gt;Kinsta&lt;/a&gt; over 40%.&lt;/p&gt;

&lt;p&gt;WordPress is licensed under GPLv2, which means that anyone can install it, change it, modify it for free.&lt;/p&gt;

&lt;p&gt;One of the first things we will notice is that there are two “different” types of WordPress.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; &lt;a href="https://wordpress.org"&gt;WordPress.org&lt;/a&gt;. When someone says WordPress 99% of the time this is what they are talking about, and this is the one that we are talking about. This is free, self-hosted, version. We &lt;a href="https://wordpress.org/download/"&gt;download&lt;/a&gt; it and install it on our server. After that we are free to use it in any way we want.&lt;/li&gt;
&lt;li&gt; &lt;a href="https://wordpress.com"&gt;WordPress.com&lt;/a&gt;. This is paid version of WordPress. When we create account we can create website there, but in a much smaller capacity than we can do with WordPress.org. Another drawback of WordPress.com is that we are not in control over our content.&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;If you want to learn more about what is WordPress you can check this awesome course &lt;a href="https://gumroad.com/a/882791539/kSrqD"&gt;Building websites with WordPress&lt;/a&gt; by &lt;a href="https://twitter.com/natmiletic"&gt;Nat Miletic&lt;/a&gt;. This course is excellent for those who want to start with WordPress. Nat is teaching us what is WordPress, what can we use it for, how can we use it, in really nice and simple way.&lt;/p&gt;

&lt;p&gt;&lt;cite&gt;Affiliate link&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#what-makes-wordpress-so-popular"&gt;
  &lt;/a&gt;
  What makes WordPress so popular?
&lt;/h3&gt;

&lt;p&gt;First of all, it is so simple to install it. From no website to website in several minutes. Once we get used to it, and we have prepared content, we can build websites pretty fast.&lt;/p&gt;

&lt;p&gt;Another feature of WordPress is that it has a large &lt;a href="https://wordpress.org/plugins/"&gt;library of plugins&lt;/a&gt;. Usually, whatever problem we have, somebody already made a plugin for that. Sometimes we have to use 2 or more in combination, but we can still have the job done. A lot of these plugins are free, and even ones that are paid 90% of the time have a free version.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7ZJJB2wj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jwca3kpnxu5tbd5xvr5t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7ZJJB2wj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jwca3kpnxu5tbd5xvr5t.png" alt="Screenshot of WordPress plugin repository" width="541" height="604"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Besides plugins, WordPress offers a large number of &lt;a href="https://wordpress.org/themes/"&gt;free themes&lt;/a&gt;. There is a really big market for paid themes, also. Nowadays, basically, all we have to do is have content ready, everything else is already prepared.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ar3XEg5E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fbzgdxoaasrupsgykvqs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ar3XEg5E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fbzgdxoaasrupsgykvqs.png" alt="Screenshot of WordPress theme repository" width="495" height="559"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The next thing on the list would be SEO. WordPress is “naturally” prepared to rank well. It is not guaranteed that we will end up on the first page of Google, but it is much easier to achieve that with WordPress than with “some custom” solution.&lt;/p&gt;

&lt;p&gt;Also, WordPress is good at accessibility too, most of the themes come with accessibility in mind. Same as with SEO, we have to do some things to make it even better, but it is much easier than starting from scratch.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-wordpress-good-for"&gt;
  &lt;/a&gt;
  What is WordPress good for?
&lt;/h3&gt;

&lt;p&gt;WordPress is good for everything. There are a lot of popular and “big” sites created with WordPress. Even though WordPress was a blogging platform at the beginning, today’s WordPress is suitable for creating any kind of website.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Landing pages&lt;/li&gt;
&lt;li&gt;  One page websites&lt;/li&gt;
&lt;li&gt;  Multi page websites&lt;/li&gt;
&lt;li&gt;  Blogs&lt;/li&gt;
&lt;li&gt;  Portfolios&lt;/li&gt;
&lt;li&gt;  e-Commerce, webshop&lt;/li&gt;
&lt;li&gt;  Membership sites&lt;/li&gt;
&lt;li&gt;  Booking sites&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;and a lot more. WordPress alone, without a developer, is just another CMS. But, with all these plugins and themes we can create almost anything we want.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-wordpress-main-advantage"&gt;
  &lt;/a&gt;
  What is WordPress’ main advantage
&lt;/h3&gt;

&lt;p&gt;WordPress’ main advantage is that we do NOT have to know how to code and we can build an awesome website.&lt;/p&gt;

&lt;p&gt;Apart from plugins and themes, WordPress has great support for several page builders. Those page builders are actually drag and drop apps that help us build websites visually. Some of the most popular ones are &lt;a href="https://elementor.com/"&gt;Elementor&lt;/a&gt;, &lt;a href="https://wordpress.org/plugins/visualcomposer/"&gt;Visual Composer&lt;/a&gt;, &lt;a href="https://de.wordpress.org/plugins/beaver-builder-lite-version/"&gt;Beaver Builder&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;
    &lt;br&gt;
  &lt;/p&gt;

&lt;p&gt;There are also page builders that come with themes like &lt;a href="https://www.elegantthemes.com/"&gt;Divi Builder&lt;/a&gt; and &lt;a href="https://generatepress.com/"&gt;GeneratePress&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Also, there are a lot of ready-made solutions for WordPress that can help us build more beautiful, more practical, and more interactive websites. Some of those solutions include automation, integrations, and a lot of other stuff.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#wordpress-disadvantages"&gt;
  &lt;/a&gt;
  WordPress disadvantages
&lt;/h3&gt;

&lt;p&gt;Everything has its downsides. So, what is WordPress’ downside? There are quite a few actually.&lt;/p&gt;

&lt;p&gt;The first downside is that WordPress can be very slow. But that is usually due to poor hosting. If our WordPress is slow due to our design there are some things we can do to improve loading times, like caching, image compressing, lazy loading, etc. But when we have poor hosting, all we can do is change it.&lt;/p&gt;

&lt;p&gt;The second disadvantage is security. Being the leading CMS in the world it has a target on its “head”. WordPress team releases update almost weekly, especially if a security flaw is found. But not everyone is updating every week (even though we should). Hackers are relying on our laziness and they use it to their advantage.&lt;/p&gt;

&lt;p&gt;Also, a lot of different people are creating themes and plugins. And not each and every one of them is a security expert. Even if we have secure plugins and theme, we have to update them regularly to protect ourselves from attacks.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you want to learn more about what is WordPress you can check this awesome course &lt;a href="https://gumroad.com/a/882791539/kSrqD"&gt;Building websites with WordPress&lt;/a&gt; by &lt;a href="https://twitter.com/natmiletic"&gt;Nat Miletic&lt;/a&gt;. This course is excellent for those who want to start with WordPress. Nat is teaching us what is WordPress, what can we use it for, how can we use it, in really nice and simple way.&lt;/p&gt;

&lt;p&gt;&lt;cite&gt;Affiliate link&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#conclusion-on-what-is-wordpress"&gt;
  &lt;/a&gt;
  Conclusion on what is WordPress
&lt;/h3&gt;

&lt;p&gt;WordPress is, probably, the best way to build websites. Especially if we do not know how to code, or we are not that good at it. We can build almost any website in a reasonable amount of time that will be of equal quality to any other website.&lt;/p&gt;

&lt;p&gt;What is WordPress offering us is a fast, reliable, and easy way of creating websites.&lt;/p&gt;

&lt;p&gt;If you have any questions or anything you can find me on my &lt;a href="https://twitter.com/AmerSikira"&gt;Twitter&lt;/a&gt;, or you can read some of my other articles like &lt;a href="https://webinuse.com/add-class-to-an-element-using-javascript/"&gt;4 easy ways to add class to an element using JavaScript&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>wordpress</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Top VS Code extensions that would bust your brain 🤯</title>
      <author>es404020</author>
      <pubDate>Mon, 15 Nov 2021 08:28:42 +0000</pubDate>
      <link>https://dev.to/es404020/top-vs-code-extensions-that-would-bust-your-brain-12oh</link>
      <guid>https://dev.to/es404020/top-vs-code-extensions-that-would-bust-your-brain-12oh</guid>
      <description>&lt;h2&gt;
  &lt;a href="#1-javascript-es6-code-snippets"&gt;
  &lt;/a&gt;
  1  JavaScript (ES6) Code Snippets
&lt;/h2&gt;

&lt;p&gt;It provides JavaScript, Vue, React and HTML code snippets.&lt;a href="https://marketplace.visualstudio.com/items?itemName=xabikos.JavaScriptSnippets"&gt;JavaScript (ES6) code snippets&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-live-server"&gt;
  &lt;/a&gt;
  2 Live Server
&lt;/h2&gt;

&lt;p&gt;Live server extension provides the live preview of your web applications right within the editor. This is handy and useful for front-end developer.&lt;a href="https://marketplace.visualstudio.com/items?itemName=ritwickdey.LiveServer"&gt;Live Server &lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-prettier-code-formatter"&gt;
  &lt;/a&gt;
  3 Prettier -Code formatter
&lt;/h2&gt;

&lt;p&gt;This Extension helps in code formatting for JavaScript, Html and  CSS.&lt;a href="https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode"&gt;Prettier&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-better-comment"&gt;
  &lt;/a&gt;
  4 Better Comment
&lt;/h2&gt;

&lt;p&gt;This extension helps you to create user friendly  comments on your code.&lt;a href="https://marketplace.visualstudio.com/items?itemName=aaron-bond.better-comments"&gt;Better Comment&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-bracket-pair-colorizer"&gt;
  &lt;/a&gt;
  5 Bracket Pair Colorizer
&lt;/h2&gt;

&lt;p&gt;This extension allows matching brackets to be identified with colors. The User can define which token to match.&lt;a href="https://marketplace.visualstudio.com/items?itemName=CoenraadS.bracket-pair-colorizer"&gt;Bracket Pair Colorizer&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-git-lens"&gt;
  &lt;/a&gt;
  6 Git Lens
&lt;/h2&gt;

&lt;p&gt;We use Git almost every day of our life .Git lens is the visual studio code plugin to supercharge git capability &lt;br&gt;
&lt;a href="https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens"&gt;Git Lens&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-github-copilot"&gt;
  &lt;/a&gt;
  7 GitHub Copilot
&lt;/h2&gt;

&lt;p&gt;GitHub Copilot is an AI pair programmer which suggests line completions and entire function bodies as you type. GitHub Copilot is powered by the OpenAI Codex AI system, trained on public Internet text and billions of lines of code&lt;/p&gt;

&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=GitHub.copilot"&gt;GitHub Copilot&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-git-history"&gt;
  &lt;/a&gt;
  8 Git History
&lt;/h2&gt;

&lt;p&gt;Git History extension gives you the complete Git History ,including a history of inland files all within Visual Studio code .&lt;a href="https://marketplace.visualstudio.com/items?itemName=donjayamanne.githistory"&gt; Git History&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#9-html-css-class-completion"&gt;
  &lt;/a&gt;
  9 HTML CSS Class Completion
&lt;/h2&gt;

&lt;p&gt;This extension auto-completes CSS class names as you type, based on the CSS files in your workspace.&lt;a href="//rketplace.visualstudio.com/items?itemName=Zignd.html-css-class-completion"&gt;HTML CSS Class Completion&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>javascript</category>
      <category>programming</category>
    </item>
    <item>
      <title>JavaScript Projects for Beginners – Easy Ideas to Get Started Coding JS [Beginners - Advance]</title>
      <author>Jarvis</author>
      <pubDate>Mon, 15 Nov 2021 08:16:12 +0000</pubDate>
      <link>https://dev.to/jvscode/javascript-projects-for-beginners-easy-ideas-to-get-started-coding-js-beginners-advance-26cb</link>
      <guid>https://dev.to/jvscode/javascript-projects-for-beginners-easy-ideas-to-get-started-coding-js-beginners-advance-26cb</guid>
      <description>&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;b&gt;The best way to learn a new programming language is to build projects.

I have created a list of 40 beginner friendly project tutorials in Vanilla JavaScript, React, and TypeScript.

My advice for tutorials would be to watch the video, build the project, break it apart and rebuild it your own way. Experiment with adding new features or using different methods.

That will test if you have really learned the concepts or not.

You can click on any of the projects listed below to jump to that section of the article.

&lt;/b&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/40-javascript-projects-for-beginners/&amp;amp;ved=2ahUKEwiB9tj0rPjyAhUMX30KHZQ5CG0QFnoECAgQAQ&amp;amp;usg=AOvVaw26RDQjHugdhbATVS83LI83"&gt;40+ JavaScript Projects for Beginners – Easy Ideas to Get Started Coding JS

&lt;/a&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Things You Must Do To Get A Junior Web Developer Job</title>
      <author>Danish Saleem</author>
      <pubDate>Mon, 15 Nov 2021 08:14:14 +0000</pubDate>
      <link>https://dev.to/mrdanishsaleem/things-you-must-do-to-get-a-junior-web-developer-job-11cj</link>
      <guid>https://dev.to/mrdanishsaleem/things-you-must-do-to-get-a-junior-web-developer-job-11cj</guid>
      <description>&lt;h2&gt;
  &lt;a href="#1-build-a-portfolio-site-full-of-relevant-work"&gt;
  &lt;/a&gt;
  1. Build A Portfolio Site Full Of Relevant Work
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Your portfolio is the first thing potential employers will look at when considering you for a junior web developer job, so your site needs to be a real reflection of your skills and personal brand.&lt;/li&gt;
&lt;li&gt;But, before you can load up your portfolio, you need to code it, launch it, and make sure it stands out from other websites.&lt;/li&gt;
&lt;li&gt;You’ll want to include any work you’ve done for companies or clients (with their permission) that you feel particularly good about, and remember to include projects that show your range as a design and developer. What’s important here is that you’re uploading strong, clean work that is indicative of both your skill level and brand.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#2-do-freelance-projects"&gt;
  &lt;/a&gt;
  2. Do Freelance Projects
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;A great way to get some work for your new junior web developer portfolio if you feel like it needs some beefing up is to seek out freelance clients.&lt;/li&gt;
&lt;li&gt;Taking on projects as a freelancer will help you build business skills like negotiating, establish trustworthiness as a developer, and get you some up-to-date recommendations to show potential employers.&lt;/li&gt;
&lt;li&gt;It'll also give you the chance to gain experience for full-time entry-level web developer jobs (if that's your goal) while building up your bank balance.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#3-put-your-code-on-github"&gt;
  &lt;/a&gt;
  3. Put Your Code On GitHub
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/"&gt;GitHub&lt;/a&gt; is the industry standard for version control, and many companies want to know that you have hands-on experience before extending an offer.&lt;/li&gt;
&lt;li&gt;You can prove that and show off your best code by creating your own &lt;a href="https://github.com/join"&gt;GitHub account&lt;/a&gt; and using it as a repository for your projects.&lt;/li&gt;
&lt;li&gt;After you get an account set up, make regular &lt;a href="https://github.blog/2013-01-07-introducing-contributions/"&gt;contributions to GitHub&lt;/a&gt;. This shows potential employers that you're consistently working on your junior web developer skills, even if they're only for imaginary projects.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#4-contribute-to-an-open-source-project"&gt;
  &lt;/a&gt;
  4. Contribute To An Open Source Project
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;If most of your coding so far has been for classes, mock projects, or solo gigs, you can also increase your teamwork cred by getting involved in an open-source project.&lt;/li&gt;
&lt;li&gt;Open source is the term for source code that's publicly available and can be modified by anyone.&lt;/li&gt;
&lt;li&gt;Getting involved in open source projects are the route to becoming a junior web developer. It will strengthen your development skills, get you hands-on experience and help you meet and network with other developers.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#5-participate-in-a-hackathon"&gt;
  &lt;/a&gt;
  5. Participate In A Hackathon
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;You can't turn around nowadays without bumping into a hackathon!&lt;/li&gt;
&lt;li&gt;They're fun and exciting ways to get to know tech people who share your interest, help tackle relevant problems, test your coding skills, learn from others, and maybe win prizes!&lt;/li&gt;
&lt;li&gt;At a hackathon, you'll end up coding on a team, and if you've been learning to code on your own, proving you can hack it with a team of coders makes you a lot more appealing to hiring managers at web development agencies.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#6-meet-techies-online-and-irl"&gt;
  &lt;/a&gt;
  6. Meet Techies Online And IRL
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Hopefully, you'll gain contacts at hackathons, but don't let the networking stop there.&lt;/li&gt;
&lt;li&gt;Keep reaching out to the people you meet, and learn more about the web development industry by talking online and in person.&lt;/li&gt;
&lt;li&gt;The easiest way to do this is through tech meetup groups.&lt;/li&gt;
&lt;li&gt;Almost every city has them, and if yours doesn't you can set up your own. Just pick the focus, find a place (even a coffee shop or local park will do!), and spread the word on social media, email, or in person.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#7-follow-industry-news"&gt;
  &lt;/a&gt;
  7. Follow Industry News
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Make a point to keep up with what's happening in tech - this is critical for both your first web developer job interview and all the small talk you'll be making with new tech friends.&lt;/li&gt;
&lt;li&gt;You don't need to be an expert on every story or topic out there; just get to know what's hot and what's happening.&lt;/li&gt;
&lt;li&gt;You can read blogs or tech news sites over breakfast, listen to podcasts when you're walking your dog, or scan Twitter lists while you're waiting in line at the store.&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#lets-connect"&gt;
  &lt;/a&gt;
  Let's connect💜
&lt;/h2&gt;

&lt;p&gt;You can follow me on &lt;a href="https://twitter.com/MrDanishSaleem"&gt;Twitter&lt;/a&gt;, &lt;a href="https://www.linkedin.com/in/mrdanishsaleem/"&gt;LinkedIn&lt;/a&gt; &amp;amp; &lt;a href="https://github.com/mrdanishsaleem/"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you like this post. Kindly support me by &lt;a href="https://www.buymeacoffee.com/mrdanishsaleem"&gt;Buying Me a Coffee&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qyC5Wtwl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fefzbxbnwww7tkght33w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qyC5Wtwl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fefzbxbnwww7tkght33w.png" alt="Buy Me a Coffee" width="880" height="247"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>career</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Video Analytics - Future of Analytics?</title>
      <author>Sarvesh Dubey</author>
      <pubDate>Mon, 15 Nov 2021 08:13:15 +0000</pubDate>
      <link>https://dev.to/dubesar/video-analytics-future-of-analytics-210l</link>
      <guid>https://dev.to/dubesar/video-analytics-future-of-analytics-210l</guid>
      <description>&lt;p&gt;Hello from Sarvesh - one of the co-founders at &lt;a href="https://fusionhq.co"&gt;https://fusionhq.co&lt;/a&gt;, excited to share some deep insights into the world of video analytics! &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What is Video Analytics?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Video Analytics can be understood something related to monitoring the user's behaviour for your product! Often it happens you have event analytics turned on giving you the product usage in an abstracted manner but doesn't provides the exact sense of product usage leading to less behavioural insights of product usage. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Let's take a scenario?&lt;/em&gt; &lt;/p&gt;

&lt;p&gt;You have a product XYZ and you are tracking a certain KPI of login dropoff on the platform! And you have certain A tool tracking events for that purpose. Now let's assume two scenarios.&lt;/p&gt;

&lt;p&gt;a. A person clicks on the Login button&lt;br&gt;
b. A person doesn't clicks on the Login button&lt;/p&gt;

&lt;p&gt;But you get to know that you have a high dropoff on that step. Now you are bound to see what was the behaviour of users dropping off at the location/instance!! But you can't simply do it with a regular event analytics tool!&lt;/p&gt;

&lt;p&gt;Let's assume now you want to run an A/B testing for that section. But you don't have any POC of what you should do to incur a lower dropoff than before! You can do it in random but not in targetted manner leading to more time wastage.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How does Fusion helps in Video Analytics?&lt;/strong&gt;&lt;br&gt;
At Fusion we care for both company's time and also development effort and minimize the efforts with larger output and assured success!&lt;/p&gt;

&lt;p&gt;We provide with the visual analysis of your product through small video recordings and help to see the visual journey of a particular user and then convert him by either engaging him or running an A/B testing for a certain set of users. (A/B testing in pipeline yet to be developed). &lt;/p&gt;

&lt;p&gt;You can view product usage videos and take actions according to that with backing of event analytics to confirm you POC and run engagement in a certain targetted manner!&lt;/p&gt;

&lt;p&gt;Hope you like the article and definitely visit &lt;a href="https://fusionhq.co"&gt;https://fusionhq.co&lt;/a&gt; for more insights. &lt;/p&gt;

</description>
    </item>
    <item>
      <title>Understanding callback functions and closures in JavaScript.</title>
      <author>Swastik Yadav</author>
      <pubDate>Mon, 15 Nov 2021 08:09:07 +0000</pubDate>
      <link>https://dev.to/swastikyadav/understanding-callback-functions-and-closures-in-javascript-154l</link>
      <guid>https://dev.to/swastikyadav/understanding-callback-functions-and-closures-in-javascript-154l</guid>
      <description>&lt;p&gt;Hello Everyone,&lt;/p&gt;

&lt;p&gt;In this post we will explore the HOF (Higher order function), Callbacks, and the crazy JavaScript Closures which made us all pull our hairs at some point in our learning journey.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#higher-order-function"&gt;
  &lt;/a&gt;
  Higher Order Function
&lt;/h2&gt;

&lt;p&gt;A function which &lt;strong&gt;accepts a function definition&lt;/strong&gt; as a parameter and/or &lt;strong&gt;returns a function&lt;/strong&gt; is HOF (Higher Order Function).&lt;/p&gt;

&lt;p&gt;For instance:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;isEven&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;printMsg&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;evenFunc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;isEven&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;evenFunc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`The number &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; is even: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;isEven&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;printMsg&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isEven&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above snippet &lt;strong&gt;printMsg&lt;/strong&gt; is the &lt;strong&gt;Higher Order Function&lt;/strong&gt;, because it accepts the isEven function as parameter.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#callbacks"&gt;
  &lt;/a&gt;
  Callbacks
&lt;/h2&gt;

&lt;p&gt;A callback is a function passed into another function as an argument to be executed later. In the last code snippet &lt;strong&gt;isEven&lt;/strong&gt; is the callback function.&lt;/p&gt;

&lt;p&gt;It is called &lt;strong&gt;callback&lt;/strong&gt; because it calls back to the place where it was created.&lt;/p&gt;

&lt;p&gt;Let's see one more example.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;numbers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;isOddNumber&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;oddNumbers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isOddNumber&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;oddNumbers&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// [1, 7, 3, 5]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above code snippet &lt;strong&gt;isOddNumber&lt;/strong&gt; is the callback function. Because &lt;strong&gt;isOddNumber&lt;/strong&gt; is passed as argument to the &lt;strong&gt;filter&lt;/strong&gt; function.&lt;/p&gt;

&lt;p&gt;Callback functions can be used to handle Async JavaScript.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#closures"&gt;
  &lt;/a&gt;
  Closures
&lt;/h2&gt;

&lt;p&gt;From &lt;a href="https://swastikyadav.com/how-javascript-works-behind-the-scene-execution-context-and-call-stack"&gt;execution context&lt;/a&gt;, we know that after a function is returned, it is removed from the call stack and deleted from execution context. So, keeping that in mind, here is the definition of a closure.&lt;/p&gt;

&lt;p&gt;A closure is a function which has access to the outer variables even after the outer function is returned.&lt;/p&gt;

&lt;p&gt;Once, the outer function is returned, it is removed from the callstack and deleted from execution context. But the inner function can still access the outer function variables. And &lt;strong&gt;this concept is known as closures&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;z&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;z&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;test&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// 45&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above code, &lt;strong&gt;bar&lt;/strong&gt; is the closure function, which has access to outer variables (x and y) even after outer function is returned.&lt;/p&gt;

&lt;p&gt;Simplified Closure Definitions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A closure is function which remembers the environment in which it was created.&lt;/li&gt;
&lt;li&gt;When a function is returned from an outer function, it carries the environment with itself.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Closures are possible in JS because of &lt;strong&gt;Lexical Scoping&lt;/strong&gt;. Lexical scoping means, &lt;em&gt;If a variable is not found in the local scope, it looks in the outer scope, and so on till the global scope.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vywFeJu8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6qb16au0n94gdzsi72uf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vywFeJu8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6qb16au0n94gdzsi72uf.png" alt="lexical-scoping" width="700" height="463"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#exception-in-closures"&gt;
  &lt;/a&gt;
  Exception in closures
&lt;/h3&gt;

&lt;p&gt;There is just one exeption in closures. In JavaScript every function is a closure except for functions created via "new Function" syntax.&lt;/p&gt;

&lt;p&gt;Usually a function have access to the lexical environment where it was created. But when a function is created via the &lt;strong&gt;"new Function"&lt;/strong&gt; syntax, it doesn't have access to the lexical environment but the global one.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getFunc&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;test&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;func&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;alert(value)&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;func&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;getFunc&lt;/span&gt;&lt;span class="p"&gt;()();&lt;/span&gt; &lt;span class="c1"&gt;// error: value is not defined&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So, functions such as func (in above code) doesn’t have access to outer variables, only to the global ones.&lt;/p&gt;




&lt;p&gt;So, that's it for this post. I hope you learned something new, if so, please do share and join my &lt;a href="https://www.getrevue.co/profile/8020lessons"&gt;8020 Newsletter&lt;/a&gt; to receive epic weekly content on building your skillset.&lt;/p&gt;

&lt;p&gt;Thank You!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>Nicholas Salzano Explaining The use of Artificial Intelligence (AI) in Video Marketing</title>
      <author>Nicholas Salzano</author>
      <pubDate>Mon, 15 Nov 2021 07:53:52 +0000</pubDate>
      <link>https://dev.to/nicholassalzano_/nicholas-salzano-explaining-the-use-of-artificial-intelligence-ai-in-video-marketing-5dcn</link>
      <guid>https://dev.to/nicholassalzano_/nicholas-salzano-explaining-the-use-of-artificial-intelligence-ai-in-video-marketing-5dcn</guid>
      <description>&lt;p&gt;Nicholas Salzano, a marketer from New York, has very deliberately explained the use of Artificial Intelligence (AI) in video marketing.&lt;/p&gt;

&lt;p&gt;The significant effect of artificial intelligence (AI) on advanced marketing endeavours to date is something no advertiser will debate. &lt;/p&gt;

&lt;p&gt;Artificial Intelligence has changed brands' ability to focus on their clients online by offering organizations a plenitude of significant client experiences, detailed mission results, and vital information. &lt;/p&gt;

&lt;p&gt;Artificial Intelligence has made it feasible for the web-based client experience to be customized dependent on individual inclinations and interests. &lt;/p&gt;

&lt;p&gt;Artificial intelligence investigations have empowered productive digital marketing strategies, such as advertisement focusing on inquiry marketing and made it feasible for brands to settle on information-driven choices more than ever. &lt;/p&gt;

&lt;p&gt;Inside the advanced promoting circle, a channel that can be extraordinarily formed by AI investigation is video marketing. &lt;/p&gt;

&lt;p&gt;By and large, the fate of video advertising looks energizing as brands understand its significance. &lt;/p&gt;

&lt;p&gt;With all proof highlighting the proceeded development of video utilization and commitment, it shouldn't take much for any advertiser to persuade your business to put resources into video promoting. &lt;/p&gt;

&lt;p&gt;Video marketing content will turn out to be considerably more pertinent to buyers, as brands currently can settle on genuinely information-driven choices to illuminate their substance. &lt;/p&gt;

&lt;p&gt;Because of artificial investigation, marks presently find out about their clients than at any other time. &lt;/p&gt;

&lt;p&gt;Artificial Intelligence devices and calculations have furnished them with expanded admittance to information and perusing propensities. &lt;/p&gt;

&lt;p&gt;All in all, how could this be significant for your future video advertising procedure? &lt;/p&gt;

&lt;p&gt;To lay it out, utilizing the data that brands can accumulate about their clients through these instruments, they can make a video promoting technique and content formed by unmistakable client bits of knowledge. &lt;/p&gt;

&lt;p&gt;By acquiring a detailed image of their primary interest group needs and needs, video promoting can be essential and created to consider a particular client profile interests. Also, it's implied that clients are bound to tap on video content that mirrors their inclinations. &lt;/p&gt;

&lt;p&gt;&lt;b&gt;It Further develops Personalization- Nicholas Salzano.&lt;br&gt;&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;There are various justifications for why customized advertising is significant today. In addition to the fact that it increases client commitment, yet additionally gives fitted messages which clients have come to adore. &lt;/p&gt;

&lt;p&gt;Albeit customized video advertising is yet to get on, we have no question it will find its spot in the sun as more brands see that custom-made video content outcomes in expanded commitment. &lt;/p&gt;

&lt;p&gt;Clients react much better to video advertisements which depend on their pursuit history and social interests. &lt;/p&gt;

&lt;p&gt;Artificial Intelligence investigation expands on this data to make designated promotions and content that resound with the crowd. &lt;/p&gt;

&lt;p&gt;Throughout the following few years, hyper-personalization is probably going to become well known in video content promoting. &lt;/p&gt;

&lt;p&gt;While Personalization may publicize practice attire to purchasers who purchased comparative things on the web, hyper-personalization may promote that equivalent exercise gear dependent on utilized limits, instalment techniques, and so on. &lt;/p&gt;

&lt;p&gt;&lt;b&gt;Also explore this blog:&lt;br&gt;&lt;br&gt;
&lt;a href="https://nicholas-salzano.com/nicholas-salzano-shares-how-much-time-does-ppc-take-to-deliver-results/"&gt;Nicholas Salzano Shares How much time does PPC take to deliver results?&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Expands Conversion - Nicholas Salzano.&lt;br&gt;&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;With clients dedicating 33% of their experience on the Internet to watching recordings, many of them can see video advertisements as an annoyance if they don't mirror their inclinations. &lt;/p&gt;

&lt;p&gt;One way not to upset clients internet seeing experience is to show promotions just to those who have looked for a specific item or administration. What's more, research recommends that buyers are bound to purchase an item after watching a video rather than simply learning about it. &lt;/p&gt;

&lt;p&gt;The video urges 64% of watchers to make a buy. Also, it's not hard to comprehend why video rejuvenates items such that composing words can't. Utilizing AI, you'll be protected in the information that each tweaked video is displayed to its interest group, which will get more chances. &lt;/p&gt;

&lt;p&gt;&lt;b&gt;Artificial Intelligence focuses on the ideal individuals to show your recordings- Nicholas Salzano.&lt;br&gt;&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Purchasers invest 33% of their energy watching recordings as promotions, instructional exercises, educational pieces, and so forth. The individuals who consider recordings to be an aggravation are not many. &lt;/p&gt;

&lt;p&gt;This makes it more significant than any other time to add video content to your technique. &lt;/p&gt;

&lt;p&gt;The video rejuvenates your offers and gives them substantial confirmation of the quality you are offering or the arrangement they are searching for. &lt;/p&gt;

&lt;p&gt;In any case, if the individual watching your video isn't keen on what it offers, this is a disturbance to them. As an advertiser, you will probably present promotions and recordings to the individuals who will perceive what you have to offer, for example, individuals searching for your image, item, or administration. &lt;/p&gt;

&lt;p&gt;&lt;b&gt;How could AI assist you with this- Nicholas Salzano?&lt;br&gt;&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Video marketing is vital in focusing on your crowd. Fortunately, these days many instruments guarantee that your substance contacts its target group. From web-based media promotions that are artificial reasoning headed to cross-channel publicizing stages, there are tons you can use to track down your purchaser persona. &lt;/p&gt;

&lt;p&gt;&lt;b&gt;How does this function- Nicholas Salzano?&lt;br&gt;&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;At the point when you watch a video on YouTube, it proposes comparative recordings dependent on your looks for when you're finished with the one you're watching. This is crafted by artificial intelligence- finding things that you want or may intrigue you. &lt;/p&gt;

&lt;p&gt;Not put yourself on the opposite side of this, the brands. Artificial intelligence helps brands by finding individuals who are keen on their contributions. These are individuals you endeavour to see as a brand. &lt;/p&gt;

&lt;p&gt;Artificial intelligence empowers testing of your present video advertising systems. &lt;/p&gt;

&lt;p&gt;Let's say that you have a few recordings prepared, and you have a sure outlook on your methodology. Wouldn't it helps on the off chance that you could do a trial and perceive how it will function before putting vast loads of cash in it? &lt;/p&gt;

&lt;p&gt;Artificial Intelligence tools can precisely show which substance has the most guarantee and support commitment in your ideal interest group. &lt;/p&gt;

&lt;p&gt;Consider this your opportunity to test and learn. You can run numerous firms before putting resources into a central dispatch, which is an incredible way to set aside some cash and work on your outcomes. This is particularly important for brands that have a more modest financial plan. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://nicholas-salzano.com/"&gt;Nicholas Salzano&lt;/a&gt; further discusses, with regards to video marketing, numerous more modest brands and organizations are reluctant to put a tremendous measure of spending plan in a generally new channel except if they are sure about its profit from speculation. &lt;/p&gt;

&lt;p&gt;Artificial intelligence investigation makes it feasible for advertisers to test their video content and have a superior thought of results before putting resources into a more broad carry out. &lt;/p&gt;

&lt;p&gt;This chance to try and learn wasn't conceivable before artificial intelligence. With a reasonable perspective on what their video content can accomplish, more organizations will want to contribute a more significant amount of their advanced marketing financial plan into it.&lt;/p&gt;

</description>
      <category>nicholassalzano</category>
      <category>nicksalzano</category>
      <category>nicholassalzanousa</category>
      <category>nicholasakanicksalzano</category>
    </item>
    <item>
      <title>Building The Poll App From the Django Tutorial With FastAPI and React</title>
      <author>jbrocher</author>
      <pubDate>Mon, 15 Nov 2021 07:52:47 +0000</pubDate>
      <link>https://dev.to/jbrocher/building-the-poll-app-from-the-django-tutorial-with-fastapi-and-react-1og3</link>
      <guid>https://dev.to/jbrocher/building-the-poll-app-from-the-django-tutorial-with-fastapi-and-react-1og3</guid>
      <description>&lt;p&gt;Welcome to part 2 of this series where we're building the Poll App from the &lt;a href="https://docs.djangoproject.com/en/3.2/intro/tutorial01/"&gt;Django Tutorial&lt;/a&gt;, using FastAPI and React ! In &lt;a href="https://dev.indooroutdoor.io/the-poll-app-from-django-tutorial-with-fastapi-and-react-1"&gt;part 1&lt;/a&gt;, we saw how to set up a FastAPI project using Docker, and wrote our first path operation. Today in Part 2, we'll go one step further and start working with a relational database. &lt;/p&gt;

&lt;p&gt;As usual the source for this part is available on &lt;a href="https://github.com/jbrocher/fastapi-poll-2"&gt;Github&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here's what's on the menu : &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#%F0%9F%92%BD-spinning-up-the-database"&gt;Spinning up a Postgres Database using docker-compose&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E2%9A%99%EF%B8%8F-configuring-our-orm%3A-sqlalchemy-and-alembic"&gt;Installing our ORM of choice: SQLAlchemy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to%F0%9F%93%9D-writing-the-models"&gt;Writing the Question and Choice model for the poll app&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Note: In the original Django tutorial, this is also where django-admin is introduced. For our own admin dashboard we'll be using react-admin which will be presented in a later part of this series !&lt;/em&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#requirements"&gt;
  &lt;/a&gt;
  Requirements
&lt;/h2&gt;

&lt;p&gt;We'll be using docker-compose to run our databse as a service. If you haven't installed it yet, the instructions are available &lt;a href="https://docs.docker.com/compose/install/"&gt;here&lt;/a&gt; !&lt;/p&gt;

&lt;p&gt;You don't &lt;strong&gt;have&lt;/strong&gt; to use docker-compose to follow along though. If you prefer to set up your PostgresSQL server yourself, just skip directly to &lt;a href="#%E2%9A%99%EF%B8%8F-configuring-our-orm%3A-sqlalchemy-and-alembic"&gt;Instaling the ORM&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#spinning-up-the-database"&gt;
  &lt;/a&gt;
  💽 Spinning up the database
&lt;/h2&gt;

&lt;p&gt;First of all, we need a database to work with. I chose docker-compose to run a Postgres image along with our app. Our API is already dockerized so this will make it easy to managage everything. &lt;/p&gt;

&lt;p&gt;I will not dive into the specifics of docker-compose as it's beyond the scope of this article. However if you've never used it before, I encourage you to go read th &lt;a href="https://docs.docker.com/compose/"&gt;documentation&lt;/a&gt;. It's quite extensive ! &lt;/p&gt;

&lt;p&gt;Add a &lt;code&gt;docker-compose.yml&lt;/code&gt; at the root of you project,  with the following instructions :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;version:"3.9"services:web:build:.depends_on:-dbports:-"80:80"env_file:-postgres.env-.envvolumes:-./app:/appdb:image:postgresrestart:alwaysvolumes:-data-volume:/var/lib/postgresql/dataenv_file:-postgres.envpg_admin:image:dpage/pgadmin4environment:-PGADMIN_DEFAULT_EMAIL=user@domain.com-PGADMIN_DEFAULT_PASSWORD=passwordports:-"81:80"volumes:data-volume:
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This configuration will launch the following: &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The &lt;code&gt;web&lt;/code&gt; service&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is our api running on the port 80. We mount the /app folder containg the app code into the container so we don't have to rebuild it everytime we make a change.&lt;/p&gt;

&lt;p&gt;We also include two environment files: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;postgres.env: This will hold the database credentials&lt;/li&gt;
&lt;li&gt;.env: For environments variables specific to the web servcie
&lt;strong&gt;The &lt;code&gt;db&lt;/code&gt; service&lt;/strong&gt;
This service runs a postgres image using the same &lt;code&gt;postgres.env&lt;/code&gt; than the API to configure the database. That way we can keep our environment variables DRY.
It also uses the &lt;code&gt;data-volume&lt;/code&gt; declared at the end of the file to persist the data.
&lt;strong&gt;The &lt;code&gt;pg_admin&lt;/code&gt; service&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This runs a &lt;a href="https://www.pgadmin.org/"&gt;pgAdmin&lt;/a&gt; admin image. pgAdmin is an adminisitration tool for PostgreSQL database. Declaring it as a service will make configuring&lt;br&gt;
the server connection eaiser as we'll benefit from docker-compose custom network. We expose it on port 81 to avoid conflicting with the API running on the port 80. &lt;/p&gt;

&lt;p&gt;To configure the postgres image, create the postgres.env file at the root of the project, with the following variables :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#postgres.env POSTGRES_PASSWORD=passwordPOSTGRES_USER=pollPOSTGRES_DATABASE=pollPOSTGRES_HOST=db
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We'ready to launch everything! Just run &lt;code&gt;docker-compose up&lt;/code&gt; and you should see the output for each service. Now you can access pgAdmin at &lt;code&gt;localhost:81&lt;/code&gt;. To connect to the postgres database, simply add a new server and enter information from &lt;code&gt;postgres.env&lt;/code&gt; like so : &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IkYgFRg2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636630576084/fdyP6gEP5.gif%3Fauto%3Dformat%2Ccompress%26gif-q%3D60%26format%3Dwebm" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IkYgFRg2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636630576084/fdyP6gEP5.gif%3Fauto%3Dformat%2Ccompress%26gif-q%3D60%26format%3Dwebm" alt="demo pg admin" width="" height=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That's it ! &lt;/p&gt;

&lt;p&gt;Now that our environment is up and running in let's dive in ! &lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/L48RzCCKfpwHK/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/L48RzCCKfpwHK/giphy.gif" alt="dive in" width="400" height="225"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#configuring-our-orm-sqlalchemy-and-alembic"&gt;
  &lt;/a&gt;
  ⚙️  Configuring our ORM: SQLAlchemy and Alembic
&lt;/h2&gt;

&lt;p&gt;Contrary to Django, FastAPI doesn't ship with a built-in ORM solution  like &lt;a href="https://docs.djangoproject.com/en/3.2/topics/db/queries/"&gt;django-orm&lt;/a&gt;. FastAPI focuses on enabling you to build perfomant and robust APIs super efficiently, and let you make your own choices for everything else. You could avoid relational databases altogether and use &lt;a href="https://www.mongodb.com/compatibility/mongodb-and-django"&gt;MongoDB&lt;/a&gt; for instance. This lets you build an architecture tailored to your needs. &lt;/p&gt;

&lt;p&gt;It does mean that we have to configure our ORM ourserlves though.  For this tutorial we'll use &lt;a href="https://www.sqlalchemy.org/"&gt;SQLAlchemy&lt;/a&gt;, a reliable solution under active developement. &lt;/p&gt;

&lt;p&gt;First let's install a few dependencies. From you &lt;code&gt;app&lt;/code&gt; folder run &lt;code&gt;poetry add sqlalchemy psycopg2-binary alembic pydantic&lt;/code&gt;. &lt;br&gt;
Besides SQLAlchemy this will install the followingd packages: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;psycopg2: A python adaptater for PostgresSQL. Required by &lt;code&gt;SQLAlchemy&lt;/code&gt; (And also by Django when working with Postgres)&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://alembic.sqlalchemy.org/en/latest/"&gt;alembic&lt;/a&gt;: This will be our migrations management tools&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://pydantic-docs.helpmanual.io/"&gt;pydantic&lt;/a&gt;: Data validation and settings management using python type annotations. If you've worked with &lt;a href="https://www.django-rest-framework.org/"&gt;DRF&lt;/a&gt; before,  you can think of pydantic models as the equivalent of serializers.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#using-environment-variables-"&gt;
  &lt;/a&gt;
  Using environment variables :
&lt;/h3&gt;

&lt;p&gt;We will need to access the environement variables in order to set up the connection with the database. We'll use a special &lt;code&gt;pydantic&lt;/code&gt; class called &lt;code&gt;BaseSettings&lt;/code&gt;. Add a &lt;code&gt;config.py&lt;/code&gt; file to &lt;code&gt;app/app&lt;/code&gt; with the following code :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#app/app/config.pyfrom pydantic import BaseSettingsclassSettings(BaseSettings): POSTGRES_USER: str
    POSTGRES_PASSWORD: str
    POSTGRES_DATABASE: str
    POSTGRES_HOST: str
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When instantiating the class with &lt;code&gt;settings = Settings()&lt;/code&gt;, pydantic will read the variables from the environment and validate them against the types we defined,  raising an error if anything is missing. This class is actually a great selling point of pydantic, offering tons of other functionalities like automatic parsing of list and dict type. More information is available &lt;a href="https://pydantic-docs.helpmanual.io/usage/settings/#parsing-environment-variable-values"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#sqlalchemy"&gt;
  &lt;/a&gt;
  SQLAlchemy
&lt;/h3&gt;

&lt;p&gt;Let's configure SQLAlchemy to connect to our Database. Create &lt;code&gt;app/app/database.py&lt;/code&gt; and put the following code in it :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# app/app/database.pyfrom sqlalchemy import create_enginefrom sqlalchemy.ext.declarative import declarative_basefrom sqlalchemy.orm import sessionmakerfrom . import config# The declarative base we'll use to create our model Base = declarative_base()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For now all we're concerned with is writing the models, so we only need to configure the declarative base from which they will inherit. In part 3 we'll come back to this file to create a session maker to use in our path operations. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#alembic"&gt;
  &lt;/a&gt;
  Alembic ⚗️
&lt;/h3&gt;

&lt;p&gt;Last bit of configuration before writing the models: &lt;a href="https://alembic.sqlalchemy.org/en/latest/"&gt;Alembic&lt;/a&gt;. This is SQLAlchemy own migration manager. It will allows us to do the same thing than django's &lt;code&gt;makemigrations&lt;/code&gt; and &lt;code&gt;migate&lt;/code&gt; commands, but we need to initialize it first ! &lt;/p&gt;

&lt;p&gt;Let's first generate the configuration files for alembic. From the root of the project &lt;code&gt;cd&lt;/code&gt; into the &lt;code&gt;app&lt;/code&gt; directory and run &lt;code&gt;alembic init&lt;/code&gt;. This will create the configuration scripts for alembic. Your project strucutre should now look like this : &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wQ08DEfm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636740239216/C50VE0G_b.png%3Fauto%3Dcompress%26auto%3Dcompress%2Cformat%26format%3Dwebp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wQ08DEfm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636740239216/C50VE0G_b.png%3Fauto%3Dcompress%26auto%3Dcompress%2Cformat%26format%3Dwebp" alt="directory structure" width="319" height="407"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We also need to let Alembic know where to find this scripts, so we can run the commands from the root of the project. We can do so by setting the &lt;code&gt;ALEMBIC_CONFIG&lt;/code&gt; environment variable :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;//.envALEMBIC_CONFIG=/app/app/alembic.ini
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let's edit the &lt;code&gt;env.py&lt;/code&gt; file to configure the connection to the database. If you open this file, you'll see that it's mostly composed of two functions, corresponding to the two available modes of alembic: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;run_migrations_online&lt;/code&gt;: Configure the online mode. This is the one that we will be using.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;run_migrations_offline&lt;/code&gt;: Configure the offline mode. This mode allows the user to generate SQL instructions instead of running the migrations directly against the database&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In both case, we need to edit the way the connection URL is set up. Instead of reading it from &lt;code&gt;alembic.ini&lt;/code&gt; we'll use the Setting class we created earlier to generate it from our environement variables. Like so :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;from app.config import Settings

  settings = Settings()

  ...defrun_migrations_offline(): ...

    url = f"postgresql://{settings.POSTGRES_USER}:{settings.POSTGRES_PASSWORD}@{settings.POSTGRES_HOST}/{settings.POSTGRES_DATABASE}" context.configure(
        url=url,
        target_metadata=target_metadata,
        literal_binds=True,
        dialect_opts={"paramstyle": "named"},
        compare_server_default=True,
    )

  ...defrun_migrations_online(): ...

    url = f"postgresql://{settings.POSTGRES_USER}:{settings.POSTGRES_PASSWORD}@{settings.POSTGRES_HOST}/{settings.POSTGRES_DATABASE}" connectable = engine_from_config(
        {"sqlalchemy.url": url},
        prefix="sqlalchemy.",
        poolclass=pool.NullPool,
    )
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To try it out, drop into the web container, and run &lt;code&gt;alembic revision -m "test revision"&lt;/code&gt;. This will create an empty revision in the file &lt;code&gt;alembic/version&lt;/code&gt; folder :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;"""test revision


Revision ID: 2af1b91bea53
Revises: 27259876f63d
Create Date: 2021-11-12 18:21:26.442182

"""from alembic import opimport sqlalchemy as sa# revision identifiers, used by Alembic.revision = '2af1b91bea53'down_revision = '27259876f63d'branch_labels = Nonedepends_on = Nonedefupgrade():passdefdowngrade():pass
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If the file is generated wihtout errors, then Alembic is correctly configured ! You can delete this revision safely, we'll generate a new one from the models in a moment. &lt;/p&gt;

&lt;p&gt;Now we're finally ready to write our models and generate the associated migrations ! &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#writing-the-models"&gt;
  &lt;/a&gt;
  📝 Writing the models
&lt;/h2&gt;

&lt;p&gt;We'll need two model for our Poll app : &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A &lt;code&gt;Question&lt;/code&gt; model : This will hold the question text&lt;/li&gt;
&lt;li&gt;A &lt;code&gt;Choice&lt;/code&gt; model: A possible answer for a question.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There is a one-to-many relation between a &lt;code&gt;Question&lt;/code&gt; and a &lt;code&gt;Choice&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;To create them, add a &lt;code&gt;models.py&lt;/code&gt; file to the poll folder, with the following code in it :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#/app/polls/models.pyfrom datetime import datetimefrom sqlalchemy import Columnfrom sqlalchemy import DateTimefrom sqlalchemy import ForeignKeyfrom sqlalchemy import Integerfrom sqlalchemy import Stringfrom sqlalchemy.orm import relationshipfrom app.database import BaseclassQuestion(Base): __tablename__ = "poll_question" id = Column(Integer, index=True, primary_key=True)
    question_text = Column(String(200), nullable=False)
    pub_date = Column(DateTime, nullable=False, default=datetime.utcnow)

    choices = relationship("Choice", backref="question")classChoice(Base): __tablename__ = "poll_choice" id = Column(Integer, index=True, primary_key=True)
    choice_text = Column(String(200), nullable=False)
    votes = Column(Integer, default=0, nullable=False)
    question_id = Column(Integer, ForeignKey("poll_question.id"))
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you're coming from Django, it's important to note a few key differences with &lt;code&gt;django-orm&lt;/code&gt;: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You have to set the tablename yourself with the &lt;code&gt;__tablename__&lt;/code&gt; class attribute. Here I followed the Django convention &lt;code&gt;&amp;amp;lt;app_name&amp;amp;gt;_&amp;amp;lt;model_name&amp;amp;gt;&lt;/code&gt; but you're free to do as you please !&lt;/li&gt;
&lt;li&gt;We also need to designate a column to serve as the primary key.&lt;/li&gt;
&lt;li&gt;The column are nullable by default, we have to explicetly set &lt;code&gt;nullable=False&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Relationships need to be explicitely declared with the &lt;a href="https://docs.sqlalchemy.org/en/14/orm/relationships.html"&gt;relationship&lt;/a&gt; functions. This enables ORM features like loading a question's choices using &lt;code&gt;question.choices&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As you can see, SQLAlechmy is a bit more "low level" than Django-ORM which means it needs more configuration. However, it also means that you have a more fine-grained control&lt;br&gt;
over its behavior, and as we'll see later in this tutorial it makes querying more explicit! &lt;/p&gt;

&lt;p&gt;Now that our models are declared let's see how we can automatically generate the corresponding migrations with Alembic.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/XI7rk6UYBM4LWp2rw0/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/XI7rk6UYBM4LWp2rw0/giphy.gif" alt="The great migration" width="480" height="480"&gt;&lt;/a&gt;&lt;em&gt;the great migration&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;To automatically generate our migrations, we need to let Alembic know about our models. To do that, we'll simply import them into our &lt;code&gt;env.py&lt;/code&gt; file. This is a bit like registering a new app into a django app &lt;code&gt;settings.py&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;We also need to import &lt;code&gt;Base&lt;/code&gt;, as it is our declartive base that contains all the information for building the tables corresponding to our model. Each time a class inherits from &lt;code&gt;Base&lt;/code&gt;, it adds its own instructions to &lt;code&gt;Base.metadata&lt;/code&gt;.  These instructions are passed to Alembic through the &lt;code&gt;target_metadata&lt;/code&gt; variable, so we need to assign it to &lt;code&gt;Base.metadata&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#app/app/alembic/env.py# We import the models and our declartive baseimport polls.modelsfrom app.database import Base... # Find this line near the top of the file # And replace None with Base.metadatatarget_metadata = Base.metadata
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;All done ! Run &lt;code&gt;alembic version --autogenerate -m "create question and choice models"&lt;/code&gt; to automatically creathe the migration file. &lt;br&gt;
It should generate the following instructions :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;"""create_question_and_choice

Revision ID: 27259876f63d
Revises: 
Create Date: 2021-11-11 10:52:50.386678

"""from alembic import opimport sqlalchemy as sa# revision identifiers, used by Alembic.revision = '27259876f63d'down_revision = Nonebranch_labels = Nonedepends_on = Nonedefupgrade():# ### commands auto generated by Alembic - please adjust! ### op.create_table('poll_question',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('question_text', sa.String(length=200), nullable=False),
    sa.Column('pub_date', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_poll_question_id'), 'poll_question', ['id'], unique=False)
    op.create_table('poll_choice',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('choice_text', sa.String(length=200), nullable=False),
    sa.Column('votes', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['question_id'], ['poll_question.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_poll_choice_id'), 'poll_choice', ['id'], unique=False)# ### end Alembic commands ###defdowngrade():# ### commands auto generated by Alembic - please adjust! ### op.drop_index(op.f('ix_poll_choice_id'), table_name='poll_choice')
    op.drop_table('poll_choice')
    op.drop_index(op.f('ix_poll_question_id'), table_name='poll_question')
    op.drop_table('poll_question')# ### end Alembic commands ###
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;Always check the migrations generated by Alembic to verify that everything is correct. You can find more information about what alembic can auto-generate &lt;a href="https://alembic.sqlalchemy.org/en/latest/autogenerate.html"&gt;here&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Everything checks out, now run &lt;code&gt;alembic upgrade head&lt;/code&gt; to apply the migration, then head over to pgAdmin, and you should see the new tables ! &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--k6fbk5Iw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636750848803/G0q1QnxsB.png%3Fauto%3Dcompress%26auto%3Dcompress%2Cformat%26format%3Dwebp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6fbk5Iw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636750848803/G0q1QnxsB.png%3Fauto%3Dcompress%26auto%3Dcompress%2Cformat%26format%3Dwebp" alt="tables" width="203" height="105"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Congrats ! You're models are ready ! &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;Thats all for today, hope you enjoyed it! Now that we've set up our relational database, in part 3 we'll see how to communicate with in it our path operations using SQLAlchemy session. &lt;/p&gt;

&lt;p&gt;In the meantime you reach out to me on &lt;a href="https://twitter.com/JiBRocher"&gt;Twitter&lt;/a&gt;. Questions and feedback are most welcomed ! &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://fastapi.tiangolo.com/tutorial/sql-databases/"&gt;FastAPI database docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.sqlalchemy.org/en/13/orm/extensions/declarative/api.html"&gt;SQLAlchemy docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://alembic.sqlalchemy.org/en/latest/"&gt;Alembic docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.docker.com/compose/"&gt;docker-compose&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>webdev</category>
      <category>tutorial</category>
      <category>backend</category>
      <category>python</category>
    </item>
  </channel>
</rss>
