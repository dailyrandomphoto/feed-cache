<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Best Black Friday Deals for Developers </title>
      <author>Ramakrishna Anand</author>
      <pubDate>Tue, 23 Nov 2021 16:09:07 +0000</pubDate>
      <link>https://dev.to/jranandj/best-black-friday-deals-for-developers-38g7</link>
      <guid>https://dev.to/jranandj/best-black-friday-deals-for-developers-38g7</guid>
      <description>&lt;h2&gt;
  &lt;a href="#creative-tim"&gt;
  &lt;/a&gt;
  Creative Tim
&lt;/h2&gt;

&lt;p&gt;Best premium templates and UI kits to save plenty of your development time.With over 39000+ Github stars, Review - 4.5/5 over 20,000 developers&lt;/p&gt;

&lt;p&gt;Get 80% off for 100 UI Kits and Dashboards based on various tech stacks  including Angular, Vue, React, etc… &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Discount&lt;/strong&gt;: 80% OFF&lt;br&gt;
&lt;strong&gt;Availability&lt;/strong&gt;: 22nd Nov - 3rd Dec 2021&lt;br&gt;
&lt;strong&gt;Coupon Code&lt;/strong&gt;: not needed&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.creative-tim.com/campaign"&gt;Website&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#vueschool"&gt;
  &lt;/a&gt;
  VueSchool
&lt;/h2&gt;

&lt;p&gt;At Vue School, you’ll learn Vue.js and modern, cutting-edge front-end technologies from core-team members and industry experts with premium tutorials and video courses.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#you-will-get"&gt;
  &lt;/a&gt;
  You will get
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;On top of over 33 courses, you get full access to the Vue 3 Masterclass.&lt;/li&gt;
&lt;li&gt;A comprehensive guide to developing modern Vue Single Page Applications.&lt;/li&gt;
&lt;li&gt;140+ lessons and 15 hours of content all wrapped up into one course.&lt;/li&gt;
&lt;li&gt;Real-World Knowledge of Vue.js by practically building a complete forum from scratch.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Discount&lt;/strong&gt;: 40% OFF&lt;br&gt;
&lt;strong&gt;Availability&lt;/strong&gt;: available now &lt;br&gt;
&lt;strong&gt;Coupon Code&lt;/strong&gt;: not needed&lt;/p&gt;

&lt;p&gt;&lt;a href="https://vueschool.io/sales/blackfriday"&gt;Website&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wrap-pixel"&gt;
  &lt;/a&gt;
  Wrap Pixel
&lt;/h2&gt;

&lt;p&gt;Get 25 Admin Dashboard Templates &amp;amp; Website Template in price of One Template&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#includes"&gt;
  &lt;/a&gt;
  Includes
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;11 Bootstrap Themes&lt;/li&gt;
&lt;li&gt;8 Angular Templates&lt;/li&gt;
&lt;li&gt;4 React Templates&lt;/li&gt;
&lt;li&gt;Vuejs Templates&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Discount&lt;/strong&gt;: 95% OFF&lt;br&gt;
&lt;strong&gt;Availability&lt;/strong&gt;:  16th Nov - 5th Dec 2021&lt;br&gt;
&lt;strong&gt;Coupon Code&lt;/strong&gt;: &lt;code&gt;BF2021&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you don’t want to buy a bundle, you can buy single product with 50% OFF&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.wrappixel.com/"&gt;Website&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#gridbox"&gt;
  &lt;/a&gt;
  Gridbox
&lt;/h2&gt;

&lt;p&gt;If you’re a developer working on multiple side projects or startup ideas then you should try Gridbox. A powerful low-code website builder made for web developers like you that allows you drag and drop and write custom HTML, CSS and JS code. &lt;/p&gt;

&lt;p&gt;40% Off - Yearly &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#you-will-get"&gt;
  &lt;/a&gt;
  You will get
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Unlimited Projects / Websites&lt;/li&gt;
&lt;li&gt;Private Projects&lt;/li&gt;
&lt;li&gt;Deploy to Netlify&lt;/li&gt;
&lt;li&gt;Access to PRO Bootstrap &amp;amp; Bulma components&lt;/li&gt;
&lt;li&gt;Access to PRO Templates &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Discount&lt;/strong&gt; - 40% OFF&lt;br&gt;
&lt;strong&gt;Availability&lt;/strong&gt; - Now -  Nov 30, 2021&lt;br&gt;
&lt;strong&gt;Coupon Code&lt;/strong&gt; - &lt;code&gt;FRIDAY40&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.gridbox.io/"&gt;Website&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bluehost"&gt;
  &lt;/a&gt;
  BlueHost
&lt;/h2&gt;

&lt;p&gt;Planning to set up a Wordpress site, then you can make use of Bluehost.&lt;/p&gt;

&lt;p&gt;Powering over 2 million websites, Bluehost offers the ultimate WordPress platform. Tuned for WordPress, we offer WordPress-centric dashboards and tools along with 1-click installation, a &lt;br&gt;
FREE domain name, email, FTP, and more. Easily scalable and backed by legendary 24/7 support by in-house WordPress experts.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Discount&lt;/strong&gt; - Up to  75% OFF Websites &amp;amp; Hosting&lt;br&gt;
&lt;strong&gt;Availability&lt;/strong&gt; - Now   &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.bluehost.com/track/inventorbit/blackfriday"&gt;Website&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#divjoy"&gt;
  &lt;/a&gt;
  DivJoy
&lt;/h2&gt;

&lt;p&gt;If you’re planning to build a MVP  or some cool project using React without writing much code then you need to try Divjoy - Powerful React codebase generator &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Discount&lt;/strong&gt; - Up to 60% Off&lt;br&gt;
&lt;strong&gt;Coupon Code&lt;/strong&gt; - None&lt;br&gt;
&lt;strong&gt;Availability&lt;/strong&gt; - 22 of 50 claimed (Price returns to $249 after all are claimed)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#you-will-get"&gt;
  &lt;/a&gt;
  You will get
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Lifetime access&lt;/li&gt;
&lt;li&gt;Unlimited Project&lt;/li&gt;
&lt;li&gt;Export High Quality React Code&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://divjoy.com/"&gt;Website&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>react</category>
      <category>vue</category>
    </item>
    <item>
      <title>Ultimate list of 100+ deals for Black Friday</title>
      <author>Andrew Malrowe</author>
      <pubDate>Tue, 23 Nov 2021 16:07:08 +0000</pubDate>
      <link>https://dev.to/andrewmalrowe/ultimate-list-of-100-deals-for-black-friday-38c4</link>
      <guid>https://dev.to/andrewmalrowe/ultimate-list-of-100-deals-for-black-friday-38c4</guid>
      <description>&lt;p&gt;This is the ultimate list of 100+ software deals available for Black Friday 2021. The list features different types of software - from development and testing to marketing, sales, and web design. The discounts vary from 10% to 70%. I tried to make the list as simple as possible to improve the readability.&lt;/p&gt;

&lt;p&gt;Some deals are offered without a coupon - you will find the offer by clicking the link or on a pricing page.&lt;/p&gt;

&lt;p&gt;In case there's something missing on the list - please let me know in the comments. I will continue adding the new deals. Happy shopping to everyone! 😉😉😉&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#blisk-50-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://blisk.io?utm_source=dev.to&amp;amp;utm_medium=article&amp;amp;utm_campaign=100-deals-for-black-friday"&gt;Blisk&lt;/a&gt; - 50% off
&lt;/h3&gt;

&lt;p&gt;Mobile testing, cross-device testing. Browser for developers, QAs, designers, marketers with hot reload, error notifications, screenshots, and intergration with command line.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ovNc1soJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.blisk.io/getting-started/v14/multi-device-set.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ovNc1soJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.blisk.io/getting-started/v14/multi-device-set.jpg" alt="Blisk app" width="880" height="491"&gt;&lt;/a&gt; &lt;code&gt;Coupon: BF2021&lt;/code&gt; expires on November 30.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#slides-30-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://designmodo.com/slides/"&gt;Slides&lt;/a&gt; - 30% off
&lt;/h3&gt;

&lt;p&gt;Create static websites with clean code.&lt;br&gt;
 &lt;code&gt;Coupon: BLACK&lt;/code&gt; expires on November 30.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#startup-30-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://designmodo.com/startup/"&gt;Startup&lt;/a&gt; - 30% off
&lt;/h3&gt;

&lt;p&gt;Build websites with visual editor.&lt;br&gt;
 &lt;code&gt;Coupon: BLACK&lt;/code&gt; expires on November 30.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#static-app-30-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://static.app/"&gt;Static App&lt;/a&gt; - 30% off
&lt;/h3&gt;

&lt;p&gt;Website hosting.&lt;br&gt;
 &lt;code&gt;Coupon: BLACK&lt;/code&gt; expires on November 30.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#pulsetic-30-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://pulsetic.com/"&gt;Pulsetic&lt;/a&gt; - 30% off
&lt;/h3&gt;

&lt;p&gt;Website monitoring tool.&lt;br&gt;
 &lt;code&gt;Coupon: BLACK&lt;/code&gt; expires on November 30.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#blocksy-by-creativethemes-40-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://creativethemes.com/blocksy/"&gt;Blocksy by CreativeThemes&lt;/a&gt; - 40% off
&lt;/h3&gt;

&lt;p&gt;Wordpress theme.&lt;br&gt;
 &lt;code&gt;Coupon: BFCM2021&lt;/code&gt; expires on December 3.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#postcards-30-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://designmodo.com/postcards/"&gt;Postcards&lt;/a&gt; - 30% off
&lt;/h3&gt;

&lt;p&gt;HTML email template builder.&lt;br&gt;
 &lt;code&gt;Coupon: BLACK&lt;/code&gt; expires on November 30.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#mailpost-30-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://mailpost.io/"&gt;Mailpost&lt;/a&gt; - 30% off
&lt;/h3&gt;

&lt;p&gt;Email marketing tool.&lt;br&gt;
 &lt;code&gt;Coupon: BLACK&lt;/code&gt; expires on November 30.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#siter-30-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://siter.io/"&gt;Siter&lt;/a&gt; - 30% off
&lt;/h3&gt;

&lt;p&gt;HTML email template builder.&lt;br&gt;
 &lt;code&gt;Coupon: BLACK&lt;/code&gt; expires on November 30.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#unspam-20-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://unspam.email/"&gt;Unspam&lt;/a&gt; - 20% off
&lt;/h3&gt;

&lt;p&gt;Email spam tester and heat map prediction.&lt;br&gt;
 &lt;code&gt;Coupon: BLACK&lt;/code&gt; expires on November 30.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#microanalytics-20-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://microanalytics.io/"&gt;Microanalytics&lt;/a&gt; - 20% off
&lt;/h3&gt;

&lt;p&gt;Website analytics.&lt;/p&gt;

&lt;p&gt;Discount expires on November 30.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#feeda-20-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://feeda.io/"&gt;Feeda&lt;/a&gt; - 20% off
&lt;/h3&gt;

&lt;p&gt;User feedback collection and management system.&lt;/p&gt;

&lt;p&gt;Discount expires on November 30.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#materio-dashboard-25-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://themeselection.com/products/materio-vuetify-vuejs-admin-template/"&gt;Materio Dashboard&lt;/a&gt; - 25% off
&lt;/h3&gt;

&lt;p&gt;Dashboard template.&lt;br&gt;
 &lt;code&gt;Coupon: BLACK25OFF&lt;/code&gt;.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#adobe-creative-cloud-design-app-up-to-40-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.adobe.com/creativecloud.html"&gt;Adobe Creative Cloud Design App&lt;/a&gt; - up to 40% off
&lt;/h3&gt;

&lt;p&gt;Collection of 20+ desktop and mobile apps and services for photography, design, video, web, UX.&lt;/p&gt;

&lt;p&gt;Discount.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#zyro-30-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://zyro.com/in"&gt;Zyro&lt;/a&gt; - 30% off
&lt;/h3&gt;

&lt;p&gt;Build websites with visual editor.&lt;br&gt;
 &lt;code&gt;Coupon: ZYROBF&lt;/code&gt; expires on December 7.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#vue-school-40-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://vueschool.io/sales/blackfriday?"&gt;Vue School&lt;/a&gt; - 40% off
&lt;/h3&gt;

&lt;p&gt;Learn VueJS, NuxtJS, Vuex and more.&lt;/p&gt;

&lt;p&gt;Discount expires on December 7.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#mockplus-up-to-72-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.mockplus.com/buy/black-friday?"&gt;Mockplus&lt;/a&gt; - up to 72% off
&lt;/h3&gt;

&lt;p&gt;Prototyping and mockups.&lt;/p&gt;

&lt;p&gt;Discount expires on December 15.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#udemy-up-to-85-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.udemy.com/"&gt;Udemy&lt;/a&gt; - up to 85% off
&lt;/h3&gt;

&lt;p&gt;Online courses, eLearning.&lt;/p&gt;

&lt;p&gt;Discount expires on November 26.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#beaver-25-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.wpbeaverbuilder.com/"&gt;Beaver&lt;/a&gt; - 25% off
&lt;/h3&gt;

&lt;p&gt;Drag-and-drop WordPress page builder.&lt;/p&gt;

&lt;p&gt;Discount expires on November 29.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#pluralsight-up-to-40-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.pluralsight.com/"&gt;Pluralsight&lt;/a&gt; - up to 40% off
&lt;/h3&gt;

&lt;p&gt;Online courses, eLearning.&lt;/p&gt;

&lt;p&gt;Discount expires on November 29.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#weblium-25-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://weblium.com/"&gt;Weblium&lt;/a&gt; - 25% off
&lt;/h3&gt;

&lt;p&gt;Build websites with visual editor.&lt;br&gt;
 &lt;code&gt;Coupon: WBF25OFF&lt;/code&gt; expires on November 30.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#codecademy-50-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.codecademy.com/"&gt;Codecademy&lt;/a&gt; - 50% off
&lt;/h3&gt;

&lt;p&gt;Online courses, eLearning.&lt;br&gt;
 &lt;code&gt;Coupon: CYBER21&lt;/code&gt;.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#datacamp-75-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.datacamp.com/promo/black-friday-sale-2021?%7B%7D"&gt;DataCamp&lt;/a&gt; - 75% off
&lt;/h3&gt;

&lt;p&gt;Online courses, eLearning.&lt;/p&gt;

&lt;p&gt;Discount expires on November 27.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#setapp-36-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://stacksocial.com/sales/setapp-1-year-subscription-2?rid=6084091"&gt;Setapp&lt;/a&gt; - 36% off
&lt;/h3&gt;

&lt;p&gt;Productivity application for macOS.&lt;br&gt;
 &lt;code&gt;Coupon: APPS30&lt;/code&gt;.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#shellhistory-50-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://loshadki.app/blog/2021-11-11-shellhistory-1.1.0/"&gt;ShellHistory&lt;/a&gt; - 50% off
&lt;/h3&gt;

&lt;p&gt;Backup, sync and organize your shell history.&lt;/p&gt;

&lt;p&gt;Discount.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#proxyman-30-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://proxyman.io/"&gt;Proxyman&lt;/a&gt; - 30% off
&lt;/h3&gt;

&lt;p&gt;Web Debugging Proxy.&lt;br&gt;
 &lt;code&gt;Coupon: PROXYMAN_BLACK_FRIDAY_2021&lt;/code&gt;.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#proxyman-33-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://apps.apple.com/us/app/svg-shaper-for-swiftui/id1566140414"&gt;Proxyman&lt;/a&gt; - 33% off
&lt;/h3&gt;

&lt;p&gt;SVG to SwiftUI Shapes/Views converter.&lt;/p&gt;

&lt;p&gt;Discount.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#script-editor-for-homematic-16-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://apps.apple.com/us/app/hmscripteditor/id1483239744"&gt;Script Editor for HomeMatic&lt;/a&gt; - 16% off
&lt;/h3&gt;

&lt;p&gt;Edit and Run HomeMatic Rega scripts.&lt;/p&gt;

&lt;p&gt;Discount.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#dropdmg-25-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://c-command.com/store/sale"&gt;DropDMG&lt;/a&gt; - 25% off
&lt;/h3&gt;

&lt;p&gt;Create macOS disk images .dmg files.&lt;br&gt;
 &lt;code&gt;Coupon: BLACKFRIDAY2021&lt;/code&gt;.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#sqlpro-studio-16-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.sqlprostudio.com/blackfriday.html"&gt;SQLPro Studio&lt;/a&gt; - 16% off
&lt;/h3&gt;

&lt;p&gt;Native database client for macOS and iOS.&lt;/p&gt;

&lt;p&gt;Discount.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#tower-50-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.git-tower.com/"&gt;Tower&lt;/a&gt; - 50% off
&lt;/h3&gt;

&lt;p&gt;Git client for macOS and Windows.&lt;/p&gt;

&lt;p&gt;Discount.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#blisk-50-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://blisk.io?utm_source=dev.to&amp;amp;utm_medium=article&amp;amp;utm_campaign=100-deals-for-black-friday"&gt;Blisk&lt;/a&gt; - 50% off
&lt;/h3&gt;

&lt;p&gt;Mobile testing, cross-device testing. Browser for developers, QAs, designers, marketers with hot reload, error notifications, screenshots, and intergration with command line.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ovNc1soJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.blisk.io/getting-started/v14/multi-device-set.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ovNc1soJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.blisk.io/getting-started/v14/multi-device-set.jpg" alt="Blisk app" width="880" height="491"&gt;&lt;/a&gt; &lt;code&gt;Coupon: BF2021&lt;/code&gt; expires on November 30.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#sidemirror-50-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://sidemirrorapp.com/"&gt;SideMirror&lt;/a&gt; - 50% off
&lt;/h3&gt;

&lt;p&gt;Tool for presenters.&lt;/p&gt;

&lt;p&gt;Discount expires on November 30.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#attendant-for-zoom-25-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://apps.apple.com/app/id1511771853"&gt;Attendant for Zoom&lt;/a&gt; - 25% off
&lt;/h3&gt;

&lt;p&gt;Manage Zoom meetings with automations.&lt;/p&gt;

&lt;p&gt;Discount expires on November 30.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#participant-for-zoom-20-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://apps.apple.com/app/id1532789823"&gt;Participant for Zoom&lt;/a&gt; - 20% off
&lt;/h3&gt;

&lt;p&gt;Zoom client with saved passcodes, native AirPlay, Apple Watch control.&lt;/p&gt;

&lt;p&gt;Discount expires on November 30.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#rezoom-33-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://apps.apple.com/app/id1562226532"&gt;Rezoom&lt;/a&gt; - 33% off
&lt;/h3&gt;

&lt;p&gt;Remote control for Zoom.&lt;/p&gt;

&lt;p&gt;Discount.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#mdx-30-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://mdx.one/"&gt;MDX&lt;/a&gt; - 30% off
&lt;/h3&gt;

&lt;p&gt;Notion to Blog in minutes.&lt;br&gt;
 &lt;code&gt;Coupon: BFCM2021&lt;/code&gt;.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#trickster-50-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.apparentsoft.com/trickster"&gt;Trickster&lt;/a&gt; - 50% off
&lt;/h3&gt;

&lt;p&gt;Recent Files, at your fingertips (macOS).&lt;/p&gt;

&lt;p&gt;Discount.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#postbox-email-20-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.postbox-inc.com/store/pricing"&gt;Postbox Email&lt;/a&gt; - 20% off
&lt;/h3&gt;

&lt;p&gt;The Power Email App.&lt;/p&gt;

&lt;p&gt;Discount.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#postbox-email-20-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.postbox-inc.com/store/pricing"&gt;Postbox Email&lt;/a&gt; - 20% off
&lt;/h3&gt;

&lt;p&gt;The Power Email App.&lt;/p&gt;

&lt;p&gt;Discount.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#affinity-designer-30-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://affinity.serif.com/en-us/designer"&gt;Affinity Designer&lt;/a&gt; - 30% off
&lt;/h3&gt;

&lt;p&gt;Concept art, print projects, logos, icons, UI designs, mock-ups.&lt;/p&gt;

&lt;p&gt;Discount.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#affinity-photo-30-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://affinity.serif.com/en-us/designer"&gt;Affinity Photo&lt;/a&gt; - 30% off
&lt;/h3&gt;

&lt;p&gt;Image editing software.&lt;/p&gt;

&lt;p&gt;Discount.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#affinity-publisher-30-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://affinity.serif.com/en-us/publisher"&gt;Affinity Publisher&lt;/a&gt; - 30% off
&lt;/h3&gt;

&lt;p&gt;Professional publishing software.&lt;/p&gt;

&lt;p&gt;Discount.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#imageframer-50-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://imageframer.net/"&gt;ImageFramer&lt;/a&gt; - 50% off
&lt;/h3&gt;

&lt;p&gt;Frame your images (macOS).&lt;/p&gt;

&lt;p&gt;Discount.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#nordvpn-72-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://nordvpn.com/de/pricing/"&gt;NordVPN&lt;/a&gt; - 72% off
&lt;/h3&gt;

&lt;p&gt;VPN software.&lt;/p&gt;

&lt;p&gt;Discount.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#appsumo-10-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://appsumo.com/"&gt;AppSumo&lt;/a&gt; - 10% off
&lt;/h3&gt;

&lt;p&gt;Marketplace for apps and digital tools.&lt;/p&gt;

&lt;p&gt;Discount.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#fill-50-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.fillhq.com/?deal=vladyslav95"&gt;Fill&lt;/a&gt; - 50% off
&lt;/h3&gt;

&lt;p&gt;E-signature software.&lt;br&gt;
 &lt;code&gt;Coupon: msplash30&lt;/code&gt;.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#pixpa-50-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.pixpa.com/?refcode=BLFPIXPA50"&gt;Pixpa&lt;/a&gt; - 50% off
&lt;/h3&gt;

&lt;p&gt;No-code platform for creators and small businesses.&lt;br&gt;
 &lt;code&gt;Coupon: BLFPIXPA50&lt;/code&gt; expires on December 4.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#turbologo-50-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://turbologo.com/?ref=empactpartners"&gt;Turbologo&lt;/a&gt; - 50% off
&lt;/h3&gt;

&lt;p&gt;Online Logo Maker.&lt;br&gt;
 &lt;code&gt;Coupon: black2021&lt;/code&gt; expires on November 29.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#elementor-50-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://elementor.com/pages/black-friday-2021/?gspk=MjcyNzc&amp;amp;gsxid=Fqc68AQi4yLV&amp;amp;utm_campaign=27277&amp;amp;utm_content=default&amp;amp;utm_medium=affiliate&amp;amp;utm_source=elementor"&gt;Elementor&lt;/a&gt; - 50% off
&lt;/h3&gt;

&lt;p&gt;WordPress web creation platform.&lt;/p&gt;

&lt;p&gt;Discount expires on November 30.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#templatemonster-up-to-55-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.templatemonster.com/?utm_campaign=blog_site_empactpartners&amp;amp;utm_source=empactpartners&amp;amp;utm_medium=referral&amp;amp;aff=empactpartners"&gt;TemplateMonster&lt;/a&gt; - up to 55% off
&lt;/h3&gt;

&lt;p&gt;Marketplace for website templates, plugins, and digital graphics.&lt;/p&gt;

&lt;p&gt;Discount expires on December 1.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#flexclip-up-to-54-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.flexclip.com/special-offer/blackfriday.html?sscid=b1k5_qa1gp"&gt;FlexClip&lt;/a&gt; - up to 54% off
&lt;/h3&gt;

&lt;p&gt;Video editing tool.&lt;/p&gt;

&lt;p&gt;Discount expires on December 6.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#vecteezy-25-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.vecteezy.com/signups/join-pro"&gt;Vecteezy&lt;/a&gt; - 25% off
&lt;/h3&gt;

&lt;p&gt;Vectors, stock photos, and videos.&lt;/p&gt;

&lt;p&gt;Discount expires on November 29.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#moqups-20-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://moqups.com/?gspk=dmxhZHlzbGF2c2h2ZXRzbnN6N3AxMjM0&amp;amp;gsxid=dqXI9svjNfiU&amp;amp;partnerstack_group=Partner&amp;amp;utm_source=Partnerstack"&gt;Moqups&lt;/a&gt; - 20% off
&lt;/h3&gt;

&lt;p&gt;Create mockups.&lt;br&gt;
 &lt;code&gt;Coupon: FALLDEAL&lt;/code&gt; expires on November 29.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#saleshandy-60-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.saleshandy.com/black-friday-deal/"&gt;SalesHandy&lt;/a&gt; - 60% off
&lt;/h3&gt;

&lt;p&gt;Automated sales email outreach tool.&lt;/p&gt;

&lt;p&gt;Discount expires on December 1.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#outfunnel-40-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://outfunnel.com/black-friday/?utm_source=marketsplash&amp;amp;utm_campaign=blackfriday2020"&gt;Outfunnel&lt;/a&gt; - 40% off
&lt;/h3&gt;

&lt;p&gt;Automated sales email outreach tool.&lt;/p&gt;

&lt;p&gt;Discount expires on December 1.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#engagebay-40-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.engagebay.com/"&gt;EngageBay&lt;/a&gt; - 40% off
&lt;/h3&gt;

&lt;p&gt;Marketing, sales and support platform.&lt;/p&gt;

&lt;p&gt;Discount expires on December 4.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#nethunt-crm-40-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://nethunt.com/?fpr=tvvul"&gt;NetHunt CRM&lt;/a&gt; - 40% off
&lt;/h3&gt;

&lt;p&gt;Gmail add-on for automation and sales management.&lt;br&gt;
 &lt;code&gt;Coupon: NHWEEK20&lt;/code&gt; expires on December 1.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#poptin-20-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://nethunt.com/?fpr=tvvul"&gt;Poptin&lt;/a&gt; - 20% off
&lt;/h3&gt;

&lt;p&gt;Customer engagement.&lt;/p&gt;

&lt;p&gt;Discount expires on November 27.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#replyio-30-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://reply.io/thanksgiving-pricing"&gt;Reply.io&lt;/a&gt; - 30% off
&lt;/h3&gt;

&lt;p&gt;Multi-channel sales engagement platform.&lt;/p&gt;

&lt;p&gt;Discount expires on November 30.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#snovio-30-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://snov.io/pricing?_get=empactpartners"&gt;Snov.io&lt;/a&gt; - 30% off
&lt;/h3&gt;

&lt;p&gt;Sales CRM.&lt;br&gt;
 &lt;code&gt;Coupon: BLACKFRIDAY&lt;/code&gt; expires on November 30.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#sendinblue-50-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.sendinblue.com/black-friday/"&gt;Sendinblue&lt;/a&gt; - 50% off
&lt;/h3&gt;

&lt;p&gt;Marketing platform with email and marketing automation.&lt;br&gt;
 &lt;code&gt;Coupon: 2021BLUEFRIDAY&lt;/code&gt; expires on November 30.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#emailoctopus-50-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://emailoctopus.com/black-friday"&gt;EmailOctopus&lt;/a&gt; - 50% off
&lt;/h3&gt;

&lt;p&gt;Marketing platform with email and marketing automation.&lt;/p&gt;

&lt;p&gt;Discount expires on November 29.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#activecampaign-25-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.activecampaign.com/?_r=ND3U68N3"&gt;ActiveCampaign&lt;/a&gt; - 25% off
&lt;/h3&gt;

&lt;p&gt;Marketing platform with email and marketing automation.&lt;/p&gt;

&lt;p&gt;Discount expires on November 29.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#ntask-29-for-all-plans"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.ntaskmanager.com/"&gt;nTask&lt;/a&gt; - $29 for all plans
&lt;/h3&gt;

&lt;p&gt;Project management app.&lt;/p&gt;

&lt;p&gt;Discount expires on November 29.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#sendpulse-35-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://sendpulse.ua/ru#6074598e15402/"&gt;SendPulse&lt;/a&gt; - 35% off
&lt;/h3&gt;

&lt;p&gt;Software tool for sending email communications.&lt;/p&gt;

&lt;p&gt;Discount.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#sender-35-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.sender.net/?ref=empactpartners"&gt;Sender&lt;/a&gt; - 35% off
&lt;/h3&gt;

&lt;p&gt;Branded emails with email automation.&lt;/p&gt;

&lt;p&gt;Discount.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#weekdone-35-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://weekdone.com/team-management-software"&gt;Weekdone&lt;/a&gt; - 35% off
&lt;/h3&gt;

&lt;p&gt;Branded emails with email automation.&lt;br&gt;
 &lt;code&gt;Coupon: BLKFD21&lt;/code&gt; expires on December 12.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#weekdone-35-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://weekdone.com/team-management-software"&gt;Weekdone&lt;/a&gt; - 35% off
&lt;/h3&gt;

&lt;p&gt;Team management software.&lt;br&gt;
 &lt;code&gt;Coupon: BLKFD21&lt;/code&gt; expires on December 12.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#salesblink-59-for-all-plans"&gt;
  &lt;/a&gt;
  &lt;a href="https://weekdone.com/team-management-software"&gt;SalesBlink&lt;/a&gt; - $59 for all plans
&lt;/h3&gt;

&lt;p&gt;Cold email automation and leads generation platform.&lt;/p&gt;

&lt;p&gt;Discount.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#salesflare-50-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://weekdone.com/team-management-software"&gt;Salesflare&lt;/a&gt; - 50% off
&lt;/h3&gt;

&lt;p&gt;CRM software for B2B.&lt;/p&gt;

&lt;p&gt;Discount expires on November 26.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#keap-50-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://keap.com/big-grit?group_name=group_10360&amp;amp;gspk=dmxhZHlzbGF2c2h2ZXRzbnN6N3AxMjM0&amp;amp;gsxid=3qo2qppfG1VG&amp;amp;partner_key=vladyslavshvetsnsz7p1234&amp;amp;rel=nofollow&amp;amp;utm_campaign=ps-link&amp;amp;utm_content=vladyslavshvetsnsz7p1234&amp;amp;utm_medium=referral&amp;amp;utm_source=partnerstack&amp;amp;utm_term=group_10360"&gt;Keap&lt;/a&gt; - 50% off
&lt;/h3&gt;

&lt;p&gt;CRM software for B2B.&lt;/p&gt;

&lt;p&gt;Discount expires on November 30.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#pdfliner-50-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://pdfliner.com/pricing"&gt;PDFLiner&lt;/a&gt; - 50% off
&lt;/h3&gt;

&lt;p&gt;Create and fill in PDFs online.&lt;/p&gt;

&lt;p&gt;Discount expires on November 29.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#memberpress-save-up-to-300"&gt;
  &lt;/a&gt;
  &lt;a href="https://memberpress.com/black-friday-2021/?utm_campaign=bf2021&amp;amp;utm_source=aff-empactpartners&amp;amp;utm_medium=aff-link"&gt;MemberPress&lt;/a&gt; - Save up to $300
&lt;/h3&gt;

&lt;p&gt;WordPress plugin for membership and subscription creation.&lt;br&gt;
 &lt;code&gt;Coupon: BF2021&lt;/code&gt; expires on November 29.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#visual-composer-50-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://visualcomposer.com/black-friday/"&gt;Visual Composer&lt;/a&gt; - 50% off
&lt;/h3&gt;

&lt;p&gt;WordPress website building tool.&lt;/p&gt;

&lt;p&gt;Discount expires on November 30.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#squarespace-10-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.squarespace.com/"&gt;Squarespace&lt;/a&gt; - 10% off
&lt;/h3&gt;

&lt;p&gt;Website creation and hosting services.&lt;br&gt;
 &lt;code&gt;Coupon: BLKFRI10&lt;/code&gt; expires on December 1.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#duda-20-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.duda.co/"&gt;Duda&lt;/a&gt; - 20% off
&lt;/h3&gt;

&lt;p&gt;Website builder.&lt;/p&gt;

&lt;p&gt;Discount expires on November 30.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#se-ranking-25-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://seranking.com/black-friday.html"&gt;SE Ranking&lt;/a&gt; - 25% off
&lt;/h3&gt;

&lt;p&gt;Marketing platform.&lt;br&gt;
 &lt;code&gt;Coupon: BLACKFRIDAY2021&lt;/code&gt; expires on December 6.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#semrush-960-on-a-year-guru-plan"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.semrush.com/"&gt;SEMrush&lt;/a&gt; - $960 on a year Guru plan
&lt;/h3&gt;

&lt;p&gt;Online marketing software.&lt;/p&gt;

&lt;p&gt;Discount expires on November 30.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#social-champ-30-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.socialchamp.io/offers/"&gt;Social Champ&lt;/a&gt; - 30% off
&lt;/h3&gt;

&lt;p&gt;Social media marketing tool.&lt;br&gt;
 &lt;code&gt;Coupon: BFCM2021&lt;/code&gt; expires on December 2.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#contentstudio-50-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://contentstudio.io/special-offer/"&gt;ContentStudio&lt;/a&gt; - 50% off
&lt;/h3&gt;

&lt;p&gt;Content marketing and social media management tool.&lt;/p&gt;

&lt;p&gt;Discount expires on December 25.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#brand24-50-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://brand24.com/"&gt;Brand24&lt;/a&gt; - 50% off
&lt;/h3&gt;

&lt;p&gt;Track keywords, hashtag performance, and customer reach.&lt;/p&gt;

&lt;p&gt;Discount expires on November 29.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#socialpilot-25-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.socialpilot.co/claim-your-deal"&gt;SocialPilot&lt;/a&gt; - 25% off
&lt;/h3&gt;

&lt;p&gt;Social media marketing tool.&lt;br&gt;
 &lt;code&gt;Coupon: Deal25Off&lt;/code&gt; expires on November 26.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#napoleoncat-50-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://napoleoncat.com/"&gt;NapoleonCat&lt;/a&gt; - 50% off
&lt;/h3&gt;

&lt;p&gt;Social media management tool.&lt;/p&gt;

&lt;p&gt;Discount expires on November 30.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#pretty-links-up-to-70-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://prettylinks.com/black-friday-2021/"&gt;Pretty Links&lt;/a&gt; - Up To $70 Off
&lt;/h3&gt;

&lt;p&gt;WordPress plugin for the automation of affiliate linking.&lt;br&gt;
 &lt;code&gt;Coupon: BF2021&lt;/code&gt; expires on December 3.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#easy-affiliate-50-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://easyaffiliate.com/black-friday-2021/"&gt;Easy Affiliate&lt;/a&gt; - 50% off
&lt;/h3&gt;

&lt;p&gt;WordPress plugin for the creation of a self-hosted affiliate program.&lt;br&gt;
 &lt;code&gt;Coupon: BF2021&lt;/code&gt; expires on December 3.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#thirstyaffiliates-50-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://thirstyaffiliates.com/pricing"&gt;ThirstyAffiliates&lt;/a&gt; - 50% off
&lt;/h3&gt;

&lt;p&gt;Affiliate link cloaking plugin for WordPress.&lt;br&gt;
 &lt;code&gt;Coupon: BF2021&lt;/code&gt; expires on December 3.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#wpforms-65-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://wpforms.com/black-friday/"&gt;WPForms&lt;/a&gt; - 65% off
&lt;/h3&gt;

&lt;p&gt;Drag &amp;amp; Drop WordPress Form Builder.&lt;/p&gt;

&lt;p&gt;Discount expires on November 26.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#monsterinsights-65-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://dev.tolink"&gt;MonsterInsights&lt;/a&gt; - 65% off
&lt;/h3&gt;

&lt;p&gt;Google Analytics plugin for WordPress.&lt;/p&gt;

&lt;p&gt;Discount expires on November 26.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#seedprod-65-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.seedprod.com/black-friday/"&gt;SeedProd&lt;/a&gt; - 65% off
&lt;/h3&gt;

&lt;p&gt;Landing Page Builder plugin for WordPress.&lt;/p&gt;

&lt;p&gt;Discount expires on November 26.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#wp-mail-smtp-65-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://wpmailsmtp.com/black-friday/"&gt;WP Mail SMTP&lt;/a&gt; - 65% off
&lt;/h3&gt;

&lt;p&gt;WordPress plugin for easy email delivery.&lt;/p&gt;

&lt;p&gt;Discount expires on November 26.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#affiliatewp-up-to-360"&gt;
  &lt;/a&gt;
  &lt;a href="https://affiliatewp.com/pricing/"&gt;AffiliateWP&lt;/a&gt; - Up To $360
&lt;/h3&gt;

&lt;p&gt;Affiliate program management plugin for WordPress.&lt;/p&gt;

&lt;p&gt;Discount expires on November 26.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#rafflepress-30-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://rafflepress.com/pricing/"&gt;RafflePress&lt;/a&gt; - 30% off
&lt;/h3&gt;

&lt;p&gt;WordPress plugin for giveaways and competitions.&lt;/p&gt;

&lt;p&gt;Discount expires on November 26.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#smashballoon-65-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://smashballoon.com/black-friday/"&gt;SmashBalloon&lt;/a&gt; - 65% off
&lt;/h3&gt;

&lt;p&gt;Social Media Feed Plugins for WordPress.&lt;/p&gt;

&lt;p&gt;Discount expires on November 26.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#all-in-one-seo-65-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://aioseo.com/black-friday/"&gt;All In One SEO&lt;/a&gt; - 65% off
&lt;/h3&gt;

&lt;p&gt;SEO Plugin and Toolkit for WordPress.&lt;/p&gt;

&lt;p&gt;Discount expires on November 26.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#exactmetrics-50-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.exactmetrics.com/pricing/"&gt;ExactMetrics&lt;/a&gt; - 50% off
&lt;/h3&gt;

&lt;p&gt;Analytics plugin for WordPress.&lt;/p&gt;

&lt;p&gt;Discount expires on November 26.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#optinmonster-60-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://optinmonster.com/black-friday/"&gt;OptinMonster&lt;/a&gt; - 60% off
&lt;/h3&gt;

&lt;p&gt;Lead generation software.&lt;/p&gt;

&lt;p&gt;Discount expires on November 26.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#pushengage-50-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.pushengage.com/pricing/"&gt;PushEngage&lt;/a&gt; - 50% off
&lt;/h3&gt;

&lt;p&gt;Push notification plugin for WordPress.&lt;/p&gt;

&lt;p&gt;Discount expires on November 26.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#trustpulse-60-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://trustpulse.com/pricing/"&gt;TrustPulse &lt;/a&gt; - 60% off
&lt;/h3&gt;

&lt;p&gt;Social proof plugin.&lt;/p&gt;

&lt;p&gt;Discount expires on November 26.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#blisk-50-off"&gt;
  &lt;/a&gt;
  &lt;a href="https://blisk.io?utm_source=dev.to&amp;amp;utm_medium=article&amp;amp;utm_campaign=100-deals-for-black-friday"&gt;Blisk&lt;/a&gt; - 50% off
&lt;/h3&gt;

&lt;p&gt;Mobile testing, cross-device testing. Browser for developers, QAs, designers, marketers with hot reload, error notifications, screenshots, and intergration with command line.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ovNc1soJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.blisk.io/getting-started/v14/multi-device-set.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ovNc1soJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.blisk.io/getting-started/v14/multi-device-set.jpg" alt="Blisk app" width="880" height="491"&gt;&lt;/a&gt; &lt;code&gt;Coupon: BF2021&lt;/code&gt; expires on November 30.&lt;/p&gt;




</description>
    </item>
    <item>
      <title>Hashcode and Equals Debugging, Performance</title>
      <author>Shai Almog</author>
      <pubDate>Tue, 23 Nov 2021 16:04:47 +0000</pubDate>
      <link>https://dev.to/codenameone/hashcode-and-equals-debugging-performance-31j9</link>
      <guid>https://dev.to/codenameone/hashcode-and-equals-debugging-performance-31j9</guid>
      <description>&lt;p&gt;A few weeks ago I ran into  &lt;a href="https://www.reddit.com/r/java/comments/qi8yu8/hint_to_myself_and_other_poor_souls_dont_use/"&gt;this story on reddit&lt;/a&gt;  that discusses the problem with using the URL class as a key in a Map. This boils down to a remarkably slow implementation of the hashcode() method in java.net.URL which makes this class unusable in such situations. Unfortunately, this is a part of the Java API specification and is no longer fixable without breaking backwards compatibility. &lt;/p&gt;

&lt;p&gt;What we can do is understand the problem with equals and hashcode. How can we avoid such problems in the future?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-the-problem-with-urls-hashcode-and-equals"&gt;
  &lt;/a&gt;
  What’s the problem with URLs Hashcode and Equals?
&lt;/h2&gt;

&lt;p&gt;To understand this, let’s ‌look at the JavaDoc of hashcode and equals:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Compares this URL for equality with another object.&lt;/p&gt;

&lt;p&gt;If the given object is not a URL then this method immediately returns false.&lt;/p&gt;

&lt;p&gt;Two URL objects are equal if they have the same protocol, &lt;strong&gt;reference equivalent hosts&lt;/strong&gt;, have the same port number on the host, and the same file and fragment of the file.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Two hosts are considered equivalent if both host names can be resolved into the same IP addresses;&lt;/strong&gt; else if either host name can't be resolved, the host names must be equal without regard to case; or both host names equal to null.&lt;/p&gt;

&lt;p&gt;Since hosts comparison requires name resolution, this operation is a blocking operation.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Since hosts comparison requires name resolution, this operation is a blocking operation.”&lt;/p&gt;

&lt;p&gt;This might be unclear. Let’s clarify it with a simple block of code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="no"&gt;URL&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"http://localhost/"&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;equals&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="no"&gt;URL&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"http://127.0.0.1/"&lt;/span&gt;&lt;span class="o"&gt;)));&lt;/span&gt;
&lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="no"&gt;URL&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"http://localhost/"&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;hashCode&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="no"&gt;URL&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"http://127.0.0.1/"&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;hashCode&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Will print out:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;true
true
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This might be pretty simple with localhost, but if we compare domains and the Strings aren’t identical (which they often aren’t) we need to do a DNS lookup. We need to do that just for a hashcode() call!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-quick-workaround"&gt;
  &lt;/a&gt;
  A Quick Workaround
&lt;/h2&gt;

&lt;p&gt;A quick workaround for this case is to avoid URL. Sun deeply embedded the class in the original JVM code, but we can use URI for most purposes. &lt;/p&gt;

&lt;p&gt;E.g. if we change the hashcode and equals calls from above to use URI instead of URL we will get this result:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="no"&gt;URI&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"http://localhost/"&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;equals&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="no"&gt;URI&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"http://127.0.0.1/"&lt;/span&gt;&lt;span class="o"&gt;)));&lt;/span&gt;
&lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="no"&gt;URI&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"http://localhost/"&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;hashCode&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="no"&gt;URI&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"http://127.0.0.1/"&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;hashCode&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We will get false for both statements. While this might be problematic for some use cases, it’s a vast difference in performance.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-bigger-pitfall"&gt;
  &lt;/a&gt;
  A Bigger Pitfall
&lt;/h2&gt;

&lt;p&gt;If all we ever used as a map key were Strings we’d be fine. This sort of bug can hit us in every place where we  use these methods:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Sets&lt;/li&gt;
&lt;li&gt;Maps&lt;/li&gt;
&lt;li&gt;Storage&lt;/li&gt;
&lt;li&gt;Business logic&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;But it gets deeper. When writing our own classes with our own hashcode and equals logic we can often fall prey to bad code. A small performance penalty on a hashcode method or an overly simplistic version can cause major performance penalties that would be very hard to track.&lt;/p&gt;

&lt;p&gt;E.g. A stream operation that takes longer because the hashcode method is slow or incorrect can represent a long-term problem.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-best-hashcode-implementation"&gt;
  &lt;/a&gt;
  The Best Hashcode Implementation
&lt;/h3&gt;

&lt;p&gt;To understand the best hashcode and equals method, we first need to understand some mediocre code. Now I won’t show horrible or old code. This is good code, but it isn’t the best:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;hashCode&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nc"&gt;Objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;hash&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;core&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;setting&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sets&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This code might seem OK at first, but is it?&lt;br&gt;
Here’s the ideal code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;hashCode&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is fast, 100% unique and correct. There’s literally no reason to do anything beyond that. There’s one exception of an id which is an object. In that case we might want to do Objects.hashCode(id) instead which will also work for null, etc.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#hashcode-isnt-equals"&gt;
  &lt;/a&gt;
  Hashcode isn’t Equals
&lt;/h3&gt;

&lt;p&gt;Well, obviously… This is one of the most important things you need to keep in mind when writing a hashcode implementation. This method must perform fast and must be consistent with equals for the false case. It will not be correct for the case of true.&lt;/p&gt;

&lt;p&gt;To clarify, hashcode must always obey this law:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="k"&gt;assert&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;obj1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;hashCode&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;obj2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;hashCode&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;obj1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;equals&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;obj2&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That means if hashcode results are different, the objects must be different and must return false from equals. But the inverse isn’t the case:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;obj1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;hashCode&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;obj2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;hashCode&lt;/span&gt;&lt;span class="o"&gt;())&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;obj1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;equals&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;obj2&lt;/span&gt;&lt;span class="o"&gt;))&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
       &lt;span class="c1"&gt;// this can be false...&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The value here is in performance. A hashcode method should perform much faster than equals. It should let us skip the potentially expensive equals calculation and index elements quickly. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#special-case-with-jpa"&gt;
  &lt;/a&gt;
  Special Case with JPA
&lt;/h3&gt;

&lt;p&gt;JPA developers often just use a hardcoded value for hashcode or use the Class object to generate the hashCode(). This seems weird until you think about this.&lt;/p&gt;

&lt;p&gt;If you let the database generate the ID for you, you would save an object and it would no longer be equal to the source object… One solution is to use the &lt;code&gt;@NaturalId&lt;/code&gt; annotation and data types. But that would require changing the data model. Unfortunately, there’s no decent workaround for the entity classes. &lt;/p&gt;

&lt;p&gt;In fact, I would theorize that a lot of the problems JPA developers experienced with Lombok are because it generates hashcode and equals methods for you. Those could be problematic.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#is-this-a-blog-about-debugging"&gt;
  &lt;/a&gt;
  Is this a Blog about Debugging?
&lt;/h2&gt;

&lt;p&gt;Sorry about that long setup, but yes it damn well is. So I needed all of that preface to talk about this in a more generic sense of debugging. Notice that this is true for other languages that use similar paradigms for common interfaces.&lt;/p&gt;

&lt;p&gt;This blog started with a performance issue and I would like to discuss that aspect in the lens of debugging. In many profilers, the overhead of a hashcode method would be almost unnoticeable. But because it’s invoked so often and has wide-reaching implications, it’s possible you ultimately feel the repercussions and cast the blame elsewhere.&lt;/p&gt;

&lt;p&gt;The knee jerk reaction would be to implement a “dummy” hashcode method and see the resulting performance difference. Just return a hard coded number instead of a valid number.&lt;/p&gt;

&lt;p&gt;This is valuable for some cases and might even solve problems like the one mentioned at the top where the hashcode method performs badly. However, it won’t help with maps. If the hashcode would return identical values, using it as a key in a map would effectively disable all the performance benefits that hashcode can offer. &lt;/p&gt;

&lt;p&gt;How do we know if a hashcode method is good?&lt;/p&gt;

&lt;p&gt;Well… We can use the debugger to figure it out. Just inspect your map and look at the distribution of the objects between the various buckets to get a sense of the real world value of the hashcode method.&lt;/p&gt;

&lt;p&gt;If you have code verification process on commit I would strongly recommend defining a rule on the complexity level of a hashcode method. This should be set very low to prevent slow code from seeping in.&lt;/p&gt;

&lt;p&gt;But the problem is nesting. E.g. think about code like the one we discussed before:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;hashCode&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nc"&gt;Objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;hash&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;core&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;setting&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sets&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It’s short and simple. Yet, performance of this code can be all over the place. The method would invoke the hashcode method of all internal objects. These methods can be far worse in terms of performance. We need to be vigilant about this. Even for JDK classes such as URL which, as we discussed earlier, is problematic.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  TL;DR
&lt;/h2&gt;

&lt;p&gt;We often auto-generate hashcode and equals methods. The IDEs are normally pretty good at that; they offer us an option to pick the fields we wish to compare. Unfortunately, they then apply both sets of fields to hashcode and equals. &lt;/p&gt;

&lt;p&gt;Sometimes, this doesn’t matter. Often we don’t “see” the places where it does matter since the methods are too small to make a dent in the profiler. But they have wide-ranging implications we should optimize for. &lt;/p&gt;

&lt;p&gt;Debugging lets us inspect the map and look at bucket distribution so we can get a sense of how well our hashcode method is performing and whether we should tune it to get more consistent results from maps and similar APIs.&lt;/p&gt;

</description>
      <category>java</category>
      <category>performance</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Build Your Own Responsive Developer Portfolio Website (App) with Flutter</title>
      <author>Pradeep Tintali</author>
      <pubDate>Tue, 23 Nov 2021 15:54:00 +0000</pubDate>
      <link>https://dev.to/pktintali/build-your-own-responsive-developer-portfolio-website-app-with-flutter-k70</link>
      <guid>https://dev.to/pktintali/build-your-own-responsive-developer-portfolio-website-app-with-flutter-k70</guid>
      <description>&lt;p&gt;&lt;em&gt;The best way of learning something is by doing.&lt;/em&gt;&lt;br&gt;
And if you have to build your own developer portfolio then why not build it by yourself!&lt;/p&gt;

&lt;p&gt;In this tutorial I'll tell you step by step how to build responsive developer portfolio website/app with flutter. By following this tutorial you will learn - &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;How to build responsive UI with flutter.&lt;/li&gt;
&lt;li&gt;How to use &lt;code&gt;ScrollController&lt;/code&gt; and scroll programmatically.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#table-of-content"&gt;
  &lt;/a&gt;
  Table of Content
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#What-we'll-build"&gt;What we'll build&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Live-Demo"&gt;Live Demo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Video-Explanation"&gt;Video Explanation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Creating-Project"&gt;Creating Project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Initial-Setup"&gt;Initial Setup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Directory-Setup"&gt;Directory Setup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Creating-HomePage"&gt;Creating HomePage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Creating-The-Navbar-Section"&gt;Creating The Navbar Section&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Creating-endDrawer"&gt;Creating endDrawer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Creating-Components-of-HomePage"&gt;Creating Components of HomePage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Creating-Project-Model"&gt;Creating Project Model&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Source-Code"&gt;Source Code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#what-well-build"&gt;
  &lt;/a&gt;
  What we'll build &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;We are going to build a portfolio app with mainly 4 sections &lt;code&gt;about&lt;/code&gt;, &lt;code&gt;skills&lt;/code&gt;, &lt;code&gt;projects&lt;/code&gt; and &lt;code&gt;contact&lt;/code&gt;. For making our app responsive we'll use media query.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#live-demo"&gt;
  &lt;/a&gt;
  Live Demo &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;If you are so excited to see what we'll build like  me, you can see the live demo of app &lt;a href="https://sad-blackwell-98fd2c.netlify.app/"&gt;Here&lt;/a&gt;. This demo of web version is deployed using html renderer.&lt;br&gt;
&lt;a href="https://sad-blackwell-98fd2c.netlify.app"&gt;Live Demo&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#video-explanation"&gt;
  &lt;/a&gt;
  Video Explanation &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;At the time of writing this post. It was getting too long so I added this video explanation section.&lt;br&gt;
If you want to watch video tutorial of this post you can watch it from here.&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=I_pb-WBEJRA"&gt;Video Tutorial&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#creating-project"&gt;
  &lt;/a&gt;
  Creating Project &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Supposing flutter is installed and initial setup is done in your system.&lt;br&gt;
If you have't installed then you can get it from &lt;a href="https://docs.flutter.dev/get-started/install"&gt;here&lt;/a&gt;&lt;br&gt;
Create a new flutter project by using command palette in VS Code or from android studio or by typing the following command in terminal&lt;br&gt;
&lt;code&gt;flutter create &amp;lt;YOUR PROJECT NAME&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#initial-setup"&gt;
  &lt;/a&gt;
  Initial Setup &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Now careate a new folder in your project &lt;code&gt;assets&lt;/code&gt;&lt;br&gt;
Inside the &lt;code&gt;assets&lt;/code&gt; folder create a subfolder &lt;code&gt;images&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Add an image that you want to show on your portfolio, in your images folder.&lt;br&gt;
Your image should be placed like this&lt;br&gt;
assets/images/&lt;/p&gt;

&lt;p&gt;Now load images in &lt;code&gt;pubspec.yaml&lt;/code&gt; file&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;assets&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;assets/images/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Clear everything from &lt;code&gt;main.dart&lt;/code&gt; file and write the following code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'package:flutter/material.dart'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'package:portfolio_app/pages/home_page.dart'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;runApp&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="n"&gt;MyApp&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MyApp&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;StatelessWidget&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="n"&gt;MyApp&lt;/span&gt;&lt;span class="o"&gt;({&lt;/span&gt;&lt;span class="n"&gt;Key&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;})&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;key:&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

  &lt;span class="nd"&gt;@override&lt;/span&gt;
  &lt;span class="n"&gt;Widget&lt;/span&gt; &lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BuildContext&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;MaterialApp&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
      &lt;span class="nl"&gt;debugShowCheckedModeBanner:&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
      &lt;span class="nl"&gt;home:&lt;/span&gt; &lt;span class="n"&gt;HomePage&lt;/span&gt;&lt;span class="o"&gt;(),&lt;/span&gt;
    &lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#directory-setup"&gt;
  &lt;/a&gt;
  Directory Setup &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Inside the &lt;code&gt;lib&lt;/code&gt; folder create 3 new directory named &lt;code&gt;components&lt;/code&gt;, &lt;code&gt;models&lt;/code&gt;, &lt;code&gt;pages&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="s"&gt;-lib&lt;/span&gt;
   &lt;span class="s"&gt;- components&lt;/span&gt;
   &lt;span class="s"&gt;- models&lt;/span&gt;
   &lt;span class="s"&gt;- pages&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#creating-homepage"&gt;
  &lt;/a&gt;
  Creating HomePage &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;As you can see in the above code we have used &lt;code&gt;HomePage&lt;/code&gt; in the home of &lt;code&gt;MaterialApp&lt;/code&gt; lets create it.&lt;br&gt;
Inside the pages directory create a new file &lt;code&gt;homepage.dart&lt;/code&gt;.&lt;br&gt;
Create a stateless widget HomePage in it like below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'package:flutter/material.dart'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;HomePage&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;StatelessWidget&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;HomePage&lt;/span&gt;&lt;span class="o"&gt;({&lt;/span&gt;&lt;span class="n"&gt;Key&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;})&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;key:&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

  &lt;span class="nd"&gt;@override&lt;/span&gt;
  &lt;span class="n"&gt;Widget&lt;/span&gt; &lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BuildContext&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Scaffold&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
      &lt;span class="c1"&gt;//Add Key&lt;/span&gt;
      &lt;span class="nl"&gt;appBar:&lt;/span&gt; &lt;span class="n"&gt;AppBar&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
        &lt;span class="nl"&gt;title:&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
          &lt;span class="s"&gt;'JANE DOE'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
          &lt;span class="nl"&gt;style:&lt;/span&gt; &lt;span class="n"&gt;TextStyle&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
            &lt;span class="nl"&gt;fontSize:&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
            &lt;span class="nl"&gt;color:&lt;/span&gt; &lt;span class="n"&gt;Color&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mh"&gt;0xFF4756DF&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
            &lt;span class="nl"&gt;fontWeight:&lt;/span&gt; &lt;span class="n"&gt;FontWeight&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;bold&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
          &lt;span class="o"&gt;),&lt;/span&gt;
        &lt;span class="o"&gt;),&lt;/span&gt;
        &lt;span class="nl"&gt;backgroundColor:&lt;/span&gt; &lt;span class="n"&gt;Colors&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;white&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
        &lt;span class="nl"&gt;elevation:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
      &lt;span class="o"&gt;),&lt;/span&gt;
      &lt;span class="nl"&gt;body:&lt;/span&gt; &lt;span class="n"&gt;SafeArea&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
        &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="n"&gt;Stack&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
          &lt;span class="nl"&gt;children:&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;
            &lt;span class="n"&gt;SingleChildScrollView&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
            &lt;span class="c1"&gt;//Add Scroll Controller&lt;/span&gt;
              &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="n"&gt;Column&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
                &lt;span class="nl"&gt;children:&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;

                &lt;span class="o"&gt;],&lt;/span&gt;
              &lt;span class="o"&gt;),&lt;/span&gt;
            &lt;span class="o"&gt;),&lt;/span&gt;
          &lt;span class="o"&gt;],&lt;/span&gt;
        &lt;span class="o"&gt;),&lt;/span&gt;
      &lt;span class="o"&gt;),&lt;/span&gt;
    &lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we need to create a &lt;code&gt;GlobalKey&lt;/code&gt; and a &lt;code&gt;ScrollController&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;GlobalKey&lt;/strong&gt; - for opening and closing the end drawer that we'll use later.&lt;br&gt;
&lt;strong&gt;ScrollController&lt;/strong&gt; - for scrolling to a specific section of page.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;ScrollController&lt;/span&gt; &lt;span class="n"&gt;myScrollController&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ScrollController&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;GlobalKey&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ScaffoldState&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;_scaffoldKey&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;GlobalKey&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ScaffoldState&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;add the &lt;code&gt;_scaffoldKey&lt;/code&gt; in the Scaffold widget and &lt;code&gt;myScrollController&lt;/code&gt; in the SingleChildScrollView.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-the-navbar-section"&gt;
  &lt;/a&gt;
  Creating The Navbar Section &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Because we have to create a responsive UI we'll show the navbar inside the &lt;code&gt;endDrawer&lt;/code&gt; of Scaffold on small screen and inside the &lt;code&gt;actions&lt;/code&gt; of AppBar on large screen.&lt;/p&gt;

&lt;p&gt;Inside the components directory caret a new file &lt;code&gt;home_page_actions.dart&lt;/code&gt; and write the following code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'package:flutter/material.dart'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'package:portfolio_app/utils.dart'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;HomePageActions&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;StatelessWidget&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;ScrollController&lt;/span&gt; &lt;span class="n"&gt;sc&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="n"&gt;HomePageActions&lt;/span&gt;&lt;span class="o"&gt;({&lt;/span&gt;&lt;span class="n"&gt;Key&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;required&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;sc&lt;/span&gt;&lt;span class="o"&gt;})&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;key:&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

  &lt;span class="nd"&gt;@override&lt;/span&gt;
  &lt;span class="n"&gt;Widget&lt;/span&gt; &lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BuildContext&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;bool&lt;/span&gt; &lt;span class="n"&gt;isMobile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Utils&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;isMobile&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;isMobile&lt;/span&gt;
        &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="n"&gt;Column&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
            &lt;span class="nl"&gt;children:&lt;/span&gt; &lt;span class="n"&gt;getWidgets&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sc&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nl"&gt;isMobile:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
          &lt;span class="o"&gt;)&lt;/span&gt;
        &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Row&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
            &lt;span class="nl"&gt;children:&lt;/span&gt; &lt;span class="n"&gt;getWidgets&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sc&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
          &lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;

  &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Widget&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;getWidgets&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ScrollController&lt;/span&gt; &lt;span class="n"&gt;sc&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;BuildContext&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
      &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="kt"&gt;bool&lt;/span&gt; &lt;span class="n"&gt;isMobile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="o"&gt;})&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;scrollDur&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;isMobile&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="mi"&gt;800&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;
      &lt;span class="n"&gt;Padding&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
        &lt;span class="nl"&gt;padding:&lt;/span&gt;
            &lt;span class="n"&gt;EdgeInsets&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;symmetric&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;horizontal:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nl"&gt;vertical:&lt;/span&gt; &lt;span class="n"&gt;isMobile&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
        &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="n"&gt;TextButton&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
          &lt;span class="nl"&gt;onPressed:&lt;/span&gt; &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;isMobile&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="n"&gt;Navigator&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;pop&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;sc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;animateTo&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
              &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
              &lt;span class="nl"&gt;duration:&lt;/span&gt; &lt;span class="n"&gt;Duration&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;milliseconds:&lt;/span&gt; &lt;span class="n"&gt;scrollDur&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
              &lt;span class="nl"&gt;curve:&lt;/span&gt; &lt;span class="n"&gt;Curves&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;easeIn&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
            &lt;span class="o"&gt;);&lt;/span&gt;
          &lt;span class="o"&gt;},&lt;/span&gt;
          &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
            &lt;span class="s"&gt;'About'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
            &lt;span class="nl"&gt;style:&lt;/span&gt; &lt;span class="n"&gt;TextStyle&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
              &lt;span class="nl"&gt;fontSize:&lt;/span&gt; &lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
              &lt;span class="nl"&gt;color:&lt;/span&gt; &lt;span class="n"&gt;Color&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mh"&gt;0xFf4756DF&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
              &lt;span class="nl"&gt;fontWeight:&lt;/span&gt; &lt;span class="n"&gt;FontWeight&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;w600&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
            &lt;span class="o"&gt;),&lt;/span&gt;
          &lt;span class="o"&gt;),&lt;/span&gt;
        &lt;span class="o"&gt;),&lt;/span&gt;
      &lt;span class="o"&gt;),&lt;/span&gt;
      &lt;span class="n"&gt;Padding&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
        &lt;span class="nl"&gt;padding:&lt;/span&gt;
            &lt;span class="n"&gt;EdgeInsets&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;symmetric&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;horizontal:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nl"&gt;vertical:&lt;/span&gt; &lt;span class="n"&gt;isMobile&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
        &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="n"&gt;TextButton&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
          &lt;span class="nl"&gt;onPressed:&lt;/span&gt; &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;isMobile&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="n"&gt;Navigator&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;pop&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;sc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;animateTo&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
              &lt;span class="n"&gt;isMobile&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="mi"&gt;1100&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;800&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
              &lt;span class="nl"&gt;duration:&lt;/span&gt; &lt;span class="n"&gt;Duration&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;milliseconds:&lt;/span&gt; &lt;span class="n"&gt;scrollDur&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
              &lt;span class="nl"&gt;curve:&lt;/span&gt; &lt;span class="n"&gt;Curves&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;easeIn&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
            &lt;span class="o"&gt;);&lt;/span&gt;
          &lt;span class="o"&gt;},&lt;/span&gt;
          &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
            &lt;span class="s"&gt;'Skills'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
            &lt;span class="nl"&gt;style:&lt;/span&gt; &lt;span class="n"&gt;TextStyle&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
              &lt;span class="nl"&gt;fontSize:&lt;/span&gt; &lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
              &lt;span class="nl"&gt;color:&lt;/span&gt; &lt;span class="n"&gt;Color&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mh"&gt;0xFf4756DF&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
              &lt;span class="nl"&gt;fontWeight:&lt;/span&gt; &lt;span class="n"&gt;FontWeight&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;w600&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
            &lt;span class="o"&gt;),&lt;/span&gt;
          &lt;span class="o"&gt;),&lt;/span&gt;
        &lt;span class="o"&gt;),&lt;/span&gt;
      &lt;span class="o"&gt;),&lt;/span&gt;
      &lt;span class="n"&gt;Padding&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
        &lt;span class="nl"&gt;padding:&lt;/span&gt;
            &lt;span class="n"&gt;EdgeInsets&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;symmetric&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;horizontal:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nl"&gt;vertical:&lt;/span&gt; &lt;span class="n"&gt;isMobile&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
        &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="n"&gt;TextButton&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
          &lt;span class="nl"&gt;onPressed:&lt;/span&gt; &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;isMobile&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="n"&gt;Navigator&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;pop&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;sc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;animateTo&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
              &lt;span class="mi"&gt;1400&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
              &lt;span class="nl"&gt;duration:&lt;/span&gt; &lt;span class="n"&gt;Duration&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;milliseconds:&lt;/span&gt; &lt;span class="n"&gt;scrollDur&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
              &lt;span class="nl"&gt;curve:&lt;/span&gt; &lt;span class="n"&gt;Curves&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;easeIn&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
            &lt;span class="o"&gt;);&lt;/span&gt;
          &lt;span class="o"&gt;},&lt;/span&gt;
          &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
            &lt;span class="s"&gt;'Projects'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
            &lt;span class="nl"&gt;style:&lt;/span&gt; &lt;span class="n"&gt;TextStyle&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
              &lt;span class="nl"&gt;fontSize:&lt;/span&gt; &lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
              &lt;span class="nl"&gt;color:&lt;/span&gt; &lt;span class="n"&gt;Color&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mh"&gt;0xFf4756DF&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
              &lt;span class="nl"&gt;fontWeight:&lt;/span&gt; &lt;span class="n"&gt;FontWeight&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;w600&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
            &lt;span class="o"&gt;),&lt;/span&gt;
          &lt;span class="o"&gt;),&lt;/span&gt;
        &lt;span class="o"&gt;),&lt;/span&gt;
      &lt;span class="o"&gt;),&lt;/span&gt;
      &lt;span class="n"&gt;Padding&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
        &lt;span class="nl"&gt;padding:&lt;/span&gt;
            &lt;span class="n"&gt;EdgeInsets&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;symmetric&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;horizontal:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nl"&gt;vertical:&lt;/span&gt; &lt;span class="n"&gt;isMobile&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
        &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="n"&gt;TextButton&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
          &lt;span class="nl"&gt;onPressed:&lt;/span&gt; &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;isMobile&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="n"&gt;Navigator&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;pop&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;sc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;animateTo&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
              &lt;span class="n"&gt;isMobile&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="mi"&gt;2600&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1900&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
              &lt;span class="nl"&gt;duration:&lt;/span&gt; &lt;span class="n"&gt;Duration&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;milliseconds:&lt;/span&gt; &lt;span class="n"&gt;scrollDur&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
              &lt;span class="nl"&gt;curve:&lt;/span&gt; &lt;span class="n"&gt;Curves&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;easeIn&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
            &lt;span class="o"&gt;);&lt;/span&gt;
          &lt;span class="o"&gt;},&lt;/span&gt;
          &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
            &lt;span class="s"&gt;'Contact'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
            &lt;span class="nl"&gt;style:&lt;/span&gt; &lt;span class="n"&gt;TextStyle&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
              &lt;span class="nl"&gt;fontSize:&lt;/span&gt; &lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
              &lt;span class="nl"&gt;color:&lt;/span&gt; &lt;span class="n"&gt;Color&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mh"&gt;0xFf4756DF&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
              &lt;span class="nl"&gt;fontWeight:&lt;/span&gt; &lt;span class="n"&gt;FontWeight&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;w600&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
            &lt;span class="o"&gt;),&lt;/span&gt;
          &lt;span class="o"&gt;),&lt;/span&gt;
        &lt;span class="o"&gt;),&lt;/span&gt;
      &lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;];&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There are lots of things in the above code but we'll see only the important one.&lt;/p&gt;

&lt;p&gt;As you can see we have used &lt;code&gt;Utils&lt;/code&gt; class so lets create it.&lt;/p&gt;

&lt;p&gt;Inside the lib create a new directory called &lt;code&gt;utils.dart&lt;/code&gt; and write the following code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'package:flutter/cupertino.dart'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Utils&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;bool&lt;/span&gt; &lt;span class="n"&gt;isMobile&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BuildContext&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;MediaQuery&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;of&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;size&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;width&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;600&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;

  &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;mdqh&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BuildContext&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;MediaQuery&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;of&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;size&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;

  &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;mdqw&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BuildContext&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;MediaQuery&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;of&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;size&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;the &lt;code&gt;isMobile&lt;/code&gt; method returns &lt;code&gt;true&lt;/code&gt; if the screen width of device is less than or equal to 600 pixel, you can decide your own logic for that.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;mdqh&lt;/code&gt; method returns the height of screen&lt;br&gt;
&lt;code&gt;mdqw&lt;/code&gt; method return the width of screen&lt;/p&gt;

&lt;p&gt;These utilities will help us to make UI responsive.&lt;/p&gt;

&lt;p&gt;Now go to HomePage and inside the &lt;code&gt;AppBar&lt;/code&gt; of Scaffold add the following code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="nl"&gt;actions:&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;
          &lt;span class="n"&gt;Utils&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;isMobile&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
              &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="n"&gt;Padding&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
                  &lt;span class="nl"&gt;padding:&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="n"&gt;EdgeInsets&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;only&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;right:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
                  &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="n"&gt;IconButton&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
                    &lt;span class="nl"&gt;icon:&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="n"&gt;Icon&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
                      &lt;span class="n"&gt;Icons&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;menu&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
                      &lt;span class="nl"&gt;color:&lt;/span&gt; &lt;span class="n"&gt;Color&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mh"&gt;0xFf4756DF&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
                      &lt;span class="nl"&gt;size:&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
                    &lt;span class="o"&gt;),&lt;/span&gt;
                    &lt;span class="nl"&gt;onPressed:&lt;/span&gt; &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
                      &lt;span class="n"&gt;_scaffoldKey&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;currentState&lt;/span&gt;&lt;span class="o"&gt;!.&lt;/span&gt;&lt;span class="na"&gt;openEndDrawer&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
                    &lt;span class="o"&gt;},&lt;/span&gt;
                  &lt;span class="o"&gt;),&lt;/span&gt;
                &lt;span class="o"&gt;)&lt;/span&gt;
              &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;HomePageActions&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
                  &lt;span class="nl"&gt;sc:&lt;/span&gt; &lt;span class="n"&gt;myScrollController&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
                &lt;span class="o"&gt;),&lt;/span&gt;
        &lt;span class="o"&gt;],&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and in the &lt;code&gt;Scaffold&lt;/code&gt; of HomePage add the &lt;code&gt;endDrawer&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="nl"&gt;endDrawer:&lt;/span&gt; &lt;span class="n"&gt;Utils&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;isMobile&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
          &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="n"&gt;MyDrawer&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
              &lt;span class="nl"&gt;sc:&lt;/span&gt; &lt;span class="n"&gt;myScrollController&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
            &lt;span class="o"&gt;)&lt;/span&gt;
          &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;now lets create our &lt;code&gt;MyDrawer&lt;/code&gt; widget&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-enddrawer"&gt;
  &lt;/a&gt;
  Creating endDrawer &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Inside the components create a new file &lt;code&gt;my_drawer.dart&lt;/code&gt; and write the following code&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'package:flutter/material.dart'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'package:portfolio_app/components/home_page_actions.dart'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MyDrawer&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;StatelessWidget&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;ScrollController&lt;/span&gt; &lt;span class="n"&gt;sc&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="n"&gt;MyDrawer&lt;/span&gt;&lt;span class="o"&gt;({&lt;/span&gt;&lt;span class="n"&gt;Key&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;required&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;sc&lt;/span&gt;&lt;span class="o"&gt;})&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;key:&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

  &lt;span class="nd"&gt;@override&lt;/span&gt;
  &lt;span class="n"&gt;Widget&lt;/span&gt; &lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BuildContext&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Scaffold&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
      &lt;span class="nl"&gt;appBar:&lt;/span&gt; &lt;span class="n"&gt;AppBar&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
        &lt;span class="nl"&gt;backgroundColor:&lt;/span&gt; &lt;span class="n"&gt;Colors&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;transparent&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
        &lt;span class="nl"&gt;elevation:&lt;/span&gt; &lt;span class="mf"&gt;0.0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
        &lt;span class="nl"&gt;leading:&lt;/span&gt; &lt;span class="n"&gt;IconButton&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
          &lt;span class="nl"&gt;onPressed:&lt;/span&gt; &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;Navigator&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;pop&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
          &lt;span class="o"&gt;},&lt;/span&gt;
          &lt;span class="nl"&gt;icon:&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="n"&gt;Icon&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;Icons&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;close&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
            &lt;span class="nl"&gt;color:&lt;/span&gt; &lt;span class="n"&gt;Color&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mh"&gt;0xFF4756DF&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
          &lt;span class="o"&gt;),&lt;/span&gt;
        &lt;span class="o"&gt;),&lt;/span&gt;
      &lt;span class="o"&gt;),&lt;/span&gt;
      &lt;span class="nl"&gt;body:&lt;/span&gt; &lt;span class="n"&gt;Center&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="n"&gt;HomePageActions&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;sc:&lt;/span&gt; &lt;span class="n"&gt;sc&lt;/span&gt;&lt;span class="o"&gt;)),&lt;/span&gt;
    &lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can see we are reusing the &lt;code&gt;HomePageActions&lt;/code&gt; again here and it will be visible only on the small screen, remember the code that we wrote in it.&lt;/p&gt;

&lt;p&gt;Now inside the HomePage &lt;code&gt;Scaffold&lt;/code&gt; add the floating action button that will help to scroll at top.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt; &lt;span class="nl"&gt;floatingActionButton:&lt;/span&gt; &lt;span class="n"&gt;FloatingActionButton&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
        &lt;span class="nl"&gt;mini:&lt;/span&gt; &lt;span class="n"&gt;Utils&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;isMobile&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
        &lt;span class="nl"&gt;onPressed:&lt;/span&gt; &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
          &lt;span class="n"&gt;myScrollController&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;animateTo&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
            &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
            &lt;span class="nl"&gt;duration:&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="n"&gt;Duration&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;milliseconds:&lt;/span&gt; &lt;span class="mi"&gt;800&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
            &lt;span class="nl"&gt;curve:&lt;/span&gt; &lt;span class="n"&gt;Curves&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;easeIn&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
          &lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="o"&gt;},&lt;/span&gt;
        &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;network&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
          &lt;span class="s"&gt;'https://eager-williams-af0d00.netlify.app/assets/icons/icons8-upward-arrow.gif'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
        &lt;span class="o"&gt;),&lt;/span&gt;
      &lt;span class="o"&gt;),&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;animateTo&lt;/code&gt; method of ScrollController will scroll the page to the specified position will nice animation you can define the &lt;code&gt;duration&lt;/code&gt; and &lt;code&gt;curve&lt;/code&gt; for the animation.&lt;/p&gt;

&lt;p&gt;The same method we are using in the HomePageActions buttons to scroll at a specific section using a calculated height.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;If I write the complete code the article will be too long and boring. So lets quickly complete our project. You can find the source code in the last section&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-components-of-homepage"&gt;
  &lt;/a&gt;
  Creating Components of HomePage &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Now in the HomePage inside the &lt;code&gt;children&lt;/code&gt; of column add the remaining components.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="nl"&gt;children:&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;
&lt;span class="n"&gt;Header1&lt;/span&gt;&lt;span class="o"&gt;(),&lt;/span&gt;
&lt;span class="n"&gt;MoreAboutMe&lt;/span&gt;&lt;span class="o"&gt;(),&lt;/span&gt;
&lt;span class="n"&gt;SizedBox&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;height:&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
&lt;span class="n"&gt;TopSkills&lt;/span&gt;&lt;span class="o"&gt;(),&lt;/span&gt;
&lt;span class="n"&gt;SizedBox&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;height:&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
&lt;span class="n"&gt;RecentProjects&lt;/span&gt;&lt;span class="o"&gt;(),&lt;/span&gt;
&lt;span class="n"&gt;SizedBox&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;height:&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
&lt;span class="n"&gt;ContactForm&lt;/span&gt;&lt;span class="o"&gt;(),&lt;/span&gt;
&lt;span class="n"&gt;SizedBox&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;height:&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
&lt;span class="n"&gt;Footer&lt;/span&gt;&lt;span class="o"&gt;(),&lt;/span&gt;
&lt;span class="n"&gt;SizedBox&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;height:&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
&lt;span class="o"&gt;],&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can get the code of these components from the &lt;a href="https://github.com/pktintali/flutter-portfolio/tree/main/lib/components"&gt;Here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Now the final thing in the bottom of &lt;code&gt;children&lt;/code&gt; of &lt;code&gt;Stack&lt;/code&gt; that we used in HomePage add the following component.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nf"&gt;SocialIconsBar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#creating-project-model"&gt;
  &lt;/a&gt;
  Creating Project Model &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;In the &lt;code&gt;RecentProjects()&lt;/code&gt; component we need Projectmodel so&lt;br&gt;
in the models directory create a new file called &lt;code&gt;project_model.dart&lt;/code&gt; and write the following code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="n"&gt;lass&lt;/span&gt; &lt;span class="n"&gt;ProjectModel&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="n"&gt;imgURL&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="n"&gt;projectName&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="n"&gt;shortDescription&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="n"&gt;actionLink&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

  &lt;span class="n"&gt;ProjectModel&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
      &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="n"&gt;required&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;imgURL&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;required&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;projectName&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;shortDescription&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;required&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;actionLink&lt;/span&gt;&lt;span class="o"&gt;});&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create a new file inside the lib called &lt;code&gt;constants.dart&lt;/code&gt; and create some ProjectModels/Demo Projects.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'package:portfolio_app/models/project_model.dart'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Constants&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ProjectModel&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;projects&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;
    &lt;span class="n"&gt;ProjectModel&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
      &lt;span class="nl"&gt;actionLink:&lt;/span&gt; &lt;span class="s"&gt;'#'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
      &lt;span class="nl"&gt;imgURL:&lt;/span&gt;
          &lt;span class="s"&gt;'https://eager-williams-af0d00.netlify.app/assets/images/expenseTracker.png'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
      &lt;span class="nl"&gt;projectName:&lt;/span&gt; &lt;span class="s"&gt;'Expense Tracker'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
    &lt;span class="o"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;ProjectModel&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
      &lt;span class="nl"&gt;actionLink:&lt;/span&gt; &lt;span class="s"&gt;'#'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
      &lt;span class="nl"&gt;imgURL:&lt;/span&gt;
          &lt;span class="s"&gt;'https://eager-williams-af0d00.netlify.app/assets/images/netflixClone.png'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
      &lt;span class="nl"&gt;projectName:&lt;/span&gt; &lt;span class="s"&gt;'Netflix Clone'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
    &lt;span class="o"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;ProjectModel&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
      &lt;span class="nl"&gt;actionLink:&lt;/span&gt; &lt;span class="s"&gt;'#'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
      &lt;span class="nl"&gt;imgURL:&lt;/span&gt;
          &lt;span class="s"&gt;'https://eager-williams-af0d00.netlify.app/assets/images/greenyEarth.png'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
      &lt;span class="nl"&gt;projectName:&lt;/span&gt; &lt;span class="s"&gt;'Greeny Earth'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
    &lt;span class="o"&gt;),&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And we have successfully created our responsive developer portfolio with flutter 🎉&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#source-code"&gt;
  &lt;/a&gt;
  Source Code &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;You can see/download the source code from github.&lt;br&gt;
&lt;a href="https://github.com/pktintali/flutter-portfolio"&gt;Repo Link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks!&lt;/p&gt;

</description>
      <category>flutter</category>
      <category>tutorial</category>
      <category>portfolio</category>
    </item>
    <item>
      <title>How The Cloud is Revolutionizing Gaming</title>
      <author>Saji Wang</author>
      <pubDate>Tue, 23 Nov 2021 15:50:03 +0000</pubDate>
      <link>https://dev.to/codesphere/how-the-cloud-is-revolutionizing-gaming-3aa3</link>
      <guid>https://dev.to/codesphere/how-the-cloud-is-revolutionizing-gaming-3aa3</guid>
      <description>&lt;p&gt;There's virtually no sector of the tech industry that hasn't experienced at least some changes with the advent of cloud computing. One of the specific industries that is undergoing a shift of tectonic proportions is undeniably the gaming industry.&lt;/p&gt;

&lt;p&gt;Whether its game streaming, server hosting, or indie development, cloud is in the process of leaving a lasting mark on the gaming industry.&lt;/p&gt;

&lt;p&gt;Let's take a look into how!&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#game-streaming"&gt;
  &lt;/a&gt;
  Game Streaming
&lt;/h3&gt;

&lt;p&gt;Virtually every big tech company has announced in the past couple of years that it's developing a cloud gaming platform, and it's no surprise why.&lt;/p&gt;

&lt;p&gt;Gaming is already a massive industry, but someone's ability to purchase and buy a game is currently dependent on their ability to run it. Now, while I imagine many of us developers have no issue running these games, not everyone is trying to dedicate 200gb of their hard drive to Call of Duty.&lt;/p&gt;

&lt;p&gt;Cloud gaming works by streaming the game from the cloud to the gamer's local machine. This means no downloads, complex rendering, or burdensome computing. All you need is a good internet connection to run your favorite game.&lt;/p&gt;

&lt;p&gt;There's already a laundry list of cloud gaming platforms, many of which are already up and running:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Sony's Playstation Now&lt;/li&gt;
&lt;li&gt;Google's Stadia&lt;/li&gt;
&lt;li&gt;Microsoft's Xbox Game Pass&lt;/li&gt;
&lt;li&gt;Amazon's Luna&lt;/li&gt;
&lt;li&gt;NVIDIA's GeForce Now&lt;/li&gt;
&lt;li&gt;EA's Project Atlas&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0D-sBwB_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ksvhrqzmmf47q5qcrfqn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0D-sBwB_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ksvhrqzmmf47q5qcrfqn.png" alt="cloud gaming" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;An added benefit is that cross-platform development can become much easier if devs no longer have to build for specific platforms, however, this benefit is only going to kick in when games become cloud exclusive!&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#server-hosting"&gt;
  &lt;/a&gt;
  Server Hosting
&lt;/h3&gt;

&lt;p&gt;Another way in which the cloud has changed the gaming industry is by making it increasingly easier to host game servers.&lt;br&gt;
For development companies, it means being able to create multiplayer games without massive server racks occupying both your headquarters and your balance sheet. Now, you can set up your server on the cloud and have it scale as your player base grows.&lt;/p&gt;

&lt;p&gt;Games tend to be especially prone to virality, which makes the ability to scale your servers incredibly important. That's why much of our emphasis on Codesphere, is making a truly scalable cloud platform.&lt;/p&gt;

&lt;p&gt;Additionally, private server hosting, for games Garry's Mod, Minecraft, and DayZ has become much easier. All it takes to set up a server hosting company for your favorite game is some basic cloud knowledge. So for everyday gamers, the increase of the server hosting companies means cheaper rates for server hosting.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#indie-development"&gt;
  &lt;/a&gt;
  Indie Development
&lt;/h3&gt;

&lt;p&gt;Lastly, the advent of cloud computing means that the ability to build and secure backends is no longer limited to just the big guys.&lt;/p&gt;

&lt;p&gt;Indie developers now have the ability to build multiplayer games without the massive IT costs of a huge game dev company!&lt;br&gt;
If you're an indie dev looking for a simple cloud platform to get your game up and running, check out what we're building at &lt;a href="https://link.codesphere.com/GG"&gt;Codesphere&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;We're trying to take the learning curve out of cloud computing, and we need your help to make it happen!&lt;/p&gt;

&lt;p&gt;Let us know what you think down below!&lt;/p&gt;

</description>
      <category>gamedev</category>
      <category>cloud</category>
      <category>developers</category>
      <category>discuss</category>
    </item>
    <item>
      <title>Correlate Security Findings With AWS Security Hub and Amazon EventBridge</title>
      <author>🚀  Vu Dao 🚀 </author>
      <pubDate>Tue, 23 Nov 2021 15:37:12 +0000</pubDate>
      <link>https://dev.to/aws-builders/correlate-security-findings-with-aws-security-hub-and-amazon-eventbridge-1hal</link>
      <guid>https://dev.to/aws-builders/correlate-security-findings-with-aws-security-hub-and-amazon-eventbridge-1hal</guid>
      <description>&lt;h2&gt;
  &lt;a href="#abstract"&gt;
  &lt;/a&gt;
  Abstract
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Rather than spending time manually reacting to security alerts or looking at the GuardDuty/ Security hub dashboard, you can instead focus on activities such as enhancing application protection layers and improving your security program.&lt;/li&gt;
&lt;li&gt;This blog is a combine of AWS services such as guard duty, security hub, event bridge, step functions, network firewall rule group, lambda function and slack notification to provide the automation.&lt;/li&gt;
&lt;li&gt;And we use Pulumi to deploy those services as code.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table Of Contents
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#Solution-overview"&gt;Solution overview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Network-Firewall-Rule-group"&gt;Network Firewall Rule group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Dynamodb-table"&gt;Dynamodb table&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#EventBridge"&gt;EventBridge&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Step-functions"&gt;Step functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Lambda-functions"&gt;Lambda functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Using-Pulumi-to-create-infrastructure-as-code"&gt;Using Pulumi to create infrastructure as code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Conclusion"&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#solution-overview"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;Solution overview&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Amazon GuardDuty is a continuous security monitoring service that analyzes and processes data from VPC flow logs, cloudTrail, S3 data events, etc. Based on this data, GuardDuty analysis and detection by using threat intelligence feeds, signatures, anomaly detection, and machine learning in the AWS Cloud.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The automation provides in this blog post is focused on blocking traffic to and from suspicious remote hosts. GuardDuty detection of unintended communication with remote hosts triggers a series of steps, including blocking of network traffic to those hosts by using Network Firewall, and notification of security operators.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;All in serverless by using eventBridge with event pattern from &lt;code&gt;aws.securityhub&lt;/code&gt; source. For pattern matches such as HIGH or CRITICAL severity findings, as well as suspicious IP address, the event rule triggers step functions for remediation.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;AWS Step Functions is a serverless orchestration service that lets you combine AWS Lambda functions and other AWS services to build business-critical applications. Step Functions service also provides retry and error-handling logic, while Lambda functions interact with networking controls to block traffic, and with a database to store data about blocked remote IP addresses.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--azck1K0D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/aws-guardduty-sechub/blob/master/images/flow.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--azck1K0D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/aws-guardduty-sechub/blob/master/images/flow.png%3Fraw%3Dtrue" width="880" height="523"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#how-it-works"&gt;
  &lt;/a&gt;
  &lt;strong&gt;How it works?&lt;/strong&gt;
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#network-firewall-rule-group"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;Network Firewall Rule group&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;This rulegroup is used to block traffic to and from suspicious remote hosts using &lt;code&gt;STATELESS&lt;/code&gt; type and action &lt;code&gt;drop&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZggT5v4f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/aws-guardduty-sechub/blob/master/images/nfrg.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZggT5v4f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/aws-guardduty-sechub/blob/master/images/nfrg.png%3Fraw%3Dtrue" width="880" height="283"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dynamodb-table"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;Dynamodb table&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;The DDB tables is used to store the blocked IPs with attributes &lt;code&gt;HostIp&lt;/code&gt;, &lt;code&gt;CreatedAt&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Billing Mode: &lt;code&gt;PAY_PER_REQUEST&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fC9XbUVh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/aws-guardduty-sechub/blob/master/images/ddb.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fC9XbUVh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/aws-guardduty-sechub/blob/master/images/ddb.png%3Fraw%3Dtrue" width="880" height="306"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#eventbridge"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;EventBridge&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Define rules with flowing patterns where the &lt;code&gt;source&lt;/code&gt; is from &lt;code&gt;aws.securityhub&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;catch-ipv4:&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
    "detail": {
        "findings": {
        "ProductFields": {
            "aws/guardduty/service/action/networkConnectionAction/remoteIpDetails/ipAddressV4": [{
            "exists": true
            }]
        }
        }
    },
    "detail-type": ["Security Hub Findings - Imported"],
    "region": ["us-west-2"],
    "source": ["aws.securityhub"]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Other findings:&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
    "detail": {
        "findings": {
        "Severity": {
            "Label": ["HIGH", "CRITICAL"]
        }
        }
    },
    "detail-type": ["Security Hub Findings - Imported"],
    "region": ["us-west-2"],
    "source": ["aws.securityhub"]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#step-functions"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;Step functions&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;sechub-record-ip&lt;/strong&gt;: include three lambda functions &lt;code&gt;add_ip_func&lt;/code&gt;, &lt;code&gt;update_rule_group_func&lt;/code&gt;, &lt;code&gt;send_finding_func&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eXlhkG0F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/aws-guardduty-sechub/blob/master/images/sechub-record-ip.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eXlhkG0F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/aws-guardduty-sechub/blob/master/images/sechub-record-ip.png%3Fraw%3Dtrue" width="744" height="509"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;sechub-send-findings&lt;/strong&gt;: which use lamdba function resource &lt;code&gt;send_finding_func&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--26IgTcvg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/aws-guardduty-sechub/blob/master/images/send-findings.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--26IgTcvg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/aws-guardduty-sechub/blob/master/images/send-findings.png%3Fraw%3Dtrue" width="416" height="435"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;sechub-prune-ip&lt;/strong&gt;: lambda functions &lt;code&gt;get_ip_func&lt;/code&gt;, &lt;code&gt;remove_ip_func&lt;/code&gt;, &lt;code&gt;send_finding_func&lt;/code&gt;, &lt;code&gt;update_rule_group_func&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8tgAWOFG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/aws-guardduty-sechub/blob/master/images/sechub-prune-ip.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8tgAWOFG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/aws-guardduty-sechub/blob/master/images/sechub-prune-ip.png%3Fraw%3Dtrue" width="880" height="496"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#lambda-functions"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;Lambda functions&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;add-ip-to-ddb&lt;/strong&gt;: The function parses the event to get &lt;code&gt;HostIp&lt;/code&gt; and then adds it to Dynamodb (DDB) table, if it's actually new IP then return a record which includes IP list and flag &lt;code&gt;NewIP=True&lt;/code&gt;, otherwise, flag &lt;code&gt;NewIP=False&lt;/code&gt; due to IP already exists in DDB&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;get-ip-from-ddb&lt;/strong&gt;: This function is called by scheduled statemachine to get all blocked IPs in DDB which are expired (blocking time &amp;gt; 720 hours)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;remove-ip-from-ddb&lt;/strong&gt;: Base on the input of expired IPs from previous step functions, remove those IPs from DDB and then return the rest of IPs&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;update-nf-rg&lt;/strong&gt;: This function override current Network firewall rule group with the input combine with current&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;send-gd-finding&lt;/strong&gt;: This function send notification of success or failure for any blocking IPs or high/critical findings.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#we-walked-through-all-resources-which-are-going-to-deploy-in-this-solution-see-the-flow-more-detail"&gt;
  &lt;/a&gt;
  We walked through all resources which are going to deploy in this solution, see the flow more detail
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XL_WQ0Q6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/aws-guardduty-sechub/blob/master/images/flow_detail.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XL_WQ0Q6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/aws-guardduty-sechub/blob/master/images/flow_detail.png%3Fraw%3Dtrue" width="880" height="453"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-pulumi-to-create-infrastructure-as-code"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;Using Pulumi to create infrastructure as code&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Source code in &lt;code&gt;TypeScript&lt;/code&gt;: &lt;a href="https://github.com/vumdao/aws-guardduty-sechub"&gt;aws-guardduty-sechub GitHub repository&lt;/a&gt;. The following commands show how to deploy the solution using Pulumi&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;First, need to set Pulumi configs such as AWS region, AWS account, AWS profile and webhook URL of slack channel&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pulumi config set aws:region us-west-2
pulumi config set aws:profile myprofile
pulumi config set --secret aws-guardduty-sechub:webhook_url https://slack.channel.com/&amp;lt;ID&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Preview the stack&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pulumi preview
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Deploy stack&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pulumi up
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Check result on Pulumi graph view&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--InQ4WSer--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/aws-guardduty-sechub/blob/master/images/pulumi-stack.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--InQ4WSer--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/aws-guardduty-sechub/blob/master/images/pulumi-stack.png%3Fraw%3Dtrue" width="880" height="745"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclution"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;Conclution&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;In this blog post, we walked through a solution to use AWS services, including Amazon EventBridge, AWS step function, AWS Lambda, and Amazon DynamoDB, to correlate AWS Security Hub findings from multiple different AWS security services.&lt;/li&gt;
&lt;li&gt;By automating blocking traffic from suspicious IP addresses and sending high and critical findings to slack, we can prioritize and improve our security response.&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;References:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://aws.amazon.com/blogs/security/automatically-block-suspicious-traffic-with-aws-network-firewall-and-amazon-guardduty"&gt;Automatically block suspicious traffic with AWS Network Firewall and Amazon GuardDuty&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://aws.amazon.com/blogs/security/correlate-security-findings-with-aws-security-hub-and-amazon-eventbridge/"&gt;Correlate security findings with AWS Security Hub and Amazon EventBridge&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;





&lt;div class="ltag__user ltag__user__id__512906"&gt;
  
    .ltag__user__id__512906 .follow-action-button {
      background-color: #000000 !important;
      color: #62df88 !important;
      border-color: #000000 !important;
    }
  
    &lt;a href="/vumdao" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bGwkUMWT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--ugeYdWM---/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/512906/2472752c-cfd5-4e02-b3d8-55b790178884.png" alt="vumdao image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/vumdao"&gt;🚀  Vu Dao 🚀 &lt;/a&gt;Follow
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/vumdao"&gt;🚀 AWSome Devops | AWS Community Builder | AWS SA || ☁️ CloudOpz ☁️&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;



&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/vumdao"&gt;
        vumdao
      &lt;/a&gt; / &lt;a href="https://github.com/vumdao/vumdao"&gt;
        vumdao
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


</description>
      <category>aws</category>
      <category>guardduty</category>
      <category>cloudopz</category>
      <category>sechub</category>
    </item>
    <item>
      <title>My Programmer Humor Videos</title>
      <author>Mike</author>
      <pubDate>Tue, 23 Nov 2021 15:35:00 +0000</pubDate>
      <link>https://dev.to/mihaha/my-programmer-humor-videos-1b40</link>
      <guid>https://dev.to/mihaha/my-programmer-humor-videos-1b40</guid>
      <description>&lt;p&gt;Presenting here the top programming funny videos I invested time to create for you to giggle a bit :-)&lt;/p&gt;

&lt;p&gt;Aladdin Parody - A Whole New Code:&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=jCZuBLD_j10"&gt;https://www.youtube.com/watch?v=jCZuBLD_j10&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Programmer Pick Up Lines:&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=MmPFMN6nYsg"&gt;https://www.youtube.com/watch?v=MmPFMN6nYsg&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Aladdin Parody - The Stack Overflow song:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=Zk58ht8kFdg"&gt;https://www.youtube.com/watch?v=Zk58ht8kFdg&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;All voice overs are original, it was a pleasure to create.&lt;/p&gt;

</description>
      <category>programming</category>
      <category>humor</category>
      <category>funny</category>
      <category>jokes</category>
    </item>
    <item>
      <title>The end of text documentation! 👨‍💻👩‍💻</title>
      <author>magen.smith</author>
      <pubDate>Tue, 23 Nov 2021 15:32:54 +0000</pubDate>
      <link>https://dev.to/magensmith/the-end-of-text-documentation-3e1o</link>
      <guid>https://dev.to/magensmith/the-end-of-text-documentation-3e1o</guid>
      <description>&lt;p&gt;You've been working on your task for two weeks, fixing bugs, adding features, writing hundreds and maybe even thousands of lines of code 👨‍💻👩‍💻, having fun , and then it comes - the documentation phase.✍️😤&lt;br&gt;
Now you have to transfer your thoughts to T-E-X-T.&lt;br&gt;
It's boring, it's long, it's difficult but necessary!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bRz13Ipn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/52s7kqkms5rxnhiv4jkc.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bRz13Ipn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/52s7kqkms5rxnhiv4jkc.jpg" alt="It's so boring" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I discovered a new tool last week that will help you make this annoying process much simpler and faster.🚀&lt;/p&gt;

&lt;p&gt;Unlike all the tools available today - finally, you have everything integrated into the IDE. 👨‍💻👩‍💻&lt;br&gt;
This tool gives you a screen recorder that opens from the IDE and with few clicks your screen will be recorded  (you can even add a camera! 📷).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aMJbnCV6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/26bpz7y8qkw7f1a0t8p6.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aMJbnCV6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/26bpz7y8qkw7f1a0t8p6.gif" alt="How cool is it?" width="600" height="349"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You will be able to explain everything you have done, in your own words and the video will be saved in the cloud.&lt;br&gt;
Your video will be attached directly to the lines of code you have written, so anyone who will struggle to understand your code will be able to watch the video directly from the IDE. &lt;/p&gt;

&lt;p&gt;If you are a video fan like me and you want to try something new, go to the Jetbrains marketplace and install SpeaCode, you won’t be disappointed, I promise! 😀&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Link to the plugin:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://plugins.jetbrains.com/plugin/15672-speacode-video-screen-recorder-for-code--python-java-js-php-etc/"&gt;https://plugins.jetbrains.com/plugin/15672-speacode-video-screen-recorder-for-code--python-java-js-php-etc/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PHswgrs3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xu2m9pk34ai2jmly7nza.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PHswgrs3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xu2m9pk34ai2jmly7nza.png" alt="No more comment like that!" width="876" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>codereview</category>
      <category>programming</category>
      <category>productivity</category>
      <category>tooling</category>
    </item>
    <item>
      <title>How to Manage WordPress Post Metadata</title>
      <author>Softhunt</author>
      <pubDate>Tue, 23 Nov 2021 15:27:02 +0000</pubDate>
      <link>https://dev.to/softhunt/how-to-manage-wordpress-post-metadata-6h4</link>
      <guid>https://dev.to/softhunt/how-to-manage-wordpress-post-metadata-6h4</guid>
      <description>&lt;p&gt;The term WordPress post metadata refers to data about data. It’s information about posts, users, comments, and terminology in the case of WordPress.&lt;/p&gt;

&lt;p&gt;Because of the many-to-one relationship of metadata in WordPress, you have a lot of possibilities. You can have as many meta settings as you like and store almost anything in there.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#adding-metadata"&gt;
  &lt;/a&gt;
  Adding Metadata
&lt;/h2&gt;

&lt;p&gt;With &lt;a href="https://softhunt.net/how-to-manage-wordpress-post-meta/"&gt;add_post_meta()&lt;/a&gt;, you can simply add information to your posts. A &lt;strong&gt;post_id&lt;/strong&gt;, a &lt;strong&gt;meta_key&lt;/strong&gt;, a &lt;strong&gt;meta_value&lt;/strong&gt;, and a unique flag are all accepted by the function.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;meta_key&lt;/strong&gt; is used by your plugin to refer to the meta value in other parts of your code. Something like &lt;strong&gt;mycrazymetakeyname&lt;/strong&gt; would work, A prefix linked to your plugin or theme followed by a description of the key would work, but a prefix relevant to your plugin or theme followed by a description of the key would be more beneficial. &lt;strong&gt;wporg_featured_menu&lt;/strong&gt; is a possibility.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;It's worth noting that the same &lt;strong&gt;meta_key&lt;/strong&gt; can be used several times to record different metadata variants (see the unique flag below). A string, integer, or array can be used as the &lt;strong&gt;meta_value&lt;/strong&gt;. If the value is an array, it will be serialized automatically before being put in the database.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You can use the &lt;strong&gt;unique&lt;/strong&gt; flag to specify whether or not this key should be unique. A non-unique key is one that may be found in numerous versions in a post, such as price.&lt;br&gt;
If you just want one price for a post, mark it as &lt;strong&gt;unique&lt;/strong&gt;, and the &lt;strong&gt;meta_key&lt;/strong&gt; will only have one value.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#updating-metadata"&gt;
  &lt;/a&gt;
  Updating Metadata
&lt;/h2&gt;

&lt;p&gt;If you wish to update a key that already exists, use &lt;a href="https://softhunt.net/how-to-manage-wordpress-post-meta/"&gt;update_post_meta()&lt;/a&gt;. If you call this function and the key does NOT exist, it will generate it for you, much like if you used &lt;a href="https://softhunt.net/how-to-manage-wordpress-post-meta/"&gt;add_post_meta()&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The function receives a &lt;strong&gt;post_id&lt;/strong&gt;, a &lt;strong&gt;meta_key&lt;/strong&gt;, a &lt;strong&gt;meta_value&lt;/strong&gt;, and a &lt;strong&gt;unique&lt;/strong&gt; flag, same as &lt;a href="https://softhunt.net/how-to-manage-wordpress-post-meta/"&gt;add_post_meta()&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;
  &lt;a href="#deleting-metadata"&gt;
  &lt;/a&gt;
  Deleting Metadata
&lt;/h2&gt;

&lt;p&gt;A &lt;strong&gt;post_id&lt;/strong&gt;, a &lt;strong&gt;meta_key&lt;/strong&gt;, and possibly a &lt;strong&gt;meta_value&lt;/strong&gt; are sent to &lt;a href="https://softhunt.net/how-to-manage-wordpress-post-meta/"&gt;delete_post_meta()&lt;/a&gt;. It does exactly what it says on the tin.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#character-escaping"&gt;
  &lt;/a&gt;
  Character Escaping
&lt;/h2&gt;

&lt;p&gt;Because post meta values are saved using the &lt;a href="https://softhunt.net/how-to-manage-wordpress-post-meta/"&gt;stripslashes()&lt;/a&gt; function, you must be cautious when sending in values (such as JSON) that may include escaped characters.&lt;/p&gt;

&lt;p&gt;Consider the JSON value &lt;code&gt;{"key":"value with \"escaped quotes\""}:&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$escaped_json = '{"key":"value with \"escaped quotes\""}';
update_post_meta( $id, 'escaped_json', $escaped_json );
$broken = get_post_meta( $id, 'escaped_json', true );
/*
$broken, after stripslashes(), ends up unparsable:
{"key":"value with "escaped quotes""}
*/
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#workaround-wpslash"&gt;
  &lt;/a&gt;
  Workaround. wp_slash()
&lt;/h2&gt;

&lt;p&gt;You may compensate for the call to &lt;a href="https://softhunt.net/how-to-manage-wordpress-post-meta/"&gt;stripslashes()&lt;/a&gt; by adding another level of escaping using the function &lt;a href="https://softhunt.net/how-to-manage-wordpress-post-meta/"&gt;wp_slash()&lt;/a&gt; (added in WP 3.6):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$escaped_json = '{"key":"value with \"escaped quotes\""}';
update_post_meta( $id, 'double_escaped_json', wp_slash( $escaped_json ) );
$fixed = get_post_meta( $id, 'double_escaped_json', true );
/*
$fixed, after stripslashes(), ends up as desired:
{"key":"value with \"escaped quotes\""}
*/
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#hidden-custom-fields"&gt;
  &lt;/a&gt;
  Hidden Custom Fields
&lt;/h2&gt;

&lt;p&gt;If you’re a plugin or theme developer and want to utilize custom fields to store parameters, keep in mind that custom fields with a &lt;strong&gt;meta_key&lt;/strong&gt; that starts with a &lt;strong&gt;“_” (underscore)&lt;/strong&gt; will not appear in the custom fields list on the post edit page or when using the &lt;a href="https://softhunt.net/how-to-manage-wordpress-post-meta/"&gt;the_meta()&lt;/a&gt; template function.&lt;/p&gt;

&lt;p&gt;Using the &lt;strong&gt;add_meta_box()&lt;/strong&gt; method, can be handy for displaying these custom fields in a unique way.&lt;/p&gt;

&lt;p&gt;The following example will create a unique custom field with the &lt;strong&gt;meta_key&lt;/strong&gt; name &lt;strong&gt;‘_color’&lt;/strong&gt; and the &lt;strong&gt;meta_value&lt;/strong&gt; &lt;strong&gt;‘red,’&lt;/strong&gt; but it will not appear in the post edit screen:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;add_post_meta( 68, '_color', 'red', true );
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you have any query visit to our &lt;a href="https://softhunt.net/"&gt;website&lt;/a&gt; &lt;/p&gt;

</description>
      <category>wordpress</category>
      <category>php</category>
      <category>programming</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Fetching Data in React</title>
      <author>Pratik Bhagat</author>
      <pubDate>Tue, 23 Nov 2021 15:24:46 +0000</pubDate>
      <link>https://dev.to/bhagatpratik07/fetching-data-in-react-hni</link>
      <guid>https://dev.to/bhagatpratik07/fetching-data-in-react-hni</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;This blog post will teach you how to fetch data from an external API and use it in your React apps.&lt;/p&gt;

&lt;p&gt;Before you start reading you should be familiar with React,  &lt;a href="https://dev.to/bhagatpratik07/introduction-to-react-hooks-3h02"&gt;useState and useEffect hooks&lt;/a&gt;  in React.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#methods-of-fetching-data"&gt;
  &lt;/a&gt;
  Methods of Fetching Data
&lt;/h2&gt;

&lt;p&gt;We will look at the following ways to fetch data: &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Using Fetch API&lt;/li&gt;
&lt;li&gt;Using async function&lt;/li&gt;
&lt;li&gt;Using Axios&lt;/li&gt;
&lt;li&gt;Using custom hooks&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#using-fetch-api"&gt;
  &lt;/a&gt;
  Using Fetch API
&lt;/h2&gt;

&lt;p&gt;The Fetch API provides a JavaScript interface for accessing and manipulating parts of the HTTP pipeline, such as requests and responses. It provides a global fetch( ) method that provides an easy, logical way to fetch resources asynchronously across the network.&lt;/p&gt;

&lt;p&gt;We will use the fetch( ) method which takes a single argument i.e the path you want to fetch data from and it returns a promise containing a response.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;fetch('https://jsonplaceholder.typicode.com/todos/1')
  .then(response =&amp;gt; response.json())
  .then(json =&amp;gt; console.log(json))
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#using-async-function"&gt;
  &lt;/a&gt;
  Using async function
&lt;/h2&gt;

&lt;p&gt;The async function returns a promise and the await keyword makes the function wait for a response.&lt;/p&gt;

&lt;p&gt;Here's how we can use async/await to fetch data&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;async function fetchData() {
      const response = await fetch(
        "https://jsonplaceholder.typicode.com/todos/3"
      );
      const data = await response.json();
      console.log(data);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#using-axios"&gt;
  &lt;/a&gt;
  Using Axios
&lt;/h2&gt;

&lt;p&gt;Axios is a library that is used to fetch data and it already gives the result in JSON, so we don't have to convert it.&lt;/p&gt;

&lt;p&gt;First, we have to install Axios with the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install axios
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To use axios in our project we have to import it into our project&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import axios from "axios"

  React.useEffect(() =&amp;gt; {
    axios.get("https://jsonplaceholder.typicode.com/todos/3")
    .then((response) =&amp;gt; (console.log(response));
  }, []);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we used the .get() method to make a get request to our endpoint.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-custom-hook"&gt;
  &lt;/a&gt;
  Using custom hook
&lt;/h2&gt;

&lt;p&gt;We will make our custom react hook to fetch data which will take a single argument that is the endpoint we want to fetch the data from.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { useEffect } from "react";

const useFetch = (url) =&amp;gt; {
  useEffect(() =&amp;gt; {
    fetch(url)
      .then((response) =&amp;gt; response.json())
      .then((data) =&amp;gt; {
        console.log(data);
      });
  }, []);
};

export default useFetch;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Like this blog if you found it helpful and connect with me  on &lt;a href="https://twitter.com/bhagatpratik07"&gt;Twitter&lt;/a&gt; and  &lt;a href="https://www.linkedin.com/in/pratik-bhagat07/"&gt;LinkedIn&lt;/a&gt;  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#thank-you-for-reading-"&gt;
  &lt;/a&gt;
  Thank you for reading ;)
&lt;/h2&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Cube Cloud Deep Dive: Starting a New Cube App</title>
      <author>Adnan Rahić</author>
      <pubDate>Tue, 23 Nov 2021 15:11:46 +0000</pubDate>
      <link>https://dev.to/cubejs/cube-cloud-deep-dive-starting-a-new-cube-app-3dhp</link>
      <guid>https://dev.to/cubejs/cube-cloud-deep-dive-starting-a-new-cube-app-3dhp</guid>
      <description>&lt;p&gt;Cube has been an &lt;a href="https://github.com/cube-js/cube.js"&gt;open-source project&lt;/a&gt; since 2018. We try our best to listen to the community and our users to make it the best analytics API server on the market today.&lt;/p&gt;

&lt;p&gt;We really appreciate all the help and sincere dedication our lovely community has done to provide feedback, submit pull requests, and feature ideas to improve Cube even more. We hope the soon-to-be 12,000 stars on GitHub are a representation of our dedication to making our community happy.&lt;/p&gt;

&lt;p&gt;In this article, I want to walk you through creating a new Cube App deployment on Cube Cloud and connecting it to your database.&lt;/p&gt;

&lt;p&gt;If you prefer watching a video instead, have a look at this short 5 minute tutorial on our YouTube channel.&lt;/p&gt;

&lt;p&gt;Before moving on I want to share a bit about the benefits of using Cube Cloud vs. self-hosting Cube yourself.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-use-cube-cloud"&gt;
  &lt;/a&gt;
  Why use Cube Cloud?
&lt;/h2&gt;

&lt;p&gt;We &lt;a href="https://cube.dev/blog/announcing-cube-cloud/?utm_source=dev-to&amp;amp;utm_medium=post&amp;amp;utm_campaign=starting-a-new-cube-app-in-cube-cloud"&gt;launched Cube Cloud this October&lt;/a&gt; with the vision of making Cube accessible to everyone, no matter the scale and DevOps experience level.&lt;/p&gt;

&lt;p&gt;You already know Cube is an open-source project with almost 12,000 stars on GitHub. It's packed full of cool features, such as auto-generating schemas, auto-generating dashboards, a developer playground, and much more. It's easy to work with and developer-friendly.&lt;/p&gt;

&lt;p&gt;Self-hosting Cube can come with its own set of complications due and pitfalls. Let me explain.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#managed-infrastructure"&gt;
  &lt;/a&gt;
  Managed Infrastructure
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://cube.dev/docs/deployment/production-checklist?utm_source=dev-to&amp;amp;utm_medium=post&amp;amp;utm_campaign=starting-a-new-cube-app-in-cube-cloud"&gt;Cube requires several pieces of infrastructure&lt;/a&gt; to work reliably at scale. To get both high concurrency and high data size you need:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Compute resources&lt;/li&gt;
&lt;li&gt;Redis&lt;/li&gt;
&lt;li&gt;Cube Store&lt;/li&gt;
&lt;li&gt;An API gateway&lt;/li&gt;
&lt;li&gt;A refresh worker&lt;/li&gt;
&lt;li&gt;A load balancer&lt;/li&gt;
&lt;li&gt;optionally, a VPC configuration&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can mitigate this by using infrastructure as code tools like AWS CloudFormation, Pulumi, or Terraform, and using Kubernetes as a container orchestrator.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MtOyXwhj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/783e7e2c-5205-4914-a96d-acfe3a136e65.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MtOyXwhj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/783e7e2c-5205-4914-a96d-acfe3a136e65.png" alt="https://cubedev-blog-images.s3.us-east-2.amazonaws.com/783e7e2c-5205-4914-a96d-acfe3a136e65.png" width="880" height="508"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#monitoring-and-scaling"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Monitoring and Scaling&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Maintaining application up-time is a serious responsibility. To achieve this with self-hosting, you have to make sure that monitoring is configured for Cube and that you can scale Cube up if there's a spike in traffic.&lt;/p&gt;

&lt;p&gt;With Cube Cloud, both monitoring and auto-scaling are available out-of-the-box.&lt;/p&gt;

&lt;p&gt;You also get query monitoring in the Queries tab in the sidebar. The entire query history is available, including metrics like query result size and time spent, helping you dig into why some queries take longer than others.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8fIJhsYn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/0844659b-c006-4d75-98b8-7984a82fee81.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8fIJhsYn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/0844659b-c006-4d75-98b8-7984a82fee81.png" alt="frame_chrome_mac_light_(72).png" width="880" height="659"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can see application performance metrics in the Metrics tab.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2nkXF5YJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/b6d12fca-de08-46f8-b736-930969e651a4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2nkXF5YJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/b6d12fca-de08-46f8-b736-930969e651a4.png" alt="frame_chrome_mac_light_(73).png" width="880" height="659"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#caching"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Caching&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;A major problem when scaling Cube apps is optimizing pre-aggregation build times. Similarly, when trying to determine the status of your pre-aggregations; you need to know whether they're built or not and when they were built.&lt;/p&gt;

&lt;p&gt;In Cube Cloud, we can check out the Pre-Aggregations tab to see the status of all pre-aggregations in your Cube deployment, including whether they're building or not and even which of the partitions, if any, are being refreshed.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hqR0wlUG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/7f43d038-6d95-4e91-bd31-90b8a6feca2c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hqR0wlUG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/7f43d038-6d95-4e91-bd31-90b8a6feca2c.png" alt="frame_chrome_mac_light_(74).png" width="880" height="659"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In production, these pre-aggregations are kept up-to-date automatically for you.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#development-tools"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Development Tools&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;You get GitHub integration with Cube Cloud. Your deployment can watch a GitHub repository for changes and deploy updates. Connect a deployment to GitHub from the Settings page and you're set.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ab5wLM-J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/3b1bf669-7c95-4746-baa0-951bfe2e6f60.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ab5wLM-J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/3b1bf669-7c95-4746-baa0-951bfe2e6f60.png" alt="frame_chrome_mac_light_(75).png" width="880" height="659"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can also make changes directly in the Cube Cloud console by entering Development Mode.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fb79Si3t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/3c74ca7f-58b7-44c4-9e88-d719ab93b325.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fb79Si3t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/3c74ca7f-58b7-44c4-9e88-d719ab93b325.png" alt="frame_chrome_mac_light_(76).png" width="880" height="659"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You get a dedicated Git branch, complete with a personal API URL and separate pre-aggregations.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#support"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Support&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;If you have paying customers, having paid support is a lifesaver. If something breaks, and you need help fixing it, having someone to call is a lifesaver. Cube Cloud comes with support on the Enterprise plan, so you can ping us whenever you hit a snag!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sign-up-to-cube-cloud"&gt;
  &lt;/a&gt;
  Sign Up to Cube Cloud
&lt;/h2&gt;

&lt;p&gt;Signing up is simple and secure because you can also choose to sign up with your GitHub account. Here's how you sign up.&lt;/p&gt;

&lt;p&gt;Jump over to the &lt;a href="https://cubecloud.dev/auth/signup"&gt;sign-up page&lt;/a&gt; and enter your email.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nnkZWiVE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/651bf8cb-fedf-4f21-bac4-6879ff91633b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nnkZWiVE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/651bf8cb-fedf-4f21-bac4-6879ff91633b.png" alt="frame_chrome_mac_light_(57).png" width="880" height="659"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once you click &lt;code&gt;Sign Up&lt;/code&gt;, you'll receive an email from us to set a password.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--K0URXdup--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/376a65f0-d828-4c10-a4b3-c56f8a86e5a9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--K0URXdup--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/376a65f0-d828-4c10-a4b3-c56f8a86e5a9.png" alt="frame_chrome_mac_light_(58).png" width="880" height="659"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next, you select a subdomain for your Cube Cloud account.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UKpeNJvO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/eab870f8-a430-4048-84d4-38e0c7238e08.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UKpeNJvO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/eab870f8-a430-4048-84d4-38e0c7238e08.png" alt="frame_chrome_mac_light_(59).png" width="880" height="659"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;With all this out of the way, you can finally start creating Cube Deployments.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Aeb0H2Yc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/4c4c987d-dfa1-4591-8464-a3ec76a2f820.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Aeb0H2Yc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/4c4c987d-dfa1-4591-8464-a3ec76a2f820.png" alt="frame_chrome_mac_light_(60).png" width="880" height="659"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let me explain how to create a deployment.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-a-deployment-in-cube-cloud"&gt;
  &lt;/a&gt;
  Create a Deployment in Cube Cloud
&lt;/h2&gt;

&lt;p&gt;Creating a deployment consists of four main steps.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create Deployment&lt;/li&gt;
&lt;li&gt;Set Up the Cube App&lt;/li&gt;
&lt;li&gt;Set Up the Database Connection&lt;/li&gt;
&lt;li&gt;Generate the Data Schema&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Let me break it down into even more detail.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-1-create-deployment"&gt;
  &lt;/a&gt;
  Step 1 - Create Deployment
&lt;/h3&gt;

&lt;p&gt;The first step of creating a Cube App from scratch in Cube Cloud is to create a deployment.&lt;/p&gt;

&lt;p&gt;Once you click the &lt;code&gt;create deployment&lt;/code&gt; button it'll open up the first step in the deployment creation UI flow.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1D7N9P-b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/8edd42ca-a308-4cc5-a358-fb6324a28298.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1D7N9P-b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/8edd42ca-a308-4cc5-a358-fb6324a28298.png" alt="frame_chrome_mac_light_(61).png" width="880" height="659"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here you choose what name to give your deployment and pick the cloud provider and region. The reason why to choose either AWS or GCP is based on where you're hosting your own infrastructure and apps.&lt;/p&gt;

&lt;p&gt;Let me give you an example. Let's say you have a metrics dashboard that needs to consume data on &lt;code&gt;us-east-1&lt;/code&gt; on AWS. Using the same AWS region to host the Cube deployment as where you are hosting this metrics dashboard will reduce the network delay and latency between Cube and your app.&lt;/p&gt;

&lt;p&gt;Which database you're using is also important when choosing a cloud provider and region. If you have data in BigQuery then you should not choose AWS. If you're using AWS Redshift then vice-versa applies.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#need-a-dedicated-vpc"&gt;
  &lt;/a&gt;
  Need a Dedicated VPC?
&lt;/h3&gt;

&lt;p&gt;A reason for using a VPC is if you expect high throughput of up to and above millions of requests per day. Using a VPC will give you a dedicated managed infrastructure that is ready to serve such high numbers of users.&lt;/p&gt;

&lt;p&gt;Additionally, if your company required security compliance like SOC2, using a VPC is mandatory.&lt;/p&gt;

&lt;p&gt;The best part is that a VPC is readily available for you if you need it. All you need to do is to reach out to us and ask for it. Super simple!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hnP0WDad--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/972709c6-6911-4c9e-910c-f316120698d7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hnP0WDad--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/972709c6-6911-4c9e-910c-f316120698d7.png" alt="frame_chrome_mac_light_(62).png" width="880" height="659"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But, back to business. Let's get back to creating the Cube app deployment. After selecting a cloud provider and region, add a name for your deployment and click next.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0Cfrtq9G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/f2455031-14b9-49ca-b449-eb113a8deda8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0Cfrtq9G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/f2455031-14b9-49ca-b449-eb113a8deda8.png" alt="frame_chrome_mac_light_(63).png" width="880" height="659"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-2-set-up-the-cube-app"&gt;
  &lt;/a&gt;
  Step 2 - Set Up the Cube App
&lt;/h3&gt;

&lt;p&gt;Next up, the second step in creating a Cube App from scratch in Cube Cloud is to click the &lt;code&gt;+ create&lt;/code&gt; button.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YsjwbVWC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/0fe2ae4e-d596-499d-b26b-5f62f5780683.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YsjwbVWC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/0fe2ae4e-d596-499d-b26b-5f62f5780683.png" alt="frame_chrome_mac_light_(64).png" width="880" height="659"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But, before moving on, I want to ask if you already have a Cube app? If you do, please jump over to my co-worker Hassan's &lt;a href="https://cube.dev/blog/migrating-from-self-hosted-to-cube-cloud/?utm_source=dev-to&amp;amp;utm_medium=post&amp;amp;utm_campaign=starting-a-new-cube-app-in-cube-cloud"&gt;guide on migrating a Cube app&lt;/a&gt; to Cube Cloud.&lt;/p&gt;

&lt;p&gt;In this tutorial, I want to stick to creating a Cube App from scratch, so let me continue where I left off.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-3-set-up-the-database-connection"&gt;
  &lt;/a&gt;
  Step 3 - Set Up the Database Connection
&lt;/h3&gt;

&lt;p&gt;After selecting the &lt;code&gt;+ Create&lt;/code&gt; button and proceeding to create a Cube app from scratch, you'll be prompted to select a database type. This lets you choose from dozens of the most popular databases available on the market today.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wR5gBfpv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/81442713-0261-424c-bb09-17b1601c10e0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wR5gBfpv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/81442713-0261-424c-bb09-17b1601c10e0.png" alt="frame_chrome_mac_light_(67).png" width="880" height="659"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I'll proceed with selecting PostgreSQL to hook up a sample e-commerce database to show you how simple it really is. The values I'll use are:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="err"&gt;Hostname&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="err"&gt;demo-db.cube.dev&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="err"&gt;Port&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="mi"&gt;5432&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="err"&gt;Database&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="err"&gt;ecom&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="err"&gt;Username&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="err"&gt;cube&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="err"&gt;Password&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="mi"&gt;12345&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the UI it'll look exactly like the image below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ke80HbA4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/a0c30616-0a8e-4c85-8f79-4f9ba849eb63.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ke80HbA4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/a0c30616-0a8e-4c85-8f79-4f9ba849eb63.png" alt="frame_chrome_mac_light_(68).png" width="880" height="800"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once you click the &lt;code&gt;Apply&lt;/code&gt; button, Cube Cloud will test if the connection was successful, and proceed to the next step.&lt;/p&gt;

&lt;p&gt;If you run into issues here, make sure to allow the Cube Cloud IPs to access your database. This means you need to open up your firewall to these IPs. In the case of AWS, this would mean adding a security group with allowed IPs.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-4-generate-the-data-schema"&gt;
  &lt;/a&gt;
  Step 4 - Generate the Data Schema
&lt;/h3&gt;

&lt;p&gt;Step four in this case consists of generating a data schema. Start by selecting the database tables to generate the data schema from, then hit &lt;code&gt;generate&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QKi2NFF5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/a959643f-4e0f-4f62-9dc9-4d48a0405002.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QKi2NFF5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/a959643f-4e0f-4f62-9dc9-4d48a0405002.png" alt="frame_chrome_mac_light_(69).png" width="880" height="659"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Cube Cloud will generate the data schema and spin up your Cube deployment. With this, you're done. You've created a Cube deployment, configured a database connection, and generated a data schema!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Dya8mSjr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/4cd2de24-098f-465e-b7ee-dbadd3e82ab9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Dya8mSjr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/4cd2de24-098f-465e-b7ee-dbadd3e82ab9.png" alt="frame_chrome_mac_light_(70).png" width="880" height="659"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You're ready for the last step, running queries in the Playground.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#running-queries-in-cube-clouds-playground"&gt;
  &lt;/a&gt;
  Running Queries in Cube Cloud's Playground
&lt;/h3&gt;

&lt;p&gt;By clicking on the Playground in the left nav you'll open the Playground UI.&lt;/p&gt;

&lt;p&gt;Here you can test queries by selecting from all the measures and dimensions in the data schema. This lets you test different dashboards and visualizations for when you want to build your own metrics dashboards.&lt;/p&gt;

&lt;p&gt;The image below showcases a bar chart with an &lt;strong&gt;&lt;code&gt;Orders Count&lt;/code&gt; measure&lt;/strong&gt;, an &lt;code&gt;**Orders Status&lt;/code&gt; dimension*&lt;em&gt;, and an `&lt;/em&gt;&lt;em&gt;Orders Created At` time dimension&lt;/em&gt;* &lt;strong&gt;grouped by day for the current month&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZsexaIh7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/56faf279-2d8c-4d98-97d3-cb960ea5413a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZsexaIh7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cubedev-blog-images.s3.us-east-2.amazonaws.com/56faf279-2d8c-4d98-97d3-cb960ea5413a.png" alt="frame_chrome_mac_light_(71).png" width="880" height="777"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can use the playground as a testing ground for all queries you want to run in your own dashboards. The playground will also display how long a query took, showing you the response time above the chart itself.&lt;/p&gt;

&lt;p&gt;That's it! You've finished creating a Cube Deployment on Cube Cloud.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-about-query-acceleration"&gt;
  &lt;/a&gt;
  What About Query Acceleration?
&lt;/h3&gt;

&lt;p&gt;Congrats! You've configured a Cube app in Cube Cloud. You're ready to add pre-aggregations and run the deployment in cluster mode. We have detailed tutorials explaining these concepts for you to read &lt;a href="https://cube.dev/blog/cube-cloud-deep-dive-mastering-pre-aggregations/?utm_source=dev-to&amp;amp;utm_medium=post&amp;amp;utm_campaign=starting-a-new-cube-app-in-cube-cloud"&gt;here&lt;/a&gt;. You can follow along with the tutorial to add pre-aggregations to your data yourself.&lt;/p&gt;

&lt;p&gt;We at Cube also hosted a &lt;a href="https://www.youtube.com/watch?v=1_BP3B_wbec"&gt;workshop about pre-aggregations&lt;/a&gt; that you can take a look at to learn more about query acceleration.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;Deploying a Cube App on Cube Cloud consists of four steps. First, select the cloud provider, region, and name. Second, select creating a Cube app from scratch, Third, connect a database. Fourth, generate a data schema.&lt;/p&gt;

&lt;p&gt;You should keep in mind there are three ways of deploying Cube apps in Cube Cloud. You can create one from scratch, with the Cube CLI, or with the GitHub integration.&lt;/p&gt;

&lt;p&gt;If you choose to use Cube Cloud, you'll get the added benefit of getting managed infrastructure that auto-scales to your needs. Cube Cloud also has some added features compared to self-hosting Cube, including query performance analysis, query response times, APM, and pre-aggregations enabled by default.&lt;/p&gt;

&lt;p&gt;I hope you end up trying out Cube Cloud because you'll save time and energy by not managing infra and just focusing on building product value.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://cube.dev/cloud?utm_source=dev-to&amp;amp;utm_medium=post&amp;amp;utm_campaign=starting-a-new-cube-app-in-cube-cloud"&gt;Sign up to Cube Cloud here&lt;/a&gt; to try it out for yourself.&lt;/p&gt;

&lt;p&gt;Until next time, stay curious, and have fun coding. Also, feel free to &lt;a href="https://github.com/cube-js/cube.js"&gt;leave Cube a ⭐ on GitHub&lt;/a&gt; if you liked this article. ✌️&lt;/p&gt;

</description>
      <category>tutorial</category>
      <category>opensource</category>
      <category>analytics</category>
      <category>bigdata</category>
    </item>
    <item>
      <title>The Quest for ReactiveScript</title>
      <author>Ryan Carniato</author>
      <pubDate>Tue, 23 Nov 2021 15:07:50 +0000</pubDate>
      <link>https://dev.to/this-is-learning/the-quest-for-reactivescript-3ka3</link>
      <guid>https://dev.to/this-is-learning/the-quest-for-reactivescript-3ka3</guid>
      <description>&lt;p&gt;This article isn't going to teach you about the latest trends in frontend development. Or look in detail into the way to get the most performance out of your website. Instead I want to write about something that I've been playing with in my head for the past year but never can find the time to work on. Reactivity as general purpose language.&lt;/p&gt;

&lt;p&gt;If you want someone to blame. Blame Jay Phelps (I kid). After a demo I made showing off the power of fine-grained reactivity he got it in my head that we should look at this more as a generalized language. I was content in my DSL bubble, thinking of ways we can make building frameworks easier, but he challenged me to think about it more generally.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--whxXNUsT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1449409108671610883/AQdDtcda_normal.jpg" alt="👉😎👉 Jay Phelps profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        👉😎👉 Jay Phelps
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @_jayphelps
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      &lt;a href="https://twitter.com/RyanCarniato"&gt;@RyanCarniato&lt;/a&gt; Let’s chat some time. I’ve done an excessive amount of research on this topic in the context of languages (eg Lucid, FRTime, etc) and would love to learn more from you as well and swap opinions.
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      04:11 AM - 24 Jan 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1353193651887857665" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1353193651887857665" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1353193651887857665" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;I've been meaning to take him up on his offer, but in the meantime what I can do is write about it. Because the last year I've done a lot of searching and thinking into how I'd approach this. And thanks to more recent conversations around Svelte, Vue Ref Sugar, and my work on Marko etc.. this seems as good time as ever to share what I've learned. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-destiny-operator"&gt;
  &lt;/a&gt;
  The Destiny Operator
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DXxmZHzZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yc372sbywl4dim12mwc3.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DXxmZHzZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yc372sbywl4dim12mwc3.jpeg" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;One of the best introductions I've ever read to reactivity, after the fact is &lt;a href="https://paulstovell.com/reactive-programming/"&gt;What is Reactive Programming?&lt;/a&gt;. I can't promise it's the best introduction for the uninitiated. But it introduced reactivity in a very simple way. That reactivity is when an equation which holds true even after its values change. If &lt;code&gt;a = b + c&lt;/code&gt;, then it is reactive if &lt;code&gt;a&lt;/code&gt; still reflects this sum after &lt;code&gt;b&lt;/code&gt; or &lt;code&gt;c&lt;/code&gt; updates. &lt;/p&gt;

&lt;p&gt;This article proposes the use the "Destiny Operator" &lt;code&gt;&amp;lt;=&lt;/code&gt; to denote this relationship:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;Assert&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;AreEqual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;21&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A simple addition to the language but capable of doing so much. Most importantly it highlights the difference between a reactive declaration and an assignment. It makes no sense for &lt;code&gt;b&lt;/code&gt; to ever be re-assigned as then its relationship of always being one larger than &lt;code&gt;a&lt;/code&gt; wouldn't hold. Whereas &lt;code&gt;a&lt;/code&gt; needs to be re-assigned or this system isn't really doing much.&lt;/p&gt;

&lt;p&gt;This is just the start. In many ways this has been seen to be the ideal. Reality is a bit more complicated than that. We will return to the "Destiny Operator" a bit later.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#identifiers"&gt;
  &lt;/a&gt;
  Identifiers
&lt;/h2&gt;

&lt;p&gt;If you've ever used a fine-grained reactive library in JavaScript you've seen the common pattern of using function getters/setters. They might be hidden behind proxies but at the core there is an accessor so that values can be tracked and subscriptions made.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setValue&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createSignal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// log the value now and whenever it changes&lt;/span&gt;
&lt;span class="nx"&gt;createEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;()));&lt;/span&gt;

&lt;span class="nx"&gt;setValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// set a new value&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In fact I'd say the majority of frontend JavaScript frameworks have fallen into this 3 part reactive API/language:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Reactive State (Signal, Observable, Ref)&lt;/li&gt;
&lt;li&gt;Derived Values (Memo, Computed )&lt;/li&gt;
&lt;li&gt;Side Effects (Effect, Watch, Reaction, Autorun)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The example above uses Solid but you should be able to picture that pretty easily in React, Mobx, Vue, Svelte etc. They all look very similar.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;For a more in detailed introduction check out &lt;a href="https://dev.to/ryansolid/a-hands-on-introduction-to-fine-grained-reactivity-3ndf"&gt;A Hands-on Introduction to Fine-Grained Reactivity&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The problem is no matter what we do with fine-grained reactivity at runtime there is extra syntax. There is no way at runtime to just have &lt;code&gt;value&lt;/code&gt; be a value and be reactive. It's going to be &lt;code&gt;value()&lt;/code&gt; or &lt;code&gt;something.value&lt;/code&gt; or &lt;code&gt;value.something&lt;/code&gt;. A small ergonomic detail but one that there is a desire to solve.&lt;/p&gt;

&lt;p&gt;The simplest compiler aided approach is decorate the variable identifiers to let it know it should compile to function calls. I first saw this in the framework &lt;a href="https://github.com/ismail-codar/fidan"&gt;Fidan&lt;/a&gt; and later in some Babel plugins the community had created for &lt;a href="https://solidjs.com"&gt;Solid&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;value$&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createSignal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// log the value now and whenever it changes&lt;/span&gt;
&lt;span class="nx"&gt;createEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value$&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

&lt;span class="nx"&gt;value$&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// set a new value&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What's great about this is no matter the source we can use this syntax sugar:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;value$&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createCustomReactiveThing&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;However, now our signal is always treated as a value. How would we pass it outside of this module context and retain reactivity? Maybe we reference it without the &lt;code&gt;$&lt;/code&gt;? Do we pass it in a thunk &lt;code&gt;() =&amp;gt; value$&lt;/code&gt;, do we invent a syntax for this? Do we have control over if the reactive value is readonly? As shown above derived reactive values probably should be. I actually saw a version of this where single &lt;code&gt;$&lt;/code&gt; meant mutable and &lt;code&gt;$$&lt;/code&gt; meant readonly.&lt;/p&gt;

&lt;p&gt;The crux though is this syntax doesn't simplify the mental model. You need to be aware exactly what is being passed around and what you are receiving. You are saving typing some characters, possibly as little as 1 as the shortest way to express reactivity without compiler tricks is 2 characters(&lt;code&gt;()&lt;/code&gt; or &lt;code&gt;_.v&lt;/code&gt;). It's hard for me to consider adding all this is worth it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#keywords-decorators-labels"&gt;
  &lt;/a&gt;
  Keywords, Decorators, Labels
&lt;/h2&gt;

&lt;p&gt;So how to do this better? Well what if reactivity was a keyword, decorator, or label? MobX has been doing this for ages with decorators on classes but &lt;a href="https://svelte.dev"&gt;Svelte&lt;/a&gt; has taken this to a whole new level.&lt;/p&gt;

&lt;p&gt;The basic idea is:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;signal&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// log the value now and whenever it changes&lt;/span&gt;
&lt;span class="nl"&gt;effect&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// set a new value&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Svelte realized that if it treated every variable as a Signal it could reduce that to:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// log the value now and whenever it changes&lt;/span&gt;
&lt;span class="nl"&gt;$&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// set a new value&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If this draws similarities to the "Destiny Operator" it should. Svelte's &lt;code&gt;$:&lt;/code&gt; label is really approaching it. They recognized the "Destiny Operator" was insufficient as you don't only have reactive derivations but side effects like this &lt;code&gt;console.log&lt;/code&gt;. In so you can use &lt;code&gt;$:&lt;/code&gt; both define variables with reactive declarations like the "Destiny Operator" as well as reactive effectful expressions.&lt;/p&gt;

&lt;p&gt;So we're done right. Well no. There are huge limitations of this approach. How does reactivity leave this module? There is no way to get a reference to the reactive signal itself; just its value.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: Svelte does have 2 way binding syntax and &lt;code&gt;export let&lt;/code&gt; as a way to do parent to child passing of reactivity. But in general you can't just export or import a function and have it reactive without using an auxiliary reactive system like Svelte Stores. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;How do we know what to do with:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;createCustomReactiveThing&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;somewhere-else&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createCustomReactiveThing&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Is it reactive? Can it be assigned? We could introduce a symbol on our identifiers for this case, but we are back to where we were with the last solution. What if you wanted to extract out a derivation like &lt;code&gt;doubleValue&lt;/code&gt; how would the template know what to do with it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// can this&lt;/span&gt;
&lt;span class="nl"&gt;$&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;doubleValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// become&lt;/span&gt;
&lt;span class="nx"&gt;doubleValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Not intuitively. We have a keyword(label) for it and it doesn't transpose.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#function-decoration"&gt;
  &lt;/a&gt;
  Function Decoration
&lt;/h2&gt;

&lt;p&gt;Well composition is king. Probably the single most important part of &lt;a href="https://reactjs.org"&gt;React&lt;/a&gt;'s success and for many of us no composition is a non-starter. Svelte has composition and extensibility through its stores, but the focus here today is in the reactive language where it falls short.&lt;/p&gt;

&lt;p&gt;There is another approach that I first came across talking with the &lt;a href="https://markojs.com"&gt;Marko&lt;/a&gt; team almost 2 years ago. Marko is an interesting language because it heavily values markup syntax, and the maintainers had basically resolved that they wanted to bring their reactivity into their tags.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;let&lt;/span&gt;&lt;span class="err"&gt;/&lt;/span&gt;&lt;span class="na"&gt;value = &lt;/span&gt;&lt;span class="s"&gt;0&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;&amp;lt;!-- log the value now and whenever it changes --&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;effect&lt;/span&gt;&lt;span class="err"&gt;()&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt; &lt;span class="na"&gt;console.log&lt;/span&gt;&lt;span class="err"&gt;(&lt;/span&gt;&lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="err"&gt;);&lt;/span&gt; &lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

value = 10; // set a new value
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Definitely foreign on the first look but by using tags they'd basically solved Svelte's problem. You knew these were reactive. It is the syntax version of something similar to React's convention that &lt;code&gt;use____&lt;/code&gt; is a hook.&lt;/p&gt;

&lt;p&gt;Interestingly enough, about a year later Evan You independently came to the same conclusion with &lt;a href="https://github.com/vuejs/rfcs/discussions/369"&gt;version 2 of his Ref Sugar API&lt;/a&gt; for &lt;a href="https://vuejs.org"&gt;Vue&lt;/a&gt; 3. Version 1 was labels like above but he realized the shortcomings of that approach and ended up with:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;$ref&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;// log the value now and whenever it changes&lt;/span&gt;
&lt;span class="nx"&gt;watch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// set a new value&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Well it's almost the same thing as the Marko example. However, interestingly, this does highlight one thing. Since Vue is using this as a bit of a syntax sugar like the identifier example earlier it needs to tell the compiler still when it wants to pass by reference instead of by value, and there is the &lt;code&gt;$$()&lt;/code&gt; function for that.&lt;/p&gt;

&lt;p&gt;Notice how &lt;code&gt;watch&lt;/code&gt; here is just an ordinary function. It couldn't know how to handle &lt;code&gt;value&lt;/code&gt; any differently. If left alone it would compile to &lt;code&gt;watch(value.value, v =&amp;gt; ... )&lt;/code&gt;, which would do the reactive access too soon outside a tracking scope.&lt;/p&gt;

&lt;p&gt;There are some comments in the proposal asking for a &lt;code&gt;$watch&lt;/code&gt; to handle exactly that but I suspect they won't pass because that is specific behavior that &lt;code&gt;$(function)&lt;/code&gt; doesn't have. Vue's goal is to be composable, so having &lt;code&gt;$watch&lt;/code&gt; be special isn't acceptable. That makes it basically a keyword, as &lt;code&gt;$mywatch&lt;/code&gt; wouldn't be known to be given the same behavior, unless we added another syntax or made more general changes to behavior.&lt;/p&gt;

&lt;p&gt;In fact none of the solutions, short of Marko's tags, handle that case without extra syntax. Marko can leverage the knowledge of being a tag to make some assumptions you can't make about an ordinary function. And being tags we inadvertently stumbled on what I believe might be the actual solution.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#rethinking-reactive-language"&gt;
  &lt;/a&gt;
  Rethinking Reactive Language
&lt;/h2&gt;

&lt;p&gt;All the approaches suffer from the same challenge. How do we preserve reactivity? We are always worried about losing it, and we are forced into this pass by reference vs pass by value discussion. But that is because we are living in an imperative world, and we are a declarative &lt;del&gt;girl&lt;/del&gt; paradigm.&lt;/p&gt;

&lt;p&gt;Let me elaborate a bit. Marko uses a &lt;code&gt;&amp;lt;const&amp;gt;&lt;/code&gt; tag for declaring reactive derivations. Our "Destiny Operator" so to speak. This sometimes confuses people because derived values can change so how is it "const"? Well it never gets re-assigned and the expressions holds for all time.  &lt;/p&gt;

&lt;p&gt;When I was trying to explain this to someone new, Michael Rawlings, clarified it was the &lt;code&gt;let&lt;/code&gt;(Signal) that was special not the &lt;code&gt;const&lt;/code&gt;(Derivation). Every expression in our templates act like a derivation, every attribute binding, component prop. Our &lt;code&gt;&amp;lt;const value=(x * 2)&amp;gt;&lt;/code&gt; is no different than a &lt;code&gt;&amp;lt;div title=(name + description)&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Which got me thinking what if we've been looking at this all backwards. What if expressions were reactive by default and instead we needed to denote the imperative escape hatches? Instead of a "Destiny Operator" we'd need a side-effect operator.&lt;/p&gt;

&lt;p&gt;This seems crazy because would it be intuitive to change the semantic meaning of JavaScript yet keep the same syntax. I assumed no, but I mean we've already seen this done to great success. Svelte's scripts are nothing like "plain JavaScript" yet people seem to be accepting of those and some even advertising them as such.&lt;/p&gt;

&lt;p&gt;I did poll a while back and while not conclusive the results suggested many developers are much more sensitive to syntax than semantics.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--U-DExnQw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hjra1zcz9tfswdjynefi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--U-DExnQw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hjra1zcz9tfswdjynefi.png" alt="Image description" width="880" height="378"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So the question is can we do something using the existing syntax of JavaScript and keep all the tooling advantages(even TypeScript)? I mean completely mess with how it executes in the way things like Svelte, React Hooks, or Solid's JSX defies expectations but do so with pure JavaScript syntax and in way people can make sense of. Well, we can try.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#designing-reactivescript"&gt;
  &lt;/a&gt;
  Designing ReactiveScript
&lt;/h2&gt;

&lt;p&gt;For all of my, what might sound like criticism, over decisions made in the various approaches above there is a lot of great prior work to tap into. I think Svelte today is a good starting point as it has simple syntax and already distorts the expected semantics. Taking the example from above picture we want to hoist the &lt;code&gt;console.log&lt;/code&gt; into another function (maybe imported from another module). This isn't something Svelte does today but maybe something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;$&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// log the value now and whenever it changes&lt;/span&gt;
&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// set a new value&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For the sake of visualizing how things actually behave I'm going to "compile" these down to Solid's explicit runtime syntax. Although this being runtime based isn't a requirement.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;createEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setValue&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createSignal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// log the value now and whenever it changes&lt;/span&gt;
&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// or log(() =&amp;gt; value())&lt;/span&gt;

&lt;span class="nx"&gt;setValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// set a new value&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;All function arguments get wrapped in functions (or pass the function straight through). All local scoped variables get called as functions.&lt;/p&gt;

&lt;p&gt;How about if we want to create a derived value? In our new reactive world that might look like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;doubleValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// log double the value now and whenever it value changes&lt;/span&gt;
&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;doubleValue&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// set a new value&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Or we could even hoist it out:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;doubler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;doubleValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;doubler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Which could compile to:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;doubler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setValue&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createSignal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;doubleValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;doubler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You might be scratching your head at this example because well does anything ever run? Well it doesn't unless it needs to. As in it is used in a side effect denoted by &lt;code&gt;$:&lt;/code&gt;. We have a lazy evaluated language that only runs code when absolutely needed. &lt;/p&gt;

&lt;p&gt;Our derived value is still assigned to a &lt;code&gt;const&lt;/code&gt; so it remains consistent. No need for new syntax to know exactly what its behavior is. In a sense reactive values don't escape their local scope like in Svelte from a mutation standpoint but they do from a tracking standpoint. The retains clear control while affording the convenience of local mutation.&lt;/p&gt;

&lt;p&gt;This every expression is reactive can extend to language primitives as well. In a similar way to how Solid transforms ternaries in JSX we could look at things like &lt;code&gt;if&lt;/code&gt; and &lt;code&gt;for&lt;/code&gt; statements and compile them accordingly.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Small number&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Large number&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// logs "Small number"&lt;/span&gt;

&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// logs "Large number"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This code would end up running both branches of the &lt;code&gt;if&lt;/code&gt; once the condition changes. And those side effects don't need to &lt;code&gt;console.logs&lt;/code&gt; at all and could be anything like maybe JSX.&lt;/p&gt;

&lt;p&gt;What if you could write components like this and have it work with minimal executing fine-grained reactivity.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;visible&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;firstName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;lastName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;visible&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Hidden&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;;
&lt;/span&gt;
  &lt;span class="c1"&gt;// only do this calculation when visible&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fullName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;firstName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt; &lt;span class="nx"&gt;onInput&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;firstName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt; &lt;span class="nx"&gt;onInput&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;firstName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;fullName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#just-a-taste"&gt;
  &lt;/a&gt;
  Just a taste
&lt;/h2&gt;

&lt;p&gt;Honestly, there is a ton of details to work through. Like loops for example. We naturally want a &lt;code&gt;.map&lt;/code&gt; operator rather than a &lt;code&gt;for&lt;/code&gt; in this paradigm so how do we reconcile that? However what this has going for it is, it is analyzable and the pattern applied consistent.&lt;/p&gt;

&lt;p&gt;Performance of such a system might require a lot more consideration. I think this actually has more potential with additional analysis and compile time approaches. Looking at what &lt;code&gt;let&lt;/code&gt;/&lt;code&gt;const&lt;/code&gt; are actually stateful could inform what to wrap or not. And once on that path, well, this goes many places. It could be used as a tool for things like partial hydration to know exactly what code actually can update and be sent to the browser.&lt;/p&gt;

&lt;p&gt;Honestly this is just an idea for now. And I have a lot more thoughts on how this could function. But with all the recent discussions I thought someone might be interested in exploring this and I encourage them to reach out and discuss!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>reactivity</category>
    </item>
  </channel>
</rss>
