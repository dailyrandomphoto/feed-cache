<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How you can use WebSockets with Flutter</title>
      <author>vibalijoshi</author>
      <pubDate>Tue, 12 Oct 2021 19:43:41 +0000</pubDate>
      <link>https://dev.to/vibalijoshi/how-you-can-use-websockets-with-flutter-ipn</link>
      <guid>https://dev.to/vibalijoshi/how-you-can-use-websockets-with-flutter-ipn</guid>
      <description>&lt;p&gt;WebSockets are clearly taking the industry by storm. With Google's Flutter framework on the rise too, it would give you a big boost knowing how to integrate both of these technologies. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-websockets"&gt;
  &lt;/a&gt;
  What are WebSockets
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mYdPtUO8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/enqzo6avfi1bykppcadf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mYdPtUO8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/enqzo6avfi1bykppcadf.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;WebSockets represent a long-awaited evolution in the client/server web technology. It defines a fully duplex bi-directional communication channel between the client and server. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Related: &lt;br&gt;
&lt;a href="https://www.pcmag.com/encyclopedia/term/clientserver#:~:text=An%20architecture%20in%20which%20the,WAN%29%20such%20as%20the%20Internet."&gt;What do you mean by client and a server?&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In simple words, once after the initial handshake where the server and the client agree to upgrade to WebSockets, (from HTTP) the client and the server can talk in real time without having to continuously make requests (like loading the page again and again). &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Only the client-side problems of developing a dependable WebSocket-based solution for realtime Flutter apps are discussed in this article. On the server side, you must determine which solution you wish to utilise. You can use an open-source library like &lt;a href="https://ably.com/topic/socketio"&gt;Socket.IO&lt;/a&gt; if you haven't already.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-connect-to-a-websocket-server-with-flutter"&gt;
  &lt;/a&gt;
  How to connect to a WebSocket server with Flutter
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#-raw-websocketchannel-endraw-package"&gt;
  &lt;/a&gt;
  &lt;a href="https://pub.dev/packages/web_socket_channel"&gt;&lt;code&gt;web_socket_channel&lt;/code&gt;&lt;/a&gt; package
&lt;/h3&gt;

&lt;p&gt;We will use this package to acquire the tools we need to connect to a WebSocket server. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GyJY2a2j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9y4379cj5cgz0xqr1h7w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GyJY2a2j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9y4379cj5cgz0xqr1h7w.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;web_socket_channel&lt;/code&gt; basically works with the &lt;strong&gt;&lt;em&gt;StreamChannel&lt;/em&gt;&lt;/strong&gt; class, which is an abstract class representing a two-way communication channel (as in the case for WebSockets)&lt;/li&gt;
&lt;li&gt;Each &lt;code&gt;StreamChannel&lt;/code&gt; exposes a &lt;code&gt;Stream&lt;/code&gt; for &lt;strong&gt;receiving data&lt;/strong&gt;. A &lt;code&gt;Stream&lt;/code&gt;  is like a pipe, you put a value on the one end and if there’s a listener on the other end that listener will receive that value.&lt;/li&gt;
&lt;li&gt;It also exposes &lt;code&gt;StreamSink&lt;/code&gt; used to push messages to the server.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In short words, the package allows you to both listen for messages from the server and push messages to the server i.e &lt;strong&gt;&lt;em&gt;fully duplex bi-directional communication channel&lt;/em&gt;&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Installation&lt;/strong&gt;&lt;br&gt;
Follow the installation given here: &lt;br&gt;
&lt;a href="https://pub.dev/packages/web_socket_channel/install"&gt;https://pub.dev/packages/web_socket_channel/install&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#basic-idea"&gt;
  &lt;/a&gt;
  Basic Idea
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--twUS13MF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a36fwmllw3dfmptr35ae.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--twUS13MF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a36fwmllw3dfmptr35ae.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;We'd have a textfield in our app where the user could type a message. The data that we input would be displayed on the screen after pressing a button.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The data displayed comes from the server response, which is an echo server in this case, meaning it sends back what it receives. These servers are used to determine whether or not a connection to a server is successful. Here we would be using them to maintain simplicity for this example. &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here is the boiler plate we will be using:&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#how-to-connect-to-server"&gt;
  &lt;/a&gt;
  How to connect to server
&lt;/h3&gt;

&lt;p&gt;First let us connect to a WebSocket server. As discussed above we will be using an echo webSocket server.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="n"&gt;WebSocketChannel&lt;/span&gt; &lt;span class="n"&gt;channel&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;IOWebSocketChannel&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;connect&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"wss://ws.ifelse.io/"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;WebSocketChannel&lt;/code&gt;: A &lt;em&gt;StreamChannel&lt;/em&gt; (class representing a two-way communication) that communicates over a WebSocket.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;IOWebSocketChannel&lt;/code&gt;: A &lt;a href="https://docs-flutter-io.firebaseapp.com/flutter/package-web_socket_channel_web_socket_channel/WebSocketChannel-class.html"&gt;WebSocketChannel&lt;/a&gt; that communicates using a &lt;code&gt;dart:io&lt;/code&gt;  &lt;a href="https://docs-flutter-io.firebaseapp.com/flutter/dart-io/WebSocket-class.html"&gt;WebSocket&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;IOWebSocketChannel.connect&lt;/code&gt;: Creates a new WebSocket connection and connects to  &lt;code&gt;url&lt;/code&gt;  using  &lt;a href="https://api.dart.dev/stable/2.14.2/dart-io/WebSocket/connect.html"&gt;WebSocket.connect&lt;/a&gt;  and returns a channel that can be used to communicate over the resulting socket. &lt;/li&gt;
&lt;li&gt;Here &lt;code&gt;wss://ws.ifelse.io/&lt;/code&gt; is an echo WebSocket server. Please note that the mostly used echo server &lt;code&gt;ws://echo.websocket.org&lt;/code&gt; is no longer in service. &lt;/li&gt;
&lt;/ul&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#how-to-listen-to-the-server"&gt;
  &lt;/a&gt;
  How to listen to the server
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oUtTbDAY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gx4kcdw8mkh3gtk6jq09.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oUtTbDAY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gx4kcdw8mkh3gtk6jq09.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Now that we’ve established a connection, let us listen to messages from the server.&lt;/li&gt;
&lt;li&gt;After sending a message to the test server, it sends the same message back (echo). &lt;/li&gt;
&lt;li&gt;We will use a  &lt;a href="https://api.flutter.dev/flutter/widgets/StreamBuilder-class.html"&gt;&lt;code&gt;StreamBuilder&lt;/code&gt;&lt;/a&gt;  widget to listen for new messages, and a  &lt;code&gt;Text&lt;/code&gt; widget to display them.&lt;/li&gt;
&lt;li&gt;A StreamBuilder:

&lt;ol&gt;
&lt;li&gt;Can listen to exposed streams.&lt;/li&gt;
&lt;li&gt;Return widgets&lt;/li&gt;
&lt;li&gt;Catch snapshots of got stream information.
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="n"&gt;StreamBuilder&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;  
  &lt;span class="nl"&gt;stream:&lt;/span&gt; &lt;span class="n"&gt;widget&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;channel&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;stream&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;  
  &lt;span class="nl"&gt;builder:&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;snapshot&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;  
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Padding&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;  
      &lt;span class="nl"&gt;padding:&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="n"&gt;EdgeInsets&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;all&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;20.0&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;  
  &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;snapshot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;hasData&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="si"&gt;${snapshot.data}&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s"&gt;''&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;  
  &lt;span class="o"&gt;);&lt;/span&gt;  
  &lt;span class="o"&gt;},&lt;/span&gt;  
&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;Watch &lt;a href="https://youtu.be/MkKEWHfy99Y"&gt;this&lt;/a&gt; video to get a better idea about StreamBuilder:   &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;
  &lt;a href="#how-to-send-data-to-the-server"&gt;
  &lt;/a&gt;
  How to Send data to the server
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uStuBkcp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yq8ec511lodh34sfenkl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uStuBkcp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yq8ec511lodh34sfenkl.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We will add a function &lt;code&gt;sendData()&lt;/code&gt; responsible for sending data to the stream whenever the floating button is pressed.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;sendData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;  
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_controller&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;text&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;isNotEmpty&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;  
    &lt;span class="n"&gt;widget&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;channel&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;sink&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_controller&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;text&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;  
  &lt;span class="o"&gt;}&lt;/span&gt;  
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;channel.sink.add()&lt;/code&gt;: for sending values to the other endpoint of the stream (i.e the server) using the sink property of the WebSocketChannel. &lt;/li&gt;
&lt;li&gt;To make sure we are printing not empty data we add a &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#how-to-close-the-connection"&gt;
  &lt;/a&gt;
  How to close the connection?
&lt;/h3&gt;

&lt;p&gt;Using the close method we can disconnect from the server.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;dispose&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;  
  &lt;span class="n"&gt;widget&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;channel&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;sink&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;close&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;  
 &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;dispose&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;  
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#final-code"&gt;
  &lt;/a&gt;
  Final Code
&lt;/h3&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;p&gt;If you successfully connected to the server then you would see this on the emulator. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--le92O2SX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u8q2ko45qfno56jsjbui.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--le92O2SX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u8q2ko45qfno56jsjbui.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is how your app should would look at the end:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Fk62VfHS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hzcjif83d03h38382sjw.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Fk62VfHS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hzcjif83d03h38382sjw.gif" alt="Animation"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#where-can-you-use-it"&gt;
  &lt;/a&gt;
  Where can you use it?
&lt;/h3&gt;

&lt;p&gt;The realtime web existed before WebSockets, but it was difficult to accomplish, often slower, and based on hacking web technologies that weren't built for realtime applications. The WebSocket protocol paved the path for a genuinely real-time web and expanded the possibilities of Internet communication.&lt;/p&gt;

&lt;p&gt;USE CASES: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Web-based games&lt;/li&gt;
&lt;li&gt;Chatting Applications&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>flutter</category>
      <category>tutorial</category>
      <category>mobile</category>
      <category>android</category>
    </item>
    <item>
      <title>Top 7 Featured DEV Posts from the Past Week</title>
      <author>Gracie Gregory (she/her)</author>
      <pubDate>Tue, 12 Oct 2021 19:23:15 +0000</pubDate>
      <link>https://dev.to/devteam/top-7-featured-dev-posts-from-the-past-week-mi6</link>
      <guid>https://dev.to/devteam/top-7-featured-dev-posts-from-the-past-week-mi6</guid>
      <description>&lt;p&gt;&lt;em&gt;Every Tuesday we round up the previous week's top posts based on traffic, engagement, and a hint of editorial curation. The typical week starts on Monday and ends on Sunday, but don't worry, we take into account posts that are published later in the week.&lt;/em&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#take-it-away-tech-twitter"&gt;
  &lt;/a&gt;
  Take it away, Tech Twitter!
&lt;/h2&gt;

&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/pascavld"&gt;@pascavld&lt;/a&gt;
 came through with a great reminder that DEV is a great place to share both in-depth articles &lt;em&gt;and&lt;/em&gt; easily digestible resources — like this roundup of favorite recent tech-related tweets. &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/pascavld" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lImPY2jB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--iHDMKTZo--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/385674/cc64d3e9-c7b5-4558-90ea-51d5de9cd14a.jpg" alt="pascavld"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/pascavld/my-10-favorite-tech-twitter-tweets-from-the-past-week-3ab2" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;My 10 favorite Tech Twitter tweets from the past week:&lt;/h2&gt;
      &lt;h3&gt;Pasca Vlad ・ Oct 5 ・ 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#the-pyramid-of-challenge"&gt;
  &lt;/a&gt;
  The Pyramid of Challenge
&lt;/h2&gt;

&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/theworstdev"&gt;@theworstdev&lt;/a&gt;
 says that distributing challenges across a team is one of their personal top priorities when managing. Here's why...&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/theworstdev" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RwlSNxEo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--uIo76ojL--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/59436/e2ebdd84-f763-4874-9384-3c487d854058.jpg" alt="theworstdev"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/theworstdev/distributing-challenge-on-building-highly-engaged-teams-2d3c" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Distributing Challenge: On Building Highly Engaged Teams&lt;/h2&gt;
      &lt;h3&gt;Kurt Kemple ・ Oct 5 ・ 6 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#management&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#teambuilding&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#leadership&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#the-responsibility-of-accessibility"&gt;
  &lt;/a&gt;
  The Responsibility of Accessibility
&lt;/h2&gt;

&lt;p&gt;"Many times, I've tried to find a comprehensive, yet, not too detailed technical first-temps guide to accessibility for the team. So I decided to put together this one." &lt;br&gt;
Great job with this, &lt;a class="mentioned-user" href="https://dev.to/alenanik"&gt;@alenanik&lt;/a&gt;
!&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/alenanik" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WP8EhbGq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--i3zBUTgY--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/135491/54c8854e-48fb-4e49-9379-526061ad7edc.jpg" alt="alenanik"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/alenanik/accessibility-a-gentle-introduction-1398" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;✨ Accessibility: a gentle introduction ✨ &lt;/h2&gt;
      &lt;h3&gt;Alena Nik ・ Oct 7 ・ 5 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#a11y&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#frontend&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#inclusive&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#a-friendly-breakdown-of-rest-amp-api"&gt;
  &lt;/a&gt;
  A friendly breakdown of REST &amp;amp; API
&lt;/h2&gt;

&lt;p&gt;If you caught &lt;a class="mentioned-user" href="https://dev.to/whitep4nth3r"&gt;@whitep4nth3r&lt;/a&gt;
's &lt;a href="https://community.codenewbie.org/whitep4nth3r/on-demand-talk-this-box-will-change-your-life-1jb5"&gt;talk at CodeLand 2021&lt;/a&gt;, you know that they have a knack for breaking down complex topics into fun and engaging lessons. This post is no exception!&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/whitep4nth3r" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gFhxX9YI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--89x-qD1I--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/492757/d64f2cf8-616d-4a73-af1c-17273b0c8545.png" alt="whitep4nth3r"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/whitep4nth3r/what-is-a-rest-api-51h" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;What is a REST API?&lt;/h2&gt;
      &lt;h3&gt;Salma Alam-Naylor ・ Oct 5 ・ 7 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#codenewbie&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#api&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#informed-vsc-opinions"&gt;
  &lt;/a&gt;
  (Informed) VSC Opinions
&lt;/h2&gt;

&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/neer17"&gt;@neer17&lt;/a&gt;
's hot takes on Visual Studio Code may or may not accord with your own thoughts. Either way, this post is worth a read!&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/neer17" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--49K8sxmf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--krlM6unm--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/591905/5aaa876f-96ba-443c-8a3b-48a7ce17f0f7.jpeg" alt="neer17"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/neer17/opinionated-guide-on-tweaking-vs-code-for-productivity-1o53" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Opinionated guide on tweaking VS Code for productivity&lt;/h2&gt;
      &lt;h3&gt;Neeraj Sewani ・ Oct 6 ・ 5 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#vscode&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#productivity&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#aria-first-development-approach"&gt;
  &lt;/a&gt;
  ARIA First Development Approach
&lt;/h2&gt;

&lt;p&gt;"In order to understand the tangled web of ARIA that is being seen in web development," says &lt;a class="mentioned-user" href="https://dev.to/steady5063"&gt;@steady5063&lt;/a&gt;
 "we must first understand the first rule of ARIA."&lt;/p&gt;

&lt;p&gt;Let's do it! &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/steady5063" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BdwDBszY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--FBhoIlZl--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/595171/c35104f3-1dc2-4747-94ab-88dd5e9574b3.png" alt="steady5063"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/steady5063/a-tangled-web-of-aria-50nk" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;A Tangled Web of ARIA&lt;/h2&gt;
      &lt;h3&gt;Mark Steadman ・ Oct 9 ・ 5 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#a11y&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#game-on"&gt;
  &lt;/a&gt;
  Game on
&lt;/h2&gt;

&lt;p&gt;Video games are often what spark a software developer's interest in the field but the path of game development is often shrouded in mystery and misinformation. &lt;a class="mentioned-user" href="https://dev.to/unitybuddy"&gt;@unitybuddy&lt;/a&gt;
 is taking steps to change that with this article.&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/unitybuddy" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NvRSC38G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--DO5OoUcD--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/591960/6633f01a-43b1-4df8-bfe2-1e05cb4587b8.png" alt="unitybuddy"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/unitybuddy/become-a-game-designer-step-by-step-guide-90a" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Become a Game Designer: Step by Step Guide&lt;/h2&gt;
      &lt;h3&gt;Mr. Unity Buddy ・ Oct 8 ・ 8 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#gamedev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;&lt;em&gt;That's it for our weekly wrap up! Keep an eye on dev.to this week for daily content and discussions...and if you miss anything, we'll be sure to recap it next Tuesday!&lt;/em&gt;&lt;/p&gt;

</description>
      <category>icymi</category>
    </item>
    <item>
      <title>Colorize your CLI output in Node.js</title>
      <author>coder4life</author>
      <pubDate>Tue, 12 Oct 2021 18:31:51 +0000</pubDate>
      <link>https://dev.to/coder4_life/colorize-your-cli-output-in-nodejs-2c1p</link>
      <guid>https://dev.to/coder4_life/colorize-your-cli-output-in-nodejs-2c1p</guid>
      <description>&lt;p&gt;Tired of the same boring console.log output? Need to highlight some output in cli app? Here you will get some examples for red, yellow, and green colored output.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/m56GZTSXcKs"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>node</category>
      <category>javascript</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Python - Input and Output</title>
      <author>Introschool</author>
      <pubDate>Tue, 12 Oct 2021 18:24:21 +0000</pubDate>
      <link>https://dev.to/introschool/python-input-and-output-3amc</link>
      <guid>https://dev.to/introschool/python-input-and-output-3amc</guid>
      <description>&lt;p&gt;&lt;strong&gt;Input and Output&lt;/strong&gt;&lt;br&gt;
In this section, we will learn about how to take input and give output in Python. Till now we were writing static programs, it means that we were not taking any input from the user.&lt;/p&gt;

&lt;p&gt;But in the real world, A developer often interacts with the user, in order to get data or show the user some result. For example, you are making a program which takes a name as an input from the user and shows a greeting message with the user’s name on the screen. For this program, you need to know two things. First, how to take input from the user and second is how to show output. &lt;/p&gt;

&lt;p&gt;Python provides lots of built-in functions. We will discuss Functions in detail later in the course. But for now, Functions are a reusable unit of code that is designed to perform single or related actions.  You have already seen a &lt;strong&gt;print()&lt;/strong&gt; function that is used to show output. Similarly, there is built-in function &lt;strong&gt;input()&lt;/strong&gt; for taking input from the user.&lt;br&gt;
How to Take Input from the User&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How to Take Input from the User&lt;/strong&gt;&lt;br&gt;
We will use Python’s built-in function &lt;strong&gt;input()&lt;/strong&gt; for taking input from the user. Let’s see how it works.&lt;br&gt;
Input takes a string as an optional parameter. Usually it's a description of what input you want to take from the user. See the below example.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# get the name from a user
name = input('Enter your name : ') 
Enter your name : 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When you try to run this program the following thing will happen:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;When you execute input() function, the program will stop until the user provides the required input.&lt;/li&gt;
&lt;li&gt;Once user enters the name it will save it in the variable &lt;strong&gt;name.&lt;/strong&gt;
&lt;strong&gt;How To Show Output&lt;/strong&gt;
Now we have the user input that we can show on the input. To show input on the screen we use Python’s built-in function print() is used&lt;/li&gt;
&lt;li&gt;In print function, you can pass multiple objects in the print functions
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# print() function

print(2, 'helo', 3, True)
# Output: 2 hello 3 True

a = 2,

print('a =', a)
# Output
# a = 2
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Using &lt;strong&gt;sep&lt;/strong&gt; and &lt;strong&gt;end&lt;/strong&gt; parameter in print function.&lt;br&gt;
&lt;strong&gt;sep&lt;/strong&gt;&lt;br&gt;
    The sep parameter is used to separate objects. Default value is a space character(‘ ‘).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# sep 

print(2, 'Hello', 3, True, sep=', ')
# Output: 2, Hello, 3, True
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;end&lt;/strong&gt;&lt;br&gt;
The end parameter is printed at the last.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# end

a = 'Hello world'
print('a =', a, end='!')
# Output: a = Hello world!

print('code =', 3, sep='0', end='0')
# output: code =030
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>python</category>
      <category>tutorial</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>EuroPython 2021: All edited videos now available</title>
      <author>whykay 👩🏻‍💻🐈🏳️‍🌈 (she/her)</author>
      <pubDate>Tue, 12 Oct 2021 18:21:24 +0000</pubDate>
      <link>https://dev.to/europython/europython-2021-all-edited-videos-now-available-4f80</link>
      <guid>https://dev.to/europython/europython-2021-all-edited-videos-now-available-4f80</guid>
      <description>&lt;p&gt;We’re happy to release another batch of 41 cut videos of &lt;a href="https://ep2021.europython.eu/"&gt;EuroPython 2021&lt;/a&gt; covering the &lt;a href="https://ep2021.europython.eu/schedule/30-july"&gt;third day sessions of the conference&lt;/a&gt; and a number of edited videos for the previous days. In total, we now have 118 videos waiting for you. You can watch them on &lt;a href="http://europython.tv/"&gt;our YouTube channel&lt;/a&gt;. We have created a &lt;a href="https://www.youtube.com/playlist?list=PL8uoeex94UhFuRtXhkqOrROsdNI6ejuiq"&gt;EuroPython 2021 playlist&lt;/a&gt; for this.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bHWgKeSh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7rbw056oarddxod0gkdc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bHWgKeSh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7rbw056oarddxod0gkdc.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#all-europython-videos"&gt;
  &lt;/a&gt;
  All EuroPython Videos
&lt;/h2&gt;

&lt;p&gt;Our YouTube channel has videos of all EuroPython conferences going back to 2011. Check out &lt;a href="https://www.youtube.com/playlist?list=UU98CzaYuFNAA_gOINFB0e4Q"&gt;more than 1500 Python videos&lt;/a&gt; covering 10 conference years.&lt;/p&gt;

&lt;p&gt;In the coming weeks, we'll upload the EuroPython 2021 videos to &lt;a href="https://archive.org/details/@europythonvideos"&gt;our archive.org channel&lt;/a&gt; as well.&lt;/p&gt;

&lt;p&gt;Enjoy,&lt;br&gt;
&lt;a href="https://ep2021.europython.eu/europython/team/"&gt;EuroPython 2021 Team&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.europython-society.org/"&gt;EuroPython Society&lt;/a&gt;&lt;br&gt;
&lt;a href="https://ep2021.europython.eu/"&gt;EuroPython 2021 Website&lt;/a&gt;&lt;/p&gt;

</description>
      <category>europython</category>
      <category>videos</category>
      <category>python</category>
    </item>
    <item>
      <title>BUILD A SIMPLE RESEARCH ASSISTANT WITH PYTHON</title>
      <author>Geof</author>
      <pubDate>Tue, 12 Oct 2021 18:21:10 +0000</pubDate>
      <link>https://dev.to/geofspot/build-a-simple-research-assistant-with-python-4idb</link>
      <guid>https://dev.to/geofspot/build-a-simple-research-assistant-with-python-4idb</guid>
      <description>&lt;p&gt;&lt;a href="https://i.giphy.com/media/bS6QuQ2S4yulVQnAbO/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/bS6QuQ2S4yulVQnAbO/giphy.gif" alt="research gify img"&gt;&lt;/a&gt;&lt;br&gt;
Among other great stuffs we can do with python, research and information sourcing can be done better and faster with python. In this tutorial we are going to build a simple research assistant with a few lines of code.&lt;/p&gt;

&lt;p&gt;Meanwhile, we’ll be using a few python modules like Wikipedia and Pywhatkit to make this brief project fun and effective.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#firstly-lets-make-use-of-pywhatkit"&gt;
  &lt;/a&gt;
  Firstly Let's Make Use Of Pywhatkit
&lt;/h2&gt;

&lt;p&gt;Pywhatkit is a Python library with various helpful features. It is an easy to use library which does not require you to do some additional setup.&lt;/p&gt;

&lt;p&gt;This module could also be used to send images and messages via whatsapp, play youtube videos, search the web, convert text to handwritten images and more. But for this brief tutorial we are basically going to use it to make a simple research assistant.&lt;/p&gt;

&lt;p&gt;To get the full documentation on pywhatkit module click &lt;a href="https://pypi.org/project/pywhatkit/"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pywhatkit doesn’t come preinstalled with python, but can install it with pip or pip3 by simply running: &lt;strong&gt;pip install pywhakit&lt;/strong&gt; on your command line.&lt;/p&gt;

&lt;p&gt;Then import the module whenever you want to use it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;#import pywhatkit
&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pywhatkit&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;kit&lt;/span&gt;

&lt;span class="c1"&gt;#Get information about python in 5 lines/paragraphs
&lt;/span&gt;&lt;span class="n"&gt;kit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'python'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The code above will give the following output:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Python is an interpreted high-level general-purpose programming language. Its design philosophy emphasizes code readability with its use of significant indentation. Its language constructs as well as its object-oriented approach aim to help programmers write clear, logical code for small and large-scale projects.Python is dynamically-typed and garbage-collected. It supports multiple programming paradigms, including structured (particularly, procedural), object-oriented and functional programming. It is often described as a "batteries included" language due to its comprehensive standard library.Guido van Rossum began working on Python in the late 1980s, as a successor to the ABC programming language, and first released it in 1991 as Python 0.9.0.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That sounds like fun right? However, the 5 is for number of lines you need, you change it to whatever number you need.&lt;br&gt;
But there is a little limitation here: Normally you’d want to save the output to a variable or to a file and probably do something with it. However, before you do that, try and check the return type first. If you run save the search result to a variable and print the type, it'll be NonetType&lt;/p&gt;

&lt;p&gt;Something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pywhatkit&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;kit&lt;/span&gt;

&lt;span class="n"&gt;sourced&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;kit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'python'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sourced&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Fortunately there is another better way, in case you'd like to save your search results to a variable, file or even send it as an email then you should use &lt;a href="https://pypi.org/project/wikipedia/"&gt;&lt;strong&gt;Wikipedia&lt;/strong&gt;&lt;/a&gt; instead&lt;/p&gt;

&lt;p&gt;It’s actually similar to pywhatkit. You just install with pip: pip install wikipedia via command line, then you import the module.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#working-with-wikipedia"&gt;
  &lt;/a&gt;
  Working With Wikipedia
&lt;/h2&gt;

&lt;p&gt;Now let's code up something real fun:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;#import wikipedia
&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;wikipedia&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;wk&lt;/span&gt;

&lt;span class="c1"&gt;# #create a function to ask for language, word and sentence lines. Use the inputs to generate basic information
# for the word entered
&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;find&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;

    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;lang&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Please choose a language: "fr" for france, "es" for spanish and "en" for english:&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;wk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_lang&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lang&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

            &lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sentence&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Enter a word, space, followed by the number of lines you want(in figures):&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt; '&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;Searching wikipedia for &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;...&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;sourced&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;wk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;summary&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sentence&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

            &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sourced&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;except&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Please make sure you entered a wikipedia compatible valid information with the following format: Programming 5. Separating the inputs with a space only. Also make sure you selected a valid LANGUAGE!'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;......................................................&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;Research done!'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;

&lt;span class="c1"&gt;#run the function
&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Apparently both pywhatkit.info and wikipedia.summary are using the same knowledge base which is the official wikipedia, so you should not put any phrase or words that you wouldn’t normally search on wikipedia. It’s not google search engine. You may use .search instead of .summary to get search results from google(list format).&lt;/p&gt;

&lt;p&gt;If haven't used the wikipedia library before, try and read the documentation &lt;a href="https://pypi.org/project/wikipedia/"&gt;here&lt;/a&gt;, it's actually precise and easy to understand, I strongly believe reading things up when necessary should be a major part of every programmer's skills.&lt;/p&gt;

&lt;p&gt;OK guys.. This is just a simple research assistant program with python. Expect something more advanced on this same topic in the future.&lt;/p&gt;

&lt;p&gt;If you'd like a more explained version of this post please visit the post page on my blog &lt;a href="https://pythgenie.geofsphere.com/research-assistant-program/"&gt;&lt;strong&gt;here&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Finally am kinda new here and this happens to be my first post on Dev, I'll be publishing more pythonic posts and your following up would be appreciated and would also make you see more of my posts.&lt;/p&gt;

</description>
      <category>python</category>
      <category>programming</category>
    </item>
    <item>
      <title>#7 Best Artificial intelligence technologies and there Websites🔥</title>
      <author>Deepak Gupta</author>
      <pubDate>Tue, 12 Oct 2021 17:54:17 +0000</pubDate>
      <link>https://dev.to/deepakguptacoder/7-best-artificial-intelligence-technologies-and-there-websites-2p9o</link>
      <guid>https://dev.to/deepakguptacoder/7-best-artificial-intelligence-technologies-and-there-websites-2p9o</guid>
      <description>&lt;h1&gt;
  &lt;a href="#hello-everyone"&gt;
  &lt;/a&gt;
  Hello everyone! 🖤
&lt;/h1&gt;

&lt;p&gt;In this article, we look into Best Artificial intelligence technologies.&lt;br&gt;
We are using Artificial intelligence in our daily life I will tell you the best #7th website of the artificial intelligence it's help you to grow and build your knowledge.&lt;br&gt;
.&lt;br&gt;
Website are are given below and disruption also.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#1robotic-process-automation"&gt;
  &lt;/a&gt;
  1.&lt;a href="https://www.turbotic.com/campaigns/robotics-operations-center?gclid=Cj0KCQjw5JSLBhCxARIsAHgO2Se8atXKde8vsqTV23wLSVqGJi2Rgi-gHu3N-IKKZ6jtvoazKSdKlTsaArgBEALw_wcB"&gt;Robotic Process Automation&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S1eIL2z4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/07u63lqg71r952g5epnj.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S1eIL2z4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/07u63lqg71r952g5epnj.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Robotic process is the process of the machine work in our world every place to using this AI to saving time and making process easy.&lt;br&gt;
.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#2cyber-defense"&gt;
  &lt;/a&gt;
  2.&lt;a href="https://www.google.com/search?q=cyber+defense+artificial+intelligence&amp;amp;client=ms-android-vivo&amp;amp;sxsrf=AOaemvL4EpPYi4ctNMhmmAO55Q2qhIbzyw%3A1634022805536&amp;amp;ei=lTVlYYaGILib4t4P1KGhGA&amp;amp;oq=Cyber+Defense+art&amp;amp;gs_lcp=ChNtb2JpbGUtZ3dzLXdpei1zZXJwEAEYADIGCAAQFhAeMgYIABAWEB4yBQghEKABOgQIABBHOg0ILhDHARDRAxBDEJMCOgQIABBDOgoILhDHARDRAxBDOgUIABCABDoICAAQgAQQyQNQljFYgTpguURoAHABeACAAZICiAHVBpIBBTAuMi4ymAEAoAEByAEIwAEB&amp;amp;sclient=mobile-gws-wiz-serp#fpstate=form_ad_n1s0p1"&gt;Cyber Defense&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XayIhDJs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2k4p098st7cve36ivgmk.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XayIhDJs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2k4p098st7cve36ivgmk.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Cyber Defense is the Cyber Security to save and protect your data and personal thing from the hacker's.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#3machine-learning-platforms"&gt;
  &lt;/a&gt;
  3.&lt;a href="https://www.simplilearn.com/sem-landing/master-program/bundle_id/117/template/2?utm_source=google&amp;amp;utm_medium=cpc&amp;amp;utm_term=%2Bmachine%20%2Blearning&amp;amp;utm_content=1428905907-78938469271-362537006817&amp;amp;utm_device=m&amp;amp;utm_campaign=Search-DataCluster-DSAI-AIML-IN-Main-AllDevice-adgroup-AIML-Machinelearning-Course-BMM-New&amp;amp;gclid=Cj0KCQjw5JSLBhCxARIsAHgO2ScDBtTYsGlu3H2y8AseAbEOB880mODf4DSc3wIhSiJKSjsiR_F4gosaAhWXEALw_wcB"&gt;Machine Learning Platforms&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HRaF18D---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xc2jutyqe90aqa066wct.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HRaF18D---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xc2jutyqe90aqa066wct.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Machine Learning Platforms&lt;br&gt;
A platform for automating and accelerating the delivery lifecycle of predictive applications capable of processing big data using machine learning or related techniques.”&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#4biometrics"&gt;
  &lt;/a&gt;
  4.&lt;a href="https://www.kentcam.com/camattendance/?gclid=Cj0KCQjw5JSLBhCxARIsAHgO2ScnSa4-0o8Qpgwqy16W1BsFCcGQoygil5hJaRTA3A48Px2tYwCBfosaAqKrEALw_wcB"&gt;Bio-metrics&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZK_8zWg4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mz6hilvg7cij3ksxg2v0.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZK_8zWg4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mz6hilvg7cij3ksxg2v0.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Biometrics is one of the AI which is Using your daily life example; school, company, factories, college etc.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#5emotion-recognition"&gt;
  &lt;/a&gt;
  5.&lt;a href="https://www.neom.com/en-us/whatistheline?utm_source=google&amp;amp;utm_medium=cpc&amp;amp;utm_campaign=2195_AO_RPL_Search_Clicks_IN_CPC_Text_T1_EN_27Apr21_30Nov21_3242_SmartCity&amp;amp;utm_content=SmartCity&amp;amp;gclid=Cj0KCQjw5JSLBhCxARIsAHgO2Sd0WoSvj9Y2EVIkj1bgthnbPSwPrgszyhEnnB6ATOeEvj0n2bKvEXEaAt9rEALw_wcB"&gt;Emotion Recognition&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IuHbJ_GC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wfb5yltu54tnw1693yvp.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IuHbJ_GC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wfb5yltu54tnw1693yvp.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Emotion AI refers to artificial intelligence that detects your face and emotion reaction also and interprets human emotional signals. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#6content-creation"&gt;
  &lt;/a&gt;
  6.&lt;a href="https://mydukaan.io/blog/ai-content-creation-tools/"&gt;Content Creation&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--E3bT6K79--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rqiibs44utaqrq0tj72v.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E3bT6K79--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rqiibs44utaqrq0tj72v.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Content Intelligence is a subset of AI that allows marketers to use machine learning algorithms to optimize content for consumption and distribution.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#7speech-recognition"&gt;
  &lt;/a&gt;
  7.&lt;a href="https://www.hpe.com/in/en/solutions/artificial-intelligence.html?jumpid=ps_pwnsy6fgh7_aid-520042864&amp;amp;ef_id=Cj0KCQjw5JSLBhCxARIsAHgO2SdlfrepFz0VI6QcFhqHCPYHap3mTIoeTpb142YC81w8KnvwoBdrSUUaAml6EALw_wcB:G:s&amp;amp;s_kwcid=AL!13472!3!541195828265!p!!g!!ai%20intelligence!14386686690!127123177875&amp;amp;"&gt;Speech Recognition&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ArB1w-mb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q5imzs43l5kr0kringuv.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ArB1w-mb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q5imzs43l5kr0kringuv.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Speech recognition is the voice command to your device&lt;br&gt;
It's the most of the people are using children's also using this AI..&lt;br&gt;
.&lt;br&gt;
.&lt;br&gt;
.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h4&gt;

&lt;h3&gt;
  &lt;a href="#i-hope-you-found-this-article-useful-if-you-need-any-help-please-let-me-know-in-the-comment-section"&gt;
  &lt;/a&gt;
  I hope you found this article useful, if you need any help please let me know in the comment section.💯
&lt;/h3&gt;

</description>
      <category>showdev</category>
      <category>webdev</category>
      <category>techtalks</category>
      <category>webpack</category>
    </item>
    <item>
      <title>Learn programming from absolute zero</title>
      <author>Marinsborg</author>
      <pubDate>Tue, 12 Oct 2021 17:45:20 +0000</pubDate>
      <link>https://dev.to/marinsborg/learn-programming-from-absolute-zero-amj</link>
      <guid>https://dev.to/marinsborg/learn-programming-from-absolute-zero-amj</guid>
      <description>&lt;h2&gt;
  &lt;a href="#intro"&gt;
  &lt;/a&gt;
  Intro
&lt;/h2&gt;

&lt;p&gt;It is 2021 and there are so many people working as programmers. If you want to be part of that world, you need to know the programming basics. &lt;/p&gt;

&lt;p&gt;Why is this post better than most of the other posts or video courses on the internet? And also how can this be a post about programming when there is not any programming language in it? &lt;/p&gt;

&lt;p&gt;Well, there is a difference between learning to program and learning some programming language. You could 'learn' two programming languages and there is a chance that you would still not know how to program.&lt;/p&gt;

&lt;p&gt;Learning a programming language is the same as learning a foreign language. Learning to program is like learning to think. When people are born they have the ability to think. That ability naturally gets better and better with time. That means most people would react in the same way in the same situation no matter where are they from. For example, if they see an accident on the road, they would call an ambulance. The only difference is that they would use their own language to describe the accident. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The ability to think is not bounded or dictated by some language&lt;/strong&gt;. If you learn a new language, your ability to think would not change at all. The same thing is with programming. Programming concepts are independent of programming languages.&lt;/p&gt;

&lt;p&gt;In this post, I will teach you programming concepts that will help you learn any programming language. Learning this way is much faster and you are not distracted by the syntax of the programming language.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-think-like-a-programmer"&gt;
  &lt;/a&gt;
  How to think like a programmer?
&lt;/h2&gt;

&lt;p&gt;This is a question that is asked by many people who wants to start with programming. And to answer it straight away - you need to use an &lt;strong&gt;algorithmic approach&lt;/strong&gt; to solving problems. What does that mean exactly? I will explain it in this chapter.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Computer_programming"&gt;Computer programming&lt;/a&gt; is the process of designing and building an executable computer program. A computer program is a &lt;strong&gt;collection of instructions&lt;/strong&gt; that can be executed by a computer to perform a specific task. &lt;/p&gt;

&lt;p&gt;In layman's terms, programming is just telling a computer what it needs to do. To describe to a computer what it needs to do, programmers use various programming languages. &lt;/p&gt;

&lt;p&gt;Now, I would require you to take a pen and paper or just open your favorite text editor and write down all steps you need to do to make a bowl of cereals. I will do the same thing, but I will do it in a way that is similar to describing it to a computer. After you are done you can compare yours and my result:&lt;br&gt;

  My result
  &lt;ul&gt;
    &lt;li&gt;go to the fridge and open its door&lt;/li&gt;
    &lt;li&gt;take out a bottle of milk and put it on the table&lt;/li&gt;
    &lt;li&gt;close the fridge door&lt;/li&gt;
    &lt;li&gt;go to a cupboard (or cabinet) and open its door&lt;/li&gt;
    &lt;li&gt;take out a cereal box and bowl and put those to the table, next to milk (this step depends on where you are keeping bowls and cereals)&lt;/li&gt;
    &lt;li&gt;close the cupboard door&lt;/li&gt;
    &lt;li&gt;go to the drawer with spoons and open it&lt;/li&gt;
    &lt;li&gt;take one spoon and close the drawer&lt;/li&gt;
    &lt;li&gt;go to the table, put the spoon next to a bowl&lt;/li&gt;
    &lt;li&gt;grab cereal box and take the plastic bag out of it (let's assume that cereals are inside a plastic bag)&lt;/li&gt;
    &lt;li&gt;pour cereal out of the plastic bag into a bowl until the bowl is half-full or one-third full&lt;/li&gt;
    &lt;li&gt;return the plastic bag to the cereal box (or throw it away if it is empty)&lt;/li&gt;
    &lt;li&gt;grab a bottle of milk and open it&lt;/li&gt;
    &lt;li&gt;pour milk over the cereal that is inside the bowl until the bowl is half full&lt;/li&gt;
    &lt;li&gt;close the bottle of milk and put it on the table&lt;/li&gt;
  &lt;/ul&gt;




&lt;br&gt;
And this is it, breakfast is ready. &lt;/p&gt;

&lt;p&gt;This is how programmers think. You can see that it is not anything complicated and that everybody can do that. In the steps above there are some extra cases that I left out for simplicity of demonstration like what if milk is not in the fridge, what if you run out of milk or cereal, what if you don't have any clean spoon or bowls, what if you dropped and broke a bowl, etc. &lt;/p&gt;

&lt;p&gt;But you got the idea. And in the following video, you will see what happens if you are not specific and detailed when you are writing instructions (or code).&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/cDA3_5982h8"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;This is how programming works most of the time. You know what you have to do, you write code for that, and then you test does it work what it needs to do. If not, then you know that you did something wrong. You change your code and try again until you get the right solution.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#algorithm"&gt;
  &lt;/a&gt;
  Algorithm
&lt;/h2&gt;

&lt;p&gt;In this chapter, I will explain things in a formal way. &lt;/p&gt;

&lt;p&gt;An &lt;a href="https://www.verywellmind.com/what-is-an-algorithm-2794807"&gt;algorithm&lt;/a&gt; is a defined set of step-by-step procedures that provides the correct answer to a particular problem. &lt;/p&gt;

&lt;p&gt;The algorithm needs to satisfy the following conditions to be valid:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;same inputs always need to produce the same output&lt;/li&gt;
&lt;li&gt;must be unambiguous meaning that is explicitly defined and only one interpretation is possible&lt;/li&gt;
&lt;li&gt;must be finite meaning that it needs to be done in finite time and use finite space&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The best example of an algorithm that you saw in your life is a meal recipe. You know how long it will take to cook that meal, what groceries you need, and in what order you need to prepar them. And if you follow that recipe twice and make the meal in the exact same way both times you will get the same meal.&lt;/p&gt;

&lt;p&gt;To solve tasks with programming, the first thing we need to do is to devise an algorithm. When you are doing that, it is a good idea to write it down. There are two ways to write an algorithm - with flowchart and with pseudocode.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#flowchart"&gt;
  &lt;/a&gt;
  Flowchart
&lt;/h3&gt;

&lt;p&gt;A &lt;a href="https://en.wikipedia.org/wiki/Flowchart"&gt;flowchart&lt;/a&gt; is a type of diagram that represents a workflow or process. A flowchart can also be defined as a diagrammatic representation of an algorithm, a step-by-step approach to solving a task. &lt;/p&gt;

&lt;p&gt;Each flowchart consists of its building blocks. To understand a flowchart, you first need to know what each building block means. I created this simple table so you can always return here until you learn them all. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--70jVY1zT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uhgcg6q9lqxfavrztok9.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--70jVY1zT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uhgcg6q9lqxfavrztok9.jpg" alt="Flowchart table"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see, there are not a lot of them. Some other exists but they are not important right now. I will show you how to solve tasks using only these symbols. Let's start with examples.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#sequence"&gt;
  &lt;/a&gt;
  Sequence
&lt;/h3&gt;

&lt;p&gt;Instructions in programs are executed in the sequence in which they are written. Let's create a flowchart for a simple task in which the user will input two numbers and the program will print out a sum of those two numbers.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--t_k4iVeO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/efbddieinn5fjxbjs8md.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t_k4iVeO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/efbddieinn5fjxbjs8md.jpg" alt="Sequence diagram"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#branching"&gt;
  &lt;/a&gt;
  Branching
&lt;/h3&gt;

&lt;p&gt;If some part of code in the algorithm we need to execute only in case if some condition is fulfilled then we need to use branching. With branching, we can split the code into two or more paths. To show an example of branching let's create a flowchart for a program that takes the user's input which is a number and prints "Number is positive" or "Number is negative".&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hOzA6aCg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9p8ze21w8058xhqyzuiw.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hOzA6aCg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9p8ze21w8058xhqyzuiw.jpg" alt="Branching diagram"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#loops"&gt;
  &lt;/a&gt;
  Loops
&lt;/h3&gt;

&lt;p&gt;Sometimes in code, we need to do the same thing several times. We always have two choices. One is to write the same code several times and the other is to use a loop. The problem with writing the same code several times is that is it not clean and it is time-consuming. That is why we should use loops.&lt;/p&gt;

&lt;p&gt;In computer programming, a loop is a sequence of instructions that is continually repeated until a certain condition is reached. Most of the time we write a loop with some kind of a counter so the loop knows how many times it needs to execute the same code and when to stop. Let's create a flowchart for a program that takes a number as the user's input and prints all (whole) numbers between 0 and that number.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PK3yFXUR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6h1rra9prbtpy3oanv29.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PK3yFXUR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6h1rra9prbtpy3oanv29.jpg" alt="Loops"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see, the loop repeats three steps: checking if variable A is lower than variable Counter, print value of variable Counter, and increase the value of variable Counter by one.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Now try to solve this task by yourself:&lt;/strong&gt; Make a program that takes the user's input and check if it is number 0. If it is not, then print the square of that number and if it is 0 then finish the program. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#variables"&gt;
  &lt;/a&gt;
  Variables
&lt;/h3&gt;

&lt;p&gt;In previous tasks I always mentioned variables but I never explained what it is. Variables are locations in memory that have some name and in which we save data from the input. The value of each variable can be changed during program execution. To access the value of a variable we only need to write its name. &lt;/p&gt;

&lt;p&gt;Each variable has a name, a value, and a type. I will talk about data types a bit later. To assign value to a variable we need to write the name of the variable then equality sign '=' and then the value.&lt;/p&gt;

&lt;p&gt;For example: &lt;/p&gt;

&lt;p&gt;To assign a value 10 to a variable with the name 'age' we just need to write&lt;br&gt;
&lt;br&gt;
 &lt;code&gt;age = 10&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;If we want to change the value of the variable 'age' we can do it in the same way&lt;br&gt;
&lt;br&gt;
 &lt;code&gt;age = 30&lt;/code&gt;&lt;br&gt;
&lt;br&gt;
 That is called re-assigning.&lt;/p&gt;

&lt;p&gt;It is always a good idea to name variables in a descriptive way instead of using just one letter like 'A' or 'x'.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#data-types"&gt;
  &lt;/a&gt;
  Data types
&lt;/h3&gt;

&lt;p&gt;In computer science and computer programming, a &lt;a href="https://en.wikipedia.org/wiki/Data_type"&gt;data type&lt;/a&gt; or simply type is an attribute of data that tells the computer how the programmer intends to use the data. I will not bother you with the details, you just need to remember these five common data types:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Integer (int) - this data type is used for whole numbers. For example int age = 20 or int size = 10&lt;/li&gt;
&lt;li&gt;String - this data type is used for text or sequence of characters. For example string name = "John Doe" or string sentence = "Today is a sunny day." Usually, a string is always surrounded with quotation marks&lt;/li&gt;
&lt;li&gt;Character (char) - this data type is used for a single letter. char letter = 'a'&lt;/li&gt;
&lt;li&gt;Float - this data type is used for numbers that contain a decimal point. For example float number = 3.14&lt;/li&gt;
&lt;li&gt;Boolean (bool) - this data type is used for True or False only ( yes or no, 0 or 1). For example bool flag = True&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As I mentioned before - Each variable has a name, a value, and a type. When I write&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;int age = 10&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;int is the type of the variable, age is the name of the variable, and 10 is the value of that variable.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#arithmetic-operators"&gt;
  &lt;/a&gt;
  Arithmetic operators
&lt;/h3&gt;

&lt;p&gt;In programming, you can use arithmetic operators between variables or some concrete value. Addition, subtraction, multiplication are the same as in math and division is a bit different.&lt;/p&gt;

&lt;p&gt;For example, you can write this:&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sum = a + b -&amp;gt; this will save the sum of values a and b into variable sum&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;



&lt;p&gt;&lt;code&gt;c = d - 7 -&amp;gt; this will save the result of subtraction to variable c&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;



&lt;p&gt;&lt;code&gt;result = 15 * 3 -&amp;gt; this will save 45 in variable result&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;There are three 'types' of division:&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;x = a/b -&amp;gt; this is real division&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;



&lt;p&gt;&lt;code&gt;y = 13 DIV 5 -&amp;gt; this is integer division and it will save 2 in variable y&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;



&lt;p&gt;&lt;code&gt;z = 13 MOD 5 -&amp;gt; this is remainder and it will save 3 in variable z&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#relational-operators"&gt;
  &lt;/a&gt;
  Relational operators
&lt;/h3&gt;

&lt;p&gt;In computer science, a &lt;a href="https://en.wikipedia.org/wiki/Relational_operator"&gt;relational operator&lt;/a&gt; is a programming language construct or operator that tests or defines some kind of relation between two entities. These include numerical equality (e.g., 5 = 5) and inequalities (e.g., 4 ≥ 3).&lt;/p&gt;

&lt;p&gt;The result of the evaluation is either true or false. Relational operators are used for branching which I explained above.  &lt;/p&gt;

&lt;p&gt;Operators are: equal to (==), not equal to (≠), greater than (&amp;gt;), less than (&amp;lt;), greater than or equal to (≥), less than or equal to (≤). &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#boolean-operations"&gt;
  &lt;/a&gt;
  Boolean operations
&lt;/h3&gt;

&lt;p&gt;Boolean operations come from &lt;a href="https://en.wikipedia.org/wiki/Boolean_algebra"&gt;Boolean algebra&lt;/a&gt; in which which the values of the variables are either true or false (1 or 0). I don't want to bother you much with Boolean algebra but there are three main operations you need to know about:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;AND - conjunction - the result of this operation is true only when both conditions are true, otherwise false&lt;/li&gt;
&lt;li&gt;OR - disjunction - the result of this operation is true when either of the conditions is true&lt;/li&gt;
&lt;li&gt;NOT - negation - this operation inverts the value of the condition. If the condition is true then negation will result in false and vice versa.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Boolean operations are also mostly used for branching and can be combined with relational operators. For example, if you have a task in which you need to check if the number is lower than 50 and it is not 7 then you would do that in a flowchart like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZRInKPkb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yi1e6j8w1mfp3p21itv9.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZRInKPkb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yi1e6j8w1mfp3p21itv9.jpg" alt="Branching operator"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And this is it. If you have understood everything so far &lt;strong&gt;you can say that now YOU can think like a programmer&lt;/strong&gt;. This is the bare minimum you need to know to start with programming. This is the foundation on which you build more and more knowledge. &lt;/p&gt;

&lt;p&gt;You might notice that we did not start with any programming language. It is because everything above can apply to most programming languages. Now when you understand the foundation you can easily start with any programming language. &lt;/p&gt;

&lt;p&gt;If you do not understand some part or you need extra explanation you can always search on Google or you can ask me on &lt;a href="https://www.reddit.com/r/marinsborg/"&gt;Reddit&lt;/a&gt; or &lt;a href="https://twitter.com/marinsborg"&gt;Twitter&lt;/a&gt; - I am going to help you as soon as I can.&lt;/p&gt;

&lt;p&gt;I will give you some tasks to practice, something like homework. I will publish solutions and explanations to those tasks on Reddit in near future. Follow me on Twitter for updates.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#homework-tasks"&gt;
  &lt;/a&gt;
  Homework tasks
&lt;/h3&gt;

&lt;p&gt;To solve these tasks you will use the knowledge from above. For each task, you need to draw a flowchart. You can draw flowcharts online on &lt;a href="https://app.diagrams.net/"&gt;diagrams.net&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create a program that allows to user to input three numbers and print the product of that three numbers.&lt;/li&gt;
&lt;li&gt;Create a program that allows to user to input a number. Print if that number is odd or even. Hint - you need to use the remainder operator.&lt;/li&gt;
&lt;li&gt;Create a program that allows to user to input a number. Multiply that number by 2 and print it out. Repeat multiplication and printing until the result of the multiplication is not larger than 1000.&lt;/li&gt;
&lt;li&gt;Create a program that prints all numbers between 1 and 100 that are not divisible by 7 and are divisible by 5.&lt;/li&gt;
&lt;li&gt;Create a program that allows to user to input a number. If the number is 0, end the program and print "The end". Otherwise, multiply that number by itself and check if that new number is larger than 1000. If yes then print "Extra large number". If the number is larger than 500 then print "Large number", otherwise print "Small number"&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#next-steps"&gt;
  &lt;/a&gt;
  Next steps
&lt;/h2&gt;

&lt;p&gt;Once you are done with the practice tasks above you might ask what are the next thing to do or learn. It is obvious you can't do much with just a knowledge of drawing flowcharts. &lt;/p&gt;

&lt;p&gt;Now you can select one programming language and learn its syntax. I would recommend learning Python or JavaScript. Both languages are easy to set up on your computer and syntax is straightforward. For know, if you are at this stage of programming experience, I would recommend you to pick either Python or JavaScript and not C#, Java, or any object-oriented programming language. &lt;/p&gt;




&lt;p&gt;&lt;strong&gt;Related post:&lt;/strong&gt; &lt;a href="https://marinsborg.com/2021/10/05/first-programming-language.html"&gt;What programming language to learn first?&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;If you want to learn JavaScript and explore web development with it, you can start with &lt;a href="https://www.theodinproject.com/paths/foundations/courses/foundations"&gt;The Odin Project&lt;/a&gt;. It is a website that will walk you through the installation of proper tools, explain how the web works, how to use git and there are basics in HTML, CSS, and JavaScript. If you like to watch videos you can find many good JavaScript tutorials on YouTube.&lt;/p&gt;

&lt;p&gt;If you want to learn Python which is a good programming language for multiple stuff you can follow this book - &lt;a href="https://automatetheboringstuff.com/#toc"&gt;Automate the boring stuff with Python.&lt;/a&gt; It starts with Python basics and progresses into some real-world problems that are easily solved with Python. If you don't like it, you can always look for videos on YouTube. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;In this post, I explained to you the fundamentals that you need to know to start with programming. These fundamentals are applicable to most programming languages and now you need to pick one and learn its syntax.&lt;/p&gt;

&lt;p&gt;Programming is not hard as it might seem. You need to be patient with yourself, invest some time and effort in understanding the basics. &lt;/p&gt;

&lt;p&gt;I just want to point out the importance of starting with easier tasks and then progressing towards some bigger project you might want to build. You can not learn some foreign language over the night but you will get better and better with it over time - it is the same with programming.&lt;/p&gt;

&lt;p&gt;When you learn the syntax of some programming language try to solve tasks from the homework chapter with that programming language. &lt;/p&gt;

&lt;p&gt;Like I said if you have any questions or just want to see solutions to homework tasks follow me on &lt;a href="https://twitter.com/marinsborg"&gt;Twitter&lt;/a&gt; and &lt;a href="https://www.reddit.com/r/marinsborg/"&gt;Reddit&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>tutorial</category>
      <category>learning</category>
      <category>programming</category>
    </item>
    <item>
      <title>APIs Are The Prefabrication Of Software</title>
      <author>Micah Zayner</author>
      <pubDate>Tue, 12 Oct 2021 17:31:13 +0000</pubDate>
      <link>https://dev.to/courier/apis-are-the-prefabrication-of-software-3f6g</link>
      <guid>https://dev.to/courier/apis-are-the-prefabrication-of-software-3f6g</guid>
      <description>&lt;p&gt;Whether it’s for building a company, monitoring the news, or even making a grocery list, software penetrates every part of the modern western lifestyle. The demand for software far exceeds what developers (and the tech industry as a whole) are capable of supplying from scratch. In order to keep pace with demand, our industry has been increasingly shifting towards a ‘prefabrication’ model of software development via the utilization of third party APIs. While this trend has been in the making for 10 to 15 years already, the market is poised for continuous aggressive change in the coming years as well. &lt;/p&gt;

&lt;p&gt;We can say this with confidence because history tells us so. At the turn of the century, when large-scale construction was beginning to become common, constructing an office building or factory required bringing together a large group of expert craftsmen at a jobsite. Expert carpenters were needed to build the doors and framing, expert glass blowers for the windows, expert masons to cut and lay the stone, blacksmiths to create the steel structure, and so on. As the 20th century progressed, and demand for construction skyrocketed, various forms of prefabrication were developed in order to make construction faster, cheaper, and more accessible. For high-end, custom buildings, the prefabricated parts components could be limited to the windows, doors, and HVAC system while at the other end of the spectrum entire buildings can be erected in days out of completely prefabricated components. In fact, McDonalds has been known to complete a building in mere weeks this way.&lt;/p&gt;

&lt;p&gt;The evolution of software development has followed a similar trajectory, with APIs serving as the prefabricated software that companies are leaning on to build software faster and more cheaply than ever before. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-apis-came-to-be"&gt;
  &lt;/a&gt;
  How APIs Came To Be
&lt;/h2&gt;

&lt;p&gt;In many ways, Amazon pioneered this ‘prefabrication’ mode for software developers when they &lt;a href="https://techcrunch.com/2016/07/02/andy-jassys-brief-history-of-the-genesis-of-aws/?guccounter=1&amp;amp;guce_referrer=aHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS8&amp;amp;guce_referrer_sig=AQAAAKjTagbGmqb5tALtmO9uJRDw6CvoMgqmADXnDo95xyGasEsw6TZalE5GDoqfu0uJnZRW10rlTKH6cOUiEO1iWdivlJG7I4k_NM4MXGy90xgia38Ug7dpfG2TALpGZbEVHe1SVVSy5P2xpLVhbPp3gjI7fHW8HWIssqvhzGffkGp2#:~:text=AWS%20was%20first%20to%20market,share%2C%20at%20least%20for%20now."&gt;released Amazon Web Services&lt;/a&gt; in 2006. By making Amazon’s excess compute resources available to other software companies to use in the form of APIs, the capital and expertise needed to build a software company was reduced dramatically. Do you want to spend your technical resources trying to scale and manage infrastructure better than Amazon? For the vast majority of companies the answer is no, they’d rather spend those resources focusing on the more specialized parts of their software, and that’s why AWS generated $46 billion in revenue last year. &lt;/p&gt;

&lt;p&gt;Since AWS, hundreds of other API-as-a-service companies have emerged to help other software companies build faster and cheaper. Twilio came up for digital communication. Stripe was used for payments. Shopify was available for e-commerce. Okta became important for user authentication. Just these four companies represent over $350 billion in enterprise value and have laid a lot of the groundwork for this industry, but it’s still very early in this movement. There are still many parts of the software stack that have yet to be ‘prefabricated’ and millions of hours of development are still spent on building the same functionality over and over again when it would be far more efficient and lead to more innovation if those hours were spent on building unique value.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#build-vs-buy-has-become-an-important-decision-for-developers"&gt;
  &lt;/a&gt;
  Build Vs. Buy Has Become An Important Decision For Developers
&lt;/h2&gt;

&lt;p&gt;The rise of APIs-as-a-service is increasing both the prevalence and importance of the ‘build vs buy’ decision within engineering teams. Should we roll our own user authentication service or buy Auth0? Should we roll our own payments platform or buy Stripe? As my colleague Tejas controversially argued in &lt;a href="https://www.courier.com/blog/the-three-things-to-never-build-in-your-app"&gt;his post&lt;/a&gt;, user authentication, payments, and notifications are three things that you should never build yourself. While many people did not agree with that particular thesis, the trend of engineering orgs evaluating API solutions in order to get their product to market faster is certainly growing.&lt;/p&gt;

&lt;p&gt;What this means for engineers is that having the ability to effectively evaluate APIs and run a cost benefit analysis as opposed to creating a custom solution is becoming increasingly important. As a company that builds and sells an API, we see it all the time here at Courier. A software company, typically a medium to large startup, begins to run into some pain points around sending and managing product notifications. A decision is made to find a new notification service that meets their needs and tap a senior engineer to decide how this problem should be solved. He or she typically evaluates using Courier rather than rolling out a custom solution and then makes a case for which solution they think is a better fit to their team. &lt;/p&gt;

&lt;p&gt;Having a good understanding of the currently available products and functionality offer, being able to effectively estimate the total cost of ownership for both an API solution as well as a homegrowth solution, and being able to effectively map out the integration strategy for API  products are all skill sets that are becoming ever more valuable in both developers and engineering leaders.  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-developer-as-artist"&gt;
  &lt;/a&gt;
  The Developer As Artist
&lt;/h2&gt;

&lt;p&gt;As APIs handle more and more of the monotonous and undifferentiated parts of the software stack, developers' time is being freed to be spent creating new, unique, and highly valuable product experiences. In the past several years we’ve seen brand new software startups take on challenges as diverse and complex as automating and streamlining the mortgage application process, building marketplaces for pretty much any good or service imaginable, democratizing the ownership of publicly traded stock, and much more. &lt;/p&gt;

&lt;p&gt;As the proliferation of APIs continues, software development will be able to focus less on solving low level systems and infrastructure challenges and more on the creative side of product and customer experience. Of course, there will always be a place for the engineers who truly want to dig into systems challenges (someone does have to build these APIs, after all), but the engineer who is adept at leveraging APIs in order to deliver a more differentiated product more quickly will become increasingly valuable and sought after.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#this-is-only-the-beginning"&gt;
  &lt;/a&gt;
  This Is Only The Beginning
&lt;/h2&gt;

&lt;p&gt;The prefabrication of software via APIs is the next big wave of disruption in the software industry, and while it has already arrived, we’re only in the beginning phases. There are still hundreds, maybe thousands, of technical challenges that are repeatedly solved across nearly every software company or vertical that could be successfully prefabricated via an API. As slower moving industries such as insurance, healthcare, education, and  finance become increasingly digital, additional API services will emerge to serve those industries. As digital regulations around privacy and security continue to mature, we’ll see more APIs focused at helping with compliance. The startup engineers of the future will either be building APIs to help other companies move faster or leveraging those APIs to take their own product to market.&lt;/p&gt;

</description>
      <category>api</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>startup</category>
    </item>
    <item>
      <title>Bypass AWS_ENDPOINT to interact with any S3 compatible service from CockroachDB</title>
      <author>Fabio Ghirardello</author>
      <pubDate>Tue, 12 Oct 2021 17:29:14 +0000</pubDate>
      <link>https://dev.to/cockroachlabs/bypass-awsendpoint-to-interact-with-any-s3-compatible-service-from-cockroachdb-43em</link>
      <guid>https://dev.to/cockroachlabs/bypass-awsendpoint-to-interact-with-any-s3-compatible-service-from-cockroachdb-43em</guid>
      <description>&lt;p&gt;In this blog I will demonstrate how you can trick an application or service, in our case CockroachDB, into thinking it's communicating with AWS S3 when in fact another service lays behind the scenes.&lt;/p&gt;

&lt;p&gt;CockroachDB is perfectly capable to interact with any S3 compatible services. Following the instructions of the AWS SDK, you can add parameter &lt;code&gt;AWS_ENDPOINT&lt;/code&gt; to your URI to tell CockroachDB what server to hit instead of the default AWS servers. This is clearly documented &lt;a href="https://www.cockroachlabs.com/docs/v21.1/use-cloud-storage-for-bulk-operations#url-format"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;However, this blog comes as a follow up from a customer interaction where their requirement was to NOT use &lt;code&gt;AWS_ENDPOINT&lt;/code&gt; in their URI, yet still using their own private S3 compatible service.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setup"&gt;
  &lt;/a&gt;
  Setup
&lt;/h2&gt;

&lt;p&gt;Create a t2.micro or similar instance on your favorite cloud provider.&lt;br&gt;
For this exercise, the instance has the below details:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;OS         : Ubuntu 20.04 LTS
Public IP  : 54.83.105.95
Private IP : 10.10.81.189
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#install-and-configure-minio"&gt;
  &lt;/a&gt;
  Install and Configure MinIO
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://min.io/"&gt;MinIO&lt;/a&gt; is a S3 compatible service and it is my favorite choice for when I want to play locally with the S3 API. We will therefore use the MinIO Server as our custom endpoint instead of AWS S3.&lt;/p&gt;

&lt;p&gt;Below the steps to run MinIO, also available in the &lt;a href="https://docs.min.io/docs/how-to-secure-access-to-minio-server-with-tls.html"&gt;official docs&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# download the binary&lt;/span&gt;
wget https://dl.min.io/server/minio/release/linux-amd64/minio
&lt;span class="nb"&gt;chmod&lt;/span&gt; +x minio
./minio server data
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;At this point MinIO is running in insecure mode.&lt;br&gt;
It will also have created the configuration folders at &lt;code&gt;${HOME}/.minio/certs&lt;/code&gt;.&lt;br&gt;
Stop the server with &lt;code&gt;Ctrl+C&lt;/code&gt;, then configure secure access with TLS.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# allow minio to start on port 443&lt;/span&gt;
&lt;span class="nb"&gt;sudo &lt;/span&gt;setcap &lt;span class="nv"&gt;cap_net_bind_service&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;+ep minio

&lt;span class="c"&gt;# create the private key&lt;/span&gt;
&lt;span class="nb"&gt;cd&lt;/span&gt; .minio/certs
openssl genrsa &lt;span class="nt"&gt;-out&lt;/span&gt; private.key 2048
&lt;span class="nb"&gt;chmod &lt;/span&gt;400 private.key
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create a file named &lt;code&gt;openssl.conf&lt;/code&gt; with the content below. Check the &lt;code&gt;alt_names&lt;/code&gt; section carefully: in this context, &lt;code&gt;fabio&lt;/code&gt; is the name of the s3 bucket.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[req]
distinguished_name = req_distinguished_name
x509_extensions = v3_req
prompt = no

[req_distinguished_name]
C = US
ST = VA
L = Somewhere
O = MyOrg
OU = MyOU
CN = MyServerName

[v3_req]
subjectAltName = @alt_names

[alt_names]
IP.1 = 127.0.0.1
IP.2 = 54.83.105.95
IP.3 = 10.10.81.189
DNS.1 = localhost
DNS.2 = s3.amazonaws.com
DNS.3 = fabio.s3.amazonaws.com
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create the public cert&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;openssl req &lt;span class="nt"&gt;-new&lt;/span&gt; &lt;span class="nt"&gt;-x509&lt;/span&gt; &lt;span class="nt"&gt;-nodes&lt;/span&gt; &lt;span class="nt"&gt;-days&lt;/span&gt; 730 &lt;span class="nt"&gt;-key&lt;/span&gt; private.key &lt;span class="nt"&gt;-out&lt;/span&gt; public.crt &lt;span class="nt"&gt;-config&lt;/span&gt; openssl.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Setup MinIO Server to use Virtual Hosted-Style, as per &lt;a href="https://stackoverflow.com/questions/59693471/how-to-setup-minio-server-to-use-virtual-hosted-style"&gt;here&lt;/a&gt;.&lt;br&gt;
This is required to match AWS S3 style.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;MINIO_DOMAIN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;s3.amazonaws.com
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally, start the MinIO Server&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;~/minio server &lt;span class="nt"&gt;--console-address&lt;/span&gt; &lt;span class="s2"&gt;":9001"&lt;/span&gt; &lt;span class="nt"&gt;--address&lt;/span&gt; &lt;span class="s2"&gt;":443"&lt;/span&gt; ~/data

API: https://10.10.82.1  https://127.0.0.1     
RootUser: minioadmin 
RootPass: minioadmin 

Console: https://10.10.82.1:9001 https://127.0.0.1:9001   
RootUser: minioadmin 
RootPass: minioadmin 

Command-line: https://docs.min.io/docs/minio-client-quickstart-guide
   &lt;span class="nv"&gt;$ &lt;/span&gt;mc &lt;span class="nb"&gt;alias set &lt;/span&gt;myminio https://10.10.82.1 minioadmin minioadmin

Documentation: https://docs.min.io
WARNING: Detected default credentials &lt;span class="s1"&gt;'minioadmin:minioadmin'&lt;/span&gt;, we recommend that you change these values with &lt;span class="s1"&gt;'MINIO_ROOT_USER'&lt;/span&gt; and &lt;span class="s1"&gt;'MINIO_ROOT_PASSWORD'&lt;/span&gt; environment variables
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Point your browser at &lt;a href="https://54.83.105.95:9001"&gt;https://54.83.105.95:9001&lt;/a&gt; to access the &lt;strong&gt;MinIO Console&lt;/strong&gt;. As the self-signed certificate is invalid, the browser might not allow you to continue. In Brave Browser, and other Chrome based browsers, type &lt;code&gt;thisisunsafe&lt;/code&gt; anywhere on the screen (not on the address toolbar) to continue and disregard the warning.&lt;/p&gt;

&lt;p&gt;Login with &lt;code&gt;minioadmin/minioadmin&lt;/code&gt;, which are the default login details. Once logged in, you'll see the Dashboard page, below&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pgPL9Als--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lmyb3jlvo1v5lnyhdpt8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pgPL9Als--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lmyb3jlvo1v5lnyhdpt8.png" alt="minio-dashboard"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Using the menu on the left, create a &lt;strong&gt;bucket&lt;/strong&gt; called &lt;code&gt;fabio&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DiyeKazp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/elk69mt78pwswek6zmqm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DiyeKazp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/elk69mt78pwswek6zmqm.png" alt="bucket"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then create a &lt;strong&gt;User&lt;/strong&gt; &lt;code&gt;fabio&lt;/code&gt; with any password you want. Make sure assign the &lt;code&gt;consoleAdmin&lt;/code&gt;, &lt;code&gt;readwrite&lt;/code&gt; and &lt;code&gt;diagnostic&lt;/code&gt; policies to the user, so you don't run into any permission issue. Later on, you can refine these permissions.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5Dsbt-1o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nf56coo5c77nx846vuw6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5Dsbt-1o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nf56coo5c77nx846vuw6.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then, click on the user you just created and create a &lt;strong&gt;Service Account&lt;/strong&gt;, and make sure you save the keys. In my example, the keys are:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Access Key: I6SX7TO71RZY79FXDK1T
Secret Key: 7TxSqDyrvOXCV+EWkRvZKSOXETriFik5LKNWmkQm
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vGgxBqNZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7x1377lj2x79z0q6xe5l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vGgxBqNZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7x1377lj2x79z0q6xe5l.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Finally, go to &lt;strong&gt;Settings&lt;/strong&gt; and change the region to &lt;code&gt;us-east-1&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nALqsTh4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jo5kfnggwrb94el9d1r4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nALqsTh4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jo5kfnggwrb94el9d1r4.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This will prompt you to RESTART the server. Do so by stopping the server, and restarting it.&lt;/p&gt;

&lt;p&gt;Perfect, you're all set! MinIO Server is up and running in secure mode, and you've a service account to interact with it.&lt;/p&gt;

&lt;p&gt;Next, we configure the OS.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#linux-os-configuration"&gt;
  &lt;/a&gt;
  Linux OS configuration
&lt;/h2&gt;

&lt;p&gt;For CockroachDB to trust the certificate, we must add it to the system cert pool. We also need to redirect the traffic aimed at AWS servers to MinIO's.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#allow-selfsigned-certs"&gt;
  &lt;/a&gt;
  Allow self-signed certs
&lt;/h3&gt;

&lt;p&gt;In Ubuntu, this is how you go about, as per &lt;a href="https://askubuntu.com/questions/73287/how-do-i-install-a-root-certificate"&gt;here&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo mkdir&lt;/span&gt; /usr/local/share/ca-certificates/extra
&lt;span class="nb"&gt;sudo cp&lt;/span&gt; ~/.minio/certs/public.crt /usr/local/share/ca-certificates/extra/
&lt;span class="nb"&gt;sudo &lt;/span&gt;update-ca-certificates
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#routing"&gt;
  &lt;/a&gt;
  Routing
&lt;/h3&gt;

&lt;p&gt;Edit file &lt;code&gt;/etc/hosts&lt;/code&gt; and add these entries to route all traffic directed to Amazon AWS servers to the MinIO Server instead.&lt;br&gt;
Again, &lt;code&gt;fabio&lt;/code&gt; is the name of the bucket.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;54.83.105.95 s3.amazonaws.com
54.83.105.95 s3.us-east-1.amazonaws.com
54.83.105.95 fabio.s3.amazonaws.com 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Good, we're all set from OS point of view. Next, we test with CockroachDB.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cockroachdb"&gt;
  &lt;/a&gt;
  CockroachDB
&lt;/h2&gt;

&lt;p&gt;Install and start CockroachDB. We will use the single-node feature as we're only trying to prove it works from a functionality perspective.&lt;/p&gt;

&lt;p&gt;As always, the offical installation docs are &lt;a href="https://www.cockroachlabs.com/docs/stable/install-cockroachdb-linux"&gt;here&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;curl https://binaries.cockroachdb.com/cockroach-v21.1.10.linux-amd64.tgz | &lt;span class="nb"&gt;tar&lt;/span&gt; &lt;span class="nt"&gt;-xz&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;sudo cp&lt;/span&gt; &lt;span class="nt"&gt;-i&lt;/span&gt; cockroach-v21.1.10.linux-amd64/cockroach /usr/local/bin/
cockroach start-single-node &lt;span class="nt"&gt;--insecure&lt;/span&gt; &lt;span class="nt"&gt;--background&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Connect to the SQL prompt as root:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;cockroach sql &lt;span class="nt"&gt;--insecure&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create a user - doesn't have to be an admin -, then logout and log back in as that user&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;USER&lt;/span&gt; &lt;span class="n"&gt;fabio&lt;/span&gt; &lt;span class="k"&gt;WITH&lt;/span&gt; &lt;span class="k"&gt;CREATEDB&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;cockroach sql &lt;span class="nt"&gt;--insecure&lt;/span&gt; &lt;span class="nt"&gt;-u&lt;/span&gt; fabio
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As user &lt;code&gt;fabio&lt;/code&gt;, create a simple test table and export it. Make sure you update the keys with your values!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;DATABASE&lt;/span&gt; &lt;span class="n"&gt;fabio&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;USE&lt;/span&gt; &lt;span class="n"&gt;fabio&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="n"&gt;test&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; 
  &lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; 
  &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;generate_series&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;-- notice that we don't use AWS_ENDPOINT in the URI&lt;/span&gt;
&lt;span class="n"&gt;EXPORT&lt;/span&gt; &lt;span class="k"&gt;INTO&lt;/span&gt; &lt;span class="n"&gt;CSV&lt;/span&gt;     
  &lt;span class="s1"&gt;'s3://fabio?AWS_ACCESS_KEY_ID=I6SX7TO71RZY79FXDK1T&amp;amp;AWS_SECRET_ACCESS_KEY=7TxSqDyrvOXCV+EWkRvZKSOXETriFik5LKNWmkQm'&lt;/span&gt;
  &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;                              filename                             | rows | bytes
-------------------------------------------------------------------+------+--------
  export16ad4c7f75f4fe180000000000000001-n701156393427501057.0.csv |  100 |   292
(1 row)

Time: 38ms total (execution 38ms / network 0ms)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As &lt;code&gt;root&lt;/code&gt;, take a full cluster backup&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="n"&gt;BACKUP&lt;/span&gt; &lt;span class="k"&gt;INTO&lt;/span&gt;
  &lt;span class="s1"&gt;'s3://fabio?AWS_ACCESS_KEY_ID=I6SX7TO71RZY79FXDK1T&amp;amp;AWS_SECRET_ACCESS_KEY=7TxSqDyrvOXCV+EWkRvZKSOXETriFik5LKNWmkQm'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;        job_id       |  status   | fraction_completed | rows | index_entries | bytes
---------------------+-----------+--------------------+------+---------------+--------
  701160820164395009 | succeeded |                  1 |  126 |            14 |  5920
(1 row)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Refresh the MinIO Console to see your files&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8aOrBsC---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/26avfbkd9i6dygx45t0b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8aOrBsC---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/26avfbkd9i6dygx45t0b.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Awesome! The CockroachDB end-user has no clue that the engine behind the scenes is MinIO instead of AWS, and CockroachDB is happy to IMPORT, EXPORT, BACKUP and RESTORE from S3, be it AWS' or Minio's.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#reference"&gt;
  &lt;/a&gt;
  Reference
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://min.io/"&gt;MinIO&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.cockroachlabs.com/product/"&gt;CockroachDB&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>cockroachdb</category>
      <category>minio</category>
      <category>s3</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Top 6 blockchain development frameworks</title>
      <author>Matt Angelosanto</author>
      <pubDate>Tue, 12 Oct 2021 17:11:09 +0000</pubDate>
      <link>https://dev.to/logrocket/top-6-blockchain-development-frameworks-5190</link>
      <guid>https://dev.to/logrocket/top-6-blockchain-development-frameworks-5190</guid>
      <description>&lt;p&gt;&lt;strong&gt;Written by &lt;a href="https://blog.logrocket.com/author/chidumennamdi/"&gt;Chidume Nnamdi&lt;/a&gt; ✏️&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Blockchain has revolutionized the way we see and do things on the internet. Many companies are switching to blockchain to increase transparency and immutability, reduce transaction costs, and eliminate the need for a middleman.&lt;/p&gt;

&lt;p&gt;A blockchain network removes need for a centralized database because everyone in the network can see the transactions and also validate them. This creates trust and transparency between participants in the network.&lt;/p&gt;

&lt;p&gt;A lot goes into the decision to switch to blockchain. Among the most fundamental and important considerations is selecting the right blockchain framework on which to run your enterprise.&lt;/p&gt;

&lt;p&gt;There are too many blockchain development frameworks to explore in a single blog post. Instead, we’ll focus on six of the most popular and widely used frameworks in the blockchain development world:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; Ethereum&lt;/li&gt;
&lt;li&gt; Hyperledger Fabric&lt;/li&gt;
&lt;li&gt; Hyperledger Sawtooth&lt;/li&gt;
&lt;li&gt; EOSIO&lt;/li&gt;
&lt;li&gt; Corda&lt;/li&gt;
&lt;li&gt; Quorum&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;We’ll evaluate each for its consensus algorithms, ledger types, cryptocurrency, and smart contract support.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-blockchain"&gt;
  &lt;/a&gt;
  What is blockchain?
&lt;/h2&gt;

&lt;p&gt;Blockchain is based on decentralization networking technology, just like a peer-to-peer network. Blockchain's decentralization works just like Napster: each party in the network is connected to each other. This is different from the normal client-server network you might be accustomed to. Each node in a blockchain network serves as both the client and the server.&lt;/p&gt;

&lt;p&gt;In a blockchain network, a public database, ledger, or record is maintained and shared by the nodes in the network. This ledger contains transactions that happened in the network, and these transactions are verified by majority consensus in the network. Once a new transaction is verified and entered into the ledger, this ledger is broadcast to all the nodes in the network. This way, the nodes have the current ledger with the latest transactions.&lt;/p&gt;

&lt;p&gt;It’s easy to see why companies in a wide range of industries are adopting blockchain technology to facilitate secure transactions of valuable assets, such as digital files, properties, currency, and much more.&lt;/p&gt;

&lt;p&gt;Without further ado, let's explore six of the most popular frameworks for developing blockchain-powered apps. We'll highlight key features and break down strengths and weaknesses to help you make a more informed decision when selecting the right platform to develop your blockchain network.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-ethereum"&gt;
  &lt;/a&gt;
  1. Ethereum
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OMg4cqzW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/10/ethereum.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OMg4cqzW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/10/ethereum.jpeg" alt="Ethereum"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://ethereum.org/en/"&gt;Ethereum&lt;/a&gt; is the most popular and widely used blockchain development platform in the world. In fact, it is the very first blockchain development platform. Built in 2015, it introduced a revolutionary feature known as the &lt;a href="https://ethereum.org/en/developers/docs/smart-contracts/#:~:text=A%20%22smart%20contract%22%20is%20simply,runs%20on%20the%20Ethereum%20blockchain.&amp;amp;text=Smart%20contracts%20are%20a%20type,network%20and%20run%20as%20programmed."&gt;smart contract&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A smart contract is a program that contains functions and states. Each smart contract runs on a specific address in the Ethereum blockchain. Because smart contracts are an autonomous type of &lt;a href="https://ethereum.org/en/developers/docs/accounts/"&gt;account on Ethereum&lt;/a&gt;, they can &lt;a href="https://ethereum.org/en/developers/docs/transactions/"&gt;send transactions&lt;/a&gt; and also have balance.&lt;/p&gt;

&lt;p&gt;Another awesome feature of Ethereum is the &lt;a href="https://ethereum.org/en/developers/docs/evm/"&gt;Ethereum Virtual Machine (EVM)&lt;/a&gt;. The virtual machine in EVM is a virtual computer on which Ehtereum accounts and smart contracts are run.&lt;/p&gt;

&lt;p&gt;The EVM enables you to create decentralized apps (DApps) that run on Ethereum. The range of use cases for DApps is quickly expanding beyond the finance industry, stretching into fields as diverse as healthcare, logistics, real estate, the legal system, and many more.&lt;/p&gt;

&lt;p&gt;Ethereum's smart contracts are written in &lt;a href="https://soliditylang.org/"&gt;Solidity&lt;/a&gt; language. Etheruem has a &lt;strong&gt;permissionless&lt;/strong&gt; ledger type and is open for public use. Its consensus mechanism is proof of work, which is known to be quite slow.&lt;/p&gt;

&lt;p&gt;Ethereum has a cryptocurrency called Ether. Ether is used to pay for creating and initializing a transaction in the Ethereum blockchain.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Ledger Type&lt;/th&gt;
&lt;th&gt;Consensus&lt;/th&gt;
&lt;th&gt;Cryptocurrency&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Permissionless&lt;/td&gt;
&lt;td&gt;PoW&lt;/td&gt;
&lt;td&gt;Ether&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#2-hyperlegder-fabric"&gt;
  &lt;/a&gt;
  2. Hyperlegder Fabric
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4ZSo1D5r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/10/hyperledger-fabric.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4ZSo1D5r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/10/hyperledger-fabric.png" alt="Hyperledger Fabric"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://hyperledger-fabric.readthedocs.io/en/release-2.2/"&gt;Hyperledger Fabric&lt;/a&gt; is a permissioned distributed ledger framework developed by the Hyperledger Hub. The Hyperledger Hub is a project developed by the Linux Foundation for the open development of both centralized and decentralized blockchain platforms.&lt;/p&gt;

&lt;p&gt;Fabric is aimed at enterprises that want to use, integrate, or build blockchain-based solutions and applications.&lt;/p&gt;

&lt;p&gt;Hyperledger Fabric is similar to Ethereum for not only its permissioned ledger type but also its modular architecture. This modularity gives Fabric a plug-and-play kind of interface where you can select your preferred services, such as the consensus algorithm, smart contracts types, etc.&lt;/p&gt;

&lt;p&gt;Hyperledger Fabric also supports &lt;a href="https://hyperledger-fabric.readthedocs.io/en/latest/sdk_chaincode.html"&gt;smart contracts&lt;/a&gt;. Smart contracts on Fabric can be written in Go, Java, and JavaScript.&lt;/p&gt;

&lt;p&gt;If you encounter any issues that aren’t covered by the docs, the Hyperledger Fabric team has made itself available to &lt;a href="https://hyperledger-fabric.readthedocs.io/en/latest/questions.html"&gt;answer your questions&lt;/a&gt;.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Ledger Type&lt;/th&gt;
&lt;th&gt;Consensus&lt;/th&gt;
&lt;th&gt;Cryptocurrency&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Permissionless&lt;/td&gt;
&lt;td&gt;Pluggable Framework&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#3-hyperledger-sawtooth"&gt;
  &lt;/a&gt;
  3. Hyperledger Sawtooth
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gBY8yG3n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/10/hyperledger-sawtooth.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gBY8yG3n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/10/hyperledger-sawtooth.png" alt="Hyperledger Sawtooth"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://sawtooth.hyperledger.org/"&gt;Hyperledger Sawtooth&lt;/a&gt; is another modular blockchain platform from the Hyperledger Hub designed for developing distributed ledger applications and networks. Hyperledger Sawtooth was launched by the Linux Foundation and is now maintained by IBM and Digital Assets.&lt;/p&gt;

&lt;p&gt;Enterprises use Hyperledger Sawtooth to build scalable and robust systems and to deploy highly secured blockchain solutions. Just like Fabric and Ethereum, Hyperledger Sawtooth has a permissioned ledger type.&lt;/p&gt;

&lt;p&gt;Hyperledger Sawtooth has a range of advanced features and integrations, including:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  An integration project called &lt;a href="https://sawtooth.hyperledger.org/docs/seth/releases/latest/introduction.html"&gt;Seth&lt;/a&gt; (Sawtooth-Ethereum), which makes it possible to deploy Etheruem smart contracts on Hyperledger Sawtooth&lt;/li&gt;
&lt;li&gt;  Parallel processing, which facilitates faster transaction processing compared to other blockchain platforms&lt;/li&gt;
&lt;li&gt;  A dynamic, undefined consensus protocol, which means you can change the consensus algorithm anytime you want&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Speaking of consensus algorithms, Hyperledger Sawtooth has many, including:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  PoET (proof of elapsed time), which relies on secure instruction execution to achieve the scaling benefits of a Nakamoto-style consensus algorithm without the power consumption drawbacks of the proof of work algorithm&lt;/li&gt;
&lt;li&gt;  PBFT (practical Byzantine fault tolerance), a voting-based algorithm that uses dynamic network membership, regular view changes, and block catch-up procedure features to vote for an agreement among the participants in the network&lt;/li&gt;
&lt;li&gt;  Raft, a consensus engine that utilizes and is based on &lt;a href="http://raft.github.io/"&gt;Raft&lt;/a&gt;. This consensus uses the logs of relatively independent subproblems to agree on a value and make a decision&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;View Hyperledger Sawtooth source code is available on &lt;a href="https://github.com/hyperledger/sawtooth-core"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Ledger Type&lt;/th&gt;
&lt;th&gt;Consensus&lt;/th&gt;
&lt;th&gt;Cryptocurrency&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Permissionless&lt;/td&gt;
&lt;td&gt;Pluggable Framework&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#4-eosio"&gt;
  &lt;/a&gt;
  4. EOSIO
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--epyYJFeH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/10/eos.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--epyYJFeH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/10/eos.jpeg" alt="EOSIO"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://eos.io/"&gt;EOSIO&lt;/a&gt; is a highly performant, open-source blockchain platform launched in 2018 by Block.one. EOSIO offers a fast, reliable, and highly secure platform for building blockchain applications.&lt;/p&gt;

&lt;p&gt;EOSIO allows you to deploy smart contracts on its existing networks. You can also build your own EOSIO networks and deploy smart contracts on them.&lt;/p&gt;

&lt;p&gt;EOSIO smart contracts are written in the C++ programming language. To learn how to write and deploy smart contracts on EOSIO, see the &lt;a href="https://eos.io/"&gt;official docs&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Though not as popular as stalwarts like Ethereum, EOSIO has some unique selling points. Developers choose EOSIO for their blockchain projects because it is:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Fast and efficient&lt;/li&gt;
&lt;li&gt;  Highly configurable&lt;/li&gt;
&lt;li&gt;  Highly secure&lt;/li&gt;
&lt;li&gt;  Highly compatible&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://eos.io/for-developers/"&gt;Developer-focused&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As a cherry on top, the EOSIO website does a great job of keeping the community abreast of the latest &lt;a href="https://eos.io/news-insights/"&gt;news&lt;/a&gt; and &lt;a href="https://eos.io/events/"&gt;events&lt;/a&gt;.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Ledger Type&lt;/th&gt;
&lt;th&gt;Consensus&lt;/th&gt;
&lt;th&gt;Cryptocurrency&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Permissioned&lt;/td&gt;
&lt;td&gt;Delegated Proof of Stake&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#5-corda"&gt;
  &lt;/a&gt;
  5. Corda
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4Jc6qpYI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/10/r3-corda.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4Jc6qpYI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/10/r3-corda.jpeg" alt="R3 Corda"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.r3.com/corda-platform/"&gt;Corda&lt;/a&gt; is an open-source blockchain platform built by the R3 Consortium in 2015. Corda was initially designed for financial institutions, but it has since been expanded to serve additional fields such as healthcare, insurance, digital assets, and finance. The next-gen blockchain framework bills itself as “the DLT platform of choice for financial services and beyond.”&lt;/p&gt;

&lt;p&gt;Corda has a permission ledger type and supports the smart contract feature, meaning you can write and deploy smart contracts on the Corda blockchain. &lt;a href="https://docs.r3.com/en/platform/corda/4.8/open-source/key-concepts.html"&gt;Corda smart contracts&lt;/a&gt; can either be written in Java or Kotlin.&lt;/p&gt;

&lt;p&gt;The platform has no mining feature, so part of the transactions is never seen in most nodes. In other words, Corda transactions are not open for all nodes. There are no cryptocurrencies or tokens in Corda.&lt;/p&gt;

&lt;p&gt;Corda has a pluggable consensus, which means it has many &lt;a href="https://docs.r3.com/en/platform/corda/4.8/open-source/key-concepts-consensus.html"&gt;consensus algorithms&lt;/a&gt; to choose from.&lt;/p&gt;

&lt;p&gt;Corda has validity consensus and uniqueness consensus:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Validity consensus checks that the transaction is accepted by the contracts of every state and inputs and that the transaction has all the required signatures&lt;/li&gt;
&lt;li&gt;  Unique consensus agrees to a value if the inputs to a transaction are unique and have not been used in other transactions&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Ledger Type&lt;/th&gt;
&lt;th&gt;Consensus&lt;/th&gt;
&lt;th&gt;Cryptocurrency&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Permissioned&lt;/td&gt;
&lt;td&gt;Delegated Proof of Stake&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#6-quorum"&gt;
  &lt;/a&gt;
  6. Quorum
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--izjqD9ze--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/10/acquies-quorum.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--izjqD9ze--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/10/acquies-quorum.jpeg" alt="Quorum"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://consensys.net/quorum/"&gt;Quorum&lt;/a&gt; is an open-source blockchain platform based on Ethereum. Built around 2016, it was designed to serve the finance industry and enable enterprises to “leveral Ethereum for their high-value blockchain applications.”&lt;/p&gt;

&lt;p&gt;Recently, &lt;a href="https://www.businesswire.com/news/home/20200825005497/en/ConsenSys-Acquires-Quorum%C2%AE-Platform-from-J.P.-Morgan"&gt;Quorum was acquired by ConsenSys from JP Morgan&lt;/a&gt;. Many companies trust Quorum and have adopted it in their business, including Microsft, JP Morgan, Covantis, South African Reserve Bank, SiaChain, Komgo, and more.&lt;/p&gt;

&lt;p&gt;Quorum has support for enterprises that want to adopt the blockchain platform for their business. It has a permissioned ledger type but also allows for customizations based on the client’s need. In addition, Quorum supports both public and private networks as well as smart contracts.&lt;/p&gt;

&lt;p&gt;Just like in Ethereum, smart contracts in Quorum are written in Solidity, making it very easy to switch from Ethereum to Quorum. The consensus algorithm of Quorum is voting-based; it agrees to a transaction and block depending on the number of votes the transaction and block have from the nodes.&lt;/p&gt;

&lt;p&gt;For more information on how to get started using the Quorum blockchain platform, see the official &lt;a href="https://consensys.net/quorum/developers/"&gt;developer docs&lt;/a&gt;.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Ledger Type&lt;/th&gt;
&lt;th&gt;Consensus&lt;/th&gt;
&lt;th&gt;Cryptocurrency&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Permissioned&lt;/td&gt;
&lt;td&gt;Voting&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;There are many blockchain development frameworks available, but the ones listed here are the most popular in the world.&lt;/p&gt;

&lt;p&gt;In this guide, we introduced the concept of blockchain, described how it’s changing the world as we know it, and listed the most widely used blockchain development platforms. We evaluated each platform for its strengths and weaknesses, reviewed common use cases associated with each, and examined the supported consensus algorithms, ledger types, and cryptocurrencies.&lt;/p&gt;

&lt;p&gt;Blockchain is a complex topic to wrap your head around, especially with all the various platforms available for developing blockchain-based apps. The best way to learn is to start with the basics, discover how they work under the hood, and build from there. Keep your eye on this space for more blockchain content!&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#logrocket-full-visibility-into-your-web-apps"&gt;
  &lt;/a&gt;
  &lt;a href="https://logrocket.com/signup/"&gt;LogRocket&lt;/a&gt;: Full visibility into your web apps
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://logrocket.com/signup/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8FGBNR-I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2017/03/1d0cd-1s_rmyo6nbrasp-xtvbaxfg.png" alt="LogRocket Dashboard Free Trial Banner"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://logrocket.com/signup/"&gt;LogRocket&lt;/a&gt; is a frontend application monitoring solution that lets you replay problems as if they happened in your own browser. Instead of guessing why errors happen, or asking users for screenshots and log dumps, LogRocket lets you replay the session to quickly understand what went wrong. It works perfectly with any app, regardless of framework, and has plugins to log additional context from Redux, Vuex, and &lt;a class="mentioned-user" href="https://dev.to/ngrx"&gt;@ngrx&lt;/a&gt;
/store.&lt;/p&gt;

&lt;p&gt;In addition to logging Redux actions and state, LogRocket records console logs, JavaScript errors, stacktraces, network requests/responses with headers + bodies, browser metadata, and custom logs. It also instruments the DOM to record the HTML and CSS on the page, recreating pixel-perfect videos of even the most complex single-page apps.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://logrocket.com/signup/"&gt;Try it for free&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>blockchain</category>
      <category>webdev</category>
    </item>
    <item>
      <title>How to List Contents of s3 Bucket Using Boto3 Python?</title>
      <author>Vikram Aruchamy</author>
      <pubDate>Tue, 12 Oct 2021 16:37:48 +0000</pubDate>
      <link>https://dev.to/aws-builders/how-to-list-contents-of-s3-bucket-using-boto3-python-47mm</link>
      <guid>https://dev.to/aws-builders/how-to-list-contents-of-s3-bucket-using-boto3-python-47mm</guid>
      <description>&lt;p&gt;S3 is a storage service from AWS. You can store any files such as CSV files or text files. You may need to retrieve the list of files to make some file operations. You'll learn how to list the contents of an S3 bucket in this tutorial. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;You can list contents of the S3 Bucket by iterating the dictionary returned from &lt;code&gt;my_bucket.objects.all()&lt;/code&gt; method.&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If You're in Hurry...&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can use the below code snippet to list the contents of the S3 Bucket using boto3.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Snippet&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import boto3

session = boto3.Session( aws_access_key_id='&amp;lt;your_access_key_id&amp;gt;', aws_secret_access_key='&amp;lt;your_secret_access_key&amp;gt;')



s3 = session.resource('s3')

my_bucket = s3.Bucket('stackvidhya')

for my_bucket_object in my_bucket.objects.all():
    print(my_bucket_object.key)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    csv_files/
    csv_files/IRIS.csv
    df.csv
    dfdd.csv
    file2_uploaded_by_boto3.txt
    file3_uploaded_by_boto3.txt
    file_uploaded_by_boto3.txt
    filename_by_client_put_object.txt
    text_files/
    text_files/testfile.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;If You Want to Understand Details, Read on…&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In this tutorial, you'll learn the different methods to list contents from an S3 bucket using boto3. &lt;/p&gt;

&lt;p&gt;You'll use &lt;a href="https://www.askvikram.com/difference-between-boto3-session-resource-client/"&gt;boto3 resource and boto3 client&lt;/a&gt; to list the contents and also use the filtering methods to list specific file types and list files from the specific directory of the S3 Bucket. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#installing-boto3"&gt;
  &lt;/a&gt;
  Installing Boto3
&lt;/h2&gt;

&lt;p&gt;If you've not installed boto3 yet, you can install it by using the below snippet. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Snippet&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;%pip install boto3
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Boto3 will be installed successfully. &lt;/p&gt;

&lt;p&gt;Now, you can use it to access AWS resources. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#using-boto3-resource"&gt;
  &lt;/a&gt;
  Using Boto3 Resource
&lt;/h3&gt;

&lt;p&gt;In this section, you'll use the Boto3 resource to list contents from an s3 bucket. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.askvikram.com/difference-between-boto3-session-resource-client/#boto3_resource"&gt;Boto3 resource&lt;/a&gt; is a high-level object-oriented API that represents the AWS services. Follow the below steps to list the contents from the S3 Bucket using the Boto3 resource. &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create Boto3 session using &lt;code&gt;boto3.session()&lt;/code&gt; method&lt;/li&gt;
&lt;li&gt;Create the &lt;code&gt;S3&lt;/code&gt; resource &lt;code&gt;session.resource('s3')&lt;/code&gt; snippet&lt;/li&gt;
&lt;li&gt;Create bucket object using the &lt;code&gt;resource.Bucket(&amp;lt;Bucket_name&amp;gt;)&lt;/code&gt; method. &lt;/li&gt;
&lt;li&gt;Invoke the &lt;a href="https://boto3.amazonaws.com/v1/documentation/api/latest/guide/collections.html#when-collections-make-requests"&gt;objects.all()&lt;/a&gt; method from your bucket and &lt;a href="https://www.stackvidhya.com/iterate-through-dictionary-python/"&gt;iterate the returned collection&lt;/a&gt; to get the each object details and print each object name using thy attribute &lt;code&gt;key&lt;/code&gt;. &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; In addition to listing objects present in the Bucket, it'll also list the sub-directories and the objects inside the sub-directories. &lt;/p&gt;

&lt;p&gt;Use the below snippet to list objects of an S3 bucket. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Snippet&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import boto3
session = boto3.Session(aws_access_key_id='&amp;lt;your_access_key_id&amp;gt;', aws_secret_access_key='&amp;lt;your_secret_access_key&amp;gt;')

#Then use the session to get the resource
s3 = session.resource('s3')

my_bucket = s3.Bucket('stackvidhya')

for my_bucket_object in my_bucket.objects.all():
    print(my_bucket_object.key)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You'll see the list of objects present in the Bucket as below in alphabetical order. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    csv_files/
    csv_files/IRIS.csv
    df.csv
    dfdd.csv
    file2_uploaded_by_boto3.txt
    file3_uploaded_by_boto3.txt
    file_uploaded_by_boto3.txt
    filename_by_client_put_object.txt
    text_files/
    text_files/testfile.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is how you can use the boto3 resource to List objects in S3 Bucket. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#using-boto3-client"&gt;
  &lt;/a&gt;
  Using Boto3 Client
&lt;/h3&gt;

&lt;p&gt;In this section, you'll use the boto3 client to list the contents of an S3 bucket. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.askvikram.com/difference-between-boto3-session-resource-client/#boto3_client"&gt;Boto3 client&lt;/a&gt; is a low-level AWS service class that provides methods to connect and access AWS services similar to the API service. Follow the below steps to list the contents from the S3 Bucket using the boto3 client.  &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create Boto3 session using &lt;code&gt;boto3.session()&lt;/code&gt; method&lt;/li&gt;
&lt;li&gt;Create the boto3 s3 client using the &lt;code&gt;boto3.client('s3')&lt;/code&gt; method.&lt;/li&gt;
&lt;li&gt;Invoke the &lt;a href="https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/s3.html#S3.Client.list_objects_v2"&gt;list_objects_v2()&lt;/a&gt; method with the bucket name to list all the objects in the S3 bucket. It returns the dictionary object with the object details. &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.stackvidhya.com/iterate-through-dictionary-python/"&gt;Iterate the returned dictionary&lt;/a&gt; and display the object names using the &lt;code&gt;obj[key]&lt;/code&gt;. &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Similar to the Boto3 resource methods, the Boto3 client also returns the objects in the sub-directories.&lt;/p&gt;

&lt;p&gt;Use the below snippet to list objects of an S3 bucket. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Snippet&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import boto3

s3_client = boto3.client('s3', 
                      aws_access_key_id='&amp;lt;your_access_key_id&amp;gt;', 
                      aws_secret_access_key='&amp;lt;your_secret_access_key&amp;gt;' 
                      )

objects = s3_client.list_objects_v2(Bucket='stackvidhya')

for obj in objects['Contents']:
    print(obj['Key'])
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You'll see the objects in the S3 Bucket listed below. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    csv_files/
    csv_files/IRIS.csv
    df.csv
    dfdd.csv
    file2_uploaded_by_boto3.txt
    file3_uploaded_by_boto3.txt
    file_uploaded_by_boto3.txt
    filename_by_client_put_object.txt
    text_files/
    text_files/testfile.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is how you can list keys in the S3 Bucket using the boto3 client. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#list-contents-of-a-specific-directory"&gt;
  &lt;/a&gt;
  List Contents of A Specific Directory
&lt;/h2&gt;

&lt;p&gt;In this section, you'll learn how to list a subdirectory's contents that are available in an S3 bucket. This will be useful when there are multiple subdirectories available in your S3 Bucket, and you need to know the contents of a specific directory. &lt;/p&gt;

&lt;p&gt;You can use the &lt;a href="https://boto3.amazonaws.com/v1/documentation/api/latest/guide/collections.html#filtering"&gt;filter()&lt;/a&gt; method in bucket objects and use the &lt;code&gt;Prefix&lt;/code&gt; attribute to denote the name of the subdirectory. &lt;/p&gt;

&lt;p&gt;&lt;code&gt;Filter()&lt;/code&gt; and &lt;code&gt;Prefix&lt;/code&gt; will &lt;em&gt;also be helpful when you want to select only a specific object&lt;/em&gt; from the S3 Bucket. &lt;/p&gt;

&lt;p&gt;Use the below snippet to select content from a specific directory called &lt;em&gt;csv_files&lt;/em&gt; from the Bucket called &lt;em&gt;stackvidhya&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Snippet&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import boto3

session = boto3.Session( aws_access_key_id='&amp;lt;your_access_key_id&amp;gt;', aws_secret_access_key='&amp;lt;your_secret_access_key&amp;gt;')

#Then use the session to get the resource
s3 = session.resource('s3')

my_bucket = s3.Bucket('stackvidhya')

for objects in my_bucket.objects.filter(Prefix="csv_files/"):
    print(objects.key)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You'll see the list of objects present in the sub-directory &lt;em&gt;csv_files&lt;/em&gt; in alphabetical order. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    csv_files/
    csv_files/IRIS.csv
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is how you can list files in the folder or select objects from a specific directory of an S3 bucket.  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#list-specific-file-types-from-a-bucket"&gt;
  &lt;/a&gt;
  List Specific File Types From a Bucket
&lt;/h2&gt;

&lt;p&gt;In this section, you'll learn how to list specific file types from an S3 bucket. &lt;/p&gt;

&lt;p&gt;This may be useful when you want to know all the files of a specific type.  To achieve this, first, you need to &lt;em&gt;select all objects&lt;/em&gt; from the Bucket and check if the object name ends with the particular type. If it ends with your desired type, then you can list the object.  &lt;/p&gt;

&lt;p&gt;It'll list the files of that specific type from the Bucket and including all subdirectories.&lt;/p&gt;

&lt;p&gt;Use the below snippet to list specific file types from an S3 bucket. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Snippet&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import boto3

session = boto3.Session( aws_access_key_id='&amp;lt;your_access_key_id&amp;gt;', aws_secret_access_key='&amp;lt;your_secret_access_key&amp;gt;')

s3 = session.resource('s3')

my_bucket = s3.Bucket('stackvidhya')

for obj in my_bucket.objects.all():
    if obj.key.endswith('txt'):
        print(obj.key)

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You'll see all the text files available in the S3 Bucket in alphabetical order. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    file2_uploaded_by_boto3.txt
    file3_uploaded_by_boto3.txt
    file_uploaded_by_boto3.txt
    filename_by_client_put_object.txt
    text_files/testfile.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is how you can list files of a specific type from an S3 bucket. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#list-contents-from-a-directory-using-regular-expression"&gt;
  &lt;/a&gt;
  List Contents From A directory Using Regular Expression
&lt;/h2&gt;

&lt;p&gt;Boto3 currently &lt;a href="https://stackoverflow.com/a/52450389"&gt;doesn't support server side filtering&lt;/a&gt; of the objects using regular expressions. &lt;/p&gt;

&lt;p&gt;However, you can get all the files using the &lt;code&gt;objects.all()&lt;/code&gt; method and filter it &lt;a href="https://www.stackvidhya.com/check-if-string-contains-substring-python/#check_if_string_contains_substring_using_regex"&gt;using the regular expression&lt;/a&gt; in the IF condition.&lt;/p&gt;

&lt;p&gt;For example, if you want to list files containing a number in its name, you can use the below snippet. To do an advanced pattern matching search, you can refer to the &lt;a href="https://www.geeksforgeeks.org/python-regex-cheat-sheet/"&gt;regex cheat sheet&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Snippet&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import re 
import boto3

session = boto3.Session(aws_access_key_id='&amp;lt;your_access_key_id&amp;gt;', aws_secret_access_key='&amp;lt;your_secret_access_key&amp;gt;')

s3 = session.resource('s3')

my_bucket = s3.Bucket('stackvidhya')

substring =  "\d"

for obj in my_bucket.objects.all():
    if re.search(substring,  obj.key):  
        print(obj.key)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You'll see the file names with numbers listed below. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;file2_uploaded_by_boto3.txt
file3_uploaded_by_boto3.txt
file_uploaded_by_boto3.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is how you can list contents from a directory of an S3 bucket using the regular expression. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;To summarize, you've learned how to list contents for an S3 bucket using boto3 resource and boto3 client. You've also learned to filter the results to list objects from a specific directory and filter results based on a regular expression. &lt;/p&gt;

&lt;p&gt;If you have any questions, comment below.  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#you-may-also-like"&gt;
  &lt;/a&gt;
  You May Also Like
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.stackvidhya.com/load-data-from-aws-s3-into-sagemaker/"&gt;How To Load Data From AWS S3 Into Sagemaker (Using Boto3 Or AWSWrangler)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.stackvidhya.com/write-a-file-to-s3-using-boto3/"&gt;How To Write A File Or Data To An S3 Object Using Boto3&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>aws</category>
      <category>python</category>
    </item>
  </channel>
</rss>
