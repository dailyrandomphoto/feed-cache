<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Creative coding with Replit</title>
      <author>RitzaCo</author>
      <pubDate>Wed, 24 Nov 2021 11:36:11 +0000</pubDate>
      <link>https://dev.to/ritza/creative-coding-with-replit-3ce4</link>
      <guid>https://dev.to/ritza/creative-coding-with-replit-3ce4</guid>
      <description>&lt;p&gt;If you're into creating graphics, 3D worlds, games, sounds, and other more creative things, Replit has a number of tools and environments to help you. One of the benefits of coding with Replit is that you can switch between different programming paradigms and try them out without having to set it all up yourself.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-creative-coding"&gt;
  &lt;/a&gt;
  What is creative coding?
&lt;/h2&gt;

&lt;p&gt;For this article, we'll consider a tool to be a creative coding one if its main purpose is to create graphics, visual models, games, or sounds. Plain HTML or JavaScript can be used for this type of thing, but we're looking for tools and languages that are a bit more specialised.&lt;/p&gt;

&lt;p&gt;Here's a list of tools we'll be taking a look at for the more creative side of Replit:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Python &lt;code&gt;turtle&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;p5.js&lt;/li&gt;
&lt;li&gt;Kaboom&lt;/li&gt;
&lt;li&gt;Pygame&lt;/li&gt;
&lt;li&gt;Pyxel&lt;/li&gt;
&lt;li&gt;GLSL&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#python-raw-turtle-endraw-"&gt;
  &lt;/a&gt;
  Python &lt;code&gt;turtle&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;Turtle graphics is a classic of the genre. First created way back in the 1960s, the idea is that there is a small turtle robot on the screen, holding some pens. You give the turtle commands to move around and tell it when to put the pen down and what color pen to use. This way you can make line or vector drawings on the screen. The turtle idea comes from a type of actual robot used for education. &lt;/p&gt;

&lt;p&gt;Replit has support for Python &lt;code&gt;turtle&lt;/code&gt;, which is the current incarnation of the turtle graphics idea. Choose the "Python (with Turtle)" template when creating a new repl to use it. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1-U7yrzt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://docs.replit.com/images/tutorials/34-creative-coding/turtle-template.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1-U7yrzt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://docs.replit.com/images/tutorials/34-creative-coding/turtle-template.png" alt="turtle-template" width="880" height="479"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Python &lt;code&gt;turtle&lt;/code&gt; uses commands like &lt;code&gt;forward(10)&lt;/code&gt;, &lt;code&gt;back(10)&lt;/code&gt;, &lt;code&gt;left(50)&lt;/code&gt;, &lt;code&gt;right(30)&lt;/code&gt; &lt;code&gt;pendown()&lt;/code&gt; and &lt;code&gt;penup()&lt;/code&gt; to control the turtle. The methods &lt;code&gt;forward&lt;/code&gt; and &lt;code&gt;back&lt;/code&gt; take the distance the turtle should move as their arguments, while &lt;code&gt;left&lt;/code&gt; and &lt;code&gt;right&lt;/code&gt; take the angle in degrees to turn the turtle on the spot (the turtle is very nimble!). You can use &lt;code&gt;pendown&lt;/code&gt; and &lt;code&gt;penup&lt;/code&gt; to tell the turtle to draw or not draw while moving.&lt;/p&gt;

&lt;p&gt;When you create a new Python (with Turtle) template, you'll notice a small program is included as an example to show you the basics. When you run this program, it will draw a square with each side a different color. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bEeJJcvC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://docs.replit.com/images/tutorials/34-creative-coding/turtle-square.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bEeJJcvC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://docs.replit.com/images/tutorials/34-creative-coding/turtle-square.gif" alt="turtle square" width="880" height="381"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Although &lt;code&gt;turtle&lt;/code&gt; has a small set of simple commands, it can be used to make some impressive-looking graphics. This is because you can use loops and calculations and all the other programming constructs available in Python to control the turtle. &lt;/p&gt;

&lt;p&gt;Try this &lt;code&gt;turtle&lt;/code&gt; program for example: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://replit.com/@ritza/python-turtle"&gt;https://replit.com/@ritza/python-turtle&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;turtle&lt;/span&gt;

&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;turtle&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Turtle&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;speed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;sides&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;colors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'red'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'yellow'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'orange'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;360&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pencolor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;colors&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;sides&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;forward&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;sides&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;360&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;sides&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;sides&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This code generates a spiral by drawing a slightly rotated and increasingly larger triangle for each of the 360 degrees specified in the main loop. This short little script produces a cool-looking output:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YoknQfJt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://docs.replit.com/images/tutorials/34-creative-coding/turtle-spiral.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YoknQfJt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://docs.replit.com/images/tutorials/34-creative-coding/turtle-spiral.png" alt="turtle spiral" width="795" height="508"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Try changing up the &lt;code&gt;sides&lt;/code&gt; parameter to draw different shapes, and play with the color combos to come up with new artworks. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#p5js"&gt;
  &lt;/a&gt;
  p5.js
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://p5js.org"&gt;p5.js&lt;/a&gt; is a JavaScript graphics and animation library developed specifically for artists and designers - and generally people who have not been exposed to programming before. It's based on the &lt;a href="https://processing.org"&gt;Processing&lt;/a&gt; software project, and brings the Processing concept to web browsers, making it easy to share your "sketches", which is the p5.js name for programs.&lt;/p&gt;

&lt;p&gt;Replit has two templates for p5.js - one for pure JavaScript, and another that interprets Python code, but still uses the underlying p5.js JavaScript library. You can use the Python version if you are more familiar with Python syntax than JavaScript syntax. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7J_qk8Eb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://docs.replit.com/images/tutorials/34-creative-coding/p5-templates.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7J_qk8Eb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://docs.replit.com/images/tutorials/34-creative-coding/p5-templates.png" alt="p5 templates" width="880" height="543"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you create a repl using one of the templates, you'll see it includes some sample code. Running it will draw random color circles on the screen wherever the mouse pointer is.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9CygHqcd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://docs.replit.com/images/tutorials/34-creative-coding/p5-circles.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9CygHqcd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://docs.replit.com/images/tutorials/34-creative-coding/p5-circles.gif" alt="p5 sample sketch output" width="880" height="413"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;p5.js has two main functions in every sketch: &lt;code&gt;setup()&lt;/code&gt;, which is run once when the sketch is executed, and &lt;code&gt;draw()&lt;/code&gt;, which is run every frame.&lt;/p&gt;

&lt;p&gt;In the &lt;code&gt;setup&lt;/code&gt; function, you generally set up the window size and other such parameters. In the &lt;code&gt;draw&lt;/code&gt; function, you can use &lt;a href="https://p5js.org"&gt;p5.js functions&lt;/a&gt; to draw your scene. p5.js has functions for everything from drawing a simple line to rendering 3D models. &lt;/p&gt;

&lt;p&gt;Here is another sketch you can try (note that this is in JavaScript, so it will only work in the p5.js JavaScript template):&lt;/p&gt;

&lt;p&gt;&lt;a href="https://replit.com/@ritza/p5-javascript"&gt;https://replit.com/@ritza/p5-javascript&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;createCanvas&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;background&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;honeydew&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;noStroke&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="nx"&gt;fill&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;cyan&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;circle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;450&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;fill&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;pink&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;triangle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;75&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;275&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;fill&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;lavender&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nx"&gt;square&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this sketch, we draw a few shapes in various colors on the screen, in a kind of 80s geometric art style:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jAqrUAzS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://docs.replit.com/images/tutorials/34-creative-coding/p5-shapes.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jAqrUAzS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://docs.replit.com/images/tutorials/34-creative-coding/p5-shapes.png" width="810" height="890"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The &lt;a href="https://p5js.org/get-started/"&gt;p5.js website&lt;/a&gt; has a guide to getting started, plus a lot of references and examples to experiment with. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#kaboom"&gt;
  &lt;/a&gt;
  Kaboom
&lt;/h3&gt;

&lt;p&gt;Kaboom.js is Replit's own homegrown JavaScript game framework, launched in 2021. It's geared towards making 2D games, particularly platform games, although it has enough flexibility to create games in other formats too. Because it is a JavaScript library, it can be used to develop web games, making it easy to share and distribute your creations with the world. &lt;/p&gt;

&lt;p&gt;Replit has two official templates for Kaboom: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A specialized Kaboom template, with an integrated sprite editor and gallery, as well as pre-defined folders for assets. This is perfect for getting started with Kaboom and making games in general, as you don't need to worry about folder structures or sourcing graphics. &lt;/li&gt;
&lt;li&gt;A 'light' template that is a simple web template with just the Kaboom package referenced. This is for coders with a little more experience, as the intent is to give you more control and flexibility&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--g-MKIJN7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://docs.replit.com/images/tutorials/34-creative-coding/kaboom-templates.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g-MKIJN7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://docs.replit.com/images/tutorials/34-creative-coding/kaboom-templates.png" alt="Kaboom templates" width="880" height="543"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;One of the great features of Kaboom is the simple way you can define level maps, drawing them with text characters, and then mapping the text characters to game elements:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;level&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;                          $&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;                          $&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;                          $&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;                          $&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;                          $&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;           $$         =   $&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;  %      ====         =   $&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;                      =   $&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;                      =    &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;       ^^      = &amp;gt;    =   @&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;===========================&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Another interesting aspect of Kaboom is that it makes heavy use of &lt;a href="https://en.wikipedia.org/wiki/Composition_over_inheritance"&gt;composition&lt;/a&gt;. This allows you to create characters with complex behaviour by combining multiple simple components:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;c&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="nx"&gt;sprite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;coin&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
      &lt;span class="nx"&gt;area&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
      &lt;span class="nx"&gt;solid&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
      &lt;span class="nx"&gt;cleanup&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
      &lt;span class="nx"&gt;lifespan&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;fade&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.01&lt;/span&gt; &lt;span class="p"&gt;}),&lt;/span&gt;
      &lt;span class="nx"&gt;origin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;bot&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Kaboom has a fast-growing resource and user base. The official &lt;a href="https://kaboomjs.com"&gt;Kaboom site&lt;/a&gt; documents each feature, and also has some specific examples. There is also a site with complete tutorials for building different types of games at &lt;a href="https://makejsgames.com"&gt;Make JavaScript Games&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#pygame"&gt;
  &lt;/a&gt;
  Pygame
&lt;/h3&gt;

&lt;p&gt;Pygame is a well-established library (from 2000!) for making games. It has functionality to draw shapes and images to the screen, get user input, play sounds, and more. Because it has been around for so long, there are plenty of examples and tutorials for it on the web.&lt;/p&gt;

&lt;p&gt;Replit has a specialised Python template for Pygame. Choose this template for creating Pygame games:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3rrwO77C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://docs.replit.com/images/tutorials/34-creative-coding/pygame-template.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3rrwO77C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://docs.replit.com/images/tutorials/34-creative-coding/pygame-template.png" alt="Pygame template" width="880" height="547"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Try out this code in a Pygame repl:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://replit.com/@ritza/pygame-example"&gt;https://replit.com/@ritza/pygame-example&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pygame&lt;/span&gt;

&lt;span class="n"&gt;pygame&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;init&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;bounds&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;window&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pygame&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;display&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_mode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bounds&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;pygame&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;display&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_caption&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"box"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;

&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;pygame&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;event&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;pygame&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;type&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;pygame&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;QUIT&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="n"&gt;run&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;

  &lt;span class="n"&gt;keys&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pygame&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_pressed&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;pygame&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;K_LEFT&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
  &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;pygame&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;K_RIGHT&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
  &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;pygame&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;K_UP&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
    &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
  &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;pygame&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;K_DOWN&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
    &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;

  &lt;span class="n"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fill&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;  
  &lt;span class="n"&gt;pygame&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;window&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="n"&gt;pygame&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;display&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This code initializes a new &lt;code&gt;pygame&lt;/code&gt; instance and creates a window to display the output in. Then it has a main game loop, which listens for keyboard arrow key presses, and moves a small block around the screen based on the keys pressed.&lt;/p&gt;

&lt;p&gt;Check out some of our tutorials for Pygame :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.replit.com/tutorials/14-2d-platform-game"&gt;A 2D platform game&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.replit.com/tutorials/07-building-a-game-with-pygame"&gt;A Juggling game&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.replit.com/tutorials/19-build-snake-with-pygame"&gt;Snake&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#pyxel"&gt;
  &lt;/a&gt;
  Pyxel
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://github.com/kitao/pyxel"&gt;Pyxel&lt;/a&gt; is specialised for making retro-type games, inspired by console games from the 80s and early 90s. You can only display 16 colors, and no more than 4 sound samples can be played at once, just like on the earlier Nintendo, Sega, and other classic games systems. If you're into pixel art, this is the game engine for you. &lt;/p&gt;

&lt;p&gt;Choose the 'Pyxel' template on Replit to create a new Pyxel environment. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BCJjVcdH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://docs.replit.com/images/tutorials/34-creative-coding/pyxel-template.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BCJjVcdH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://docs.replit.com/images/tutorials/34-creative-coding/pyxel-template.png" alt="pyxel template" width="880" height="538"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Try this code in a Pyxel repl to draw rectangles of random size and color, changing every two frames: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://replit.com/@ritza/pyxel-example"&gt;https://replit.com/@ritza/pyxel-example&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pyxel&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;random&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;App&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;pyxel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;init&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;160&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;120&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;caption&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Pyxel Squares!"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;pyxel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;pyxel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;btnp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pyxel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;KEY_Q&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;pyxel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;quit&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pyxel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;frame_count&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
      &lt;span class="n"&gt;pyxel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cls&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;pyxel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;randint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;160&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;randint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;120&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;randint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="n"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qGaTISOS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://docs.replit.com/images/tutorials/34-creative-coding/pyxel-rect.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qGaTISOS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://docs.replit.com/images/tutorials/34-creative-coding/pyxel-rect.gif" width="644" height="534"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Take a look in the &lt;a href="https://github.com/kitao/pyxel/tree/main/pyxel/examples"&gt;examples folder&lt;/a&gt; on the Pyxel GitHub project to see more ways to use Pyxel. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#glsl"&gt;
  &lt;/a&gt;
  GLSL
&lt;/h3&gt;

&lt;p&gt;On the more advanced end of the spectrum, Replit supports GLSL projects. GLSL (OpenGL Shading Language) is a C-style language for creating graphics shaders. Shaders are programs that (usually) run on graphics cards as part of a graphics rendering pipeline. There are many types of shaders - the two most common are vertex shaders and fragment (or pixel) shaders. Vertex shaders compute the position of objects in the graphics world, and pixel shaders compute the color that each pixel should be. This previously required writing code for specific graphics hardware, but GLSL is a high-level language that can run on many different graphics hardware makes.&lt;/p&gt;

&lt;p&gt;GLSL gives you  control over the graphics rendering pipeline, enabling you to create very advanced graphics. GLSL has many features to handle vector and matrix manipulations, as these are core to graphics processing.&lt;/p&gt;

&lt;p&gt;Choose the "GLSL" template to create a new GLSL repl:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f88bywxC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://docs.replit.com/images/tutorials/34-creative-coding/glsl-template.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f88bywxC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://docs.replit.com/images/tutorials/34-creative-coding/glsl-template.png" alt="GLSL template" width="880" height="537"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The template has a sample fragment shader in the file &lt;code&gt;shader.glsl&lt;/code&gt; as well as some web code to setup a &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API"&gt;WebGL&lt;/a&gt; resource to apply the shader to. Running the sample will show some pretty gradients on the screen that vary with time and as you move the mouse over it. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AhR65DTY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://docs.replit.com/images/tutorials/34-creative-coding/glsl-effect.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AhR65DTY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://docs.replit.com/images/tutorials/34-creative-coding/glsl-effect.gif" alt="GLSL sample code" width="880" height="413"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Try this code out in the shader file to make a kind of moving "plaid" effect: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://replit.com/@ritza/glsl-example"&gt;https://replit.com/@ritza/glsl-example&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight c"&gt;&lt;code&gt;&lt;span class="n"&gt;precision&lt;/span&gt; &lt;span class="n"&gt;mediump&lt;/span&gt; &lt;span class="kt"&gt;float&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;varying&lt;/span&gt; &lt;span class="n"&gt;vec2&lt;/span&gt; &lt;span class="n"&gt;a_pos&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;uniform&lt;/span&gt; &lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="n"&gt;u_time&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="n"&gt;gl_FragColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;vec4&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="n"&gt;a_pos&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;u_time&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;a_pos&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
      &lt;span class="n"&gt;a_pos&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;u_time&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;a_pos&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
      &lt;span class="n"&gt;a_pos&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;a_pos&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;u_time&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; 
      &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we set &lt;code&gt;gl_FragColor&lt;/code&gt;, which is the color for a specific pixel on the screen. A pixel color in GLSL is represented using a &lt;code&gt;vec4&lt;/code&gt; data type, which is a vector of four values, representing red, green, blue, and alpha. In this shader, we vary the pixel color depending on it's co-ordinate &lt;code&gt;a_pos&lt;/code&gt;, and the current frame time &lt;code&gt;u_time&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;If you'd like to dive deeper into the world of advanced graphics and shaders, you can visit Learn OpenGL's &lt;a href="https://learnopengl.com/Getting-started/Shaders"&gt;Getting Started: Shaders&lt;/a&gt; resource.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wrap-up"&gt;
  &lt;/a&gt;
  Wrap up
&lt;/h2&gt;

&lt;p&gt;That wraps up this list of the official creative coding language templates on Replit. Of course, Replit is flexible enough that you can import and use whatever framework or library you want in your projects, so you are not limited to the tools we've looked at here. Replit is also adding more languages and templates everyday, so be sure to watch out for new additions!&lt;/p&gt;

</description>
    </item>
    <item>
      <title>How To Find A Bug Without Pulling Your Hair Out</title>
      <author>Kevin Hicks</author>
      <pubDate>Wed, 24 Nov 2021 11:07:59 +0000</pubDate>
      <link>https://dev.to/kevinhickssw/how-to-find-a-bug-without-pulling-your-hair-out-5fc9</link>
      <guid>https://dev.to/kevinhickssw/how-to-find-a-bug-without-pulling-your-hair-out-5fc9</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Working with code you're unclear about is like wading through a swamp. You should attempt to get yourself on solid ground as quickly as possible&lt;/p&gt;

&lt;p&gt;– Jon Skeet&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;One of the most frustrating things about bugs with computer software is you get a bug report, someone is breathing down your neck to get it fixed, customers are upset, and everyone thinks it should be easy to find and fix.&lt;/p&gt;

&lt;p&gt;We're lucky if the problem is precisely where the error says or the user's bug report has enough details. Often we are stuck having to dig into the code while trying things ourselves to figure out where the problem is. It's never as easy as just jumping to a code line everything points to and changing something. We need to find the "root cause" to make sure we aren't fixing the symptoms of another bug.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;root cause&lt;/strong&gt; - A root cause is an initiating cause of a bug&lt;/p&gt;

&lt;p&gt;Debugging is just like investigating a case. There are some initial steps you need to take. You can't investigate a crime if you don't know what it is and where it occurred. The same thing applies to fixing a bug.&lt;/p&gt;

&lt;p&gt;Time to put on our detective hats to find the root cause.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#gather-details"&gt;
  &lt;/a&gt;
  Gather Details
&lt;/h2&gt;

&lt;p&gt;Before trying anything, before changing any code, you need to gather as many details as possible. Review the bug report or error, then start asking questions to uncover missing details. If it is a bug report, you can ask the user, QA tester, or whoever submitted it. If it's an automated error report, you may need to ask yourself these questions by digging in the code, your systems, and online.&lt;/p&gt;

&lt;p&gt;Here are some of the questions you should ask:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Is it easily reproduced?

&lt;ul&gt;
&lt;li&gt;If so, what are the exact steps to reproduce it?&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Have others run into this issue?&lt;/li&gt;
&lt;li&gt;What is the device and system info the error occurred on?&lt;/li&gt;
&lt;li&gt;What changed recently? Any code deployments, configuration, or hardware changes?&lt;/li&gt;
&lt;li&gt;What should the code do when it works successfully?

&lt;ul&gt;
&lt;li&gt;Is there any validation, error handling, etc., in place that should be running?&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In addition to asking questions, you also want to make sure to research any additional information that could help you.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Check logs and error reporting software for related errors and events that happened around the same time.&lt;/li&gt;
&lt;li&gt;Google any error messages. Google both to make sure you understand it and to see if others have solutions.&lt;/li&gt;
&lt;li&gt;Check git logs for recent deployments, hardware, or configuration changes. Keep in mind any recent changes, even if they seem unrelated.&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#reproduce-the%C2%A0problem"&gt;
  &lt;/a&gt;
  Reproduce The Problem
&lt;/h2&gt;

&lt;p&gt;After you learn everything you can about the error, the next step is to reproduce it yourself. Ideally, you will reproduce this in the local environment you usually code in. The fewer chances you have to break other things while debugging, the better.&lt;/p&gt;

&lt;p&gt;One of the worst things we can do when debugging is changing things or fixing a bug when we couldn't reproduce the problem ourselves. This is why if we can't reproduce it locally, we want to try to reproduce it in production safely.&lt;/p&gt;

&lt;p&gt;We need to be careful of the potential issues and requirements we need to maintain in production, but sometimes the only choice is to debug in production. I'll write another article soon giving tips to limit needing to debug in production and how to do it successfully.&lt;/p&gt;

&lt;p&gt;Reproducing the bug is easy if you have steps from a bug report or error reporting tool. If you don't have the steps, you will need some trial and error until you figure out the exact steps to reproduce the bug. Reproducing bugs gets easier as you learn more about a system.&lt;/p&gt;

&lt;p&gt;Once you know the required steps to reproduce a bug, try to reduce the steps to the absolute minimum number of steps. The fewer steps needed to reproduce a bug, the quicker fixes can be tested. This is also a significant benefit for writing automated tests (if you have automated tests) to test the changes. Fewer steps mean less setup and easier to write automated tests.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;If you don't have automated tests, I highly recommend investing in the time to set up and add tests for all your code. There are plenty of resources for each platform and language to get started with automated testing. Automated testing offers many benefits, including speeding up debugging and ensuring bugs don't come back later.&lt;/em&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#ask-someone%C2%A0else"&gt;
  &lt;/a&gt;
  Ask Someone Else
&lt;/h2&gt;

&lt;p&gt;One of the first steps should always be to ask if someone else ran into this bug before. Don't be afraid to ask QA testers, other developers, and sometimes even users about the bug. Asking can be the quickest way to fix a tricky bug if someone is already familiar with it.&lt;/p&gt;

&lt;p&gt;You never know who may have run into the problem before. There is a chance this person will know:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;How to fix it.&lt;/li&gt;
&lt;li&gt;They may have a workaround that can be used for now.&lt;/li&gt;
&lt;li&gt;They may also know if a permanent solution is filed to fix it.&lt;/li&gt;
&lt;li&gt;They could already have completed research to help speed up debugging.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;By tackling each of these steps first, you will find fixing bugs to be less stressful. When you know the root cause and how to reproduce a bug, fixing it becomes a quick and painless process.&lt;/p&gt;

&lt;p&gt;If you would like more tips and tricks to level up your debugging and make fixing bugs less stressful, my book &lt;em&gt;Level Up Your Debugging&lt;/em&gt; is up for &lt;a href="https://kevinhickssw.gumroad.com/l/LevelUpYourDebugging"&gt;early access pre-orders on Gumroad&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>programming</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>The Basic Necessities of a Mock User Authentication with json-server-auth</title>
      <author>jyeett</author>
      <pubDate>Wed, 24 Nov 2021 10:56:02 +0000</pubDate>
      <link>https://dev.to/jyeett/the-basic-necessities-of-a-mock-user-authentication-with-json-server-auth-2onj</link>
      <guid>https://dev.to/jyeett/the-basic-necessities-of-a-mock-user-authentication-with-json-server-auth-2onj</guid>
      <description>&lt;p&gt;When first building a react app as a beginner, you may have all these cool ideas you want to include in your project, but the one thing holding you back is a user authentication system where you can store the information of different users to your app. Maybe you want to hone your skills on the front-end and just don't have the resources to build out an extensive back-end to handle this. Here, we will walk through the &lt;em&gt;BARE MINIMUM&lt;/em&gt; of what you need to do to mock this functionality.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-libraries"&gt;
  &lt;/a&gt;
  THE LIBRARIES
&lt;/h3&gt;

&lt;p&gt;Our example will be making use of the &lt;a href="https://www.npmjs.com/package/json-server"&gt;json-server&lt;/a&gt; and &lt;a href="https://github.com/jeremyben/json-server-auth"&gt;json-server-auth&lt;/a&gt; libraries to make all the magic happen. Using both in tandem will allow us to prototype and mock our front-end application with an authentication like system. These libraries will make use of a local JSON file to store all of the data as if we were making a request to a server. Instead, json-server will watch our database JSON file to retrieve that information fully on the client side.&lt;/p&gt;

&lt;p&gt;To install json-server and json-server-auth in your project run the corresponding command depending on which package manager you are using for your react app:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# NPM
npm install -D json-server json-server-auth

# Yarn
yarn add -D json-server json-server-auth
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#configuring-your-files"&gt;
  &lt;/a&gt;
  CONFIGURING YOUR FILES
&lt;/h3&gt;

&lt;p&gt;Make sure to include a JSON file where you want to store your data (we'll call this db.json) and give it a collection. The name of that collection is important, and has to be named 'register', 'signup', or 'users'. When you are making a POST request, json-server-auth will look for these to route correctly. For our example we will use 'users'.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;users&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now you are set up to create any sign up and log in forms necessary to be able to manage users! To run our react app with json-server auth, run the following command in one terminal:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;json-server --watch db.json -m ./node_modules/json-server-auth
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then you may start your react app with the appropriate command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#NPM
npm start

#YARN
yarn start
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Going through the flow of a new user, we will first want to sign up component that will be shown on our front end. Here we have set up a controlled form that will be used to collect our new user information and on submit, will create the new user in our database.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Signup&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;formData&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setFormData&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="na"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// required&lt;/span&gt;
        &lt;span class="na"&gt;password&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// required&lt;/span&gt;
        &lt;span class="na"&gt;username&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt; &lt;span class="c1"&gt;// optional&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;

    &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;handleSubmit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;preventDefault&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;http://localhost:3000/users&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;method&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;POST&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Content-Type&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;application/json&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="na"&gt;body&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;formData&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;handleChange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;setFormData&lt;/span&gt;&lt;span class="p"&gt;({...&lt;/span&gt;&lt;span class="nx"&gt;formData&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Signup&lt;/span&gt; &lt;span class="nx"&gt;Form&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;form&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;login-form&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="nx"&gt;onSubmit&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;handleSubmit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="nx"&gt;placeholder&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Username&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;formData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;username&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="nx"&gt;onChange&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;handleChange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/input&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="nx"&gt;placeholder&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Email&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;formData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;email&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="nx"&gt;onChange&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;handleChange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/input&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="nx"&gt;placeholder&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Password&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;formData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;password&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="nx"&gt;onChange&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;handleChange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/input&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;login-btn&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;submit&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Sign&lt;/span&gt; &lt;span class="nx"&gt;Up&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/form&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Signup&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Looking at our handleSubmit function, we'll want to make a POST request to /users of where our localhost server is running. The formData body that we are giving that request &lt;strong&gt;MUST&lt;/strong&gt; include at least 'email' and 'password', while all other keys can be optional for additional user information.&lt;/p&gt;

&lt;p&gt;Next for our login component we can define as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Login&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;formData&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setFormData&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="na"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// required&lt;/span&gt;
        &lt;span class="na"&gt;password&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt; &lt;span class="c1"&gt;// required&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;

    &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;handleSubmit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;preventDefault&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;http://localhost:3000/login&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;method&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;POST&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Content-Type&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;application/json&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="na"&gt;body&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;formData&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;handleChange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;setFormData&lt;/span&gt;&lt;span class="p"&gt;({...&lt;/span&gt;&lt;span class="nx"&gt;formData&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Login&lt;/span&gt; &lt;span class="nx"&gt;Form&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;form&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;login-form&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="nx"&gt;onSubmit&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;handleSubmit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="nx"&gt;placeholder&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Email&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;formData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;email&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="nx"&gt;onChange&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;handleChange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/input&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="nx"&gt;placeholder&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Password&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;formData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;password&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="nx"&gt;onChange&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;handleChange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/input&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;login-btn&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;submit&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Login&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/form&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Login&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We have a very similar POST request to our sign up form, however this time we are only looking for the user's email and password in order to authenticate existing users in our database. Also note we are posting to /login in this instance even though we do not explicitly create a login collection.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#our-frontend"&gt;
  &lt;/a&gt;
  OUR FRONT-END
&lt;/h3&gt;

&lt;p&gt;You will want to style your form components to your liking and perhaps have proper routing to the corresponding pages in your app, but for simplicity we will render them on one page to demonstrate json-server-auth. Rendering our components to the DOM we now have:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ShIiae3x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q2z0kw5k038s273kyin4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ShIiae3x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q2z0kw5k038s273kyin4.png" alt="Image description" width="787" height="150"&gt;&lt;/a&gt;&lt;br&gt;
Our user can then input information to sign up and once submitted, will post to our db.json file our new user:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
  "users": [
    {
      "email": "user@email.com",
      "password": "$2a$10$TGpBQYJF6bQFEipnwaaoiuCRVht/.jAyrOYQnq8Xz5CvXYNu6O2LO",
      "username": "myusername",
      "id": 1
    }
  ]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Notice that json-server-auth has encrypted the user's password, but once we log in with the appropriate data, we will be able to access the contents of that user object. Once our user submits their log in form, we can access their data from our fetch's response. In our log in component above we log data.user and that gives us the following:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gc8oh9GE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cfa9ejbk5wf0i5yvhe6d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gc8oh9GE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cfa9ejbk5wf0i5yvhe6d.png" alt="Image description" width="375" height="54"&gt;&lt;/a&gt;&lt;br&gt;
From this data we can access the username, email, and an id given to our user.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  WRAPPING UP
&lt;/h3&gt;

&lt;p&gt;On a larger scale for your applications, you will probably make use of more optional fields when it comes to creating your user's information. However, once you are able to handle the user's log in, the sky is the limit to what you can do with their data. This will work at a basic level with just an email and password, but if you wish to read more about json-server-auth and some of it's further capabilities with tokens or authorization flow you can find its documentation &lt;a href="https://github.com/jeremyben/json-server-auth"&gt;here&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Django Basics: Folder Structure </title>
      <author>Meet Gor</author>
      <pubDate>Wed, 24 Nov 2021 10:49:12 +0000</pubDate>
      <link>https://dev.to/mr_destructive/django-basics-folder-structure-4g19</link>
      <guid>https://dev.to/mr_destructive/django-basics-folder-structure-4g19</guid>
      <description>&lt;h3&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h3&gt;

&lt;p&gt;After setting up the development for the Django framework, we will explore the project structure. In this part, we understand the structure along with the various components in the Project as well as individual apps. We will understand the objective of each file and folder in a brief and hopefully by the end of this part, you'll be aware of how the Django project is structured and get a good overview of the flow of development in the Django project. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#project-structure"&gt;
  &lt;/a&gt;
  Project Structure
&lt;/h2&gt;

&lt;p&gt;We will create a Django project from scratch and understand it from the ground up. As in the previous part, I've shown you how to create a project. In this section, we'll create a project &lt;code&gt;Blog&lt;/code&gt;. TO do that, we'll create a folder called &lt;code&gt;Blog&lt;/code&gt;, install and set up the virtual environment as discussed and explained in the previous part. &lt;/p&gt;

&lt;p&gt;After the virtual environment is created and activated, we'll create the project.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
django-admin startproject Blog . 

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After this command, if we see the directory structure, it should look something like this: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fg7n1Mqs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/dgpxbrwoz/image/upload/v1637661221/blogmedia/tree_ak3mgm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fg7n1Mqs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/dgpxbrwoz/image/upload/v1637661221/blogmedia/tree_ak3mgm.png" alt="Basic Django folder structure" width="308" height="286"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;As we can see there are 6 files and a folder. The base folder is for the configuration at a project level. I have actually not shown the &lt;code&gt;venv&lt;/code&gt; ( using &lt;code&gt;-I venv&lt;/code&gt; option on tree command) as it is out of the scope of this series. The &lt;code&gt;venv&lt;/code&gt; folder contains modules and scripts which are installed in the virtual environment.  &lt;/p&gt;

&lt;p&gt;So, lets break the folder structure down into understandable files. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---oYzzWwQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/dgpxbrwoz/image/upload/v1637745146/blogmedia/16_qenomh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---oYzzWwQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/dgpxbrwoz/image/upload/v1637745146/blogmedia/16_qenomh.png" alt="Project folder summary" width="880" height="625"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#managepy"&gt;
  &lt;/a&gt;
  manage.py
&lt;/h3&gt;

&lt;p&gt;Our project consists of a &lt;code&gt;manage.py&lt;/code&gt; file which is to execute several commands at a project level. We do not have to edit any of the contents of this file (never). It is the file that allows us to run the server, apply migrations, create an Admin account, create apps, and do a lot of crucial things with the help of python.  &lt;/p&gt;

&lt;p&gt;So, it's just the command-line utility that helps us interact with the Django project and applications for configurations.  &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#project-folder"&gt;
  &lt;/a&gt;
  Project Folder
&lt;/h3&gt;

&lt;p&gt;Now, this is the folder where the project-configuration files are located. &lt;strong&gt;The name of the folder is the same as that of the project&lt;/strong&gt;. This makes the folder unique and hence creates a standard way to store files in a structured way.  &lt;/p&gt;

&lt;p&gt;The folder is a python package which is indicated by the &lt;code&gt;__init__.py&lt;/code&gt; file. The purpose of the &lt;code&gt;__init__.py&lt;/code&gt; file is to tell the Python environment that the current folder is a Python package.  &lt;/p&gt;

&lt;p&gt;The folder consist of several files(5 files): &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#settingspy"&gt;
  &lt;/a&gt;
  settings.py
&lt;/h3&gt;

&lt;p&gt;This is a really important file from the project's point of view. This contains certain configurations that can be applied to the rest of the project (or all the apps).  &lt;/p&gt;

&lt;p&gt;In the &lt;code&gt;settings.py&lt;/code&gt; file, we can do some of the following operations : &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;List of &lt;code&gt;applications&lt;/code&gt; that might be pre-installed or user-defined. &lt;/li&gt;
&lt;li&gt;Configure the Middleware.
&lt;/li&gt;
&lt;li&gt;Configure and connect the Database. &lt;/li&gt;
&lt;li&gt;Configure Templates/Static/Media files. &lt;/li&gt;
&lt;li&gt;Custom Configuration for Time-Zones, Emails, Authentication, CORS, etc. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Besides the above-mentioned options, there is a lot of project-specific configurations or application-specific settings as well.  &lt;/p&gt;

&lt;p&gt;Here, you'll have a question, &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-an-application"&gt;
  &lt;/a&gt;
  WHAT IS AN APPLICATION?
&lt;/h3&gt;

&lt;p&gt;An application is a component of a project. There are also Python packages that are made to be used as a Django app that allows reusing the components. But when we are developing the project, we can break a complex process/project into individual apps.  &lt;/p&gt;

&lt;p&gt;For Example, a project of &lt;code&gt;Blogging Platform&lt;/code&gt; might have an application for &lt;code&gt;posts&lt;/code&gt;, &lt;code&gt;users&lt;/code&gt;, &lt;code&gt;api&lt;/code&gt;, &lt;code&gt;homepage&lt;/code&gt;, etc. So the project &lt;code&gt;Blogging Platform&lt;/code&gt; might have separated the components like its API, Homepage, Post, Users, and so on to keep the development independent and well organized. &lt;/p&gt;

&lt;p&gt;So, we can understand apps as separate components of a large project. We can also understand apps as reusable components, you can use the &lt;code&gt;posts&lt;/code&gt; app in another project or in a particular app of the same project making it easier and faster to create the project. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#urlspy"&gt;
  &lt;/a&gt;
  urls.py
&lt;/h3&gt;

&lt;p&gt;This is a file for managing the &lt;code&gt;URL&lt;/code&gt; routes of the project. We'll discuss URLs and Views in their own part in the series. This file basically has a list of URLs that should be paired with a &lt;code&gt;view&lt;/code&gt; or any other function. In the project folder, the URL patterns mostly link a baseurl to the URL file of the particular application. Don't worry if you can't get some of the terms, you'll clearly understand when we see them in the future parts of this series. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#wsgipy"&gt;
  &lt;/a&gt;
  wsgi.py
&lt;/h3&gt;

&lt;p&gt;WSGI or Web Server Gateway Interface is a file that is used to configure the project for production or deployment. This takes care of the server when we deploy into production. It is a Synchronous Web Server i.e. it listens to only one request and responds to that at a time. &lt;/p&gt;

&lt;p&gt;Some of the common WSGI servers are &lt;a href="https://gunicorn.org/"&gt;Gunicorn&lt;/a&gt;, &lt;a href="https://docs.djangoproject.com/en/3.2/howto/deployment/wsgi/modwsgi/"&gt;Apache&lt;/a&gt;, &lt;a href="https://docs.djangoproject.com/en/3.2/howto/deployment/wsgi/uwsgi/"&gt;uWSGI&lt;/a&gt;, &lt;a href="https://docs.cherrypy.dev/"&gt;cherrypy&lt;/a&gt;, &lt;a href="https://github.com/buchuki/aspen/blob/master/aspen/wsgi.py"&gt;Aspen&lt;/a&gt;, etc.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#asgipy"&gt;
  &lt;/a&gt;
  asgi.py
&lt;/h3&gt;

&lt;p&gt;ASGI or Asynchronous Server Gateway Interface is also similar to the WSGI file but it serves as an asynchronous web server. This file handles the requests which might be asynchronous i.e. the web server can respond to multiple requests and respond to them at a time. We can even send tasks to the background using this type of server configuration. &lt;/p&gt;

&lt;p&gt;Some of the common ASGI servers are &lt;a href="https://www.uvicorn.org/"&gt;Uvicorn&lt;/a&gt;, &lt;a href="https://docs.djangoproject.com/en/3.2/howto/deployment/asgi/daphne/"&gt;Daphne&lt;/a&gt;, &lt;a href="https://docs.djangoproject.com/en/3.2/howto/deployment/asgi/hypercorn/"&gt;Hypercorn&lt;/a&gt;, etc.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-a-django-project-application"&gt;
  &lt;/a&gt;
  Creating a Django Project Application
&lt;/h2&gt;

&lt;p&gt;So, let's create an application to see the structure of the basic app in Django. To create an app, we can use the &lt;code&gt;startapp&lt;/code&gt; option with the &lt;code&gt;python manage.py&lt;/code&gt; command followed by the name of the app like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
python manage.py startapp name 

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, &lt;code&gt;name&lt;/code&gt; can be any app name you'd like to give.  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#application-structure"&gt;
  &lt;/a&gt;
  Application Structure
&lt;/h2&gt;

&lt;p&gt;After creating an app, let the name be anything it should have a similar structure as : &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fpVX_tBD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/dgpxbrwoz/image/upload/v1637731715/blogmedia/apptree_zr12s0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fpVX_tBD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/dgpxbrwoz/image/upload/v1637731715/blogmedia/apptree_zr12s0.png" alt="create app" width="416" height="540"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;As we can see there are a couple of things to be discussed here. The main components that we are going to work on within developing the application in the project are: &lt;code&gt;models.py&lt;/code&gt;, &lt;code&gt;views.py&lt;/code&gt;, &lt;code&gt;test.py&lt;/code&gt;. There are other files that we will create manually like the &lt;code&gt;urls.py&lt;/code&gt;, &lt;code&gt;serializers.py&lt;/code&gt;, etc. &lt;/p&gt;

&lt;p&gt;You also need to add the name of the app in quotes in the &lt;code&gt;INSTALLED_APPS&lt;/code&gt; list in the &lt;code&gt;settings.py&lt;/code&gt; file. Something like this: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S7eMomhv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/dgpxbrwoz/image/upload/v1637748258/blogmedia/installed_apps_ozir1p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S7eMomhv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/dgpxbrwoz/image/upload/v1637748258/blogmedia/installed_apps_ozir1p.png" alt="installed_apps" width="380" height="303"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;The application files can be summarized as : &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fIHglr4s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/dgpxbrwoz/image/upload/v1637745151/blogmedia/17_xyefpq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fIHglr4s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/dgpxbrwoz/image/upload/v1637745151/blogmedia/17_xyefpq.png" alt="App structure summary" width="880" height="625"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Let us look at each of the files and folders in the application: &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#modelspy"&gt;
  &lt;/a&gt;
  models.py
&lt;/h3&gt;

&lt;p&gt;As the same suggests, we need to define the model of a database here. The actual structure and the relationship are created with the help of python and Django in this file. This is the place where the crust of the web application might be defined.  &lt;/p&gt;

&lt;p&gt;There are various aspects in creating a model like &lt;code&gt;Fields&lt;/code&gt;, &lt;code&gt;Relationship&lt;/code&gt;, &lt;code&gt;Meta-data&lt;/code&gt;, &lt;code&gt;methods&lt;/code&gt;, etc. These are defined with the help of python along with the Django Models. In most cases, a model is like a single &lt;code&gt;table&lt;/code&gt; in an actual database.  &lt;/p&gt;

&lt;p&gt;The file is quite important and interesting as it abstracts away the manual work of typing &lt;code&gt;SQL&lt;/code&gt; queries to create the database.  &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#migrations"&gt;
  &lt;/a&gt;
  migrations
&lt;/h3&gt;

&lt;p&gt;This migrations folder is a way for Django to keep track of the changes in the database. At every &lt;code&gt;migration&lt;/code&gt; or actual query that runs to create the table or the database structure. There might be multiple steps or iteration of the database, this folder stores those pieces of information. &lt;/p&gt;

&lt;p&gt;To make an analogy, it is like a &lt;code&gt;.git&lt;/code&gt; folder but for keeping track of the migrations or changes to the database.  &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#adminpy"&gt;
  &lt;/a&gt;
  admin.py
&lt;/h3&gt;

&lt;p&gt;This is the file for performing the operations at the admin level. We generally use this file to register the models into the &lt;code&gt;Admin section&lt;/code&gt; without touching any frontend part. It provides a built-in &lt;code&gt;CRUD&lt;/code&gt;(Create Read Update Delete) functionality to the model. This is really good for testing up the model manually before putting effort into the frontend part.  &lt;/p&gt;

&lt;p&gt;Other than this, we can customize the admin section with this file. We will see the details in the part of the &lt;code&gt;Admin section&lt;/code&gt; in this series. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#viewspy"&gt;
  &lt;/a&gt;
  views.py
&lt;/h3&gt;

&lt;p&gt;This is a file, that acts as a controller/server logic for the Django framework. We can define functions and classes as a response to the incoming requests from the server via the &lt;code&gt;urls.py&lt;/code&gt; file. There are a couple of approaches when it comes to writing the format of the functions like &lt;code&gt;class-based views&lt;/code&gt;, &lt;code&gt;function-based views&lt;/code&gt;, and others depending on the type of operation is been done. &lt;/p&gt;

&lt;p&gt;As said earlier, it is the &lt;code&gt;V&lt;/code&gt;(View) in the &lt;code&gt;MVT&lt;/code&gt; architecture in Django Framework. This is the place where we write the logic from the server-side to let's say render HTML pages(templates), query to the database with CRUD operations, return an HTTP response, etc.   &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#urlspy"&gt;
  &lt;/a&gt;
  urls.py
&lt;/h3&gt;

&lt;p&gt;This is the file in which a list of URL patterns is mapped to the particular view function. This &lt;code&gt;urls.py&lt;/code&gt; is specific to the app and it might be prefixed with the URL route mentioned in the project folder's &lt;code&gt;urls.py&lt;/code&gt; file.   &lt;/p&gt;

&lt;p&gt;So, not going much deeper, simply to put it's a map of a particular URL path with a function associated to it which gets triggered(called) when the user visits the URL.  &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#testspy"&gt;
  &lt;/a&gt;
  tests.py
&lt;/h3&gt;

&lt;p&gt;This is a file where we can perform automated tests on the application. This might be in integration with models, other applications, project settings, etc. This is a component that Django makes it to have easy and quick unit testing along with the Python modules for advanced testing. It is quite easier to integrate python modules and libraries into almost anything in the Django Project. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#appspy"&gt;
  &lt;/a&gt;
  apps.py
&lt;/h3&gt;

&lt;p&gt;This is the file for app-level configuration. We can change the default fields, app name, email settings, other module-specific settings that can be used in the models, views, or in another place that can be defined here.  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#other-foldersfiles"&gt;
  &lt;/a&gt;
  Other Folders/files
&lt;/h2&gt;

&lt;p&gt;Apart from the app folder and the project folder, we may have other folders like the &lt;code&gt;templates&lt;/code&gt;, &lt;code&gt;static&lt;/code&gt;, &lt;code&gt;media&lt;/code&gt;, etc. There are also python package-specific folders for which you may need to create folders. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#templates"&gt;
  &lt;/a&gt;
  Templates
&lt;/h3&gt;

&lt;p&gt;There are a couple of standard ways you can set up your Templates folder. Either in the root project or inside individual apps. The choice is yours, however, you feel comfortable. I personally use only one template folder in the root directory, but you can keep it wherever you want, but these two are the standard ones for ease of reading and maintaining the projects. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#static"&gt;
  &lt;/a&gt;
  Static
&lt;/h3&gt;

&lt;p&gt;The Static folder is the folder in which you store your &lt;code&gt;css&lt;/code&gt;, &lt;code&gt;javascript&lt;/code&gt;, and &lt;code&gt;images&lt;/code&gt;(images or media files that are used in the templates). This is a good way to improve the performance as in the production the webserver collects all the static files and stores them in a single place for responding to the requests.  The template folder if present in the root folder, has a sub-folder as the application names and inside the &lt;code&gt;app-name&lt;/code&gt;, we put in all the &lt;code&gt;.html&lt;/code&gt; or other template files.  &lt;/p&gt;

&lt;p&gt;As similar to the &lt;code&gt;template&lt;/code&gt; folder, the location can be modified or set as a configuration from the settings.py file. Usually, the static files(&lt;code&gt;.css&lt;/code&gt;, &lt;code&gt;js&lt;/code&gt;, etc) are stored in the root folder with app names as subfolders.  &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#media"&gt;
  &lt;/a&gt;
  Media
&lt;/h3&gt;

&lt;p&gt;The media folder is where you can store the media-specific to the user or the application processed data. For example, we can store the profile pictures of users, email attachments if it's an email application, thumbnails of the posts for a blogging platform, etc.  &lt;/p&gt;

&lt;p&gt;The configuration of the Media folder is quite similar to the Static folder but it has certain additional configurations. We'll look at them in their sections in this series. &lt;/p&gt;

&lt;p&gt;Phew! That was all the folder structure you need to get started with Django. There might be other folders and files specific for project, application, python modules but it won't be much hard to understand those as well. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;From this part, we were able to understand the folder structure of the Django framework. We explored the various files and folders with their use cases and their purpose. So, by reading the above description of the files and folders you might have got a rough idea about the flow of the development cycle in Django. &lt;/p&gt;

&lt;p&gt;In the next part, we'll start with actually getting hands dirty in the code and making our first view. Thank you for reading and Happy Coding :) &lt;/p&gt;

</description>
      <category>django</category>
      <category>python</category>
      <category>backend</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Migrating a Vue 2 project to Vue 3</title>
      <author>Per Enström</author>
      <pubDate>Wed, 24 Nov 2021 10:36:59 +0000</pubDate>
      <link>https://dev.to/perenstrom/migrating-a-vue-2-project-to-vue-3-hdj</link>
      <guid>https://dev.to/perenstrom/migrating-a-vue-2-project-to-vue-3-hdj</guid>
      <description>&lt;p&gt;In September of 2020 Evan You announced the stable release of Vue 3. &lt;a href="https://blog.vuejs.org/posts/vue-3-one-piece.html"&gt;The official blog post&lt;/a&gt; stated that it comes with&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;improved performance, smaller bundle sizes, better TypeScript integration, new APIs for tackling large scale use cases, and a solid foundation for long-term future iterations of the framework.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;But should you take the plunge immediately and migrate all your Vue 2 projects to Vue 3? Well, it depends. For many of you, the answer is probably &lt;em&gt;‘not yet’&lt;/em&gt;, for others it’s a wholehearted &lt;em&gt;‘yes’&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Vue 3 doesn’t introduce anything revolutionary that you &lt;a href="https://itnext.io/yes-vue-3-is-out-but-you-probably-dont-need-it-%EF%B8%8F-3e60634991b4"&gt;can’t already do in some fashion in Vue 2&lt;/a&gt;. But some features might be sufficiently attractive to upgrade. Let’s go through the four main features of Vue 3, and then you can make an informed decision yourself.&lt;/p&gt;

&lt;p&gt;First a disclaimer. Coming from a React background, Vue is still quite new to me, and one of the reasons for embarking on the migration journey was to learn more about the inner workings. So don’t expect any deep analysis of advanced new features, and take everything with a grain of salt.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#new-features"&gt;
  &lt;/a&gt;
  New features
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#layered-internal-modules"&gt;
  &lt;/a&gt;
  Layered internal modules
&lt;/h3&gt;

&lt;p&gt;This is basically a fancy way of saying that they’ve &lt;strong&gt;reduced tight coupling&lt;/strong&gt; between internal parts of Vue, making them more modular and swappable. This can also result in a smaller final bundle size, since parts of the Vue runtime may be completely or partly removed during tree shaking.&lt;/p&gt;

&lt;p&gt;These new modules also expose some of their internal APIs, which makes it possible to do some advanced solutions. One example of this is to write a custom renderer (in the blog post they mention Native or integrated systems), and the normal DOM renderer is also using these APIs.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#performance-improvements"&gt;
  &lt;/a&gt;
  Performance improvements
&lt;/h3&gt;

&lt;p&gt;According to their own blog post, Vue 3 is up to &lt;strong&gt;41% smaller&lt;/strong&gt;, renders up to &lt;strong&gt;55% faster&lt;/strong&gt;, updates up to &lt;strong&gt;133% faster&lt;/strong&gt; and uses up to &lt;strong&gt;54% less memory&lt;/strong&gt;. However, in the migration of our product we found negligible bundle size decreases, and in some cases increases. We did not perform any speed performance testing, but my general standpoint is to trust the developers. Our project is so small from the beginning, so perhaps there wasn’t room for much savings. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#improved-typescript-integration"&gt;
  &lt;/a&gt;
  Improved TypeScript integration
&lt;/h3&gt;

&lt;p&gt;Vue 3 has been &lt;strong&gt;written completely in TypeScript&lt;/strong&gt;, this means that all internal methods have type definitions bundled. For us developers, this means mainly that you will get some better autocompletion in VS Code, but also that moving your project to Typescript will be easier. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#composition-api"&gt;
  &lt;/a&gt;
  Composition API
&lt;/h3&gt;

&lt;p&gt;Perhaps the largest change is the Composition API, which makes it possible to &lt;strong&gt;couple related data, methods, watches, and computations together&lt;/strong&gt; instead of splitting the concerns over multiple parts of the component. This can make for a more elegant code base, as well as interesting possibilities for reusing parts of the logic in multiple components. See &lt;a href="https://v3.vuejs.org/guide/composition-api-introduction.html"&gt;the introduction article in the Vue documentation&lt;/a&gt; for more information. But basically, it means we can go from this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GcL83K96--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1d6g8jxtsxf3cy2zd2ab.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GcL83K96--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1d6g8jxtsxf3cy2zd2ab.png" alt="A Vue component with mixed concerns in data, computed and methods"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;to this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7kxP3z2F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b60iel0gvqo22ss0kbms.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7kxP3z2F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b60iel0gvqo22ss0kbms.png" alt="A Vue component using setup, with concerns next to each other"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;and then refactored to this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_rfzy0wJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yl6m3w5zca17e05jbogv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_rfzy0wJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yl6m3w5zca17e05jbogv.png" alt="The same Vue component refactored to be brief"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#migration-pattern"&gt;
  &lt;/a&gt;
  Migration pattern
&lt;/h2&gt;

&lt;p&gt;The complexity in migrating an existing Vue 2 project to Vue 3 entirely depends on what external plugins and libraries you are using, and how well they support Vue 3. Vue provides a migration build to ease the process, allowing you to migrate in steps while keeping some backwards compatibility. They also provide nice &lt;a href="https://v3.vuejs.org/guide/migration/migration-build.html"&gt;step-by-step instructions&lt;/a&gt; on how to migrate. I won’t go through it in detail here but will mention some pain points I encountered when migrating.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#notable-breaking-changes"&gt;
  &lt;/a&gt;
  Notable breaking changes
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#global-api-changes"&gt;
  &lt;/a&gt;
  Global API changes
&lt;/h4&gt;

&lt;p&gt;Where you could previously access the global &lt;code&gt;Vue&lt;/code&gt; object to, for example, add some global variables to &lt;code&gt;Vue.prototype&lt;/code&gt;, you now have to do add it to the config object of the actual Vue instance you’re using, i.e. &lt;code&gt;app.config.globalProperties&lt;/code&gt;.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#-raw-vmodel-endraw-on-custom-components"&gt;
  &lt;/a&gt;
  &lt;code&gt;V-model&lt;/code&gt; on custom components
&lt;/h4&gt;

&lt;p&gt;When using &lt;code&gt;v-model&lt;/code&gt; on custom components, the incoming data and emitted events have been changed. They can now be accessed on &lt;code&gt;modelValue&lt;/code&gt; and &lt;code&gt;update:modelValue&lt;/code&gt;. This opens up for custom components to have multiple &lt;code&gt;v-model&lt;/code&gt; bindings.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#functional-components"&gt;
  &lt;/a&gt;
  Functional components
&lt;/h4&gt;

&lt;p&gt;Functional components are now only created via a plain function and the functional attribute on single-file components have been deprecated. Where you previously used functional components to gain some performance increases, this gain is now negligible and the recommended way is to move all components to stateful components.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#render-function-changes"&gt;
  &lt;/a&gt;
  Render function changes
&lt;/h4&gt;

&lt;p&gt;If you’re using the render function in any of your components instead of normal template components. The syntax for this has now changed.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#migration-steps"&gt;
  &lt;/a&gt;
  Migration steps
&lt;/h3&gt;

&lt;p&gt;The steps to complete migration can be found in the documentation, but mainly consists of:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Update Vue and add compatibility package&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Fix warnings exposed by the compatibility package&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Update mounting of your app&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Upgrade &lt;code&gt;vuex&lt;/code&gt;, &lt;code&gt;vue-router&lt;/code&gt;, and any other Vue plugins you’re using&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;When all warnings are fixed, uninstall the compatibility package&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Overall the migration is easy to follow, and all official plugins (&lt;code&gt;vuex&lt;/code&gt;, &lt;code&gt;vue-router&lt;/code&gt;, etc) have good migration guides as well. We noted that we used &lt;code&gt;node-sass&lt;/code&gt;, which has been deprecated and replaced by sass, but that was an easy swap. We couldn’t go past v10 of &lt;code&gt;sass-loader&lt;/code&gt;, since it requires Webpack 5, which is a migration for another day.&lt;/p&gt;

&lt;p&gt;One package we used for automatic formatting of input fields, &lt;code&gt;vue-mask&lt;/code&gt;, seemed abandoned when we migrated, but seems to be updated to Vue 3 now. But keep an eye out for packages that doesn’t support Vue 3.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-is-it-not-raw-latest-endraw-"&gt;
  &lt;/a&gt;
  Why is it not &lt;code&gt;@latest&lt;/code&gt;?
&lt;/h3&gt;

&lt;p&gt;If you’ve looked into Vue 3, you might have found that (at the time of writing) the &lt;code&gt;@latest&lt;/code&gt; tag on NPM still points to Vue 2, with Vue 3 being relegated to &lt;code&gt;@next&lt;/code&gt; still. Even though Vue 3 was released in 2020, they are holding up on pointing everyone to the latest version until more plugins have been migrated to support Vue 3. Since Vue 3 contains a number of breaking changes, if you rely on a plugin that hasn’t migrated, you’re still stuck on Vue 2. &lt;/p&gt;

&lt;p&gt;The communication from Vue on this subject could be more transparent, however. Their roadmaps and blogposts are at this point quite outdated.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#should-you-take-the-plunge"&gt;
  &lt;/a&gt;
  Should you take the plunge?
&lt;/h3&gt;

&lt;p&gt;It depends. If you’re not using any of the deprecated features extensively, then I would absolutely recommend upgrading. Especially if you’re looking to moving to Typescript, the process will be easier if you’re on Vue 3. All official packages and dev tools support Vue 3, so if you use a fairly vanilla setup, the process will probably be smooth.&lt;/p&gt;

&lt;p&gt;If you use some packages that don’t support Vue 3, and you can’t find alternatives (as we did), you will have to stay on Vue 2. That being said, if you didn’t feel like any of the new features seem interesting to you, you’re fine being on Vue 2. &lt;/p&gt;

&lt;p&gt;But as with all projects, staying up to date has its perks. As time goes on, more and more packages will migrate to Vue 3, and eventually drop support for Vue 2, at which point you’re forced to upgrade for the same reason as you were forced to wait before.&lt;/p&gt;

</description>
      <category>vue</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Google oAuth on NextJs</title>
      <author>Ekama Emmanuel </author>
      <pubDate>Wed, 24 Nov 2021 10:35:20 +0000</pubDate>
      <link>https://dev.to/ekamanelly/google-oauth-on-nextjs-3ml5</link>
      <guid>https://dev.to/ekamanelly/google-oauth-on-nextjs-3ml5</guid>
      <description>&lt;p&gt;If your search has brought you here, then I'm sure you have done some type of authentication and authorization with probably Express &lt;a href="https://www.npmjs.com/package/passport"&gt;PassportJs&lt;/a&gt; on a project, so Let's save our time by jumping to straight to bullet overview and implementation.&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#overview"&gt;
  &lt;/a&gt;
  Overview
&lt;/h6&gt;

&lt;ul&gt;
&lt;li&gt;Add NextJs app to Google console &lt;/li&gt;
&lt;li&gt;Configure NextJs app with firebaseConfig (some few changes with firebase v9.0.0)&lt;/li&gt;
&lt;li&gt;Employ environment variable to hold secret
&lt;/li&gt;
&lt;li&gt;Build an auth-Service&lt;/li&gt;
&lt;li&gt;Protected routes with custom hooks
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Adding your Next app to Google console is pretty easy, It's like when you deploy on Varcel, with some few clicks you are done! You have a dashboard that gives a brief overview of your project when you create a project on google console. click on "Add app" button at the top and you will be taken to this page to provide a nickname for your app, mine is MetaApp. Then, follow the next few steps, it is self explanatory. Don't forget to copy firebaseConfig!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ocI3l7cL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5czqcvz2k1vxpl7t1bfp.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ocI3l7cL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5czqcvz2k1vxpl7t1bfp.PNG" alt="Register app" width="768" height="520"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now you're through with app registration, let's make use of the snippet you copied. Create a file with a name related to firebase, something like &lt;code&gt;fireBaseClient.js&lt;/code&gt; in a Service Folder and then import firebase app and auth.  *&lt;em&gt;side note **We import app and auth from *firebase/compact/&lt;/em&gt; not  &lt;em&gt;firebase/&lt;/em&gt; since Version 9 like so&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// service/fireBaseClient.js

import firebase from "firebase/compat/app";    firebase v9
import "firebase/compat/auth";                 firebase V9
import "firebase/compat/firestore";            firebase V9

// import firebase from "firebase/app";         firebase v8 
// import "firebase/auth";                      firebase v8 
// import "firebase/firestore";                 firebase v8 



const firebaseConfig = {
  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,
  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,
  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,
  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,
  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,
  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,
  measurementId: process.env.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID,
};
if (!firebase.apps.length) {
  firebase.initializeApp(firebaseConfig);
}
export default firebase;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You noticed how we hid the secret keys with environment variable? yeah, it's possible with NextJs. All I did was add an &lt;code&gt;env.local&lt;/code&gt; file to the root directory and paste the secret. Another &lt;strong&gt;side note&lt;/strong&gt; is that each env variable should start with &lt;code&gt;NEXT_PUBLIC_&lt;/code&gt; with whatever you chose to complete the name. It's how Next.js gets to know what to load or bundle. Also, there are trailing commas &lt;code&gt;,&lt;/code&gt; that came with the code we copied, get rid of them. I lost a couple hours debugging them. Once that is done we don't have to worry about our secret getting stolen by village people, haha! Quick example&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;NEXT_PUBLIC_SOMENAME = "MetaAppSecrete"
// don't forget the comma
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You will also see a condition &lt;code&gt;!firebase.apps.length&lt;/code&gt;,  this is to make sure we don't initialize another firebase app. Now we have completed firebase setup. It's time to build a signUpWithGoogle service&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;service/firebaseAuth.service.js

import firebase from "firebase/compat/app";
import "firebase/compat/auth";

export const  AuthService = {}

AuthService.loginWithGoogle = async () =&amp;gt; {
  const provider = new firebase.auth.GoogleAuthProvider();
  try {
    const { user } = await firebase.auth().signInWithPopup(provider);
    return {
      user,
    };
  } catch (error) {
    return {
      error: error.message,
    };
  }
};


AuthService.logout = async () =&amp;gt; {
  await firebase.auth().signOut();
};
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Honestly, I feel like there is no need explaining the code because you might shoplift it, which in my opinion, is the best technique of coding fast with &lt;a href="https://stackoverflow.com"&gt;StackOverflow&lt;/a&gt;. But let me explain, google gives us a provider when we execute this &lt;code&gt;new firebase.auth.GoogleAuthProvider()&lt;/code&gt; and we will call the type of login method we want on the provider, in our case it's &lt;code&gt;signInWithPopup&lt;/code&gt; type. There are others that redirects the user but I prefer the popup.&lt;/p&gt;

&lt;p&gt;Finally, we can tie our loginWithGoogle function to a signup button with an &lt;code&gt;onClick&lt;/code&gt; event. You don't need a snippet for this, do you?  &lt;/p&gt;

&lt;p&gt;This  post is becoming too long so I will deal with route protection in as a separate post.   &lt;/p&gt;

</description>
    </item>
    <item>
      <title>Credit Card Form - VueJs</title>
      <author>David</author>
      <pubDate>Wed, 24 Nov 2021 10:19:54 +0000</pubDate>
      <link>https://dev.to/david54429984/credit-card-form-vuejs-348c</link>
      <guid>https://dev.to/david54429984/credit-card-form-vuejs-348c</guid>
      <description>&lt;p&gt;A fantastic credit card form with smooth and sweet micro-interactions. Includes number formatting, validation and automatic card type detection. Built with vuejs and also fully responsive.&lt;/p&gt;

&lt;p&gt;See on Github: &lt;a href="https://github.com/muhammederdem/credit-card-form"&gt;https://github.com/muhammederdem/credit-card-form&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/JavaScriptJunkie/embed/YzzNGeR?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>codepen</category>
    </item>
    <item>
      <title>JavaScript Array length – the definitive guide</title>
      <author>Amer Sikira</author>
      <pubDate>Wed, 24 Nov 2021 10:11:08 +0000</pubDate>
      <link>https://dev.to/amersikira/javascript-array-length-the-definitive-guide-1366</link>
      <guid>https://dev.to/amersikira/javascript-array-length-the-definitive-guide-1366</guid>
      <description>&lt;p&gt;&lt;em&gt;This article was originally published on &lt;a href="https://webinuse.com/javascript-array-length-the-definitive-guide/"&gt;webinuse.com&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;JavaScript Array length property is something we use, almost, every time we work with an array. But, often, we forget how powerful this property can really be.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-javascript-array-length-property"&gt;
  &lt;/a&gt;
  What is JavaScript Array length property
&lt;/h3&gt;

&lt;p&gt;The length property of an object which is an instance of type Array sets or returns the number of elements in that array. The value is an unsigned, 32-bit integer that is always numerically greater than the highest index in the array, as per &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/length"&gt;MDN&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;What does this mean? This means that length property “belongs” to Array &lt;a href="https://webinuse.com/guide-to-javascript-data-types/"&gt;data type&lt;/a&gt; and that it, either, returns the number of elements or sets the number of elements. Since the Array index is zero-based, the integer that is returned by length must be greater than the highest index by 1.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dense-and-sparse-arrays"&gt;
  &lt;/a&gt;
  Dense and sparse arrays
&lt;/h3&gt;

&lt;p&gt;There are two types of Arrays in JavaScript: dense and sparse. JavaScript Array length property gives different results for these two types. That is why we said that length must be greater than the highest index by 1. This means that sometimes &lt;code&gt;.length&lt;/code&gt; property doesn’t actually return the exact number of elements, but rather the highest index plus 1. In order to explain this, we need to take a look at the difference between dense and sparse arrays.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#dense-arrays"&gt;
  &lt;/a&gt;
  Dense arrays
&lt;/h4&gt;

&lt;p&gt;Dense arrays are the type of arrays that we usually work with.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Audi&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;BMW&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Mercedes&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is a typical example of a dense array, the type of array we are familiar with and work with.&lt;/p&gt;

&lt;p&gt;JavaScript Array length property will always return the exact number of elements when it comes to dense arrays.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Audi&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;BMW&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Mercedes&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// Result:&lt;/span&gt;
&lt;span class="c1"&gt;// 3&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;highestIndex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;highestIndex&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// Result:&lt;/span&gt;
&lt;span class="c1"&gt;//2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As we can see, &lt;code&gt;.length&lt;/code&gt; returned &lt;code&gt;3&lt;/code&gt; which is the exact number of items in the array &lt;code&gt;arr&lt;/code&gt;. The highest index is &lt;code&gt;2&lt;/code&gt;. Let’s try to add elements to an array and empty an array, and then check an index and the length.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Audi&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;BMW&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Mercedes&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="cm"&gt;/**
 * We know that arr.length === 3
 * Let's add an element to array
 * */&lt;/span&gt;
&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Ferrari&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// Result:&lt;/span&gt;
&lt;span class="c1"&gt;// 4&lt;/span&gt;

&lt;span class="cm"&gt;/**
 * In previous example highest index
 * was 2, let's check it now, after
 * we have added another element
 * */&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// Result:&lt;/span&gt;
&lt;span class="c1"&gt;//3&lt;/span&gt;

&lt;span class="c1"&gt;//Let's empty our array&lt;/span&gt;
&lt;span class="nx"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// Result:&lt;/span&gt;
&lt;span class="c1"&gt;// 0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once we have emptied an array, it is pointless to check for index, because there is nothing inside our array.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#sparse-arrays"&gt;
  &lt;/a&gt;
  Sparse arrays
&lt;/h4&gt;

&lt;p&gt;What is a “Sparse array?” It is, basically, an array with holes. This means that sparse array doesn’t, necessarily, start at 0. Also, this means that sparse arrays don’t have sequential elements, there can be cases when there is not element after element, but rather a hole. Let’s take a look at several examples.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Audi&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;BMW&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Mercedes&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;arr2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[,,,,&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;JavaScript&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;arr3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="nx"&gt;arr3&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Python&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the first variable &lt;code&gt;arr&lt;/code&gt;, we have 3 elements and “hole”/”empty space” on index 2. The second variable has 4 empty indexes and on the fifth we have &lt;code&gt;"JavaScript"&lt;/code&gt;. &lt;code&gt;arr3&lt;/code&gt; variable is created as an empty array. And then we assigned &lt;code&gt;"Python"&lt;/code&gt; on index 50. This means that there are 50 empty places before &lt;code&gt;"Python"&lt;/code&gt;, or 49 indexes. These were all examples of sparse arrays. Now, let’s use the JavaScript Array length property on all of those, to see what will happen.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Audi&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;BMW&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Mercedes&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;//Result:&lt;/span&gt;
&lt;span class="c1"&gt;//(4) ['Audi', 'BMW', empty, 'Mercedes']&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;arr2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[,,,,&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;JavaScript&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;//Result:&lt;/span&gt;
&lt;span class="c1"&gt;//(5) [empty × 4, 'JavaScript']&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;arr3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="nx"&gt;arr3&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Python&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;//Result:&lt;/span&gt;
&lt;span class="c1"&gt;//(51) [empty × 50, 'Python']&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As we can see in the example above &lt;code&gt;console.log()&lt;/code&gt; returned more than length. Even though we expected an integer, we got an integer plus array. This is because the browser is aware that this is a sparse array and it gave us the heads up. Also, wherever we had “hole” browser returned &lt;code&gt;empty&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#manipulate-array-with-javascript-array-length-property"&gt;
  &lt;/a&gt;
  Manipulate array with JavaScript Array length property
&lt;/h3&gt;

&lt;p&gt;JavaScript Array length property allows us to change the array’s length, by extending it, shortening it, or emptying it.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#extend-array"&gt;
  &lt;/a&gt;
  Extend array
&lt;/h4&gt;

&lt;p&gt;When we use the JavaScript Array length property to extend an array what do we get? A Sparse Array. Here is an example.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Audi&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;BMW&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Mercedes&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;//Result:&lt;/span&gt;
&lt;span class="c1"&gt;//3&lt;/span&gt;

&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;//Result:&lt;/span&gt;
&lt;span class="c1"&gt;//(5) ['Audi', 'BMW', 'Mercedes', empty × 2]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the example above we used our standard array and then we used &lt;code&gt;.length&lt;/code&gt; which returned 3. After that, we used JavaScript Array length’s ability to mutate array and we set the array’s length to 5. When we console logged &lt;code&gt;arr&lt;/code&gt; again we saw that, now, &lt;code&gt;arr&lt;/code&gt; has a length of 5 and that two empty indexes are added at the end of it. So, basically, we got a sparse array.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#shorten-an-array"&gt;
  &lt;/a&gt;
  Shorten an array
&lt;/h4&gt;

&lt;p&gt;As we said, the JavaScript Array length property gives us the ability to shorten an array. When we use &lt;code&gt;.length&lt;/code&gt; property, it just takes the exact number of elements that we provided from the beginning of the array. The rest of the elements are discarded and the array is mutated.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Audi&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;BMW&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Mercedes&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;//Result:&lt;/span&gt;
&lt;span class="c1"&gt;//3&lt;/span&gt;

&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;//Result:&lt;/span&gt;
&lt;span class="c1"&gt;//['Audi']&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We have shortened our array to 1 element, and only the first element is kept. The rest of them are deleted.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#empty-an-array"&gt;
  &lt;/a&gt;
  Empty an array
&lt;/h4&gt;

&lt;p&gt;We can empty an array using JavaScript Array length. Once we pass &lt;code&gt;0&lt;/code&gt; as our array’s length, our array will become empty.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Audi&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;BMW&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Mercedes&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;//Result:&lt;/span&gt;
&lt;span class="c1"&gt;//3&lt;/span&gt;

&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;//Result:&lt;/span&gt;
&lt;span class="c1"&gt;//[]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As we can see from the code snippet when we set our length to &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;console.log()&lt;/code&gt; returned an empty array.&lt;/p&gt;

&lt;p&gt;If you have any questions or anything you can find me on my &lt;a href="https://twitter.com/AmerSikira"&gt;Twitter&lt;/a&gt;, or you can read some of my other articles like &lt;a href="https://webinuse.com/how-to-create-custom-stackable-toast/"&gt;How to create custom stackable toasts&lt;/a&gt;?&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>tutorial</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>Flutter Web x Firebase Hosting - GitHub Action</title>
      <author>Chris Boik</author>
      <pubDate>Wed, 24 Nov 2021 09:57:44 +0000</pubDate>
      <link>https://dev.to/mysticza/flutter-web-x-firebase-hosting-github-action-3fke</link>
      <guid>https://dev.to/mysticza/flutter-web-x-firebase-hosting-github-action-3fke</guid>
      <description>&lt;h3&gt;
  &lt;a href="#my-workflow"&gt;
  &lt;/a&gt;
  My Workflow
&lt;/h3&gt;

&lt;p&gt;This GitHub Actions workflow assists Flutter developers specifically outputting to Web.&lt;br&gt;
Please see the additional resource below to stay up-to-date with the required tools for this workflow to work.&lt;/p&gt;

&lt;p&gt;The YAML files below are partially auto-generated by the Firebase CLI when setting up hosting but require additional DIY steps included for you to use directly after replacing the placeholders with the names of your secrets, project IDs, and preferred hosting channels.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#submission-category"&gt;
  &lt;/a&gt;
  Submission Category:
&lt;/h3&gt;

&lt;p&gt;DIY Deployments&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#yaml-files"&gt;
  &lt;/a&gt;
  Yaml Files
&lt;/h3&gt;

&lt;p&gt;
  Deploy to Firebase Hosting on Merge
  &lt;br&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# This file was PARTIALLY auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools

name: Deploy to Firebase Hosting on merge
'on':
  push:
    branches:
      - master
jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v1 #required (unofficial as no official tool exists, yet!)
        with:
          channel: 'stable' # or: 'beta', 'dev' or 'master'
      - run: flutter pub get &amp;amp;&amp;amp; flutter build web
      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.YOUR-FIREBASE-SERVICE-ACCOUNT-SECRET-NAME }}'
          channelId: live #Your preferred Firebase channel
          projectId: YOUR-PROJECT-ID

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;/p&gt;

&lt;p&gt;
  Deploy to Firebase Hosting on PR
  &lt;br&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# This file was PARTIALLY auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools

name: Deploy to Firebase Hosting on PR
'on': pull_request
jobs:
  build_and_preview:
    if: '${{ github.event.pull_request.head.repo.full_name == github.repository }}'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v1 #required (unofficial as no official tool exists, yet!)
        with:
          channel: 'stable' # or: 'beta', 'dev' or 'master'
      - run: flutter pub get &amp;amp;&amp;amp; flutter build web
      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.YOUR-FIREBASE-SERVICE-ACCOUNT-SECRET-NAME }}'
          projectId: YOUR-PROJECT-ID



&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#additional-resources-info"&gt;
  &lt;/a&gt;
  Additional Resources / Info
&lt;/h3&gt;

&lt;p&gt;This workflow wouldn't be possible without the brilliant:&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/subosito"&gt;
        subosito
      &lt;/a&gt; / &lt;a href="https://github.com/subosito/flutter-action"&gt;
        flutter-action
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Flutter environment for use in actions. It works on Linux, Windows, and macOS.
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


</description>
      <category>actionshackathon21</category>
      <category>flutter</category>
      <category>firebase</category>
      <category>webdev</category>
    </item>
    <item>
      <title>10 Best Black Friday + Cyber Monday Deals 2021 for Programmers and Developers</title>
      <author>javinpaul</author>
      <pubDate>Wed, 24 Nov 2021 09:54:55 +0000</pubDate>
      <link>https://dev.to/javinpaul/10-best-black-friday-cyber-monday-deals-2021-for-programmers-and-developers-2hg1</link>
      <guid>https://dev.to/javinpaul/10-best-black-friday-cyber-monday-deals-2021-for-programmers-and-developers-2hg1</guid>
      <description>&lt;p&gt;&lt;a href="https://click.linksynergy.com/fs-bin/click?id=JVFxdTr9V80&amp;amp;offerid=323058.9410&amp;amp;type=3&amp;amp;subid=0"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MSkCwbsQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/667/1%2ABQDuZHro4cBXDHctFYqZSw.png" alt="" width="667" height="263"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;image_credit- Codecademy&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Disclosure: This post includes affiliate links; I may receive compensation if you purchase products or services from the different links provided in this article.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Hello Devs, if you are looking for the best Black Friday and Cyber Monday 2021 deals to invest in your learning then you have come to the right place.&lt;/p&gt;

&lt;p&gt;In this article, I have selected the &lt;em&gt;best Black Friday and Cyber Monday deals&lt;/em&gt; for programmers, developers, software engineers, and IT professionals who want to invest in learning new technology and upskilling themselves in 2022.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Black Friday and Cyber Monday&lt;/strong&gt; are special occasion to buy and probably the best time to invest in your technical skills. This is the time when every company offers sweet deals on books, courses, tools, and things that matter most for programmers and developers.&lt;/p&gt;

&lt;p&gt;But, at the same time, it's not easy to find out great deals which are worth it for you. I have been receiving a lot of great offers from sites like &lt;a href="https://click.linksynergy.com/fs-bin/click?id=JVFxdTr9V80&amp;amp;offerid=323058.9410&amp;amp;type=3&amp;amp;subid=0"&gt;Udemy&lt;/a&gt;, &lt;a href="https://pluralsight.pxf.io/c/1193463/424552/7490?u=https%3A%2F%2Fwww.pluralsight.com%2Flearn"&gt;Pluralsight&lt;/a&gt;, &lt;a href="https://www.educative.io/subscription?affiliate_id=5073518643380224"&gt;Educative&lt;/a&gt;, &lt;a href="https://bit.ly/codecademypro"&gt;CodeCademy&lt;/a&gt;, &lt;a href="https://datacamp.pxf.io/c/1193463/1012793/13294?u=https%3A%2F%2Fwww.datacamp.com%2Fpricing"&gt;DataCamp&lt;/a&gt;, &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=40328&amp;amp;murl=https%3A%2F%2Fwww.coursera.org%2Fcourseraplus"&gt;Coursera&lt;/a&gt; about their Black Friday deals and many of my readers were also asking me about that.&lt;/p&gt;

&lt;p&gt;After answering them individually on email and social networks, I thought to put together the best Black Friday deals for programmers and software developers together.&lt;/p&gt;

&lt;p&gt;This will not only help you to find great deals but also you can get them before they get expired as these offers are highly time-sensitive and over by next week or so.&lt;/p&gt;

&lt;p&gt;If you are thinking to buy &lt;a href="https://medium.com/javarevisited/10-best-udemy-online-courses-for-java-developers-4c9ab70cd01f"&gt;Udemy courses&lt;/a&gt;, you can buy more than one course because Udemy provides lifetime access so you can watch those courses when you need them. Similarly, if you are on Pluralsight or Educative annual plan this is the best time to renew them and save for your future learning.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#10-best-black-friday-and-cyber-monday-educational-deals-for-programmers-and-software-developers"&gt;
  &lt;/a&gt;
  10 Best Black Friday and Cyber Monday Educational Deals for Programmers and Software Developers.
&lt;/h2&gt;

&lt;p&gt;Without wasting any more of your time, here is a list of the best Black Friday and Cyber Monday deals for programmers and developers. I have mostly chosen deals that allow you to buy courses, books, and other technical membership at a huge discount like from 20% to 40% and up to 90% in case of Udemy sales.&lt;/p&gt;

&lt;p&gt;This is seriously the best time to buy this course and services as you can get almost double value than normal time. So, if you want to invest in your career and learning this is the perfect time to make the investment.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#1-udemy-black-friday-and-cyber-monday-sale-999-85-off"&gt;
  &lt;/a&gt;
  1. &lt;a href="https://click.linksynergy.com/fs-bin/click?id=JVFxdTr9V80&amp;amp;offerid=323058.9410&amp;amp;type=3&amp;amp;subid=0"&gt;Udemy BLACK Friday and Cyber Monday Sale ($9.99)&lt;/a&gt; [85% OFF]
&lt;/h4&gt;

&lt;p&gt;Udemy is running the biggest sale of the year with courses starting from $10 to $12. You can get comprehensive courses with 20+ hours of content in just $10 which is ridiculous and true.&lt;/p&gt;

&lt;p&gt;Udemy seriously makes education affordable and that's why I love Udemy courses. and this is probably the best time to buy Udemy courses.&lt;/p&gt;

&lt;p&gt;Since Udemy provides lifetime access to their courses I usually buy a lot of courses during this time. If you need some recommendations, here are a couple of the best Udemy courses you can buy this Black Friday:&lt;/p&gt;

&lt;p&gt;1.&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fdocker-kubernetes-the-practical-guide%2F"&gt;Docker &amp;amp; Kubernetes: The Practical Guide&lt;/a&gt;&lt;br&gt;
2. &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fcomplete-sql-databases-bootcamp-zero-to-mastery%2F"&gt;Complete SQL + Databases Bootcamp: Zero to Mastery [2022]&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;These are the most up-to-date, engaging, and comprehensive courses you can buy on this year's Udemy Black Friday and Cyber Monday sale.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Discount --- up to 85% discount&lt;/strong&gt;&lt;br&gt;
Coupon Code --- No coupon required&lt;/p&gt;

&lt;p&gt;Here is the link to get your discount --- &lt;a href="https://click.linksynergy.com/fs-bin/click?id=JVFxdTr9V80&amp;amp;offerid=323058.9410&amp;amp;type=3&amp;amp;subid=0"&gt;Udemy BLACK Friday and Cyber Monday Sale ($9.99)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/fs-bin/click?id=JVFxdTr9V80&amp;amp;offerid=323058.9410&amp;amp;type=3&amp;amp;subid=0"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_8AWRlCL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/667/1%2AM_Af5iBIhh4_XBRyubVKzA.png" alt="best Udemy deal for black Friday 90% discount" width="667" height="229"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#2-pluralsight-black-friday-and-cyber-monday-deal-40-off"&gt;
  &lt;/a&gt;
  2. &lt;a href="https://pluralsight.pxf.io/c/1193463/424552/7490?u=https%3A%2F%2Fwww.pluralsight.com%2Flearn"&gt;Pluralsight Black Friday and Cyber Monday Deal&lt;/a&gt; [40% OFF]
&lt;/h3&gt;

&lt;p&gt;Pluralsight is another place where I go to learn new skills. It has the best collection of online courses from reputed instructors like Jose Paumard and Richard Warburton, Java champions, and Pinal Dave, an SQL expert which I admire a lot.&lt;/p&gt;

&lt;p&gt;Pluralsight is offering a &lt;a href="https://pluralsight.pxf.io/c/1193463/424552/7490?u=https%3A%2F%2Fwww.pluralsight.com%2Flearn"&gt;&lt;strong&gt;whopping 40% discount&lt;/strong&gt;&lt;/a&gt; on their persona, annual, and premium membership, which means you can buy their annual membership in just &lt;strong&gt;$179 per year&lt;/strong&gt; instead of the usual $299 per year, and their premium membership, which has quizzes, exercise, and interactive courses are now available for $269 instead of $449 for one year.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Discount --- up to 40% discount&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In this article, you will know everything regarding Pluralsight Black Friday Deals and Coupon Codes and how to use them and also join Pluralsight free weekend to try out all of their courses for FREE for one weekend&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Here is the link to grab your discount &lt;/strong&gt;---&lt;a href="https://pluralsight.pxf.io/c/1193463/424552/7490?u=https%3A%2F%2Fwww.pluralsight.com%2Flearn"&gt;&lt;strong&gt; Pluralsight 40% OFF&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://pluralsight.pxf.io/c/1193463/424552/7490?u=https%3A%2F%2Fwww.pluralsight.com%2Flearn"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--A6n6CGCY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/667/1%2AGKq5JReNm1o_pg0HyHNCgQ.jpeg" alt="best Pluralsight deal for black Friday 40% discount" width="600" height="315"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you like membership websites then I highly recommend getting their premium membership which is now available for &lt;strong&gt;just $269 per year&lt;/strong&gt;. If you are in doubt you can still try their &lt;a href="https://pluralsight.pxf.io/c/1193463/424552/7490?u=https%3A%2F%2Fwww.pluralsight.com%2Fpricing%2Ffree-trial"&gt;&lt;strong&gt;10-day-free-pass&lt;/strong&gt;&lt;/a&gt; to check the course quality and I am 100% sure that you will be delighted.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#3-codecademy-black-friday-amp-cyber-monday-deal-50-off"&gt;
  &lt;/a&gt;
  3. &lt;a href="https://www.gopjn.com/t/TUJGR0lLR0JHRklJSkhCR0ZISk1N?url=https%3A%2F%2Fwww.codecademy.com%2Fsubscriptions%2FproAnnualV3%2Fcheckout%3FdiscountCode%3DCYBER21"&gt;Codecademy Black Friday &amp;amp; Cyber Monday Deal&lt;/a&gt; [50% OFF]
&lt;/h3&gt;

&lt;p&gt;Codecademy is one of the pioneers of interactive learning and I have learned a lot of useful skills like JavaScript from their free course. Now, they have take their portal to next level and created many learning paths where you can learn an in-demand skill in a structured way by following the learn-by-doing method.&lt;/p&gt;

&lt;p&gt;They are structured is super with a short burst of knowledge with interactive exercises and then a project to apply all the knowledge and gain confidence.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Discount ---&lt;/strong&gt; &lt;em&gt;50% OFF on annual subscription&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;They are offering a &lt;strong&gt;50% discount&lt;/strong&gt; on all of their annual plans with code &lt;strong&gt;CYBER21&lt;/strong&gt;, which means you can buy their CodeCademy Pro annual plan for just &lt;strong&gt;$11.99 per month&lt;/strong&gt; which is the cost of an Udemy course, and you will get access to many of their courses, quizzes, and career path.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Here is the link to get a discount&lt;/strong&gt; --- &lt;a href="https://www.gopjn.com/t/TUJGR0lLR0JHRklJSkhCR0ZISk1N?url=https%3A%2F%2Fwww.codecademy.com%2Fsubscriptions%2FproAnnualV3%2Fcheckout%3FdiscountCode%3DCYBER21"&gt;&lt;strong&gt;50% Off Direct Annual Subscriptions at Codecademy&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.gopjn.com/t/TUJGR0lLR0JHRklJSkhCR0ZISk1N?url=https%3A%2F%2Fwww.codecademy.com%2Fsubscriptions%2FproAnnualV3%2Fcheckout%3FdiscountCode%3DCYBER21"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MSkCwbsQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/667/1%2ABQDuZHro4cBXDHctFYqZSw.png" alt="best CodeCademy deal for black Friday 50% discount" width="667" height="263"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#4-datacamp-black-friday-and-cyber-monday-deal-63-off"&gt;
  &lt;/a&gt;
  4. &lt;a href="https://datacamp.pxf.io/c/1193463/1012793/13294?u=https%3A%2F%2Fwww.datacamp.com%2Fpromo%2Fnovember-flash-sale-2021"&gt;Datacamp Black Friday and Cyber Monday Deal&lt;/a&gt; [63% OFF]
&lt;/h3&gt;

&lt;p&gt;DataCamp is one of the best websites to learn Python, SQL, Power BI, DataScience, and Machine learning. Data Science is offering a whopping &lt;strong&gt;62% discount&lt;/strong&gt; this means you can buy an annual subscription for just $149/year as opposed to $399 per year.&lt;/p&gt;

&lt;p&gt;With this subscription, you will get access to 340+ courses and 10,400+ exercises. If you want to learn essential &lt;strong&gt;Data Skills in 2021&lt;/strong&gt; then I highly recommend Datacamp and this is the perfect time to get the membership and save 62% now.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Discount --- 63% on Annual Plans&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you want to learn data skills in 2022 then you should take advantage of the latest DataCamp sale or discount to learn data science and gain access to hundreds of interactive courses covering Python, R, SQL, machine learning, non-coding essentials, and much more.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Here is the link to get the discount &lt;/strong&gt;--- &lt;a href="https://datacamp.pxf.io/c/1193463/1012793/13294?u=https%3A%2F%2Fwww.datacamp.com%2Fpromo%2Fnovember-flash-sale-2021"&gt;&lt;strong&gt;&lt;em&gt;Save up to 63% on Premium plans&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://datacamp.pxf.io/c/1193463/1012793/13294?u=https%3A%2F%2Fwww.datacamp.com%2Fpromo%2Fnovember-flash-sale-2021"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xRJI9JiQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/667/1%2A76xrnvtC_5JniM65mgHZdQ.png" alt="best Datacamp deal for black Friday 60% discount " width="667" height="371"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#5-educative-black-friday-deal-70-discount"&gt;
  &lt;/a&gt;
  5. &lt;a href="https://www.educative.io/subscription?affiliate_id=5073518643380224"&gt;Educative Black Friday Deal (70% discount)&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Educative is an interactive, text-based platform that allows you to run code on a browser. This means you don't need to set up your environment which is often the biggest hurdle in learning new technologies.&lt;/p&gt;

&lt;p&gt;I love Educative courses, especially their coding interview courses like &lt;a href="https://medium.com/javarevisited/10-best-system-design-courses-for-coding-interviews-949fd029ce65"&gt;Grokking the System Design&lt;/a&gt; and &lt;a href="https://medium.com/hackernoon/10-data-structure-algorithms-and-programming-courses-to-crack-any-coding-interview-e1c50b30b927"&gt;Grokking the Coding interview pattern&lt;/a&gt; courses.&lt;/p&gt;

&lt;p&gt;If you are preparing for coding interviews and love text-based interactive courses then you will love the Educative portal. They also have many useful learning paths like Java for programmers, Become A frontend developer, and scalability and System Design for Developers.&lt;/p&gt;

&lt;p&gt;They are now offering an additional 20% discount on their annual plan which gives access to their 200+ courses. This means you can buy their annual plan &lt;strong&gt;for just $14.99,&lt;/strong&gt; the usual price of $39.99 so a total discount of more than 70%. The offer ends on 30th November.&lt;/p&gt;

&lt;p&gt;Here is the link ---&lt;a href="https://www.educative.io/subscription?affiliate_id=5073518643380224"&gt;&lt;strong&gt; Educative Unlimited for $14.9&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.educative.io/subscription?affiliate_id=5073518643380224"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6h5URJlm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/667/1%2AQYrghID0xG0wN0JYDpSBOQ.png" alt="" width="667" height="349"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#6-40-off-on-vlad-mihalceas-hibernate-books-and-courses"&gt;
  &lt;/a&gt;
  6. 40% OFF on Vlad Mihalcea's Hibernate Books and Courses
&lt;/h3&gt;

&lt;p&gt;Java champion and fellow blogger, Vlad Mihalcea is conducting a live online workshop to teach you Hibernate in depth. Yes, the &lt;a href="https://vladmihalcea.teachable.com/p/high-performance-java-persistence-online-workshop?coupon_code=JAVINPAULDISCOUNT&amp;amp;affcode=172599_kuoszt8s"&gt;&lt;strong&gt;High-Performance Java Persistence training&lt;/strong&gt; &lt;/a&gt;is open now&lt;/p&gt;

&lt;p&gt;This will be a live online zoom training and it consists of &lt;strong&gt;4 sessions&lt;/strong&gt; of &lt;strong&gt;4 hours&lt;/strong&gt; each is scheduled for the &lt;strong&gt;29th November --- 2nd of December&lt;/strong&gt;, from &lt;strong&gt;15:30&lt;/strong&gt; to &lt;strong&gt;19:30 CET.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;As you know, Hibernate is the most popular JPA provider and one of the most important frameworks for Java developers. Knowing its inner workings can make the difference between a high-performance enterprise application and one that barely crawls.&lt;/p&gt;

&lt;p&gt;This online workshop is based on Vlad's popular,&lt;a href="https://vladmihalcea.teachable.com/p/high-performance-java-persistence-ebook?coupon_code=BLACKFRIDAY21&amp;amp;affcode=172599_kuoszt8s"&gt; &lt;em&gt;High-Performance Java Persistence&lt;/em&gt;&lt;/a&gt;, a book that is trusted by more than 7500+ developers. This online workshop is meant to mind the gap between Java developers and database programming.&lt;/p&gt;

&lt;p&gt;Here are topics that Vlad will cover in this live Hibernate training:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Logging, Testing, Schema Management best practices&lt;/li&gt;
&lt;li&gt;  Data modeling (types, identifiers, entity mappings, inheritance)&lt;/li&gt;
&lt;li&gt;  Batch processing (Persistence Context Management, batch updates, bulk updates)&lt;/li&gt;
&lt;li&gt;  Fetching best practices&lt;/li&gt;
&lt;li&gt;  Transactions and concurrency control&lt;/li&gt;
&lt;li&gt;  Caching best practices&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And, Vlad is also running a Black Friday and Cyber Monday campaign where you can get his books and courses for a 40% discount.&lt;/p&gt;

&lt;p&gt;Here is the link --- &lt;a href="https://vladmihalcea.teachable.com/p/high-performance-java-persistence-mach-3-online?coupon_code=BLACKFRIDAY21&amp;amp;affcode=172599_kuoszt8s"&gt;&lt;strong&gt;40% off on the High-Performance Java Persistence course&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://vladmihalcea.teachable.com/p/high-performance-java-persistence-mach-3-online?coupon_code=BLACKFRIDAY21&amp;amp;affcode=172599_kuoszt8s"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WED1po0z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/667/1%2APWBRS8BPuCDyUsSpfwmBcA.jpeg" alt="" width="667" height="266"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#8-whizlabs-60-discount-on-practice-test-and-courses"&gt;
  &lt;/a&gt;
  8. Whizlabs [60% Discount on Practice Test and Courses]
&lt;/h3&gt;

&lt;p&gt;I am also excited to inform you that Whizlabs BLACK FRIDAY SALE is also LIVE from 23rd November. During this Hottest Sale of the Year, we'll be getting &lt;em&gt;60% off&lt;/em&gt; on all of their best Online Courses &amp;amp; Practice Tests, and up to &lt;a href="https://shareasale.com/r.cfm?b=1551042&amp;amp;u=880419&amp;amp;m=43514&amp;amp;urllink=&amp;amp;afftrack="&gt;&lt;strong&gt;35% off on all of their Premium Subscription plans&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you don't know, Whizlabs is the best place to go if you are preparing for Certifications. I have used their practice tests to pass Java, Spring, and Cloud certifications for a long time.&lt;/p&gt;

&lt;p&gt;Here are some of the best Whizlabs Courses and Practice tests for Java developers:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; &lt;a href="http://shrsl.com/38rng"&gt;&lt;strong&gt;OCPJPD 1Z0--819 Full Test&lt;/strong&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://shrsl.com/25qiz"&gt;&lt;strong&gt;AWS Certified Cloud Practitioner&lt;/strong&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://shrsl.com/25qjc"&gt;&lt;strong&gt;AWS Certified Developer Associate&lt;/strong&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://shareasale.com/m-pr.cfm?merchantid=43514&amp;amp;userid=880419&amp;amp;productid=792775328&amp;amp;afftrack="&gt;AWS Certified Solutions Architect Associate&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Nowadays, Whizlabs also have a subscription plan which provides access to all of their courses and practice test for one single price.&lt;/p&gt;

&lt;p&gt;if you are preparing for certification, consider taking Whizlabs subscription which provides full access to all of their online training courses and practice tests for different certifications like AWS, Java, Cloud, Docker, and Kubernetes with just &lt;a href="https://shareasale.com/r.cfm?b=1551042&amp;amp;u=880419&amp;amp;m=43514&amp;amp;urllink=&amp;amp;afftrack="&gt;&lt;strong&gt;$149 per annum (35% discount now)&lt;/strong&gt;&lt;/a&gt;. I highly recommend this subscription plan as Whizlabs has the best materials to prepare for IT certifications.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://shareasale.com/r.cfm?b=1551042&amp;amp;u=880419&amp;amp;m=43514&amp;amp;urllink=&amp;amp;afftrack="&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nsxS3UK0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/667/1%2AWay5xPlJ9w8cNggnIsiVoQ.png" alt="" width="667" height="402"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#9-coursera-plus-for-1"&gt;
  &lt;/a&gt;
  9. Coursera Plus for $1
&lt;/h3&gt;

&lt;p&gt;This is another biggest sale of the year and probably the best Black Friday deal for people who wants to learn on Coursera and try out Coursera courses, professional certifications, and specialization. &lt;/p&gt;

&lt;p&gt;Coursera is now offering their premium subscription plan &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=40328&amp;amp;murl=https%3A%2F%2Fwww.coursera.org%2Fcourseraplus%2Fspecial%2Fcyber2021"&gt;&lt;strong&gt;Coursera Plus for $1&lt;/strong&gt;&lt;/a&gt; for 1st month. &lt;/p&gt;

&lt;p&gt;If you don't know Coursera has the best courses from top tech companies like Google, Microsoft, and AWS as well as from the best universities around the world, and Coursera plus give unlimited access to over 90% of courses, Guided Projects, Specializations, and Professional Certificates on Coursera, taught by top instructors from leading universities and companies.&lt;/p&gt;

&lt;p&gt;If you always wanted to try &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=40328&amp;amp;murl=https%3A%2F%2Fwww.coursera.org%2Fcourseraplus%2F"&gt;Coursera Plus&lt;/a&gt;, this is the best time as you can try for $1 but remember that after the first month, this subscription auto-renews monthly for $59/month.&lt;/p&gt;

&lt;p&gt;By the way, this offer is only valid for new Coursera Plus subscribers only. After the first month, this subscription auto-renews monthly for $59/month. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Here is the link to try Coursera Plus for $1&lt;/strong&gt; --- &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=40328&amp;amp;murl=https%3A%2F%2Fwww.coursera.org%2Fcourseraplus%2Fspecial%2Fcyber2021"&gt;&lt;strong&gt;Coursera Plus for $1&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=40328&amp;amp;murl=https%3A%2F%2Fwww.coursera.org%2Fcourseraplus%2Fspecial%2Fcyber2021"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IDle8AnK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/667/1%2AxTdz2RohrXznbhRqmgkf9g.png" alt="" width="667" height="350"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#10-udacity-buy-one-gift-one-free-nanodegree-program"&gt;
  &lt;/a&gt;
  10. Udacity [Buy One, Gift One FREE Nanodegree program]
&lt;/h3&gt;

&lt;p&gt;When everyone is running the Black Friday offer, how come Udacity, another leading online learning platform can be left behind. They are also offering a &lt;a href="https://imp.i115008.net/c/1193463/1201337/11298"&gt;&lt;strong&gt;Buy One, Gift One FREE Nanodegree program&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;When you will purchase multi-month access to any Nanodegree program you will receive a promotional code for multi-month access to another Nanodegree program for free!&lt;/p&gt;

&lt;p&gt;To receive the &lt;a href="https://imp.i115008.net/c/1193463/1201337/11298"&gt;Buy one Gift One promotion&lt;/a&gt;, select the "pay upfront" option for multi-month access to the Nanodegree program when enrolling, and you will receive a code via email containing your free access code.&lt;/p&gt;

&lt;p&gt;This promotional code will apply to the pay-upfront cost of another Nanodegree program. The 100% off discount will only apply to the "pay upfront" amount; users who remain enrolled beyond that access period will be charged the standard monthly amount.&lt;/p&gt;

&lt;p&gt;You can use this to enroll in &lt;a href="https://imp.i115008.net/c/1193463/786224/11298?u=https%3A%2F%2Fwww.udacity.com%2Fcourse%2Fdata-scientist-nanodegree--nd025"&gt;&lt;strong&gt;Udacity Data Science Nanodegree&lt;/strong&gt;&lt;/a&gt;. So, first, open this Nanodegree program.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://imp.i115008.net/c/1193463/786224/11298?u=https%3A%2F%2Fwww.udacity.com%2Fcourse%2Fdata-scientist-nanodegree--nd025"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JD82L5cQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/667/1%2A17GQCnYRmWMLCnlkmLqJlw.png" alt="best Udacity Black Friday Deal" width="667" height="381"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That's all about the &lt;strong&gt;best Black Friday and Cyber Monday 2021 deals for programmers and developers&lt;/strong&gt;. You can see discounts are flying around every day but they are for a very limited period so better grab them before they expire.&lt;/p&gt;

&lt;p&gt;If you love Udemy courses, I have already published the &lt;a href="https://medium.com/javarevisited/10-best-udemy-online-courses-for-java-developers-4c9ab70cd01f"&gt;&lt;strong&gt;best demy courses&lt;/strong&gt;&lt;/a&gt; you should buy in this year's Black Friday and Cyber Monday sale in 2022.&lt;/p&gt;

&lt;p&gt;And, if you are looking to buy a book, you can also check out my first book after 10 years of writing Java articles --- &lt;a href="https://gumroad.com/l/QqjGH"&gt;&lt;strong&gt;Grokking the Java interview&lt;/strong&gt;&lt;/a&gt;available at a special Black Friday price of &lt;strong&gt;$2.90&lt;/strong&gt; this week as a Black Friday and Cyber Monday deal.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.amazon.com/dp/B08P55JZBX/?tag=javamysqlanta-20"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GKuWGi4v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/667/1%2AlU-jlD8QRp5KTz6tk6RwFw.png" alt="" width="667" height="463"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Other &lt;strong&gt;Programming and Resource Articles&lt;/strong&gt; you may like&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2020/08/top-10-coursera-projects-to-learn-essential-programming-skills.html"&gt;Top 10 Coursera Projects for Programmers and Developers&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2020/08/top-10-coursera-courses-specilizations-and-certifications.html"&gt;Top 10 Courses Courses for Programmers in 2022&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2019/10/udemy-vs-pluralsight-review-which-is-better-to-learn-code.html"&gt;Udemy vs Pluralsight? Which is a better learning platform?&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2019/10/the-java-developer-roadmap.html#axzz6N3akNoox"&gt;The Complete Java Developer RoadMap&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2019/09/codecademy-vs-udemy-vs-onemonth-which-is-better-for-learning-code.html#axzz6VYKcmyZz"&gt;Udemy vs CocdeCademy vs OneMonth in 2022?&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/javarevisited/18-coursera-courses-you-can-join-in-2020-to-learn-from-the-worlds-top-tech-companies-google-74af46967d1e"&gt;18 Coursera Courses to learn from Google and IBM&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2020/08/top-10-coursera-certifications-to-learn-Data-Science-Visualization-and-Data-Analysis.html"&gt;Top 10 Coursera Courses to learn Data Science&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/javarevisited/8-projects-you-can-buil-to-learn-python-in-2020-251dd5350d56"&gt;8 Projects You can do to learn Python in 2022&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2020/01/coursera-vs-udemy-which-is-better-for-programming-tech.html"&gt;Udemy vs Coursera? which is better to learn Tech and Programming&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2020/02/10-best-coursera-courses--for-python.html"&gt;10 Coursera Sepcizliation and Certifications to learn Python&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2020/02/does-udemy-coursera-edx-educative-or.html"&gt;Does Coursera Certificates helps in Job and Career&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/javarevisited/7-best-courses-to-learn-artificial-intelligence-in-2020-26d59d62f6fe"&gt;7 Best courses to learn Artificial Intelligence in 2022&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2019/10/top-5-coursera-professional-certificates-for-programmers-IT-professionals.html"&gt;5 Best Coursera Professional Certificates for Programmers&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/javarevisited/top-10-coursera-certificates-to-start-your-career-in-cloud-data-science-ai-mainframe-and-it-558690c83587"&gt;Top 10 Coursera Certifications to start your career&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/javarevisited/codecademy-or-pluralsight-which-is-a-better-platform-to-learn-coding-skills-59251a080642"&gt;Udemy vs Educative vs Codecademy? Which is better for beginners&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.java67.com/2020/06/top-5-data-science-degree-you-can-earn-online-coursera-edx.html"&gt;5 Data Science degrees you can earn on Coursera Online&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/javarevisited/top-10-machine-learning-and-data-science-certifications-and-training-courses-for-beginners-and-a6308497b764"&gt;10 Data Science and Machine Learning Certifications form Coursera&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thanks for reading this article. If you like these &lt;em&gt;best Black Friday and Cyber Monday deals, discount coupons for Programmers and Developers&lt;/em&gt; then please share them with your friends and colleagues. If you have another great Black Friday and Cyber Monday deal for programmers and developers then feel free to share with us.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;P. S. &lt;/strong&gt;--- If you are looking for the best Udemy courses to buy in the Black Friday sale then you can also check out my list of &lt;a href="https://javarevisited.blogspot.com/2020/11/top-10-udemy-courses-you-can-buy-in.html#axzz6enw6Ycw1"&gt;&lt;strong&gt;10 Best Udemy Courses to buy on the Black Friday sale&lt;/strong&gt;&lt;/a&gt;.It contains the best Udemy courses to learn Docker, Microservice, Spring Boot, MERN stack, SQL, Python, Web Design, and other essential skills required for Software development.&lt;/p&gt;

</description>
      <category>programming</category>
      <category>java</category>
      <category>coding</category>
      <category>python</category>
    </item>
    <item>
      <title>Easy way to write Unit Test cases of Node.Js</title>
      <author>Imran shaikh</author>
      <pubDate>Wed, 24 Nov 2021 09:43:57 +0000</pubDate>
      <link>https://dev.to/imranmind/easy-way-to-write-unit-test-cases-of-nodejs-3p6n</link>
      <guid>https://dev.to/imranmind/easy-way-to-write-unit-test-cases-of-nodejs-3p6n</guid>
      <description>&lt;p&gt;Initially, I used to think why my Architect is asking for writing test cases it's just wasting of time, But later I realised that it's important to write test cases along with the application features . Because it will give you the confidence in each iteration of new build or release.&lt;/p&gt;

&lt;p&gt;I have seen the impact of not writing proper test cases in one of my projects, As the developer is always hurrying for completing user stories or features. As I have analyzed we could have stopped at least 40% bugs if we would have written the proper unit test cases.&lt;/p&gt;

&lt;p&gt;So let's see the easy way to write Node.Js unit test cases Using &lt;strong&gt;Mocha&lt;/strong&gt; and &lt;strong&gt;Chai&lt;/strong&gt; library&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Mocha&lt;/strong&gt; is a test runner environment&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Chai&lt;/strong&gt; is an assertion library&lt;/p&gt;

&lt;p&gt;1.Create node.js project using:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;init&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Install dependencies
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="nx"&gt;mocha&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;g&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;global&lt;/span&gt; &lt;span class="nx"&gt;install&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="nx"&gt;chai&lt;/span&gt; &lt;span class="nx"&gt;mocha&lt;/span&gt; &lt;span class="nx"&gt;request&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;D&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;local&lt;/span&gt; &lt;span class="nx"&gt;install&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Create app.js file and write the below code.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/ping&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;pong&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8080&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Waw Server is running : 8080&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;create a test folder and add app.test.js file and write the below code.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;expect&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;chai&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;request&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;request&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;describe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;app rest api testing&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/ping status code&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;done&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;http://localhost:8080/ping&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;statusCode&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;equal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;equal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;message&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;pong&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;}));&lt;/span&gt;
    &lt;span class="nx"&gt;done&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
 &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Before running an application make sure you configure everything in package.json file like below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Z_WpvUqn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gsq2bd2oe8yn2uw9z5me.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z_WpvUqn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gsq2bd2oe8yn2uw9z5me.png" alt="Image description" width="834" height="534"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;after that run your application using the below command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;run&lt;/span&gt; &lt;span class="nx"&gt;test&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;:) Now you can see the output of test cases. like the below image.&lt;/p&gt;

&lt;p&gt;I always welcome the new approach so feel free to add a comment regarding the new approach.&lt;/p&gt;

&lt;p&gt;Thanks for reading. :)&lt;/p&gt;

&lt;p&gt;Please hit the love button if you liked it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iBhTmGEc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d2pf0fkcaamvst1glvi9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iBhTmGEc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d2pf0fkcaamvst1glvi9.png" alt="Image description" width="747" height="262"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>How to Select a Matching Tech Partner to Develop a Fashion eCommerce Website?</title>
      <author>Freita Browning</author>
      <pubDate>Wed, 24 Nov 2021 09:37:05 +0000</pubDate>
      <link>https://dev.to/freita_browning/how-to-select-a-matching-tech-partner-to-develop-a-fashion-ecommerce-website-a8c</link>
      <guid>https://dev.to/freita_browning/how-to-select-a-matching-tech-partner-to-develop-a-fashion-ecommerce-website-a8c</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xBGnJlpY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8ggupqi35bgh8gck0v5n.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xBGnJlpY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8ggupqi35bgh8gck0v5n.jpg" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;br&gt;
Everyone has a fashion euphoria today. So, there is a huge demand for fashion products, including apparel. If you want to sell fashion products, there is no best way than an eCommerce website. Hence, entrepreneurs are opting for eCommerce web development to build engaging fashion eCommerce stores. Choosing the right tech partner is essential to building a perfect eCommerce website. Moreover, finding a matching tech partner can be challenging because of many options.&lt;/p&gt;

&lt;p&gt;So, how can you find a &lt;a href="https://www.csschopper.com/blog/ecommerce-development-partner/"&gt;reliable tech partner to create a fashion eCommerce website?&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To find a good tech partner, you need to consider a few points. These essential points can guide you to a perfect partnership. The following are the vital points in selecting the right tech partner. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Determine your requirements&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You may think you know it. But having a proper understanding of what you really want is crucial for finding a good tech partner. It is essential to distinguish your website and features. E-commerce comes with many technological challenges. The tech partner you choose should have worked with intricacies in this domain. Such a company will offer a solution that will scale with your business growth. There are many other things to consider, like the eCommerce platform, hosting, etc.  &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Check communication &amp;amp; collaboration&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Communication skills are a vital aspect of a tech partner. Your project can go haywire in case of any communication gap. Hence, you must ensure that they are using efficient communication methods. Also, make sure they collaborate efficiently. Communication &amp;amp; collaboration is crucial for a project's success. Assess their communication &amp;amp; collaboration process with the below questions.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Does their communication &amp;amp; collaboration process fit your work 
style? &lt;/li&gt;
&lt;li&gt;Are they reachable through multiple channels like Skype, call, email, etc.?&lt;/li&gt;
&lt;li&gt;Who will you contact in case of queries, feedback, and concerns?&lt;/li&gt;
&lt;li&gt;How much time would they take to respond to your queries?&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#look-for-an-ecommerce-development-partner-with-an-effective-communication-process"&gt;
  &lt;/a&gt;
  Look for an eCommerce development partner with an effective communication process.
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Get work samples and references.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Choosing an &lt;a href="https://www.csschopper.com/ecommerce-website-development.shtml"&gt;eCommerce web development partner&lt;/a&gt; is a big decision. Check reviews of their past clients who have undergone their services. You can get more clarity through the feedback provided by their previous clients. Also, check their work portfolio. The portfolio consists of the variety of projects they have finished. Reviews and portfolios give an insight into their work culture. Also, you can ask their previous clients about their service. It will provide more in-depth insights. Check out the experiences of previous clients. They can provide details on the project management, availability, deadlines, etc. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Check their expertise&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Assess the tech partner's skills and experience on specific skill sets. Capable developers have expertise in multiple skills. They can fulfill clients' requirements according to their needs. Also, they are well-versed in different algorithms. You must check the relevant experience of the developers. For this, check if they have already worked for a business like you. Have they handled complex or large projects before? Also, check if they have expertise in both front-end and back-end development. They should also be updated with &lt;a href="https://www.csschopper.com/blog/ecommerce-web-development-trends/"&gt;the latest eCommerce development trends&lt;/a&gt; and techniques. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Check their pricing policy.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Budget is a crucial factor for selecting a technology partner. Hence, make sure that you understand their pricing policy. Also, check what is included in the development cost. Some companies have different price tiers based on clients' requirements. Look into the pricing policy before signing any contract. Also, be on the same page regarding the service terms and payment policy. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  Wrapping up!
&lt;/h2&gt;

&lt;p&gt;The demand for fashion products is increasing. And, an eCommerce website is an excellent method to sell fashion products. Moreover, to sell your products easily, you need to build a perfect eCommerce website. You would like to select the best tech partner for your project. But finding the best tech partner can be challenging. The essential points we have discussed here can help you choose the right eCommerce web development company. With these points, you can select a reliable tech partner. &lt;/p&gt;

</description>
      <category>webdev</category>
      <category>ecommerce</category>
    </item>
  </channel>
</rss>
