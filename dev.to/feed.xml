<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>What to ask at job interviews when you are being interviewed</title>
      <author>Maur√≠cio Linhares</author>
      <pubDate>Wed, 12 Jan 2022 18:42:17 +0000</pubDate>
      <link>https://dev.to/mauriciolinhares/what-to-ask-at-job-interviews-when-you-are-being-interviewed-f4l</link>
      <guid>https://dev.to/mauriciolinhares/what-to-ask-at-job-interviews-when-you-are-being-interviewed-f4l</guid>
      <description>&lt;p&gt;There are many guides on how to ace job interviews, you'll find books, videos, courses on multiple subjects covering every aspect possible, including even prep that is just for specific companies (like checking questions Facebook is currently asking), but we talk very little on how you should also interview the people you're talking to make sure you do want to work at that place. Switching jobs to find that you ended up in a bad work environment on a dead-end team is demoralizing and might affect your future career prospects.&lt;/p&gt;

&lt;p&gt;Most of the questions here assume the people you're talking to will be at least a little bit truthful in their answers. I'd also recommend exercising your network to find friends or friends of friends that work at the place to verify if the answers are accurate or if they're painting a rosy picture to make sure you accept the offer. Most businesses will have &lt;em&gt;some&lt;/em&gt; of the problems we will be discussing next, so it's going to be up to you to decide if you do want to sign up for these issues or not, there are no perfect places, but you should go in being comfortable on what the challenges are going to be. Glassdoor, Blind, and Fishbowl are usually hit and miss, with stuff being, either too rosy or just hell, so I can't say I find them very effective. &lt;/p&gt;

&lt;p&gt;Also, unless you're going for a director-level/decision-making position, don't trick yourself into thinking you're going to change the whole environment and make it bearable, odds are you won't and the energy you'll spend trying to &lt;em&gt;fix&lt;/em&gt; it without having the actual power to do so would be better spent on a job that doesn't require you do pull a Sisyphus every day. The job market is red hot right now, and you should be able to give that bad-looking job a pass. &lt;/p&gt;

&lt;p&gt;Now let's look at a couple of questions you could ask to figure out if it is a good job or a tar pit.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-the-oncall-schedule-like-how-many-incidents-does-the-team-handle-every-week-on-average"&gt;
  &lt;/a&gt;
  What is the on-call schedule like? How many incidents does the team handle every week on average?
&lt;/h2&gt;

&lt;p&gt;In most sane places, the teams that build apps are also responsible for ensuring they're running as expected in production. This means that when something bad happens, someone on the team will be called/paged and get the dreaded &lt;em&gt;PagerDuty alert, you have one incident&lt;/em&gt; phone call. Most of us have been there, and pager pain is very real. Working on a team that is firefighting all the time is the quickest path to burnout you could take as you'll be constantly worried about the next time you'll be fast asleep and the phone is going to ring, destroy your night and the next day.  &lt;/p&gt;

&lt;p&gt;What you're looking for here is a clear on-call schedule with multiple people on rotation and a secondary that also rotates. The schedules should usually be a couple of days long (I'd say a week is generally good enough), with at least two weeks off until you're on call again. Back-to-back on-call schedules are demanding, especially if incidents are frequent because there is very little time you're not worried about incidents.&lt;/p&gt;

&lt;p&gt;How much time does the team spend firefighting or doing unplanned work? If a team spends over 30% of its time just fixing bugs and working through incidents instead of building features, there are deeper issues on the team itself. The root causes here could be lack of investment in reliability, automation, lousy planning, death marches, none of which are a good signs. You could dig deeper here with the people you're talking to as to what is going to be done to bring the team back into a more manageable schedule and lower the amount of toil/bugs/incidents if there's no plan or they think this isn't a problem (&lt;em&gt;it's just how we do work&lt;/em&gt;), it's a &lt;em&gt;pass&lt;/em&gt;. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-the-engineering-onboarding-process-like-what-about-onboarding-on-the-team-itself"&gt;
  &lt;/a&gt;
  What is the engineering onboarding process like? What about onboarding on the team itself?
&lt;/h2&gt;

&lt;p&gt;It might sound like a &lt;em&gt;first world problem&lt;/em&gt; thing, but having a well-defined onboarding process is critical to having employees that start contributing to the bottom line as fast as possible. Businesses that are hiring but have no plan to get the people they're hiring into actually doing the job aren't doing a good job at hiring and might not be doing an excellent job at other places.&lt;/p&gt;

&lt;p&gt;Depending on the company's size, they might not have a general engineering and a specific team onboarding; there could just be one, that's not a problem. What you want to know is what will happen once you join and the expectations. Is there going to be a buddy taking you through the process, someone you can ask questions and get unstuck? How will you get used to the projects you'll be working on? Is there documentation? What are the first things you're going to be working on?&lt;/p&gt;

&lt;p&gt;The expectation here is that they won't just say &lt;em&gt;here's the source code, now figure it out&lt;/em&gt; but that there is some well-defined way for you to go along (preferably with someone else on the team as a pair) to get you used to the tooling, code, development and deployment process. If there is no onboarding process at all, be ready just to be thrown at stuff and be left to fend for yourself and hope for the best. While it's entirely possible to make this work (as I have had to make this work multiple times) I'd rather be at a place that is going to guide and help me get productive faster instead of having to ask &lt;em&gt;please can you help me&lt;/em&gt; to multiple people that might or might not care about helping me out.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-long-has-the-person-managing-the-team-been-a-manager"&gt;
  &lt;/a&gt;
  How long has the person managing the team been a manager?
&lt;/h2&gt;

&lt;p&gt;It might sound a bit unfair, but, especially as you get more senior, joining a team in a new company with a manager that does not have much experience managing people is risky. While having a manager with a lot of experience isn't a guarantee that everything will be unicorns and rainbows, a new manager is more likely to lack many skills required to build and lead an effective team. &lt;/p&gt;

&lt;p&gt;I've heard horror stories from friends that got a new job with a manager that had just been promoted after a stellar stint as an Individual Contributor, which led to a lot of clout in the business, but that couldn't manage people at all. Given the new manager's success in his previous career, he was given a lot of leeway on running the team, and most of the criticism would fall on deaf ears, making it hard to move the needle in any direction. This leads to team members not being promoted, not being assigned to important/impactful projects, and not being promoted. &lt;/p&gt;

&lt;p&gt;Being under a bad manager is not only bad for your mental health, but it's also bad for your career as it might stall your professional development and keep you from moving at the pace you expected you'd go. So, beware, joining a team with a newly minted manager carries many risks. Make sure you know what you're signing up for if this is the case. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-the-vision-for-the-team-what-are-the-important-projects-it-is-taking-on-in-the-next-12-months-what-would-be-my-goalsprojects-if-i-joined"&gt;
  &lt;/a&gt;
  What is the vision for the team? What are the important projects it is taking on in the next 12 months? What would be my goals/projects if I joined?
&lt;/h2&gt;

&lt;p&gt;Here what you're looking for is to make sure the team you're joining is healthy and doing important work for the business. Teams should have large, impactful projects they have planned and are working on, they should have a vision of what the team's job is, and as they're hiring new people, they need to have a reason for why they would be hiring you.&lt;/p&gt;

&lt;p&gt;If the team doesn't have important projects to work on, odds are it might not be an essential part of the business, or the manager hasn't been able to pull important work or doesn't want to do meaningful work. It's not unusual for, in larger companies, there to be teams that are just coasting and delivering small things here and there. If that's what you're looking for, the answers to these questions might give you hints this is it.&lt;/p&gt;

&lt;p&gt;Otherwise, if you want to do impactful and essential work, you want to make sure the folks you're talking to have good answers. They should have a clear vision for what the job is, it can't just be "deliver features", every team is working on some domain-specific work, so it has to be "improve the way warehouses are managed", "deliver code faster to production" (if they're a platform team, for instance). And on that vision, they should also have cool and exciting projects they're working on that have a tangible impact on the business, like building a new database-as-a-service product to capture a growing market. This kind of team allows you to grow into a better professional and offers challenges that will get you more experience and promotions.&lt;/p&gt;

&lt;p&gt;And last but not least, ask why they're hiring a new person and what would be the work you'd be doing, at what level you're expected to deliver. Are you here to lead a new project? Continue an existing project? What are the opportunities available for you to grow? Having good answers for these questions means they've done their homework on why they need to hire someone else, and you'll get a feel of the expectations they're placing on you if you join. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#is-there-a-career-development-plan-and-what-does-it-look-like"&gt;
  &lt;/a&gt;
  Is there a career development plan, and what does it look like?
&lt;/h2&gt;

&lt;p&gt;You might be in for the love of writing code and stuff, but we all want to be paid and eventually make more money next year than we do right now, and to do so, you have to progress on your career in some way. Ideally, you want the place to have a ladder with multiple levels and well-defined expectations for what you should be doing to get to the next level. Not knowing what you have to do to be promoted leaves you at the whims of your manager, and that is going to be the luck of the draw, the manager might work to get you promoted or not, taking most of the possibility of you influencing this out of your hands.&lt;/p&gt;

&lt;p&gt;Having a known set of activities you have to attain to move up allows you to plan your work accordingly, ticking the boxes that need to be ticked instead of just randomly doing stuff and hoping for the best. That also allows you to decide the crucial pieces of work that need to be done and focus on them instead of over-engineering or investing too much time on stuff that won't matter that much for your career. This gives you some power to decide your path instead of leaving it all in someone else's hands. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-the-selfdevelopment-benefits-provided"&gt;
  &lt;/a&gt;
  What are the self-development benefits provided?
&lt;/h2&gt;

&lt;p&gt;No tech company survives with a workforce that doesn't improve, so most of them will offer a stipend or access to education related to the work. You want to be at a place that will buy you that book you need for some new project you're working on or pay for a course or event you feel like will be essential for your productivity at work.&lt;/p&gt;

&lt;p&gt;Places that require you to invest in yourself even when your productivity improvement goes mainly to the business aren't the best place to stay.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pick-your-poison"&gt;
  &lt;/a&gt;
  Pick your poison
&lt;/h2&gt;

&lt;p&gt;No place will ever be the perfect workplace; you're going to find issues, problems, walls that can't be breached, and people that can't be reasoned with; still, getting more information allows you to make a better decision when accepting a job or not. You should always ask as many questions as you can about the company, the business, the team, and the people surrounding the team to ensure that it is the place you want to work. Don't forget your job is most likely the single thing you're going to spend most of your time in for a long while. You have to make sure this time is worth it.&lt;/p&gt;

</description>
      <category>career</category>
      <category>motivation</category>
      <category>watercooler</category>
    </item>
    <item>
      <title>Coin Flipper &amp; Color Boxes | Day 9</title>
      <author>Web.Developer.io</author>
      <pubDate>Wed, 12 Jan 2022 18:14:52 +0000</pubDate>
      <link>https://dev.to/developerioweb/coin-flipper-color-boxes-day-9-4h3</link>
      <guid>https://dev.to/developerioweb/coin-flipper-color-boxes-day-9-4h3</guid>
      <description>&lt;h1&gt;
  &lt;a href="#coin-flipper"&gt;
  &lt;/a&gt;
  Coin Flipper
&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;create a coin flipping counter.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The user should be able to click on a button to flip a coin. Every time the user clicks, the coin gets flipped again. The app should also keep track of how many times heads and tails have shown up.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Before building anything,¬†&lt;em&gt;think about the structure of your React app.&lt;/em&gt;¬†Don‚Äôt build this application with a single component: think about how to break your app up into at least two separate components!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Here‚Äôs some inspiration:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vceSwUzl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/njleaiko6hha3l7jfhm8.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vceSwUzl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/njleaiko6hha3l7jfhm8.gif" alt="Coin Flipper" width="880" height="224"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If you‚Äôd like, get creative and come up with your own coin faces! If you want to use the same coin as I did, you can find the images here:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Heads:‚Äù&lt;a href="https://tinyurl.com/react-coin-heads-jpg"&gt;https://tinyurl.com/react-coin-heads-jpg&lt;/a&gt;‚Äù&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tails: ‚Äú&lt;a href="https://tinyurl.com/react-coin-tails-jpg"&gt;https://tinyurl.com/react-coin-tails-jpg&lt;/a&gt;‚Äù&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code&lt;/strong&gt; üëá&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/Developer-io-web/Coin-Flipper"&gt;https://github.com/Developer-io-web/Coin-Flipper&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#color-boxes"&gt;
  &lt;/a&gt;
  Color Boxes
&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;For this part, you should show a series of 16 boxes (a box is just square div with a background color).&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Initially, each box should have a background color chosen from a random list of colors.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;When you click any box:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;it should change its color to a¬†different¬†random color.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Here‚Äôs some inspiration:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YksQ-1MH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/egpyox2jua7bjayk62ly.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YksQ-1MH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/egpyox2jua7bjayk62ly.gif" alt="React Project" width="640" height="298"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code&lt;/strong&gt; üëá&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/Developer-io-web/Color-Boxes"&gt;https://github.com/Developer-io-web/Color-Boxes&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Happy Coding üòÑ!&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Plant Monitor - MongoDB Atlas Hackathon Submission</title>
      <author>Souvik Biswas</author>
      <pubDate>Wed, 12 Jan 2022 17:58:56 +0000</pubDate>
      <link>https://dev.to/sbis04/plant-monitor-mongodb-atlas-hackathon-submission-34j0</link>
      <guid>https://dev.to/sbis04/plant-monitor-mongodb-atlas-hackathon-submission-34j0</guid>
      <description>&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/vGCJaMlH0_A"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#overview"&gt;
  &lt;/a&gt;
  Overview
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Plant Monitor&lt;/strong&gt; is an IoT-based project for monitoring plant health with ease. The projects consists of three parts:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="#iot-sensors"&gt;IoT: Sensors&lt;/a&gt; (for monitoring plant data)&lt;/li&gt;
&lt;li&gt;
&lt;a href="#database-mongodb"&gt;Database: MongoDB&lt;/a&gt; (Atlas, Realm and Chart)&lt;/li&gt;
&lt;li&gt;
&lt;a href="#mobile-app-flutter"&gt;Cross platform mobile app: Flutter&lt;/a&gt; (for getting realtime plant data)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#submission-category"&gt;
  &lt;/a&gt;
  Submission Category:
&lt;/h3&gt;

&lt;p&gt;Action Star&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#link-to-code"&gt;
  &lt;/a&gt;
  Link to Code
&lt;/h3&gt;

&lt;p&gt;The code for both the app and the IoT part is present in the following GitHub repo:&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/sbis04"&gt;
        sbis04
      &lt;/a&gt; / &lt;a href="https://github.com/sbis04/plant-monitor"&gt;
        plant-monitor
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Plant monitoring system using IoT, MongoDB, and Flutter
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Plant Monitor&lt;/h1&gt;
&lt;p&gt;IoT based plant monitoring system which is connected to MongoDB. This is a Flutter app to display the realtime data from the sensors attached to the plant on a mobile device.&lt;/p&gt;
&lt;h2&gt;
License&lt;/h2&gt;
&lt;p&gt;Copyright 2022 Souvik Biswas&lt;/p&gt;
&lt;p&gt;Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative overflow-auto"&gt;&lt;pre&gt;&lt;code&gt;http://www.apache.org/licenses/LICENSE-2.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.&lt;/p&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/sbis04/plant-monitor"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


&lt;h2&gt;
  &lt;a href="#project-description"&gt;
  &lt;/a&gt;
  Project Description
&lt;/h2&gt;

&lt;p&gt;A detailed description of all the three parts of this project is present below.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#iot-sensors"&gt;
  &lt;/a&gt;
  IoT: Sensors
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IY03J5vl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0tzyl4ae1m6hmjx2fpni.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IY03J5vl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0tzyl4ae1m6hmjx2fpni.png" alt="Hardware sensors" width="880" height="495"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ESP32&lt;/strong&gt; module is used for collecting data, processing and uploading to the MongoDB database. It is a low powered microcontroller integrated with WiFi and Bluetooth.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;DHT11&lt;/strong&gt; sensor is used for measuring raw temperate and humidity data from the surroundings of the plant.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;LDR&lt;/strong&gt; is used for calculating the light intensity that the plant is receiving.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Soil Moisture&lt;/strong&gt; sensor module is used to measure the moisture or the water level of the soil. The sensor includes a potentiometer to set the desired moisture threshold.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#database-mongodb"&gt;
  &lt;/a&gt;
  Database: MongoDB
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0QIrFilU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tils8x032t1dbq4wvhe0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0QIrFilU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tils8x032t1dbq4wvhe0.png" alt="MongoDB Atlas" width="880" height="343"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;MongoDB Atlas provides cloud database service using AWS, Azure, and Google Cloud. It also has various automation tools for performing various backend functionalities and comes with visualization tools. The services that are used in this project are described below.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Atlas&lt;/strong&gt; is used as the main cloud database for storing the sensor readings along with timestamps.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sVuTD40q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fmlkn99o13e8sds51kk7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sVuTD40q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fmlkn99o13e8sds51kk7.png" alt="Atlas" width="880" height="379"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Realm Function&lt;/strong&gt; is defined to easily store the sensor data from the ESP32 module. A &lt;strong&gt;HTTP Endpoint&lt;/strong&gt; is created to access the MongoDB database from the ESP32.&lt;/p&gt;

&lt;p&gt;The following function is used for storing the sensor data:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;atlas&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;services&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mongodb-atlas&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;coll&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;atlas&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;db&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;plantdata&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;collection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;readings&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
      &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;body&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;EJSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="nx"&gt;coll&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;insertOne&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Error inserting doc: &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Charts&lt;/strong&gt; are used to visualize the sensor readings directly inside the MongoDB web app.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9_thef5x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z5da2rb8bgepbk9jfa1j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9_thef5x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z5da2rb8bgepbk9jfa1j.png" alt="Charts" width="880" height="347"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For this project I have created four charts:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Plant Light&lt;/strong&gt; (%): Amount of light intensity plant is receiving&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Plant Humidity&lt;/strong&gt; (%): Humidity around the plant&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Plant Moisture&lt;/strong&gt; (%): Amount of water present in the soil &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Plant Temperature&lt;/strong&gt; (¬∞C): Current temperature around the plant&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#mobile-app-flutter"&gt;
  &lt;/a&gt;
  Mobile app: Flutter
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FA6RTsxC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/31ynnfmul2dvjoq6mrc8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FA6RTsxC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/31ynnfmul2dvjoq6mrc8.png" alt="Flutter app" width="880" height="599"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;To use the Realm data inside the Flutter application I have created a modified version of the &lt;a href="https://pub.dev/packages/flutter_mongodb_realm/versions/2.0.0-nullsafety.0"&gt;flutter_mongodb_realm&lt;/a&gt; plugin to support Dart null safety and run it on the latest version of the Flutter SDK.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.atlas.mongodb.com/getting-started/"&gt;MongoDB Atlas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.mongodb.com/realm/"&gt;MongoDB Realm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.mongodb.com/charts/"&gt;MongoDB Charts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.mongodb.com/realm/endpoints"&gt;Realm HTTPS Endpoints&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pub.dev/packages/flutter_mongodb_realm/versions/2.0.0-nullsafety.0"&gt;flutter_mongodb_realm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.espressif.com/projects/esp-idf/en/latest/esp32/get-started/index.html"&gt;ESP32 Docs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>atlashackathon</category>
      <category>flutter</category>
      <category>iot</category>
      <category>esp32</category>
    </item>
    <item>
      <title>Easiest way to create a serverless backend in AWS using UI</title>
      <author>Pedram Hamidehkhan</author>
      <pubDate>Wed, 12 Jan 2022 17:30:39 +0000</pubDate>
      <link>https://dev.to/pedramha/easiest-way-to-create-a-serverless-backend-in-aws-using-ui-hpk</link>
      <guid>https://dev.to/pedramha/easiest-way-to-create-a-serverless-backend-in-aws-using-ui-hpk</guid>
      <description>&lt;p&gt;I've recently discovered a new way to create serverless backend in AWS using the GUI. Of course, creating lambda functions and dynamodb tables through the UI isn't really difficult. The main point is to get everything as Code at the end. This is a really long awaited feature in aws, which is finally being delivered. Now you can configure your infrastructure through the AWS console, and then export it as code. You can use CDK or SAM as the export target. A similar feature has been offered by azure (exporting ARM templates), but it is great to see AWS is offering this feature.&lt;/p&gt;

&lt;p&gt;As opposed to previous posts, in this one we only work with the GUI (AWS Console).&lt;/p&gt;

&lt;p&gt;So after logging in to the aws console, go to Lambda section and click on Applications.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aSrMy_n8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8lvla7p6njtlg3kgwlx8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aSrMy_n8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8lvla7p6njtlg3kgwlx8.png" alt="Image description" width="880" height="201"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After that you see the following options:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KnX1TC2D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1hcurr4ipepl147n43ap.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KnX1TC2D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1hcurr4ipepl147n43ap.png" alt="Image description" width="880" height="336"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see, you can not do everything using this method, but you have quite a few options.&lt;br&gt;
We go ahead and create a Serverless Backend API. This will generate a new API Gateway, a few Lambda Functions and a DynamoDB Table.&lt;br&gt;
Please note that at this moment only Node.js 14 is supported. It is also worth mentionning that the generated code can be exported to github or to aws code commit.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AV3MsnE1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4v6yrodu23fii2fj7um2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AV3MsnE1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4v6yrodu23fii2fj7um2.png" alt="Image description" width="880" height="461"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So go ahead and click on next to go to the page where you can specify your application name, github/codecommit repository and whether you want the export to be SAM or CDK. If you want to export to github, you need to make a connection between your aws account and github. Click on "Connect with CodeStar Connections". In the popup window choose a name fo the connection and click "connect to github". After that a pop-up window will appear, asking you for your credentials. After entering your credentials your connection is there and you can go ahead and click on "create" on the bottom of the page. &lt;/p&gt;

&lt;p&gt;And that is IT! it takes a few minutes for all the resources to be created and for the code to be available in github. The cherry on top is, that using this method you already get a functioning CICD pipeline! As a matter of fact, aws configures code Pipeline and CodeBuild and connects them to your github repository for you. So every time you make a change and push it to github, the change will be automatically deployed to aws.&lt;/p&gt;

&lt;p&gt;It might be a bit difficult to follow using only text, so I went ahead and created a vide, which hopefully will be easier to follow.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    Youtube: https://youtu.be/z8lDx2l7f0w
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;That is it. Thank you very much for reading this post.&lt;/p&gt;

</description>
      <category>aws</category>
      <category>iac</category>
      <category>cdk</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Figma for Developers </title>
      <author>Kathryn Grayson Nanz</author>
      <pubDate>Wed, 12 Jan 2022 17:01:58 +0000</pubDate>
      <link>https://dev.to/kathryngrayson/figma-for-developers-6op</link>
      <guid>https://dev.to/kathryngrayson/figma-for-developers-6op</guid>
      <description>&lt;p&gt;If you're a developer who works with designers, you're already familiar with the infamous "handoff" ‚Äì that point in the workflow when you start turning wireframes and mockups into code. Even if you're not personally familiar with the process, it's probably unsurprising to hear that this can be a real pain point. This pain can be lessened, however, when both sides have an understanding of what the other will be looking for in the handoff process. &lt;/p&gt;

&lt;p&gt;Designers are expected to have a pretty thorough understanding of the front-end web: HTML elements, the CSS box model, how responsive resizing works, component-based structure, etc. And yet, when we flip the script, developers are rarely expected to have an understanding of design basics ‚Äì what's up with that? &lt;/p&gt;

&lt;p&gt;Not to mention, &lt;strong&gt;Figma Kits&lt;/strong&gt; are becoming a more popular offering for teams using a third-party component library. For example, this &lt;a href="https://www.telerik.com/figma-kits"&gt;Figma Kit from KendoUI&lt;/a&gt; which offers all their components, broken down into base elements and ready for customization in Figma. When you use one of these, you get the benefit of being &lt;em&gt;perfectly&lt;/em&gt; synced up with your designers...but, to make fullest use of a tool like that, you'll want to know your way around Figma ‚Äì at least a little.  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Teams work better and create better products when both parties have a high level understanding of each others' tools and priorities.&lt;/strong&gt; Not to mention all the ways having access to the design source files can make your own job easier. With that in mind, I'd love to introduce my developer friends to &lt;a href="https://www.figma.com/"&gt;&lt;strong&gt;Figma&lt;/strong&gt;&lt;/a&gt;, one of the most popular and widely-used UI design tools. It's free for individual use, so I'd encourage you to go make an account and start playing around! It's the best way to learn. &lt;/p&gt;

&lt;p&gt;Like any specialized software, a Figma file can be a little overwhelming to navigate if you're not familiar with it. So let's start from the top and take a look at the the basics, along with the Figma features that will be most useful for developers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#figma-file-organization"&gt;
  &lt;/a&gt;
  Figma File Organization
&lt;/h2&gt;

&lt;p&gt;Figma files are organized by &lt;strong&gt;Pages&lt;/strong&gt; (think screens of your application), which each contain &lt;strong&gt;Frames&lt;/strong&gt; (subpages, often used to organize mockups of Pages in various user interaction states). Each Frame is made up of &lt;strong&gt;Elements&lt;/strong&gt; ‚Äì shapes, text, vectors, etc. Elements (or groups of Elements) can be saved as reusable &lt;strong&gt;Components&lt;/strong&gt;. Elements are customized with &lt;strong&gt;Styles&lt;/strong&gt;, like colors or fonts. Styles (or groups of Styles) can be saved as &lt;strong&gt;Design Tokens&lt;/strong&gt; and organized into shareable &lt;strong&gt;Libraries&lt;/strong&gt; for easy reuse. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OPfzmm0l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t34r75ff2wi1xv1y9rbc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OPfzmm0l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t34r75ff2wi1xv1y9rbc.png" alt="Figma Design home screen" width="880" height="573"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#getting-oriented"&gt;
  &lt;/a&gt;
  Getting Oriented
&lt;/h2&gt;

&lt;p&gt;When you first open a Figma file, this is what you'll see: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The &lt;strong&gt;center panel&lt;/strong&gt; shows the current Page contents. Clicking on any Element will select it, in both the left and right sidebars.&lt;/li&gt;
&lt;li&gt;The &lt;strong&gt;left sidebar&lt;/strong&gt; is where you'll find the document structure, organized into a nested and layered view.&lt;/li&gt;
&lt;li&gt;The &lt;strong&gt;right sidebar&lt;/strong&gt; has three main sections ‚Äì &lt;strong&gt;Design, Prototype,&lt;/strong&gt; and &lt;strong&gt;Inspect&lt;/strong&gt;.

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Design&lt;/strong&gt; allows the designer to adjust the Styles on each Element. The contents of this tab will change based on which Element is selected (colors, borders, etc. for shapes, font choices, sizes, etc. for text).&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Prototype&lt;/strong&gt; allows the designer to hook all the Frames together into a clickable prototype.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Inspect&lt;/strong&gt; summarizes the selected content into CSS properties and code.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--q81NfBXK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2ug6vh5f720540uv5bmf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q81NfBXK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2ug6vh5f720540uv5bmf.png" alt="Figma Prototype Screen" width="880" height="456"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Why Should Developers Care?&lt;/strong&gt; &lt;br&gt;
The Prototype tool is a great way to do user testing and validate ideas before devs write a single line of code. This not only saves dev time by allowing designers to make adjustments to the UI before the development phase (and what's not to love about that?), but user testing at this stage &lt;em&gt;also&lt;/em&gt; offers devs the opportunity to sit down with a designer and a user before they start building. When devs can see user motivations and pain points happening in real time &lt;em&gt;and&lt;/em&gt; be involved in user conversations early in the process, it makes for a much more intuitive and cohesive product. This helps shift the development cycle from &lt;strong&gt;reactive&lt;/strong&gt; ("We have to fix this thing we got a lot of negative feedback about") to &lt;strong&gt;proactive&lt;/strong&gt; ("We saw during testing that users struggled with this task, so let's put extra attention into streamlining it"). Not to mention, just being able to explore the prototype whenever you like means you never have to wonder "Wait, what's supposed to happen when they click this button?"&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you want to take a closer look at the details of a mockup, you can turn on the &lt;strong&gt;Grids&lt;/strong&gt; with &lt;strong&gt;Ctrl+G,&lt;/strong&gt; which will help you get a feel for the spacing and structure of what you're building. You can also toggle on &lt;strong&gt;Rulers&lt;/strong&gt; with &lt;strong&gt;Shift+R,&lt;/strong&gt; and show &lt;strong&gt;spacing values between elements&lt;/strong&gt; by selecting the Element and &lt;strong&gt;holding down the Option key while you hover&lt;/strong&gt; over the items around it. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#exporting-assets"&gt;
  &lt;/a&gt;
  Exporting Assets
&lt;/h2&gt;

&lt;p&gt;Alright, so you've explored the file and you feel like you've got a solid understanding of what needs to be built and why. Time to start writing some code. Good news ‚Äì Figma also makes this easier! &lt;/p&gt;

&lt;p&gt;For defining your high-level styles, you'll want the contents of the Libraries ‚Äì those Design Tokens are the recurring CSS values that you'll want to turn into variables and/or assign to properties in your global stylesheet. If you select the highest level Page from the left-hand sidebar, the Design Tokens will appear in the right-hand sidebar. You can click on the knobs icon of each one to inspect it and see all the details you'll need to recreate it in your CSS files. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aLcMhmi2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ts7tbeetrla82k43u9s3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aLcMhmi2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ts7tbeetrla82k43u9s3.png" alt="A Figma Design Token" width="880" height="647"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Unfortunately, there's no native way in Figma for you to export those Libraries...fortunately, there are a handful of third-party Figma plugins that you can add to do it for you! My recommendation is &lt;strong&gt;&lt;a href="https://www.telerik.com/unite-ux"&gt;Unite UX&lt;/a&gt;&lt;/strong&gt;, which really makes it a piece of cake. If you download &lt;strong&gt;&lt;a href="https://www.figma.com/community/plugin/969582819918741496/Unite-UX"&gt;the Figma plugin&lt;/a&gt;&lt;/strong&gt;, you can export all the data from the Figma file into Unite UX, check the design against your code, and then export your final styling files from Unite UX. That Unite UX export package will include a ton of useful SASS files (one of which being '_tokens.scss') that you can add directly to your project. Boom, done. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Why Should Developers Care?&lt;/strong&gt; &lt;br&gt;
No more copying and pasting styles! No more trying to come up with unique variable names, only to find out the design team is calling the same thing something completely different! No more trying to match padding values just by staring back and forth between some exported PDF and your browser until they start to look similar! Whew, I'm exhausted just writing all that.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Once you get past the high-level styles and into the nitty-gritty, that's where the Inspect tool in Figma's right sidebar is going to be your new best friend. Much like the inspect tool in every major browser, Inspect lets you drill down on a single Element and get all the details ‚Äì helpfully formatted into CSS properties. You can get this info either as a list of properties, or as automatically generated code, both of which have quick copy options. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SchNRok6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jnvklpvbe94q7wma9ppu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SchNRok6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jnvklpvbe94q7wma9ppu.png" alt="The Figma Inspect tool" width="783" height="629"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Why Should Developers Care?&lt;/strong&gt; &lt;br&gt;
The Inspect tool is where Figma really shines for devs, by summarizing styles into CSS properties and even code snippets! As always, it's not wise to blindly copy and paste machine-generated code, but this is super useful as a jumping off point to tweak and adjust. Leaps and bounds better than starting from scratch, using some kind of color-picker tool, or (&lt;em&gt;shudder&lt;/em&gt;) attempting to match values by eye.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Finally, if there are any images or custom icons in the mockup, you'll want those exported as well. Ideally, your designers will have marked the assets you need as &lt;strong&gt;Exportable&lt;/strong&gt; ‚Äì if this is the case, then you can select the Page or Frame that you want to export items from, open the &lt;strong&gt;Export Panel&lt;/strong&gt; with &lt;strong&gt;Cmd+Shift+E,&lt;/strong&gt; and export everything that they've marked from one place. If not, you'll have to export assets one at a time. Select whatever you want to export and scroll down in the right sidebar until you see the &lt;strong&gt;Export&lt;/strong&gt; section. There, you can customize your size and export file type (PNG, SVG, JPG, or PDF), and click the Export button right below. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dItw7COU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/moks1eb1nj61n0dp626z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dItw7COU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/moks1eb1nj61n0dp626z.png" alt="The Figma Export tool" width="516" height="280"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Why Should Developers Care?&lt;/strong&gt; &lt;br&gt;
How many times have you had to put a project on hold in order to DM designers (who are probably busy with something else) and ask them to send you the assets you need? And then when you finally get those assets, you discover that they're not high enough resolution, or you're still missing something, or they've been exported as JPGs instead of...well, literally &lt;em&gt;anything&lt;/em&gt; else? Forget the back and forth, and instead feel confident getting what you need, when you need it, straight from the source files.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#ease-the-pain-of-the-handoff"&gt;
  &lt;/a&gt;
  Ease the pain of the handoff
&lt;/h2&gt;

&lt;p&gt;The design / dev handoff doesn't have to be a pain point if both groups are willing to meet each other halfway. There are plenty of great products that have taken strides towards bridging this gap, but at the end of the day, even the best tool is only useful if you have a contextual understanding of what you're doing with it. You don't need to have a deep understanding of design concepts to benefit from getting comfortable with Figma. When developers are empowered to explore and work with the actual design source files, everybody wins!&lt;/p&gt;

</description>
      <category>ux</category>
      <category>ui</category>
      <category>webdev</category>
      <category>frontend</category>
    </item>
    <item>
      <title>Why do the color values range from (0-255) only?</title>
      <author>rahul negi</author>
      <pubDate>Wed, 12 Jan 2022 16:40:34 +0000</pubDate>
      <link>https://dev.to/rahulnegi/why-do-the-color-values-range-from-0-255-only-10k8</link>
      <guid>https://dev.to/rahulnegi/why-do-the-color-values-range-from-0-255-only-10k8</guid>
      <description>&lt;h2&gt;
  &lt;a href="#once-upon-a-time"&gt;
  &lt;/a&gt;
  Once upon a time...
&lt;/h2&gt;

&lt;p&gt;Someone asked me this question "Why do the color values range from 0-255 only?". &lt;/p&gt;

&lt;p&gt;I was surprised how I never noticed this small thing and began on a quest to know the &lt;strong&gt;Truth&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;Not Surprisingly, the &lt;strong&gt;Truth&lt;/strong&gt; is so simple.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-truth"&gt;
  &lt;/a&gt;
  The Truth
&lt;/h2&gt;

&lt;p&gt;Most of the screens use &lt;strong&gt;24 bits&lt;/strong&gt; RGB pixels, each pixel has three components in order of** Red, Green, Blue** leaving &lt;strong&gt;8 bits&lt;/strong&gt; for each color component. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rxDTS2ho--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642002269352/HtYh6PvEI.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rxDTS2ho--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642002269352/HtYh6PvEI.png" alt="Screenshot (40).png" width="851" height="521"&gt;&lt;/a&gt;&lt;br&gt;
Check this RGB calculator  &lt;a href="https://www.w3schools.com/colors/colors_rgb.asp"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The minimum and maximum decimal number that can be represented through 8 bits is 0 and 255.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;00000000 (binary) = 0 (decimal)
11111111 (binary) = 255 (decimal) 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Each pixel component ranges through 256 different shades of their color (RGB), and each number just  sets the brightness/contrast of that pixel component resulting in&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;256 x 256 x 256 = 16777216 possible colors&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I hope you learned something new today, open to comments and suggestions. &lt;br&gt;
Thanks for reading the article. &lt;/p&gt;

</description>
    </item>
    <item>
      <title>I Was Betrayed By Computer Science Students</title>
      <author>Naufan Rusyda Faikar</author>
      <pubDate>Wed, 12 Jan 2022 16:39:57 +0000</pubDate>
      <link>https://dev.to/naruaika/i-was-betrayed-by-computer-science-students-244j</link>
      <guid>https://dev.to/naruaika/i-was-betrayed-by-computer-science-students-244j</guid>
      <description>&lt;p&gt;Convenience, she never guaranteed to make life better. It may seem so, but it is not real.&lt;/p&gt;

&lt;p&gt;Another day, I have called by a lecturer of mine from the last two semesters. It was not a direct call, but rather someone had came to me for saying that. I believed on her, for my lecture that one and several others have put their trust in me, specially in teaching my juniors. But that day happened to be my senior ... I know exactly, everyone has a tendency of doing what is destined to. But, if they do not even try, what is the point of being students? Of being computer science students?&lt;/p&gt;

&lt;p&gt;Even worse, one of our junior lecture told, "If you cannot code, you can always do this and that." You know, I am not upset, rather I am so sad.&lt;/p&gt;

&lt;p&gt;I have always believed that a computer student must know how to code. It does not matter at all if they end up not mastering all the implementations, but at least they shall get the basic ideas behind doing the code. It will surely be achieved by itself through efforts and struggles in the learning process. It will not be cheap though, never.&lt;/p&gt;

&lt;p&gt;I am used to, being the leader of a study group, from elementary to college. It was indeed such a disaster, since I was not expecting it at all. I would say that neither I am good at it nor I am passionate, but I became enjoyed by time. From there, I have learned a lot how to teach friends my age. I became able to say who only has a desire to learn, who is willing to put in the effort, and who is learning by compulsion.&lt;/p&gt;

&lt;p&gt;Without the prior experiences, I bet everyone can tell whether she wanted to be helped in study or in doing her thesis. With every added minute, I was getting more and more clueless as to what I should do to help. I did not want her parents to find out the three and a half years she spent in class was not worth the tuition fees. Although I kept myself to help her gently until my class break time was over.&lt;/p&gt;

&lt;p&gt;I think, I should have to think of this. I know that this cannot be completely resolved. But at the very least, one has to keep fighting for this, no matter where one is. And I know, some have been involved in this war, a war against laziness and ignorance. This is not the culture of our people, this is just a widespread misunderstanding.&lt;/p&gt;

&lt;p&gt;Today, I realised that I might have been wrong. People may suffered a lot during the learning process, but I smugly said they were not trying. Judging only by their accomplishments. Effort may not bring a charter, but it can change a person into a better person. Being a computer science student for three and a half years may have turned her from an introvert to a person who is not shy asking her junior for help.&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>todayilearned</category>
    </item>
    <item>
      <title>Property-Based Testing In Go</title>
      <author>Adam Gordon Bell</author>
      <pubDate>Wed, 12 Jan 2022 16:31:08 +0000</pubDate>
      <link>https://dev.to/adamgordonbell/property-based-testing-in-go-48kb</link>
      <guid>https://dev.to/adamgordonbell/property-based-testing-in-go-48kb</guid>
      <description>&lt;p&gt;Have you ever wanted your unit tests written for you? Property based testing is a powerful testing technique that, in a sense, is just that. You describe the properties you‚Äôd like to test, and the specific cases are generated for you.&lt;/p&gt;

&lt;p&gt;Property-based testing can be a bit trickier to learn, and not every problem can be well tested in this manner, but it‚Äôs a powerful technique that‚Äôs well supported by the go std-lib (&lt;code&gt;testing/quick&lt;/code&gt;) and that is under-utilized.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#testing-raw-csvquote-endraw-"&gt;
  &lt;/a&gt;
  Testing &lt;code&gt;csvquote&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;csvquote&lt;/code&gt; is a small program that makes it easier to deal with CSV files at the command line. It does this by replacing problematic CSV characters with the controls characters &lt;code&gt;\x1e&lt;/code&gt; and &lt;code&gt;\x1f&lt;/code&gt; and later removing them.&lt;/p&gt;

&lt;p&gt;You can use it like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;csvquote | head | csvquote -u
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I want to improve it a bit, but first, I want to add some testing to ensure I don‚Äôt break it. The tests will also help me document how it works.&lt;/p&gt;

&lt;p&gt;Here are my initial test cases:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var tests = []struct {
 in string
 out string
}{
 {`"a","b"`, `"a","b"`}, // Simple
 {"\"a,\",\"b\"", "\"a\x1f\",\"b\""}, //Comma
 {"\"a\n\",\"b\"", "\"a\x1e\",\"b\""}, //New Line
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To test that the &lt;code&gt;in&lt;/code&gt; string always results in the &lt;code&gt;out&lt;/code&gt;, I do the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;func TestSubstitute(t *testing.T) {
 f := substituteNonprintingChars(',', '"', '\n')
 for _, tt := range tests {
  out := string([]byte(apply([]byte(tt.in), f)))
  assert.Equal(t, tt.out, out, "input and output should match")
 }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;substituteNonprintingChars&lt;/code&gt; returns a function that does the conversion and &lt;code&gt;apply&lt;/code&gt; is a helper for applying that function over a &lt;code&gt;[]byte&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Slightly simplified, it looks like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;func apply(data []byte, f mapper) []byte {
 count := len(data)

 for i := 0; i &amp;lt; count; i++ {
  data[i] = f(data[i])
 }
 return data
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The second thing I want to test is that I can reverse this operation. That is, when &lt;code&gt;csvquote&lt;/code&gt; is run with &lt;code&gt;-u&lt;/code&gt;, it should always return the original input.&lt;/p&gt;

&lt;p&gt;I can test this by going in reverse from output to input:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;func TestRestore(t *testing.T) {
 f := restoreOriginalChars(',', '\n')
 for _, tt := range tests {
  in := string([]byte(apply([]byte(tt.out), f)))
  assert.Equal(t, tt.in, in, "input and output should match")
 }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;restoreOriginalChars&lt;/code&gt; is the function that restores the string to its original form.&lt;/p&gt;

&lt;p&gt;Both these tests pass (the full source is &lt;a href="https://github.com/adamgordonbell/csvquote/blob/7f4698ad3d3c2d12f063b5d8a8bd304e8307a089/cmd/cvsquote/main_test.go"&gt;on GitHub&lt;/a&gt;). However, it‚Äôs still possible there are edge cases that work incorrectly. What I need is a way to generate more test cases.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#propertybased-testing"&gt;
  &lt;/a&gt;
  Property-Based Testing
&lt;/h2&gt;

&lt;p&gt;One way I could improve my testing is to combine the two tests. That is, rather than testing that the substituted value matches expectations and that the restored value matches expectations, I can simply test that substituting and restoring a string always results in the original string.&lt;/p&gt;

&lt;p&gt;That is for almost all possible values of the string &lt;code&gt;a&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;echo a | csvquote | csvquote -u == a
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In my go test, I can state that property like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;func doesIdentityHold(in string) bool {
 substitute := substituteNonprintingChars(',', '"', '\n')
 restore := restoreOriginalChars(',', '\n')
 substituted := apply([]byte(in), substitute)
 restored := string([]byte(apply(substituted, restore)))
 return in == restored
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That is, for a string &lt;code&gt;in&lt;/code&gt;, substituting and then restoring it should equal itself. I‚Äôm calling this &lt;code&gt;doesIdentityHold&lt;/code&gt; because an identity is any function that returns the original result. &lt;code&gt;csvquote | csvquote -u&lt;/code&gt; should be an identity.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#quick-check"&gt;
  &lt;/a&gt;
  Quick Check
&lt;/h3&gt;

&lt;p&gt;Now that we have that function, we can use &lt;code&gt;testing/quick&lt;/code&gt;, the property-based testing library, to test it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;func TestIdentity1(t *testing.T) {
 if err := quick.Check(doesIdentityHold, nil); err != nil {
  t.Error(err)
 }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;By default, this will cause &lt;code&gt;testing/quick&lt;/code&gt; to run 100 iterations of my identity test, using random strings as inputs. You can bump that up much higher, like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;func TestIdentity1(t *testing.T) {
 c := quick.Config{MaxCount: 1000000} // &amp;lt;- changed
  if err := quick.Check(doesIdentityHold, &amp;amp;c); err != nil {
  t.Error(err)
 }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And with that number of tests cases, I run into a problem:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;--- FAIL: TestIdentity1 (5.17s)
    main_test.go:43: #13072: failed on input "\x1f\U00037f8b\U000732a1\"
FAIL
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The failing test is helpfully printed. However, it‚Äôs found a problem in my testing method, not with the code under test. You see, &lt;code&gt;csvquote&lt;/code&gt; should always be able to reverse it‚Äôs input, &lt;em&gt;except in the case that the input contains the non-printable ASCII control characters&lt;/em&gt; and that is what this test case has found.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;\x1f&lt;/code&gt; may not be used much outside of traditional teletype terminals but I asked &lt;code&gt;csvquote&lt;/code&gt; to check across all possible strings, and eventually, it found a failing case.&lt;/p&gt;

&lt;p&gt;Long term, I should adjust &lt;code&gt;csvquote&lt;/code&gt; to exit with an error condition when it receives input it can‚Äôt handle, but that is a problem for another day. Instead let‚Äôs focus on constraining the input used in the tests.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#writing-a-property-testing-generator"&gt;
  &lt;/a&gt;
  Writing a Property Testing Generator
&lt;/h2&gt;

&lt;p&gt;As I‚Äôve shown above, &lt;code&gt;testing/quick&lt;/code&gt; can generate test values for testing on its own, but it‚Äôs often valuable to write your own.&lt;/p&gt;

&lt;p&gt;In this case, writing my own CSV file generator will allow me to make a couple of improvements to the test. First of all, I can remove control characters from the test set. But also, I can move to generating strings that are valid CSV files, rather than just random characters. Testing with random characters is easy, but my main concern is that &lt;code&gt;csvquote&lt;/code&gt; can handle valid CSV files, so by narrowing in on that case, I‚Äôll have a better chance of catching real-world issues.&lt;/p&gt;

&lt;p&gt;First I write a function to generate random strings of size &lt;code&gt;size&lt;/code&gt; and from the character set &lt;code&gt;alphabet&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;func RandString(r *rand.Rand, size int, alphabet string) string {
 var buffer bytes.Buffer
 for i := 0; i &amp;lt; size; i++ {
  index := r.Intn(len(alphabet))
  buffer.WriteString(string(alphabet[index]))
 }
 return buffer.String()
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It outputs what I expect:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;r := rand.Rand{}
println(RandString(&amp;amp;r, 5, "abc"))
println(RandString(&amp;amp;r, 5, "abc"))

caccb
cabbb
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then I used that to generate a CSV files with random number or lines and rows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;func randCSV(r *rand.Rand) string {
 var sb strings.Builder
 lines := r.Intn(20) + 1
 rows := r.Intn(20) + 1
 for i := 0; i &amp;lt; lines; i++ {
  for j := 0; j &amp;lt; rows; j++ {
   if j != 0 {
    sb.WriteString(`,`)
   }
   sb.WriteString(fmt.Sprintf(`"%s"`, randCSVString(r)))
  }
  sb.WriteString("\n")
 }
 return sb.String()
}

func randCSVString(r *rand.Rand) string {
 s := RandString(r, 20, "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz01233456789,\"")
 return strings.Replace(s, `"`, `""`, -1) // In CSV all double quotes must be doubled up
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here is what calling &lt;code&gt;randCSVString&lt;/code&gt; will generate:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;"7IWvdDEGTxlRdJZrc4Ra","LMHcCcN,D2RVRsfbw0IF",",LrZ3B4SvFEfG3FqO01n","""vY4FmzhbyR4iDgYpr6f","sw83uJkitIc8trzaYmEO"
"fGloXshqwC""O9Bd,eM,L","LDRajiwNgZNitCA0QL11","1Q
nqhMhzu7Mlu92qxK""8","jtj33vTlH5VP4UlbKu2e","sDhVlor4RRg4JrKfdR""W"
"EGWYmpm1TVNdB3rfmU80","Mx0RdqqVUuWiOpKY""IXk","ctprb8
7PrVu8rX8iJqTg","wnmagEjUDJrZCGBdmAYH","EJtuq1ZJqz9jf,j6vzh1"
",88Q7qWLewZVK9pE83ut","1kZJipoz2FOWLS96xMjW","5BkVvtZqZk""S2wpOB3rQ","kYN6aGPDmgSLAEI4CJtu","xOH,9y9wDDtwWUPsjgz7"
"mbexX2,Wl4""cuq3VGekP","uMXK5uLDz2ZS3Wv4wynY","KJBLt0RipsJyEqVHqrDx","glDHHs6Ujyg""piJGv595","rIa4KOxe,B""qS7EmO
nTB"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I can then hook this up to my test method:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;func TestIdentity2(t *testing.T) {
 c := quick.Config{MaxCount: 10000,
  Values: func(values []reflect.Value, r *rand.Rand) {
   values[0] = reflect.ValueOf(randCSV(r))
  }}
 if err := quick.Check(doesIdentityHold, &amp;amp;c); err != nil {
  t.Error(err)
 }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And now I can test &lt;code&gt;csvquote&lt;/code&gt; against ten thousand random CSV files in under a second.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;gt; go test
PASS
ok github.com/adamgordonbell/csvquote/cmd/cvsquote 0.635s
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I‚Äôll leave extending this to covering Unicode values and unquoted rows for another day.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#property-testing"&gt;
  &lt;/a&gt;
  Property Testing
&lt;/h3&gt;

&lt;p&gt;Property-based testing is a powerful technique for testing your code. As you can see from this real-world but somewhat contrived scenario, it moves the work of testing away from specific test cases and towards validating properties that hold for all values. Here the property under test was that substituting and restoring are inverses of each other (and therefore form an identity).&lt;/p&gt;

&lt;p&gt;For me, the most challenging part of property-based testing is seeing how I can transform a specific test-case into a testable property. It‚Äôs not always immediately clear what‚Äôs possible to test in this manner and some tests are simply hard to state in this form. But when a problem is well suited for property-based testing, it is a powerful tool!&lt;/p&gt;

&lt;p&gt;( The second most challenging thing about property-based testing is writing generators for your problem domain. Although once written, they make testing in this style feel quite natural. )&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#more-resources"&gt;
  &lt;/a&gt;
  More Resources
&lt;/h2&gt;

&lt;p&gt;The hardest part of this style of testing is seeing where and how it can apply. The places I‚Äôve found it valuable include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Verifying serialization and deserialization code&lt;/li&gt;
&lt;li&gt;Verifying an optimization (by comparing the results to the un-optimized version)&lt;/li&gt;
&lt;li&gt;Anywhere I have more than one representation of some data and need to test the boundaries of those representations.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;But others have found more ways to use this paradigm. If you want to learn more about property-based testing, then &lt;a href="https://github.com/leanovate/gopter"&gt;&lt;code&gt;gopter&lt;/code&gt;&lt;/a&gt;, &lt;em&gt;the GOlang Property TestER&lt;/em&gt;, is worth taking a look at. &lt;a href="https://github.com/amir"&gt;Amir Saeid&lt;/a&gt;, who‚Äôs good at this technique, recommends this &lt;a href="https://leanpub.com/property-based-testing-in-a-screencast-editor"&gt;book&lt;/a&gt; full of examples, and &lt;a href="https://jacobstanley.io/how-to-use-hedgehog-to-test-a-real-world-large-scale-stateful-app/"&gt;this blog&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you have any tips or suggested resources for property-based testing, please let me know on Twitter (&lt;a href="https://twitter.com/adamgordonbell/"&gt;@adamgordonbell&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;And if you care about reliable software, take a look at &lt;a href="https://earthly.dev/"&gt;Earthly&lt;/a&gt;. Earthly makes continuous integration less flakey and works with your existing workflow.&lt;/p&gt;

</description>
      <category>go</category>
      <category>testing</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Core Concepts of React</title>
      <author>TanvirFahimBD</author>
      <pubDate>Wed, 12 Jan 2022 15:52:04 +0000</pubDate>
      <link>https://dev.to/tanvirfahimbd/core-concepts-of-react-33ng</link>
      <guid>https://dev.to/tanvirfahimbd/core-concepts-of-react-33ng</guid>
      <description>&lt;p&gt;&lt;strong&gt;JSX&lt;/strong&gt;: In React JSX is the syntactic sugar of javascript. Where it looks like HTML syntax but actually it‚Äôs not the HTML. Under the hood, it used babel to convert HTML syntax into javascript.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MYkVjgR5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/03crarz1ytvp1w4mx0zi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MYkVjgR5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/03crarz1ytvp1w4mx0zi.png" alt="Image description" width="880" height="304"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;State&lt;/strong&gt;: In react, the state is used to keep the component updated after any changes are applied and update it. The state is managed by the component when anything changes on the component.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LhESIQfK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nk5rgwnbf0nix3xc48mo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LhESIQfK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nk5rgwnbf0nix3xc48mo.png" alt="Image description" width="880" height="543"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here setCount updates the count and it is maintained by useState hook.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Props&lt;/strong&gt;: Props are the value of the component which is not maintained by the component itself rather it shows in the component or is passed to another component.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LhESIQfK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nk5rgwnbf0nix3xc48mo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LhESIQfK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nk5rgwnbf0nix3xc48mo.png" alt="Image description" width="880" height="543"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here, the count is the props that are used in the component using JSX.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Hooks&lt;/strong&gt;: Hooks are the function that is used in react to maintain or make it easier to update the state or give different functionality to make an entire application easily with it. It is used in the functional components. useState, useEffect, useParams, useRef, useLocation, useHistory, useRouteMatch, useContext are some of the commonly used hooks. There are also custom hooks available that take hooks use case to the next level like logic and view shareable like props in custom hooks.&lt;/p&gt;

&lt;p&gt;useState: useState update the state value if any change is applied. The updated state is then used for the component.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LhESIQfK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nk5rgwnbf0nix3xc48mo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LhESIQfK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nk5rgwnbf0nix3xc48mo.png" alt="Image description" width="880" height="543"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;useEffect&lt;/strong&gt;: If any types of side effects are applied frequently in this case useEffect is applied. Appling dependency on useEffect hook we can frequently update the specific state rather than updating the whole state.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JLfr9xK6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pxgt7uiz33xgovrboup8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JLfr9xK6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pxgt7uiz33xgovrboup8.png" alt="Image description" width="880" height="305"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;useContext&lt;/strong&gt;: useContext is used to make props passing highly easier. When props drilling become much complex the useContext makes props pass simple and organized way from the root. Where any component can use any exported props easily throw it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zHRl4XIe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9n7lu27a1wfhfen6ef2z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zHRl4XIe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9n7lu27a1wfhfen6ef2z.png" alt="Image description" width="880" height="262"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;useParams&lt;/strong&gt;: Depending on route dynamic id matching it matches and goes to the route and shows the component.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vO9bNYpU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yku6bebbxf3akkln78v8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vO9bNYpU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yku6bebbxf3akkln78v8.png" alt="Image description" width="880" height="410"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;useLocation&lt;/strong&gt;: To work with query string parameters useLocation is generally used. It mainly gets pathname or state&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---UDndXqn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6mzim6u4eenk4f6ni4y6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---UDndXqn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6mzim6u4eenk4f6ni4y6.png" alt="Image description" width="880" height="410"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;useHistory&lt;/strong&gt;: It is used to navigate the location from and pass to the new location using push. Other tasks are also applied depending on history action.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--N-L9b243--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/df45dnljlu8y2ibtygj5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--N-L9b243--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/df45dnljlu8y2ibtygj5.png" alt="Image description" width="880" height="305"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;useRouteMatch&lt;/strong&gt;: If any match the object find then access is provided by useRouteMatch. Depending on route match it provides the component.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;useRef&lt;/strong&gt;: It returns an object. Depending on the current value it updates the state.&lt;/p&gt;

</description>
      <category>react</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>How To SSH Your ECS Server(Running Fargate)</title>
      <author>Lei Feng</author>
      <pubDate>Wed, 12 Jan 2022 15:38:30 +0000</pubDate>
      <link>https://dev.to/leifengflying/how-to-ssh-your-ecs-serverrunning-fargate-4587</link>
      <guid>https://dev.to/leifengflying/how-to-ssh-your-ecs-serverrunning-fargate-4587</guid>
      <description>&lt;h1&gt;
  &lt;a href="#1install-acli-v2"&gt;
  &lt;/a&gt;
  &lt;a href="#1"&gt;1.Install ACLI V2&lt;/a&gt;
&lt;/h1&gt;

&lt;h1&gt;
  &lt;a href="#2install-and-run-docker-on-ec2"&gt;
  &lt;/a&gt;
  &lt;a href="#2"&gt;2.Install and Run Docker On EC2&lt;/a&gt;
&lt;/h1&gt;

&lt;h1&gt;
  &lt;a href="#3use-ecr-create-repository"&gt;
  &lt;/a&gt;
  &lt;a href="#3"&gt;3.Use ECR create repository&lt;/a&gt;
&lt;/h1&gt;

&lt;h1&gt;
  &lt;a href="#4attach-iam-role-to-ec2"&gt;
  &lt;/a&gt;
  &lt;a href="#4"&gt;4.Attach IAM Role To EC2&lt;/a&gt;
&lt;/h1&gt;

&lt;h1&gt;
  &lt;a href="#5build-and-push-image-to-repository"&gt;
  &lt;/a&gt;
  &lt;a href="#5"&gt;5.Build and Push Image to Repository&lt;/a&gt;
&lt;/h1&gt;

&lt;h1&gt;
  &lt;a href="#6create-ecs-task-definition"&gt;
  &lt;/a&gt;
  &lt;a href="#6"&gt;6.Create ECS Task Definition&lt;/a&gt;
&lt;/h1&gt;

&lt;h1&gt;
  &lt;a href="#7create-cluster"&gt;
  &lt;/a&gt;
  &lt;a href="#7"&gt;7.Create Cluster&lt;/a&gt;
&lt;/h1&gt;

&lt;h1&gt;
  &lt;a href="#8create-service"&gt;
  &lt;/a&gt;
  &lt;a href="#8"&gt;8.Create Service&lt;/a&gt;
&lt;/h1&gt;

&lt;h1&gt;
  &lt;a href="#9use-ssh-tool-connect-your-container"&gt;
  &lt;/a&gt;
  &lt;a href="#9"&gt;9.Use SSH Tool connect your container&lt;/a&gt;
&lt;/h1&gt;

&lt;h2 id="1"&gt;1.Install ACLI V2 On Ami-2&lt;/h2&gt;

&lt;p&gt;In here,I use Amazon Linux 2, t3.micro instance type.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zxp87-xq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/81pft0xoa0r89hoks191.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zxp87-xq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/81pft0xoa0r89hoks191.png" alt="Image description" width="880" height="245"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;First,We need give the instance right IAM Role&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3-YYopTq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nxx7bsi71q1aimqpnodb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3-YYopTq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nxx7bsi71q1aimqpnodb.png" alt="Image description" width="880" height="323"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Install ACLI V2,I will put the code&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;rm -rf /bin/aws
rm -rf /bin/aws*
curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
unzip awscliv2.zip
sudo ./aws/install
ln -s /usr/local/bin/aws /bin/aws

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---XUvv2GO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xmtwqlreo80fsp6fm4fj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---XUvv2GO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xmtwqlreo80fsp6fm4fj.png" alt="Image description" width="880" height="119"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[root@ip-172-31-43-69 ~]# yum install docker &amp;amp;&amp;amp; systemctl start docker
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sAyyJFZX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xwkknrdgze3hn1vo5yo1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sAyyJFZX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xwkknrdgze3hn1vo5yo1.png" alt="Image description" width="880" height="277"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id="3"&gt;Use ECR create repository&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JQnt-mBr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4o1id8d4n5ynxcg7ibc1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JQnt-mBr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4o1id8d4n5ynxcg7ibc1.png" alt="Image description" width="880" height="242"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id="4"&gt;Attach IAM Role To EC2&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://docs.amazonaws.cn/en_us/AmazonECR/latest/userguide/registry-permissions-create.html"&gt;https://docs.amazonaws.cn/en_us/AmazonECR/latest/userguide/registry-permissions-create.html&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PvBBGCUP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l3weecswiqbo0z2b790z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PvBBGCUP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l3weecswiqbo0z2b790z.png" alt="Image description" width="880" height="292"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id="5"&gt;Build and Push Image to Repository&lt;/h2&gt;

&lt;h3&gt;1.Write Dockerfile&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;FROM centos:7

RUN yum install -y openssh-server sudo
RUN sed -i 's/UsePAM yes/UsePAM no/g' /etc/ssh/sshd_config 
RUN useradd admin  
RUN echo "admin:123456" | chpasswd
RUN echo "admin   ALL=(ALL)       ALL" &amp;gt;&amp;gt; /etc/sudoers 

RUN ssh-keygen -t dsa -f /etc/ssh/ssh_host_dsa_key
RUN ssh-keygen -t rsa -f /etc/ssh/ssh_host_rsa_key

RUN mkdir /var/run/sshd
EXPOSE 22
CMD ["/usr/sbin/sshd", "-D"]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;2.Build Image&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[root@ip-172-31-43-69 ~]# docker build -t sshd .
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KAPNV4Nz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p452clp1etpj627x0q83.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KAPNV4Nz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p452clp1etpj627x0q83.png" alt="Image description" width="644" height="125"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;3.Tag and Push Image&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;aws ecr get-login-password --region region | docker login --username AWS --password-stdin aws_account_id.dkr.ecr.region.amazonaws.com
docker tag sshd:latest aws_account_id.dkr.ecr.region.amazonaws.com/sshd:latest
docker push aws_account_id.dkr.ecr.region.amazonaws.com/sshd:latest
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tA5t3wqv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tm9446iu7y010ovqrauj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tA5t3wqv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tm9446iu7y010ovqrauj.png" alt="Image description" width="880" height="253"&gt;&lt;/a&gt;&lt;br&gt;
 &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AfF_hFtJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/slqv4fl5d8opyxk5l2py.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AfF_hFtJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/slqv4fl5d8opyxk5l2py.png" alt="Image description" width="880" height="236"&gt;&lt;/a&gt;&lt;br&gt;
 &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Vb31ssWS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k5ad541y5y2qep0pm94e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Vb31ssWS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k5ad541y5y2qep0pm94e.png" alt="Image description" width="880" height="257"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id="6"&gt;Create Fargate Task Definitions(I put my json code)&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#noticereplace-the-capital-letter-identification-part"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Notice:Replace the capital letter identification part&lt;/strong&gt;
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
  "ipcMode": null,
  "executionRoleArn": "YOUR_EXEC_ROLE_ARN": [
    {
      "dnsSearchDomains": null,
      "environmentFiles": null,
      "logConfiguration": {
        "logDriver": "awslogs",
        "secretOptions": null,
        "options": {
          "awslogs-group": "/ecs/sshd_task",
          "awslogs-region": "YOUR_REGION",
          "awslogs-stream-prefix": "ecs"
        }
      },
      "entryPoint": null,
      "portMappings": [
        {
          "hostPort": 22,
          "protocol": "tcp",
          "containerPort": 22
        }
      ],
      "command": null,
      "linuxParameters": null,
      "cpu": 0,
      "environment": [],
      "resourceRequirements": null,
      "ulimits": null,
      "dnsServers": null,
      "mountPoints": [],
      "workingDirectory": null,
      "secrets": null,
      "dockerSecurityOptions": null,
      "memory": null,
      "memoryReservation": 2048,
      "volumesFrom": [],
      "stopTimeout": null,
      "image": "YOU_CREATE_IMG_URL",
      "startTimeout": null,
      "firelensConfiguration": null,
      "dependsOn": null,
      "disableNetworking": null,
      "interactive": null,
      "healthCheck": null,
      "essential": true,
      "links": null,
      "hostname": null,
      "extraHosts": null,
      "pseudoTerminal": null,
      "user": null,
      "readonlyRootFilesystem": null,
      "dockerLabels": null,
      "systemControls": null,
      "privileged": null,
      "name": "sshd_container"
    }
  ],
  "placementConstraints": [],
  "memory": "2048",
  "taskRoleArn": "USE_YOURSELF_TASK_ROLE",
  "compatibilities": [
    "EC2",
    "FARGATE"
  ],
  "taskDefinitionArn": "USE_YOURSELF_ARN",
  "family": "sshd_task",
  "requiresAttributes": [
    {
      "targetId": null,
      "targetType": null,
      "value": null,
      "name": "com.amazonaws.ecs.capability.logging-driver.awslogs"
    },
    {
      "targetId": null,
      "targetType": null,
      "value": null,
      "name": "ecs.capability.execution-role-awslogs"
    },
    {
      "targetId": null,
      "targetType": null,
      "value": null,
      "name": "com.amazonaws.ecs.capability.ecr-auth"
    },
    {
      "targetId": null,
      "targetType": null,
      "value": null,
      "name": "com.amazonaws.ecs.capability.docker-remote-api.1.19"
    },
    {
      "targetId": null,
      "targetType": null,
      "value": null,
      "name": "com.amazonaws.ecs.capability.docker-remote-api.1.21"
    },
    {
      "targetId": null,
      "targetType": null,
      "value": null,
      "name": "com.amazonaws.ecs.capability.task-iam-role"
    },
    {
      "targetId": null,
      "targetType": null,
      "value": null,
      "name": "ecs.capability.execution-role-ecr-pull"
    },
    {
      "targetId": null,
      "targetType": null,
      "value": null,
      "name": "com.amazonaws.ecs.capability.docker-remote-api.1.18"
    },
    {
      "targetId": null,
      "targetType": null,
      "value": null,
      "name": "ecs.capability.task-eni"
    }
  ],
  "pidMode": null,
  "requiresCompatibilities": [
    "FARGATE"
  ],
  "networkMode": "awsvpc",
  "cpu": "1024",
  "revision": 2,
  "status": "ACTIVE",
  "inferenceAccelerators": null,
  "proxyConfiguration": null,
  "volumes": []
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2 id="7"&gt;7.Create Cluster&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QdRWopLU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/va9r3tuqpedo2ldxhq7c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QdRWopLU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/va9r3tuqpedo2ldxhq7c.png" alt="Image description" width="880" height="648"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EFFzROmP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zbi032ei7aq65a0cdke7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EFFzROmP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zbi032ei7aq65a0cdke7.png" alt="Image description" width="880" height="682"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id="8"&gt;8.Create Service&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--p0bz5rsa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/chokwk702qpzpyn9xxjd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p0bz5rsa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/chokwk702qpzpyn9xxjd.png" alt="Image description" width="880" height="434"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iajqfpO6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yle8xd0usrvhvw6eyyag.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iajqfpO6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yle8xd0usrvhvw6eyyag.png" alt="Image description" width="880" height="728"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vNuardWD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/chgnxux3g7prrg3oxocf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vNuardWD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/chgnxux3g7prrg3oxocf.png" alt="Image description" width="880" height="584"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vvh0zIBG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9k871ha9832c2vsne7lo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vvh0zIBG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9k871ha9832c2vsne7lo.png" alt="Image description" width="880" height="539"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NwLOdIrs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ssufpsgouoi87z09r5cb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NwLOdIrs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ssufpsgouoi87z09r5cb.png" alt="Image description" width="880" height="457"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id="9"&gt;9.Use SSH Tool connect your container&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OP5XmHPf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0v9qn3kjczvz6nkzgx5x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OP5XmHPf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0v9qn3kjczvz6nkzgx5x.png" alt="Image description" width="672" height="189"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>aws</category>
      <category>ecs</category>
      <category>docker</category>
    </item>
    <item>
      <title>ToDo List Using NodeJS, MongoDB</title>
      <author>Aditya Narad</author>
      <pubDate>Wed, 12 Jan 2022 15:35:12 +0000</pubDate>
      <link>https://dev.to/adinarad/todo-list-using-nodejs-mongodb-2l0l</link>
      <guid>https://dev.to/adinarad/todo-list-using-nodejs-mongodb-2l0l</guid>
      <description>&lt;h3&gt;
  &lt;a href="#overview-of-my-submission"&gt;
  &lt;/a&gt;
  Overview of My Submission
&lt;/h3&gt;

&lt;p&gt;A simple &lt;strong&gt;&lt;a href="https://my-todo-list-nodejs.herokuapp.com/"&gt;To-do List&lt;/a&gt;&lt;/strong&gt; web application which allows you to keep a list of your day-to-day. You can also create custom lists by adding &lt;em&gt;/ListName&lt;/em&gt; to the URL. &lt;/p&gt;

&lt;p&gt;Application is built using NodeJS and Express framework. The persistent data is stored in a MongoDB Database hosted on MongoDB Atlas.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://my-todo-list-nodejs.herokuapp.com/"&gt;Try it out!&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#submission-category"&gt;
  &lt;/a&gt;
  Submission Category:
&lt;/h3&gt;

&lt;p&gt;Choose Your Own Adventure&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#link-to-code"&gt;
  &lt;/a&gt;
  Link to Code
&lt;/h3&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/adinarad"&gt;
        adinarad
      &lt;/a&gt; / &lt;a href="https://github.com/adinarad/Todo-List-NodeJS"&gt;
        Todo-List-NodeJS
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A ToDo Listüîñ Application built with Node.js and Express. You can create new lists by adding /ListName to the URL.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Todo List using NodeJS&lt;/h1&gt;
&lt;p&gt;A &lt;a href="https://my-todo-list-nodejs.herokuapp.com/" rel="nofollow"&gt;ToDo Listüîñ&lt;/a&gt; Application built with Node.js and Express. You can create new lists by adding &lt;em&gt;/ListName&lt;/em&gt; to the URL.&lt;/p&gt;
&lt;h2&gt;
Technologies Used&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Frontend: &lt;strong&gt;HTML, CSS, JavaScript&lt;/strong&gt; and &lt;strong&gt;EJS&lt;/strong&gt; for templating.&lt;/li&gt;
&lt;li&gt;Backend: &lt;strong&gt;Node.js&lt;/strong&gt; with &lt;strong&gt;Express&lt;/strong&gt; Framework&lt;/li&gt;
&lt;li&gt;Database: &lt;strong&gt;MongoDB&lt;/strong&gt; (hosted on MongoDB Atlas)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/adinarad/Todo-List-NodeJS"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


&lt;h3&gt;
  &lt;a href="#additional-resources-info"&gt;
  &lt;/a&gt;
  Additional Resources / Info
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Default List&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uLAUeZEl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5d3r4ksuubs7qav06ry5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uLAUeZEl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5d3r4ksuubs7qav06ry5.png" alt="Default List" width="880" height="472"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;




&lt;blockquote&gt;
&lt;p&gt;Custom List&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---wJKpktW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7uhmzn3ju4cwp9pcuwcv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---wJKpktW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7uhmzn3ju4cwp9pcuwcv.png" alt="Custom List" width="880" height="472"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>atlashackathon</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>mongodb</category>
    </item>
    <item>
      <title>bubble sort visualisation | javascript | canvas | html | css | oop
</title>
      <author>shAtud</author>
      <pubDate>Wed, 12 Jan 2022 15:34:31 +0000</pubDate>
      <link>https://dev.to/shatud/bubble-sort-visualisation-javascript-canvas-html-css-oop-2dmf</link>
      <guid>https://dev.to/shatud/bubble-sort-visualisation-javascript-canvas-html-css-oop-2dmf</guid>
      <description>&lt;p&gt;bubble sort visualisation | javascript | canvas | html | css | oop&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=wM_CFc_o2sY"&gt;https://www.youtube.com/watch?v=wM_CFc_o2sY&lt;/a&gt;&lt;br&gt;
if you liked our content subscribe ,leave a nice comment and smash the like button to help us grow ...thanks for your time&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>tutorial</category>
      <category>programming</category>
    </item>
  </channel>
</rss>
