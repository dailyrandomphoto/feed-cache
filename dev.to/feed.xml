<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Getting started with Typescript with React Hooks [2021]</title>
      <author>RiyaNegi</author>
      <pubDate>Wed, 23 Jun 2021 17:26:43 +0000</pubDate>
      <link>https://dev.to/riyanegi/getting-started-with-typescript-with-react-hooks-2021-5cfd</link>
      <guid>https://dev.to/riyanegi/getting-started-with-typescript-with-react-hooks-2021-5cfd</guid>
      <description>&lt;p&gt;&lt;strong&gt;Typescript&lt;/strong&gt; is the next big thing in the &lt;strong&gt;&lt;em&gt;Front End Development&lt;/em&gt;&lt;/strong&gt; domain and if you are looking to upgrade your skills from a junior to an intermediate frontend developer, then it is a must have skill.&lt;br&gt;
              Typescript is a a subset of javascript, so if you know javascript you are already half way there! What Typescript brings to the table is more error-free code with type checking during run time and a code which can be easily documented.&lt;/p&gt;

&lt;p&gt;This article is for developers who already know react and javascript and want to shift to typescript, so I won't be focusing on any react concepts. This is a crash course on understanding the basics of using &lt;strong&gt;Typescript with React.&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RrSFQAmc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media0.giphy.com/media/XyaQAnihoZBU3GmFPl/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RrSFQAmc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media0.giphy.com/media/XyaQAnihoZBU3GmFPl/giphy.gif" alt="random gif"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#index"&gt;
  &lt;/a&gt;
  Index
&lt;/h2&gt;

&lt;p&gt;We will be covering all the topics necessary for understanding the basics of using react with typescript.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="#info"&gt;Info&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#setup"&gt;Setup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#state"&gt;Handling State&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#props"&gt;Handling Props&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#functions"&gt;Handling Functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#events"&gt;Handling Events&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In this article we will be building a simple personal watch list that records the movies you input by taking it's name, rating and review. It looks something like.(It is a little stylised but the underlying code is basic)&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_DdU9mwF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tzharpw078z3ltq533cq.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_DdU9mwF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tzharpw078z3ltq533cq.jpg" alt="App Image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#info"&gt;
  &lt;/a&gt;
  &lt;a id="info"&gt;&lt;/a&gt;Info
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/RiyaNegi/Typescript-with-react"&gt;Github repo for the project&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://riyanegi.github.io/Typescript-with-react/"&gt;Online Demo of the Project&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#setup"&gt;
  &lt;/a&gt;
  &lt;a id="setup"&gt;&lt;/a&gt;Setup
&lt;/h2&gt;

&lt;p&gt;Let's start with initializing our project! I am naming my project typescript-with-react but you can go with anything you like. &lt;br&gt;
&lt;code&gt;npx create-react-app --template typescript typescript-with-react&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Okay now change directory to get into your project folder and proceed usually as you do with any react project.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd typescript-with-react/
code .
npm start
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Your code structure should be looking something like this&lt;br&gt;
 &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yvM2blX9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8w5e7ntt60c04ir5et59.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yvM2blX9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8w5e7ntt60c04ir5et59.png" alt="COde structure"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Notice how the files have &lt;code&gt;.ts&lt;/code&gt; or &lt;code&gt;.tsx&lt;/code&gt; extension. That denotes that those files are transpiled in typescript.&lt;br&gt;
Okay now let's get into the Typescript nitty gritty!&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#handling-state"&gt;
  &lt;/a&gt;
  &lt;a id="state"&gt;&lt;/a&gt;Handling state
&lt;/h2&gt;

&lt;p&gt;In typescript it's necessary to mention type definitions of all variables and functions and what they return. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;For handling state in react you need to first create an interface where you mention the data type of the variables. &lt;/li&gt;
&lt;li&gt;In the example below, we have created an interface called &lt;code&gt;IState&lt;/code&gt; (You can name it whatever you like). &lt;/li&gt;
&lt;li&gt;The interface &lt;code&gt;IState&lt;/code&gt; is where we will write our type definition of how we want the state variables to be, which in this case is an array of objects. To denote that we add square bracket after the type definitions. And then while using useState, add &lt;code&gt;&amp;lt;IState["form"]&amp;gt;&lt;/code&gt; which denotes that the state should be accepting values in the specified format only(IState format in this case which is taking the object 'form' as input format)
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KbcLMHVX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w817yp7opfpd5i8c1wik.jpg" alt="State image"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We have exported IState so that we can use it in another file later on.&lt;br&gt;
An alternate inline method of adding state would be as follows :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const [counter, setCounter] = useState&amp;lt;{name:string,rate:number,review?:string}[]&amp;gt;([])
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;In our case project, we want review to be an optional field while name of the movie and rating of the movie to be compulsory field. &lt;/li&gt;
&lt;li&gt;Thus for review we have done &lt;code&gt;review?:string&lt;/code&gt; where the question mark denotes the value of review could either be a string or undefined. However for &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;rate&lt;/code&gt; we have strict type definitions which won't accept anything apart from the assigned type definitions.&lt;/li&gt;
&lt;li&gt;You can add more than one type definitions to a variable in the following way:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;inputValue:number | string | null
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here the variable &lt;code&gt;inputValue&lt;/code&gt; can either be a data type of number, string or even a null value &lt;br&gt;
Note: null and undefined are not the same data types.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#handling-props"&gt;
  &lt;/a&gt;
  &lt;a id="props"&gt;&lt;/a&gt;Handling Props
&lt;/h2&gt;

&lt;p&gt;For handling props in react, both the sending and recieving side of the component should make a clear declaration of the type and number of variables or functions involved.Typescript will give an error if anything is missing either on the sending or receiving side&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;This is the sending side.
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;List form={form} /&amp;gt;
&amp;lt;Form form={form} setForm={setForm} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;From &lt;code&gt;App.tsx&lt;/code&gt; we are sending one object ie. &lt;code&gt;form&lt;/code&gt; to &lt;code&gt;List.tsx&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Let's take a look at the &lt;code&gt;List&lt;/code&gt; component's recieving side now.
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { IState as IProps } from "../App"

const List: React.FC&amp;lt;IProps&amp;gt; = ({ form }) =&amp;gt; {
...
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;List is a react functional component that accepts props. In typescript to show that we add&lt;code&gt;React.FC&amp;lt;IProps&amp;gt;&lt;/code&gt; after the &lt;code&gt;List&lt;/code&gt; component declaration.&lt;/li&gt;
&lt;li&gt;We can import the &lt;code&gt;IState&lt;/code&gt; under the alias &lt;code&gt;IProps&lt;/code&gt; since we know that the type definitions of the object &lt;code&gt;form&lt;/code&gt; are exactly the same as the &lt;code&gt;IState&lt;/code&gt; object. &lt;/li&gt;
&lt;li&gt;We can then destructure &lt;code&gt;form&lt;/code&gt; in the parameters and use it in the function component.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In the second example, from &lt;code&gt;App.tsx&lt;/code&gt; we are sending one object ie. &lt;code&gt;form&lt;/code&gt; and one function ie.&lt;code&gt;setForm&lt;/code&gt; to &lt;code&gt;Form.tsx&lt;/code&gt;&lt;br&gt;
Let's take a look at the &lt;code&gt;Form&lt;/code&gt; component's recieving side now.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NGZKzTx5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ku6td7fmh0dwob3ol48m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NGZKzTx5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ku6td7fmh0dwob3ol48m.png" alt="Form component"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see here in this component as well we imported &lt;code&gt;IState&lt;/code&gt; under the alias &lt;code&gt;Props&lt;/code&gt;, however we have made some customized changes here. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Here we created a new interface called &lt;code&gt;IProps&lt;/code&gt; that specifies the type defintion of props incoming since we had to specify the type of &lt;code&gt;setForm&lt;/code&gt;. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We mention &lt;code&gt;form: Props["form"]&lt;/code&gt; which means form should be assigned the type definition of &lt;code&gt;IState&lt;/code&gt; which is imported under the alias &lt;code&gt;Props&lt;/code&gt;&lt;br&gt;
And then similarly we will now do it for &lt;code&gt;setForm&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Protip : to know the type definitions of something you don't have a clue about, just hover over that element like this and copy the type definitions.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--G56EkbK4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fqik41c2r1jwfg27pqst.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--G56EkbK4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fqik41c2r1jwfg27pqst.jpg" alt="hover image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Since we have already declared the type definitions of props as &lt;code&gt;Props["form"]&lt;/code&gt;, we can cut short the type definition of &lt;code&gt;setForm&lt;/code&gt; and write it this way instead
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; setForm: React.Dispatch&amp;lt;React.SetStateAction&amp;lt;Props["form"]&amp;gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Then simply destructure &lt;code&gt;form&lt;/code&gt; and &lt;code&gt;setForm&lt;/code&gt; in the parameters of the &lt;code&gt;Form&lt;/code&gt; function and use it in the component.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#handling-functions"&gt;
  &lt;/a&gt;
  &lt;a id="functions"&gt;&lt;/a&gt;Handling Functions
&lt;/h2&gt;

&lt;p&gt;In react-typescript, you need to mention the type of output that function is giving.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Here in this example we have called &lt;code&gt;mapList()&lt;/code&gt; function to map through the array of list and give table row as an output, which is a JSX element.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4gu1joEn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hmce8pxggkr0he0lxiom.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4gu1joEn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hmce8pxggkr0he0lxiom.jpg" alt="function image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;To mention the output type of this function, add &lt;code&gt;: JSX.Element[]&lt;/code&gt; after the parameters, which denotes that the function is supposed to return an array of JSX elements.&lt;/li&gt;
&lt;li&gt;An interesting thing to note is that we have written a nested return statement because the first return points towards the mapping function.&lt;/li&gt;
&lt;li&gt;However we aren't supposed to return the mapping function and thus typescript would give an error if we had only one return statement since we have mentioned our return type as &lt;code&gt;JSX.Element[]&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;We did a nested return statement inside the map function so that it specifically returns a pure JSX element ie. a table row in this case.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Protip: If you aren't sure what the return type is,hover over the function to know it's return type.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Alternatively if a function isn't returning anything, mention it's null return type as &lt;code&gt;:void&lt;/code&gt; after parameters in this way :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const randomFunction = (): void =&amp;gt; {
...
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#handling-events"&gt;
  &lt;/a&gt;
  &lt;a id="events"&gt;&lt;/a&gt;Handling Events
&lt;/h2&gt;

&lt;p&gt;For handling events with react typescript we will take a look at the following DOM events called by the following JSX elements in &lt;code&gt;Form&lt;/code&gt; component:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;input className="inputBox" type='text' name="name" value={input.name} onChange={(e) =&amp;gt; handleChange(e)} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;textarea className="inputBox" name="review" value={input.review} onChange={(e) =&amp;gt; handleChange(e)}&amp;gt;&amp;lt;/textarea&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here the &lt;code&gt;input&lt;/code&gt; tag has a DOM property called &lt;code&gt;onChange&lt;/code&gt; which calls &lt;code&gt;handleChange&lt;/code&gt; when an event is triggered.&lt;br&gt;
For this we create a function which knows that it will be recieving an HTML element in parameters.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; const handleChange = (e: React.ChangeEvent&amp;lt;HTMLInputElement | HTMLTextAreaElement&amp;gt;): void =&amp;gt; {
        setInput({
            ...input,
            [e.target.name]: e.target.value
        })
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Here we are declaring that &lt;code&gt;e&lt;/code&gt; will either be of type &lt;code&gt;React.ChangeEvent&amp;lt;HTMLInputElement&amp;gt;&lt;/code&gt; which is what the &lt;code&gt;input&lt;/code&gt; tag will send. &lt;/li&gt;
&lt;li&gt;And since for the movie review field we are using a textarea tag instead of an input tag the &lt;code&gt;e&lt;/code&gt; could also be &lt;code&gt;React.ChangeEvent&amp;lt;HTMLTextAreaElement&amp;gt;&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Thus the entire type definition of &lt;code&gt;e&lt;/code&gt; can be written as &lt;code&gt;e: React.ChangeEvent&amp;lt;HTMLInputElement | HTMLTextAreaElement&amp;gt;&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;We need to add &lt;code&gt;:void&lt;/code&gt; to specify that this function won't be returning anything.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In the second example we will take a look at the &lt;code&gt;onClick&lt;/code&gt; event called by the form submit button.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;button className="button" type="submit" onClick={(e) =&amp;gt; handleClick(e)}&amp;gt;Submit&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const handleClick = (e: React.MouseEvent&amp;lt;HTMLButtonElement&amp;gt;): void =&amp;gt; {
        e.preventDefault();
        if (!input.name || !input.rate) {
            return
        }
        setForm([...form, {
            name: input.name,
            rate: parseInt(input.rate),
            review: input.review
        }])
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Similar to &lt;code&gt;handleChange&lt;/code&gt; function the &lt;code&gt;handleClick&lt;/code&gt; function takes a proper type definition of &lt;code&gt;e&lt;/code&gt; which in this case is &lt;code&gt;React.MouseEvent&amp;lt;HTMLButtonElement&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;That's it for this crash course! Hope this gives you a fair enough idea of how to use typescript in react. Keep learning and have a great day!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ViOZQTTO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.pinimg.com/originals/d2/dc/98/d2dc98de6dd20c4a34abf3ae1ee1ef49.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ViOZQTTO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.pinimg.com/originals/d2/dc/98/d2dc98de6dd20c4a34abf3ae1ee1ef49.gif" alt="happy gif"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>typescript</category>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Build a Twitter Reaction Counter Using FaunaDB, Netlify and the Nuxt framework.</title>
      <author>uma victor</author>
      <pubDate>Wed, 23 Jun 2021 17:25:55 +0000</pubDate>
      <link>https://dev.to/umavictor6/build-a-twitter-reaction-counter-using-faunadb-netlify-and-the-nuxt-framework-3mc1</link>
      <guid>https://dev.to/umavictor6/build-a-twitter-reaction-counter-using-faunadb-netlify-and-the-nuxt-framework-3mc1</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Fauna is at the peak of serverless databases and providing scalable and secure infrastructure to organizations and individuals with easy integration with various frameworks. This article will build a Twitter counter with Fauna, Netlify, and the Nuxt framework. I used Fauna as my serverless database of choice because of its high scalability and consistency.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#audience"&gt;
  &lt;/a&gt;
  Audience
&lt;/h2&gt;

&lt;p&gt;This article will be easier to follow if you have intermediate Vue.js/Nuxt.js knowledge. You should also know how to deploy a Nuxt project on Netlify.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#goals"&gt;
  &lt;/a&gt;
  Goals
&lt;/h2&gt;

&lt;p&gt;After reading this article, you will know how to use a serverless database like Fauna with a Nuxt jamstack site to create a twitter counter .&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-we-need"&gt;
  &lt;/a&gt;
  What We Need
&lt;/h2&gt;

&lt;p&gt;The purpose of this tutorial is to implement a kind of Twitter reaction counter in a blog post. I will be using the personal portfolio website I quickly built as a reference during this tutorial. In the next paragraph, we will set up Netlify and Fauna. We will be using the Nuxt content module as our content management system to write our blog posts and the blog slug to identify the blog post and properly route each article. Slug will be of great use as we implement the reaction system.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setup-project"&gt;
  &lt;/a&gt;
  Set-up Project
&lt;/h2&gt;

&lt;p&gt;First, we will set up a Fauna account. To start, navigate to their official site, create an account with them &lt;a href="https://dashboard.fauna.com/accounts/register"&gt;(here)&lt;/a&gt;, and then log into the account and create our database for the project. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--USyQlggs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_B53A232721A6E3CA9ACE240FD32EFB00EDC78C7EC34DE5BE0C32C02304FF9A8D_1623100173379_createDB.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--USyQlggs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_B53A232721A6E3CA9ACE240FD32EFB00EDC78C7EC34DE5BE0C32C02304FF9A8D_1623100173379_createDB.png" alt="Create Database"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We need a way to store the reaction counter for the articles in our blogs, so we add a collection in our new database to do this.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WazVQDhz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_B53A232721A6E3CA9ACE240FD32EFB00EDC78C7EC34DE5BE0C32C02304FF9A8D_1623100792260_collection.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WazVQDhz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_B53A232721A6E3CA9ACE240FD32EFB00EDC78C7EC34DE5BE0C32C02304FF9A8D_1623100792260_collection.png" alt="collection"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Create an index that allows for easy organization and retrieval of documents by attributes according to their queried way&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CmccB19c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_B53A232721A6E3CA9ACE240FD32EFB00EDC78C7EC34DE5BE0C32C02304FF9A8D_1623151523716_myindex.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CmccB19c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_B53A232721A6E3CA9ACE240FD32EFB00EDC78C7EC34DE5BE0C32C02304FF9A8D_1623151523716_myindex.png" alt="add  index"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;From the image above, we create an index named “reaction_count” under the reactions collection created to use as the source collection. In the terms field, we have added data.slug as one of the terms that can be searched.&lt;/p&gt;

&lt;p&gt;Using our Fauna configuration, we generate our Fauna API key that we can use in our Nuxt application to query our &lt;code&gt;reaction_counter_database&lt;/code&gt; successfully. To do this, we go to the dashboard and click on the security section to generate the API.&lt;br&gt;
  When we generate the API, we have to store it somewhere safe, like our environment variable file as &lt;code&gt;YOUR_FAUNA_SECRET_KEY&lt;/code&gt;, so that it cannot be accessed by a third party.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#installing-fauna-in-our-nuxt-app"&gt;
  &lt;/a&gt;
  Installing Fauna in our Nuxt App
&lt;/h2&gt;

&lt;p&gt;Now we can set up Fauna in our Nuxt application, by installing the fauna package.&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install --save faunadb 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;When setting up my Nuxt project, i had already selected the &lt;code&gt;@nuxtjs/axios&lt;/code&gt; plugin in making API request, so keep this in mind. You can manually install it by running:&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install @nuxtjs/axios
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Also, in your Nuxt config file you can add in the modules&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;export default {
  modules: ['@nuxtjs/axios']
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;In the &lt;code&gt;.env&lt;/code&gt; file created at the root of our application, we set our fauna API key&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;YOUR_FAUNA_SECRET_KEY = THE_KEY
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;We want to be able to to test our app in development so we set configuration for the local and development deployment link like this in our Nuxt config file&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;        publicRuntimeConfig: {
            axios: {
              baseURL: process.env.NODE_ENV === 'production' ? process.env.BASE_URL || 'http://localhost:8000/' : 'http://localhost:8000/',
            }
          },
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now if we run the app locally we have it running at port &lt;code&gt;8000&lt;/code&gt; , this is to avoid any errors when running our serverless function&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#securing-faunas-secret-key-on-netlify"&gt;
  &lt;/a&gt;
  Securing Fauna's Secret Key on Netlify
&lt;/h2&gt;

&lt;p&gt;We want to hide our Fauna API secret from prying eyes. Use of Netlify functions to protect your Fauna API secret. Netlify functions, based on AWS lambda, give you powerful abilities when building serverless functions allowing you to auto-scale your projects. In simple terms, they are functions that run on the server. To do this, you can visit Netlify and add the environmental variables we defined earlier.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UqLZ1fs6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_B53A232721A6E3CA9ACE240FD32EFB00EDC78C7EC34DE5BE0C32C02304FF9A8D_1623186581375_faunasecret.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UqLZ1fs6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_B53A232721A6E3CA9ACE240FD32EFB00EDC78C7EC34DE5BE0C32C02304FF9A8D_1623186581375_faunasecret.png" alt="API key"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We store our Fauna secret key here to query our Fauna database when we deploy successfully. After setting up Netlify, Fauna, and Nuxt, we can dive into writing code. &lt;em&gt;Yayy!!&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#writing-our-fauna-functions"&gt;
  &lt;/a&gt;
  Writing our Fauna Functions
&lt;/h2&gt;

&lt;p&gt;When our page loads, we want to fetch all the reactions on our blog and want to be able to increase the reaction count. The Fauna functions are what we will focus on implementing for now.&lt;br&gt;
Write a function that allows us to fetch our reaction counter, but first, create a functions folder at the root of our Nuxt project, and in this folder, we create a fetch_reactions.js file to write our fetch reaction functions.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Note&lt;/em&gt;&lt;/strong&gt;&lt;em&gt;: Once deployed, Netlify automatically locates the functions folder where all our serverless functions are located.&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
    const faunadb = require('faunadb');
    exports.handler = async (event) =&amp;gt; {
      const q = faunadb.query;
      const client = new faunadb.Client({
        secret: process.env.YOUR_FAUNA_SECRET_KEY,
      });
      const { slug } = event.queryStringParameters;
      if (!slug) {
        return {
          statusCode: 400,
          body: JSON.stringify({
            message: 'Blog slug not available',
          }),
        };
      }
      const doesDocExist = await client.query(
        q.Exists(q.Match(q.Index('reaction_count'), slug))
      );
      if (!doesDocExist) {
        await client.query(
          q.Create(q.Collection('reactions'), {
            data: { slug: slug, reactions: 1 },
          })
        );
      }
      const document = await client.query(
        q.Get(q.Match(q.Index('reaction_count'), slug))
      );
      return {
        statusCode: 200,
        body: JSON.stringify({
          reactions: document.data.reactions,
        }),
      };
    };
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Several things are going on above; we initialized Fauna and set up the Fauna client with our secret password. We check if the bog slug is provided as a query parameter, If it isn't, we return a status code of 400. After doing this, we check if the Fauna document that we created exists. If it does not exist, we create a new document with our reaction collection, and set the initial reaction count to &lt;code&gt;1&lt;/code&gt; using our slug as a unique identifier. We send a query for the reaction_count index we created and retrieve our reactions and return the reaction count of the blog.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#increase-reaction-count-function"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Increase Reaction Count Function&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;The primary purpose of this function is to increment the reaction count in our blog post. As we will see below, it is almost the same as the fetch reaction function. The difference is that we are increasing the reaction count. &lt;br&gt;
&lt;strong&gt;&lt;em&gt;Note&lt;/em&gt;&lt;/strong&gt;&lt;em&gt;: This function is the function that will be called when a reader on the blog post clicks the reaction button.&lt;/em&gt;&lt;br&gt;
To do this, we create a new file in our functions folder called increment_reactions.js and paste the code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    const faunadb = require('faunadb');
    exports.handler = async (event) =&amp;gt; {
      const q = faunadb.query;
      const client = new faunadb.Client({
        secret: process.env.YOUR_FAUNA_SECRET_KEY,
      });
      const { slug } = event.queryStringParameters;
      if (!slug) {
        return {
          statusCode: 400,
          body: JSON.stringify({
            message: 'Blog slug not available',
          }),
        };
      }
      const doesDocExist = await client.query(
        q.Exists(q.Match(q.Index('reaction_count'), slug))
      );

      if (!doesDocExist) {
        await client.query(
          q.Create(q.Collection('reactions'), {
            data: { slug: slug, reactions: 1 },
          })
        );
      }
      const document = await client.query(
        q.Get(q.Match(q.Index('reaction_count'), slug))
      );
      await client.query(
        q.Update(document.ref, {
          data: {
            reactions: document.data.reactions + 1,
          },
        })
      );
      const updatedDocument = await client.query(
        q.Get(q.Match(q.Index('reaction_count'), slug))
      );
      return {
        statusCode: 200,
        body: JSON.stringify({
          reactions: updatedDocument.data.reactions,
        }),
      };
    };
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After we query our database, we increment the reaction counter by &lt;code&gt;1&lt;/code&gt; by running an update in our database.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-our-functions-in-our-nuxt-app"&gt;
  &lt;/a&gt;
  Using Our Functions In Our Nuxt App
&lt;/h2&gt;

&lt;p&gt;Using the functions we created earlier, we will create a Twitter love reaction button using SVG and assign a click event. When we click on the love reaction, a function runs that accesses our serverless functions that fetch and increment the love reaction.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Note:&lt;/em&gt;&lt;/strong&gt;  &lt;em&gt;When we deploy our application, our functions can be located at .netlify/functions/OUR_FUNCTION_NAME&lt;/em&gt;&lt;br&gt;
In our component folder in our application, we will create a TwitterReaction.vue component where we will house our love reaction and button.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
    // TwitterReaction.vue
    &amp;lt;template&amp;gt;
        &amp;lt;div&amp;gt;
            &amp;lt;button @click="addReaction" class="focus:outline-none"&amp;gt;
                {{ initialReaction }}
                &amp;lt;svg
                    class="w-6 h-6"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                    xmlns="http://www.w3.org/2000/svg"
                &amp;gt;
                    &amp;lt;path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="2"
                        d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z"
                    &amp;gt;&amp;lt;/path&amp;gt;
                &amp;lt;/svg&amp;gt;
            &amp;lt;/button&amp;gt;
        &amp;lt;/div&amp;gt;
    &amp;lt;/template&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can see above that we have addReaction function that runs when we click the button. The following function below runs in our script:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
    // TwitterReaction.vue
    &amp;lt;script&amp;gt;
    export default {
        data() {
            return {
                initialReaction: null
            }
        },
        async fetch() {
            const { data } = await this.$axios.get(
                `/.netlify/functions/fetch_reactions?slug=${this.$route.params.slug}`
            )
            this.initialReaction = data.reactions
        },
        fetchOnServer: false,
        methods: {
            addReaction() {
                this.initialReaction++
                this.incrementLikes()
            },
            async incrementLikes() {
                await this.$axios.post(
                    `/.netlify/functions/increment_reactions?slug=${this.$route.params.slug}`
                )
            }
        }
    }
    &amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What happens above is we set up a reactive reaction counter &lt;code&gt;initialReaction&lt;/code&gt;, and using the fetch_reactions functions we fetch the reactions and set it to our &lt;code&gt;initialReaction&lt;/code&gt;. Since we are using static mode, we set &lt;code&gt;fetchOnServer&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; to ensure the fetch hook is called whenever our component is mounted.&lt;br&gt;
Then whenever a reader clicks on the reaction button, we run the &lt;code&gt;addReaction&lt;/code&gt; method, which increments our reaction count.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Conclusion&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Yayy!&lt;/em&gt; We have finally come to the end of the tutorial. In this tutorial, we learned how to use a serverless database in a jamstack site, we also looked at setting up Netlify and hiding API keys. In the end, we created a  “Twitter-like” reaction counter.&lt;br&gt;
If you have any questions, feel free to send me a message on &lt;a href="https://twitter.com/umavictor_"&gt;Twitter&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Resources&lt;/strong&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Read more about &lt;a href="https://www.netlify.com/products/functions/"&gt;Netlify Functions&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://docs.fauna.com/fauna/current/api/fql/indexes"&gt;Indexing&lt;/a&gt; in Fauna&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/uma-victor1/portfolio"&gt;Github Repo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>faunadb</category>
      <category>nuxt</category>
      <category>netlify</category>
    </item>
    <item>
      <title>Career Development Tips to Help You Keep Ahead of the Curve</title>
      <author>Krowser Web Services </author>
      <pubDate>Wed, 23 Jun 2021 16:56:07 +0000</pubDate>
      <link>https://dev.to/krowser/career-development-tips-to-help-you-keep-ahead-of-the-curve-2957</link>
      <guid>https://dev.to/krowser/career-development-tips-to-help-you-keep-ahead-of-the-curve-2957</guid>
      <description>&lt;p&gt;In the creative industry, everything can change in the blink of an eye – or the click of a mouse. So, how do you ensure your skills keep up with the latest technologies, trends and standards? That's the million-dollar question.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Figure out what you stink at&lt;/strong&gt;&lt;br&gt;
While this isn't groundbreaking career advice, it is important. If you have a professional weak point, fix it. Take it upon yourself to identify your skill gaps and work to fill them day in and day out. Once you correct one issue, move on to the next. As a creative professional, if you're not willing to constantly improve your skill set, you're in the wrong field. It takes passion to succeed in this industry and when you don't have it, your weaknesses become more apparent as the days wear on.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Learn something new every day&lt;/strong&gt;&lt;br&gt;
In addition to getting better at what you know, it's important to understand the things you don't. For instance, if you are a web content writer and aren't grasping why account services keeps pushing for more social content, ask them. Get the inside scoop on what the client is looking for. Not only will it help you deliver more targeted work in the next round, but it also can help you better understand the needs of future clients.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Become indispensable&lt;/strong&gt;&lt;br&gt;
Did you hear through the office grapevine that your boss is looking for a writer who is familiar with video game culture? Offer to take up the task. When you can do something that no one else on the team can, like coding or optimizing content for the Web, you have an undeniable advantage, which helps to keep your position in tact. The more of these "added benefits" you can master, the more valuable you become as an employee. The bottom line is if you want to get ahead in your career, you have to be willing to continually learn, adapt and improve.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Engage those around you&lt;/strong&gt;&lt;br&gt;
Are you a big fan of a fellow copywriter's work? Invite that person to lunch so you can pick her brain. Are you fascinated with the impressive output of a particular graphic designer? Shoot him an email and ask about his process. When you engage with other creative professionals, you open yourself up to new ways of thinking.&lt;/p&gt;

&lt;p&gt;They could share a nugget of information that completely redefines your process or alters your method of delivery. Plus, you never know when the opportunity for collaboration may arise. That's how some of the world's most lucrative companies got their start – two people throwing their ideas at one another.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Read more&lt;/strong&gt;&lt;br&gt;
Whether it's bookmarking a few blogs or picking up a new novel from your favorite author, we can all benefit from reading more. Don't limit yourself to a specific field or specialty or you'll miss out on a (literal) world full of information. As a writer, I always benefit from keeping up with the industries I'm writing for – from finance and healthcare to consumer goods and advertising. You never know when a new piece of knowledge might click to help you create a million-dollar campaign.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Maintain a good work-life balance&lt;/strong&gt;&lt;br&gt;
This one is a little harder because it's not always in your control. However, a healthy work-life balance can make all the difference between a good career and a great one. Sure, you could stay an extra hour at the office and churn out work that isn't due until tomorrow night. Or you could spend it with your family, get plenty of sleep and produce even better work the next morning.&lt;/p&gt;

&lt;p&gt;Too many of us have come to believe that "the brass" favor workaholics. However, I've come to find that many managers prefer individuals who keep work in check because employees who enjoy a life outside the office are often happier and more creative.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Be yourself, always&lt;/strong&gt;&lt;br&gt;
No matter what field you work in or what job title you have, you should always be yourself. The minute you start pretending to be something you're not is when your career development begins to descend. In most cases, a company hires you because they like your work and enjoy your personality. So don't feel pressure to be someone you're not. A strong work ethic and a good personality and eagerness to learn will often transcend any shortcomings you may have.&lt;/p&gt;

</description>
      <category>career</category>
      <category>productivity</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Simple Calculator using Vue and Bootstrap 5</title>
      <author>Carol Skelly</author>
      <pubDate>Wed, 23 Jun 2021 16:51:37 +0000</pubDate>
      <link>https://dev.to/codeply/simple-calculator-using-vue-bootstrap-5-27bn</link>
      <guid>https://dev.to/codeply/simple-calculator-using-vue-bootstrap-5-27bn</guid>
      <description>

&lt;p&gt;&lt;strong&gt;The HTML Markup&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Bootstrap 5 provides all the UI styling and responsive behavior. It's a great fit with Vue now that it's no longer dependent on jQuery. The &lt;a href="https://getbootstrap.com/docs/5.0/layout/grid/"&gt;Bootstrap grid&lt;/a&gt; &lt;code&gt;row&lt;/code&gt; &amp;amp; &lt;code&gt;col-*&lt;/code&gt; are used to responsively change the calculator width as screen size changes.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"row"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"col-xxl-2 col-lg-3 col-md-4 col-sm-6 mx-auto bg-dark rounded-3 shadow-sm p-3"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"form-control form-control-lg text-success"&lt;/span&gt; &lt;span class="na"&gt;v-model=&lt;/span&gt;&lt;span class="s"&gt;"calculator.displayValue"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="c"&gt;&amp;lt;!-- calculator number pad using grid --&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"row g-0 text-center mt-2"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"col-auto text-white"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"row g-1 g-lg-1"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;v-for=&lt;/span&gt;&lt;span class="s"&gt;"(key,i) in keypad"&lt;/span&gt; &lt;span class="na"&gt;:key=&lt;/span&gt;&lt;span class="s"&gt;"i"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"ms-auto col-3 py-2"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                            &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"btn btn-dark text-warning w-100"&lt;/span&gt; &lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="na"&gt;click=&lt;/span&gt;&lt;span class="s"&gt;"processKey(key.value)"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;{{ key.label }}&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"col-12 pt-2"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                            &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"btn btn-dark border-secondary btn-lg text-warning w-100 fw-bold lead"&lt;/span&gt; &lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="na"&gt;click=&lt;/span&gt;&lt;span class="s"&gt;"processKey('=')"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;=&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"col-12"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                            &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;v-if=&lt;/span&gt;&lt;span class="s"&gt;"errValue"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"alert alert-warning p-2 text-truncate small"&lt;/span&gt; &lt;span class="na"&gt;role=&lt;/span&gt;&lt;span class="s"&gt;"alert"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                              {{ errValue }}
                            &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AousKknz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d7rxqam8wr064qte264t.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AousKknz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d7rxqam8wr064qte264t.gif" alt="Bootstrap 5 Vue Calculator"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;The Vue App Data&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Calculator state is kept in it's own data &lt;code&gt;calculator&lt;/code&gt; object to track the &lt;code&gt;displayValue&lt;/code&gt;, &lt;code&gt;firstOperand&lt;/code&gt; and &lt;code&gt;operator&lt;/code&gt;. &lt;code&gt;waitingForSecondOperand&lt;/code&gt; let's us know when it's ready to perform a calculation.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;keypad&lt;/code&gt; array is ordered by how I wanted the keys to render as columns inside the Bootstrap &lt;code&gt;row&lt;/code&gt;...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;v-for=&lt;/span&gt;&lt;span class="s"&gt;"(key,i) in keypad"&lt;/span&gt; &lt;span class="na"&gt;:key=&lt;/span&gt;&lt;span class="s"&gt;"i"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"ms-auto col-3 py-2"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"btn btn-dark w-100"&lt;/span&gt; &lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="na"&gt;click=&lt;/span&gt;&lt;span class="s"&gt;"processKey(key.value)"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;{{ key.label }}&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;...&lt;/span&gt;
  &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;calculator&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;displayValue&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;0&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;firstOperand&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;waitingForSecondOperand&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;operator&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="na"&gt;errValue&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;keypad&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;7&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;8&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;9&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;x&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;*&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;4&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;5&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;6&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;+&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;+&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;2&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;3&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;-&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;-&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;AC&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;AC&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;0&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;label&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;&lt;strong&gt;The Vue App Methods&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Of course the calculator actually needs to &lt;em&gt;calculate&lt;/em&gt; so I define a series of methods to watch the keystrokes and perform basic math functions. Most of them should be self-explanatory. You will see that &lt;code&gt;errValue&lt;/code&gt; is used to store any errors, and resets upon keypress or clear.&lt;/p&gt;

&lt;p&gt;When a key is pressed, &lt;code&gt;processKey()&lt;/code&gt; is called to determine which key and then call the appropriate function...&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;inputDigit()&lt;/code&gt; - when any digit is clicked&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;handleOperator()&lt;/code&gt; - when any operator is clicked&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;equalPressed()&lt;/code&gt; - when the equal sign is clicked &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;inputDecimal()&lt;/code&gt; - to handle the decimal point (.)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;resetCalculator()&lt;/code&gt; - to clear the calculator ('AC')
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;...&lt;/span&gt;
  &lt;span class="nx"&gt;methods&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;processKey&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;errValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;
        &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
          &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;AC&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resetCalculator&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
          &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
          &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
          &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
          &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
          &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
          &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
          &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
          &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
          &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
          &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;inputDigit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
          &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
          &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;+&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;handleOperator&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;+&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
          &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;-&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;handleOperator&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;-&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
          &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;handleOperator&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
          &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;*&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;handleOperator&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;*&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
          &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;equalPressed&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
          &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;inputDecimal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
              &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
          &lt;span class="nl"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
              &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;errValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;KEY ERROR: in default&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="nx"&gt;equalPressed&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;firstOperand&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;displayValue&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;operator&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;calculator&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;calculator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;displayValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;calculate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;firstOperand&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;displayValue&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;operator&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;errValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="nx"&gt;inputDigit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;digit&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;displayValue&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;waitingForSecondOperand&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;calculator&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;waitingForSecondOperand&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;waitingForSecondOperand&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;calculator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;displayValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;digit&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;calculator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;waitingForSecondOperand&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;displayValue&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;calculator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;displayValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
                &lt;span class="nx"&gt;displayValue&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;0&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;digit&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;displayValue&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;digit&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="nx"&gt;inputDecimal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dot&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;displayValue&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;waitingForSecondOperand&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;calculator&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;waitingForSecondOperand&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;calculator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;displayValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;0.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;calculator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;waitingForSecondOperand&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="c1"&gt;// check for existing decimal&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;displayValue&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;calculator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;displayValue&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;dot&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="nx"&gt;handleOperator&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;nextOperator&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;firstOperand&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;displayValue&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;operator&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;waitingForSecondOperand&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;calculator&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;inputValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;parseFloat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;displayValue&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;operator&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;waitingForSecondOperand&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;calculator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;operator&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;nextOperator&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;firstOperand&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;isNaN&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;inputValue&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;calculator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;firstOperand&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;inputValue&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;operator&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;currentValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;firstOperand&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
            &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;calculate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;currentValue&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;inputValue&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;operator&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;calculator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;displayValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;calculator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;firstOperand&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;calculator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;waitingForSecondOperand&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;calculator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;operator&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;nextOperator&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="nx"&gt;calculate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;firstOperand&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;secondOperand&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;operator&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;operator&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;+&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;firstOperand&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;secondOperand&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;operator&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;-&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;firstOperand&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;secondOperand&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;operator&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;*&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;firstOperand&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;secondOperand&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;operator&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;secondOperand&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
                &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;errValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ERROR: Cannot divide by 0&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;firstOperand&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nx"&gt;secondOperand&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;secondOperand&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="nx"&gt;resetCalculator&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;calculator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;displayValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;0&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;calculator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;firstOperand&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;calculator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;waitingForSecondOperand&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;calculator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;operator&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://codeply.com/v/XhWpdMVUwB"&gt;Demo&lt;/a&gt; | &lt;a href="https://codeply.com/p/XhWpdMVUwB"&gt;Source&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;As always, you can &lt;a href="https://www.codeply.com/p?starter=Bootstrap%205"&gt;play with the latest Bootstrap 5&lt;/a&gt;, and find more handy &lt;a href="https://www.codeply.com/tagged/vue"&gt;Vue snippets and examples on Codeply&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>vue</category>
      <category>bootstrap</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Kirby</title>
      <author>Saba Alikhani</author>
      <pubDate>Wed, 23 Jun 2021 16:28:40 +0000</pubDate>
      <link>https://dev.to/fydsa/kirby-2ch3</link>
      <guid>https://dev.to/fydsa/kirby-2ch3</guid>
      <description>&lt;p&gt;Cute little Kirby using css and html&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/fydsa/embed/eYvwVKm?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>codepen</category>
      <category>css</category>
      <category>html</category>
    </item>
    <item>
      <title>Welcome Thread - v130</title>
      <author>dev.to staff</author>
      <pubDate>Wed, 23 Jun 2021 16:27:59 +0000</pubDate>
      <link>https://dev.to/thepracticaldev/welcome-thread-v130-8kd</link>
      <guid>https://dev.to/thepracticaldev/welcome-thread-v130-8kd</guid>
      <description>&lt;p&gt;&lt;a href="https://i.giphy.com/media/Jsy4fltgRzBunW9Nk9/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/Jsy4fltgRzBunW9Nk9/giphy.gif" alt="jello saying hello"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#welcome-to-dev"&gt;
  &lt;/a&gt;
  Welcome to DEV!
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Leave a comment below to introduce yourself! You can talk about what brought you here, what you're learning, or just a fun fact about yourself.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Reply to someone's comment, either with a question or just a hello. 👋 &lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Great to have you in the community!&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>welcome</category>
    </item>
    <item>
      <title>CSS Positioning</title>
      <author>Divyanshu Soni</author>
      <pubDate>Wed, 23 Jun 2021 16:16:24 +0000</pubDate>
      <link>https://dev.to/dcssoni/css-positioning-2360</link>
      <guid>https://dev.to/dcssoni/css-positioning-2360</guid>
      <description>&lt;p&gt;In this article, I'll discuss what is CSS position property, how you can use it to create a variety of styling solutions on the webpage. And of course with some use cases to practice. &lt;/p&gt;

&lt;p&gt;Let's dive in! &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#introduction-html-document-flow"&gt;
  &lt;/a&gt;
  Introduction :  HTML Document Flow
&lt;/h3&gt;

&lt;p&gt;The HTML elements in a webpage that are described higher in the HTML file will be rendered in the browser earlier than the elements that are described lower as the HTML documents are displayed on the webpage from top to bottom.&lt;/p&gt;

&lt;p&gt;The order in which the elements are displayed on a page by default is called normal flow. According to MDN :&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Elements on a webpage layout are in the normal flow, if you have not applied any CSS to change the way they behave. And, as we began to discover, you can change how elements behave either by adjusting their position in that normal flow, or removing them from it altogether. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Refer &lt;a href="https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Normal_Flow"&gt;here&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Changing the values of the &lt;code&gt;position&lt;/code&gt; property will change the flow of the document, which is a process called positioning. Let's learn different types of positioning and understand how to work with them.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#absolute-positioning"&gt;
  &lt;/a&gt;
  &lt;em&gt;Absolute Positioning&lt;/em&gt;
&lt;/h3&gt;

&lt;p&gt;This refers to positioning relative to the bounds of the parent element, out of the normal flow.&lt;/p&gt;

&lt;p&gt;Syntax:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;element {
  position: absolute;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If there is no parent element, then it is set relative to the bounds of the browser viewport. So, with absolute positioning, the browser window will act as a parent from whose borders the distance is set:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pIgRMr3---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624354764917/LNDiSeIsn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pIgRMr3---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624354764917/LNDiSeIsn.png" alt="Browser"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's consider an example, in the picture below four blocks are positioned in normal flow i.e. their position is set to static by default.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_ClKeMC---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624355989078/wW9v6MH9Y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_ClKeMC---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624355989078/wW9v6MH9Y.png" alt="Blocks in Browser"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, let's change the positioning of the element 3 to absolute.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8Nw4fiTs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codepen.io/divyanshu-soni/pen/bGqyMPK" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8Nw4fiTs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codepen.io/divyanshu-soni/pen/bGqyMPK" alt="Codepen"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What happened here?? Basically the absolute positioning pulls the element out of the normal flow and all the blocks other than the block 3 in the normal flow neatly follow each other and occupy their space on the webpage. Here block 3 rises to the absolute level and since it is not in the plane between the blocks 1, 2 and 4 they shift towards each other.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LF3eLx3A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624359075725/tQR5t2Cp7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LF3eLx3A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624359075725/tQR5t2Cp7.png" alt="Screenshot 2021-06-22 162055.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;*&lt;em&gt;So, it can be said that the absolute plane lies on the top of the static plane. Keep this feature in mind while working with Absolute positioning.&lt;br&gt;
*&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#relative-positioning"&gt;
  &lt;/a&gt;
  &lt;em&gt;Relative Positioning&lt;/em&gt;
&lt;/h3&gt;

&lt;p&gt;A relatively positioned element is set relative to its original position on the page. Here is the syntax:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;element {
  position: relative;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To see it, let's consider the same four blocks, but this time, only block 3 will be &lt;code&gt;position: relative&lt;/code&gt;, and the rest will remain in the normal flow.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--t7uwNPOL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624359928095/5FJOZaq-L.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t7uwNPOL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624359928095/5FJOZaq-L.png" alt="Block-3 Position relative"&gt;&lt;/a&gt;&lt;br&gt;
As expected, block-3 moved up by the distance that was indicated, but pay attention to the empty space where the third element had been earlier.&lt;/p&gt;

&lt;p&gt;What happened here?? The block-3 exists on the page materially (the display of other elements around this block is calculated based on the space it occupies), but it still rises to a higher plane as an absolutely positioned element would. That's why the block-3 overlapped with block-2 and block-4 stayed in the place and did not move up.&lt;/p&gt;

&lt;p&gt;What's the use of it ? &lt;br&gt;
This property of CSS allows you to move the elements on the page anywhere without breaking the layout of the site because the occupied space remains duly occupied.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#fixed-positioning"&gt;
  &lt;/a&gt;
  &lt;em&gt;Fixed Positioning&lt;/em&gt;
&lt;/h3&gt;

&lt;p&gt;Fixed positioning locks the element on the page relative to the visible part of the browser's viewport and maintains that position during vertical scrolling. Here is the syntax:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;element {
  position: fixed;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's see an example.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qRirLu4V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codepen.io/divyanshu-soni/pen/xxqNzJd%3Feditors%3D1100" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qRirLu4V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codepen.io/divyanshu-soni/pen/xxqNzJd%3Feditors%3D1100" alt="Codepen"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#sticky-positioning"&gt;
  &lt;/a&gt;
  &lt;em&gt;Sticky Positioning&lt;/em&gt;
&lt;/h3&gt;

&lt;p&gt;In terms of functionality, the element on which sticky positioning is applied, it is between fixed positioning and relative positioning. The element is positioned relatively until the page is scrolled to a certain point, after which the positioning will be fixed.&lt;/p&gt;

&lt;p&gt;Here is the syntax.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;element {
  position: sticky;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's see an example.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8EEfm1bl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codepen.io/divyanshu-soni/pen/gOmJQoY%3Feditors%3D1100" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8EEfm1bl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codepen.io/divyanshu-soni/pen/gOmJQoY%3Feditors%3D1100" alt="Codepen"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  &lt;em&gt;Conclusion&lt;/em&gt;
&lt;/h3&gt;

&lt;p&gt;Thanks to positioning, we can flexibly control the position of the elements on&lt;br&gt;
 the page. It is used to create a variety of styling solutions for page &lt;br&gt;
interfaces smoothly.&lt;/p&gt;

&lt;p&gt;That's all for now. Thank you for reading! Do share your comments here.&lt;/p&gt;

&lt;p&gt;Follow me for more such blogs and express your thoughts about the article on &lt;a href="https://twitter.com/divyanshu_soni_"&gt;Twitter&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Further Resources -&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/position"&gt;CSS Positioning on MDN&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://css-tricks.com/almanac/properties/p/position/"&gt;CSS Tricks&lt;/a&gt; &lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>css</category>
      <category>webdev</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>20 Web Monetized Projects to Inspire You</title>
      <author>Didicodes</author>
      <pubDate>Wed, 23 Jun 2021 16:07:52 +0000</pubDate>
      <link>https://dev.to/coil/20-web-monetized-projects-to-inspire-you-2k3o</link>
      <guid>https://dev.to/coil/20-web-monetized-projects-to-inspire-you-2k3o</guid>
      <description>&lt;p&gt;Until recently, the only way content creators could make money was through advertising or other business models that take advantage of a user's privacy.&lt;/p&gt;

&lt;p&gt;But with the proposed W3C &lt;a href="https://webmonetization.org/"&gt;Web Monetization API&lt;/a&gt;, creators now have a revenue model that empowers them to make money from their users without advertising, forcing them to subscribe, or invading their privacy. Amazing right? 😍&lt;/p&gt;

&lt;p&gt;There are a ton of developers across the world who are experimenting with Web Monetization. Want to see them? You are in the right place. 😀&lt;/p&gt;

&lt;p&gt;In this article, I collated a list of projects using Web Monetization to make money and offer their users exciting perks.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cinnamon"&gt;
  &lt;/a&gt;
  &lt;a href="https://cinnamon.video/"&gt;Cinnamon&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dIpibcHx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh4.googleusercontent.com/ZsSQ_YAKv-y9vFO83kwxSgxlt8vJfF3QGVTuWFLW5dMSFRq_NzJ43dabn1YOMWF2p9ojmGBl6ghVU30RXo5A1LDacp-C6FT5s7pOBXB-B0REK6VZ9WyqyBB3bh4LzpQpG1afTuUb" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dIpibcHx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh4.googleusercontent.com/ZsSQ_YAKv-y9vFO83kwxSgxlt8vJfF3QGVTuWFLW5dMSFRq_NzJ43dabn1YOMWF2p9ojmGBl6ghVU30RXo5A1LDacp-C6FT5s7pOBXB-B0REK6VZ9WyqyBB3bh4LzpQpG1afTuUb" alt="Cinnamon"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Cinnamon is a community-driven content creation platform that allows users to view and create videos while providing native cross-app sharing.&lt;/p&gt;

&lt;p&gt;It uses web monetization to allow video creators to earn from their content without bugging the viewers with unnecessary advertisements.&lt;/p&gt;

&lt;p&gt;With a fee of only $5, Cinnamon grants viewers ad-free access to all videos available on the platform. Then pays the video creators in real-time.&lt;/p&gt;

&lt;p&gt;This means that creators do not have to wait until the end of the month to be paid like traditional video streaming platforms because Cinnamon uses Web monetization to redistribute funds based on the time viewers spend on video content.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#simmer"&gt;
  &lt;/a&gt;
  &lt;a href="https://simmer.io/"&gt;Simmer&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--P1OUE7d1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/zdVy2Wy53i0gxp4E3c3HdNvlgr-QORDM5W1Woa_duNi9PgD5wpdpzsVTdtFX-aeWN8Qc99UYyVYl9iCerhihqr-aULHHB2YffwjX81fdzl0Fb805MOe_sjefz8yzyTTyG0Z9sfMh" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P1OUE7d1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/zdVy2Wy53i0gxp4E3c3HdNvlgr-QORDM5W1Woa_duNi9PgD5wpdpzsVTdtFX-aeWN8Qc99UYyVYl9iCerhihqr-aULHHB2YffwjX81fdzl0Fb805MOe_sjefz8yzyTTyG0Z9sfMh" alt="Simmer"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Simmer is a platform for Indie game developers to host their creations in the browser for free with a single drag and drop mechanism.&lt;/p&gt;

&lt;p&gt;Simmer was one of the first game portals to integrate with the Web Monetization API. Through this integration, creators can &lt;a href="https://community.webmonetization.org/erikad/how-to-create-a-payment-pointer-4joi"&gt;generate their payment pointer from Coil&lt;/a&gt;, paste it into Simmer's game editor UI to make their games monetized automatically.&lt;/p&gt;

&lt;p&gt;If you are a game developer, you should take advantage of the engaging audience on Simmer by uploading your games and making money at the same time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#twitch"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.twitch.tv"&gt;Twitch&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FlTe5F-7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/01sGuLo4CcYqqfNnntbArfBZCizL6CiwD_IuiwpFjYNqOqI8eXmC5zJ4_tLh8EC9CSyGC8UdZ-35ikVZLEUev5EhY3wkxWGRkVwd87M1jgfIFKSWArbahnrsWk91ifqrOZV1UmaE" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FlTe5F-7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/01sGuLo4CcYqqfNnntbArfBZCizL6CiwD_IuiwpFjYNqOqI8eXmC5zJ4_tLh8EC9CSyGC8UdZ-35ikVZLEUev5EhY3wkxWGRkVwd87M1jgfIFKSWArbahnrsWk91ifqrOZV1UmaE" alt="Twitch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Twitch is a live streaming service that allows users to create channels, run broadcasts, and interact with their viewers.&lt;/p&gt;

&lt;p&gt;Thanks to the automatic Web Monetization support on twitch, viewers can support their favorite Twitch Partners and Affiliates by simply watching their streams.&lt;/p&gt;

&lt;p&gt;Then Coil keeps track of how much each streamer has earned and then purchases Twitch Bits when the minimum purchase threshold is reached for that particular streamer. Pretty cool, right?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#hashnode%C2%A0"&gt;
  &lt;/a&gt;
  &lt;a href="https://hashnode.com/"&gt;Hashnode&lt;/a&gt; 
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XMJNVS3h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/8_MEeGJR2jpHAQ9YJgALbRgJuFT0YldQ2cfdjCKyaxfh_0q7QL7t8QvJ7Mb-earNgKJ6KvHf0SlRRptNhPSD-w9shsDls0lEMBMpAXQ-YcjXXP8iUVnM3CK6VRrV3FM6sGhhGhOj" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XMJNVS3h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/8_MEeGJR2jpHAQ9YJgALbRgJuFT0YldQ2cfdjCKyaxfh_0q7QL7t8QvJ7Mb-earNgKJ6KvHf0SlRRptNhPSD-w9shsDls0lEMBMpAXQ-YcjXXP8iUVnM3CK6VRrV3FM6sGhhGhOj" alt="Hashnode"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hashnode enables developers to create a blog mapped to their domain for free. So they can focus on developing and sharing content on their blogs while we take care of the rest - customization, readership, visibility, web monetization, and so much more.&lt;/p&gt;

&lt;p&gt;As a reader, you'll get access to all the tech articles for free without any ads or restrictions. On the other hand, the creators get to make money based on the amount of time any Coil subscriber spends on their blog.&lt;/p&gt;

&lt;p&gt;Web Monetization has changed a lot of things. Gone are those days where we thought the only way to make money as a blogger was through ads or adding a paywall. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#imgur-emerald"&gt;
  &lt;/a&gt;
  &lt;a href="https://imgur.com/emerald"&gt;Imgur Emerald&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hjB3q09I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/zL2HX3nid1NzzpbUA62khyiB7oqE_9q4IaOLr8JcKpJRwPWmdBpUaTL1srkHkL8BqItYbJCAVRBCbkHrrOIU-La1o2Wb4vuApatJD1y9LW_1NWF-9hHdbeslk-tW7Z1qgdq-9p09" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hjB3q09I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/zL2HX3nid1NzzpbUA62khyiB7oqE_9q4IaOLr8JcKpJRwPWmdBpUaTL1srkHkL8BqItYbJCAVRBCbkHrrOIU-La1o2Wb4vuApatJD1y9LW_1NWF-9hHdbeslk-tW7Z1qgdq-9p09" alt="Imgur Emerald"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Imgur is the easiest way to discover and enjoy the magic of the Internet. It's where you'll find the funniest, most informative, and inspiring images, memes, GIFs, and visual stories served up in an endless stream of bite-sized fun.&lt;/p&gt;

&lt;p&gt;Powered by a passionate community of people worldwide, anyone can join to share cool stuff and vote the best to the top. You'll always find something on Imgur that brightens your day. 😀&lt;/p&gt;

&lt;p&gt;Yes, Imgur uses the Web Monetization API as well. So, Coil will distribute the micropayments to the creators according to the amount of time Coil subscribers spend looking at content on Imgur.&lt;/p&gt;

&lt;p&gt;Subscribers also get access to unlimited uploads, community features, and, most importantly, an ad-free browsing experience.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#permanent"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.permanent.org/"&gt;Permanent&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wReIde9F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/_XqnQnz9nQZe-ud2PH5jxoGh_7dmDqi5vhmcBFGv7wjx53OSxzPXeAXb2EKSZ_cmiFBRAOYIudnK5sOETGzFLp0PfFO-LvrfGbMkk5ktJG1oXzIvs5CSp3vwKXVJFnqoBbYfnrPR" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wReIde9F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/_XqnQnz9nQZe-ud2PH5jxoGh_7dmDqi5vhmcBFGv7wjx53OSxzPXeAXb2EKSZ_cmiFBRAOYIudnK5sOETGzFLp0PfFO-LvrfGbMkk5ktJG1oXzIvs5CSp3vwKXVJFnqoBbYfnrPR" alt="Permanent"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Have you ever thought about your digital legacy? By digital legacy, I mean an accumulation of the different text, pictures, and videos you've posted online over the years.&lt;/p&gt;

&lt;p&gt;The truth is our digital legacy is disappearing because we've not had a central place to store it. And each time it disappears, a glimpse of who we were vanishes as well.&lt;/p&gt;

&lt;p&gt;To solve this, Permanent enables you to create, curate, and collaborate on living archives for yourself, your family, and your community.&lt;/p&gt;

&lt;p&gt;Thanks to the power of the Web Monetization API, the owners of Permanent.org are &lt;a href="https://community.webmonetization.org/storagetothepeople/storage-to-the-people-grant-report-1-4idp"&gt;prototyping and building an Open Source API&lt;/a&gt; that allows users to easily store data with a storage provider using a one-time micropayment, with no need for storage provider or frontend service accounts and financial commitments.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#she-code-africa"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.shecodeafrica.org/"&gt;She Code Africa&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yDbnKL3z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/504wiaggft1u9d7obs1h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yDbnKL3z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/504wiaggft1u9d7obs1h.png" alt="She Code Africa"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;She Code Africa is a non-profit organization focused on celebrating and empowering young girls and women in tech across Africa.&lt;/p&gt;

&lt;p&gt;They champion exceptional programs and initiatives to improve the tech skills of their members and keep the community engaged, amongst other things.&lt;/p&gt;

&lt;p&gt;She Code Africa recently integrated Web Monetization into their website as a means to earn revenue. This revenue is used to continue the fantastic work they are doing in the developer community. You should &lt;a href="//%24ilp.uphold.com/kkd4KdPQwqJM"&gt;support them&lt;/a&gt;!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#csstricks"&gt;
  &lt;/a&gt;
  &lt;a href="https://css-tricks.com/"&gt;CSS-Tricks&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JQ1zqKKb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/IqxBn6iKiqtfQksOAAbAJHfr4LcCSxRJR4zkUOLjEbPeYJ4dxaX2rtKGZmt5J4XsxUYJbafCyGfP7Qrjv45otyE3VOPuL6Jx00qkLAAKcUlsPXNApb4zedltpHXmSxoCgO37i-b6" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JQ1zqKKb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/IqxBn6iKiqtfQksOAAbAJHfr4LcCSxRJR4zkUOLjEbPeYJ4dxaX2rtKGZmt5J4XsxUYJbafCyGfP7Qrjv45otyE3VOPuL6Jx00qkLAAKcUlsPXNApb4zedltpHXmSxoCgO37i-b6" alt="CSS-Tricks"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;CSS-Tricks is one of the best websites to find insightful articles about frontend development.&lt;/p&gt;

&lt;p&gt;Keeping in mind that it is one of the best websites for frontend content, many devs worldwide have benefitted from it tremendously. Meaning that some of them may have wanted to tip the writers or tell them "thanks" financially.&lt;/p&gt;

&lt;p&gt;With Coil as CSS-Tricks web monetization provider, the website now receives micropayments from readers who have an active Coil subscription and the browser extension.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ushahidi"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.ushahidi.com/"&gt;Ushahidi&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3hMS2k73--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh4.googleusercontent.com/Nk0cjREtTGCOWdz-O0AwWw0LXJRSAdpzA8gth12C7YFCPCaeak-sanivRfo2uCvZq5d0oFq_x-FTLSYfqWhavinatamUcSTHnfAD1885SK3L_LI9lWB8cYE_6F0szQ11LPG78f9J" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3hMS2k73--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh4.googleusercontent.com/Nk0cjREtTGCOWdz-O0AwWw0LXJRSAdpzA8gth12C7YFCPCaeak-sanivRfo2uCvZq5d0oFq_x-FTLSYfqWhavinatamUcSTHnfAD1885SK3L_LI9lWB8cYE_6F0szQ11LPG78f9J" alt="Ushahidi"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ushahidi is a crowdsource-driven data platform that enables people to raise their voices, inform their decisions, and influence change in their communities.&lt;/p&gt;

&lt;p&gt;Being a non-profit, integrating web monetization on Ushahidi was an excellent way to gain revenue without running ads, especially during the pandemic. So, if any Coil user visits Ushahidi, Coil will calculate the amount of time you've spent on the website and credit the non-profit team. And most importantly, your data is safe!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#akita"&gt;
  &lt;/a&gt;
  &lt;a href="https://akitaproject.site/"&gt;Akita&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i3u8beKy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/B4dAkTIjEIRedMeJbMNbbZgULoqTWTGV6SMOor0-1W5oxNomY7hjXWQG0ahcfRB9TxBNjHeS_2rdavWU-XCm8AxtMuLu8Cw4T3Ez8WMpUL3SXr11vEFkQ8PxgfoBF2TgW5rSZY0C" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3u8beKy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/B4dAkTIjEIRedMeJbMNbbZgULoqTWTGV6SMOor0-1W5oxNomY7hjXWQG0ahcfRB9TxBNjHeS_2rdavWU-XCm8AxtMuLu8Cw4T3Ez8WMpUL3SXr11vEFkQ8PxgfoBF2TgW5rSZY0C" alt="Akita"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Akita is a free and Open Source project that displays your top-visited monetized sites, how much time you're spending on them, and how much you're contributing (or could contribute) to them.&lt;/p&gt;

&lt;p&gt;They also create diverse resources that will help you understand Web Monetization through &lt;a href="https://esse-dev.github.io/a-web-monetization-story/#page-5"&gt;storytelling&lt;/a&gt;, easy-to-use tools, and community outreach.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#puma-browser"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.pumabrowser.com/"&gt;Puma Browser&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AeJHx2F9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh4.googleusercontent.com/TvB7uF4UzfAyFljBQ5AOOnvoLFrHKijv314wz4FUy_HbuEcBFNeWTEvWD0saCT3V_JYyQe_tIKGlxcDepI5U_sa6-Y5UbReGo2_TeHbTOH9CxeWWBWMB1zm88XbXJiuyyqRgSfYx" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AeJHx2F9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh4.googleusercontent.com/TvB7uF4UzfAyFljBQ5AOOnvoLFrHKijv314wz4FUy_HbuEcBFNeWTEvWD0saCT3V_JYyQe_tIKGlxcDepI5U_sa6-Y5UbReGo2_TeHbTOH9CxeWWBWMB1zm88XbXJiuyyqRgSfYx" alt="Puma"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Puma is a new way to pay for content through a privacy-focused web browser!&lt;/p&gt;

&lt;p&gt;It provides a fast and private mobile Web3 browser that makes it easy to support creators, game &amp;amp; app developers, and charities of your choice.&lt;/p&gt;

&lt;p&gt;The platform uses Coil and the Web Monetization API to create an ad-free user experience and send payment(s) for the content directly from the browser.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#flood-escape"&gt;
  &lt;/a&gt;
  &lt;a href="https://flood.enclavegames.com/"&gt;Flood Escape&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Du2p0nx1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh4.googleusercontent.com/1XFJfrFokdLiLHO1mejqJBE1gcK0n7_P1pMyrbV47B9UWtKwaNar0GyHNKWV2o1Ap8LfB934swSQThz8pUEaJd8k_-g9uN9c0-nnV2M7MII4VKsRxubtqP7jFKUdJQxEoF_cm1vK" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Du2p0nx1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh4.googleusercontent.com/1XFJfrFokdLiLHO1mejqJBE1gcK0n7_P1pMyrbV47B9UWtKwaNar0GyHNKWV2o1Ap8LfB934swSQThz8pUEaJd8k_-g9uN9c0-nnV2M7MII4VKsRxubtqP7jFKUdJQxEoF_cm1vK" alt="Flood Escape"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Flood Escape is an action-packed rush to get out of danger!&lt;/p&gt;

&lt;p&gt;You have to build your way up to escape the flood and be rescued in time in the game. You can also customize your experience with flames, get rewarded, and have a good time. 😀&lt;/p&gt;

&lt;p&gt;Flood Escape uses web monetization to generate revenue from its game without the need for bugging users with unnecessary advertisements. They also give web monetization subscribers a bonus of 100 plus coins and a faster cooldown time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dev"&gt;
  &lt;/a&gt;
  &lt;a href="https://dev.to/"&gt;Dev&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6PvvK6K2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/_B0ufUB7NjP_DyvwqNT61C2vxhbc8mucx8Jzkyv9R9rzuYGUnm5dEiJsmcYTzkjL1xnDLkHZUQxKmTZW5J3cKNDO-WWMM6TKLhF6uNG_NFY5WOQ50pJ6cN8e1Gnrx1IAeDzPY9zg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6PvvK6K2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/_B0ufUB7NjP_DyvwqNT61C2vxhbc8mucx8Jzkyv9R9rzuYGUnm5dEiJsmcYTzkjL1xnDLkHZUQxKmTZW5J3cKNDO-WWMM6TKLhF6uNG_NFY5WOQ50pJ6cN8e1Gnrx1IAeDzPY9zg" alt="Dev"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Dev is an Open Source software that powers a community of software developers who write articles and build relationships with other developers.&lt;/p&gt;

&lt;p&gt;The platform allows individual authors to add their Coil Payment pointer to their blogs right through their settings. So, every time a Coil subscriber reads your article, micropayments will be sent to your payment wallet by Coil.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ballet-rising"&gt;
  &lt;/a&gt;
  &lt;a href="https://balletrising.com/"&gt;Ballet Rising&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CziI7pDI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/dK5EXLJNXPgzHo1Ti9GIVSHT4HyMgT52hos3maAtvLmvyojfuMigN8tTXbKstNl061x3xzx2IH0-4UXxrQgDRZr_D9PB9e920O2duP6NOCoyika5GPvufskzn_H7Y5IqNWvX4cxM" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CziI7pDI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/dK5EXLJNXPgzHo1Ti9GIVSHT4HyMgT52hos3maAtvLmvyojfuMigN8tTXbKstNl061x3xzx2IH0-4UXxrQgDRZr_D9PB9e920O2duP6NOCoyika5GPvufskzn_H7Y5IqNWvX4cxM" alt="Ballet Rising"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ballet Rising is a non-profit organization focused on the stories of people worldwide whose passion for classical ballet is redefining its culture and elevating ballet as a truly global art form.&lt;/p&gt;

&lt;p&gt;It highlights communities where there is an interest in ballet to drive and build positive relationships with local arts organizations so that the global ballet community grows in harmony with local customs.&lt;/p&gt;

&lt;p&gt;Their website is monetized using Coil. So, you can support them by signing up for a coil membership.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tech-with-catalin"&gt;
  &lt;/a&gt;
  &lt;a href="https://catalins.tech/"&gt;Tech with Catalin&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cEv9hh-s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh4.googleusercontent.com/EpBX2ilPT-Q4MtE7i-gxYV9TbYX_hf6min5ik8B5QpAHTkkGfmzkWh5kswuOfNrli5GaJlXwG2UNDqQ5QHdFjsBDKqfYwtjxNizudSVKYzOoE8TLzW29n4-x8unrFNF7ffL-h6Gv" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cEv9hh-s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh4.googleusercontent.com/EpBX2ilPT-Q4MtE7i-gxYV9TbYX_hf6min5ik8B5QpAHTkkGfmzkWh5kswuOfNrli5GaJlXwG2UNDqQ5QHdFjsBDKqfYwtjxNizudSVKYzOoE8TLzW29n4-x8unrFNF7ffL-h6Gv" alt="Tech with Catalin"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tech with Catalin is a blog owned by Catalin Pit, a Software Engineer specializing in JavaScript technologies and AWS.&lt;/p&gt;

&lt;p&gt;The blog covers content about NodeJS, backend development, Open Source contributions, and growing as a developer.&lt;/p&gt;

&lt;p&gt;Thanks to web monetization, Tech with Catalin generates revenue without displaying ads to its readers or adding a paywall.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#techdirt"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.techdirt.com/"&gt;Techdirt&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--asPq2t1z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/LbGSwhRrkOGTJYY0JzarUGQpses3z9gQwjucHe1PhYt5DRmej7GBYtEmA0-CZbL772_wPXB0tlk6wolMWXuCHg7tfmNOHxdap1ZnfBBpu0gyyf6G_PYgbNUa5y9j4axjUfpKRo1u" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--asPq2t1z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/LbGSwhRrkOGTJYY0JzarUGQpses3z9gQwjucHe1PhYt5DRmej7GBYtEmA0-CZbL772_wPXB0tlk6wolMWXuCHg7tfmNOHxdap1ZnfBBpu0gyyf6G_PYgbNUa5y9j4axjUfpKRo1u" alt="Techdirt"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Techdirt is an American Internet blog that reports on technology's legal challenges and related business &amp;amp; economic policy issues in the context of the digital revolution. It focuses on intellectual property, patents, information privacy, and copyright reform in particular.&lt;/p&gt;

&lt;p&gt;While other websites have resorted to paywalls, registration requirements, and increasingly annoying/intrusive advertising, Techdirt has made their site open and available to anyone, thanks to Web Monetization.&lt;/p&gt;

&lt;p&gt;As a Coil subscriber, you'll get to support Techdirt anytime you read content on their website.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#on-the-chain"&gt;
  &lt;/a&gt;
  &lt;a href="https://onthechain.io/"&gt;On The Chain&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m3_i9o8b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/RUvppvPI3Ur4ALRydCQKUqRgXEzexkips0ySl633aDg-UzX-w2-vLYUUVIGRWjAVKq4KAXPCm9tNA6KzBFX67HbvTliZsMxBKQrTBwkbDF1IYLxZuoC8j0iYKt5w7b6Nyl5-nRRv" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m3_i9o8b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/RUvppvPI3Ur4ALRydCQKUqRgXEzexkips0ySl633aDg-UzX-w2-vLYUUVIGRWjAVKq4KAXPCm9tNA6KzBFX67HbvTliZsMxBKQrTBwkbDF1IYLxZuoC8j0iYKt5w7b6Nyl5-nRRv" alt="On The Chain"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;OnTheChain promotes everything cryptocurrency-related. It has many podcasts, Youtube videos, newsletters, and a channel where they share tips and encourage people to join the cryptocurrency community.&lt;/p&gt;

&lt;p&gt;OnTheChain uses the XRP TipBots wallet to receive bits of streaming payments from subscribers via Coil's Web Monetization API.&lt;/p&gt;

&lt;p&gt;This allows them to give their users an incredible ad-free experience and not invade their privacy to make money.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#short-film-web"&gt;
  &lt;/a&gt;
  &lt;a href="https://shortfilmweb.com"&gt;SHORT FILM WEB&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--F5FWEg1S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh4.googleusercontent.com/wG6x5z4v6nPKB7yGpajPEIXusUlYCNN9JLfZcO1cIxJmnMzvp7tbp_0aCR8cN0p8RQa32vQvXTyeYoscryRNu4w-hwmV5JymcERQhSiF6KkDn1PUOmqYdC2OaL0vTQmV28GQZJPf" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--F5FWEg1S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh4.googleusercontent.com/wG6x5z4v6nPKB7yGpajPEIXusUlYCNN9JLfZcO1cIxJmnMzvp7tbp_0aCR8cN0p8RQa32vQvXTyeYoscryRNu4w-hwmV5JymcERQhSiF6KkDn1PUOmqYdC2OaL0vTQmV28GQZJPf" alt="ShortFilmWeb"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ShortFilmWeb is a directory of some of the best short films freely available online carefully handpicked by the team.&lt;/p&gt;

&lt;p&gt;ShortFilmWeb uses Coil to monetize its content, giving them an edge to continue posting quality films and reviews.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#hackernoon"&gt;
  &lt;/a&gt;
  &lt;a href="https://hackernoon.com/"&gt;Hackernoon&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6bwi73tb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/6bvZfDLQVxOlc1x6I6eNOUjsNcjW4ZZ0cx0gv39KUm6SqNcZ7Ri9x4LDxMVc92Rj63ua9Xesav57iOIo46Nsun7UP3yETbdzQA4ZF95eMLIFNxXk2z1bMmiBXjA096M42S9l8ash" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6bwi73tb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/6bvZfDLQVxOlc1x6I6eNOUjsNcjW4ZZ0cx0gv39KUm6SqNcZ7Ri9x4LDxMVc92Rj63ua9Xesav57iOIo46Nsun7UP3yETbdzQA4ZF95eMLIFNxXk2z1bMmiBXjA096M42S9l8ash" alt="Hackernoon"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hackernoon is a community of over 12,000+ contributing writers publishing free high-quality tech stories. The platform supports writers by proofreading their articles before it is published on the platform.&lt;/p&gt;

&lt;p&gt;Hackernoon believes that advertising is not the best way to generate revenue, so they use Web Monetization instead.&lt;/p&gt;

&lt;p&gt;Because of this, writers on the platform can accept a stream of micro-tips from their readers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#js-bin"&gt;
  &lt;/a&gt;
  &lt;a href="https://jsbin.com/"&gt;JS Bin&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Sw1JJSlg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh4.googleusercontent.com/2pHvFXK-XUpNUR9kJfbQRO7EXbmdHuQtCO34KC82ATThvyAS4njEuR3b_n8bLS07E7MMTHaBbZ9BJX35h7OKrmkkrGu80H43BRcSrOFJ_T826jQdfZcHEGw4E2u_FJKSS_0dx83B" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Sw1JJSlg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh4.googleusercontent.com/2pHvFXK-XUpNUR9kJfbQRO7EXbmdHuQtCO34KC82ATThvyAS4njEuR3b_n8bLS07E7MMTHaBbZ9BJX35h7OKrmkkrGu80H43BRcSrOFJ_T826jQdfZcHEGw4E2u_FJKSS_0dx83B" alt="JS Bin"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;JS Bin is a free and Open Source code-sharing website for web developers. It enables developers to create and share code snippets or web pages with their colleagues or anyone in the developer community.&lt;/p&gt;

&lt;p&gt;Being a free platform, JS Bin uses Coil and the Web Monetization API to generate revenue to keep the website running without ads.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;Web monetization paves the way for a more open, fair, and inclusive web to better support users and creators.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Creators&lt;/strong&gt; make money, and &lt;strong&gt;users&lt;/strong&gt; finally experience their favorite websites without annoying advertisements or the invasion of their privacy.&lt;/p&gt;

&lt;p&gt;Now that you've seen a couple of projects and people using the Web Monetization API by Coil go ahead and become a &lt;a href="https://help.coil.com/docs/membership/get-membership/index.html"&gt;Coil Subscriber&lt;/a&gt; or integrate the &lt;a href="https://webmonetization.org/docs/api/"&gt;Web Monetization API&lt;/a&gt; into your projects, blog, or website. You will find everything you need to get started &lt;a href="https://webmonetization.org/docs/getting-started/"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I hope you enjoyed reading this article. If you have any questions, share them in the comment section below, and I'll reply to every comment. 💛&lt;/p&gt;

</description>
      <category>webmonetization</category>
      <category>coil</category>
      <category>programming</category>
    </item>
    <item>
      <title>The History of the Cloud with Jeffery Meyerson &amp;	Kelsey Hightower</title>
      <author>Ben Halpern</author>
      <pubDate>Wed, 23 Jun 2021 15:53:59 +0000</pubDate>
      <link>https://dev.to/devteam/the-history-of-the-cloud-with-jeffery-meyerson-kelsey-hightower-91a</link>
      <guid>https://dev.to/devteam/the-history-of-the-cloud-with-jeffery-meyerson-kelsey-hightower-91a</guid>
      <description>&lt;p&gt;This week, I'm joined by my friend &lt;a href="http://twitter.com/vaidehijoshi"&gt;Vaidehi Joshi&lt;/a&gt;, software engineer, creator of the Base.cs blog series, and co-host of the Base.cs podcast. &lt;/p&gt;

&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/vaidehijoshi"&gt;@vaidehijoshi&lt;/a&gt;
 joins me to catch up with &lt;a href="https://twitter.com/kelseyhightower"&gt;Kelsey Hightower&lt;/a&gt;, staff developer advocate for the Google Cloud Platform, and &lt;a href="https://dev.to/software_daily"&gt;Jefferey Meyerson&lt;/a&gt;, founder of Software Daily and the host of the &lt;a href="https://dev.to/sedaily"&gt;Software Engineering Daily podcast&lt;/a&gt;, as we delve into the history of the Cloud. &lt;/p&gt;

&lt;p&gt;From the origins of AWS (for better or worse) to the gravitas of Microsoft, we discuss one of my favourite topics: culture, the birth of DevOps, and why Kelsey learned Java.&lt;/p&gt;


&lt;div class="podcastliquidtag"&gt;
  &lt;div class="podcastliquidtag__info"&gt;
    &lt;a href="/devdiscuss/s5-e7-the-history-of-the-cloud"&gt;
      &lt;h1 class="podcastliquidtag__info__episodetitle"&gt;S5:E7 - The History of the Cloud&lt;/h1&gt;
    &lt;/a&gt;
    &lt;a href="/devdiscuss"&gt;
      &lt;h2 class="podcastliquidtag__info__podcasttitle"&gt;
        DevDiscuss  

      &lt;/h2&gt;
    &lt;/a&gt;
  &lt;/div&gt;
  &lt;div id="record-s5-e7-the-history-of-the-cloud" class="podcastliquidtag__record"&gt;
    &lt;img class="button play-butt" id="play-butt-s5-e7-the-history-of-the-cloud" src="https://res.cloudinary.com/practicaldev/image/fetch/s--1SirfZpJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/playbutt-5e444a2eae28832efea0dec3342ccf28a228b326c47f46700d771801f75d6b88.png" alt="play"&gt;
    &lt;img class="button pause-butt" id="pause-butt-s5-e7-the-history-of-the-cloud" src="https://res.cloudinary.com/practicaldev/image/fetch/s--8YU2a2mP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/pausebutt-bba7cb5f432cfb16510e78835378fa22f45fa6ae52a624f7c9794fefa765c384.png" alt="pause"&gt;
    &lt;img class="podcastliquidtag__podcastimage" id="podcastimage-s5-e7-the-history-of-the-cloud" alt="DevDiscuss" src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZtvK04RF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--j-SdIkjZ--/c_fill%2Cf_auto%2Cfl_progressive%2Cq_auto/https://dev-to-uploads.s3.amazonaws.com/uploads/podcast/image/235/08786d8b-7ef4-4c00-bc40-f4b3cbca5834.jpg"&gt;
  &lt;/div&gt;

  &lt;div class="hidden-audio" id="hidden-audio-s5-e7-the-history-of-the-cloud"&gt;
  
    
    Your browser does not support the audio element.
  
  &lt;div id="progressBar" class="audio-player-display"&gt;
    &lt;a href="/devdiscuss/s5-e7-the-history-of-the-cloud"&gt;
      &lt;img id="episode-profile-image" alt="S5:E7 - The History of the Cloud" width="420" height="420" src="https://res.cloudinary.com/practicaldev/image/fetch/s--zTELFWpP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--otY2jCJh--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_420%2Cq_auto%2Cw_420/https://dev-to-uploads.s3.amazonaws.com/uploads/podcast/image/235/08786d8b-7ef4-4c00-bc40-f4b3cbca5834.jpg"&gt;
      &lt;img id="animated-bars" src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZzrPEFmt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev.to/assets/animated-bars-4e8c57c8b58285fcf7d123680ad8af034cd5cd43b4d9209fe3aab49d1e9d77b3.gif" alt="animated volume bars"&gt;
    &lt;/a&gt;
    &lt;span id="barPlayPause"&gt;
      &lt;img class="butt play-butt" alt="play" src="https://res.cloudinary.com/practicaldev/image/fetch/s--1SirfZpJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/playbutt-5e444a2eae28832efea0dec3342ccf28a228b326c47f46700d771801f75d6b88.png"&gt;
      &lt;img class="butt pause-butt" alt="pause" src="https://res.cloudinary.com/practicaldev/image/fetch/s--8YU2a2mP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/pausebutt-bba7cb5f432cfb16510e78835378fa22f45fa6ae52a624f7c9794fefa765c384.png"&gt;
    &lt;/span&gt;
    &lt;span id="volume"&gt;
      &lt;span id="volumeindicator" class="volume-icon-wrapper showing"&gt;
        &lt;span id="volbutt"&gt;
          &lt;img alt="volume" class="icon-img" height="16" width="16" src="https://res.cloudinary.com/practicaldev/image/fetch/s--vTou7JP3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/volume-cd20707230ae3fc117b02de53c72af742cf7d666007e16e12f7ac11ebd8130a7.png"&gt;
        &lt;/span&gt;
        &lt;span class="range-wrapper"&gt;
          
        &lt;/span&gt;
      &lt;/span&gt;
      &lt;span id="mutebutt" class="volume-icon-wrapper hidden"&gt;
        &lt;img alt="volume-mute" class="icon-img" height="16" width="16" src="https://res.cloudinary.com/practicaldev/image/fetch/s--OX5NjT0t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/volume-mute-8f08ec668105565af8f8394eb18ab63acb386adbe0703afe3748eca8f2ecbf3b.png"&gt;
      &lt;/span&gt;
      &lt;span class="speed" id="speed"&gt;1x&lt;/span&gt;
    &lt;/span&gt;
    &lt;span class="buffer-wrapper" id="bufferwrapper"&gt;
      &lt;span id="buffer"&gt;&lt;/span&gt;
      &lt;span id="progress"&gt;&lt;/span&gt;
      &lt;span id="time"&gt;initializing...&lt;/span&gt;
      &lt;span id="closebutt"&gt;×&lt;/span&gt;
    &lt;/span&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#our-guests-this-week-were"&gt;
  &lt;/a&gt;
  Our guests this week were...
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="http://devpods.herokuapp.com/profiles/6"&gt;Kelsey Hightower&lt;/a&gt; is a staff developer advocate at Google. Find Kelsey on Twitter &lt;a href="http://twitter.com/kelseyhightower"&gt;@kelseyhightower&lt;/a&gt; and GitHub &lt;a href="http://github.com/kelseyhightower"&gt;kelseyhightower&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://devpods.herokuapp.com/profiles/217"&gt;Jefferey Meyerson&lt;/a&gt; is the founder of Software Daily and the host of the Software Engineering Daily podcast. Find Jeffrey on Twitter &lt;a href="http://twitter.com/@the_prion"&gt;@the_prion&lt;/a&gt; and GitHub &lt;a href="http://github.com/crablar"&gt;crablar&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tune into S5E7 of DevDiscuss for more answers to the eternal question: where do clouds come from?&lt;/p&gt;




&lt;p&gt;&lt;em&gt;You can &lt;a href="//dev.to/devdiscuss"&gt;follow DevDiscuss&lt;/a&gt; to get episode notifications and listen right in your feed&lt;/em&gt; — or subscribe on your platform of choice! Plus, if you leave us a review, we'll send you a free pack of thank-you stickers. Details &lt;a href="https://airtable.com/shr8oKAIMZgdYnBxx"&gt;here&lt;/a&gt;. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#quick-listening-links"&gt;
  &lt;/a&gt;
  Quick Listening Links
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://podcasts.apple.com/us/podcast/s5-e7-the-history-of-the-cloud/id1513053883?i=1000526573975"&gt;Apple Podcasts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://open.spotify.com/episode/5sQF2ySnFaLPEnZWo78kq3"&gt;Spotify&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://podcasts.google.com/feed/aHR0cHM6Ly9mZWVkcy5kZXZwb2RzLmRldi9kZXZkaXNjdXNzX3BvZGNhc3QueG1s/episode/aHR0cHM6Ly9kZXZwb2RzLmRldi9wb2RjYXN0cy9kZXZkaXNjdXNzLzQw?sa=X&amp;amp;ved=0CAQQkfYCahcKEwjQhrim0a3xAhUAAAAAHQAAAAAQAg"&gt;Google&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.listennotes.com/podcasts/devdiscuss/s5e6-home-automation-nerd-out-dHfmCZM-nK6/"&gt;Listen Notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tunein.com/podcasts/Technology-Podcasts/DevDiscuss-p1324596/?topicId=163957839"&gt;TuneIn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://feeds.codenewbie.org/devnews_podcast.xml"&gt;RSS Feed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://devpods.herokuapp.com/podcasts/devdiscuss/episodes/172"&gt;DEV Pods Site&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;em&gt;Acknowledgements&lt;/em&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;a class="mentioned-user" href="https://dev.to/levisharpe"&gt;@levisharpe&lt;/a&gt;
 for producing &amp;amp; mixing the show&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Our season five sponsors: &lt;a href="//cockroachlabs.com/devdiscuss"&gt;CockroachDB&lt;/a&gt;, &lt;a href="https://www.cloudways.com/en/?id=893892"&gt;Cloudways&lt;/a&gt;, &amp;amp; &lt;a href="https://rudderstack.com/?utm_source=devto&amp;amp;utm_medium=podcast&amp;amp;utm_campaign=CMPGN_3_PS&amp;amp;utm_content=None&amp;amp;utm_term=%7Bkeyword%7D&amp;amp;raid=6dbc05eeb293b421f68d02ce12648240"&gt;Rudderstack&lt;/a&gt;!&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#"&gt;
  &lt;/a&gt;
  🗣️🗣️🗣️
&lt;/h1&gt;

</description>
      <category>discuss</category>
      <category>podcast</category>
      <category>cloud</category>
    </item>
    <item>
      <title>Recursion explained 🎉</title>
      <author>Ben Matt, Jr.</author>
      <pubDate>Wed, 23 Jun 2021 15:12:35 +0000</pubDate>
      <link>https://dev.to/jrmatanda/recursion-explained-1d45</link>
      <guid>https://dev.to/jrmatanda/recursion-explained-1d45</guid>
      <description>&lt;p&gt;In this article we will break down all the concept you need to know before saying that you fully understand recursion. The goal is to talk about those concepts so that you can come up with your own definition of what recursion is 😋.&lt;/p&gt;

&lt;p&gt;Definition : Recursion is mostly described as a process that calls it self.&lt;br&gt;
It can also be described by a function that calls it self.&lt;/p&gt;

&lt;p&gt;Call Stack : In case we're calling a function or more multiple times in a program, &lt;br&gt;
their is a thing called "Call Stack" that is an actual stack in witch functions are placed &lt;br&gt;
on top of each other in terms of execution,&lt;br&gt;
so the call stack can hold informations about all the functions that are placed on it.&lt;/p&gt;

&lt;p&gt;So when using a recursive function what happen is we keep pushing the same function onto the "Call Stack".&lt;/p&gt;

&lt;p&gt;What's the main structure of a recursive function ? :&lt;/p&gt;

&lt;p&gt;A recursive function has two essential parts wich are the base case and a different input (or function argument). &lt;/p&gt;

&lt;p&gt;1) The base case :&lt;br&gt;
For the base case you can, think of it as a condition that causes the function to stop calling it self, in other words it stops the recursion.&lt;/p&gt;

&lt;p&gt;2) Different input : Everytime a recursive function is being called, we need to make sure that the input aren't the same.&lt;/p&gt;

&lt;p&gt;If one of the two or both are missing the process can resolve in what called a&lt;br&gt;
"Stack overflow" forcing you to spend hours looking for answers on stackoverflow.com 😉.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>algorithms</category>
      <category>react</category>
      <category>reactnative</category>
    </item>
    <item>
      <title>Introduction To Solidity, Ethereum’s Programming Language</title>
      <author>Mwenda Harun Mbaabu</author>
      <pubDate>Wed, 23 Jun 2021 15:09:41 +0000</pubDate>
      <link>https://dev.to/grayhat/introduction-of-solidity-ethereum-s-programming-language-257m</link>
      <guid>https://dev.to/grayhat/introduction-of-solidity-ethereum-s-programming-language-257m</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CkKNvkAj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.opensourceforu.com/wp-content/uploads/2021/01/Solidity-programming-blockchain-featured-image-osfy-Jan-21.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CkKNvkAj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.opensourceforu.com/wp-content/uploads/2021/01/Solidity-programming-blockchain-featured-image-osfy-Jan-21.jpg" alt="Introduction of Solidity, Ethereum’s Programming Language"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Solidity is an object-oriented programming language that is used for writing smart contracts on various blockchain platforms.&lt;/p&gt;

&lt;p&gt;Solidity is mostly associated with Ethereum as it is developed by some core authors of the coin. It was first proposed in August 2014 by computer scientist Gavin Wood and later acquired by the Ethereum project’s Solidity team. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nNyFvA_1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://r48z5eeksx9s2hyas5b71c69-wpengine.netdna-ssl.com/blog/wp-content/uploads/2017/11/solidity-101-intro-to-ethereum-smart-contracts-and-solidit-1170x508.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nNyFvA_1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://r48z5eeksx9s2hyas5b71c69-wpengine.netdna-ssl.com/blog/wp-content/uploads/2017/11/solidity-101-intro-to-ethereum-smart-contracts-and-solidit-1170x508.png" alt="Introduction of Solidity, Ethereum’s Programming Language"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-solidity"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Why Solidity?&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Solidity is a statically-typed programming language designed for developing smart contracts that run on the EVM. &lt;/p&gt;

&lt;p&gt;Solidity is compiled to bytecode that is executable on the EVM. With Solidity, developers can write applications that implement self-enforcing business logic embodied in smart contracts, leaving a non-repudiable and authoritative record of transactions. Writing smart contracts in contract-specific languages such as Solidity is claimed to be easy if you have prior programming experience.&lt;/p&gt;

&lt;p&gt;Its syntax is very similar to that of scripting languages like JavaScript, and it was influenced by existing languages such as C++, Python, and JavaScript.&lt;/p&gt;

&lt;p&gt;Solidity uses a vast number of programming concepts from other coding languages. For example, it has variables, string manipulation, classes, functions, arithmetic operations, and so on. While in a language like C, a programmer would be likely to create some form of a function, like ‘int main’ and ‘main,’ Solidity works with a ‘contract’ that is created analogously.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#is-solidity-worth-learning-it"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Is Solidity worth learning it?&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;While jobs for blockchain are on the rise learning a programing language for said blockchains, it’s a huge bonus. You won’t be without a job, but if you haven’t mastered another language before, you’ll find challenges in the learning process. If you are committed to spending a few years learning it, then go ahead and do it since it’s not a bad opportunity to start now.&lt;/p&gt;

&lt;p&gt;You can use Solidity for several things, like creating your decentralized app or smart contracts. Decentralized applications, dApps are on the rise now, and it’s a good skill to know how to write them since the job market is going to need a lot more coders in the future specialized in this specific thing.&lt;/p&gt;

&lt;p&gt;More Sources: &lt;/p&gt;

&lt;p&gt;Check Out &lt;a href="https://www.amazon.com/Solidity-Programming-Essentials-beginners-blockchain/dp/1788831381"&gt;these books from amazon&lt;/a&gt;&lt;/p&gt;

</description>
      <category>blockchain</category>
      <category>solidity</category>
      <category>programming</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>6 ways to configure Webpack</title>
      <author>Benny Neugebauer</author>
      <pubDate>Wed, 23 Jun 2021 15:04:47 +0000</pubDate>
      <link>https://dev.to/typescripttv/6-ways-to-configure-webpack-5a33</link>
      <guid>https://dev.to/typescripttv/6-ways-to-configure-webpack-5a33</guid>
      <description>&lt;p&gt;&lt;a href="https://webpack.js.org/"&gt;Webpack&lt;/a&gt; is a build tool to make code, which was not primarily written for execution in browsers, executable in web browsers. With special plugins, webpack can manage many types of code, for example JavaScript, TypeScript, and Rust-generated WebAssembly.&lt;/p&gt;

&lt;p&gt;There are webpack plugins to also compile, minify, shim, chunk, and bundle code. However, webpack was not designed to execute tasks such as linting, building, or testing your app. For this purpose, there are task runners such as &lt;a href="https://gruntjs.com/"&gt;Grunt&lt;/a&gt;, &lt;a href="https://gulpjs.com/"&gt;Gulp&lt;/a&gt; or &lt;a href="https://docs.npmjs.com/cli/v7/commands/npx"&gt;npx&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In order to manage the functionality of webpack, it must be configured. Here are six different ways, in which webpack's configuration can be written.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-zero-config"&gt;
  &lt;/a&gt;
  1. Zero Config
&lt;/h2&gt;

&lt;p&gt;As of webpack version 4, you are not required to specify a configuration. By default, webpack assumes that your code starts at &lt;code&gt;src/index.js&lt;/code&gt; and will be bundled to &lt;code&gt;dist/main.js&lt;/code&gt;. This is very convenient and promotes &lt;a href="https://en.wikipedia.org/wiki/Convention_over_configuration"&gt;convention over configuration&lt;/a&gt; but it does not use webpack's full potential.&lt;/p&gt;

&lt;p&gt;Without a configuration, webpack does not know whether code should be compressed for faster execution or bundled with source maps for better tracking of errors. Webpack expresses its confusion with the following warning:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;WARNING in configuration&lt;/p&gt;

&lt;p&gt;The 'mode' option has not been set, webpack will fallback to 'production' for this value.&lt;/p&gt;

&lt;p&gt;Set 'mode' option to 'development' or 'production' to enable defaults for each environment.&lt;/p&gt;

&lt;p&gt;You can also set it to 'none' to disable any default behavior. Learn more: &lt;a href="https://webpack.js.org/configuration/mode/"&gt;https://webpack.js.org/configuration/mode/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Let's have a look at options to tell webpack how it should be configured.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-command-line-interface"&gt;
  &lt;/a&gt;
  2. Command Line Interface
&lt;/h2&gt;

&lt;p&gt;To see all available commands and options to configure webpack from the command line interface, you can run &lt;code&gt;webpack --help&lt;/code&gt;. This command will show you a list of arguments and how to use them. The following execution mimics the default (zero config) behaviour of webpack:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;webpack &lt;span class="nt"&gt;--entry&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;./src/index.js &lt;span class="nt"&gt;--output-path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;./dist &lt;span class="nt"&gt;--output-filename&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;main.js
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see, CLI configurations can become quite long. In order to minimize the writing effort, there is also a shorthand version of the above command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;webpack ./src/index.js &lt;span class="nt"&gt;-o&lt;/span&gt; ./dist
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The simplified notation is at the expense of comprehensibility, which is why we will look at configuration files in the next step.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-commonjs-configuration-file"&gt;
  &lt;/a&gt;
  3. CommonJS Configuration File
&lt;/h2&gt;

&lt;p&gt;Webpack can be instructed to read in a configuration file. By default, a file named &lt;code&gt;webpack.config.js&lt;/code&gt; is being used. You can create it by using the &lt;code&gt;npx webpack init&lt;/code&gt; command or by writing it yourself:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;webpack.config.js&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;path&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;config&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./src/index.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;mode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;development&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;module&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;rules&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;exclude&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;node_modules&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;test&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;\.(&lt;/span&gt;&lt;span class="sr"&gt;js|jsx&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="sr"&gt;$/i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;loader&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;babel-loader&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;output&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dist&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;plugins&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The configuration uses the CommonJS module syntax with &lt;code&gt;require&lt;/code&gt; and &lt;code&gt;module.exports&lt;/code&gt;. Make sure that your &lt;code&gt;package.json&lt;/code&gt; does not define &lt;code&gt;"type": "module"&lt;/code&gt;, otherwise you will receive the following error:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;[webpack-cli] ReferenceError: require is not defined&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The configuration file should also be in the root of your project.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-esm-configuration-file"&gt;
  &lt;/a&gt;
  4. ESM Configuration File
&lt;/h2&gt;

&lt;p&gt;If your &lt;code&gt;package.json&lt;/code&gt; file specifies &lt;code&gt;"type": "module"&lt;/code&gt; and you want to make use of ECMAScript modules, then you can also modernize your webpack configuration:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;webpack.config.js&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;path&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;config&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./src/index.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;mode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;development&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;module&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;rules&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;exclude&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;node_modules&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;test&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;\.(&lt;/span&gt;&lt;span class="sr"&gt;js|jsx&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="sr"&gt;$/i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;loader&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;babel-loader&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;output&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./dist&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;plugins&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#5-typescript-configuration-file"&gt;
  &lt;/a&gt;
  5. TypeScript Configuration File
&lt;/h2&gt;

&lt;p&gt;For those of you who like to work with TypeScript, webpack offers the possibility to use a configuration file written in TypeScript. &lt;/p&gt;

&lt;p&gt;Webpack v5 already ships with TypeScript definitions, so you don't have to install &lt;a href="https://www.npmjs.com/package/@types/webpack"&gt;@types/webpack&lt;/a&gt; but you need to install &lt;a href="https://www.npmjs.com/package/typescript"&gt;typescript&lt;/a&gt;, &lt;a href="https://www.npmjs.com/package/ts-node"&gt;ts-node&lt;/a&gt; and &lt;a href="https://www.npmjs.com/package/@types/node"&gt;@types/node&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Because the extension &lt;code&gt;.ts&lt;/code&gt; does not correspond to the standard &lt;code&gt;.js&lt;/code&gt; extension, webpack has to be informed about this via the &lt;code&gt;--config&lt;/code&gt; argument:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;webpack &lt;span class="nt"&gt;--config&lt;/span&gt; webpack.config.ts
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You also have to make sure that the test patterns of your "rules" and your "resolve" definitions include the TypeScript extension:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;webpack.config.ts&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;path&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Configuration&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;webpack&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Configuration&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./src/index.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;mode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;development&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;module&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;rules&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;exclude&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;node_modules&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;test&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;\.[&lt;/span&gt;&lt;span class="sr"&gt;tj&lt;/span&gt;&lt;span class="se"&gt;]&lt;/span&gt;&lt;span class="sr"&gt;sx&lt;/span&gt;&lt;span class="se"&gt;?&lt;/span&gt;&lt;span class="sr"&gt;$/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;loader&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;babel-loader&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;output&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./dist&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;plugins&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[],&lt;/span&gt;
  &lt;span class="na"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;extensions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.jsx&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.ts&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.tsx&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;☝️ Because the exemplary webpack configuration loads &lt;a href="https://babeljs.io/"&gt;Babel&lt;/a&gt;, we can still point to a JavaScript entry file as Babel makes it possible to use JavaScript and TypeScript code simultaneously.&lt;/p&gt;

&lt;p&gt;⚠️ Please note that TypeScript configuration files cannot be used with ESM (see &lt;a href="https://github.com/webpack/webpack-cli/issues/2458"&gt;ESM in webpack.config.ts isn't supported&lt;/a&gt;).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-node-interface"&gt;
  &lt;/a&gt;
  6. Node Interface
&lt;/h2&gt;

&lt;p&gt;In addition to the execution via &lt;code&gt;webpack-cli&lt;/code&gt;, webpack also supports a programmatic interface. This allows you to compile your frontend code on a Node.js server. Here is an example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;webpack&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;webpack&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;webpackConfig&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;webappDir&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../webpack.config.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;useWebpack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Express&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;webpackCompiler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;webpack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;webpackConfig&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;webpackDevMiddleware&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;webpack-dev-middleware&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;webpackHotMiddleware&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;webpack-hot-middleware&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;webpackDevMiddleware&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;webpackCompiler&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;webpackHotMiddleware&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;webpackCompiler&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

  &lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;static&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;webappDir&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Instead of consuming your existing &lt;code&gt;webpack.config.js&lt;/code&gt; file, you can also pass a configuration object to the &lt;code&gt;webpack&lt;/code&gt; API.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#want-more"&gt;
  &lt;/a&gt;
  Want more?
&lt;/h2&gt;

&lt;p&gt;If you liked this post, then subscribe to &lt;a href="https://www.youtube.com/c/typescripttv"&gt;TypeScript TV&lt;/a&gt; on YouTube. Alternatively, you can follow me on &lt;strong&gt;DEV&lt;/strong&gt; to learn about best practices with TypeScript &amp;amp; JavaScript.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>typescript</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
  </channel>
</rss>
