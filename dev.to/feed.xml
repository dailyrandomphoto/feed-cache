<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>The Powers of AJAX</title>
      <author>ManuTheCoder</author>
      <pubDate>Mon, 26 Apr 2021 14:48:40 +0000</pubDate>
      <link>https://dev.to/manuthecoder/the-powers-of-ajax-3j41</link>
      <guid>https://dev.to/manuthecoder/the-powers-of-ajax-3j41</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Ajax is a set of web development techniques using many web &lt;br&gt;
technologies on the client-side to create asynchronous web applications. With Ajax, web applications can send and retrieve data from a server asynchronously without interfering with the display and behaviour of the existing page. (Wikipedia)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;AJAX is very useful for building single page apps. &lt;br&gt;
It's also very powerful because you can submit forms and send requests, without reloading the page!&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#how-to-use-ajax"&gt;
  &lt;/a&gt;
  How to use AJAX
&lt;/h3&gt;

&lt;p&gt;AJAX is very simple to use. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Just create an index.html file, and insert this code in a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag. &lt;/li&gt;
&lt;li&gt;Create another file named &lt;code&gt;ajax_is_awesome.php&lt;/code&gt;. Write whatever you want in that file!&lt;/li&gt;
&lt;li&gt;View your website!
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;ajax&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;XMLHttpRequest&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;ajax&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onreadystatechange&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;readyState&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;demo&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;ajax&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;responseText&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="nx"&gt;ajax&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;GET&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ajax_is_awesome.php&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;ajax&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Explained&lt;br&gt;
&lt;strong&gt;&lt;code&gt;var ajax&lt;/code&gt;&lt;/strong&gt; - Creates a new variable for the class &lt;strong&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/strong&gt; - XMLHttpRequest is an API in the form of an object whose methods transfer data between a web browser and a web server.  (Wikipedia)&lt;br&gt;
&lt;strong&gt;&lt;code&gt;onreadystatechange&lt;/code&gt;&lt;/strong&gt; - When the file has loaded&lt;br&gt;
&lt;strong&gt;&lt;code&gt;this.readyState == 4 &amp;amp;&amp;amp; this.status == 200&lt;/code&gt;&lt;/strong&gt; - If the document's status isn't 404, 500, etc. Must be 200&lt;br&gt;
&lt;strong&gt;&lt;code&gt;ajax.open("GET", "index.php", true);&lt;/code&gt;&lt;/strong&gt; - Opens the ajax file. Using GET this time. &lt;br&gt;
&lt;strong&gt;&lt;code&gt;ajax.send();&lt;/code&gt;&lt;/strong&gt; - Sends the request&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#how-to-use-ajax-in-jquery"&gt;
  &lt;/a&gt;
  How to use AJAX in jQuery
&lt;/h3&gt;

&lt;p&gt;Remember to include the &lt;code&gt;&amp;lt;script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"&amp;gt;&amp;lt;/script&amp;gt;&lt;/code&gt; line in your code&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#someform&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;submit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;preventDefault&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;form&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;action&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ajax&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
           &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;POST&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
           &lt;span class="na"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
           &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;serialize&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; 
           &lt;span class="na"&gt;success&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;          
            &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;demo&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
           &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;See? AJAX is cool! Implement it, and you won't have redirects when submitting forms, or doing very simple things, such as checking for new notifications every few seconds. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://manuthecoder.github.io/docjs/docs/"&gt;Example of a single page documentation I made using AJAX&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/manuthecoder/docjs"&gt;pls star it on github if you like this!&lt;/a&gt;&lt;/p&gt;

</description>
      <category>ajax</category>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Create your personal website and host on the github page with travis</title>
      <author>Walter Nascimento</author>
      <pubDate>Mon, 26 Apr 2021 14:19:59 +0000</pubDate>
      <link>https://dev.to/walternascimentobarroso/create-your-personal-website-and-host-on-the-github-page-with-travis-27jj</link>
      <guid>https://dev.to/walternascimentobarroso/create-your-personal-website-and-host-on-the-github-page-with-travis-27jj</guid>
      <description>&lt;p&gt;&lt;a href="https://medium.com/walternascimentobarroso-pt/crie-seu-site-pessoal-e-hospede-no-github-page-com-o-travis-379548b3896d"&gt;[Clique aqui para ler em português]&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#creating-repository"&gt;
  &lt;/a&gt;
  Creating repository
&lt;/h1&gt;

&lt;p&gt;To have your website hosted for free on the github page, just go to your github account and create a repository with your username, in my case I created one like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;walternascimentobarroso.github.io
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;after creating any page that html you send will already work and you will have a website with the url like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="http://walternascimentobarroso.github.io/"&gt;http://walternascimentobarroso.github.io/&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#template"&gt;
  &lt;/a&gt;
  Template
&lt;/h1&gt;

&lt;p&gt;There are several free personal page templates on the internet, for this post I will use this one:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://startbootstrap.com/template/resume"&gt;https://startbootstrap.com/template/resume&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#creating-personal-website"&gt;
  &lt;/a&gt;
  Creating personal website
&lt;/h2&gt;

&lt;p&gt;After creating your repository, clone the project:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git clone https://github.com/&amp;lt;username&amp;gt;/&amp;lt;username&amp;gt;.github.io.git
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;It is best to avoid creating codes directly on the master, if you know git flow follow your flow, if you don’t know for the post not to get too big we will just use a separate branch.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git checkout -b development
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Then go to the website and download the template, extract the content and add it to your repository.&lt;/p&gt;

&lt;p&gt;open the index file and edit the information as you wish, if you master css you can adjust the template as you wish (remembering that this project uses the bootstrap, then if you master the bootstrap you can change the classes to be more in your style)&lt;/p&gt;

&lt;p&gt;after the changes made just send the information to the server&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git push — set-upstream origin development
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;Remembering that for the url (&lt;a href="http://walternascimentobarroso.github.io/"&gt;http://walternascimentobarroso.github.io/&lt;/a&gt;) to work the content has to be in the main branch, as in our case we created a branch for development, so we will use a CI tool to do the merge&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1&gt;
  &lt;a href="#travis"&gt;
  &lt;/a&gt;
  Travis
&lt;/h1&gt;

&lt;p&gt;Travis is a continuous integration tool for open source projects.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#getting-access"&gt;
  &lt;/a&gt;
  Getting access
&lt;/h2&gt;

&lt;p&gt;Get a Github access token so that Travis can send it back to his repository:&lt;/p&gt;

&lt;p&gt;Go to &lt;a href="https://github.com/settings/tokens/new"&gt;https://github.com/settings/tokens/new&lt;/a&gt; and create a new token&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7xGflm1g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bla09zopkfdv7c8cduqs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7xGflm1g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bla09zopkfdv7c8cduqs.png" alt="alt text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now follow the steps:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Copy the generated token&lt;/li&gt;
&lt;li&gt;Access the travis website &lt;a href="https://travis-ci.org"&gt;https://travis-ci.org&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Log in with your github account&lt;/li&gt;
&lt;li&gt;Access the repository page and enable your repository &lt;a href="https://travis-ci.org/account/repositories"&gt;https://travis-ci.org/account/repositories&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mQZ7zAHV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tawziisnzsqx5oiy679h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mQZ7zAHV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tawziisnzsqx5oiy679h.png" alt="alt text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Click on settings and go to Environment Variables&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let’s create a variable called GH_TOKEN&lt;/p&gt;

&lt;p&gt;GH_TOKEN = // paste the copied token here&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#sending-to-travis"&gt;
  &lt;/a&gt;
  Sending to travis
&lt;/h2&gt;

&lt;p&gt;In your project create a file with the name &lt;code&gt;.travis.yml&lt;/code&gt; and enter the settings.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;p&gt;with that when committing travis read the &lt;code&gt;.travis.yml&lt;/code&gt; file&lt;/p&gt;

&lt;p&gt;finally create a file called &lt;code&gt;package.json&lt;/code&gt; you don’t need to have anything in it just one {} is enough, as travis searches for dependencies within this file&lt;/p&gt;

&lt;p&gt;after all the configurations and changes are completed just send to the server and wait&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git push
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To make the project cooler, create a readme.md file and place&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[![Build Status](https://travis-ci.org/&amp;lt;username&amp;gt;/&amp;lt;username&amp;gt;.github.io.svg?branch=master)](https://travis-ci.org/&amp;lt;username&amp;gt;/&amp;lt;username&amp;gt;.github.io)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;changing for your user.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#thanks-for-reading"&gt;
  &lt;/a&gt;
  Thanks for reading!
&lt;/h2&gt;

&lt;p&gt;If you have any questions, complaints or tips, you can leave them here in the comments. I will be happy to answer!&lt;/p&gt;

&lt;p&gt;😊😊See you! 😊😊&lt;/p&gt;

</description>
      <category>github</category>
      <category>travis</category>
      <category>deploy</category>
      <category>website</category>
    </item>
    <item>
      <title>What JS Concept should I explain?</title>
      <author>Siddharth</author>
      <pubDate>Mon, 26 Apr 2021 14:19:26 +0000</pubDate>
      <link>https://dev.to/siddharthshyniben/what-js-concept-function-should-i-explain-51na</link>
      <guid>https://dev.to/siddharthshyniben/what-js-concept-function-should-i-explain-51na</guid>
      <description>&lt;p&gt;I've learned a lot from the DEV community and I would love to give back. For this reason I have created this Series.&lt;/p&gt;

&lt;p&gt;If you want an explanation of any JS concept, you've come to the right place! Comment what you want to learn about and I will try to respond to every request with a new post in this Series.&lt;/p&gt;

&lt;p&gt;Please don't be misled by the word "concept". I will try to do anything JS related, but no libraries!&lt;/p&gt;

&lt;p&gt;Happy Learning!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>codenewbie</category>
      <category>beginners</category>
    </item>
    <item>
      <title>A Brief Introduction to React</title>
      <author>Mark Mahoney</author>
      <pubDate>Mon, 26 Apr 2021 14:12:45 +0000</pubDate>
      <link>https://dev.to/markm208/a-brief-introduction-to-react-1i7g</link>
      <guid>https://dev.to/markm208/a-brief-introduction-to-react-1i7g</guid>
      <description>&lt;p&gt;This is a short introduction to &lt;a href="https://reactjs.org/"&gt;React&lt;/a&gt;. React is an incredibly popular front-end framework that allows you to create encapsulated components that manage their own state. React has helped transform web development and bring it inline with modern software development practices.&lt;/p&gt;

&lt;p&gt;You will be asked to follow along with the programs below. Just click on the links and a code playback page will load (you might want to open each one in a new tab). Then click on the comments on the left hand side of the playback screen or hit the play button to drive the development of the code. You can download the code at any point and run it on your machine. There are some controls in the top right hand side of the screen to make the text bigger or to switch to blog mode (which is good for small screens).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#react"&gt;
  &lt;/a&gt;
  React
&lt;/h3&gt;

&lt;p&gt;I start by showing a basic example of React and JSX. I will build a site to serve info about Computer Science legends in the first three examples. This program shows the beginning of the app:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://markm208.github.io/webdevbook/chapter4/01/playback.html"&gt;Basic React&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Next, I continue to build the CS Legends app in a React project:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://markm208.github.io/webdevbook/chapter4/02/playback.html"&gt;Creating a React App with create-react-app&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I complete the CS Legends app by creating a back-end to serve legend data:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://markm208.github.io/webdevbook/chapter4/03/playback.html"&gt;React with Express&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Finally, I show the beginnings of creating a scoreboard app for a kids hockey league. At the end you will be asked to download the code and add to it:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://markm208.github.io/webdevbook/chapter4/04/playback.html"&gt;Scoreboard React App&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#comments-and-feedback"&gt;
  &lt;/a&gt;
  Comments and Feedback
&lt;/h3&gt;

&lt;p&gt;You can find all of these code playbacks in my free 'book', &lt;a href="https://markm208.github.io/webdevbook/"&gt;An Introduction to Web Development from Back to Front&lt;/a&gt;. I am always looking for feedback so please feel free to comment here or to send me a message. You can follow me on twitter &lt;a href="https://twitter.com/markm208"&gt;@markm208&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>How Does The Web Work?</title>
      <author>Chuck Choi</author>
      <pubDate>Mon, 26 Apr 2021 13:38:41 +0000</pubDate>
      <link>https://dev.to/chuckchoiboi/how-does-the-web-work-543</link>
      <guid>https://dev.to/chuckchoiboi/how-does-the-web-work-543</guid>
      <description>&lt;p&gt;Car, television, stove, and refrigerator are the machines we use daily that are fairly simple to use. These are essential tools in our lives yet most of us do not fully comprehend how they work but still, it is not the end of the world. We don't have to understand their mechanisms to be able to use them. Computers and mobile devices are also other machines that most people know how to use, but they are pretty complicated machines that are capable of doing many things. &lt;/p&gt;

&lt;p&gt;Using these devices, we connect to the &lt;strong&gt;World Wide Web (www)&lt;/strong&gt; commonly known as &lt;strong&gt;the Web&lt;/strong&gt; where we can access various resources such as documents, audios, pictures, and videos. The web became very simple to use despite its complexity over time, and even a 7-year-old Larry can open his mom's iPad to watch his favorite cartoon on YouTube.&lt;/p&gt;

&lt;p&gt;Have you ever wondered what's happening behind the scenes for someone like young Larry to go on YouTube to play the video, or what the moving pieces are for you to get to a website? You came to the right place. Let us go over the key players of the web to do its work.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#the-history-of-the-world-wide-web"&gt;
  &lt;/a&gt;
  The history of the World Wide Web
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---ygEGV6E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t2xekhdz3i8nqw2upgk5.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---ygEGV6E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t2xekhdz3i8nqw2upgk5.jpg" alt="sir-tim-berners-lee"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;World Wide Web&lt;/strong&gt;, also known as the web was invented by a British computer scientist named &lt;em&gt;Sir Tim Berners-Lee&lt;/em&gt; back in 1989. His parents were computer scientists, but Tim was more interested in trains growing up. He got into electronics as he had to build electronic gadgets to control the trains. Eventually, he got more interested in electronics than trains which is how he started working on computers and software.&lt;/p&gt;

&lt;p&gt;Tim became a software engineer at a physics laboratory in Switzerland named &lt;a href="https://home.cern/"&gt;&lt;strong&gt;CERN&lt;/strong&gt;&lt;/a&gt; after graduating from &lt;em&gt;Oxford University&lt;/em&gt;. Back then, things were very manual and offline which you had to log on to different computers to get the information stored. Some computers used different programs, so you had two choices: &lt;em&gt;learn a different program on each computer to access the information&lt;/em&gt;, or &lt;em&gt;go have a coffee chat with your co-worker to ask how they work.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;With millions of computers being connected together through the internet, Tim envisioned a technology to connect the world with information and proposed his idea to his supervisor at &lt;em&gt;CERN&lt;/em&gt;. Although it was never an official project, his supervisor gave him time to work on the big task.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KnsLxq7B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2zvoyagtahka8hxgxsgv.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KnsLxq7B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2zvoyagtahka8hxgxsgv.jpg" alt="www-proposal"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tim has developed the three fundamental technologies by 1990 that are the foundation of the web today: &lt;strong&gt;HTML&lt;/strong&gt;, &lt;strong&gt;URI&lt;/strong&gt;, and &lt;strong&gt;HTTP&lt;/strong&gt;. Over time, the web has grown and Tim realized that the web's true potential would only prevail if it was accessible by anyone, anywhere without any cost or permission. &lt;em&gt;CERN&lt;/em&gt; agreed to make the web free forever and announced the decision in April 1993. The web has grown ever since with the number of websites totaling &lt;strong&gt;1.8 Billion&lt;/strong&gt; as of April 2021.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;“Had the technology been proprietary, and in my total control, it would probably not have taken off. You can’t propose that something be a universal space and at the same time keep control of it.”&lt;/em&gt; - Sir Tim Berners-Lee&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h2&gt;
  &lt;a href="#modern-days-of-the-web"&gt;
  &lt;/a&gt;
  Modern Days of the Web
&lt;/h2&gt;

&lt;p&gt;Enough of the history lessons on the web, it's time to talk about how the offspring of Tim's noble task look like today. To summarize the flow of the web, a browser sends an HTTP request to a server to access specific content, and the server returns an HTTP response of that requested data back to the browser. We will get into more detail but it looks something like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ROlmr-3Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j6y1j4vgbzbhg5g867wb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ROlmr-3Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j6y1j4vgbzbhg5g867wb.png" alt="http"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's go through each of the key players of the web.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#client-server-and-http"&gt;
  &lt;/a&gt;
  Client, Server, and HTTP
&lt;/h3&gt;

&lt;p&gt;I spend a lot of free time watching YouTube. It is probably the website I spent the most time in my life. In order for me to get to the website to watch a video, I go through these steps:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Open my computer&lt;/li&gt;
&lt;li&gt;Open Google Chrome&lt;/li&gt;
&lt;li&gt;In the browser, I type &lt;a href="http://www.youtube.com"&gt;www.youtube.com&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;I get to the website&lt;/li&gt;
&lt;li&gt;Watch a video&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In this example, I am the &lt;em&gt;client&lt;/em&gt; who requests access to a video that is in YouTube's database. YouTube is serving me by providing the web service to access the video, which makes YouTube the &lt;em&gt;server&lt;/em&gt;. &lt;/p&gt;

&lt;p&gt;A &lt;strong&gt;client&lt;/strong&gt; is internet-connected computer hardware that uses client software like a web browser. Your computer and mobile device are clients that use browsers like Chrome, Firefox, or Safari. We often refer to the device, browser, and user using the device as clients. Clients can request access to the content that servers store.&lt;/p&gt;

&lt;p&gt;On the other hand, a &lt;strong&gt;server&lt;/strong&gt; is computer software and its hardware that &lt;em&gt;serves&lt;/em&gt; clients by receiving their requests and returning responses accordingly. Servers can show web pages, send/receive emails, store files and share them, or identify and authorize user accounts. &lt;/p&gt;

&lt;p&gt;I like to compare a client and a server relationship as a patron and a librarian at a public library. The patron can ask the librarian a book he is looking for, and the librarian will respond with the location of the book if they have a copy of it. Just like that, a client can send a request to a server to view a web document.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LyNuQZ01--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/egkbeud4qjbfrjmblrdp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LyNuQZ01--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/egkbeud4qjbfrjmblrdp.png" alt="librarian-cartoon"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When humans speak to each other, we use a shared language and follow its grammar structure to deliver our messages across. Clients and servers do the same by using &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP"&gt;&lt;strong&gt;Hypertext Transfer Protocol (HTTP)&lt;/strong&gt;&lt;/a&gt; which is a request-response protocol they expect from each other when exchanging data. &lt;/p&gt;

&lt;p&gt;A client communicates with a server by sending an &lt;strong&gt;HTTP request&lt;/strong&gt; containing information on what the client is looking for, and the server responds to the client by returning an &lt;strong&gt;HTTP response&lt;/strong&gt; as a result of the request. HTTP requests and responses both have &lt;strong&gt;HTTP Header&lt;/strong&gt;, which allows clients and servers to understand each other better. HTTP Headers contain information like the client's setup (browser, operating system), browser cookie, and domain name the client wants to reach. &lt;/p&gt;

&lt;p&gt;HTTP response often contains the resource data that was requested, and the status of the requested action to indicate if it was successful or not. As the name "Hypertext" suggests, HTTP requests and responses transfer content that is beyond just text. The content could be &lt;strong&gt;code files&lt;/strong&gt; like HTML, CSS, JavaScript, or &lt;strong&gt;assets&lt;/strong&gt; like images, audio, video, documents, and etc. &lt;/p&gt;

&lt;p&gt;It is possible for hackers to intercept the data in the middle and see the data being exchanged though. This could result in horrible outcomes logging into a bank account, email, or health insurance. That is why &lt;strong&gt;Hypertext Transfer Protocol Secure (HTTPS)&lt;/strong&gt; was introduced to encrypt the data. With &lt;em&gt;HTTPS&lt;/em&gt;, hackers will see encrypted meaningless characters even if they were to intercept the data. The data can be decrypted by using the shared secret key between the client and the server.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---Pew_QG9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4qh86byb84hrtxqoty2k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---Pew_QG9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4qh86byb84hrtxqoty2k.png" alt="web-workflow"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#internet-tcpip-and-dns"&gt;
  &lt;/a&gt;
  Internet, TCP/IP, and DNS
&lt;/h3&gt;

&lt;p&gt;For clients and servers to be able to communicate, they connect to the global system of computer networks called the &lt;strong&gt;Internet.&lt;/strong&gt; We pay a monthly fee to the &lt;strong&gt;internet service providers (ISP)&lt;/strong&gt; to be able to connect to the network. The internet uses the internet protocol suite (TCP/IP) to exchange data packets between computers. &lt;/p&gt;

&lt;p&gt;These &lt;strong&gt;packets&lt;/strong&gt; are fragments of data that allow data to be transferred reliably and efficiently. Transferring a large file instead of packets would be inefficient as the speed of the data transfer varies based on how you are sending them (optical cable, copper wire, or satellite). It can result in an unexpected loss of data or a change in the order of the packets. this is where the &lt;em&gt;internet protocol suite&lt;/em&gt; comes into play. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AeRgTG70--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/88w3v552ae4n6q1bw3mk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AeRgTG70--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/88w3v552ae4n6q1bw3mk.png" alt="packet"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;internet protocol suite&lt;/strong&gt; is a communication protocol that ensures the successful exchange of data to an intended destination. It consists of two protocols: &lt;em&gt;TCP&lt;/em&gt; and &lt;em&gt;IP&lt;/em&gt;. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;TCP&lt;/strong&gt; stands for &lt;strong&gt;Transmission Control Protocol&lt;/strong&gt; which defines the model of the data and assigns numbers to each data packet being transferred. With the numbers assigned to each packet, it can detect loss of data during the transfer to fix them and reassemble them in the right order as one file again. Due to its complexity, it makes TCP very reliable.&lt;/p&gt;

&lt;p&gt;In order for data to get to the right place between computers, it requires the addresses of each computer. &lt;strong&gt;IP&lt;/strong&gt; stands for &lt;strong&gt;Internet Protocol&lt;/strong&gt; which routes data to the right location. IPs are numbers of unique computer addresses with a mix of digits and periods like &lt;code&gt;192.158. 1.38&lt;/code&gt; (IPv4). With the web growing its size every day, a new version of IP, IPv6 was deployed to fulfill the need for more internet addresses. Compared to its previous version with a 32-bit binary IP address, IPv6 uses a 128-bit binary IP address which allows 340 undecillion unique address space! Here's an example of an IPv6 address: &lt;code&gt;2001:0db8:85a3:0000:0000:8a2e:0370:7334&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jxw1MVzM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jeu5z70mxrbmjpotnyax.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jxw1MVzM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jeu5z70mxrbmjpotnyax.png" alt="network-packet"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;These IP addresses are not that human-readable though, and we'd need address books to keep all the websites' IP addresses. And it'd be very inconvenient if we had to look up Google's IP address and type &lt;code&gt;http://142.250.188.238/&lt;/code&gt; in the browser to get there every time. To solve this problem, the &lt;strong&gt;Domain Name System (DNS)&lt;/strong&gt; was introduced. The DNS is like the address book of the internet. We purchase domains from DNS providers, website addresses that are more human-readable like &lt;em&gt;google.com&lt;/em&gt;, &lt;em&gt;youtube.com&lt;/em&gt;, or &lt;em&gt;facebook.com&lt;/em&gt;. With the domains purchased for the websites, the DNS provider is responsible for exchanging domain URLs to IP addresses to the clients.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YnBX-hF6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qmj47og7s4qtyfph6qdw.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YnBX-hF6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qmj47og7s4qtyfph6qdw.jpg" alt="client-dns"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#typical-flow-of-the-web"&gt;
  &lt;/a&gt;
  Typical Flow of the Web
&lt;/h3&gt;

&lt;p&gt;With that being said, let's take a look at an example of a user accessing YouTube's home page and break down what's happening behind the scenes:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--emkGMhpb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xh4pa7y21xnratdi9pbg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--emkGMhpb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xh4pa7y21xnratdi9pbg.png" alt="web-works"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;User opens his laptop (&lt;em&gt;client&lt;/em&gt;) that is connected to the internet and opens Google Chrome (&lt;em&gt;browser&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;User types in the web address &lt;a href="http://www.youtube.com"&gt;www.youtube.com&lt;/a&gt; to the browser address bar&lt;/li&gt;
&lt;li&gt;The browser goes to the &lt;em&gt;DNS server&lt;/em&gt; and exchange the web address into an &lt;em&gt;IP address&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;The browser uses the &lt;em&gt;IP address&lt;/em&gt; to make an &lt;em&gt;HTTP request&lt;/em&gt; to YouTube's &lt;em&gt;server&lt;/em&gt; to access the website page&lt;/li&gt;
&lt;li&gt;YouTube server looks at the &lt;em&gt;HTTP request&lt;/em&gt; and if the requested data is found, prepares the data into &lt;em&gt;packets&lt;/em&gt; and &lt;em&gt;TCP&lt;/em&gt; numbers each &lt;em&gt;packet&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;YouTube &lt;em&gt;server&lt;/em&gt; responds with an &lt;em&gt;HTTP response&lt;/em&gt; with a "200 OK" status code (means the request was processed successfully) to the user's browser&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;TCP&lt;/em&gt; assembles the &lt;em&gt;packets&lt;/em&gt; back to the data as a whole, and the web page is displayed by parsing &lt;em&gt;HTML&lt;/em&gt;, &lt;em&gt;CSS&lt;/em&gt;, &lt;em&gt;JavaScript&lt;/em&gt; and its assets like images and videos&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Jo9CZX7d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fgidlfw8fe90z0n4gsgz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Jo9CZX7d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fgidlfw8fe90z0n4gsgz.png" alt="wfh"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Imagine the world without the web. Imagine doing your school projects without any access to Google, just like back a couple of decades ago when things were simple without any power of the internet. You would have to access offline documents like books, newspapers, or magazines. Researchers had to fly across the country to interview the right personnel to collect data.&lt;/p&gt;

&lt;p&gt;The web has made many things possible by connecting humanity all over the world to exchange information. You can now watch Netflix anywhere with the internet instead of going to a Blockbuster store to rent a DVD, have video chats with friends and family across the globe, or simply Google any information you are looking for. Especially the COVID-19 pandemic really showed the power of the web by connecting the world regardless of the location. It minimized the damage to our society by allowing remote work, food delivery service, and quick/easy access to COVID-19 guidelines for anyone.&lt;/p&gt;

&lt;p&gt;Although you do not have to fully understand how the web works to be able to use them, I hoped to provide a little bit of history and knowledge on how the web operates. Feel free to comment below with additional information! Thank you so much for taking time to read this blog post.&lt;/p&gt;

&lt;p&gt;Follow my blog account or let's connect on &lt;a href="https://www.linkedin.com/in/chuckchoi/"&gt;LinkedIn&lt;/a&gt; to keep up with more tech content!&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Benefits of Having a Website for Small Business</title>
      <author>Alexandr Pluzhnik</author>
      <pubDate>Mon, 26 Apr 2021 13:30:38 +0000</pubDate>
      <link>https://dev.to/alexandr_pluzhnik_93c3789/benefits-of-having-a-website-for-small-business-3fi7</link>
      <guid>https://dev.to/alexandr_pluzhnik_93c3789/benefits-of-having-a-website-for-small-business-3fi7</guid>
      <description>&lt;p&gt;Why website is crucial for a small business? See how you can sell your products, increase market penetration, and more!&lt;/p&gt;

&lt;p&gt;Most people in 2021 understand, that in order to have a successful business you need to have a website, but how it looks in the reality? Let’s take a look at some data:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#according-to-tda-research-and-bluecorona-stats"&gt;
  &lt;/a&gt;
  According to TDA research and Bluecorona stats:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Less than 64% of small businesses have a website&lt;/li&gt;
&lt;li&gt;70-80% of people research a company online before visiting it or making a purchase.&lt;/li&gt;
&lt;li&gt;Among small businesses without a website, 29% plan to build one in 2021.&lt;/li&gt;
&lt;li&gt;As of 2019, 94% of small business websites are mobile-friendly&lt;/li&gt;
&lt;li&gt;70-80% of potential customers could be lost to businesses without a website.&lt;/li&gt;
&lt;li&gt;41% of businesses without websites say their business “does not need a website.”&lt;/li&gt;
&lt;li&gt;79% of entrepreneurs with a business website expect to grow at least 25% in the next three to five years, compared to 64% of those without a site&lt;/li&gt;
&lt;li&gt;44% of B2B buyers will leave a website if there is no contact information available&lt;/li&gt;
&lt;li&gt;In 2020, 81% of all worldwide online traffic was generated through mobile phones (Statista, 2020)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Looks interesting? Now as you understand the thing and landed there we would like to show you a few important tips on how you can use the website for your business.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#website-%E2%86%92-presence-%E2%86%92-marketing-%E2%86%92-product-sales"&gt;
  &lt;/a&gt;
  Website → presence → marketing → product sales!
&lt;/h2&gt;

&lt;p&gt;We’ve already discussed &lt;a href="https://www.unikorns.work/magazine/how-to-make-your-website-visible-on-the-web"&gt;how to make your website be visible on the web&lt;/a&gt;, now let’s talk a bit about what this visibility can bring you. First of all in 2021 if you sell anything without a web integration you probably sell vegetables on the market (ha-ha, just kidding), and the statistics above clearly show us the customer path nowadays, it’s mostly online!&lt;/p&gt;

&lt;p&gt;There are a lot of different website types and a professional studio can definitely fit one to your needs. With a fitted website, your customer journey will be highly pleasant and you’ll have a lot of loyal customers.&lt;/p&gt;

&lt;p&gt;Did you think about the &lt;strong&gt;autonomy&lt;/strong&gt; the website can give you? Let’s imagine you have a sneakers store. You have to pay rent, you need to spend time and effort to promote it somehow on the outdoor, and suddenly the world pandemic starts…Not the best scenario, is it? With a help of a website, you’ll be safe and sound selling your sneakers online.&lt;/p&gt;

&lt;p&gt;With a help of a website, you can build &lt;strong&gt;loyalty and trust.&lt;/strong&gt; When you’re new to your customer they don’t really trust you, so you can place some reviews, feedback, and build trust using your website.&lt;/p&gt;

&lt;p&gt;With a help of new technologies such as Google Analytics, Hotjar, Answer the Public you can learn a lot about your customers, their age, location, hobbies, preferences, etc. We’ve described more in our article about SEO.&lt;br&gt;
You can create strong branding. Connecting the website and social media helps businesses strengthen brand awareness that is crucial to gain loyal customers.&lt;/p&gt;

&lt;p&gt;Using the website you can be unique and better than competitors. Analyze your targeted audience, then - your competitors. What does the TA need and competitors don’t offer? Just give it, communicate, place on your website.&lt;br&gt;
Your business is available 24/7. Thanks to website customers can reach you out any time, choose a product, get to know you better, interact with you, engage with your sales and content funnel.&lt;/p&gt;

&lt;p&gt;Boost your authority. Using, for example, blog. You can create content that will be valuable for your customers and appear on valuable sources (so-called backlinking). It will help you to promote your brand’s authority in an online space.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Of course, mostly those benefits are individual from business to business but they’re definitely significant and worth their price. So what about price, how much does it cost? Read our article about &lt;a href="https://www.unikorns.work/magazine/how-much-does-the-website-cost"&gt;website types &amp;amp; prices.&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cheers"&gt;
  &lt;/a&gt;
  Cheers!
&lt;/h2&gt;

&lt;p&gt;Are you looking for a professional lightning-fast website?&lt;br&gt;
Don’t hesitate to send us a note at &lt;a href="mailto:hello@unikorns.work"&gt;hello@unikorns.work&lt;/a&gt; or visit our website: &lt;a href="http://www.unikorns.work"&gt;www.unikorns.work&lt;/a&gt;&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>webdev</category>
      <category>marketing</category>
    </item>
    <item>
      <title>The Fetch API - The ultimate hacker's tool</title>
      <author>𝐋𝐄𝑽𝐈𝑨𝐓𝐇𝐀𝐍 Programming</author>
      <pubDate>Mon, 26 Apr 2021 13:29:08 +0000</pubDate>
      <link>https://dev.to/leviathanprogramming/the-fetch-api-the-ultimate-hacker-s-tool-57eg</link>
      <guid>https://dev.to/leviathanprogramming/the-fetch-api-the-ultimate-hacker-s-tool-57eg</guid>
      <description>&lt;p&gt;Many of you might use the fetch API and many of you might have not even heard of it.  It is an extremely powerful tool that you can use to use and validate files, submit get, post, put, and delete requests, and do so much more.&lt;br&gt;
Here are some examples of what you can do with the fetch API.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#1-file-validator"&gt;
  &lt;/a&gt;
  1. File Validator
&lt;/h3&gt;

&lt;p&gt;To test if a user is inputting an existing/valid file that exists somewhere on the internet, you can use the fetch API to see if it works or not.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;fileName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://api.dictionaryapi.dev/api/v2/entries/en_US/dog&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fileName&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Valid File&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;File does not exist.&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Whether you plug in an HTML file, and Image URL, or a JSON file, you can see if it is a valid file.  For example, if you wanted a user to put in a valid profile picture (URL), you can validate their image in less than ten lines of code.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-json-api-fetching-amp-using"&gt;
  &lt;/a&gt;
  2. JSON API fetching &amp;amp; using
&lt;/h3&gt;

&lt;p&gt;This is one of the most common uses of the fetch API.  You can get the API of a site and use it.  For example, youtube has an API for each video like Length, Author, Likes, etc.&lt;br&gt;
In this example, I will be fetching API from a dictionary.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;fileName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://api.dictionaryapi.dev/api/v2/entries/en_US/dog&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fileName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;The definition of the word 'dog' is &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;meanings&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;definitions&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;definition&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;File does not exist.&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now what I would do to view a JSON file is copy it, paste it into VSCode, and format it for better visibility.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5SWzSjuM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hxb4krvlj4b0b89ao15f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5SWzSjuM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hxb4krvlj4b0b89ao15f.png" alt="Formatted JSON"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#3-making-ajax-requests"&gt;
  &lt;/a&gt;
  3. Making AJAX requests
&lt;/h3&gt;

&lt;p&gt;Making AJAX requests is also something really amazing you can do with the fetch API.  Most sites have higher security levels but you can also make an ajax request from a different location if you have the right keys to do it.&lt;br&gt;
Here's an example of making a basic ajax request.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#ajax-form&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;submit&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;preventDefault&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;form&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;FormData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#ajax-form&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/ajax-endpoint&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;method&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;POST&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;body&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;form&lt;/span&gt;
    &lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;//do whatever is supposed to happen (e.g, displaying a new post, etc.)&lt;/span&gt;
    &lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's pretty much all I have to say.  If you like my posts, don't forget to follow me on dev and subscribe to me at my &lt;a href="https://leviathan-programming.cf"&gt;website&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks for reading.&lt;br&gt;
Happy Coding!&lt;/p&gt;

</description>
      <category>javscript</category>
      <category>api</category>
      <category>html</category>
      <category>webdev</category>
    </item>
    <item>
      <title>[7] time-management tips from tech people.</title>
      <author>Eleftheria Batsou</author>
      <pubDate>Mon, 26 Apr 2021 13:12:57 +0000</pubDate>
      <link>https://dev.to/eleftheriabatsou/7-time-management-tips-from-tech-people-lhp</link>
      <guid>https://dev.to/eleftheriabatsou/7-time-management-tips-from-tech-people-lhp</guid>
      <description>&lt;p&gt;TL:DR&lt;br&gt;
You probably know these tips.&lt;br&gt;
But you don't apply them in your real life.&lt;/p&gt;




&lt;p&gt;Many of these tips are not new. You heard them before. I talked about them before. But do you actually use them? Some things are very simple yet this doesn't mean they are easy. And sometimes you need to hear/see/read something multiple times until you actually get it. I hope you'll find these tips not only useful but also easy to implement.&lt;/p&gt;

&lt;p&gt;1.Stop procrastinating. What's the cause of procrastinating? Know the why then the how becomes easier. For example: watching movies, can lead to unrecognized depression.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Eat The Frog. Do your most ugly task first thing that day, (ugly meaning mentally demanding/requiring direct interaction with 'difficult' individuals, etc.) that you may even have been procrastinating upon.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;2.Schedule out your entire day and week and stick to the schedule. Create a to-do list. You could even try to have everything in Google calendar or another online calendar so you can have a better perspective. Similarly: Compartment time into blocks - some part of each day should be reserved for the most vital tasks. try using deadlines.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Having a consistent schedule, with consistent breaks as well, and 1 or 2 days off per week. After all, We are creatures of habit, cultivating the right habit works for most.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;3.Be proactive and make it a habit to finish what needs to be done first. Also, to do easiest first, so you have more tasks done and the blockers won't affect your minor tasks.&lt;/p&gt;

&lt;p&gt;4.Stay away from social media when you want to focus on a task. Close all applications not needed for that one task. Always Keep your mobile notifications turned off. If something is important enough people will call, if not you can check them later in your free time. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Stop unnecessary engagement on social media.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;5.Learn from mistakes, and don’t do these mistakes again.&lt;/p&gt;

&lt;p&gt;6.Focus on one thing at a time. Don't multitask.&lt;/p&gt;

&lt;p&gt;7.STAR your emails: Snooze, Trash, Archive or Reply.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Uuy47g7A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1619344399492/MiZwXy49p.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Uuy47g7A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1619344399492/MiZwXy49p.jpeg" alt="time2.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#if-you-think-you-dont-have-enough-time"&gt;
  &lt;/a&gt;
  If you think you don't have enough time:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Remeber we all have 24h.&lt;/li&gt;
&lt;li&gt;Track activities and see where do you spend the most time. Could you reduce it? Does it take too much time to wash the dishes? no, I don't think so... but do you watch YouTube/Netflix too much? probably yes...&lt;/li&gt;
&lt;li&gt;Try using the Pomodoro technique. &lt;/li&gt;
&lt;li&gt;Keep your phone away.&lt;/li&gt;
&lt;li&gt;First think. Then act.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Measure your time. Find insights from the measured data. You can't improve what you don't measure.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#another-tip-that-i-recently-learned-is"&gt;
  &lt;/a&gt;
  Another tip that I recently learned is:
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Manage your energy before managing your time, your time will be managed automatically.&lt;br&gt;
Energy management &amp;gt; Time management&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;But also don't forget to take breaks and reward yourself. You are not a machine or a robot. You need breaks!&lt;/p&gt;

&lt;p&gt;Thank you everyone for participating in  &lt;a href="https://twitter.com/BatsouElef/status/1385147108999630856"&gt;Twitter&lt;/a&gt; :)&lt;/p&gt;




&lt;p&gt;👋Hello, I'm Eleftheria, a developer, public speaker, and chocolate lover.&lt;/p&gt;

&lt;p&gt;🥰If you liked this post please share.&lt;/p&gt;

&lt;p&gt;🍩Would you care about buying me a coffee? You can do it &lt;a href="https://www.buymeacoffee.com/elef/"&gt;here&lt;/a&gt; but If you can't that's ok too!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.paypal.com/paypalme/eleftheriabatsou"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7QXiTcCu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1616336641314/ycZgZ44G3.gif" alt="cofGif.gif"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;🙏It would be nice to subscribe to my &lt;a href="https://www.youtube.com/c/EleftheriaBatsou"&gt;Youtube&lt;/a&gt; channel. It’s free and it helps to create more content.&lt;/p&gt;

&lt;p&gt;🌈&lt;a href="https://www.youtube.com/c/EleftheriaBatsou"&gt;Youtube&lt;/a&gt; | &lt;a href="https://codepen.io/EleftheriaBatsou"&gt;Codepen&lt;/a&gt; | &lt;a href="https://github.com/EleftheriaBatsou"&gt;GitHub&lt;/a&gt; | &lt;a href="https://twitter.com/BatsouElef"&gt;Twitter&lt;/a&gt; | &lt;a href="http://eleftheriabatsou.com/"&gt;Site&lt;/a&gt; | &lt;a href="https://www.instagram.com/elef_in_tech"&gt;Instagram&lt;/a&gt; &lt;/p&gt;

</description>
      <category>time</category>
      <category>timemanagement</category>
    </item>
    <item>
      <title>😴 Laziness isn't real</title>
      <author>Adam Coster</author>
      <pubDate>Mon, 26 Apr 2021 13:02:58 +0000</pubDate>
      <link>https://dev.to/adamcoster/laziness-isn-t-real-1oel</link>
      <guid>https://dev.to/adamcoster/laziness-isn-t-real-1oel</guid>
      <description>&lt;p&gt;For most of my life, I was held up as a model of Puritanical work ethic through all jillion years of my schooling (K-PhD). I was the shining example of not being "lazy".&lt;/p&gt;

&lt;p&gt;Right?&lt;/p&gt;

&lt;p&gt;The reality was that I had enough privilege and luck to be able to design my life such that my own particular brand of "laziness" had a minimum negative impact:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I had ADHD (but didn't know it), and the &lt;em&gt;hyperfocus&lt;/em&gt; aspect made it super easy to do things that I found interesting.&lt;/li&gt;
&lt;li&gt;I found ways to structure my life and goals so that I could neglect the stuff I wasn't interested in.&lt;/li&gt;
&lt;li&gt;My interests aligned with those that American society deems Important and Industrious (math, science, etc). If I wasn't interested in these things I probably wouldn't have been able to focus on them.&lt;/li&gt;
&lt;li&gt;My forgetfulness and social detachment were easily classified by everyone else as fitting the "Absent-Minded Professor" archetype. Consequently, I was granted permission out of the gate for many things that would be seen as "laziness" in others.&lt;/li&gt;
&lt;li&gt;I didn't have to surmount constant, systemic oppression. People believed in me &lt;em&gt;by default&lt;/em&gt;, and I didn't have to expend enormous energy just getting to the table. I was already at the table, with all my energy, ready to work.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This list could keep going and going, but that's probably enough to make the point that "industriousness" -- and therefore its opposite, "laziness" -- are &lt;em&gt;context-dependent&lt;/em&gt; properties that societally we treat as &lt;em&gt;context-independent&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;I've been thinking about this a lot recently, mostly triggered by learning that I had ADHD while also realizing I had developed a mild depression over the past couple of years.&lt;/p&gt;

&lt;p&gt;The depression was raising all of my energy thresholds. The thing about depression is that it makes you disinterested in things. The thing about hyperfocus is that it requires your interest. So depression gave me all the downsides of ADHD without the upside.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;(Note that hyperfocus is only an upside in the right context. It is often a huge downside because people with ADHD can't choose what they hyperfocus on.)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;For the first time in my life, I was having trouble doing things that &lt;em&gt;I wanted to do&lt;/em&gt;. This lead to the question... was I being &lt;em&gt;lazy&lt;/em&gt;? I certainly thought that I was, which didn't help matters any since that added guilt on top of all the rest. It wasn't until realizing I was depressed that I stepped back to think about the &lt;em&gt;context&lt;/em&gt; of laziness.&lt;/p&gt;

&lt;p&gt;Fortunately, there are more knowledgeable people than me who have already been thinking about this for years and years. Go read &lt;a href="https://humanparts.medium.com/laziness-does-not-exist-3af27e312d01"&gt;"Laziness Does Not Exist"&lt;/a&gt; by Devon Price (which was recently turned into a book on the topic). I hadn't seen this until a few weeks ago, which reminded me that I wanted to do some writing on the topic.&lt;/p&gt;

&lt;p&gt;Devon focuses that article on how mental health and privilege intersect with societal ideas of academic laziness. This is a super important aspect of the problem, which I defer to Devon and others and recommend that you go explore.&lt;/p&gt;

&lt;p&gt;What I want to do here is take a step back to ask what we &lt;em&gt;even mean&lt;/em&gt; when we think of ourselves or others as being "lazy".&lt;/p&gt;

&lt;p&gt;My bet is that if you try to define it you'll end up with something like:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Laziness: Avoiding doing something you're supposed to be doing, due to a character flaw.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We could spend hours fine-tuning that definition, but I think you'll have a hard time finding one that others would find accurate that also means something substantively different.&lt;/p&gt;

&lt;p&gt;We define laziness relative to "supposed to", and use it as a moralistic judgment about a person's fundamental being.&lt;/p&gt;

&lt;p&gt;This whole "supposed to" thing so often goes unexplored. &lt;em&gt;Why&lt;/em&gt; are you supposed to be doing these things in the first place? Why are you supposed to do them &lt;em&gt;in that way&lt;/em&gt;? Why &lt;em&gt;aren't&lt;/em&gt; you supposed to be doing these other things?&lt;/p&gt;

&lt;p&gt;Who gets to decide?&lt;/p&gt;

&lt;p&gt;I think that the message of the "Laziness Doesn't Exist" article is exactly right, which is that the moralistic idea of laziness is toxic, anti-human nonsense.&lt;/p&gt;

&lt;p&gt;When the word "lazy" comes up, treat it as the discovery of a &lt;em&gt;structural problem&lt;/em&gt;. By identifying someone (including yourself) as lazy, what you've actually done is uncovered a conflict between the context of &lt;em&gt;reality&lt;/em&gt; (how things &lt;em&gt;are&lt;/em&gt;) and the context of your &lt;em&gt;imagination&lt;/em&gt; (how things "&lt;em&gt;should be&lt;/em&gt;"). That means it's time to dig deep and find out what's really going on.&lt;/p&gt;

&lt;p&gt;If you find yourself thinking that you are being lazy, or that someone else is, here are some questions to help you guide you to a more humanistic and empathic interpretation and hopefully reveal your next steps:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Why this task?&lt;/li&gt;
&lt;li&gt;Why this person?&lt;/li&gt;
&lt;li&gt;Why might this task be particularly hard for this person?&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Example time!&lt;/p&gt;

&lt;p&gt;In college I spent most of my hours glued to science textbooks and doing related coursework and lab work. I never turned something in late, and usually had it done well in advance.&lt;/p&gt;

&lt;p&gt;For my non-science courses, on the other hand... I put in the least effort possible and delayed all tasks until the last possible moment. I was, in a word, "lazy." But... why?&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Why this task?&lt;/strong&gt; I took those courses because they were required to meet graduation requirements. I would have rather been in the lab, in another science class, or really anywhere else. Someone else decided this was important but didn't convince me of that.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Why this person?&lt;/strong&gt; My school required that &lt;em&gt;everyone&lt;/em&gt; take courses across a variety of disciplines. I had to because everyone did. It had nothing to do with my interests or goals.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Why is it so hard?&lt;/strong&gt; Turns out I had undiagnosed ADHD. The hyperfocus aspect allowed me to excel at the stuff I was interested in. The other aspects made it hard to do anything else. It has always been important to me to know &lt;em&gt;why&lt;/em&gt;, and "because!" has always been an answer that chaffed. Probably because the &lt;em&gt;why&lt;/em&gt; is what allowed me to become interested, which in turn allowed me to excel. For a person like me, something I don't see the importance of is something I can't pay attention to.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Importantly, the fact that laziness is the outcome of a structural problem &lt;em&gt;doesn't necessarily let you off the hook&lt;/em&gt; for not doing something. But taking out the nonsense moralistic component to get to the &lt;em&gt;why&lt;/em&gt; allows uncovering the responsible structural issues so that they can be addressed where possible, and without blame. Where you can't address them directly, explicit awareness still lets you work on management and coping strategies.&lt;/p&gt;

&lt;p&gt;The next time you start getting down on yourself about being "lazy", remember that &lt;em&gt;there's no such thing&lt;/em&gt; and then dig deep.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;A version of this article originally appeared in the &lt;a href="https://www.bscotch.net/post/devchat-13"&gt;DevChat Newsletter&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>discuss</category>
      <category>motivation</category>
      <category>mentalhealth</category>
    </item>
    <item>
      <title>How I got my first job with the help of DevCommunity☄️</title>
      <author>krishna kakade</author>
      <pubDate>Mon, 26 Apr 2021 12:57:09 +0000</pubDate>
      <link>https://dev.to/krishnakakade/how-i-got-my-first-job-with-the-help-of-devcommunity-1e6j</link>
      <guid>https://dev.to/krishnakakade/how-i-got-my-first-job-with-the-help-of-devcommunity-1e6j</guid>
      <description>&lt;p&gt;Firstly hello😊👋 all hope you're doing good and taking care of yourself. It's been a while I haven't written anything so in this article I will describe the story of how I got my first job.&lt;br&gt;
&lt;em&gt;Contents&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Background Story&lt;/li&gt;
&lt;li&gt;How the dev community helped me and some tips
Let's Start 
&lt;strong&gt;Background Story&lt;/strong&gt;
As I am a final year computer science graduate student in this phase of life you need to decide whether you're going to do a job or you're going for higher studies in my case since the sophomore year of my degree I started doing things that are going to help me to get a job but honestly I like being a student in this student phase you can experiment on so many things and also you don't have to worry about so many things like future and all you just need to do studies and learning new things/building new things as per interest and then rest this is it but things change as we grow. and also I like to do research on things and I also did some research kind of work here &lt;a href="https://krishnakakade.medium.com/movable-food-chamber-on-mars-deep-space-food-challenge-by-nasa-b4b76b987c8c?source=your_stories_page-------------------------------------"&gt;Basic Research Work&lt;/a&gt; 
because the research thing I thought about higher studies in some well known foreign universities but because of COVID and some financial reasons that thing I put on hold but in future 
at some point in my life, I will try to do research that can help humanity.
And then honestly I saw many students doing internships in the final semester I got many opportunities but I rejected those things because I wanted to experiment with the things and I did my overall reaction for my this decision is in between neutral.
after this thing, I took small steps towards getting a job those things I will explain in the upcoming paragraph.
&lt;strong&gt;How DevCommunity helped me to get a job&lt;/strong&gt;
Firstly I applied to 4-5 good companies with help of their careers section few startups also my resume got selected I given interviews also but in some cases in coding sections and in some case they rejected me because they are searching for experienced candidates.
Then I thought I am having 40credits in my dev account then I created the one listed below is an example of that 5 credit per listing
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hNKW1ZKr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m1v4j458otbg6suozokq.png" alt="Alt Text"&gt;
then for the next two-three days, I haven't got any response and then two companies contacted me then I gave an interview of one company after doing all the like interviews and stuff they said we need a more experienced candidate.
and then another company contacted me I was given first interview this time the interviewers and company folks are so helpful and kind also then said we will give you one coding assignment complete that and let us know then and then i completed that exercise and then directly they offered me the job as a &lt;em&gt;Jr FullStack developer&lt;/em&gt; 
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XyDZgr7I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mmi0aggnl7ump2kt77ze.png" alt="Alt Text"&gt;
Soon I am going to join this company that's good news in these tough times.
all the details of the company will reflect on Linkedin soon.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Some Tips&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;If you're going to apply for a dev job then build a project document your learnings on the blogs build something cool and contribute to the opensource projects and apply through careers sites or LinkedIn. 
and in the job we are going to use reactjs/meteor js/node/express/MongoDB
This is my new chapter of life.
stay safe take care
Thank you mother/grandmother and relatives and Devcommunity.
that's all I did have a great day:).
&lt;img src="https://i.giphy.com/media/QLvRBqfLXCphu/giphy.gif" alt=""&gt;
Note:- I know everyone is missing those trips vacations those happy times with family older grandparents i miss that too because of covid I can't go there I will go to meet my grandparents after and then Dalai lama(Hopefully as soon as possible) these are personal topics I am sharing here😊.&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>career</category>
      <category>advice</category>
      <category>watercooler</category>
      <category>webdev</category>
    </item>
    <item>
      <title>165+ Developer Resources I Discovered in 2020-2021</title>
      <author>Gedalya Krycer</author>
      <pubDate>Mon, 26 Apr 2021 12:56:03 +0000</pubDate>
      <link>https://dev.to/gedalyakrycer/165-developer-resources-i-discovered-in-2020-2021-6ma</link>
      <guid>https://dev.to/gedalyakrycer/165-developer-resources-i-discovered-in-2020-2021-6ma</guid>
      <description>&lt;p&gt;Since starting to actively code in 2020, I have come across many helpful resources.&lt;/p&gt;

&lt;p&gt;Some I have completed and others I still have in the queue. Hopefully, they will be helpful to you as well! &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#resource-types"&gt;
  &lt;/a&gt;
  Resource Types
&lt;/h4&gt;

&lt;p&gt;🎓 = Complete course on a subject(s) &lt;br&gt;
🧰 = Tool that makes development easier &lt;br&gt;
🧐 = Single article or video on a subject(s)&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#resources-lists"&gt;
  &lt;/a&gt;
  Resources Lists
&lt;/h1&gt;

&lt;h3&gt;
  &lt;a href="#-html"&gt;
  &lt;/a&gt;
  • &lt;a href="#htmlSection"&gt;HTML&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#-css"&gt;
  &lt;/a&gt;
  • &lt;a href="#cssSection"&gt;CSS&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#-javascript"&gt;
  &lt;/a&gt;
  • &lt;a href="#jsSection"&gt;JavaScript&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#-react"&gt;
  &lt;/a&gt;
  • &lt;a href="#reactSection"&gt;React&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#-wordpress"&gt;
  &lt;/a&gt;
  • &lt;a href="#wpSection"&gt;WordPress&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#-git-amp-cli"&gt;
  &lt;/a&gt;
  • &lt;a href="#gitSection"&gt;Git &amp;amp; CLI&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#-hosting"&gt;
  &lt;/a&gt;
  • &lt;a href="#hostingSection"&gt;Hosting&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#-optimizations"&gt;
  &lt;/a&gt;
  • &lt;a href="#optimizeSection"&gt;Optimizations&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#-databases"&gt;
  &lt;/a&gt;
  • &lt;a href="#databaseSection"&gt;Databases&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#-misc-web-dev"&gt;
  &lt;/a&gt;
  • &lt;a href="#miscSection"&gt;MISC Web Dev&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#-career"&gt;
  &lt;/a&gt;
  • &lt;a href="#careerSection"&gt;Career&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#-design"&gt;
  &lt;/a&gt;
  • &lt;a href="#designSection"&gt;Design&lt;/a&gt;
&lt;/h3&gt;




&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#html-resources"&gt;
  &lt;/a&gt;
  HTML Resources
&lt;/h1&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;#&lt;/th&gt;
&lt;th&gt;Title&lt;/th&gt;
&lt;th&gt;My Thoughts&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;&lt;a href="https://moz.com/learn/seo/alt-text"&gt;Alt Text&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Loved how it gave examples of what good alt text looks like.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.techonthenet.com/html/elements/doctype_tag.php"&gt;HTML: &lt;code&gt;&amp;lt;!DOCTYPE&amp;gt;&lt;/code&gt; tag&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Especially helpful when I was first learning HTML syntax&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.w3schools.com/html/html5_semantic_elements.asp"&gt;W3S HTML5 Semantic Elements&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Great quick intro to why everything shouldn't be in a &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element"&gt;MDN HTML elements reference&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Ready to go to the next level? This guide goes even deeper in the many HTML elements.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;&lt;a href="https://dev.opera.com/articles/new-structural-elements-in-html5/"&gt;New Structural Elements in HTML5&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This guide really helped me understand elements like &lt;code&gt;&amp;lt;figure&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;figcaption&amp;gt;&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;&lt;a href="https://websitesetup.org/html5-periodical-table/"&gt;HTML5 Periodical Table&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;I love how interactive, yet simplified this approach is to learning the elements.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;&lt;a href="https://javascript.info/script-async-defer"&gt;Scripts: async, defer&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This taught me different ways to load JS into html files, drastically improving performance.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;&lt;a href="https://learn.shayhowe.com/html-css/"&gt;Learn to Code HTML &amp;amp; CSS&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Took this course to prepare for the bootcamp. Great intro to HTML.&lt;/td&gt;
&lt;td&gt;🎓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;&lt;a href="https://learn.shayhowe.com/advanced-html-css/"&gt;Learn to Code Advanced HTML &amp;amp; CSS&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;I really enjoyed the above beginner course and looking forward to taking this one.&lt;/td&gt;
&lt;td&gt;🎓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=4HuAnM6b2d8"&gt;Derek Banas Handlebars Tutorial&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Not technically HTML, but it sure helps you write it efficiently. Looking forward to viewing this tutorial.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;&lt;a href="https://metatags.io/"&gt;metatags.io&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;One of my favorite generators for creating meta tags for multiple social media platforms.&lt;/td&gt;
&lt;td&gt;🧰&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;&lt;a href="https://css-tricks.com/a-complete-guide-to-links-and-buttons/"&gt;A Complete Guide to Links and Buttons&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Using the right tool for the right job is never more apparent in this deep-dive comparison article.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;&lt;a href="https://getwaves.io"&gt;getwaves.io&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Love this tool! Generate svg waves, to create curved separations for page sections!&lt;/td&gt;
&lt;td&gt;🧰&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="#top"&gt;Go to 🔝&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#css-resources"&gt;
  &lt;/a&gt;
  CSS Resources
&lt;/h1&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;#&lt;/th&gt;
&lt;th&gt;Title&lt;/th&gt;
&lt;th&gt;My Thoughts&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;&lt;a href="https://getbootstrap.com/docs/5.0/getting-started/introduction/"&gt;Bootstrap Documentation&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Even if I am not using the framework I love using their documentation for inspiration on common web components.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;td&gt;&lt;a href="https://css-tricks.com/specifics-on-css-specificity/"&gt;Specifics on CSS Specificity&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Great breakdown by CSS-Tricks and has nice graphic examples at the end.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;16&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.w3schools.com/css/css3_box-sizing.asp"&gt;CSS Box Sizing&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Very easy to approach example of how the box-model works.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;17&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.creativebloq.com/advice/tips-for-css-animation"&gt;12 tips for amazing CSS animation&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This has so many good tips on creating cool animations and making sure they are performant.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;18&lt;/td&gt;
&lt;td&gt;&lt;a href="https://designcode.io/css-layout-and-animations"&gt;CSS Layout and Animations&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Haven't taken this one yet, but can't wait to do so. The course designs are top notch.&lt;/td&gt;
&lt;td&gt;🎓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;19&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.youtube.com/playlist?list=PL4cUxeGkcC9iEwigam3gTjU_7IA3W2WZA"&gt;Net Ninja SASS Tutorial&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This was my first course on SASS and still refer back to it from time to time.&lt;/td&gt;
&lt;td&gt;🎓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;20&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=Zz6eOVaaelI"&gt;Learn Sass In 20 Minutes&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This is great for a first primer into what SASS is.&lt;/td&gt;
&lt;td&gt;🎓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;21&lt;/td&gt;
&lt;td&gt;&lt;a href="https://medium.com/@andrew_barnes/bem-and-sass-a-perfect-match-5e48d9bc3894"&gt;BEM and SASS: A Perfect Match&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This blew my mind when introduced how BEM and SASS could be used together.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;22&lt;/td&gt;
&lt;td&gt;&lt;a href="http://getbem.com/"&gt;getbem.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This gives an overview from the creators of the popular naming convention.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;23&lt;/td&gt;
&lt;td&gt;&lt;a href="https://css-tricks.com/bem-101/"&gt;CSS-Tricks BEM 101&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;I love the button examples that this article gives on how to use BEM.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;24&lt;/td&gt;
&lt;td&gt;&lt;a href="https://sparkbox.com/foundry/bem_by_example"&gt;BEM by Example &lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This explanation on BEM is really good, but I especially like how they have a short and full versions of the article.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;25&lt;/td&gt;
&lt;td&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/display"&gt;MDN Display Docs&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Everything you could ever want to know about the powerful &lt;code&gt;display&lt;/code&gt; property.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;26&lt;/td&gt;
&lt;td&gt;&lt;a href="https://css-tricks.com/a-couple-of-use-cases-for-calc/"&gt;A Couple of Use Cases for Calc()&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;calc()&lt;/code&gt; is one of the more powerful features in CSS and this article shows some great use cases for it.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;27&lt;/td&gt;
&lt;td&gt;&lt;a href="https://cssgrid.io"&gt;Wes Bos CSS Grid&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;You can't argue with free and that Wes Bos is one of the best teachers out there for development.&lt;/td&gt;
&lt;td&gt;🎓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;28&lt;/td&gt;
&lt;td&gt;&lt;a href="https://flexbox.io"&gt;Wes Bos Flexbox&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;See above, but this time for Flexbox&lt;/td&gt;
&lt;td&gt;🎓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;29&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.cssmatic.com"&gt;CSSmatic&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Collection of powerful css generators for gradients, border radius, noise texture and box shadows.&lt;/td&gt;
&lt;td&gt;🧰&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;30&lt;/td&gt;
&lt;td&gt;&lt;a href="https://css-tricks.com/almanac/properties/p/position/"&gt;CSS Tricks Position&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;If I could have access to only one resource for the &lt;code&gt;position&lt;/code&gt; property, this would be it.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;31&lt;/td&gt;
&lt;td&gt;&lt;a href="https://caniuse.com"&gt;Can I Use?&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This site lets you know the browser support for every property out there.&lt;/td&gt;
&lt;td&gt;🧰&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;32&lt;/td&gt;
&lt;td&gt;&lt;a href="https://yoksel.github.io/flex-cheatsheet/"&gt;yoksel Flex Cheatsheet&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;I love the layout and way it lets you visually preview the flexbox properties.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;33&lt;/td&gt;
&lt;td&gt;&lt;a href="https://code.tutsplus.com/tutorials/the-30-css-selectors-you-must-memorize--net-16048"&gt;The 30 CSS Selectors You Must Memorize&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;When I feel like getting into the weeds of CSS selectors, (sorry BEM) this is the article I refer back to.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;34&lt;/td&gt;
&lt;td&gt;&lt;a href="http://csslint.net"&gt;CSS Lint&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This tool will check your code and highlight any errors.&lt;/td&gt;
&lt;td&gt;🧰&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;35&lt;/td&gt;
&lt;td&gt;&lt;a href="https://systemfontstack.com"&gt;System Font Stack&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Predefined font fallback stacks that can be plugged into a project.&lt;/td&gt;
&lt;td&gt;🧰&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;36&lt;/td&gt;
&lt;td&gt;&lt;a href="https://neumorphism.io/#c0b5b5"&gt;Neumorphism.io&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This tool makes elements look like they are just under the surface of the page.&lt;/td&gt;
&lt;td&gt;🧰&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;37&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.udemy.com/course/advanced-css-and-sass/"&gt;Advanced CSS and Sass: Flexbox, Grid, Animations and More!&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Bought this amazing course on Udemy but haven't gotten a chance to take it yet...one day soon though!&lt;/td&gt;
&lt;td&gt;🎓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;38&lt;/td&gt;
&lt;td&gt;&lt;a href="https://css-scroll-shadows.now.sh/?bgColor=9d80d6&amp;amp;shadowColor=222222&amp;amp;pxSize=15"&gt;CSS Scroll Shadows&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This tool generates shadows that appear based on scroll position with just CSS!&lt;/td&gt;
&lt;td&gt;🧰&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="#top"&gt;Go to 🔝&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#javascript-resources"&gt;
  &lt;/a&gt;
  JavaScript Resources
&lt;/h1&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;#&lt;/th&gt;
&lt;th&gt;Title&lt;/th&gt;
&lt;th&gt;My Thoughts&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;39&lt;/td&gt;
&lt;td&gt;&lt;a href="https://javascript.info"&gt;javascript.info&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This is one of the complete and well explained overview of JS.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;40&lt;/td&gt;
&lt;td&gt;&lt;a href="https://codebeautify.org/jsvalidate"&gt;Code Beautify&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Before getting into ESlint, I really liked this tool to make sure my JS was all kosher.&lt;/td&gt;
&lt;td&gt;🧰&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;41&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.sitepoint.com/javascript-truthy-falsy/"&gt;Truthy and Falsy: When All is Not Equal in JavaScript&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This article is a great refernce for all the instances that a value might be considered true or false.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;42&lt;/td&gt;
&lt;td&gt;&lt;a href="https://youtu.be/8aGhZQkoFbQ"&gt;What the heck is the event loop anyway?&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;I have not watched this yet, but looking forward to it.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;43&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=s9wW2PpJsmQ"&gt;JavaScript Loops&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;If I could only watch one video to understand common JS loops, this would be the one.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;44&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.tutorialrepublic.com/javascript-tutorial/javascript-loops.php"&gt;JavaScript Loops&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;If I could only read one article to understand common JS loops, this would be the one.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;45&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.codecademy.com/learn/introduction-to-javascript/modules/learn-javascript-introduction/cheatsheet"&gt;Codecademy JS Cheatsheet&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Totally free and a nice collection of common JS elements and concepts.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;46&lt;/td&gt;
&lt;td&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String"&gt;MDN JS String&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Everything I'd ever want to know about strings and where to use them.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;47&lt;/td&gt;
&lt;td&gt;&lt;a href="https://medium.com/@debbie.obrien/json-parse-v-json-stringify-4b9d104c78d0"&gt;JSON Parse v JSON Stringify&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;These JSON functions confused me to no end. This article really helped explain the differences.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;48&lt;/td&gt;
&lt;td&gt;&lt;a href="https://developers.google.com/speed/libraries#jquery"&gt;Google Hosted Library jQuery&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Bookmark this link. :) It has the latest jQuery cdn script at all time.&lt;/td&gt;
&lt;td&gt;🧰&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;49&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/public-apis/public-apis/"&gt;Public APIs&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Great list of public APIs that you can use projects today!&lt;/td&gt;
&lt;td&gt;🧰&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;50&lt;/td&gt;
&lt;td&gt;&lt;a href="https://dmitripavlutin.com/javascript-event-delegation/"&gt;Javascript Event Delegation&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Awesome visual representation of what events are and how event delegation works.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;51&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.freecodecamp.org/news/var-let-and-const-whats-the-difference/"&gt;Var, Let, and Const – What's the Difference?&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Great introduction to the different variable types (and why &lt;code&gt;var&lt;/code&gt; is trash.)&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;52&lt;/td&gt;
&lt;td&gt;&lt;a href="https://dmitripavlutin.com/differences-between-arrow-and-regular-functions/"&gt;5 Differences Between Arrow and Regular Functions&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;I love how this demystifies how the two function types are used.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;53&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=0ik6X4DJKCc"&gt;JavaScript DOM Crash Course - Part 1&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Discover how to select elements in the DOM to be used with JS&lt;/td&gt;
&lt;td&gt;🎓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;54&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=mPd2aJXCZ2g"&gt;JavaScript DOM Crash Course - Part 2&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Learn the basics of how to traverse the DOM.&lt;/td&gt;
&lt;td&gt;🎓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;55&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=wK2cBMcDTss"&gt;JavaScript DOM Crash Course - Part 3&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Learn how to attach attach events to DOM elements.&lt;/td&gt;
&lt;td&gt;🎓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;56&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=i37KVt_IcXw"&gt;JavaScript DOM Crash Course - Part 4&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Build a small project based on the last 3 videos.&lt;/td&gt;
&lt;td&gt;🎓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;57&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.digitalocean.com/community/tutorials/introduction-to-the-dom"&gt;Introduction to the DOM&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Another great resource on the DOM, this quick article will get you up and running.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;58&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.youtube.com/playlist?list=PL4cUxeGkcC9jx2TTZk3IGWKSbtugYdrlu"&gt;Asynchronous Javascript&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;I forgot I bookmarked this until now. This an awesome free course by the Net Ninja.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;59&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.codewars.com/kata/54c27a33fb7da0db0100040e/train/javascript"&gt;Code Wars Kata&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This awesomely themed training tool lets you practice your sweet Javascript skills.&lt;/td&gt;
&lt;td&gt;🧰&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;60&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.sitepoint.com/event-bubbling-javascript/"&gt;What Is Event Bubbling in JavaScript?&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Another great resource on what event bubbling is and how to take advantage of it.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;61&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.sitepoint.com/javascript-event-delegation-is-easier-than-you-think/"&gt;JavaScript Event Delegation is Easier than You Think&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Learn how to trigger and listen to events correctly.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;62&lt;/td&gt;
&lt;td&gt;&lt;a href="http://www.quirksmode.org/js/events_properties.html#target"&gt;Which HTML element is the target of the event?&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Find out which element was interacted with.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;63&lt;/td&gt;
&lt;td&gt;&lt;a href="https://scotch.io/tutorials/understanding-scope-in-javascript"&gt;Understanding Scope in JavaScript&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Love the design of this site and it does a thorough job of explaining scope.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;64&lt;/td&gt;
&lt;td&gt;&lt;a href="https://medium.com/til-js/different-ways-of-writing-a-function-in-javascript-part-i-80d9a9e0138b"&gt;Different ways of writing a function in JavaScript&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Quick article on how to write a "Function Declaration" function.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;65&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.softauthor.com/javascript-image-slider-slideshow-carousel/"&gt;JavaScript Image Slider for Beginners&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This teaches how to build a simple image slider with Vanilla JS.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;66&lt;/td&gt;
&lt;td&gt;&lt;a href="https://testingjavascript.com"&gt;Learn the smart, efficient way to test any JavaScript application.&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;I have not taken this one yet, but looking forward to it—as it is such an important subject!&lt;/td&gt;
&lt;td&gt;🎓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;67&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.udemy.com/course/js-algorithms-and-data-structures-masterclass/"&gt;JavaScript Algorithms and Data Structures Masterclass&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;I am not a fan of algorithms, but that is why I have this course bookmarked!&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;68&lt;/td&gt;
&lt;td&gt;&lt;a href="https://teamtreehouse.com/library/ajax-basics-2"&gt;AJAX Basics&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Everything you ever wanted to know about making AJAX requests to a web server.&lt;/td&gt;
&lt;td&gt;🎓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;69&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.taniarascia.com/how-to-connect-to-an-api-with-javascript/"&gt;How to Connect to an API with JavaScript&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This article really helped me understand how API calls can be used in projects.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;70&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.taniarascia.com/how-to-use-json-data-with-php-or-javascript/"&gt;JSON Tutorial: Request API Data with JavaScript or PHP&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;It's so interesting to see how PHP and JavaScript handle JSON differently.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;71&lt;/td&gt;
&lt;td&gt;&lt;a href="https://barnabas.hashnode.dev/basics-of-javascript-reduce-method-ckdk81c6402y7zzs1f13p4x7t"&gt;Basics Of JavaScript Reduce Method&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This short article does such a great job of breaking down this powerful JS method.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;72&lt;/td&gt;
&lt;td&gt;&lt;a href="https://blog.logrocket.com/axios-or-fetch-api/#:~:text=To%20send%20data%2C%20fetch(),set%20in%20the%20options%20object"&gt;Axios or fetch(): Which should you use? &lt;/a&gt;&lt;/td&gt;
&lt;td&gt;I tend to reach for Axios, but this article does a great job explaining both.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;73&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.codecademy.com/learn/introduction-to-javascript"&gt;Learn JavaScript  Start &lt;/a&gt;&lt;/td&gt;
&lt;td&gt;I took this 30-hour course and it is amazing. Does a great job explaining the basics.&lt;/td&gt;
&lt;td&gt;🎓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;74&lt;/td&gt;
&lt;td&gt;&lt;a href="https://validatejs.org"&gt;validatejs.org&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Great tool to use on sign-up and login forms to make sure the user data is correct.&lt;/td&gt;
&lt;td&gt;🧰&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;75&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=ymmtEgp0Tuc"&gt;HTML5 Canvas Tutorial for Beginners&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;As a designer, this is one I am very excited about diving into.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="#top"&gt;Go to 🔝&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#react-resources"&gt;
  &lt;/a&gt;
  React Resources
&lt;/h1&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;#&lt;/th&gt;
&lt;th&gt;Title&lt;/th&gt;
&lt;th&gt;My Thoughts&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;76&lt;/td&gt;
&lt;td&gt;&lt;a href="https://ihatetomatoes.net/wp-content/uploads/2017/01/react-cheat-sheet-v1.pdf"&gt;React Cheat Sheet&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Quick and easy to skim cheat sheet on common React patterns and pieces.&lt;/td&gt;
&lt;td&gt;🧰&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;77&lt;/td&gt;
&lt;td&gt;&lt;a href="https://advancedreact.com"&gt;Fullstack Advanced  React &amp;amp; GraphQL&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Little pricer then Udemy, but no one teaches like Wes Bos. Hopefully will be able to purchase this one soon.&lt;/td&gt;
&lt;td&gt;🎓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;78&lt;/td&gt;
&lt;td&gt;&lt;a href="https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi?hl=en"&gt;React Developer Tools&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This lets you view props, components, renders and more right in Chrome DevTools&lt;/td&gt;
&lt;td&gt;🧰&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;79&lt;/td&gt;
&lt;td&gt;&lt;a href="https://react-icons.github.io/react-icons/"&gt;React Icons&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This is one of my favorite icon packages, because it has almost every major icon library out there.&lt;/td&gt;
&lt;td&gt;🧰&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;80&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.udemy.com/course/react-the-complete-guide-incl-redux/"&gt;React - The Complete Guide (incl Hooks, React Router, Redux)&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;One of my favorite courses and has prepared me so much to code in React.&lt;/td&gt;
&lt;td&gt;🎓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;81&lt;/td&gt;
&lt;td&gt;&lt;a href="https://daveceddia.com/usereducer-hook-examples/"&gt;Examples of the useReducer Hook&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This article / video breaks down a very cool hook lets you get a "Redux-like" store without downloading the library.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;82&lt;/td&gt;
&lt;td&gt;&lt;a href="https://mdxjs.com/getting-started"&gt;MDX Documentation&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This syntax combines JSX and Markdown in one!&lt;/td&gt;
&lt;td&gt;🎓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;83&lt;/td&gt;
&lt;td&gt;&lt;a href="https://reactfordesigners.com"&gt;React For Designers&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This features some great courses and beginner projects for getting started in React.&lt;/td&gt;
&lt;td&gt;🎓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;84&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/react-bootstrap/react-router-bootstrap"&gt;React Router Bootstrap&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Get the power of React Router navigation and the stylings of Bootstrap mixed into one.&lt;/td&gt;
&lt;td&gt;🧰&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;85&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/nfl/react-helmet"&gt;React Helmet&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;I really want to learn this package. It lets you add SEO meta tags to different "React Pages"&lt;/td&gt;
&lt;td&gt;🧰&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;86&lt;/td&gt;
&lt;td&gt;&lt;a href="https://web.dev/code-splitting-suspense/?utm_source=lighthouse&amp;amp;utm_medium=devtools"&gt;Code splitting with React.lazy and Suspense&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This really works! After implementing on my website my performance scores improved.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;87&lt;/td&gt;
&lt;td&gt;&lt;a href="https://react.rocks/tag/Validation"&gt;33 Validation Examples&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Awesome collection of form validation and demo code for React.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;88&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.reddit.com/r/learnjavascript/comments/ifqa03/37_reactjs_basics_useref_hook/"&gt;37 ReactJS basics useRef Hook&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Helpful video on how to work with the React hook &lt;code&gt;useRef&lt;/code&gt;.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;89&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/react-validation"&gt;npm react-validation&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Robust package to set up form validation. Need to dive deeper one day to learn all it can do.&lt;/td&gt;
&lt;td&gt;🧰&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;90&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/formsy/formsy-react/"&gt;Formsy React&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This package lets you build custom forms and it takes care of the validation for you.&lt;/td&gt;
&lt;td&gt;🧰&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;91&lt;/td&gt;
&lt;td&gt;&lt;a href="//styled-components.com"&gt;Styled Componets&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;A favorite with React users, allowing you to create CSS focused custom components.&lt;/td&gt;
&lt;td&gt;🧰&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;92&lt;/td&gt;
&lt;td&gt;&lt;a href="https://medium.com/@ttennant/react-inline-styles-and-media-queries-using-a-custom-react-hook-e76fa9ec89f6"&gt;React inline styles and media queries using a custom React Hook&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This article helped me mimic responsive styling within the JSX environment.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;93&lt;/td&gt;
&lt;td&gt;&lt;a href="https://react-bootstrap.github.io/getting-started/introduction/"&gt;React Bootstrap&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Really good documentation on using bootstrap with React.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;94&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=3zoIigieur0"&gt;React Redux Using Hooks&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Work with the modern Hook syntax for Redux. This saved me so much time!&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;95&lt;/td&gt;
&lt;td&gt;&lt;a href="https://stackoverflow.com/questions/37755997/why-cant-i-directly-modify-a-components-state-really"&gt;Why can't I directly modify a component's state, really?&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This explains so well why you must use &lt;code&gt;setState&lt;/code&gt; for changing state in class components.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;96&lt;/td&gt;
&lt;td&gt;&lt;a href="https://blog.bitsrc.io/react-communication-between-components-c0cfccfa996a"&gt;React: Communication Between Components&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Great deep dive into how React components pass data to one another.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;97&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.freecodecamp.org/news/how-to-identify-and-resolve-wasted-renders-in-react-cc4b1e910d10/"&gt;How to identify and resolve wasted renders in React&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Performance is everything and this teaches how to work with renders correctly.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;98&lt;/td&gt;
&lt;td&gt;&lt;a href="https://reactjs.org/docs/components-and-props.html"&gt;Components and Props&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;One of the core and most visited pages in the React Documentation for me.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;99&lt;/td&gt;
&lt;td&gt;&lt;a href="https://medium.com/@samueldinesh/setting-up-redux-devtools-a-simple-guide-3b386a6254fa"&gt;Setting Up Redux DevTools&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Redux DevTools is not the most straightforward thing for me to set up, but this helped explain the process well.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;100&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.reddit.com/r/learnjavascript/comments/ipfikv/stuck_with_learning_react_redux_i_am_making_a/?utm_source=share&amp;amp;utm_medium=ios_app&amp;amp;utm_name=iossmf"&gt;React Redux Easy Peasy Course&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Haven't watched this beginner course on Redux yet, but heard good things.&lt;/td&gt;
&lt;td&gt;🎓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;101&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.gatsbyjs.org/"&gt;Gatsby JS&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;So excited to work with this static site generator very soon.&lt;/td&gt;
&lt;td&gt;🧰&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;102&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.udemy.com/course/mern-stack-front-to-back/"&gt;MERN Stack Front To Back&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Purchased this course but have not taken it yet. Very excited to do so soon as it covers so much.&lt;/td&gt;
&lt;td&gt;🎓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;103&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.udemy.com/course/react-native-the-practical-guide/"&gt;React Native The Practical Guide&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;In the middle of taking this now and love all the detail it goes into.&lt;/td&gt;
&lt;td&gt;🎓&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="#top"&gt;Go to 🔝&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#wordpress-resources"&gt;
  &lt;/a&gt;
  WordPress Resources
&lt;/h1&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;#&lt;/th&gt;
&lt;th&gt;Title&lt;/th&gt;
&lt;th&gt;My Thoughts&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;104&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=-h7gOJbIpmo"&gt;How to Create a Custom WordPress Theme - Full Course&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Wonderful introduction to custom theming in WordPress.&lt;/td&gt;
&lt;td&gt;🎓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;105&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.youtube.com/playlist?list=PLC5E59DD6D84D34DC"&gt;WordPress Basics&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;All the videos are very well broken out.&lt;/td&gt;
&lt;td&gt;🎓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;106&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.youtube.com/playlist?list=PLriKzYyLb28nUFbe0Y9d-19uVkOnhYxFE"&gt;WordPress 101 for Beginner Developers&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Another great playlist on the basics of WordPress.&lt;/td&gt;
&lt;td&gt;🎓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;107&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.youtube.com/playlist?list=PLriKzYyLb28kpEnFFi9_vJWPf5-_7d3rX"&gt;Create a Premium WordPress Theme&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Haven't taken this one, but there are a lot of helpful video topics in this playlist.&lt;/td&gt;
&lt;td&gt;🎓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;108&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.youtube.com/playlist?list=PLLnpHn493BHGACfv4rC29kJamYMtw34D9"&gt;Customizing WordPress&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Really helpful playlist on advanced WordPress theme topics.&lt;/td&gt;
&lt;td&gt;🎓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;109&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.udemy.com/course/wordpress-intermediate/"&gt;WordPress Intermediate Skills&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;I like that this course covers working with a server as well.&lt;/td&gt;
&lt;td&gt;🎓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;110&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=OriRDlUbAFg"&gt;How to install WordPress on your local computer with MAMP (Mac)&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This video taught me how to work with WordPress locally on my machine.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;111&lt;/td&gt;
&lt;td&gt;&lt;a href="https://wphierarchy.com/"&gt;wphierarchy.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This website does a great job in explaining all the different file types in WordPress and their importance levels.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;112&lt;/td&gt;
&lt;td&gt;&lt;a href="https://developer.wordpress.org/themes/basics/including-css-javascript/"&gt;Including CSS &amp;amp; JavaScript&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Documentation on using CSS &amp;amp; JS in WordPress.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="#top"&gt;Go to 🔝&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#git-amp-cli-resources"&gt;
  &lt;/a&gt;
  Git &amp;amp; CLI Resources
&lt;/h1&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;#&lt;/th&gt;
&lt;th&gt;Title&lt;/th&gt;
&lt;th&gt;My Thoughts&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;113&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.atlassian.com/git/tutorials/comparing-workflows"&gt;Comparing Git Workflows&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This was so helpful in understanding there are different Git workflows for each team need.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;114&lt;/td&gt;
&lt;td&gt;&lt;a href="https://commandlinepoweruser.com/"&gt;Command Line Power User&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Can't wait to become a true terminal master with this course.&lt;/td&gt;
&lt;td&gt;🎓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;115&lt;/td&gt;
&lt;td&gt;&lt;a href="https://learngitbranching.js.org/"&gt;Learn Git Branching&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This interactive course was so helpful in understanding how branching worked.&lt;/td&gt;
&lt;td&gt;🎓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;116&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=oFYyTZwMyAg"&gt;GITHUB PULL REQUEST, Branching, Merging &amp;amp; Team Workflow&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Great overview of how it looks to work with a team in a Git workflow.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;117&lt;/td&gt;
&lt;td&gt;&lt;a href="https://guides.github.com/features/mastering-markdown/"&gt;Mastering Markdown&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Such a great resource for seeing common Markdown syntax and upgrading Git README&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;118&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.quora.com/What-is-the-difference-between-the-add-and-commit-commands-in-Git"&gt;Mastering Markdown&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Super helpful when I first started using Git for version control.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;119&lt;/td&gt;
&lt;td&gt;&lt;a href="https://reactsensei.com/basic-git-commands/"&gt;Basic Git Commands&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Another great cheat sheet on common git commands.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;120&lt;/td&gt;
&lt;td&gt;&lt;a href="https://guides.github.com/activities/hello-world/"&gt;GitHub Guide Hello World&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Get started with Github with this very user friendly guide.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;121&lt;/td&gt;
&lt;td&gt;&lt;a href="http://rogerdudler.github.io/git-guide/"&gt;Git Commands&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Very visual approach for common Git commands.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;122&lt;/td&gt;
&lt;td&gt;&lt;a href="https://shortcode.dev/git-cheatsheet#git-cheatsheet"&gt;Short Code Git Cheat Sheet&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Searchable cheatsheet&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;123&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.codecademy.com/articles/command-line-commands"&gt;List of Command Line Commands&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Awesome list by Codecademy on many CLI terminal commands.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="#top"&gt;Go to 🔝&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#hosting-resources"&gt;
  &lt;/a&gt;
  Hosting Resources
&lt;/h1&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;#&lt;/th&gt;
&lt;th&gt;Title&lt;/th&gt;
&lt;th&gt;My Thoughts&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;124&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.netlify.com/products/build/"&gt;Netlify Build&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Awesome Netlify process to trigger builds to the live site once a specific branch is updated.&lt;/td&gt;
&lt;td&gt;🧰&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;125&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.youtube.com/playlist?list=PLzlG0L9jlhEPMR8haUPkxj2hJ_3jh5qa6"&gt;Netlify Tutorials&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Free course to get up and running with Netlify hosting&lt;/td&gt;
&lt;td&gt;🎓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;126&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=6ElQ689HRcY"&gt;Simple Contact Form Submission With Netlify&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Easy tutorial on how to set up Netlify as the mail server.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;127&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=6r9NJDHiJwA"&gt;PHPStorm FTP Server Connection to Remote Host &lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Tutorial on how to connect with SFTP or FTP with PHPStorm. (It makes it a joy compared to VS Code)&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="#top"&gt;Go to 🔝&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#optimization-resources"&gt;
  &lt;/a&gt;
  Optimization Resources
&lt;/h1&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;#&lt;/th&gt;
&lt;th&gt;Title&lt;/th&gt;
&lt;th&gt;My Thoughts&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;128&lt;/td&gt;
&lt;td&gt;&lt;a href="https://teamtreehouse.com/library/front-end-web-optimization-workflow"&gt;Front End Web Optimization Workflow&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Can't wait to take this one and learn about CDNs and optimizing assets&lt;/td&gt;
&lt;td&gt;🎓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;129&lt;/td&gt;
&lt;td&gt;&lt;a href="https://yoast.com/rel-canonical/"&gt;&lt;code&gt;rel=canonical&lt;/code&gt;: the ultimate guide&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Such a good description of what Canonical urls are and where to use them.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;130&lt;/td&gt;
&lt;td&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/Performance/Lazy_loading"&gt;MDN Lazy Loading&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Great place to start to learn how Lazy loading works.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;131&lt;/td&gt;
&lt;td&gt;&lt;a href="https://hackernoon.com/seo-web-development-tutorial-for-beginners-7273308b6448"&gt;SEO Web Development Tutorial for Beginners&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Awesome intro for what SEO is and how to approach it.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;132&lt;/td&gt;
&lt;td&gt;&lt;a href="https://moz.com/learn/seo/page-speed"&gt;MOZ Page Speed&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This shows a bunch of areas to check for poor page speeds.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;133&lt;/td&gt;
&lt;td&gt;&lt;a href="https://remysharp.com/2015/10/14/the-art-of-debugging"&gt;The Art of Debugging&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Fascinating deep dive on the process of debugging a website and tools to help.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="#top"&gt;Go to 🔝&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#databases-resources"&gt;
  &lt;/a&gt;
  Databases Resources
&lt;/h1&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;#&lt;/th&gt;
&lt;th&gt;Title&lt;/th&gt;
&lt;th&gt;My Thoughts&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;134&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.freecodecamp.org/news/introduction-to-mongoose-for-mongodb-d2a7aa593c57"&gt;Introduction to Mongoose for MongoDB&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This article thoroughly explains what MongoDB is and why it is essential to use Mongoose with it.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;135&lt;/td&gt;
&lt;td&gt;&lt;a href="https://medium.com/@atingenkay/restful-routes-what-are-they-8fe221521bb"&gt;Restful Routes, What are they?&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;I did not fully understand RESTful API calls until reading this.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;136&lt;/td&gt;
&lt;td&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Status"&gt;HTTP response status codes&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Code 418 is the best. ;)&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;137&lt;/td&gt;
&lt;td&gt;&lt;a href="http://www.passportjs.org/docs/"&gt;Passport&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Great tool to use for full-stack user authentication&lt;/td&gt;
&lt;td&gt;🧰&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="#top"&gt;Go to 🔝&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#misc-web-dev-resources"&gt;
  &lt;/a&gt;
  MISC Web Dev Resources
&lt;/h1&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;#&lt;/th&gt;
&lt;th&gt;Title&lt;/th&gt;
&lt;th&gt;My Thoughts&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;138&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=OdQtww8ZfEw"&gt;Working with Code Written by Someone Else&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Wonderful tips in how to explore a new codebase.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;139&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.tablesgenerator.com/markdown_tables"&gt;Markdown Table Generator&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This is how I made the tables in this post ;)&lt;/td&gt;
&lt;td&gt;🧰&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;140&lt;/td&gt;
&lt;td&gt;&lt;a href="https://facebook.github.io/jest/"&gt;Jest&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;One of the industry testing frameworks used for test driven development.&lt;/td&gt;
&lt;td&gt;🧰&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;141&lt;/td&gt;
&lt;td&gt;&lt;a href="https://get.foundation/emails.html"&gt;Foundation for Emails&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This framework makes it easy to code responsive HTML emails.&lt;/td&gt;
&lt;td&gt;🧰&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;142&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.youtube.com/playlist?list=PLR_ZJO3q73HalAe5sRs7ByjHvptmbflsL"&gt;Zurb Foundation for Email Course&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Great course for the above email framework.&lt;/td&gt;
&lt;td&gt;🎓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;143&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.npmjs.com/package/dotenv"&gt;NPM dotenv&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This package lets you secure sensitive information like API keys within projects.&lt;/td&gt;
&lt;td&gt;🧰&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;144&lt;/td&gt;
&lt;td&gt;&lt;a href="https://typing.io/"&gt;typing.io&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;I used this before the bootcamp to practice typing code faster.&lt;/td&gt;
&lt;td&gt;🧰&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;145&lt;/td&gt;
&lt;td&gt;&lt;a href="https://developers.google.com/maps/documentation/"&gt;Google Maps Platform Documentation&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Api documentation for using Google Maps in projects.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;146&lt;/td&gt;
&lt;td&gt;&lt;a href="https://auth0.com/blog/what-is-and-how-does-single-sign-on-work/"&gt;What Is and How Does Single Sign-On Authentication Work?&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This was so helpful in helping me understand at a high-level how SSO works&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;147&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.searchenginejournal.com/subdomains-vs-subfolders-seo/239795/#close"&gt;Subdomains vs. Subfolders: Which Is Better for SEO &amp;amp; Why?&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Very interesting article on how to structure loosely related web content.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;148&lt;/td&gt;
&lt;td&gt;&lt;a href="https://favicon.io/favicon-generator/"&gt;favicon.io&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This is my favorite Favicon generator (small icon in browser tab) and has a great interface.&lt;/td&gt;
&lt;td&gt;🧰&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;149&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/wesbos/eslint-config-wesbos"&gt;Wes Bos Eslint Config&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Download the settings that Wes Bos uses for linting his code.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;150&lt;/td&gt;
&lt;td&gt;&lt;a href="https://docs.emmet.io/cheat-sheet/"&gt;Emmet Cheat Sheet&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Super helpful reference to common Emmet commands in multiple languages&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;151&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.jetbrains.com/phpstorm/documentation/"&gt;Learn Jetbrains PHPStorm IDE&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This became my favorite IDE and love all their resources on how to use it correctly.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;152&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=yc3J2TGreBo"&gt;Agile Scrum Development Process and How UI/UX Design Fit In&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Really good overview of how Agile workflows are set up.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="#top"&gt;Go to 🔝&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#career-resources"&gt;
  &lt;/a&gt;
  Career Resources
&lt;/h1&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;#&lt;/th&gt;
&lt;th&gt;Title&lt;/th&gt;
&lt;th&gt;My Thoughts&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;153&lt;/td&gt;
&lt;td&gt;&lt;a href="https://medium.com/@archie4321/the-golden-guide-to-landing-a-developer-position-c78ad34a965f"&gt;The Golden Guide to Landing a Developer Position&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;An incredible guide on preparing hiring material like resumes to interviewing with examples.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;154&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.coursera.org/learn/learning-how-to-learn?action=enroll"&gt;Learn How To Learn&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Can't wait to take this one and learn how to be a better "learner".&lt;/td&gt;
&lt;td&gt;🎓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;155&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.glassdoor.com/blog/common-interview-questions/"&gt;Glassdoor Common Interview Questions&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;List of 50 questions that can be asked in interviews&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;156&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.themuse.com/advice/how-to-tackle-something-you-have-no-idea-how-to-do"&gt;How to Tackle Something You Have No Idea How to Do&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This is one of my favorite articles and I often refer back to it for motivation.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;157&lt;/td&gt;
&lt;td&gt;&lt;a href="https://coding-bootcamp-whiteboarding-algorithms.readthedocs-hosted.com/en/latest/modules/practicing-for-the-whiteboarding-interview/"&gt;Practice for the Whiteboarding Interview&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Helpful links and guide to doing a Whiteboarding interview.&lt;/td&gt;
&lt;td&gt;🎓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;158&lt;/td&gt;
&lt;td&gt;&lt;a href="https://m.youtube.com/watch?v=XKu_SEDAykw&amp;amp;feature=youtu.be"&gt;How to: Work at Google — Example Coding/Engineering Interview&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Very interesting to see the level of interviewing at Google.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;159&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.jobscan.co/"&gt;jobscan.co&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Helpful site that optimizes cover letters and resumes.&lt;/td&gt;
&lt;td&gt;🧰&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="#top"&gt;Go to 🔝&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#design-resources"&gt;
  &lt;/a&gt;
  Design Resources
&lt;/h1&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;#&lt;/th&gt;
&lt;th&gt;Title&lt;/th&gt;
&lt;th&gt;My Thoughts&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;160&lt;/td&gt;
&lt;td&gt;&lt;a href="https://teamtreehouse.com/library/rapid-website-prototyping"&gt;Rapid Website Prototyping&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Learning how to quickly mockup feature ideas and this covers many important areas of how to do it.&lt;/td&gt;
&lt;td&gt;🎓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;161&lt;/td&gt;
&lt;td&gt;&lt;a href="https://teamtreehouse.com/tracks/ux-design"&gt;Tree House UX Design&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This course covers so many important UX subjects and how to think through design.&lt;/td&gt;
&lt;td&gt;🎓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;162&lt;/td&gt;
&lt;td&gt;&lt;a href="https://youtube.com/playlist?list=PLXC_gcsKLD6n7p6tHPBxsKjN5hA_quaPI"&gt;Flux Free Web Design Course 2020&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;One of the best free courses in the basics of Web Design.&lt;/td&gt;
&lt;td&gt;🎓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;163&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=H18PvAKtkSY&amp;amp;list=PLxjRS2tWLJdE-FS4tpsfyjN3eF_XxkbAY&amp;amp;index=11"&gt;Build it in Figma: Design a responsive website&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This video goes deep into using auto layout in Figma.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;164&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=rfAdJYLRVqI&amp;amp;list=PLxjRS2tWLJdE-FS4tpsfyjN3eF_XxkbAY&amp;amp;index=9"&gt;In the file: A look into building selection colors and OpenType&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Haven't seen this one yet, but can't wait to go through it.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;165&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=TkKm87Crfns"&gt;In the File: Making data-informed design decisions&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Such a fascinating webinar on how big brands take data into account when creating designs or making changes.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;166&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=8RFDPC_Fsnc"&gt;In the File: Developer and designer, working together to build design systems&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Another one I can't wait to watch. Truly effective teams have clear communication between design and development early in the process.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;167&lt;/td&gt;
&lt;td&gt;&lt;a href="https://youtu.be/WPRD8_L6hf0"&gt;Build it in Figma: Design a responsive website navigation&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;There are many design tidbits and Figma tricks backed into this one.&lt;/td&gt;
&lt;td&gt;🧐&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="#top"&gt;Go to 🔝&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#nice-job-making-it-to-the-end"&gt;
  &lt;/a&gt;
  Nice job making it to the end!
&lt;/h3&gt;

&lt;p&gt;Here is a happy dance Gif to celebrate upgrading your sweet skills!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DTK4dbnX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.gifer.com/CFSn.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DTK4dbnX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.gifer.com/CFSn.gif" alt="Napoleon Dynomite Happy Dance"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;em&gt;Thumbnail designed with &lt;a href="https://www.adobe.com/"&gt;photoshop&lt;/a&gt; and &lt;a href="https://unsplash.com/photos/w7ZyuGYNpRQ"&gt;unsplash&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>webdev</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Remote Pair Programming with Visual Studio Code and Live Share</title>
      <author>Tyler Hawkins</author>
      <pubDate>Mon, 26 Apr 2021 12:55:35 +0000</pubDate>
      <link>https://dev.to/thawkin3/remote-pair-programming-with-visual-studio-code-and-live-share-4gho</link>
      <guid>https://dev.to/thawkin3/remote-pair-programming-with-visual-studio-code-and-live-share-4gho</guid>
      <description>&lt;p&gt;Remote work has killed pair programming. Or has it? If anything, it certainly presents an interesting challenge for pair programming when the two developers involved are no longer sitting side by side in the same room. But can you still successfully pair program in this world of remote work?&lt;/p&gt;

&lt;p&gt;In this article, we’ll look at some of the benefits of pair programming and how you can use technology like the &lt;a href="https://marketplace.visualstudio.com/items?itemName=MS-vsliveshare.vsliveshare"&gt;Visual Studio Code Live Share extension&lt;/a&gt; to continue to pair program remotely with your colleagues.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#what-is-pair-programming"&gt;
  &lt;/a&gt;
  What is Pair Programming?
&lt;/h2&gt;

&lt;p&gt;Let’s start with a quick definition. We’ll define pair programming as a development technique in which two developers write code at a single workstation. Typically this means only one computer and one keyboard. The developer at the keyboard “drives” while the developer without the keyboard “observes” or “navigates”.&lt;/p&gt;

&lt;p&gt;The driver provides the hands that write the code. The observer-navigator provides the strategic decision-making for which files to look at and which problems to tackle. The observer-navigator also reviews the code that is being written and helps catch simple typos and other mistakes in real time. The two developers switch roles at some agreed-upon interval, typically every 30 minutes or so.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#benefits-of-pair-programming"&gt;
  &lt;/a&gt;
  Benefits of Pair Programming
&lt;/h2&gt;

&lt;p&gt;Now, why on earth would anyone do this? Two developers working on the same thing at the same time? Surely that’s a waste of time. Couldn’t you produce twice as much code if the developers were working independently on their own machines?&lt;/p&gt;

&lt;p&gt;These are certainly valid arguments and ones worth examining. So let’s look at the benefits of pair programming. What good do we get from two developers working together?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#teaching-and-mentoring-opportunities"&gt;
  &lt;/a&gt;
  Teaching and Mentoring Opportunities
&lt;/h3&gt;

&lt;p&gt;First off, pair programming provides a perfect teaching opportunity. It’s rare that the two developers are at exactly the same skill level. Instead, one is usually more senior and the other more junior. Pair programming allows the senior engineer to mentor the junior engineer as they work on real problems together. The junior engineer can learn how the senior engineer reasons through a problem, how they organize their code, how they name their variables, and how they troubleshoot issues when things go wrong. It’s also important to remember that the mentoring and teaching is a two-way street.&lt;/p&gt;

&lt;p&gt;And seniors, don’t underestimate your junior engineers. They may have a fresh perspective on the problems at hand too. And who knows, you both may end up learning each other’s favorite IDE shortcuts and tricks.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#knowledge-sharing"&gt;
  &lt;/a&gt;
  Knowledge Sharing
&lt;/h3&gt;

&lt;p&gt;Second, pair programming allows you to share knowledge regarding how the system is architected. When developers work in individual silos, you’ll often have one engineer code a feature from start to finish. Even though code reviews are done throughout the development process, having a single engineer be the main point of contact on a project results in that one person having the most understanding and knowledge of the final solution. Pair programming, on the other hand, results in two developers both gaining a deeper understanding of their code.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#error-prevention"&gt;
  &lt;/a&gt;
  Error Prevention
&lt;/h3&gt;

&lt;p&gt;Third, pair programming makes it easy to catch simple mistakes and typos faster with a second pair of eyes. You’ll be surprised how much faster the two of you can find the missing semicolon or why your code won’t compile when you have a second person watching every character you type.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#interpersonal-communication-skill-improvement"&gt;
  &lt;/a&gt;
  Interpersonal Communication Skill Improvement
&lt;/h3&gt;

&lt;p&gt;Fourth, pair programming is a great opportunity for engineers to develop their interpersonal skills. Can you talk through a solution with another person? Can you bounce ideas off each other? Can you clearly communicate your ideas in a way that another engineer can understand? Can you tactfully guide someone away from a poor solution if you see a better one? And perhaps most importantly, how do you respond to feedback and correction on your own ideas? These soft skills are valuable for engineers at any level.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#defect-reduction-and-increased-productivity"&gt;
  &lt;/a&gt;
  Defect Reduction and Increased Productivity
&lt;/h3&gt;

&lt;p&gt;Finally, and perhaps most interestingly, &lt;a href="https://collaboration.csc.ncsu.edu/laurie/Papers/XPSardinia.PDF"&gt;studies have shown&lt;/a&gt; that when engineers pair program they write better code with fewer bugs. The extra development-time cost of having two people work together is estimated at 15%. But when you think about all the time saved through fewer customer support issues and less time spent debugging, you may find that pair programming actually &lt;em&gt;increases&lt;/em&gt; productivity!&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#pair-programming-remotely"&gt;
  &lt;/a&gt;
  Pair Programming Remotely
&lt;/h2&gt;

&lt;p&gt;So, we’ve established that pair programming has several benefits. But how do we pair program remotely? COVID-19 has forced many companies to adopt a remote work policy, even those companies that may have initially been very averse to the idea of remote work.&lt;/p&gt;

&lt;p&gt;As for me, I’ve typically worked at the office, but I’ve been working remotely since March 2020, and I’m loving it! Zoom meetings and Slack messages have become my default methods of communication. But what about for pair programming?&lt;/p&gt;

&lt;p&gt;One option might look something like this:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Dev 1 and Dev 2 get on a video call together&lt;/li&gt;
&lt;li&gt;Dev 1 starts as the driver, and Dev 2 starts as the observer-navigator&lt;/li&gt;
&lt;li&gt;Dev 1 shares their screen and starts writing code while Dev 2 navigates&lt;/li&gt;
&lt;li&gt;When it’s time to switch roles, Dev 1 commits what they’ve written and pushes it to a branch on the remote repository&lt;/li&gt;
&lt;li&gt;Dev 2 pulls down the latest code from the branch&lt;/li&gt;
&lt;li&gt;Dev 2 shares their screen and starts writing code while Dev 1 navigates&lt;/li&gt;
&lt;li&gt;When it’s time to switch roles again, Dev 2 commits what they’ve written and pushes it to the branch&lt;/li&gt;
&lt;li&gt;Repeat steps 3–7 until the pair programming session is over&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Those steps look pretty similar to what you might see when pair programming in-person, with the exception of the video call and screen sharing. The other notable difference is the need to commit the code and push it up in order for the other person to have the latest code. When pair programming in person, you don’t have that same challenge, as you’re both working on the same computer.&lt;/p&gt;

&lt;p&gt;So that begs the question: Is there any way to collaborate without having to commit your code in between switching roles?&lt;/p&gt;

&lt;p&gt;The answer: Yes, there is! Visual Studio Code (VS Code) has a handy extension called Live Share that helps facilitate the remote pair programming process. Live Share allows you to share your code while others follow along in VS Code on their own computer. But that’s not all — you can even share your localhost server or a terminal instance!&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#how-to-use-vs-code-live-share"&gt;
  &lt;/a&gt;
  How to Use VS Code Live Share
&lt;/h2&gt;

&lt;p&gt;You can find the VS Code Live Share extension for free on the &lt;a href="https://marketplace.visualstudio.com/items?itemName=MS-vsliveshare.vsliveshare"&gt;Visual Studio marketplace&lt;/a&gt;. After clicking the Install button and then restarting your VS Code application, you’re ready to start collaborating! They have excellent installation instructions and a quick start guide on their marketplace listing at the same link as above, so I’d highly recommend following along there.&lt;/p&gt;

&lt;p&gt;To experiment with this extension, &lt;a href="https://github.com/thawkin3/vs-code-live-share-demo"&gt;I created a simple Node.js project&lt;/a&gt; hosted on &lt;a href="https://www.heroku.com/"&gt;Heroku&lt;/a&gt;. I opened the project directory in VS Code on my own machine, clicked the Live Share icon on the left-hand side of the screen, and then clicked Share to create a new collaboration session.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--y5CWYXeE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q9ekasvti72kvf9p3rcr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y5CWYXeE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q9ekasvti72kvf9p3rcr.png" alt="Click the Share button to start a new collaboration session"&gt;&lt;/a&gt;&lt;/p&gt;
Click the Share button to start a new collaboration session



&lt;p&gt;Since this was my first time using the extension, I was prompted to sign in, which I did through GitHub.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Kgs-ri3s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wcoyshlifqy6z9uy5ip2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Kgs-ri3s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wcoyshlifqy6z9uy5ip2.png" alt="Sign in with your GitHub or Microsoft account"&gt;&lt;/a&gt;&lt;/p&gt;
Sign in with your GitHub or Microsoft account



&lt;p&gt;After signing in, I was given a collaboration session URL which I could then share with up to 30 people at a time.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--y3g_msLH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4ugme4jew2qdfkwjqyyf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y3g_msLH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4ugme4jew2qdfkwjqyyf.png" alt="Send the collaboration session URL to anyone you’d like"&gt;&lt;/a&gt;&lt;/p&gt;
Send the collaboration session URL to anyone you’d like



&lt;p&gt;I sent this URL to myself on a second computer and signed in as an anonymous John Doe user. After doing that, I received a notification on my first machine that John Doe was attempting to join my collaboration session. At that point, I could grant read-only access to let him follow along, read-write access to let him write code along with me, or reject his request and keep him out of the session. I clicked the “Accept read-write” button.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9iMb7rql--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7rkl5ldvpvswjhlgt2tu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9iMb7rql--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7rkl5ldvpvswjhlgt2tu.png" alt="Accept or reject requests to join your session"&gt;&lt;/a&gt;&lt;/p&gt;
Accept or reject requests to join your session



&lt;p&gt;Over on my second computer, once access was granted, VS Code pulled open the project directory on my machine. This is really neat! I didn’t even need to pull down the code locally or clone the GitHub repo.&lt;/p&gt;

&lt;p&gt;Once multiple people are in the session, each person’s cursor is shown, and you can collaborate in real time, much like editing a Google doc together. As you can see below, I was able to write a line of code from both computers, and I can see two cursors on the screen.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--I1syYblm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6h9gz5axert3k3y7dpcp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--I1syYblm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6h9gz5axert3k3y7dpcp.png" alt="Multiple cursors can be seen in VS Code, one for each participant"&gt;&lt;/a&gt;&lt;/p&gt;
Multiple cursors can be seen in VS Code, one for each participant



&lt;p&gt;I was running the app locally on my first machine by using the &lt;code&gt;npm start&lt;/code&gt; command. The app output running on localhost:5000 is seen below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Tt0GYX5b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kl1jtpyq8cr72h0f1oot.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Tt0GYX5b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kl1jtpyq8cr72h0f1oot.png" alt="Demo app running locally on localhost:5000"&gt;&lt;/a&gt;&lt;/p&gt;
Demo app running locally on localhost:5000



&lt;p&gt;Now, here’s where it gets really exciting. Beyond just writing code together, I can also &lt;a href="https://docs.microsoft.com/en-us/visualstudio/liveshare/use/vscode#share-a-server"&gt;share my localhost server&lt;/a&gt; with others in the session. I chose to share localhost:5000. Then, on my second computer, I navigated to localhost:5000, and I could see the app there too! As a collaborator, not only did I not need to clone the repo, I also didn’t need to install any dependencies or run the app locally on my own machine. All of that was handled by the first user!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hMOdzxvn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/835nyft5jzpwuwb9q7du.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hMOdzxvn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/835nyft5jzpwuwb9q7du.png" alt="Share a session, servers, or terminals with others"&gt;&lt;/a&gt;&lt;/p&gt;
Share a session, servers, or terminals with others



&lt;p&gt;In addition to sharing servers, you can also &lt;a href="https://docs.microsoft.com/en-us/visualstudio/liveshare/use/vscode#share-a-terminal"&gt;share terminals with collaborators&lt;/a&gt;. I shared a terminal from my first computer, and then on my second computer I was able to enter the &lt;code&gt;npm test&lt;/code&gt; command in an attempt to run the project's test suite. (But alas – there are no tests to run.)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GVU2u1xu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iu3rhi7lyx2ceuunb3qe.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GVU2u1xu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iu3rhi7lyx2ceuunb3qe.png" alt="Shared terminal instance"&gt;&lt;/a&gt;&lt;/p&gt;
Shared terminal instance



&lt;p&gt;During the collaboration session I added a new section to the app titled “Features to Try.” Our Live Share collaboration session was a great success!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kU0r9Nw1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8h454eignifn1dvoi8gw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kU0r9Nw1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8h454eignifn1dvoi8gw.png" alt="End result for the demo app"&gt;&lt;/a&gt;&lt;/p&gt;
End result for the demo app






&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;I was honestly really impressed with how smoothly things went using Live Share and all the additional features it offered beyond simple code-editing collaboration. The only real challenges presented would be if VS Code was not your preferred IDE or if anyone in the pair programming session experiences internet connectivity issues.&lt;/p&gt;

&lt;p&gt;Pair programming yields many benefits: fewer defects, higher productivity, and excellent mentoring opportunities. COVID-19 may have forced us all to work remotely, but that doesn’t mean we can’t still pair program. With tools like VS Code Live Share, remote pair programming can be just as easy as pair programming in the office.&lt;/p&gt;




&lt;p&gt;&lt;em&gt;What has your remote pair programming experience been like? I’d love to hear from you in the comments below.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>vscode</category>
      <category>heroku</category>
      <category>tutorial</category>
    </item>
  </channel>
</rss>
