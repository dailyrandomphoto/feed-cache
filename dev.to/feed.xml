<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Show us your coding setup!</title>
      <author>Siddharth</author>
      <pubDate>Tue, 10 Aug 2021 06:14:15 +0000</pubDate>
      <link>https://dev.to/siddharthshyniben/show-us-your-coding-setup-356g</link>
      <guid>https://dev.to/siddharthshyniben/show-us-your-coding-setup-356g</guid>
      <description>&lt;p&gt;Hello everyone!&lt;/p&gt;

&lt;p&gt;We all have our own configuration which we have been tuning and fine-tuning over the years. I would like to see how everyone here has their editors/terminals/stuff setup.&lt;/p&gt;

&lt;p&gt;I'll start with mine:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FB_vLDwc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k9xhu99u1u0vb5ezidw3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FB_vLDwc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k9xhu99u1u0vb5ezidw3.png" alt="cooler"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That's tmux + vim + iTerm + zsh&lt;/p&gt;

&lt;p&gt;Check out the &lt;a href="https://github.com/siddshy/dotfiles"&gt;dotfiles&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The vim theme is &lt;a href="https://github.com/kaicataldo/material.vim"&gt;material.vim&lt;/a&gt;. I also use NERDTree.&lt;/p&gt;

&lt;p&gt;Share your setupüöÄ&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>programming</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Can anyone tell me where can I get a free domain? I need that for a project.</title>
      <author>ads</author>
      <pubDate>Tue, 10 Aug 2021 06:02:06 +0000</pubDate>
      <link>https://dev.to/ads23/can-anyone-tell-me-where-can-i-get-a-free-domain-i-need-that-for-a-project-34g5</link>
      <guid>https://dev.to/ads23/can-anyone-tell-me-where-can-i-get-a-free-domain-i-need-that-for-a-project-34g5</guid>
      <description></description>
      <category>javascript</category>
      <category>webdev</category>
      <category>webperf</category>
      <category>webassembly</category>
    </item>
    <item>
      <title>Restricting Access in LitmusChaos</title>
      <author>Sarthak Jain</author>
      <pubDate>Tue, 10 Aug 2021 05:51:54 +0000</pubDate>
      <link>https://dev.to/sarthakjain26/restricting-access-in-litmuschaos-11ab</link>
      <guid>https://dev.to/sarthakjain26/restricting-access-in-litmuschaos-11ab</guid>
      <description>&lt;h2&gt;
  &lt;a href="#here-are-the-points-that-we-will-discuss-about-in-this-blog"&gt;
  &lt;/a&gt;
  Here are the points that we will discuss about in this blog:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#chapter-1"&gt;What do we mean by Restricting Access&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#chapter-2"&gt;Why is it needed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#chapter-3"&gt;Restricting access in LitmusChaos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#chapter-4"&gt;How we implemented it&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#what-do-we-mean-by-restricting-access"&gt;
  &lt;/a&gt;
  What do we mean by Restricting Access &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Access restriction, suggested by the name, refers to controlling the access level of a user for any resource as per their role in an organisation or project.&lt;br&gt;
For example, a premium Spotify user will have access to download any song and play it offline, whereas a non-premium user cannot download the songs.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#why-is-it-needed"&gt;
  &lt;/a&gt;
  Why is it needed &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Giving access to everything to everyone can be very vulnerable. Imagine google not restricting users to unmute other users, or Imagine the HR team having permissions to handle the Github repo of your project.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/5xtDarC0XyqmUhD5eDK/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/5xtDarC0XyqmUhD5eDK/giphy.gif" alt="No way"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;By implementing good restriction policies, it is possible for an organization to optimize the use of resources and build a better product.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#restricting-access-in-litmuschaos"&gt;
  &lt;/a&gt;
  Restricting access in LitmusChaos &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://github.com/litmuschaos/litmus"&gt;LitmusChaos&lt;/a&gt; is a tool that allows users to test the resilience of their Kubernetes or non-Kubernetes applications when it is under testing in a chaotic environment.&lt;/p&gt;

&lt;p&gt;LitmusChaos has built a cool teaming feature that enables users to have any of the three(Owner, Editor, Viewer) roles in a project.&lt;br&gt;
The project owner has access to all the features in a project, right from inviting other members to their project, managing those members, scheduling workflows, and managing workflows.&lt;br&gt;
The editor has the same privileges as the owner, minus managing the project and inviting other members to the project. The viewer has only access to view the workflows and analytics related to it.&lt;/p&gt;

&lt;p&gt;You can read more about this feature here:&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/litmus-chaos" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__org__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RYiERGJF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--AusC0Xso--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/organization/profile_image/3775/9c0dac2d-078a-4e1b-bf87-aab26ac22759.png" alt="LitmusChaos"&gt;
      &lt;div class="ltag__link__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7I8HnFh_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--xeQoC5zE--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/435368/c3228e42-7d6c-4400-bb99-f5f0a0653c85.jpeg" alt=""&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/litmus-chaos/introducing-teaming-in-litmuschaos-to-ease-your-chaos-engineering-experience-5alo" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Introducing Teaming in LitmusChaos to ease your Chaos Engineering experience&lt;/h2&gt;
      &lt;h3&gt;Saranya Jena for LitmusChaos „Éª May 20 „Éª 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#kubernetes&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#chaosengineering&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#litmuschaos&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#sre&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#how-we-implemented-it"&gt;
  &lt;/a&gt;
  How we implemented it &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;The basic implementation that comes to mind is to disable the features that should not be accessed by the users in the user interface or just hide them. While it can be the first layer of security, it is not enough for a tool like litmus. Some users directly want to access the APIs, and therefore the validation has to be done while executing the API itself.&lt;br&gt;
To ensure this here is the overview of architecture that we follow:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IOTh6YY6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/weq37xr2stlkwfy6c57o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IOTh6YY6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/weq37xr2stlkwfy6c57o.png" alt="FLowchart"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Before processing the request, the validator confirms if the user has sufficient permissions to access the resource. If not, then the request is not processed &amp;amp; instead, an error message will be presented to the user.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;Thanks for sticking around. I hope you had a productive time reading this article.This article was also contributed by &lt;a class="mentioned-user" href="https://dev.to/vanshbhatiaa4k9"&gt;@vanshbhatiaa4k9&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;Are you an SRE or a Kubernetes enthusiast? Does Chaos Engineering excite you?&lt;br&gt;
Join Our Community On Slack For Detailed Discussion, Feedback &amp;amp; Regular Updates On Chaos Engineering For Kubernetes: &lt;a href="https://slack.litmuschaos.io"&gt;https://slack.litmuschaos.io&lt;/a&gt; (#litmus channel on the Kubernetes workspace)&lt;br&gt;
LitmusChaos 2.0 GA will be out on 15th August 2021, with some exciting new features. &lt;/p&gt;

&lt;p&gt;LitmusGithubRepo&lt;br&gt;
Check out the Litmus Chaos GitHub repo and do share your feedback: &lt;a href="https://github.com/litmuschaos/litmus"&gt;https://github.com/litmuschaos/litmus&lt;/a&gt;&lt;br&gt;
Submit a pull request if you identify any necessary changes.&lt;br&gt;
Don't forget to share these resources with someone who you think might benefit from them. Peace out. ‚úåüèº&lt;/p&gt;

</description>
      <category>litmuschaos</category>
      <category>kubernetes</category>
      <category>cncf</category>
      <category>security</category>
    </item>
    <item>
      <title>Fullstack (Nodejs + Reactjs) interview experience at Nutanix</title>
      <author>Prashant Yadav</author>
      <pubDate>Tue, 10 Aug 2021 05:50:40 +0000</pubDate>
      <link>https://dev.to/learnersbucket/fullstack-nodejs-reactjs-interview-experience-at-nutanix-403i</link>
      <guid>https://dev.to/learnersbucket/fullstack-nodejs-reactjs-interview-experience-at-nutanix-403i</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j8R778kW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/learnersbucket.com/wp-content/uploads/2021/08/Fullstack-Nodejs-ReactJs-SASS-Nutanix-Interview-Experience-1.png%3Fw%3D768%26ssl%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j8R778kW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/learnersbucket.com/wp-content/uploads/2021/08/Fullstack-Nodejs-ReactJs-SASS-Nutanix-Interview-Experience-1.png%3Fw%3D768%26ssl%3D1" alt="Fullstack interview experience at Nutanix"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Visit &lt;a href="https://learnersbucket.com"&gt;learnersbucket.com&lt;/a&gt; If you are preparing for your JavaScript interview. You will find DSA, System Design and JavaScript Questions.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I had applied for the MTS-3 Fullstack ‚Äì SAAS (Nodejs + Reactjs) on Nutanix‚Äôs career section and got the shortlisting email on 21‚Äôst April 2021. It was for the Bangalore location.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TH9kvyre--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/learnersbucket.com/wp-content/uploads/2021/08/Nutanix-hiring.png%3Fw%3D709%26ssl%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TH9kvyre--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/learnersbucket.com/wp-content/uploads/2021/08/Nutanix-hiring.png%3Fw%3D709%26ssl%3D1" alt="Shortlisting email from Nutanix"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After the email, the recruiter called me and we had brief introduction about myself, my experience, etc and what are they looking for in the candidate and about the Nutanix and role.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1st-round-phone-screen-sde2-full-stack"&gt;
  &lt;/a&gt;
  1st Round: Phone screen (SDE2 ‚Äì Full Stack)
&lt;/h2&gt;

&lt;p&gt;I was asked what I do on a daily basis, followed by some JavaScript questions and some Rest API questions.&lt;/p&gt;

&lt;p&gt;It went well.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2nd-round-javascript-platform-amp-dsa-sde3-full-stack"&gt;
  &lt;/a&gt;
  2nd Round: JavaScript Platform &amp;amp; DSA. (SDE3 ‚Äì Full Stack)
&lt;/h2&gt;

&lt;p&gt;Don‚Äôt remember about the interviewer.&lt;/p&gt;

&lt;p&gt;In this round I was asked to implement programs based on Closure, Promise and Objects.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://learnersbucket.com/examples/interview/deep-flatten-object-in-javascript-1"&gt;Deep Flatten an object&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://learnersbucket.com/examples/array/how-to-flat-an-array-in-javascript"&gt;Flat an array&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://learnersbucket.com/examples/interview/what-is-debouncing-in-javascript"&gt;Debounce&lt;/a&gt; and its variations using promise.&lt;/li&gt;
&lt;li&gt;Where do we need to use async code in Nodejs, why?. Etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This was a good round, and I learned lots of things. Went good.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3rd-round-system-design-frontend-backend-team-lead-full-stack"&gt;
  &lt;/a&gt;
  3rd Round: System Design (Frontend + Backend) (Team lead ‚Äì Full Stack)
&lt;/h2&gt;

&lt;p&gt;The interviewer had around 9 years of experience and was leading the team which I was being hired for, we exchanged introductions and started the interview.&lt;/p&gt;

&lt;p&gt;As I was being hired for the Payment &amp;amp; Pricing team.&lt;/p&gt;

&lt;p&gt;This round was mainly focused towards creating dynamic form and handling the payment and pricing based on the features selected.&lt;/p&gt;

&lt;p&gt;Security, CORs, XSS.&lt;/p&gt;

&lt;p&gt;How to secure your API, Server side vs Client Side, which to use for security purposes?. What if the same has to be achieved on the alternate side &amp;amp; vice versa.&lt;/p&gt;

&lt;p&gt;Lots of discussion of form handling and uncontrolled and controlled form components. Select box, etc.&lt;/p&gt;

&lt;p&gt;I haven‚Äôt read about security still it went well.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4th-round-system-design-javascript-manager-pricing-amp-payment-team"&gt;
  &lt;/a&gt;
  4th round: System Design (Javascript) (Manager ‚Äì Pricing &amp;amp; Payment Team)
&lt;/h2&gt;

&lt;p&gt;The interviewer was quite nice, he first introduced himself and what they are looking for in a candidate who will join this team, what type of work will be there, etc.&lt;/p&gt;

&lt;p&gt;I was asked to implement a &lt;a href="https://learnersbucket.com/examples/interview/number-increment-counter-in-javascript-react"&gt;Number increment counter in JS&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In this round, I came up with a solution using &lt;a href="https://learnersbucket.com/examples/javascript/javascript-settimeout-method"&gt;setTimeout&lt;/a&gt; and &lt;a href="https://learnersbucket.com/examples/javascript/javascript-setinterval-method"&gt;setInterval&lt;/a&gt;, even though it was not perfect he pushed me to the next round.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5th-round-dsa-vp-pricing-amp-payment-team"&gt;
  &lt;/a&gt;
  5th round: DSA (VP ‚Äì Pricing &amp;amp; Payment Team)
&lt;/h2&gt;

&lt;p&gt;The interviewer was from San Jose and he was a little strange.&lt;/p&gt;

&lt;p&gt;He asked me to introduce myself and when I was done, after a pause he unmuted and asked that‚Äôs it?. Please elaborate a little. I thought he was doing something else simultaneously and not concentrating towards the interview.&lt;/p&gt;

&lt;p&gt;Later he asked me to implement an algorithm to count all possible subarrays in an array with sum k. (Note:- They are not consecutive).&lt;/p&gt;

&lt;p&gt;As I had to find all the possible sub arrays, I thought of using Dynamic Programming first.&lt;/p&gt;

&lt;p&gt;But the interviewer asked me to implement an O(N ^ 2) algorithm.&lt;/p&gt;

&lt;p&gt;Failed in this. He showed me the solution using the bitwise operator.&lt;/p&gt;

&lt;p&gt;At the end he was constantly asking me from where I come?, where I am living. In Spite of repeatedly telling him that I live in Mumbai and having been born and brought up here. He was not ready to accept it. I was getting a feeling that he has some personal issue with name.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#verdict"&gt;
  &lt;/a&gt;
  Verdict.
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;NOT SELECTED.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I guess because my 4th round went okay and 5th round went bad they dropped me. Interviewer asked me to apply in different verticals, but I lost my interest and so I left it.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>react</category>
    </item>
    <item>
      <title>Learning Python- Intermediate course: Day 5, Exploring the math module</title>
      <author>Aatmaj</author>
      <pubDate>Tue, 10 Aug 2021 05:39:37 +0000</pubDate>
      <link>https://dev.to/aatmaj/learning-python-intermediate-course-day-5-exploring-the-math-module-5alo</link>
      <guid>https://dev.to/aatmaj/learning-python-intermediate-course-day-5-exploring-the-math-module-5alo</guid>
      <description>&lt;h2&gt;
  &lt;a href="#today-we-will-study-how-to-import-modules-in-python-and-explore-the-math-module"&gt;
  &lt;/a&gt;
  Today we will study how to import modules in Python, and explore the math module. 
&lt;/h2&gt;




&lt;h3&gt;
  &lt;a href="#what-are-modules"&gt;
  &lt;/a&gt;
  What are  modules?
&lt;/h3&gt;

&lt;p&gt;A module is a python file containing Python definitions and statements. A module  it must end with the &lt;code&gt;.py&lt;/code&gt; extension like all other Python files. &lt;/p&gt;

&lt;p&gt;A module is basically a bunch of functions, variables and runnable  code. By grouping code into modules makes the code easier to read, logically understandable and enhances flexibility.&lt;br&gt;
You can get the official documentation of modules &lt;a href="https://docs.python.org/3/tutorial/modules.html"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We will learn to create our own modules in the later parts, but today we explore one of the very useful Python module, that is the &lt;code&gt;math&lt;/code&gt; module.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#importing-modules"&gt;
  &lt;/a&gt;
  Importing modules.
&lt;/h3&gt;

&lt;p&gt;For using the math module, we just need to type &lt;code&gt;import math&lt;/code&gt;, and you are set to go! You can import any Python module using the import statement.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#the-math-module"&gt;
  &lt;/a&gt;
  The math module
&lt;/h3&gt;

&lt;p&gt;The math module in Python is a very useful module which lets us use mathematical functions in Python. It contains many useful mathematical functions and some constants. You can check the whole list &lt;a href="https://docs.python.org/3/library/math.html#math.log"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here I am presenting some of the very commonly used functions.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;math&lt;/span&gt; &lt;span class="c1"&gt;# import the math module
&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;4.4&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ceil&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# the ceiling function in Python gives the smallest integer greater than or equal to the number.
&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# the floor function in Python gives the greatesr integer less than or equal to the number.
&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;factorial&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mi"&gt;6&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;comb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# Return the number of ways to choose a items from b items without repetition and without order.
&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;comb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;#Raises TypeError if either of the arguments are not integers
&lt;/span&gt;&lt;span class="n"&gt;Traceback&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;most&lt;/span&gt; &lt;span class="n"&gt;recent&lt;/span&gt; &lt;span class="n"&gt;call&lt;/span&gt; &lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s"&gt;"&amp;lt;stdin&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nb"&gt;TypeError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'float'&lt;/span&gt; &lt;span class="nb"&gt;object&lt;/span&gt; &lt;span class="n"&gt;cannot&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;interpreted&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="n"&gt;integer&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;comb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;#Raises ValueError if either of the arguments are negative.
&lt;/span&gt;&lt;span class="n"&gt;Traceback&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;most&lt;/span&gt; &lt;span class="n"&gt;recent&lt;/span&gt; &lt;span class="n"&gt;call&lt;/span&gt; &lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s"&gt;"&amp;lt;stdin&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nb"&gt;ValueError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="n"&gt;must&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;non&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;negative&lt;/span&gt; &lt;span class="n"&gt;integer&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gcd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# e raised to the power a
&lt;/span&gt;&lt;span class="mf"&gt;7.38905609893065&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# logarithm to the base 10
&lt;/span&gt;&lt;span class="mf"&gt;0.6931471805599453&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;log2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# logarithm to the base 2
&lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# logarithm to the base b
&lt;/span&gt;&lt;span class="mf"&gt;0.6309297535714574&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;pow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# a^b
&lt;/span&gt;&lt;span class="mf"&gt;8.0&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sqrt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;#square root of a
&lt;/span&gt;&lt;span class="mf"&gt;1.4142135623730951&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# trigoonomatric functions
&lt;/span&gt;&lt;span class="mf"&gt;0.9092974268256817&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;atan&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# hyperbolic trigonometric functions
&lt;/span&gt;&lt;span class="mf"&gt;1.1071487177940904&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;degrees&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# convert to degrees
&lt;/span&gt;&lt;span class="mf"&gt;114.59155902616465&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;radians&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;#convert to radians
&lt;/span&gt;&lt;span class="mf"&gt;0.03490658503988659&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gamma&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# gamma function.
&lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hypot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;#hypotaneous calculation using the pythagores theorem.
&lt;/span&gt;&lt;span class="mf"&gt;3.6055512754639896&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt; &lt;span class="c1"&gt;# mathematical constant pi
&lt;/span&gt;&lt;span class="mf"&gt;3.141592653589793&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="c1"&gt;# mathematical constant e
&lt;/span&gt;&lt;span class="mf"&gt;2.718281828459045&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;‚úåÔ∏èSo friends that's all for now. üòä Hope you all are having fun.üòé Please let me know in the comment section below üëá. And don't forget to like the post if you did. üòç I am open to any suggestions or doubts. ü§† Just post in the comments below or gmail me üòâ&lt;br&gt;
Thank you allüëç&lt;/p&gt;

&lt;p&gt;Also please visit the &lt;a href="https://github.com/Aatmaj-Zephyr/Learning-Python"&gt;Learning-Python repo&lt;/a&gt; made especially for this course and don't forget to star it too!&lt;/p&gt;

</description>
      <category>learningpython</category>
      <category>python</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Creating a custom hook in React to control form input</title>
      <author>WebDevZTH</author>
      <pubDate>Tue, 10 Aug 2021 03:56:47 +0000</pubDate>
      <link>https://dev.to/webzth/creating-a-custom-hook-in-react-to-control-form-input-47g7</link>
      <guid>https://dev.to/webzth/creating-a-custom-hook-in-react-to-control-form-input-47g7</guid>
      <description>&lt;p&gt;There are numerous ways to make a form input controlled from not controlled. The internet is mostly just a collection of forms ^_^ and one solution to make interacting with form inputs is to use the following approach...&lt;/p&gt;

&lt;p&gt;Suppose we have a form with a single input field&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;form&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;'text'&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;'username'&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;'submit'&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Send&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above example we are sending the field 'username' to our backend or to some end-point on submitting this form. To do this we must have two things a 'onSubmit' event and a way to keep track of the data entered into the input field of the form, one approach is...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setValue&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;form&lt;/span&gt; &lt;span class="nx"&gt;onSubmit&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;handleFormSubmit&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;onChange&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'text'&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'username'&lt;/span&gt;&lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'submit'&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Send&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;/&lt;/span&gt;&lt;span class="na"&gt;form&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above snippet is making use of the 'useState' hook to make this component stateful. We are then passing the value and onChange event handler to the input field to keep track and store the value enetered into 'username'&lt;/p&gt;

&lt;p&gt;This approach works fine and good but we will have to define multiple 'onChange' event handlers if our form gets more input fields and as the complexity grows the components code will start to look messy. &lt;/p&gt;

&lt;p&gt;One thing we can use here is custom hooks, that is we create a function that utilises the react-hooks and customise its behaviour to suit our needs. One approach to do this is like so...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;useField&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setValue&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;onChange&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;setValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;reset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;setValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;

 &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;onChange&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;reset&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we can import this custom hook into any component where we want to use input fields, like so...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;useField&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;..file its being exported from&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then we can use it in our react component, like so..&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;reset&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;form&lt;/span&gt; &lt;span class="na"&gt;onSubmit&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;handleFormSubmit&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'text'&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'username'&lt;/span&gt;&lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'submit'&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Send&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;form&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now one way to implement the &lt;code&gt;handleFormSubmit&lt;/code&gt; is like so...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;handleFormSubmit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;preventDefault&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
 &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;userObject&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;username&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="c1"&gt;// send data to backend&lt;/span&gt;
 &lt;span class="nx"&gt;reset&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can call the reset method after successfully sending form-data to the backend and the input field is reset to an empty string.&lt;/p&gt;

&lt;p&gt;Using this approach we make the code much cleaner and dont need to use multiple useState hooks within our components which clutters the code.&lt;/p&gt;

&lt;p&gt;Try this in your next form in React! ^_^&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>How to Load More Data on Demand in Flutter Event Calendar</title>
      <author>Techguy</author>
      <pubDate>Tue, 10 Aug 2021 03:39:11 +0000</pubDate>
      <link>https://dev.to/techguy/how-to-load-more-data-on-demand-in-flutter-event-calendar-5h0m</link>
      <guid>https://dev.to/techguy/how-to-load-more-data-on-demand-in-flutter-event-calendar-5h0m</guid>
      <description>&lt;p&gt;Learn how to load more data on-demand in Syncfusion &lt;a href="https://www.syncfusion.com/flutter-widgets/flutter-calendar"&gt;Flutter Event Calendar&lt;/a&gt; widget easily. This video explains how to use the SfCalendar‚Äôs loadMoreWidgetBuilder property and how to override the handleLoadMore method of CalendarDataSource abstract class, to perform load more data on demand in the SfCalendar widget.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/yxiNLruP7CI"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>flutter</category>
      <category>dart</category>
      <category>webdev</category>
      <category>mobile</category>
    </item>
    <item>
      <title>Vue 3.2 Released!</title>
      <author>Eugene Kopich</author>
      <pubDate>Tue, 10 Aug 2021 03:26:05 +0000</pubDate>
      <link>https://dev.to/web2033/vue-3-2-released-1n8b</link>
      <guid>https://dev.to/web2033/vue-3-2-released-1n8b</guid>
      <description>&lt;p&gt;We are excited to announce the release of Vue.js 3.2 "Quintessential Quintuplets"! This release includes many significant new features and performance improvements, and contains no breaking changes.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#new-sfc-features"&gt;
  &lt;/a&gt;
  New SFC Features
&lt;/h2&gt;

&lt;p&gt;Two new features for Single File Components (SFCs, aka &lt;code&gt;.vue&lt;/code&gt; files) have graduated from experimental status and are now considered stable:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;&amp;lt;script setup&amp;gt;&lt;/code&gt; is a compile-time syntactic sugar that greatly improves the ergonomics when using Composition API inside SFCs.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;&amp;lt;style&amp;gt; v-bind&lt;/code&gt; enables component state-driven dynamic CSS values in SFC &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; tags.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here is an example component using these two new features together:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight vue"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;script&lt;/span&gt; &lt;span class="na"&gt;setup&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;red&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;script&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="na"&gt;click=&lt;/span&gt;&lt;span class="s"&gt;"color = color === 'red' ? 'green' : 'red'"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    Color is: &lt;span class="si"&gt;{{&lt;/span&gt; &lt;span class="nx"&gt;color&lt;/span&gt; &lt;span class="si"&gt;}}&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;style&lt;/span&gt; &lt;span class="na"&gt;scoped&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;v-bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;style&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Try it out in the &lt;a href="https://sfc.vuejs.org/#eyJBcHAudnVlIjoiPHNjcmlwdCBzZXR1cD5cbmltcG9ydCB7IHJlZiB9IGZyb20gJ3Z1ZSdcblxuY29uc3QgY29sb3IgPSByZWYoJ3JlZCcpXG48L3NjcmlwdD5cblxuPHRlbXBsYXRlPlxuICA8YnV0dG9uIEBjbGljaz1cImNvbG9yID0gY29sb3IgPT09ICdyZWQnID8gJ2dyZWVuJyA6ICdyZWQnXCI+XG4gICAgQ29sb3IgaXM6IHt7IGNvbG9yIH19XG4gIDwvYnV0dG9uPlxuPC90ZW1wbGF0ZT5cblxuPHN0eWxlIHNjb3BlZD5cbmJ1dHRvbiB7XG4gIGNvbG9yOiB2LWJpbmQoY29sb3IpO1xufVxuPC9zdHlsZT4ifQ=="&gt;SFC Playground&lt;/a&gt;, or read their respective documentations:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://v3.vuejs.org/api/sfc-script-setup.html"&gt;&lt;code&gt;&amp;lt;script setup&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://v3.vuejs.org/api/sfc-style.html#state-driven-dynamic-css"&gt;&lt;code&gt;&amp;lt;style&amp;gt; v-bind&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Building on top of &lt;code&gt;&amp;lt;script setup&amp;gt;&lt;/code&gt;, we also have a new RFC for improving the ergonomics of ref usage with compiler-enabled sugar - please share your feedback &lt;a href="https://github.com/vuejs/rfcs/discussions/369"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#web-components"&gt;
  &lt;/a&gt;
  Web Components
&lt;/h2&gt;

&lt;p&gt;Vue 3.2 introduces a new &lt;code&gt;defineCustomElement&lt;/code&gt; method for easily creating native &lt;a href="https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements"&gt;custom elements&lt;/a&gt; using Vue component APIs:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;defineCustomElement&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;MyVueElement&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;defineCustomElement&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="c1"&gt;// normal Vue component options here&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="c1"&gt;// Register the custom element.&lt;/span&gt;
&lt;span class="c1"&gt;// After registration, all `&amp;lt;my-vue-element&amp;gt;` tags&lt;/span&gt;
&lt;span class="c1"&gt;// on the page will be upgraded.&lt;/span&gt;
&lt;span class="nx"&gt;customElements&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;my-vue-element&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;MyVueElement&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This API allows develpers to create Vue-powered UI component libraries that can be used with any framework, or no framework at all. We have also added a new section in our docs on &lt;a href="https://v3.vuejs.org/guide/web-components.html"&gt;consuming and creating Web Components in Vue&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#performance-improvements"&gt;
  &lt;/a&gt;
  Performance Improvements
&lt;/h2&gt;

&lt;p&gt;3.2 includes some significant performance improvements to Vue's reactivity system, thanks to the great work by &lt;a href="https://github.com/basvanmeurs"&gt;@basvanmeurs&lt;/a&gt;. Specifically:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/vuejs/vue-next/pull/3995"&gt;More efficient ref implementation (~260% faster read / ~50% faster write)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vuejs/vue-next/pull/4017"&gt;~40% faster dependency tracking&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vuejs/vue-next/pull/4001"&gt;~17% less memory usage&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The template compiler also received a number of improvements:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/vuejs/vue-next/pull/3334"&gt;~200% faster creation of plain element VNodes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;More aggressive constant hoisting [&lt;a href="https://github.com/vuejs/vue-next/commit/b7ea7c148552874e8bce399eec9fbe565efa2f4d"&gt;1&lt;/a&gt;] [&lt;a href="https://github.com/vuejs/vue-next/commit/02339b67d8c6fab6ee701a7c4f2773139ed007f5"&gt;2&lt;/a&gt;]&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Finally, there is a new &lt;a href="https://v3.vuejs.org/api/directives.html#v-memo"&gt;&lt;code&gt;v-memo&lt;/code&gt; directive&lt;/a&gt; that provides the ability to memoize part of the template tree. A &lt;code&gt;v-memo&lt;/code&gt; hit allows Vue to skip not only the Virtual DOM diffing, but the creation of new VNodes altogether. Although rarely needed, it provides an escape hatch to squeeze out maximum performance in certain scenarios, for example large &lt;code&gt;v-for&lt;/code&gt; lists.&lt;/p&gt;

&lt;p&gt;The usage of &lt;code&gt;v-memo&lt;/code&gt;, which is a one-line addition, places Vue among the fastest mainstream frameworks in &lt;a href="https://github.com/krausest/js-framework-benchmark"&gt;js-framework-benchmark&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iOUlR117--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.vuejs.org/bench.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iOUlR117--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.vuejs.org/bench.png" alt="benchmark"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#serverside-rendering"&gt;
  &lt;/a&gt;
  Server-side Rendering
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;@vue/server-renderer&lt;/code&gt; package in 3.2 now ships an ES module build which is also decoupled from Node.js built-ins. This makes it possible to bundle and leverage &lt;code&gt;@vue/server-renderer&lt;/code&gt; for use inside non-Node.js runtimes such as &lt;a href="https://developers.cloudflare.com/workers/"&gt;CloudFlare Workers&lt;/a&gt; or Service Workers.&lt;/p&gt;

&lt;p&gt;We also improved the streaming render APIs, with new methods for rendering to the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Streams_API"&gt;Web Streams API&lt;/a&gt;. Check out the &lt;a href="https://github.com/vuejs/vue-next/tree/master/packages/server-renderer#streaming-api"&gt;documentation of &lt;code&gt;@vue/server-renderer&lt;/code&gt;&lt;/a&gt; for more details.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#effect-scope-api"&gt;
  &lt;/a&gt;
  Effect Scope API
&lt;/h2&gt;

&lt;p&gt;3.2 introduces a new &lt;a href="https://v3.vuejs.org/api/effect-scope.html"&gt;Effect Scope API&lt;/a&gt; for directly controlling the disposal timing of reactive effects (computed and watchers). It makes it easier to leverage Vue's reactivity API out of a component context, and also unlocks some advanced use cases inside components.&lt;/p&gt;

&lt;p&gt;This is low-level API largely intended for library authors, so it's recommended to read the feature's &lt;a href="https://github.com/vuejs/rfcs/blob/master/active-rfcs/0041-reactivity-effect-scope.md"&gt;RFC&lt;/a&gt; for the motivation and use cases of this feature.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#changelog"&gt;
  &lt;/a&gt;
  CHANGELOG
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#compatibility-notes"&gt;
  &lt;/a&gt;
  Compatibility Notes
&lt;/h3&gt;

&lt;p&gt;This release contains no public API breakage. However, there are a few compatibility related notes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Due to usage of new runtime helpers, code generated by the template compiler in &amp;gt;= 3.2 will not be compatible with runtime &amp;lt; 3.2.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This only affects cases where there is a version mismatch between the compiler and the runtime. The most common case is libraries that ship pre-compiled Vue components. If you are a library author and ship code pre-compiled by Vue &amp;gt;= 3.2, your library will be only compatible Vue &amp;gt;= 3.2.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;This release ships TypeScript typings that rely on &lt;a href="https://www.typescriptlang.org/docs/handbook/release-notes/typescript-4-1.html#template-literal-types"&gt;Template Literal Types&lt;/a&gt; and requires TS &amp;gt;= 4.1.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#features"&gt;
  &lt;/a&gt;
  Features
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#sfc"&gt;
  &lt;/a&gt;
  SFC
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;remove experimental status of &lt;code&gt;&amp;lt;script setup&amp;gt;&lt;/code&gt; (&lt;a href="https://github.com/vuejs/vue-next/commit/27104eaaf0f929a4c08b53877b495c5813157232"&gt;27104ea&lt;/a&gt;) (&lt;a href="https://v3.vuejs.org/api/sfc-script-setup.html"&gt;Docs&lt;/a&gt;) (&lt;a href="https://github.com/vuejs/rfcs/blob/master/active-rfcs/0040-script-setup.md"&gt;RFC&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;remove experimental status for sfc &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; v-bind (&lt;a href="https://github.com/vuejs/vue-next/commit/3b38c9ae9b08c41ee3a70c8ef94fd078f05a8925"&gt;3b38c9a&lt;/a&gt;) (&lt;a href="https://v3.vuejs.org/api/sfc-style.html#state-driven-dynamic-css"&gt;Docs&lt;/a&gt;) (&lt;a href="https://github.com/vuejs/rfcs/blob/master/active-rfcs/0043-sfc-style-variables.md"&gt;RFC&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;support non-explicit type imports in &lt;code&gt;&amp;lt;script setup&amp;gt;&lt;/code&gt; by avoiding exposing unused imports to template during dev (&lt;a href="https://github.com/vuejs/vue-next/commit/5a3ccfd9143700c7ca82d2911fe592d0658c5393"&gt;5a3ccfd&lt;/a&gt;), closes &lt;a href="https://github.com/vuejs/vue-next/issues/3183"&gt;#3183&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;support namespaced component tags when using &lt;code&gt;&amp;lt;script setup&amp;gt;&lt;/code&gt; (&lt;a href="https://github.com/vuejs/vue-next/commit/e5a4412764f6db255afe01b8a7e6e40ebf707412"&gt;e5a4412&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;(experimental)&lt;/strong&gt; new ref sugar (&lt;a href="https://github.com/vuejs/vue-next/commit/562bddb3ce76a0e98e499e199e96fa4271e5d1b4"&gt;562bddb&lt;/a&gt;) (&lt;a href="https://github.com/vuejs/rfcs/discussions/369"&gt;RFC&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#custom-elements"&gt;
  &lt;/a&gt;
  Custom Elements
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;defineCustomElement&lt;/code&gt; (&lt;a href="https://github.com/vuejs/vue-next/commit/8610e1c9e23a4316f76fb35eebbab4ad48566fbf"&gt;8610e1c&lt;/a&gt;) (&lt;a href="https://v3.vuejs.org/guide/web-components.html"&gt;Docs&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#reactivity"&gt;
  &lt;/a&gt;
  Reactivity
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;new &lt;code&gt;effectScope&lt;/code&gt; API (&lt;a href="https://github.com/vuejs/vue-next/issues/2195"&gt;#2195&lt;/a&gt;) (&lt;a href="https://github.com/vuejs/vue-next/commit/f5617fc3bb8fd33927b2567622ac4f8b43f9b5d5"&gt;f5617fc&lt;/a&gt;) (&lt;a href="https://github.com/vuejs/rfcs/blob/master/active-rfcs/0041-reactivity-effect-scope.md"&gt;RFC&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;support &lt;code&gt;onTrack/onTrigger&lt;/code&gt; debug options for &lt;code&gt;computed&lt;/code&gt; (&lt;a href="https://github.com/vuejs/vue-next/commit/5cea9a1d4e846f60515ef76ebab4800228645601"&gt;5cea9a1&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#ssr"&gt;
  &lt;/a&gt;
  SSR
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;server-renderer:&lt;/strong&gt; decouple esm build from Node + improve stream API (&lt;a href="https://github.com/vuejs/vue-next/commit/08672222c611a61f6359543aa202f0841d199bcb"&gt;0867222&lt;/a&gt;), closes &lt;a href="https://github.com/vuejs/vue-next/issues/3467"&gt;#3467&lt;/a&gt; &lt;a href="https://github.com/vuejs/vue-next/issues/3111"&gt;#3111&lt;/a&gt; &lt;a href="https://github.com/vuejs/vue-next/issues/3460"&gt;#3460&lt;/a&gt; (&lt;a href="https://github.com/vuejs/vue-next/tree/master/packages/server-renderer#readme"&gt;Docs&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#generic"&gt;
  &lt;/a&gt;
  Generic
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;New &lt;code&gt;v-memo&lt;/code&gt; directive (&lt;a href="https://github.com/vuejs/vue-next/commit/3b64508e3b2d648e346cbf34e1641f4022be61b6"&gt;3b64508&lt;/a&gt;) (&lt;a href="https://v3.vuejs.org/api/directives.html#v-memo"&gt;Docs&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;support &lt;code&gt;v-bind&lt;/code&gt; .prop &amp;amp; .attr modifiers (&lt;a href="https://github.com/vuejs/vue-next/commit/1c7d737cc8ed0384b334d0b3e2dc8ede44906dc4"&gt;1c7d737&lt;/a&gt;) (&lt;a href="https://v3.vuejs.org/api/directives.html#v-bind"&gt;Docs&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;add &lt;code&gt;watchPostEffect&lt;/code&gt; API (&lt;a href="https://github.com/vuejs/vue-next/commit/42ace9577da49477ff189950a83d6eead73d0efe"&gt;42ace95&lt;/a&gt;) (&lt;a href="https://v3.vuejs.org/api/computed-watch-api.html#watchposteffect"&gt;Docs&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;add &lt;code&gt;watchSyncEffect&lt;/code&gt; API (&lt;a href="https://github.com/vuejs/vue-next/commit/d87d059ac120ed0496f85474344ef76e40fa9bc7"&gt;d87d059&lt;/a&gt;) (&lt;a href="https://v3.vuejs.org/api/computed-watch-api.html#watchsynceffect"&gt;Docs&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;unwrap refs in toDisplayString (&lt;a href="https://github.com/vuejs/vue-next/commit/f994b974c0a1ac95d313c8ccfc258c6ba3910b6e"&gt;f994b97&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;allow &lt;code&gt;compilerOptions.comments&lt;/code&gt; to affect comment inclusion in dev (&lt;a href="https://github.com/vuejs/vue-next/issues/4115"&gt;#4115&lt;/a&gt;) (&lt;a href="https://github.com/vuejs/vue-next/commit/dd0f9d1ce6b0de59c84d334c7190fa9d2cc17a04"&gt;dd0f9d1&lt;/a&gt;), closes &lt;a href="https://github.com/vuejs/vue-next/issues/3392"&gt;#3392&lt;/a&gt; &lt;a href="https://github.com/vuejs/vue-next/issues/3395"&gt;#3395&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#types"&gt;
  &lt;/a&gt;
  Types
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;map declared emits to onXXX props in inferred prop types (&lt;a href="https://github.com/vuejs/vue-next/issues/3926"&gt;#3926&lt;/a&gt;) (&lt;a href="https://github.com/vuejs/vue-next/commit/69344ff1ae724beb648c34ede8050b3b70ddf4b7"&gt;69344ff&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#performance-improvements"&gt;
  &lt;/a&gt;
  Performance Improvements
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;reactivity:&lt;/strong&gt; improve reactive effect memory usage (&lt;a href="https://github.com/vuejs/vue-next/issues/4001"&gt;#4001&lt;/a&gt;) (&lt;a href="https://github.com/vuejs/vue-next/commit/87f69fd0bb67508337fb95cb98135fd5d6ebca7d"&gt;87f69fd&lt;/a&gt;), closes &lt;a href="https://github.com/vuejs/vue-next/issues/2345"&gt;#2345&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;reactivity:&lt;/strong&gt; ref-specific track/trigger and miscellaneous optimizations (&lt;a href="https://github.com/vuejs/vue-next/issues/3995"&gt;#3995&lt;/a&gt;) (&lt;a href="https://github.com/vuejs/vue-next/commit/64310405acaccabc24985ade95fb1b5c9c06ef76"&gt;6431040&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;reactivity:&lt;/strong&gt; use bitwise dep markers to optimize re-tracking (&lt;a href="https://github.com/vuejs/vue-next/issues/4017"&gt;#4017&lt;/a&gt;) (&lt;a href="https://github.com/vuejs/vue-next/commit/6cf2377cd49d24814bdff136bf78c77d50d5b41a"&gt;6cf2377&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;compiler-core/runtime-core:&lt;/strong&gt; improve VNode creation performance with compiler hints (&lt;a href="https://github.com/vuejs/vue-next/issues/3334"&gt;#3334&lt;/a&gt;) (&lt;a href="https://github.com/vuejs/vue-next/commit/ceff89905b05381d3d73c480e08c7aff9271b074"&gt;ceff899&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;compiler-core:&lt;/strong&gt; also hoist all-static children array (&lt;a href="https://github.com/vuejs/vue-next/commit/b7ea7c148552874e8bce399eec9fbe565efa2f4d"&gt;b7ea7c1&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;compiler-core:&lt;/strong&gt; hoist dynamic props lists (&lt;a href="https://github.com/vuejs/vue-next/commit/02339b67d8c6fab6ee701a7c4f2773139ed007f5"&gt;02339b6&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;compiler-sfc:&lt;/strong&gt; ignore empty blocks (&lt;a href="https://github.com/vuejs/vue-next/issues/3520"&gt;#3520&lt;/a&gt;) (&lt;a href="https://github.com/vuejs/vue-next/commit/b771fdbef9a8dadd4c9cc939cc104f7764e40373"&gt;b771fdb&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>vue</category>
      <category>javascript</category>
      <category>frontend</category>
      <category>webdev</category>
    </item>
    <item>
      <title>MongoDB $weeklyUpdate (August 2, 2021): Latest MongoDB Tutorials, Events, Podcasts, &amp; Streams!</title>
      <author>Adrienne Tacke</author>
      <pubDate>Tue, 10 Aug 2021 03:01:01 +0000</pubDate>
      <link>https://dev.to/mongodb/mongodb-weeklyupdate-august-2-2021-latest-mongodb-tutorials-events-podcasts-streams-4bm1</link>
      <guid>https://dev.to/mongodb/mongodb-weeklyupdate-august-2-2021-latest-mongodb-tutorials-events-podcasts-streams-4bm1</guid>
      <description>&lt;h2&gt;
  &lt;a href="#hi-everyone"&gt;
  &lt;/a&gt;
  üëã Hi everyone!
&lt;/h2&gt;

&lt;p&gt;Welcome to MongoDB $weeklyUpdate! &lt;/p&gt;

&lt;p&gt;Here, you'll find the latest developer tutorials, upcoming official MongoDB events, and get a heads up on our latest Twitch streams and podcast, curated by &lt;a href="https://twitter.com/AdrienneTacke"&gt;Adrienne Tacke&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Enjoy!&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#freshest-tutorials-on-devhub"&gt;
  &lt;/a&gt;
  üéì Freshest Tutorials on &lt;a href="https://developer.mongodb.com/"&gt;DevHub&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Want to find the latest MongoDB tutorials and articles created for developers, by developers? Look no further than our &lt;a href="https://developer.mongodb.com/"&gt;DevHub&lt;/a&gt;!&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#generating-mql-shell-commands-using-openai-and-new-mongosh-shell"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.mongodb.com/developer/article/generate-mql-with-mognosh-and-openai/"&gt;Generating MQL Shell Commands Using OpenAI and New mongosh Shell&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.mongodb.com/developer/author/pavel-duchovny/"&gt;Pavel Duchovny&lt;/a&gt; &lt;br&gt;
Learn how new mongosh external modules can be used to generate MQL language via OpenAI engine.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#unboxing-jetpack-compose-experience-my-first-compose-app"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.mongodb.com/developer/quickstart/jetpack-compose-experience-android/"&gt;Unboxing Jetpack Compose: Experience My First Compose App&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.mongodb.com/developer/author/mohit-sharma/"&gt;Mohit Sharma&lt;/a&gt; &lt;br&gt;
Learn how to get started with Jetpack Compose on Android.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#mongodb-realm-web-sdk-tutorial"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.mongodb.com/developer/quickstart/realm-web-sdk/"&gt;MongoDB Realm Web SDK Tutorial&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://twitter.com/MBeugnet"&gt;Maxime Beugnet&lt;/a&gt; &lt;br&gt;
Send MongoDB queries directly from the web browser with the MongoDB Realm Web SDK.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#get-hyped-synonyms-in-atlas-search"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.mongodb.com/developer/how-to/get-hyped-synonyms-atlas-search/"&gt;Get Hyped: Synonyms in Atlas Search&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.nraboy.com/"&gt;Nic Raboy&lt;/a&gt; &amp;amp; &lt;a href="https://www.mongodb.com/developer/author/anaiya-raisinghani/"&gt;Anaiya Raisinghani&lt;/a&gt; &lt;br&gt;
In this tutorial, learn how to index a MongoDB collection to capture searches for words that mean similar things.&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#official-mongodb-events"&gt;
  &lt;/a&gt;
  üìÖ Official MongoDB &lt;a href="https://live.mongodb.com/events/#/calendar"&gt;Events&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Attend an official MongoDB event near you (virtual for now)! Chat with MongoDB experts, learn something new, meet other developers, and win some swag!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Aug 26 (4:00pm GMT | Global) - &lt;a href="https://live.mongodb.com/events/details/mongodb-realm-global-community-presents-deep-dive-into-coroutines-kotlin-flow-and-livedata/"&gt;Deep dive into Coroutines, Kotlin Flow and LiveData&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#mongodb-on-twitch"&gt;
  &lt;/a&gt;
  üì∫ MongoDB on &lt;a href="https://www.twitch.tv/mongodb"&gt;Twitch&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;We stream tech tutorials, live coding, and talk to members of our community every Friday. Sometimes, we even stream twice a week! Be sure to &lt;a href="https://www.twitch.tv/mongodb"&gt;follow us on Twitch&lt;/a&gt; to be notified of every stream!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Latest Stream&lt;/em&gt;&lt;br&gt;
&lt;iframe src="https://clips.twitch.tv/embed?autoplay=false&amp;amp;clip=1101822414&amp;amp;parent=dev.to" height="399" width="710"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Upcoming Streams&lt;/em&gt;&lt;br&gt;
Aug 11 (9am PT) - &lt;a href="https://www.twitch.tv/mongodb/"&gt;The Generation Z Project (with MongoDB Atlas Search Synonyms)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Aug 19 (11am PT) - &lt;a href="https://youtu.be/FjKCmSnomEQ"&gt;Help me unSQLize my app!&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;üçø &lt;a href="https://www.twitch.tv/mongodb"&gt;Follow us&lt;/a&gt; on Twitch so you never miss a stream!&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#%F0%9F%8E%99-last-word-on-the-mongodb-podcast"&gt;
  &lt;/a&gt;
  üéô Last Word on the &lt;a href="https://mongodb.libsyn.com/"&gt;MongoDB Podcast&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Latest Episode&lt;/em&gt;&lt;br&gt;
&lt;iframe width="100%" height="232px" src="https://open.spotify.com/embed/episode/5BpusNFzpYQUsX0tyd6Ccy"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Catch up on past episodes&lt;/em&gt;:&lt;/p&gt;

&lt;p&gt;Ep. 69 - &lt;a href="https://open.spotify.com/episode/16u7s0GjBBCVYTwp9Qrvht?si=irAq74shR_yjEUfSevIk1g&amp;amp;dl_branch=1"&gt;At the Intersection of AI/ML/HCI with Doug Eck of Google&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ep. 68 - &lt;a href="https://open.spotify.com/episode/2AqpryYRv3dVUiAJpfWPdp?si=vQleDoLkTR-bOSJZqY8tpQ&amp;amp;dl_branch=1"&gt;Scaling the Real Estate Industry with Jim McClarty of Keller Williams&lt;br&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;(Not listening on Spotify? We got you! We're most likely on your favorite podcast network, including &lt;a href="https://podcasts.apple.com/us/podcast/the-mongodb-podcast/id1500452446"&gt;Apple Podcasts&lt;/a&gt;, &lt;a href="https://player.fm/series/the-mongodb-podcast"&gt;PlayerFM&lt;/a&gt;, &lt;a href="https://podtail.com/en/podcast/the-mongodb-podcast/"&gt;Podtail&lt;/a&gt;, and &lt;a href="https://www.listennotes.com/podcasts/the-mongodb-podcast-mongodb-0g6fUKMDN_y/"&gt;Listen Notes&lt;/a&gt; üòä)&lt;/p&gt;


&lt;h1&gt;
  &lt;a href="#mongodb-devrel-around-the-interwebz"&gt;
  &lt;/a&gt;
  üåç MongoDB DevRel around the Interwebz
&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;Watch our team do their thang at various conferences, meetups, and podcasts around the world (virtually, for now). Also, find external articles and guest posts from our DevRel team here!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;üìÖ Upcoming&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Join Adrienne at &lt;a href="https://www.javascriptandfriends.com/"&gt;JavaScript &amp;amp; Friends&lt;/a&gt; on Aug 20th! She'll give her talk &lt;em&gt;Documentation: The Missing Pieces&lt;/em&gt;:&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zoPCw0B2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/E8Yb7PpX0AEC2rM.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--DcoWe1uT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1101665721153699845/1KspSSg3_normal.png" alt="JSandFriendsConf profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        JSandFriendsConf
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @jsfriendsconf
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Register NowüéüÔ∏è- &lt;a href="https://t.co/pp19o5G1kQ"&gt;eventbrite.com/e/163395816285‚Ä¶&lt;/a&gt;&lt;br&gt;Join us on Aug-20 to hear &lt;a href="https://twitter.com/AdrienneTacke"&gt;@AdrienneTacke&lt;/a&gt; speak about Documentation- The Missing Pieces at JavaScript and Friends Conference 2021.&lt;br&gt;&lt;a href="https://twitter.com/hashtag/JSFriendsConf2021"&gt;#JSFriendsConf2021&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/TechConference"&gt;#TechConference&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/Ohio"&gt;#Ohio&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/DevCommunity"&gt;#DevCommunity&lt;/a&gt; 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      22:18 PM - 09 Aug 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1424857645815640066" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1424857645815640066" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1424857645815640066" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;





&lt;p&gt;üí° These $weeklyUpdates are always posted to the &lt;a href="https://www.mongodb.com/community/forums/"&gt;MongoDB Community Forums&lt;/a&gt; &lt;em&gt;first&lt;/em&gt;! &lt;a href="https://account.mongodb.com/account/register"&gt;Sign up&lt;/a&gt; today to always get first dibs on these $weeklyUpdates and other MongoDB announcements, interact with the MongoDB community, and help others solve MongoDB related issues!&lt;/p&gt;

</description>
      <category>mongodb</category>
      <category>database</category>
      <category>news</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Databases in AWS - RDS and Aurora</title>
      <author>Ajit Singh</author>
      <pubDate>Tue, 10 Aug 2021 02:27:24 +0000</pubDate>
      <link>https://dev.to/this-is-learning/databases-in-aws-rds-and-aurora-10bn</link>
      <guid>https://dev.to/this-is-learning/databases-in-aws-rds-and-aurora-10bn</guid>
      <description>&lt;p&gt;There are many managed databases provided by AWS which allows us to setup databases very easily.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-use-managed-databases-given-by-aws"&gt;
  &lt;/a&gt;
  Why use managed databases given by AWS
&lt;/h2&gt;

&lt;p&gt;You can setup your own Db on your on premises server or on your Ec2 instances but then you have to take care of backups, replication, scaling, availability, durability. Which is a lot of operational work added to your plate. If you mainly want to focus on developing your applications and don't want to worry about managing and handling your data bases then managed DB's by AWS are your best choice. These managed DB have a built in &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Scaling, Availability&lt;/li&gt;
&lt;li&gt;Backups and upgrades&lt;/li&gt;
&lt;li&gt;Monitoring, alarms etc.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#relational-db-services"&gt;
  &lt;/a&gt;
  Relational DB services
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#rds"&gt;
  &lt;/a&gt;
  RDS
&lt;/h3&gt;

&lt;p&gt;Amazon Relational Database Service (Amazon RDS) makes it easy to set up, operate, and scale a relational database in the cloud. It allows you to setup many relational DB with many different engines like  Amazon Aurora, PostgreSQL, MySQL, MariaDB, Oracle Database, and SQL Server. &lt;/p&gt;

&lt;p&gt;Using RDS has the following advantages over traditional Db&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Ease of setup - You can setup a production-ready relational database in minutes&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Scaling - These Db has built in scaling you can also setup replicas to reduce load on each server&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Availability - If you setup a multi-az db then all the data is automatically replicated and we can even recover our DB from there. There are also continuous backups and we can recover DB's from those timestamps&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Secure - It allows you to encrypt your data using industry standard encrypted IPsec VPN. It also offers encryption at rest and encryption in transit.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Maintenance - We have to do less management as OS management and updates are handled by AWS&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#aurora"&gt;
  &lt;/a&gt;
  Aurora
&lt;/h3&gt;

&lt;p&gt;Aurora is a special proprietary DB by AWS and you can use Mysql or Postgres it combines the performance and availability of traditional enterprise databases with the simplicity and cost-effectiveness of open source databases. Amazon Aurora is up to five times faster than standard MySQL databases and three times faster than standard PostgreSQL databases. It auto-scales up to 128TB per database instance and delivers high performance and availability with continuous backup to Amazon S3.&lt;/p&gt;

&lt;p&gt;Next we will do a Hands on setting up RDS on AWS cloud.&lt;/p&gt;

</description>
      <category>aws</category>
      <category>cloud</category>
      <category>devops</category>
      <category>cloudskills</category>
    </item>
    <item>
      <title>Authentication with Flask and Github || Authlib</title>
      <author>Nelson Adonis Hernandez</author>
      <pubDate>Tue, 10 Aug 2021 02:09:08 +0000</pubDate>
      <link>https://dev.to/nelsoncode/authentication-with-flask-and-github-authlib-19ej</link>
      <guid>https://dev.to/nelsoncode/authentication-with-flask-and-github-authlib-19ej</guid>
      <description>&lt;p&gt;For this example we will use Authlib which is the ultimate Python library in building OAuth and OpenID Connect servers&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;pip3 &lt;span class="nb"&gt;install &lt;/span&gt;Flask Authlib requests python-dotenv
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#configuration"&gt;
  &lt;/a&gt;
  Configuration
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;flask&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;url_for&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;redirect&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;dotenv&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;load_dotenv&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;getenv&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;authlib.integrations.flask_client&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;OAuth&lt;/span&gt;


&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;secret_key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"mysecretkey"&lt;/span&gt;

&lt;span class="n"&gt;oauth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;OAuth&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;github&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;oauth&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;register&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'github'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;client_id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;getenv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"CLIENT_ID"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;client_secret&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;getenv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"SECRET_ID"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;access_token_url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'https://github.com/login/oauth/access_token'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;access_token_params&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;authorize_url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'https://github.com/login/oauth/authorize'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;authorize_params&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;api_base_url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'https://api.github.com/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;client_kwargs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'scope'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'user:email'&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;   

&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;saludo&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;"Hello"&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;'__main__'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;load_dotenv&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;4000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;host&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"0.0.0.0"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#route-for-authorization"&gt;
  &lt;/a&gt;
  Route for Authorization
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;authorize_redirect&lt;/strong&gt; indicates the url to redirect to the &lt;strong&gt;"Callback URL"&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/login"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;login&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;redirect_url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;url_for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"authorize"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;_external&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;authorize_redirect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;redirect_url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#callback-url"&gt;
  &lt;/a&gt;
  Callback URL
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/authorize"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;authorize&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;token&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;authorize_access_token&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;resp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'user'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;profile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;resp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="c1"&gt;# do something with the token and profile
&lt;/span&gt;    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;profile&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;redirect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#settings-in-github"&gt;
  &lt;/a&gt;
  Settings in Github
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--u-c5IeTp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/le02uucwzzt4n09vqcye.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u-c5IeTp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/le02uucwzzt4n09vqcye.png" alt="OAuth application settings"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/NelsonCode/authlib-flask-github"&gt;Code of example in Github üîó&lt;/a&gt;&lt;/p&gt;

</description>
      <category>authlib</category>
      <category>flask</category>
      <category>github</category>
      <category>nelsoncode</category>
    </item>
    <item>
      <title>To-Do List ‚úçÔ∏è</title>
      <author>Patricia Nicole</author>
      <pubDate>Tue, 10 Aug 2021 01:31:27 +0000</pubDate>
      <link>https://dev.to/pat_the99/to-do-list-16l4</link>
      <guid>https://dev.to/pat_the99/to-do-list-16l4</guid>
      <description>&lt;h4&gt;
  &lt;a href="#live-preview-and-can-be-found-here"&gt;
  &lt;/a&gt;
  Live preview and can be found &lt;a href="https://fatrixienicolieopetina.github.io/todo-list/"&gt;here&lt;/a&gt;
&lt;/h4&gt;

&lt;h3&gt;
  &lt;a href="#about"&gt;
  &lt;/a&gt;
  About üë®‚Äçüè´
&lt;/h3&gt;

&lt;p&gt;The todo list have projects or separate lists of todos. When a user first opens the app, there is some sort of ‚Äòdefault‚Äô project called 'Home' to which all of the todos are put. Users can create new projects and choose which project their todos go into. &lt;strong&gt;localStorage&lt;/strong&gt; is used to save user‚Äôs projects and todos between sessions.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#wilthoughts"&gt;
  &lt;/a&gt;
  WIL/Thoughts ü§î
&lt;/h3&gt;

&lt;p&gt;Tried revisiting and reading about SOLID principles to properly write a maintable code. &lt;/p&gt;

&lt;p&gt;üìå &lt;strong&gt;Single Responsibility Principle&lt;/strong&gt; . Design classes/functions in a way that it is only doing ONE thing.&lt;/p&gt;

&lt;p&gt;üìå &lt;strong&gt;Open/Closed Principle&lt;/strong&gt; - For me , this is very difficult to apply. You really have to think carefully about each class design, its associations, relationships etc.&lt;/p&gt;

&lt;p&gt;üìå &lt;strong&gt;Liskov Substitution Principle&lt;/strong&gt; - It is like saying that a child can act as a proxy to the parent (my definition for simplicity üòÜ). I believe this is almost always enforced in OOP languages like Java.&lt;/p&gt;

&lt;p&gt;üìå  &lt;strong&gt;Interface Segregation Principle&lt;/strong&gt; - In simple terms, interfaces should not force implementing classes to implement methods they do not need. That is why we have functional interfaces, interfaces with only one abstract method. This special type of interface enforces ISP.&lt;/p&gt;

&lt;p&gt;üìå &lt;strong&gt;Dependency Inversion Principle&lt;/strong&gt; - At first, I had trouble understanding what the second rule of this principle meant.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;High-level modules should not depend on low-level modules.  Both should depend on abstractions. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This is achievable by using constructs such as interfaces to facilitate loose coupling between modules. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Abstractions should not depend upon details.  Details should depend upon abstractions.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I did not quite understand what it meant at first. After searching through the web, this üëá is the best answer I found.&lt;/p&gt;

&lt;p&gt;ü•á &lt;em&gt;It means that if the details change they should not affect the abstraction. The abstraction is the way clients view an object. Exactly what goes on inside the object is not important. Lets take a car for example, the pedals and steering wheel and gear lever are abstractions of what happens inside the engine. They do not depend on the details though because if someone changes my old engine for a new one I should still be able to drive the car without knowing that the engine changed.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The details on the other hand MUST conform to what the abstraction says. I would not want to implement an engine that suddenly causes the brakes to double the speed of the car. I can re-implement brakes any way I want as long as externally they behave the same way.&lt;/p&gt;

&lt;p&gt;And those are my WIL(What I Learned) thoughts for a very, very simple to-do project.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Check out the code of the exercise in this &lt;a href="https://github.com/fatrixienicolieopetina/todo-list"&gt;link&lt;/a&gt;&lt;/em&gt; &lt;/p&gt;

&lt;p&gt;&lt;em&gt;This project is taken from the &lt;a href="https://www.theodinproject.com/paths/full-stack-javascript/courses/javascript/lessons/todo-list"&gt;The Odin Project&lt;/a&gt; todo list exercise.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;As always cheers to continued learning üç∑!&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>showdev</category>
    </item>
  </channel>
</rss>
