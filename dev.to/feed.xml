<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Creating a RESTful API with Node, Express.js, HarperDB, and Docker, and testing it with Hoppscotch</title>
      <author>Pramit Marattha</author>
      <pubDate>Wed, 22 Dec 2021 09:13:26 +0000</pubDate>
      <link>https://dev.to/aviyel/creating-a-restful-api-with-node-expressjs-harperdb-and-docker-and-testing-it-with-hoppscotch-4h18</link>
      <guid>https://dev.to/aviyel/creating-a-restful-api-with-node-expressjs-harperdb-and-docker-and-testing-it-with-hoppscotch-4h18</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-an-api"&gt;
  &lt;/a&gt;
  What is an API?
&lt;/h2&gt;

&lt;p&gt;API the acronym actually stands for Application Programming Interface. It simply provides the interface for the different applications and different parts of the software to communicate with each other safely and in a secure manner. In brief, API is the messenger that takes requests and tells the system what the users want to do and returns back the response. APIs are standardized. Meaning, there is an industry-defined standard for defining the API and there are a few formats that are quite popular like SOAP, GraphQL and REST.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-origins-of%C2%A0-rest"&gt;
  &lt;/a&gt;
  The Origins of  REST.
&lt;/h2&gt;

&lt;p&gt;Prior to the year 2000, there was no consensus on how to create or use an API. Its integration necessitated the use of protocols such as SOAP, which were infamously difficult to create, operate, and debug.&lt;/p&gt;

&lt;p&gt;This completely changed in the year 2000 when Roy T. Fielding named and characterized the Web's architectural style in his Ph.D. dissertation. Fielding called his description of the Web's architectural style "Representational State Transfer" (REST).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-rest-apis"&gt;
  &lt;/a&gt;
  What are REST APIs?
&lt;/h2&gt;

&lt;p&gt;Web services are purpose-built web servers that cater to the demands of a website or any other application. Client programs communicate with web services using application programming interfaces. API exposes a set of data and functions that allow computer applications to interact with one another and share information. A Web API is the public face of a web service, listening as well as reacting to client requests. REST architectural styles are extensively used in the building of APIs for modern web services. A REST API is a Web API that adheres to the REST architectural style.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1mnViOR5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639416784463-image16-resized.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1mnViOR5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639416784463-image16-resized.png" alt="Client server request" width="760" height="244"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The presence of a REST API qualifies a web service as "RESTful." A REST API is a collection of interconnected resources. This collection of resources is referred to as the REST API's  resource model. REST APIs that are well-designed can entice client developers to adopt web services. An aesthetically beautiful REST API design is a must-have feature in today's open market.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-a-crud-restful-api"&gt;
  &lt;/a&gt;
  Creating a CRUD RESTful API.
&lt;/h2&gt;

&lt;p&gt;CRUD is simply an acronym used for Create, Read, Update and Delete. In this blog tutorial, we are going to build the CRUD Restful API using Node(JavaScript runtime), Express(Node.js framework), HarperDB(Hybrid SQL &amp;amp; NoSQL scalable database), Docker(virtualization to deliver software in packages) and Hoppscotch(open source API testing environment).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#nodejs"&gt;
  &lt;/a&gt;
  Node.js
&lt;/h3&gt;

&lt;p&gt;Ryan Dahl created Node.js in 2009, roughly thirteen years after the debut of the first server-side JavaScript environment, Netscape's LiveWire Pro Web. Node is a JavaScript runtime built on chrome’s V8 engine and executes JavaScript code outside of the web-browser. Node.js allows developers to utilize JavaScript to create command line tools and server-side scripting, which involves running scripts on the server to generate dynamic web page content before the page is transmitted to the user's web browser.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--J5Ic5cdn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639417125219-image381.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--J5Ic5cdn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639417125219-image381.png" alt="Nodejs" width="300" height="184"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#express"&gt;
  &lt;/a&gt;
  Express
&lt;/h3&gt;

&lt;p&gt;Express is an open source back end web application framework for Node.js. It is intended for use in the development of web applications and APIs. It has been dubbed the "de facto standard server framework for Node.js."&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--grEhs9Wk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639417152351-image19.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--grEhs9Wk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639417152351-image19.png" alt="express" width="465" height="141"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#docker"&gt;
  &lt;/a&gt;
  Docker
&lt;/h3&gt;

&lt;p&gt;Docker is a platform/tool for developers to build, run and share applications using the concept of containers. The process of deploying an app using containers is called containerizations. Docker is not only the technology which uses containers, but it is the most widely used and the current de facto standard.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KGdU5_Os--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639417189868-image7-resized.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KGdU5_Os--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639417189868-image7-resized.png" alt="Docker" width="760" height="180"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-a-docker-container"&gt;
  &lt;/a&gt;
  What is a docker container?
&lt;/h3&gt;

&lt;p&gt;Docker containers wraps up code and all its dependencies so that the program can be moved from one computing environment to another quickly and reliably.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#features-of-containers"&gt;
  &lt;/a&gt;
  Features of Containers.
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Containers are flexible because no matter the complexity, the dependencies and the programming languages, every application can be containerized.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Containers are lightweight because they share the same kernel, and they don’t consume a lot of system resources.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Containers are portable because they can be built locally and then can be run on any pc where docker is installed.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Containers are loosely coupled, they are well encapsulated and highly self-sufficient so you can change, upgrade and delete a container without disrupting the whole system and it is very good for big projects where different developers work on different parts of the same systems at the same time.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Containers are scalable, which means the user can adjust and automatically distribute container replicas without any big effort, users can also use orchestration tools like Kubernetes.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Containers are secure because they apply aggressive constraints and isolations to processes without any configuration needed.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#what-is-docker-image"&gt;
  &lt;/a&gt;
  What is Docker Image?
&lt;/h3&gt;

&lt;p&gt;Each container has its own dedicated file system(fs) which is provided by a docker Image. Docker Image is an executable packaged file that contains everything users need to run the application, code, dependencies, tools, libraries and configuration.&lt;/p&gt;

&lt;p&gt;Docker Image is like a class and Docker container is an instance of that class. Hence, users can add as many containers running from the same image at the same time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#hoppscotch"&gt;
  &lt;/a&gt;
  Hoppscotch.
&lt;/h2&gt;

&lt;p&gt;Hoppscotch is a fully open sourced API development ecosystem created by Liyas Thomas and other open source contributors. It allows users to test the APIs directly from their browser window without switching back and forth between multiple applications. Hoppscotch offers a plethora of awesome features like custom themes, WebSocket communication, GraphQL testing, user authentications , API requests history , proxy, API documentations, Keyboard shortcuts, API collections and much more.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sScnyOxf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639417304755-image11.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sScnyOxf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639417304755-image11.png" alt="Hoppscotch" width="512" height="512"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hoppscotch also allows users to authenticate via github &amp;amp; google account to save and sync their history, collections and environment. Hoppscotch is compatible with a wide number of browsers and devices, and it can be also installed as a PWA (Progressive Web App).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#harper-db"&gt;
  &lt;/a&gt;
  Harper DB
&lt;/h2&gt;

&lt;p&gt;Harper DB is a schema-less single model enterprise-class database implemented in Nodejs, drastically simplifying Big Data Architectures. Combining structured and unstructured data workloads have been difficult and costly. Harper DB has developed a database that uses SQL &amp;amp; NoSQL in a single model with an easy-to-use REST API. Harper DB divides data into independent indices, with each characteristic saved separately, allowing the data to be fully indexed but requiring no additional storage space. Using parallel computing, programmers and developers may run complicated multi-table SQL queries or JSON searches on a unified model. Harper DB reassembles these exploded indices into single object arrays, allowing developers to run structured queries on unstructured data in real-time with no transformational delay. Harper DB is written in node, it leverages a multi-core architecture and is capable of scaling as per the user's hardware, it eliminates row locking and collisions while maintaining ACID compliance. It also eliminates the need to duplicate data, which prevents the use of large amounts of RAM and disk storage. Furthermore, the Nodejs framework enables Harper DB to be highly portable, with a tiny service-oriented architecture and a reduced runtime footprint. Developers and programmers can concentrate on their code rather than DevOps by leveraging technologies and interfaces that they are already familiar with, such as ANSI SQL and REST.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--isjMEsWi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639417525867-image20-resized.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--isjMEsWi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639417525867-image20-resized.png" alt="HarperDB" width="760" height="399"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;HarperDB is built to handle a wide range of use cases, including edge computing, running an application database, data warehousing, and transactional and document stores, making it ideal for running directly on a micro computing edge device in the cloud or at a data center.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Let's get started and create some CRUD API.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://studio.harperdb.io/sign-up"&gt;https://studio.harperdb.io/sign-up&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xyz53ZtN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639418003640-image2-resized.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xyz53ZtN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639418003640-image2-resized.png" alt="Signup HarperDB cloud instance" width="760" height="373"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, create a Free instance of Harper DB by clicking on “Create new HarperDB cloud Instance”&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8pfc9zdB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639418069885-image35-resized.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8pfc9zdB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639418069885-image35-resized.png" alt="Create a HarperDB cloud instance" width="760" height="376"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After that, a popup will appear . Click on “Create HarperDB cloud Instance”.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cclZPtVM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639418346766-image14-resized.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cclZPtVM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639418346766-image14-resized.png" alt="Create a HarperDB cloud instance" width="760" height="377"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, add username, password and Instance name like shown below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BN3ClgBs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639418526103-image25-resized.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BN3ClgBs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639418526103-image25-resized.png" alt="instance information" width="760" height="375"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Leave the default-free Instance ram and storage size and choose your preferred Instance Region.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jsGxQrzn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639418481867-image24-resized.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jsGxQrzn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639418481867-image24-resized.png" alt="Instance specs" width="760" height="374"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click on “I agree” and proceed to add an instance.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--E3DtVsE3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639418503456-image31-resized.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E3DtVsE3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639418503456-image31-resized.png" alt="Confirm Instance Details" width="760" height="378"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--y2PPCias--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639418700511-image28-resized.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y2PPCias--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639418700511-image28-resized.png" alt="Creating Instance" width="760" height="378"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ESosic0i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639418746208-image1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ESosic0i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639418746208-image1.png" alt="Creating instance" width="481" height="261"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click on the instance and Please keep in mind that we do not need to enter all of the column values here; they will be added automatically when needed.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8pxqJdOQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639418784080-image17-resized.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8pxqJdOQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639418784080-image17-resized.png" alt="Instance" width="760" height="376"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zP6Fp7I0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639418812127-image10.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zP6Fp7I0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639418812127-image10.png" alt="Schema Name" width="505" height="221"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--orZlhL6K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639418822625-image21.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--orZlhL6K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639418822625-image21.png" alt="Schema and Tables" width="501" height="437"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#stepbystep-instructions-for-crafting-our-api"&gt;
  &lt;/a&gt;
  Step-by-step instructions for crafting our API.
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Create a project folder.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--U0TzCgrL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639418830625-image22.png" alt="Project Folder" width="422" height="188"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;mkdir crud-api
cd crud-api
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Initialize Node application inside that project folder.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SikfxSVv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639418914839-image12.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SikfxSVv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639418914839-image12.png" alt="npm init-y " width="494" height="248"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm init -y
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Install four dependencies – express, nodemon, harperive &amp;amp; dotenv&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XLok0gh---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639418929100-image27-resized.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XLok0gh---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639418929100-image27-resized.png" alt="Package Installation" width="760" height="477"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install express harperive nodemon dotenv
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Create ”controllers”, ”routes” and “util” folders.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--15hrhrQS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639418842413-image23.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--15hrhrQS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639418842413-image23.png" alt="Folder structure" width="259" height="175"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create index.js file.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GQVB1rni--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639424131311-image36.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GQVB1rni--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639424131311-image36.png" alt="import express and initialize" width="394" height="128"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Import express , initialize it &amp;amp; set headers.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZNHn5hii--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639424355810-image6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZNHn5hii--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639424355810-image6.png" alt="Setting up proper header" width="504" height="392"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dotenv&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;PORT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PORT&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="mi"&gt;5000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setHeader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Access-Control-Allow-Origin&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;*&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setHeader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Access-Control-Allow-Methods&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;GET, POST, OPTIONS, PUT, PATCH, DELETE&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setHeader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Access-Control-Allow-Headers&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;X-Requested-With,content-type&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setHeader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Access-Control-Allow-Credentials&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Setup two routes. One for testing purposes and another one for actual implementation.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cntc4M-a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639424540897-image5-resized.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cntc4M-a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639424540897-image5-resized.png" alt="Setting up route" width="760" height="399"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/testing&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./routes/testing.routes.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/students&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./routes/students.routes.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PORT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`App is currently running at http://localhost:&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;PORT&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Create db.js inside util folder and create connection for HarperDB.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// create connection for Harper DB&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;harperive&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;harperive&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;configuration&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;username&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;HARPER_INSTANCE_USERNAME&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;password&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;HARPER_INSTANCE_PASSWORD&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;schema&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;HARPER_INSTANCE_SCHEMA&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;harperHost&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;HARPER_HOST_INSTANCE_URL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;db&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;harperive&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;configuration&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;db&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Create testing.routes.js file inside routes folder. It is just a test endpoint to test whether the application is working or not.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;controller&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../controllers/testing.controllers.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;router&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;Router&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/appinfo&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;controller&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getAppInfo&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Create &lt;code&gt;students.routes.js&lt;/code&gt; file inside routes folder and add references to your api endpoint.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;router&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;Router&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;controller&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../controllers/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;students&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.controllers&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;router&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;controller&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getAllStudent&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/:id&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;controller&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getOneStudent&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;controller&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createOneStudent&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/:id&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;controller&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;updateOneStudent&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/:id&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;controller&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;deleteOneStudent&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Create testing.controllers.js file inside controllers folder. This will be used for testing purposes only, to test whether the app / DB instances are running or not.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;exports&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getAppInfo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Aviyel CRUD API Testing&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;v1.0.0&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Create students.controllers.js file inside controllers folder and add the following code.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../util/db&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;DB_SCHEMA&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;HARPER_INSTANCE_SCHEMA&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;TABLE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;students&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;getAllStudent method fetches all the student info.&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;//Get all the student&lt;/span&gt;
&lt;span class="nx"&gt;exports&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getAllStudent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;qry&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`SELECT * FROM &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;DB_SCHEMA&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;TABLE&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;students&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;qry&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;students&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ERROR while fetching all student &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Student:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;getOneStudent method fetches only one student info by their id.&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;//Get only one student&lt;/span&gt;
&lt;span class="nx"&gt;exports&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getOneStudent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;qry&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`SELECT * FROM &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;DB_SCHEMA&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;TABLE&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; WHERE id="&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;student&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;qry&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;student&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ERROR while fetching student &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Student:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;createOneStudent method add/insert only one student.&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;//create new student&lt;/span&gt;
&lt;span class="nx"&gt;exports&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createOneStudent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="na"&gt;table&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;TABLE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;records&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="na"&gt;username&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;password&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;rollNumber&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;rollNumber&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;updateOneStudent method updates only one student.&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;//update one student&lt;/span&gt;
&lt;span class="nx"&gt;exports&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;updateOneStudent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;updateStudent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;update&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="na"&gt;table&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;TABLE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;records&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;username&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;password&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;rollNumber&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;rollNumber&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;updateStudent&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;deleteOneStudent method deletes only one student.&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;//Delete one student&lt;/span&gt;
&lt;span class="nx"&gt;exports&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;deleteOneStudent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;qry&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`DELETE FROM &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;DB_SCHEMA&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;TABLE&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; WHERE id="&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;deleteStudent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;qry&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;deleteStudent&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, Let’s create a Docker image of the above-crafted application.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://docs.docker.com/engine/install/"&gt;https://docs.docker.com/engine/install/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Create three file &lt;code&gt;Dockerfile&lt;/code&gt;, &lt;code&gt;docker-compose.yml&lt;/code&gt; and &lt;code&gt;.dockerignore&lt;/code&gt; . Inside &lt;code&gt;.dockerignore&lt;/code&gt; file add all the code below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# Node
## Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*

## Dependency directories
node_modules
.git
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And,inside Dockerfile add all the code below.(Note: A Dockerfile has no file extension)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;FROM node:14.1.0

EXPOSE 8080

WORKDIR /src

COPY package*.json ./

RUN npm install

COPY . . 

CMD ["node", "index.js"]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Add all the below code inside docker-compose.yml and give the image name whatever you want.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;3.8"&lt;/span&gt;
&lt;span class="na"&gt;services&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;app&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;container_name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;crudapi_aviyel&lt;/span&gt;
    &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;pramitmarattha/aviyel-crudapi:0.0.1&lt;/span&gt;
    &lt;span class="na"&gt;build&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;context&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;.&lt;/span&gt;
    &lt;span class="na"&gt;ports&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;8080:8080"&lt;/span&gt;
    &lt;span class="na"&gt;env_file&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;.env&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Update the .env file by adding proper configuration.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;PORT=8080
HARPER_HOST_INSTANCE_URL=https://----
HARPER_INSTANCE_USERNAME=………
HARPER_INSTANCE_PASSWORD=………
HARPER_INSTANCE_SCHEMA=………….
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For “&lt;code&gt;HARPER_HOST_INSTANCE_URL&lt;/code&gt;” , head over to the config of that running cloud instance inside the dashboard UI of Harper DB and copy the URL and paste it inside .env .&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JHGECrvy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639426881433-image18-resized.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JHGECrvy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639426881433-image18-resized.png" alt="HarperDB host Instance URL" width="760" height="376"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To retrieve username and password simply toggle to the users section of that running instance.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gGgLGWV7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639426937245-image26-resized.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gGgLGWV7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639426937245-image26-resized.png" alt="HarperDB instance username" width="760" height="374"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And finally, the Schema name can be retrieved from the browse section of that instance.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--x1MSsf7R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639426997090-image32.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--x1MSsf7R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639426997090-image32.png" alt="schemas" width="501" height="367"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Finally, It's time to create a docker image.&lt;/p&gt;

&lt;p&gt;Note: Make sure your docker is still up and running.&lt;/p&gt;

&lt;p&gt;In your CLI type: &lt;code&gt;docker-compose build&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QX99n1Cy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639427083551-image15-resized.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QX99n1Cy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639427083551-image15-resized.png" alt="Docker building" width="760" height="278"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And After building image run: &lt;code&gt;docker-compose up&lt;/code&gt; or &lt;code&gt;docker compose up&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mqd-vwkv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639427126483-image39.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mqd-vwkv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639427126483-image39.png" alt="Docker Up and Running" width="519" height="102"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-hoppscotch-to-test-our-apis"&gt;
  &lt;/a&gt;
  Using “Hoppscotch” to test our APIs.
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pNJ5p-OG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639427161484-image11.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pNJ5p-OG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639427161484-image11.png" alt="Hoppscotch Logo" width="512" height="512"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When the request is properly completed, the user can see the status code of 200 and JSON response at the Response &amp;amp; Response Body section respectively.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BFunLMrk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639427207056-image33-resized.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BFunLMrk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639427207056-image33-resized.png" alt="CRUD api Testing" width="760" height="597"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#post"&gt;
  &lt;/a&gt;
  POST
&lt;/h3&gt;

&lt;p&gt;Let’s create and add some students by sending a “POST request”.&lt;/p&gt;

&lt;p&gt;Select the “POST” request from the dropdown, enter the API endpoint and choose Content/Type as an application/JSON. Finally, in the raw request body enter the “username”,” password” and “rollNumber” after that hit the Send button. If everything went right, then you should see “status”:”success” in the response body.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ajcQYCbe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639427309168-image9-resized.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ajcQYCbe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639427309168-image9-resized.png" alt="Adding Student Data" width="760" height="784"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;HarperDB provides a beautiful and aesthetically pleasing dashboard UI which displays the Realtime records of the tables. If everything went right and the “POST” request was made successfully, then a new record should be populated inside that student’s table.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SzNxa3GT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639427413053-image37-resized.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SzNxa3GT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639427413053-image37-resized.png" alt="Student added successfully" width="760" height="342"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#get-students-by-id"&gt;
  &lt;/a&gt;
  GET students by id.
&lt;/h2&gt;

&lt;p&gt;To check whether a student exists or not, a GET request should be made using the student’s id as a query argument at the end of URL.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CFYiX_rK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639427447456-image3-resized.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CFYiX_rK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639427447456-image3-resized.png" alt="GET student info by id" width="760" height="599"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#get-all-students"&gt;
  &lt;/a&gt;
  GET all students.
&lt;/h2&gt;

&lt;p&gt;When the GET request executes effectively, a JSON response containing all the records of the students will be thrown at the Response Body section along with the status response code of 200.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h2CZpnCX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639427520061-image13-resized.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h2CZpnCX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639427520061-image13-resized.png" alt="GET all student" width="760" height="984"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#update-student-by-id"&gt;
  &lt;/a&gt;
  Update student by id.
&lt;/h2&gt;

&lt;p&gt;To update the record of a particular student, a PUT request should be made using the student’s id as a query argument at the end of the URL along with the updated payload / req Body of that particular student.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pvcQsAji--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639427283306-image34-resized.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pvcQsAji--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639427283306-image34-resized.png" alt="update student by id" width="760" height="784"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#delete-student-by-id"&gt;
  &lt;/a&gt;
  Delete Student by Id.
&lt;/h2&gt;

&lt;p&gt;To delete the record of particular student , DELETE request should be made using the student’s id as a query argument at the end of URL of that particular student.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WXc8V0xk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639427733150-image-resized.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WXc8V0xk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639427733150-image-resized.png" alt="Delete student id" width="760" height="784"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#api-collections-and-history"&gt;
  &lt;/a&gt;
  API Collections and History.
&lt;/h2&gt;

&lt;p&gt;After a while, it may be really tough to handle and revisit the API requests. History provides options to review the past made requests, mark them as favorites and re-run the process at any given time.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4aPMSA9K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639427777547-image30.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4aPMSA9K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639427777547-image30.png" alt="API request history" width="579" height="801"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In some cases, we may need to make API requests for many different things at the same time. To divide the requests per resource into collections would be ideal. Hoppscotch makes it really very simple to create an unlimited number of collections.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--P-rkVVv6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639427817727-image29.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P-rkVVv6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639427817727-image29.png" alt="API endpoint collection" width="565" height="809"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#generating-documentation-using-collection"&gt;
  &lt;/a&gt;
  Generating Documentation using “Collection”
&lt;/h2&gt;

&lt;p&gt;Hoppscotch's one of the best features is that it uses the collection to automatically generate documentation for API requests.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--I3TeUB02--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639427885855-image8-resized.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--I3TeUB02--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1639427885855-image8-resized.png" alt="API documentation auto generate" width="760" height="394"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;The entire project source code is available here :&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://github.com/aviyeldevrel/devrel-tutorial-projects/tree/main/CRUD-api-testing-with-Hoppscotch"&gt;https://github.com/aviyeldevrel/devrel-tutorial-projects/tree/main/CRUD-api-testing-with-Hoppscotch&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Main article available here =&amp;gt; &lt;a href="https://aviyel.com/post/1546"&gt;https://aviyel.com/post/1546&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Follow &lt;a href="https://twitter.com/AviyelHq"&gt;@aviyelHQ&lt;/a&gt; or &lt;a href="https://aviyel.com/discussions"&gt;sign-up&lt;/a&gt; on Aviyel for early access if you are a project maintainer, contributor, or just an Open Source enthusiast.&lt;/p&gt;

&lt;p&gt;Join Aviyel's Discord =&amp;gt; &lt;a href="https://discord.gg/TbfZmbvnN5"&gt;Aviyel's world&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Twitter =&amp;gt;[&lt;a href="https://twitter.com/AviyelHq"&gt;https://twitter.com/AviyelHq&lt;/a&gt;]&lt;/p&gt;

</description>
      <category>node</category>
      <category>express</category>
      <category>hoppscotch</category>
      <category>docker</category>
    </item>
    <item>
      <title>The New Manuscript </title>
      <author>Manu Martinez</author>
      <pubDate>Wed, 22 Dec 2021 08:58:48 +0000</pubDate>
      <link>https://dev.to/whitehatdevv/the-new-manuscript-fdj</link>
      <guid>https://dev.to/whitehatdevv/the-new-manuscript-fdj</guid>
      <description>&lt;p&gt;Hi guys, long time no see! 👋  &lt;/p&gt;

&lt;p&gt;I'm here again with another post about html, today we'll go into the evolution of the website! &lt;br&gt;
To understand today's post I suggest you to read the previous one! &lt;br&gt;
(So  🏃 to it and come back later ) OK? Well, let's going to start with the post: 😉&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-evolution-of-websites"&gt;
  &lt;/a&gt;
  The evolution of websites:
&lt;/h2&gt;

&lt;p&gt;As you may remember, in the past, tables were the first way to organise websites, and it was freaking horrible 😱 to layout them! because the content never fit well at all and over and above, almost all browsers followed their own rules, making web development a real challenge 💪🏁 . &lt;/p&gt;

&lt;p&gt;It's obvious the worth problem which they caused on web developers life, because they were very complicated and difficult to learn due to the lack of documentation. ( the god of Stack Overflow didn't exist, yet 🤣) . For all this, the W3Consortium was created, whose aim was to guarantee the correct growth of all the websites.&lt;/p&gt;

&lt;p&gt;When the software came to seem wiser, the way to structure website came to a most easy structure, the &lt;em&gt;div tag&lt;/em&gt; became more powerful than ever. Everything began to be build under this tag, which was the &lt;strong&gt;flagship&lt;/strong&gt; of the HTML4 standard, nevertheless in HTML5, the so-called &lt;strong&gt;semantic&lt;/strong&gt; tags emerged, which are nothing more than the HTML4 tags building a new tag with more sense .&lt;/p&gt;

&lt;p&gt;It's an interesting story isn't it? &lt;br&gt;
Well, let's give it some color! So, it was such old websites looked likes 😃. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--k2BJXg_7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638925675877/BhpTfcMHO.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k2BJXg_7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638925675877/BhpTfcMHO.png" alt="HTML old.png" width="880" height="550"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;and this is a modern one:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--abdptOA9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638925693616/PyHDNkAjh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--abdptOA9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638925693616/PyHDNkAjh.png" alt="HTML new.png" width="880" height="550"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A great change right? 🤪&lt;/p&gt;

&lt;p&gt;Ok, as I said you, the &lt;em&gt;semantic&lt;/em&gt; tags allowed a better understanding between developer-website-search engine, and how this is possible? &lt;br&gt;
Let's trying to see on an example 😉&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Sensible structures for developers:&lt;/strong&gt;&lt;br&gt;
By not having to use the same DIV tag all the time and differentiate only by classes the development time of your website is greatly reduced, and then, why?&lt;br&gt;
The reason is that errors are easier and easier to find, you just have to do a quick search without getting lost among so many "divs".&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;** An improvement in the speed of loading the page:**&lt;br&gt;
If tags are considerately reduced we can see that website will load faster, also its SEO will improve a lot, taking more advantage about how your website will look like.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Well, that's a lot for today, isn't it? I think we call it a day 🤩🤩🤩! &lt;br&gt;
Thanks for following the blog and remember to always be the best version of you!&lt;/p&gt;

</description>
      <category>html</category>
      <category>beginners</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>What is Scope and Scope Chain in JavaScript? </title>
      <author>Sumudu Siriwardana</author>
      <pubDate>Wed, 22 Dec 2021 08:55:08 +0000</pubDate>
      <link>https://dev.to/sumusiriwardana/what-is-scope-and-scope-chain-in-javascript-52j5</link>
      <guid>https://dev.to/sumusiriwardana/what-is-scope-and-scope-chain-in-javascript-52j5</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;This article was originally published on &lt;a href="https://dasha.ai/en-us/blog/javascript-scope-and-scope-chain"&gt;Dasha.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In case you are wondering, Dasha is a &lt;strong&gt;conversational-AI-as-a-service&lt;/strong&gt; platform that lets you embed realistic voice and text conversational capabilities into your apps or products.  &lt;a href="https://auth.dasha.ai/account/register"&gt;Start building for free!&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;




&lt;p&gt;The scope and scope chain are fundamental concepts in JavaScript and other programming languages. Also, one of the most confusing concepts at the beginning. Understanding the scope and scope chain is crucial for writing efficient, clean code and essential to building a solid foundation and mastering JavaScript. &lt;/p&gt;

&lt;p&gt;If you are new to JavaScript, you might be struggling to understand these concepts. I remember how long it took me to get a firm understanding of these two tricky concepts. In this post, we will go through the scope and scope chain with some simple examples to clear out the confusion. &lt;/p&gt;

&lt;p&gt;Without further ado, let's get started 😊&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ExJ0o0ht--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639934075242/jBTOnq_-z.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ExJ0o0ht--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639934075242/jBTOnq_-z.gif" alt="right.gif" width="480" height="270"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-scope"&gt;
  &lt;/a&gt;
  What is Scope?
&lt;/h2&gt;

&lt;p&gt;Have you ever wondered why you can't access some of the variables outside a function? Or did you find it strange that you can have the same variable name outside a function and inside a function as well? The reason for this strange behavior is that every variable, function, or code block has its own scope. &lt;/p&gt;

&lt;p&gt;According to  &lt;a href="https://developer.mozilla.org/en-US/docs/Glossary/Scope"&gt;MDN&lt;/a&gt;, the scope is,&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The current context of execution. The context in which values and expressions are "visible" or can be referenced. If a variable or other expression is not "in the current scope," then it is unavailable for use.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;What does this mean?&lt;/p&gt;

&lt;p&gt;Scope in JavaScript refers to the accessibility or visibility of variables and expressions. That means the space where an item, such as a variable or a function, is visible and accessible in your code. &lt;/p&gt;

&lt;p&gt;For example, once a variable is declared, it can only be accessible within the scope that it has been declared in and will not be accessible outside the scope.&lt;/p&gt;

&lt;p&gt;Let's look at a couple of examples to understand this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;userName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Sarah&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;userName&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="c1"&gt;// "Sarah"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above example, we have declared a variable &lt;code&gt;userName&lt;/code&gt; and assigned the value of &lt;code&gt;Sarah&lt;/code&gt;. No issue or error is coming up when we want to access this variable and print the name to the console. &lt;/p&gt;

&lt;p&gt;Now let's declare this variable inside a function and print the value to the console outside the function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;greeting&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;userName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Sarah&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Hello &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;userName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;!`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;greeting&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// "Hello Sarah!"&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;userName&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// ReferenceError: userName is not defined&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above example, when trying to log the variable, JavaScript throws an error, &lt;code&gt;ReferenceError: userName is not defined&lt;/code&gt;. This is because the &lt;code&gt;greeting&lt;/code&gt; function creates a scope for the &lt;code&gt;userName&lt;/code&gt; variable. And the &lt;code&gt;userName&lt;/code&gt; variable can be accessed only within this scope, inside the function.&lt;/p&gt;

&lt;p&gt;You might think that this behavior is strange. But having a scope for variables and expressions helps us to write efficient code and avoid conflicts and errors within our code. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-is-scope-important"&gt;
  &lt;/a&gt;
  Why is Scope important?
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#1-ownership"&gt;
  &lt;/a&gt;
  1. Ownership
&lt;/h4&gt;

&lt;p&gt;One of the main benefits of scope is ownership. If we can access all variables from anywhere within our program, it will lead to unintended modifications to the variable from other parts of the program. Which means anyone can change them from anywhere at any given time.&lt;/p&gt;

&lt;p&gt;With scoping, we can only access the variables in a certain area of the code. The scope helps to avoid these modifications, which help us to write secure code. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#2-avoid-name-collision"&gt;
  &lt;/a&gt;
  2. Avoid name collision
&lt;/h4&gt;

&lt;p&gt;The scope helps to avoid name collision. For example, imagine that you have to use the same variable name in a different place in your program for a different purpose, or someone else from your team has already declared a variable in the global scope, and you want to identify the boundary of this variable. &lt;/p&gt;

&lt;p&gt;Having clear scope on where you can access a variable makes it easier to identify its boundary, avoid assigning more values to the same variable, and use the same variable name in multiple locations within the code without altering the values.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#3-garbage-collection"&gt;
  &lt;/a&gt;
  3. Garbage Collection
&lt;/h4&gt;

&lt;p&gt;In dynamic languages like JavaScript, when we complete the usage of a variable, the data will be automatically  &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Memory_Management"&gt;garbage collected&lt;/a&gt;. If we don't have a clear scope on where we can access certain variables, the compiler will not be able to identify when to collect the garbage, except at the end. &lt;/p&gt;

&lt;p&gt;Having a clear scope on where variables can be accessed helps the compiler to garbage collect these variables at the end of each scope.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#types-of-scope"&gt;
  &lt;/a&gt;
  Types of Scope
&lt;/h2&gt;

&lt;p&gt;JavaScript has three different types of scope. &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Global Scope&lt;/li&gt;
&lt;li&gt;Function Scope &lt;/li&gt;
&lt;li&gt;Block scope&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Let's take a few examples to understand these three different scopes. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#global-scope"&gt;
  &lt;/a&gt;
  Global Scope
&lt;/h3&gt;

&lt;p&gt;Variables declared outside of functions or code blocks (curly braces &lt;code&gt;{ }&lt;/code&gt;) are considered to have a global scope. The outermost scope contains the entire code, and there is only one global scope in the program. &lt;/p&gt;

&lt;p&gt;The variables defined in the global scope are named &lt;em&gt;Global Variables&lt;/em&gt; and can be accessed and altered in any other scopes. &lt;/p&gt;

&lt;p&gt;Check the below example. The function &lt;code&gt;greeting&lt;/code&gt; can access the &lt;code&gt;userName&lt;/code&gt; variable inside the function, and it is located in the global scope.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Create a variable in the global scope&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;userName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Sarah&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;greeting&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Access global variable within the function&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Hello &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;userName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;!`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;greeting&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;  &lt;span class="c1"&gt;// "Hello Sarah!"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We have the accessibility to change the value of the variable anywhere in the code with global scope. Check the below example.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Create a global variable&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;userName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Sarah&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;greeting&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Assigne a different value to the global variable&lt;/span&gt;
  &lt;span class="nx"&gt;userName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Jessica&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Hello &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;userName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;!`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;greeting&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// "Hello Jessica!"&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;userName&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// "Jessica"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above example, we have reassigned the value of the variable &lt;code&gt;userName&lt;/code&gt; inside the function. And it has modified the value of the variable inside the global scope. &lt;/p&gt;

&lt;p&gt;This means that we can alter global variables anywhere within our code. Therefore, it is advised to only use global variables if and only if necessary as a best practice. &lt;/p&gt;

&lt;p&gt;Let's move on to the function scope.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#function-scope"&gt;
  &lt;/a&gt;
  Function Scope
&lt;/h3&gt;

&lt;p&gt;Each and every function creates its own scope. And the variables declared inside that function are only accessible inside that function and any of its nested functions. This is also called &lt;em&gt;Local Scope&lt;/em&gt;.   &lt;/p&gt;

&lt;p&gt;Check the below examples to understand the function scope.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;calcAge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;birthyear&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Declare variables inside the calcAge function scope&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;currentYear&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2021&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;currentYear&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;birthyear&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;calcAge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1975&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Attempt to access "currentYear" and "age" outside of the function scope is not possible&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;currentYear&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// ReferenceError: currentYear is not defined&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// ReferenceError: age is not defined&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above example, we have a function to calculate the age. However, when trying to print the variables  &lt;code&gt;currentYear&lt;/code&gt; and &lt;code&gt;age&lt;/code&gt;, JavaScript throws an error &lt;code&gt;ReferenceError: currentYear is not defined&lt;/code&gt;. This is because the &lt;code&gt;calcAge()&lt;/code&gt; function creates a scope for these variables, which can only be accessed within the function scope. &lt;/p&gt;

&lt;p&gt;I hope now you can understand how the function scope works. Let's move on to block scope. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#block-scope"&gt;
  &lt;/a&gt;
  Block Scope
&lt;/h3&gt;

&lt;p&gt;ES6 introduced &lt;code&gt;let&lt;/code&gt; and &lt;code&gt;const&lt;/code&gt; variables. With that, it introduced the block scope. Block scope means that the variables defined inside a code clock &lt;code&gt;{}&lt;/code&gt; can only be used inside it. &lt;/p&gt;

&lt;p&gt;For example, a variable created inside an &lt;code&gt;if&lt;/code&gt; statement or &lt;code&gt;for&lt;/code&gt; loop can only be accessed within that code block. Same as function scope, it is not accessible outside of the block scope. &lt;/p&gt;

&lt;p&gt;While &lt;code&gt;let&lt;/code&gt; and &lt;code&gt;const&lt;/code&gt; are block scoped, the variables defined with &lt;code&gt;var&lt;/code&gt; have their scope limited to the current function scope or the global scope. Suppose we declare a variable using &lt;code&gt;var&lt;/code&gt;, that variable is accessible outside the block. So, the variable declared using &lt;code&gt;var&lt;/code&gt; within a code block is not block scoped; It is function scoped. &lt;/p&gt;

&lt;p&gt;Check the below example,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;calcAge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;birthyear&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;currentYear&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2021&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;currentYear&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;birthyear&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Create a variable using "var" inside the block&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;working&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c1"&gt;// Create a variable using "const" inside the block&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`Peter is still employed!`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="c1"&gt;// Variable created using "var" can be accessed outside the block&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;working&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// true&lt;/span&gt;

  &lt;span class="c1"&gt;// Attempt to access "message" outside of the function scope is not possible&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// ReferenceError: message is not defined at calcAge&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;calcAge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1975&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above example, we have declared &lt;code&gt;working&lt;/code&gt; using &lt;code&gt;var&lt;/code&gt; and &lt;code&gt;message&lt;/code&gt; using &lt;code&gt;const&lt;/code&gt;. When trying to print the variable &lt;code&gt;message&lt;/code&gt;, JavaScript throws an error &lt;code&gt;ReferenceError: message is not defined at calcAge&lt;/code&gt;. This is because the &lt;code&gt;if&lt;/code&gt; block creates a scope for this variable, which is only accessible within that block scope. &lt;/p&gt;

&lt;p&gt;However, there is no error when trying to access &lt;code&gt;working&lt;/code&gt; outside the code block. As explained before, this is because &lt;code&gt;var&lt;/code&gt; is not block scoped, it's function scoped. So you can access &lt;code&gt;working&lt;/code&gt; inside the &lt;code&gt;calcAge()&lt;/code&gt; function since it's the current function scope. But if we try to access the &lt;code&gt;working&lt;/code&gt; outside the &lt;code&gt;calcAge()&lt;/code&gt; function, then JavaScript will throw an error. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#scope-can-be-nested"&gt;
  &lt;/a&gt;
  Scope can be nested
&lt;/h3&gt;

&lt;p&gt;The scope can be nested, which means you can create functions inside another function, block inside another function, function inside another block, or block inside a block. &lt;/p&gt;

&lt;p&gt;The scope contained within another scope is named &lt;em&gt;inner scope&lt;/em&gt;. And the scope that wraps another scope is named &lt;em&gt;outer scope&lt;/em&gt;. &lt;/p&gt;

&lt;p&gt;When there are nested scopes, the inner scope can also access the outer scope variables. But outside of the scopes, these variables are not accessible. So outer scope does not have access to the variables of inner functions or blocks.&lt;/p&gt;

&lt;p&gt;Check the below example to understand this behavior.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Outer function&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;calcAge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;birthyear&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;userName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Peter&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;currentYear&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2021&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;currentYear&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;birthyear&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;// Inner block&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;userName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; is still employed!`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="c1"&gt;// Inner function&lt;/span&gt;
  &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;yearsToRetire&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;retirement&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;userName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; will be retired in &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;retirement&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; years!`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;yearsToRetire&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;calcAge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1975&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above example, the &lt;code&gt;yearsToRetire()&lt;/code&gt; function and &lt;code&gt;if&lt;/code&gt; block are nested inside the &lt;code&gt;calcAge()&lt;/code&gt; function. To calculate the &lt;code&gt;retirement&lt;/code&gt;, we have accessed the &lt;code&gt;age&lt;/code&gt; variable, which is declared in the outer scope, inside the &lt;code&gt;calcAge()&lt;/code&gt; function. &lt;/p&gt;

&lt;p&gt;Also, we have accessed the &lt;code&gt;userName&lt;/code&gt; variable, which is declared in the &lt;code&gt;calcAge()&lt;/code&gt; function scope, in both &lt;code&gt;yearsToRetire()&lt;/code&gt; function and &lt;code&gt;if&lt;/code&gt; block. We can look outwards to access variables in the parent's scope with nested scope. It could be a variable inside an outer function, outer block, or a global variable.  &lt;/p&gt;

&lt;p&gt;I hope now you have a better understanding of global, function, and block scope. However, before moving to the scope chain, there is one more scope that we should learn, which is lexical scope. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--p4UVeWCM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640057494898/UOECh3Fni.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p4UVeWCM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640057494898/UOECh3Fni.gif" alt="another-scope.gif" width="294" height="298"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lexical-scope"&gt;
  &lt;/a&gt;
  Lexical Scope
&lt;/h2&gt;

&lt;p&gt;Lexical scoping means that organizing and accessing variables are controlled by where we write our functions and code blocks. &lt;/p&gt;

&lt;p&gt;For example, a function that is written inside another function has access to the variables of the parent function despite where the function is invoked. &lt;/p&gt;

&lt;p&gt;So the lexical scoping means that the scope is defined at the location where the variable or function is defined, and not where they run.&lt;/p&gt;

&lt;p&gt;Let's check the below example to understand this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;userName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Peter&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;sayUserName&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;userName&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;sayUserNameAgain&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;userName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Sarah&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="c1"&gt;// Invoke the first function&lt;/span&gt;
  &lt;span class="nx"&gt;sayUserName&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;sayUserNameAgain&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// Peter&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's see what has happened here:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;When the &lt;code&gt;sayUserNameAgain()&lt;/code&gt; function is called, it creates a local variable &lt;code&gt;userName&lt;/code&gt; and sets its value as &lt;code&gt;Sarah&lt;/code&gt;. &lt;/li&gt;
&lt;li&gt;In the next line, the &lt;code&gt;sayUserName()&lt;/code&gt; function is called, and &lt;code&gt;sayUserName()&lt;/code&gt; function is defined outside the &lt;code&gt;sayUserNameAgain()&lt;/code&gt; function. &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;sayUserName()&lt;/code&gt; function logs the &lt;code&gt;userName&lt;/code&gt; variable, but &lt;code&gt;userName&lt;/code&gt; is not defined in the &lt;code&gt;sayUserName()&lt;/code&gt; scope. So we have to go up one scope to the global scope to get the value of &lt;code&gt;userName&lt;/code&gt; which is &lt;code&gt;Peter&lt;/code&gt;. &lt;/li&gt;
&lt;li&gt;Even though we have &lt;code&gt;userName = "Sarah"&lt;/code&gt; right above where the &lt;code&gt;sayUserName()&lt;/code&gt; function invokes, we have never accessed that value. &lt;/li&gt;
&lt;li&gt;This is because lexical scoping requires us to go where the functions are defined, not where they
run.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I hope now you understand what lexical scope is. So let's move on to the scope chain.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#scope-chain"&gt;
  &lt;/a&gt;
  Scope Chain
&lt;/h2&gt;

&lt;p&gt;The scope chain is how Javascript looks for variables. When looking for variables through the nested scope, the inner scope first looks at its own scope. If the variable is not assigned locally, which is inside the inner function or block scope, then JavaScript will look at the outer scope of said function or block to find the variable. If Javascript could not find the variable in any of the outer scopes on the chain, it will throw a reference error. &lt;/p&gt;

&lt;p&gt;Let's take an example and go through this process step by step. Check the below code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Global variable&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;userName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Peter&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// Outer function&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;calcAge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;birthyear&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;currentYear&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2021&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;currentYear&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;birthyear&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

   &lt;span class="c1"&gt;// inner block&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;working&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`Peter is still employed!`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="c1"&gt;// inner function&lt;/span&gt;
  &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;yearsToRetire&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;retirement&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;userName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; will be retired in &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;retirement&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; years!`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;yearsToRetire&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;calcAge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1975&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above example, &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;We have a global variable called &lt;code&gt;userName&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;We have an outer function &lt;code&gt;calcAge()&lt;/code&gt;,  which is in the global scope.&lt;/li&gt;
&lt;li&gt;We have an inner function, &lt;code&gt;yearsToRetire()&lt;/code&gt;, nested inside &lt;code&gt;calcAge()&lt;/code&gt; function.&lt;/li&gt;
&lt;li&gt;Also, we have an &lt;code&gt;if&lt;/code&gt; block inside the &lt;code&gt;calcAge()&lt;/code&gt; function. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With the above example, let's try to understand how the scope chain works. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mVUxyEbS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640110364705/sYmJD6k6H.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mVUxyEbS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640110364705/sYmJD6k6H.png" alt="1-global-scope.png" width="880" height="421"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;First, we have the global scope, which has only one variable, &lt;code&gt;userName&lt;/code&gt;. There is a function declared in the global scope, which is &lt;code&gt;calcAge()&lt;/code&gt;. But to keep things simple, let's focus on the variables. And keep in mind that function and variables work the same way in the scope chain. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_hXuFusG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640114481151/zbcw0mnab.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_hXuFusG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640114481151/zbcw0mnab.gif" alt="1-scope-chain.gif" width="800" height="379"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you remember, each function creates its own scope. So inside the global scope, the first function scope is created with the &lt;code&gt;calcAge()&lt;/code&gt; function. &lt;/p&gt;

&lt;p&gt;Inside the &lt;code&gt;calcAge()&lt;/code&gt; function there are two variables declared, which are &lt;code&gt;currentYear&lt;/code&gt; and &lt;code&gt;age&lt;/code&gt;. Also, we have access to the global variable &lt;code&gt;userName&lt;/code&gt; inside the &lt;code&gt;calcAge()&lt;/code&gt; function. &lt;/p&gt;

&lt;p&gt;If we have any need to access the variable &lt;code&gt;userName&lt;/code&gt; inside this function, then JavaScript looks inside the &lt;code&gt;calcAge()&lt;/code&gt; function to see whether the variable is declared inside the scope. When JavaScript can't find it there, it will reach out to the outer scope, that is the global scope. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YqUxvOMC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640114614074/0S-z_7nQ0x.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YqUxvOMC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640114614074/0S-z_7nQ0x.gif" alt="2-scope-chain.gif" width="800" height="379"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next, inside the first scope, there is a second function, &lt;code&gt;yearsToRetire()&lt;/code&gt;, which also creates its own scope containing the &lt;code&gt;retirement&lt;/code&gt; variable set to &lt;code&gt;60 - age&lt;/code&gt;. Now we have a nested structure of scopes with one scope inside the other.&lt;/p&gt;

&lt;p&gt;We have a string that needs access to &lt;code&gt;userName&lt;/code&gt; variable inside this function. Since JavaScript cannot find this variable within the local scope, it will look up in the scope chain until it finds the variable and uses it. &lt;/p&gt;

&lt;p&gt;Also, inside this &lt;code&gt;yearsToRetire()&lt;/code&gt; function scope we also have the access to variables inside the &lt;code&gt;caclAge&lt;/code&gt; function scope, since &lt;code&gt;caclAge&lt;/code&gt; is the parent scope and outer scope of &lt;code&gt;yearsToRetire()&lt;/code&gt; function. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r4YysuG5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640114721366/gNG062g6_.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r4YysuG5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640114721366/gNG062g6_.gif" alt="3-scope-chain.gif" width="800" height="379"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There is an &lt;code&gt;if&lt;/code&gt; block inside the &lt;code&gt;calcAge()&lt;/code&gt; function, which has the two variables declared inside that. However, as I explained earlier, the variable declared with &lt;code&gt;var&lt;/code&gt; is not block scoped. So the variable &lt;code&gt;working&lt;/code&gt; will be a part of the &lt;code&gt;calcAge()&lt;/code&gt; function scope. Since the &lt;code&gt;working&lt;/code&gt; is in the &lt;code&gt;calcAge()&lt;/code&gt; function scope, the &lt;code&gt;yearsToRetire()&lt;/code&gt; function scope also has access to it. &lt;/p&gt;

&lt;p&gt;The scope chain applies to block scope as well. Therefore, the &lt;code&gt;if&lt;/code&gt; block scope gets access to all the variables from its outer scope. So the block scope can access the variable inside the &lt;code&gt;calcAge()&lt;/code&gt; function scope and global scope. &lt;/p&gt;

&lt;p&gt;Another important thing to remember is that the &lt;code&gt;if&lt;/code&gt; block scope does not have access to any variables in the &lt;code&gt;yearsToRetire()&lt;/code&gt; function scope, and vice versa. The reason for this is lexical scoping. &lt;/p&gt;

&lt;p&gt;The way we can access variables depends on where the scope is placed or where it is written in the code. In this scenario, none of these two scopes is written inside one another. We could say that they are sibling scopes since they are both child scopes of the &lt;code&gt;calcAge()&lt;/code&gt; function scope. So, according to the lexical scoping, they cannot access each other's variables. Scope chain only works upwards, not sideways.  &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EeZAzKDH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640112694935/Kz31xXYq_.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EeZAzKDH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640112694935/Kz31xXYq_.png" alt="2-scope-chain.png" width="880" height="421"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So this is how the scope chain works. If one scope needs to use a certain variable but cannot find it in the scope, it will look up in the scope chain and check whether it can find a variable on one of the outer scopes. If the variable is available in the outer scope, then the child scope has the access to it. If it is not there in any outer scopes, the JavaScript will throw a reference error. So this process is called &lt;em&gt;variable lookup&lt;/em&gt;. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wT622r67--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640113928736/dgeL_A2zY.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wT622r67--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640113928736/dgeL_A2zY.gif" alt="we-are-done.gif" width="480" height="269"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I hope this post helped you understand the different types of scopes in JavaScript and how the scope chain works. &lt;/p&gt;

&lt;p&gt;Happy coding! &lt;/p&gt;




&lt;p&gt;&lt;a href="https://dasha.ai/"&gt;&lt;img alt="Visit Dasha AI" src="https://res.cloudinary.com/practicaldev/image/fetch/s--66PDtMQU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://avatars.githubusercontent.com/u/75135110%3Fs%3D50%26v%3D4" width="50" height="50"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Join  &lt;a href="https://community.dasha.ai/"&gt;Dasha Developer Community&lt;/a&gt; where you’ll meet welcoming like-minded developers who share ideas, questions, and get all the help they need to build cool conversational AI apps (for free, of course).&lt;/em&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Listen Santa, They're Talking About PHP 😮</title>
      <author>Anders Björkland</author>
      <pubDate>Wed, 22 Dec 2021 08:42:11 +0000</pubDate>
      <link>https://dev.to/andersbjorkland/listen-santa-theyre-talking-about-php-1p8i</link>
      <guid>https://dev.to/andersbjorkland/listen-santa-theyre-talking-about-php-1p8i</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Just the Gist&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
As this article series is coming to a close it's time to look at what else is out there. So today we'll see a small selection of podcasts, blogs and YouTube-channels that are talking about PHP. If you know of someone that is talking about PHP, please chime in.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#podcasts"&gt;
  &lt;/a&gt;
  Podcasts
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://phpugly.com/"&gt;PHPUgly&lt;/a&gt; - A group of PHP developers passionate about the language (despite what the title may lead you to believe).&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://phptownhall.com/"&gt;PHP Town Hall&lt;/a&gt; - Less frequent than PHPUgly but always interesting subjects. &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://phpinternals.news/"&gt;PHP Internal News&lt;/a&gt; - A podcast that often brings up RFCs and the details of them, as well as other considerations that go into the development of the language.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#blogs"&gt;
  &lt;/a&gt;
  Blogs
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://blog.jetbrains.com/phpstorm/category/php-annotated-monthly/"&gt;PHP Annotated&lt;/a&gt; - A monthly blog about core developments, standards and some of the major frameworks.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://stitcher.io/"&gt;stitcher.io&lt;/a&gt; - A blog that covers most things PHP, such as the latest versions to opinion pieces.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://tech.osteel.me/"&gt;osteel's blog&lt;/a&gt; - A garden of articles on PHP, Laravel and one of the best introductions to Docker I've ever seen.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#youtube-channels"&gt;
  &lt;/a&gt;
  YouTube Channels
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.youtube.com/c/GaryClarkeTech/playlists"&gt;Gary Clarke&lt;/a&gt; - Gary covers the basics of PHP, design patterns and there's also a course for building a eCommerce project. But watch out! If you like Gary's style of teaching you may be learning Python next! 😉&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.youtube.com/c/ProgramWithGio/featured"&gt;Program With Gio&lt;/a&gt; - A channel that covers a mix of news and in-depth explanations. &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.youtube.com/channel/UC8butISFwT-Wl7EV0hUK0BQ"&gt;freeCodeCamp.org&lt;/a&gt; - freeCodeCamp covers most of anything. PHP is no exception. You can find a 5 hour course here getting you from the basics to some of the OOP concepts. While you're at it, why not start that fullstack 7-hour course too?! &lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#what-about-you"&gt;
  &lt;/a&gt;
  What about you?
&lt;/h2&gt;

&lt;p&gt;Have you checked out any of these content creators? How did you like their entries? Are there any creators that I missed highlighting here that you feel should get a mention? Comment below and let us know what you think ✍&lt;/p&gt;

</description>
      <category>php</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Rails 7.0 released… a non-event at Doctolib</title>
      <author>Pierre Merlin</author>
      <pubDate>Wed, 22 Dec 2021 08:33:23 +0000</pubDate>
      <link>https://dev.to/pimpin/rails-70-released-a-non-event-at-doctolib-58p5</link>
      <guid>https://dev.to/pimpin/rails-70-released-a-non-event-at-doctolib-58p5</guid>
      <description>&lt;p&gt;Last Wednesday came the &lt;a href="https://medium.com/r/?url=https%3A%2F%2Frubyonrails.org%2F2021%2F12%2F15%2FRails-7-fulfilling-a-vision"&gt;release announcement of Rails 7.0&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You may &lt;a href="https://medium.com/r/?url=https%3A%2F%2Fworld.hey.com%2Fdhh%2Frails-7-will-have-three-great-answers-to-javascript-in-2021-8d68191b"&gt;have already heard&lt;/a&gt; that Rails 7 eliminates the need for NodeJs and Webpack today. Just to save the time spent, during development, waiting for the transpilation of JavaScript codes, this is a huge gift.&lt;/p&gt;

&lt;p&gt;Security obsessives will retain &lt;a href="https://medium.com/r/?url=https%3A%2F%2Fgithub.com%2Frails%2Frails%2Fpull%2F41659"&gt;native encryption of ActiveRecord attributes&lt;/a&gt;. This is one more way to bring security to the confidentiality of the data which is so dear to us.&lt;/p&gt;

&lt;p&gt;For many, one would have said that Santa Claus was passing by 10 days in advance.&lt;br&gt;
&lt;strong&gt;But not at Doctolib.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What ?! Wouldn't Santa Claus come to Docto?&lt;/strong&gt; But yes, don't worry… it had in fact already happened since November 4th.&lt;/p&gt;

&lt;p&gt;Because, what is less highlighted in the general public announcements, it is that Rails 7 brings the support of requests on associations through multiple databases ("cross cluster") thanks in particular to &lt;a href="https://medium.com/r/?url=https%3A%2F%2Fgithub.blog%2F2021-07-12-adding-support-cross-cluster-associations-rails-7%2F"&gt;a Github's contribution&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;So don't repeat it to the children, but sometimes you have to help this Santa Claus a little, and with us he received the help of the Engineering team which is precisely interested in the split of our database.&lt;/p&gt;

&lt;p&gt;Yes, yes, you read that correctly: We had been serving your favorite application in production for over a month on an alpha version of Rails 7… just like Shopify or Github did.&lt;br&gt;
And at the rate of 3 rollouts per day,  I will even tell you that Rails 7 is an old history for us… An history on which more than 4000 commits have already been stacked.&lt;br&gt;
As a matter of history, I must even admit that, as a newcomer to the house, I was surprised at the non-event that it was! A quick announcement on Slack one morning, and at noon, quietly, we were running on Rails 7.&lt;/p&gt;

&lt;p&gt;But was it really useful to take the risk of running on an alpha version?&lt;/p&gt;

&lt;p&gt;It's FUN and BOLD and it's no small feat. And it's also an opportunity to make our contribution to the open source world by enabling mine clearance that benefits the entire Rails community.&lt;br&gt;
But it is also a pragmatic choice that allowed us to follow our plan for structuring our database architecture. Because the multi-database split is a hot topic on which we are working a lot.&lt;/p&gt;

&lt;p&gt;Thus ends our last Advent ticket, all we have to do is join our families to await the arrival of Santa Claus. Merry Christmas to everyone.&lt;/p&gt;

&lt;p&gt;Header photo credits : &lt;a href="https://pixabay.com/users/trainsdoubs-25-5214986/"&gt;TrainDoubs-25&lt;/a&gt;&lt;/p&gt;

</description>
      <category>rails</category>
      <category>database</category>
      <category>javascript</category>
      <category>opensource</category>
    </item>
    <item>
      <title>Become A Great Solution Architect – Chapter 1 – The Mindset And Attitude</title>
      <author>iotcloudarchitect</author>
      <pubDate>Wed, 22 Dec 2021 08:09:07 +0000</pubDate>
      <link>https://dev.to/iotcloudarchitect/become-a-great-solution-architect-chapter-1-the-mindset-and-attitude-f97</link>
      <guid>https://dev.to/iotcloudarchitect/become-a-great-solution-architect-chapter-1-the-mindset-and-attitude-f97</guid>
      <description>&lt;h2&gt;
  &lt;a href="#1-understand-the-problem"&gt;
  &lt;/a&gt;
  1 - Understand the problem
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Xbv8k2Pn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pa8p21dcs7ocn6jkkt1l.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Xbv8k2Pn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pa8p21dcs7ocn6jkkt1l.jpg" alt="Understand the problem" width="650" height="325"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The first essential thing I want to mention right at the beginning is: Think problems first, then solutions!&lt;/p&gt;

&lt;p&gt;Please don’t start thinking about technologies before you didn’t understand your customer’s problem precisely. Thinking in solutions from the start might guide you in the wrong direction.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Problems might seem the same from a first look; however, the solutions are always different in the end!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It would help if you always take your time to study the requirements in detail and be not afraid to ask and challenge the elements with the product owner or business analyst.&lt;/p&gt;

&lt;p&gt;Since the solution architect is the binding element between the functional requirements and the technical solution, he must understand both sides to make the right decisions.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Better to ask one time “to often” than to continue without precise understanding!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you don’t follow the advice, you might get into trouble in a later phase of the project since there were one or more crucial things you did not see or did not spend enough detail on it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-stay-highlevel"&gt;
  &lt;/a&gt;
  2 - Stay High-Level
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3OatPlLl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g408mjngfr7pu9eazpag.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3OatPlLl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g408mjngfr7pu9eazpag.jpg" alt="Stay High-Level" width="650" height="325"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The solution architect creates a high-level solution architecture that holistically considers all requirements; nevertheless, it describes the solution from a helicopter perspective.&lt;/p&gt;

&lt;p&gt;Based on the solution architecture document, and the selected technologies, the lead developer creates a technical concept regarding the implementation.&lt;/p&gt;

&lt;p&gt;There might be some cases where the solution architect might be the only one familiar with a chosen technology, and so he also needs to write the technical documentation. But this should happen for the minority of cases since the development team must do the implementation.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-be-open-for-feedback"&gt;
  &lt;/a&gt;
  3 - Be Open For Feedback
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AosqVIcE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wewk5ng6ja1j78v3r967.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AosqVIcE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wewk5ng6ja1j78v3r967.jpg" alt="Be Open For Feedback" width="650" height="325"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Live is a continuous journey of gathering knowledge, and due to this fact, each individual can make mistakes. Moreover, no one can know everything. Therefore, the solution architect should be open to qualified feedback.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Feedback is a gift!&lt;/strong&gt; (even it turns out later that the input wasn’t adequate)&lt;/p&gt;

&lt;p&gt;It is always valuable to consider a second meaning, especially during the solution architecture documents’ review process. Two eyes see more than one, right?&lt;/p&gt;

&lt;p&gt;A good example is, for instance, the feedback from the operations team. If they complain about the chosen technologies, this could turn out into a real problem, since those guys have to run the solution after development.&lt;/p&gt;

&lt;p&gt;Besides, it could be a problem regarding implementation quality, if it turns out that the development team does not own the appropriate skills to realize the solution. In the best case, qualification training before the start of implementation is mitigation here.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-stay-openminded"&gt;
  &lt;/a&gt;
  4 - Stay Open-Minded
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uf_80I93--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gwvm9rsxjtddbxj8urt6.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uf_80I93--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gwvm9rsxjtddbxj8urt6.jpg" alt="Stay Open-Minded" width="650" height="325"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A solution architect is continuously scanning new technologies, methods, processes, and tools that could help him architect kick-ass solutions. Still, the new stuff must pay into problem-solving.&lt;/p&gt;

&lt;p&gt;The inspiration comes, among others, from reading other architects’ blogs, studying best practice approaches, or try real-world examples of solutions based on new technologies.&lt;/p&gt;

&lt;p&gt;Furthermore, attending conferences or workshops can enlarge one’s horizon, and sharing knowledge inside the company would be a fruitful option.&lt;/p&gt;

&lt;p&gt;A solution architect must have a broad knowledge of different technologies. But he should have at least one specialization, something he is a real master, e.g., IoT, Cloud, Big Data, AI, etc.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-feel-and-take-the-responsibility"&gt;
  &lt;/a&gt;
  5 - Feel and Take the Responsibility
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6TF93n1K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nlyn4xioqrw5z3guivk7.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6TF93n1K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nlyn4xioqrw5z3guivk7.jpg" alt="Feel and Take the Responsibility" width="650" height="325"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The solution architect is responsible for not less than the success of the running solution. Sure, he does not code on its own or setups the production environment, but the product owner will blame him for missing the objectives in the end.&lt;/p&gt;

&lt;p&gt;Consequently, the solution architect should take an eye on the quality of all the project’s concerns, and especially the solution’s matters.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-eye-for-quality"&gt;
  &lt;/a&gt;
  6 - Eye for Quality
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OvE2JeuL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g3jllyfewuh0smbww907.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OvE2JeuL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g3jllyfewuh0smbww907.jpg" alt="Eye for Quality" width="650" height="325"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After handing over the reviewed solution architecture documents, the implementation by the development teams starts. Up from now, the solution architect must rely on the experience, knowledge, and leadership skills of the lead developer.&lt;/p&gt;

&lt;p&gt;For example, the solution architect should monitor the progress and efficiency of the development team to support them proactively.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-leader-and-motivator"&gt;
  &lt;/a&gt;
  7 - Leader and Motivator
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Af6Fm0FA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c130swo4trocnka7hbwc.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Af6Fm0FA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c130swo4trocnka7hbwc.jpg" alt="Leader and Motivator" width="650" height="325"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Part of the job of a solution architect is to guide, mentor, and challenge the development team. Especially with the lead developer, he should have a close relationship.&lt;/p&gt;

&lt;p&gt;The lead developer is the one to work tightly with the developers, and his motivation and experience will directly impact the work of the entire team.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-keep-agile-but-also-say-no"&gt;
  &lt;/a&gt;
  8 - Keep Agile, but also say: "No!"
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---BBjrykf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/emy9592y2doe7kue45f4.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---BBjrykf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/emy9592y2doe7kue45f4.jpg" alt="Leader and Motivator" width="650" height="325"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;During the implementation of the solution, there will come requests for changes. The solution architect must verify the claims and prove what kind of difference it might have on the current architecture or the ongoing development.&lt;/p&gt;

&lt;p&gt;In case it turns out that there would be a need for an impacting transformation, he should take a clear position and evaluate potential negative results.&lt;/p&gt;

&lt;p&gt;The solution architect is responsible for the entire solution! Due to this fact, he should not try to be everybody’s darling, since this is not realizable. It’s about the art of making compromises.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;I won’t say that if you cannot cover all the aspects that you are not a good solution architect. Maybe I also forgot an element you would expect to be listed here.&lt;/p&gt;

&lt;p&gt;But it should give you a brief overview of the experience I gained over many years of professional work as a solution architect, and from the view of a developer or lead developer.&lt;/p&gt;

&lt;p&gt;Hope to see you again in the next chapter!&lt;/p&gt;

&lt;p&gt;Photos on &lt;a href="https://unsplash.com"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

</description>
      <category>architecture</category>
      <category>career</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Mastering Styled Components with ease.</title>
      <author>Emmanuel Yusuf</author>
      <pubDate>Wed, 22 Dec 2021 08:03:11 +0000</pubDate>
      <link>https://dev.to/emmanueloluwafemi/mastering-styled-components-with-ease-1f0k</link>
      <guid>https://dev.to/emmanueloluwafemi/mastering-styled-components-with-ease-1f0k</guid>
      <description>&lt;p&gt;Styling the UI of a project is mostly a big deal for developers, especially when the developer has a lot of options at hand to choose from. Today we will be looking into Styled components, what it means, why we are choosing them, other options we can explore and their best practices.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#outline"&gt;
  &lt;/a&gt;
  Outline
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;What is Styled-Component and why?&lt;/li&gt;
&lt;li&gt;Features and benefits?&lt;/li&gt;
&lt;li&gt;Things to explore in Styled components&lt;/li&gt;
&lt;li&gt;Conclusion&lt;/li&gt;
&lt;li&gt;Reference&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#prerequisite"&gt;
  &lt;/a&gt;
  Prerequisite
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Basic understanding of react js&lt;/li&gt;
&lt;li&gt;Basic understanding of CSS&lt;/li&gt;
&lt;li&gt;Node installed on your PC&lt;/li&gt;
&lt;li&gt;Terminal (CMD or other terminals)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#what-is-styled-components-and-why"&gt;
  &lt;/a&gt;
  What is Styled Components and Why?
&lt;/h3&gt;

&lt;p&gt;Styled Components is a CSS-IN-JS styling solution for React and React Native, It uses tagged template literals which allows you to write plain CSS that is scoped to a single component inside your JavaScript code.&lt;/p&gt;

&lt;p&gt;Styled-Components is a library that's adopted by numerous companies and is one of the most starred libraries in the React ecosystem.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#features-and-benefits"&gt;
  &lt;/a&gt;
  Features and Benefits
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Automatic Critical CSS&lt;/strong&gt;: Styled components automatically keep track of which component is rendered on the screen and inject only their style, when combined with code splitting you will be loading the least amount of codes which helps your project performance.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;No ClassName bugs&lt;/strong&gt;: it generates unique class names for every style, you will never have to worry about duplications or misspellings.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Easier deletion of CSS&lt;/strong&gt;: If you are working on a large project codebase that makes use of clean CSS files, it mostly becomes tricky to keep track of unused classes, but with styled-components, every style is tied to a specific component. If a component is not used, it can easily be pointed out which can easily be deleted by deleting the component.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Dynamic Styling&lt;/strong&gt;: Just like React, where props are passed into components, sometimes styles need to be adapted based on props, styled components make this easy and simple.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Painless Maintenance&lt;/strong&gt;: it is easy to organize styles with styled components, and you don’t have to move across different files to find the file affecting your component.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Automatic Vendor Prefixing&lt;/strong&gt;: for some of the new css features you might have to write the css properties for each browsers, but with styled components you can write your css to the current standard and the library will handle the rest.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#things-to-explore-in-styled-components"&gt;
  &lt;/a&gt;
  Things To Explore in Styled Components
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;THEMING:&lt;/strong&gt; with styled-components, you are given full support to theming which gives you the ability to create a theme or lay-down structure for the project style, theming mostly contains colors, sizes, fonts and other common things which will be used throughout the project to avoid repetition.&lt;/p&gt;

&lt;p&gt;To create a theme with styled-components, the Theme Provider wrapper needs to be imported.&lt;br&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { ThemeProvider } from "styled-components"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This theme provider needs a theme object that will hold the CSS styling or value we want to apply to the styled components.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    const theme = {
      color: {
        primary: "#000f55",
        secondary: "#04043f",
        white: "#fff",
      },
      fontSize: {
        large: "2.5rem",
        medium: "1.5rem",
        small: ".785rem"
      }
    }

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is an example of what a theme value can look like, it can be expanded to suit your use cases.&lt;/p&gt;

&lt;p&gt;Let's say we have components with these styles.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    const Button = styled.button`
        padding: 4px .7rem;
        color: ${props =&amp;gt; props.theme.color.white};
        background: ${props =&amp;gt; props.theme.color.primary};
        font-size: ${props =&amp;gt; props.theme.fontSize.small};
        border-radius: 8px;
    `

    const FlexWrapper = styled.div`
        display: flex;
        align-items: center;
        justify-content: center;
    ` 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To use it, we need to wrap the ThemeProvider around all the projects which are mostly done on the App.js file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    &amp;lt;ThemeProvider theme={theme}&amp;gt;
        &amp;lt;FlexWrapper&amp;gt;
            &amp;lt;Button&amp;gt;Click Please&amp;lt;/Button&amp;gt;
        &amp;lt;/FlexWrapper&amp;gt;
    &amp;lt;/ThemeProvider&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Looking at the code above, ThemeProvider has been used to wrap all the components on the project, which passes the styling down to all the child components with ease.&lt;/p&gt;

&lt;p&gt;2.&lt;strong&gt;Global Styles:&lt;/strong&gt; Creating a style that serves as a universal style is one thing a lot of developers want to achieve, especially when there is a style that needs to be added to override some styles, Styled components make this easier to achieve to create a global style we have to create a file to store the style&lt;/p&gt;

&lt;p&gt;Firstly, create a file name “globalStyles.js” and set it up using this format:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    import { createGlobalStyle } from "styled-components/macro"

    export default createGlobalStyle`
      * {
          margin: 0;
          padding: 0;
          box-sizing: border-box;
      }
    `
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Looking at the code above, you can see that we are importing createGlobalStyle from the styled components which we are using to create the global style.&lt;/p&gt;

&lt;p&gt;To use it, we have to import the component and add it to our App.js file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    import GlobalStyles from "./globalStyles"

    function App() {
        return (
            &amp;lt;GlobalStyles /&amp;gt;
            &amp;lt;AppContent /&amp;gt;
        )
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;3.&lt;strong&gt;Style Inheritance:&lt;/strong&gt; Style Inheritance: Styled-component makes it possible to inherit styles from another styled component, which is simply done by passing it through the styled function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    import styled from "styled-components"

    const Button = styled.button`
      padding: 4px 12px;
      border-radius: 4px;
      color: #fff;
      background: #000;
    `
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here is the button component, let create another variant of the component by inheriting some styles.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    const TransparentButton = styled(Button)`
      border: 1px solid #000;
      background: none;
      color: #000;
    `
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The TransparentButton component will inherit all the styles from Button and update it with its own style.&lt;/p&gt;

&lt;p&gt;4.&lt;strong&gt;Passing Props:&lt;/strong&gt; Just like the regular react component that receives props to pass data, so as styles also need props to make the style dynamic, this is made possible with styled-components you can pass props through your styles.&lt;/p&gt;

&lt;p&gt;The way styled-components handle their style is that it creates a React component that renders the HTML tags that correspond to the property in the styled object.&lt;/p&gt;

&lt;p&gt;Let’s take, for example, we created a Button Component with this style:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    const Button = styled.button`
      padding: 4px 12px;
      border-radius: 4px;
      color: #fff;
      background: #000;
    `
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In other to make it dynamic, we can set the background and color properties as props.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    const Button = styled.button`
      padding: 4px 12px;
      border-radius: 4px;
      color:${(props) =&amp;gt; props.color ? props.color : '#fff'};
      background: ${(props) =&amp;gt; props.bg ? props.bg : '#000'};
    `
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Looking at this new structured component, the colour and background get the value of a prop, but if it’s not defined, it has been set to a default value, which has been achieved by creating a ternary condition as a check.&lt;/p&gt;

&lt;p&gt;To use the component it will be structured like this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    &amp;lt;Button color="black" bg="orange"&amp;gt;Clicked&amp;lt;/Button&amp;gt;
    &amp;lt;Button&amp;gt;Click Me&amp;lt;/Button&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;5.&lt;strong&gt;Styling Regular Component:&lt;/strong&gt; Another amazing thing about a styled component is that you can convert a React component into a styled component by just calling the styled() function and passing the component name inside, then the styling goes inside the string literal.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    function Button({props}) {
        return (
            &amp;lt;button className={props.className}&amp;gt;Click Me&amp;lt;/button&amp;gt;
        )
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We want to convert the component to a styled component, we have a className attribute that has been passed as props to the component, in other to do this we will follow this process.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    Button = styled(Button)`
        padding: 4px 8px;
        border-radius: 4px;
        border: 1px solid #000;
    `
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will style the component with the styles from the string literal which will then be rendered with the component. &lt;/p&gt;

&lt;p&gt;6.&lt;strong&gt;Use with other CSS frameworks:&lt;/strong&gt; Styled components can work with all CSS frameworks without any issue, which helps you customize styles coming from other frameworks with ease without issue.&lt;/p&gt;

&lt;p&gt;For example, let’s create an input component with Bootstrap styling:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    const Input = styled.input.attrs({
        className: "form-control"
    })`
        background: #fff
    `
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We use the attrs method to add a class name attribute with the value form-control. This adds bootstrap styling to the component.&lt;/p&gt;

&lt;p&gt;This also works for other CSS frameworks, Let's say we are using tailwind then we should have something like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    const TailwindInput = styled.input.attrs({
        className: "
          mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md text-sm shadow-sm placeholder-gray-400
          focus:outline-none focus:border-sky-500 focus:ring-1 focus:ring-sky-500
          disabled:bg-gray-50 disabled:text-gray-500 disabled:border-gray-200 disabled:shadow-none
          invalid:border-pink-500 invalid:text-pink-600
          focus:invalid:border-pink-500 focus:invalid:ring-pink-500
        "
    })`
        background: #fff
    `
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This code above works for tailwind just like the first one we talked about.&lt;/p&gt;

&lt;p&gt;7.&lt;strong&gt;Special attributes:&lt;/strong&gt;  Adding Attributes to HTML tags is made possible with styled-components.&lt;/p&gt;

&lt;p&gt;For example, let’s create a button component like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    const Button = styled.button`
        font-size: 0.75rem;
        font-weight: 700;
        padding: 8px 1.5rem;
        border: 1px solid green;
        color: green;
    `
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's say we want to make it disabled, then we will need to introduce the disabled attribute which we can easily achieve by using the attrs method in styled-components.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    const Button = styled.button.attrs({
      disabled: true
    })`
        font-size: 0.75rem;
        font-weight: 700;
        padding: 8px 1.5rem;
        border: 1px solid green;
        color: green;
    `
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Looking at the code above, we introduced this attrs method to the styled components which will help set the attribute disabled to true, which can come in handy probably, if we want to set the disabled value based on some conditions.&lt;/p&gt;

&lt;p&gt;8.&lt;strong&gt;Switching Components types:&lt;/strong&gt; Styled components dynamic nature helps a lot when it comes to changing the type of component you are rendering. Let’s take, for instance, you have a button component you may need to change to use as a link tag instead of the normal button tag, which you can follow this approach.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    const Button = styled.button`
        padding: 2px 5px;
        color: ${props =&amp;gt; props.theme.color};
        border-radius: 3px;
    `
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The button component will create and render the button element. we can easily change the render type when the component is been called by passing the “as” props to it with the type we want to use.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    &amp;lt;Button as="a"&amp;gt;Go Back Home&amp;lt;/Button&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will render and create the component with the “a” tag element and apply every other thing from the component.&lt;/p&gt;

&lt;p&gt;It can also be achieved by using the “withComponent” method.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;     const Button = styled.button`
        padding: 2px 5px;
        color: ${props =&amp;gt; props.theme.color};
        border-radius: 3px;
    `

    const Link = Button.withComponent("a")
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The Link Component will render the anchor tag as a replica of the Button component, which is needed to avoid some level of duplication on the code base whereby one component can be used for different use cases.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;Styled components have a lot of features that we can't touch in just one article, if you are interested in learning more about styled-components you can check the resources above out which can help understand the concept better.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#reference"&gt;
  &lt;/a&gt;
  Reference?
&lt;/h3&gt;

&lt;p&gt;After looking at the tips above, you may find it interesting, but you don’t really get the concept of a styled component, or you are new to it, and you are willing to take some time to learn it, then I will be linking some resources here in which you can check out to get the needed knowledge to proceed with styled-components.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://styled-components.com/docs"&gt;https://styled-components.com/docs&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=FSCSdAlLsYM&amp;amp;list=PLC3y8-rFHvwgu-G08-7ovbN9EyhF_cltM"&gt;https://www.youtube.com/watch?v=FSCSdAlLsYM&amp;amp;list=PLC3y8-rFHvwgu-G08-7ovbN9EyhF_cltM&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=FSCSdAlLsYM&amp;amp;list=PLC3y8-rFHvwgu-G08-7ovbN9EyhF_cltM"&gt;https://www.youtube.com/watch?v=FSCSdAlLsYM&amp;amp;list=PLC3y8-rFHvwgu-G08-7ovbN9EyhF_cltM&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>css</category>
    </item>
    <item>
      <title>12 Types of Advanced CSS Selectors!! | (Part-2🎉)</title>
      <author>⚡Preethi</author>
      <pubDate>Wed, 22 Dec 2021 07:58:28 +0000</pubDate>
      <link>https://dev.to/preethi_dev/12-types-of-advanced-css-selectors-part-2-f8m</link>
      <guid>https://dev.to/preethi_dev/12-types-of-advanced-css-selectors-part-2-f8m</guid>
      <description>&lt;p&gt;Hey Gang, Feel well-timed to see you again in part-2😍. Hope you grasped plenty of brand new concepts in part-1. This part-2 completely concerning &lt;b&gt;7 Type Of Attribute Selector!!&lt;/b&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;If you not noticed the part-1, don't worry just relax explore the part-2 then move to &lt;a href="https://dev.to/preethi_dev/12-types-of-advanced-css-selectors-part-1-5b3d"&gt;Part-1&lt;/a&gt; and I'm not rush you which is completely based on your pace.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
&lt;li&gt;&lt;b&gt;[attr]&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;&lt;b&gt;[attr=value]&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;&lt;b&gt;[attr~=value]&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;&lt;b&gt;[attr|=value]&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;&lt;b&gt;[attr^=value]&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;&lt;b&gt;[attr$=value]&lt;/b&gt;&lt;/li&gt;
&lt;li&gt;&lt;b&gt;[attr*=value]&lt;/b&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;While seeing above, Feel a little weird right. Uh, it's not a big deal. I'm here to make your CSS life get easier. So, Hope and continue reading the downstairs😉. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XnyuspqQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l3n9p9hw9ucc6gthfavb.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XnyuspqQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l3n9p9hw9ucc6gthfavb.gif" alt="Image description" width="220" height="163"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Every attribute selector should be in square-bracket[ ]&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;Type 1 - &lt;code&gt;[attr]&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;Represents elements with an attribute name of &lt;code&gt;attr&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"http://example.com"&lt;/span&gt; &lt;span class="na"&gt;target=&lt;/span&gt;&lt;span class="s"&gt;"_blank"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;I'm External Link😎&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#internal"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;I'm internal link🙄&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;target&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;orange&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c"&gt;/* attribute selector can also be specify with their element name */&lt;/span&gt;
&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;target&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;orange&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above style hinted that, If the &lt;code&gt;targe&lt;/code&gt; attribute exist in &lt;code&gt;a&lt;/code&gt; tag then apply their styles. Hope make sense. If you feel need some practice then don't hesitate, feel free to play around in codepen below.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Real time situation - Some situations like need to imply the user that some links are linked to external resources. At that time, Use &lt;code&gt;a[target]&lt;/code&gt;&lt;/em&gt; &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/preethi-dev/embed/YzrxEMG?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;Type 2 - &lt;code&gt;[attr=value]&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;Represents elements with an attribute name of attr whose value is exactly equal to given value.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;In simple words, &lt;b&gt;Attribute Exactly Equals Certain Value.&lt;/b&gt;&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;    &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://example.org"&lt;/span&gt; &lt;span class="na"&gt;target=&lt;/span&gt;&lt;span class="s"&gt;"_blank"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Yes, I'm😎&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#internal"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Oops, I'm not😣&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="c"&gt;/* &amp;lt;a&amp;gt; elements with an href matching "https://example.org" */&lt;/span&gt;
&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;"https://example.org"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;green&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Above example illustrate that, If &lt;code&gt;a&lt;/code&gt; tag contain &lt;code&gt;href&lt;/code&gt; attribute which exactly equal to the&lt;code&gt;"&lt;a href="https://example.org"&gt;https://example.org&lt;/a&gt;"&lt;/code&gt; value and then only which apply styles. Hope you get a idea and i wish you to do practice on code pen.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/preethi-dev/embed/PoJKExd?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;The above two type of selectors feels trouble free. Upcoming guys are not give much more trouble. But, They are little bit tricky and they expect more attention to understand their behaviour.&lt;/p&gt;

&lt;h2&gt;Type 3 - &lt;code&gt;[attr~=value]&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;Represents elements with an attribute name of attr whose value is a whitespace-separated list of words. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Simply like Attribute Value is in Space-Separated List &lt;/em&gt;&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"//placehold.it/150/150"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"abstract art"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"//placehold.it/150/150"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"something to eat"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"//placehold.it/150/150"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"athlete starting a new sport"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;img&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;~=&lt;/span&gt;&lt;span class="s1"&gt;"art"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;3px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="no"&gt;lightgreen&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--d4wA0HVC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n4fe59iobkuqpkpy5fg1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--d4wA0HVC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n4fe59iobkuqpkpy5fg1.png" alt="Image description" width="880" height="107"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the above example is not much funny. so, please forgive me though I promise you I will clear the concept. we select images with the word "art" in their &lt;code&gt;alt&lt;/code&gt; attribute, &lt;b&gt;which either as the only value or as a whole word in a space separated list&lt;/b&gt;. Hey observe that, the image with the &lt;code&gt;alt&lt;/code&gt; text "athlete st&lt;b&gt;art&lt;/b&gt;ing a new sport" is not outlined. But, The image with &lt;code&gt;alt&lt;/code&gt; text "abstract &lt;b&gt;art&lt;/b&gt;" is outlined. Hope make sense.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/preethi-dev/embed/PoJKRxm?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;Type 4 - &lt;code&gt;[attr|=value]&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;Represents elements with an attribute name of attr whose value can be exactly value or can begin with value immediately followed by a hyphen. If you can't get my point, that's completely fine and continue reading on downstairs. you will get a crystal clear idea through example.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Rephrase the above definition in simple words like &lt;b&gt;Attribute value starts with this in a dash-separated list&lt;/b&gt;&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;For instance,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt; &lt;span class="nt"&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;li&lt;/span&gt; &lt;span class="na"&gt;data-years=&lt;/span&gt;&lt;span class="s"&gt;"1800-1900"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;The 19th Century&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;li&lt;/span&gt; &lt;span class="na"&gt;data-years=&lt;/span&gt;&lt;span class="s"&gt;"1900-2000"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;The 20th Century&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;li&lt;/span&gt; &lt;span class="na"&gt;data-years=&lt;/span&gt;&lt;span class="s"&gt;"2000-2100"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;The 21st Century&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="c"&gt;/* attr|=value */&lt;/span&gt;
&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;data-years&lt;/span&gt;&lt;span class="o"&gt;|=&lt;/span&gt;&lt;span class="s1"&gt;"1900"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;red&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xeucnAHW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n1m1ix0b04pg5chvjbhr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xeucnAHW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n1m1ix0b04pg5chvjbhr.png" alt="Image description" width="880" height="194"&gt;&lt;/a&gt;&lt;br&gt;
Above example illustrate that selecting the list item with a &lt;code&gt;data-years&lt;/code&gt; attribute that has &lt;b&gt;"1900"&lt;/b&gt; as the only value or the first in a dash separated list. Notice that only the 2nd list item is selected. The first list item has "1900" in its data attribute value, but it's after the dash which means &lt;b&gt;the selector matches a value that is either the only value or is the first in a dash-separated list of values&lt;/b&gt;.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/preethi-dev/embed/NWavomN?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Hey still with me, admire your patience in learning advanced and Congratulations🎉🎉 since you break down the tricky concepts and remaining guys are very easy to grasp.&lt;/p&gt;

&lt;h2&gt;Type 5 - &lt;code&gt;[attr^=value]&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;Represents elements with an attribute name of attr whose value is prefixed (preceded) by value which means attribute value starts with the selected term. To use this selector, add a caret (&lt;code&gt;^&lt;/code&gt;) before the equals sign. Be consious , &lt;b&gt;case-sensitivity&lt;/b&gt; matters. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Attribute Begins with Certain Value&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;For instance,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;  &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"//placehold.it/150/184/abstract"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"artistic pattern"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"//placehold.it/150/184/food"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"a healthy meal"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"//placehold.it/150/184/sports"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"Arthur Miller"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;img&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;^=&lt;/span&gt;&lt;span class="s1"&gt;"art"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c"&gt;/* alt attribute starts with the value "art" */&lt;/span&gt;
  &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;3px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#e18728&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_SU0O25q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qp23cz9jobu3vkwbbivi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_SU0O25q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qp23cz9jobu3vkwbbivi.png" alt="Image description" width="880" height="59"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Above example implies that we select the images with &lt;code&gt;alt&lt;/code&gt; text that starts with "art". Notice that the image with the &lt;code&gt;alt&lt;/code&gt; text "&lt;b&gt;art&lt;/b&gt;istic pattern" is selected, but the image with the &lt;code&gt;alt&lt;/code&gt; text "&lt;b&gt;A&lt;/b&gt;rthur Miller" is not because &lt;b&gt;attribute selectors are case-sensitive&lt;/b&gt;.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/preethi-dev/embed/jOGLJKZ?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;Type 6 - &lt;code&gt;[attr$=value]&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;Represents elements with an attribute name of attr whose value is suffixed (followed) by value which means attribute value ends with the selected term. To use this selector, add a dollar sign ($) before the equals sign.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Similar to type-5. In type-5(&lt;code&gt;^&lt;/code&gt;) which check the match in &lt;b&gt;start&lt;/b&gt; but in type-6(&lt;code&gt;$&lt;/code&gt;) which check the match in &lt;b&gt;end&lt;/b&gt;&lt;br&gt;
&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;  &lt;span class="nt"&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;[attr$=value]&lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"example.pdf"&lt;/span&gt; &lt;span class="na"&gt;target=&lt;/span&gt;&lt;span class="s"&gt;"_blank"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;I'm pdf file😉&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#internal"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;hm, I'm a link😒&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;href&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;"pdf"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;brown&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;text-decoration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;.5em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;inline-block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--REPGp4U7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m72fsl6jtehehi1h6oud.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--REPGp4U7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m72fsl6jtehehi1h6oud.png" alt="Image description" width="838" height="152"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the preceding instance, we select the link with the &lt;code&gt;href&lt;/code&gt; that ends with "pdf" and then apply the styles.&lt;br&gt;
I recommend you to practice and experiment in codepen. &lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/preethi-dev/embed/zYEdXxg?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;em&gt; Proud of your accountability🥳🥳, you reached the final type of attribute selector &lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--umZX5nlJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pchlr5748bfjgqd85dq9.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--umZX5nlJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pchlr5748bfjgqd85dq9.gif" alt="Image description" width="498" height="278"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Type 7 - &lt;code&gt;[attr*=value]&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;Represents elements with an attribute name of attr whose value contains at least one occurrence of value within the string &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;It simply means value need not to be in start or end or space-seprated or dash seperated, which expect &lt;b&gt;Attribute Contains Certain Value anywhere&lt;/b&gt;&lt;/em&gt;.&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;  &lt;span class="nt"&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;[attr*=value]&lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"//placehold.it/150/150"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"abstract art"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"//placehold.it/150/150"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"something to eat"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"//placehold.it/150/150"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"athlete starting a new sport"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="c"&gt;/* [attr*=value] */&lt;/span&gt;
&lt;span class="nt"&gt;img&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;*=&lt;/span&gt;&lt;span class="s1"&gt;"art"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;3px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="no"&gt;lightgreen&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xdoG5Wji--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/46m2rp19irkdkcwzts1b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xdoG5Wji--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/46m2rp19irkdkcwzts1b.png" alt="Image description" width="880" height="70"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here we select the images with the full word or word fragment "art" in the &lt;code&gt;alt&lt;/code&gt; text and give them an outline. Notice that the images with the alt text "abstract &lt;b&gt;art&lt;/b&gt;" and "athlete st&lt;b&gt;art&lt;/b&gt;ing a new sport" both get outlined. Hope you grasp that idea.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/preethi-dev/embed/MWEvdwa?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Such a long blog, you may feel tired😅. So, Take a small break and refresh your mind. I feel reward you because on your patience, Really you make a perfect road to reach your destination. I care to help you for save your time and so, I cover all the selectors in codepen(&lt;em&gt;like a cheet sheet and demo with all selectors&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/preethi-dev/embed/ZEXJJOd?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;If you loved this blog, Then give an endearing heart💝 which really a lot to me. I love the discussion with you, If you feel not comfortable at styling concepts or have any doubts.&lt;/p&gt;

&lt;p&gt;Thanks for Reading!!&lt;br&gt;
&lt;b&gt;Preethi&lt;/b&gt;&lt;br&gt;
&lt;em&gt;- Make your CSS life easier&lt;/em&gt;&lt;/p&gt;

</description>
      <category>css</category>
      <category>html</category>
      <category>webdev</category>
      <category>todayilearned</category>
    </item>
    <item>
      <title>How is AMORE integrated with the blockchain?</title>
      <author>Amore Dating</author>
      <pubDate>Wed, 22 Dec 2021 07:55:42 +0000</pubDate>
      <link>https://dev.to/amoredatingapp/how-is-amore-integrated-with-the-blockchain-2mnp</link>
      <guid>https://dev.to/amoredatingapp/how-is-amore-integrated-with-the-blockchain-2mnp</guid>
      <description>&lt;p&gt;AMORE is a premier &lt;a href="https://amoredating.co"&gt;dating app&lt;/a&gt; that offers complete integration with the blockchain! If you always wanted a decentralized, immersive and empowering dating app, then you are in the right place. We know how challenging it can be to find a great date, and how hard it can be to use most dating platforms. That’s why we created AMORE, which is designed from the ground up to make dating interesting, fun and immersive.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How is AMORE integrated with the blockchain?&lt;/strong&gt;&lt;br&gt;
AMORE has its own tokens that you can acquire and then use on a variety of actions. If you want to send messages, share gifts or perform all kinds of actions inside AMORE, you just have to acquire tokens and use them the way you want. It’s a very engaging way for you to connect with whomever you want and enjoy the dating process, while also having fun along the way.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Connect with thousands of potential dates&lt;/strong&gt;&lt;br&gt;
The AMORE userbase is constantly growing, so you will have no problem finding someone near you that you like. Plus, new users are coming every day, so the chances of identifying your ideal date or even finding your soulmate can be pretty high. Combine that with the fact that you can easily customize your profile, share gifts and perform any actions you want in a decentralized environment, then you can see why AMORE is the ideal option for a great, fun dating experience.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Engaging, very easy to use&lt;/strong&gt;&lt;br&gt;
Our focus with &lt;a href="https://amoredating.co"&gt;AMORE&lt;/a&gt; is to ensure that you can always find the best possible date quickly. We created a top of the line algorithms that makes it easy to match you with the right person that suits your style and requirements. It’s a wonderful, innovative approach that guides you towards like-minded people which you will surely enjoy.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Why choose us?&lt;/strong&gt;&lt;br&gt;
Here at AMORE we believe that the blockchain is offering incredible benefits and it puts the power in hands of all its users. We think this is the future, and we want to empower users to start enjoying the content they want, the way they want, while using tokens.&lt;/p&gt;

&lt;p&gt;If you enjoy the idea of a stress free dating environment where everything is under your control, all while having blockchain support, give AMORE a try today. This is the best way to enjoy some of the most interesting, exciting dating experiences, all powered by state of the art technology.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;1. Blockchain based platform&lt;/li&gt;
&lt;li&gt;2. Use tokens for any actions you want&lt;/li&gt;
&lt;li&gt;3. Great interface, easy to use&lt;/li&gt;
&lt;li&gt;4. Access thousands of potential dates&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>blockchain</category>
      <category>dating</category>
      <category>crypto</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Python Virtual Environment. What, Why, How. Virtualenv, Poetry.</title>
      <author>Dimitry Zub ☀️</author>
      <pubDate>Wed, 22 Dec 2021 07:52:24 +0000</pubDate>
      <link>https://dev.to/dimitryzub/python-virtual-environment-what-why-how-virtualenv-poetry-2nff</link>
      <guid>https://dev.to/dimitryzub/python-virtual-environment-what-why-how-virtualenv-poetry-2nff</guid>
      <description>&lt;p&gt;A mini-guided tutorial showing how to use virtual environment and why it's matters on virtualenv and poetry illustrated examples.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#intro"&gt;Intro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#what_venv"&gt;What is virtual environment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#why_venv"&gt;Why to use virtual environment&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="#how_venv"&gt;How to use virtual environment&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#venv"&gt;Virtualenv&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#poetry"&gt;Poetry&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;a href="#links"&gt;Links&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#acknowledgments"&gt;Acknowledgments&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%D1%81onclusion"&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#outro"&gt;Outro&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h2 id="intro"&gt;Intro&lt;/h2&gt;

&lt;h4&gt;
  &lt;a href="#what-this-blog-post-is-about"&gt;
  &lt;/a&gt;
  What this blog post is about
&lt;/h4&gt;

&lt;p&gt;This blog post is mostly aimed at people who didn't work with it. Here you will find that this is &lt;em&gt;not a complete&lt;/em&gt; Python virtual environment reference, it is rather a mini-guided tutorial about:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;what Python virtual environment is&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;why bother using it&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;how to use it&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;... with example process of two popular modules: &lt;a href="https://docs.python.org/3/library/venv.html"&gt;&lt;code&gt;virtualenv&lt;/code&gt;&lt;/a&gt; and &lt;a href="https://python-poetry.org/"&gt;&lt;code&gt;poetry&lt;/code&gt;&lt;/a&gt;, and software such as IntelliJ IDE via &lt;a href="https://plugins.jetbrains.com/plugin/631-python"&gt;Python plugin&lt;/a&gt;, PyCharm Community Edition, VSCode, Windows system, and Git Bash terminal.&lt;/p&gt;

&lt;p&gt;If you're using JetBrains products you also need to &lt;a href="https://www.jetbrains.com/help/idea/indexing.html"&gt;index installed site-packages from the virtual environment&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Indexing is a core JetBrains features: code completion, inspections, finding usages, navigation, syntax highlighting, refactoring, and more.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h2 id="what_venv"&gt;What is virtual environment?&lt;/h2&gt;

&lt;h4&gt;
  &lt;a href="#a-thing-that-isolates-other-things"&gt;
  &lt;/a&gt;
  A thing that isolates other things
&lt;/h4&gt;

&lt;p&gt;Python virtual environment is basically a separate folder that &lt;a href="https://docs.python.org/3/library/venv.html"&gt;creates an independent set of installed packages&lt;/a&gt;, Python binaries in its own directory, that isolates any other installation of Python on your computer.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#a-thing-that-prevents-conflicts"&gt;
  &lt;/a&gt;
  A thing that prevents conflicts
&lt;/h4&gt;

&lt;p&gt;Python virtual environment is used to &lt;a href="https://docs.python.org/3/glossary.html#term-virtual-environment"&gt;prevent interfering with the behavior of other applications&lt;/a&gt;. Therefore it will prevent packages or Python version conflicts when working with different projects that are running on the same system.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pbUMqWMQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/78694043/145010258-2ad35301-b0a0-4fd7-b8be-c44a0df28483.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pbUMqWMQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/78694043/145010258-2ad35301-b0a0-4fd7-b8be-c44a0df28483.png" alt="what is venv_03" width="880" height="933"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id="why_venv"&gt;Why to use virtual environment?&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;To avoid Python version conflicts&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Python virtual environment allows multiple versions of Python to coexist with each other. It will let you work with the old version of Python after installing a newer version all on the same system. &lt;/p&gt;

&lt;p&gt;If you try to do it without separated virtual environment things will break pretty quickly:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--64GesQLu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/78694043/145189874-1686744d-8498-4eb1-a144-2e86e59df7f8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--64GesQLu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/78694043/145189874-1686744d-8498-4eb1-a144-2e86e59df7f8.png" alt="illustration by xkcd" width="880" height="872"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Python environment - xkcd.com&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;To avoid package version conflicts&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Say you're on two projects, two of them are using &lt;a href="https://pypi.org/project/google-search-results/"&gt;&lt;code&gt;serpapi&lt;/code&gt; library&lt;/a&gt; which is installed globally (system-wide) with a &lt;em&gt;1.15&lt;/em&gt; version. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Project_1&lt;/em&gt; depends on the &lt;em&gt;1.05&lt;/em&gt; version and &lt;em&gt;Project_2&lt;/em&gt; depends on the &lt;em&gt;1.08&lt;/em&gt; version. What will happen if each project tries to &lt;code&gt;import&lt;/code&gt; a &lt;code&gt;serpapi&lt;/code&gt; library...&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#example-without-the-virtual-environment"&gt;
  &lt;/a&gt;
  Example without the virtual environment
&lt;/h3&gt;

&lt;p&gt;Since Python doesn’t distinguish between different versions of the same library in the &lt;code&gt;/site-packages&lt;/code&gt; directory, this leads to the problem when you have two projects that require different versions of the same library and globally installed library have a completely different version. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0QZXsf88--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/78694043/145010290-2eeabc7a-d22b-4b5b-ad98-5bebc5ae8b46.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0QZXsf88--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/78694043/145010290-2eeabc7a-d22b-4b5b-ad98-5bebc5ae8b46.png" alt="why to use venv_1_04" width="880" height="547"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#example-with-the-virtual-environment"&gt;
  &lt;/a&gt;
  Example with the virtual environment
&lt;/h3&gt;

&lt;p&gt;When using a Python virtual environment you can use different versions of the same library or different versions of the Python separated by different virtual environments - folders.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AoD6nC-H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/78694043/145010310-aadd8463-100e-495a-ad26-61fc7c03b502.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AoD6nC-H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/78694043/145010310-aadd8463-100e-495a-ad26-61fc7c03b502.png" alt="why to use venv_2_04" width="880" height="605"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;📌Note: You can install globally different versions of site-packages and use them but as stated before it would become a mess pretty quickly and could break system tools or other projects.&lt;/p&gt;

&lt;h2 id="how_venv"&gt;How to use virtual environment?&lt;/h2&gt;

&lt;p&gt;Let's look at examples of how to use Python virtual environment from the initial install, creating and activating environment, adding dependencies using &lt;code&gt;virtualenv&lt;/code&gt; and &lt;code&gt;poetry&lt;/code&gt; modules, and deactivating virtual environment when done.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yxBTtVwD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/78694043/145010188-0e11d33a-521f-4684-894b-fc0669820b34.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yxBTtVwD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/78694043/145010188-0e11d33a-521f-4684-894b-fc0669820b34.png" alt="how to use venv_1_07" width="880" height="354"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id="venv"&gt;An example process of using Virtualenv&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Install&lt;/strong&gt; &lt;code&gt;virtualenv&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ pip install virtualenv
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Create&lt;/strong&gt; environment folder inside the current package/project directory:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ python -m venv env
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://docs.python.org/3/using/cmdline.html#cmdoption-m"&gt;&lt;code&gt;-m&lt;/code&gt; stands for &lt;code&gt;&amp;lt;module-name&amp;gt;&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;venv&lt;/code&gt;)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;env is a folder created by &lt;code&gt;venv&lt;/code&gt; module. &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Activate&lt;/strong&gt; environment:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# On Windows
source env/Scripts/activate

(env)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# On Linux
$ source env/bin/activate

(env) $ 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;(env)&lt;/code&gt; indicates that you're in the virtual environment. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Add site-packages&lt;/strong&gt; (third-party libraries) to the activated environment.&lt;/p&gt;

&lt;p&gt;Add the latest version:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;(env) $ pip install google-search-results
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Add specific version using equals &lt;code&gt;==&lt;/code&gt; sign:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;(env) $ pip install 'google-search-results==1.3.0'
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;📌Note: if you're on Windows and using Command Line Prompt, use double quotes &lt;code&gt;"&lt;/code&gt; when specifying versions:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pip install 'google-search-results==1.3.0'
ERROR: Invalid requirement: "'google-search-results==1.3.0'"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Add specific version without overwriting lower version(s):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;(env) $ pip install -I 'google-search-results==1.3.0'
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://stackoverflow.com/a/36399566/15164646"&gt;&lt;code&gt;-I&lt;/code&gt; argument will ignore already installed packages&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;A quick look at how you can install site-package (&lt;code&gt;virtualenv&lt;/code&gt;) and create a virtual environment for a specific Python version:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# For Windows:
# install package for specific Python version (https://bit.ly/3pXtHng)
$ py -3.6 -m pip install virtualenv

# create venv for specific Python version (https://bit.ly/3oQ008v)
$ py -3.6 -m venv my_test_env
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# For Linux:
# install package for specific Python version
$ python3.6 -m pip install virtualenv

# create venv for specific Python version
$ python3.6 -m venv my_test_env
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Use and index added site-packages&lt;/strong&gt; inside IDE&lt;/p&gt;

&lt;p&gt;Refer to &lt;a href="#activate_env"&gt;activate and index installed packages section&lt;/a&gt; with the illustrated process using &lt;code&gt;poetry&lt;/code&gt; examples for &lt;a href="#pycharm"&gt;PyCharm&lt;/a&gt;, &lt;a href="#intellij"&gt;IntelliJ&lt;/a&gt;, and &lt;a href="#vscode"&gt;VSCode&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Everything is almost the same &lt;a href="#poetry_find_path"&gt;except you don't need to find a &lt;code&gt;poetry&lt;/code&gt; cache folder via command line&lt;/a&gt; to find a path to &lt;code&gt;python.exe&lt;/code&gt; file because the &lt;code&gt;env&lt;/code&gt; folder is already in your project directory that was created earlier &lt;em&gt;above&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Deactivate&lt;/strong&gt; virtual environment when done:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;(env) $ deactivate
$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2 id="poetry"&gt;An example process of using Poetry&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Install&lt;/strong&gt; &lt;code&gt;poetry&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ pip install poetry
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A quick look at how you can install site-package (&lt;code&gt;poetry&lt;/code&gt;) for a specific Python version:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# For Windows:
$ py -3.6 -m pip install poetry

# For Linux:
$ python3.6 -m pip install poetry
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Create&lt;/strong&gt; (initialize) &lt;code&gt;poetry&lt;/code&gt; inside &lt;em&gt;current&lt;/em&gt; package/project directory:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ poetry init
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;The &lt;code&gt;init&lt;/code&gt; command will ‘initialize’ an existing directory and &lt;a href="https://python-poetry.org/docs/pyproject/"&gt;create a &lt;code&gt;pyproject.toml&lt;/code&gt; which will manage your project and its dependencies&lt;/a&gt;:&lt;/p&gt;


&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# pyproject.toml file

[tool.poetry]
name = "virtual environments"
version = "0.1.0"
description = ""
authors = ["Dimitry Zub &amp;lt;dimitryzub@gmail.com&amp;gt;"]

[tool.poetry.dependencies]
python = "^3.9"
google-search-results = "^2.4.0"
# other site-packages will appear here..

[tool.poetry.dev-dependencies]
# development dependencies will appear here..

[build-system]
requires = ["poetry-core&amp;gt;=1.0.0"]
build-backend = "poetry.core.masonry.api"
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;&lt;a href="https://snarky.ca/what-the-heck-is-pyproject-toml/"&gt;What the heck is &lt;code&gt;pyproject.toml&lt;/code&gt;&lt;/a&gt;?&lt;/p&gt;

&lt;p&gt;In short, &lt;a href="https://www.python.org/dev/peps/pep-0518/#specification"&gt;&lt;code&gt;pyproject.toml&lt;/code&gt; is the new unified Python project settings file&lt;/a&gt; that contains build system requirements and information, which are used by &lt;a href="https://www.w3schools.com/python/python_pip.asp"&gt;&lt;code&gt;pip&lt;/code&gt;&lt;/a&gt; to build the package/project, and it is &lt;em&gt;almost&lt;/em&gt; a replacement for &lt;a href="https://stackoverflow.com/questions/1471994/what-is-setup-py"&gt;&lt;code&gt;setup.py&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Before &lt;code&gt;pyproject.toml&lt;/code&gt; creation, &lt;a href="https://python-poetry.org/docs/cli/#init"&gt;&lt;code&gt;$ poetry init&lt;/code&gt; will interactively ask you to fill the fields about your package/project&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;--name&lt;/code&gt;: Name of the package/package.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;--description&lt;/code&gt;: Description of the package.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;--author&lt;/code&gt;: Author of the package.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;--python&lt;/code&gt; Compatible Python versions.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;--dependency&lt;/code&gt;: Package to require with a version constraint. Should be in format &lt;code&gt;package:1.0.0&lt;/code&gt;(version).&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;--dev-dependency&lt;/code&gt;: Development requirements, see &lt;code&gt;--require&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Add&lt;/strong&gt; dependencies to your package/project:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ poetry add google-search-results
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;...
Creating virtualenv PROJECT-9SrbZw5z-py3.9 in C:\Users\USER\AppData\Local\pypoetry\Cache\virtualenvs

Using version ^2.4.0 for google-search-results

Updating dependencies
Resolving dependencies...

Writing lock file

Package operations: 1 install, 0 updates, 0 removals

  • Installing google-search-results (2.26.0)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;a href="https://python-poetry.org/docs/cli/#add"&gt;&lt;code&gt;add&lt;/code&gt; command adds dependencies to &lt;code&gt;pyproject.toml&lt;/code&gt;&lt;/a&gt; and &lt;a href="https://python-poetry.org/docs/libraries#lock-file"&gt;&lt;code&gt;poetry.lock&lt;/code&gt;&lt;/a&gt;, and installs them.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;Creating virtualenv&lt;/code&gt; will create a virtual environment with the showed path. Environment creation will be done once.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;Writing lock file&lt;/code&gt; will write dependencies to &lt;a href="https://python-poetry.org/docs/libraries#lock-file"&gt;&lt;code&gt;poetry.lock&lt;/code&gt; file&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://python-poetry.org/docs/basic-usage/#updating-dependencies-to-their-latest-versions"&gt;&lt;code&gt;poetry.lock&lt;/code&gt; prevents from automatically getting the latest versions of your dependencies&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can explicitly &lt;a href="https://python-poetry.org/docs/cli/#lock"&gt;write &lt;code&gt;lock&lt;/code&gt; command to lock dependencies&lt;/a&gt; listed in the &lt;code&gt;pyproject.toml&lt;/code&gt; &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Add specific version:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# multiple ways
# double quotes ("foo") for Windows CMD 

$ poetry add google-search-results@^2.1.0

$ poetry add 'google-search-results&amp;gt;=1.8.5'

$ poetry add 'google-search-results==1.8.5'

$ poetry add google-search-results@latest
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;If you specify a constraint (&lt;code&gt;@&lt;/code&gt; or &lt;code&gt;&amp;gt;=&lt;/code&gt;), the dependency will be updated by using the specified constraint. &lt;/p&gt;

&lt;p&gt;Otherwise, if you try to add a package that is already present, you will get an error.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;(&lt;em&gt;optional&lt;/em&gt;) Install from existing project/package dependencies.&lt;/p&gt;

&lt;p&gt;If you're using an already created project that has either &lt;code&gt;poetry.lock&lt;/code&gt; or &lt;code&gt;pyproject.toml&lt;/code&gt; files, you can install those dependencies to the virtual environment:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ poetry install
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://python-poetry.org/docs/cli/#install"&gt;The &lt;code&gt;install&lt;/code&gt; command read&lt;/a&gt; &lt;code&gt;pyproject.toml&lt;/code&gt; or &lt;code&gt;poetry.lock&lt;/code&gt; file and installs all listed dependencies.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://python-poetry.org/docs/basic-usage/#installing-with-poetrylock"&gt;If there's a &lt;code&gt;poetry.lock&lt;/code&gt; file&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Poetry uses the exact versions&lt;/strong&gt; listed in &lt;code&gt;poetry.lock&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://python-poetry.org/docs/basic-usage/#installing-without-poetrylock"&gt;If there is no &lt;code&gt;poetry.lock&lt;/code&gt; file&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Poetry will resolves all dependencies&lt;/strong&gt; from the &lt;code&gt;pyproject.toml&lt;/code&gt; file and downloads the latest version of their files. &lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;(&lt;em&gt;optional&lt;/em&gt;) To not install development dependencies, use &lt;code&gt;--no-dev&lt;/code&gt; argument:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ poetry install --no-dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4 id="activate_env"&gt;
&lt;b&gt;Use added site packages&lt;/b&gt; inside IDE&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;If using &lt;code&gt;poetry&lt;/code&gt;&lt;/strong&gt;, find a location of the initialized environment first &lt;a href="https://python-poetry.org/docs/cli#config"&gt;via &lt;code&gt;config --list&lt;/code&gt; command&lt;/a&gt;. Look for &lt;code&gt;virtualenvs.path&lt;/code&gt; in the output:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ poetry config --list

cache-dir = "C:\\Users\\USER\\AppData\\Local\\pypoetry\\Cache"
experimental.new-installer = true
installer.parallel = true
virtualenvs.create = true
virtualenvs.in-project = null
👉virtualenvs.path = "{cache-dir}\\virtualenvs"  👉👉👉# C:\Users\USER\AppData\Local\pypoetry\Cache\virtualenvs
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A few more steps to do:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Go to the &lt;code&gt;virtualenvs.path&lt;/code&gt; folder and open created environment folder (in my case its: &lt;code&gt;PROJECT-9SrbZw5z-py3.9&lt;/code&gt;).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Go to &lt;code&gt;Scripts&lt;/code&gt; (Windows) or &lt;code&gt;bin&lt;/code&gt; (Linux) folder, copy the full path and add &lt;code&gt;python.exe&lt;/code&gt; at the end of the path:&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;C:\Users\USER\AppData\Local\pypoetry\Cache\virtualenvs\PROJECT-9SrbZw5z-py3.9\Scripts\python.exe
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;virtualenvs.path&lt;/code&gt; is needed to find a path to &lt;code&gt;python.exe&lt;/code&gt; inside created virtual environment which will let JetBrains or VSCode to &lt;a href="https://www.jetbrains.com/help/idea/indexing.html"&gt;index installed site-packages&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;If using &lt;code&gt;virtualenv&lt;/code&gt;&lt;/strong&gt;, go to &lt;code&gt;env\Scripts\python.exe&lt;/code&gt; folder in your project and copy the full path to the &lt;code&gt;python.exe&lt;/code&gt; file and enter it as a System Interpreter inside IDE.&lt;/p&gt;




&lt;h4&gt;Activate and index installed packages&lt;/h4&gt;

&lt;p&gt;Currently, if you run the script inside IDE, it will look at the globally installed package (&lt;code&gt;serpapi&lt;/code&gt;, for example) and will throw an error because globally there's no such library installed (it won't throw an error if it's installed):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Traceback (most recent call last):
  File "C:\Users\USER\PyCharmProjects\PROJECT\environment.py", line 1, in &amp;lt;module&amp;gt;
    from serpapi import GoogleSearch
ModuleNotFoundError: No module named 'serpapi'
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4 id="vscode"&gt;VSCode version&lt;/h4&gt;

&lt;p&gt;To fix this in VSCode we need to &lt;a href="https://code.visualstudio.com/docs/python/environments#_select-and-activate-an-environment"&gt;select a virtual environment Python Interpreter and set it as a System Interpreter&lt;/a&gt;.  &lt;/p&gt;

&lt;p&gt;Open command palette &lt;code&gt;CTRL+SHIFT+P&lt;/code&gt; and type: &lt;em&gt;Python: System Interpreter&lt;/em&gt; (&lt;a href="https://marketplace.visualstudio.com/items?itemName=ms-python.python"&gt;Python extension&lt;/a&gt; should be installed).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1ny_aYns--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/78694043/145968033-cdb91765-f6b2-4ec4-be9e-0fe892e1b7e6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1ny_aYns--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/78694043/145968033-cdb91765-f6b2-4ec4-be9e-0fe892e1b7e6.png" alt="Vscode_1" width="880" height="259"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Both for &lt;code&gt;virtualenv&lt;/code&gt; and &lt;code&gt;poetry&lt;/code&gt;, VSCode should automatically detect a proper &lt;code&gt;python.exe&lt;/code&gt; file from the virtual environment.&lt;/p&gt;

&lt;p&gt;If you don't see a proper path to &lt;code&gt;python.exe&lt;/code&gt; from your virtual environment then you need to locate and enter it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IFg5UM-o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/78694043/145968041-14b6d7c1-7b40-4b62-9b25-9feb408f66c9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IFg5UM-o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/78694043/145968041-14b6d7c1-7b40-4b62-9b25-9feb408f66c9.png" alt="Vscode_2" width="880" height="381"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now you can run your Python scripts from the virtual environment either by the command line or using  &lt;a href="https://marketplace.visualstudio.com/items?itemName=formulahendry.code-runner"&gt;VSCode Code Runner extension&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id="pycharm"&gt;PyCharm version&lt;/h4&gt;

&lt;p&gt;To fix this in PyCharm we need to add the path to &lt;code&gt;python.exe&lt;/code&gt; from the &lt;code&gt;virtualenv&lt;/code&gt; folder and set it as a &lt;a href="https://www.jetbrains.com/help/pycharm/configuring-local-python-interpreters.html"&gt;PyCharm System Interpreter&lt;/a&gt; which will index all site-packages from the virtual environment:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_uPJJ6rx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/78694043/144842354-86bc5461-3c23-44c8-b158-50d442556df9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_uPJJ6rx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/78694043/144842354-86bc5461-3c23-44c8-b158-50d442556df9.png" alt="pycharm_env_1" width="880" height="503"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S2XFrjLq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/78694043/144844623-98b9588d-bbc7-4cb2-9c18-ef25d091f619.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S2XFrjLq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/78694043/144844623-98b9588d-bbc7-4cb2-9c18-ef25d091f619.png" alt="pycharm_env_2" width="880" height="1103"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SLWqQEWe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/78694043/144848170-4483e721-d3ad-44e5-8383-2d37b7f1dc4a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SLWqQEWe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/78694043/144848170-4483e721-d3ad-44e5-8383-2d37b7f1dc4a.png" alt="pycharm_env_3" width="880" height="438"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WAg4iZbA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/78694043/145018801-b10a3548-6377-45d2-9370-b39306b86bb9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WAg4iZbA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/78694043/145018801-b10a3548-6377-45d2-9370-b39306b86bb9.png" alt="pycharm_env_4" width="880" height="519"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4 id="intellij"&gt;IntelliJ IDEA version&lt;/h4&gt;

&lt;p&gt;To fix this in IntelliJ IDEA we need to add the path to &lt;code&gt;python.exe&lt;/code&gt; from the &lt;code&gt;virtualenv&lt;/code&gt; folder as well and set it as a &lt;a href="https://www.jetbrains.com/help/pycharm/configuring-local-python-interpreters.html"&gt;PyCharm System Interpreter&lt;/a&gt; with a few additional tweaks which will index all site-packages from the virtual environment:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NHse8Mp3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/78694043/144851324-bad5ae7c-f294-433c-aac3-e341ec2d24de.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NHse8Mp3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/78694043/144851324-bad5ae7c-f294-433c-aac3-e341ec2d24de.png" alt="intellij_env_1" width="880" height="504"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cSCjJ7Er--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/78694043/144851331-a3ecb5a1-4eb1-4978-962b-10284d930343.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cSCjJ7Er--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/78694043/144851331-a3ecb5a1-4eb1-4978-962b-10284d930343.png" alt="intellij_env_2" width="880" height="913"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CQIcjYHm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/78694043/144851349-7bb66743-422f-4ddd-ba60-413b31769a8e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CQIcjYHm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/78694043/144851349-7bb66743-422f-4ddd-ba60-413b31769a8e.png" alt="intellij_env_3" width="880" height="595"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--a1Nk8tPb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/78694043/144851356-9d7dbf34-f19b-44c8-ac82-78a6e244adbc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a1Nk8tPb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/78694043/144851356-9d7dbf34-f19b-44c8-ac82-78a6e244adbc.png" alt="intellij_env_4" width="880" height="423"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jDxVDzJb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/78694043/145018901-b538bf67-eef0-4c26-aa94-29a75e9c6f72.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jDxVDzJb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/78694043/145018901-b538bf67-eef0-4c26-aa94-29a75e9c6f72.png" alt="intellij_env_5" width="880" height="512"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Deactivate&lt;/strong&gt; virtual environment when done&lt;/p&gt;

&lt;p&gt;To deactivate virtual environment &lt;em&gt;in order to use system Python&lt;/em&gt; both in PyCharm, IntelliJ IDEA and VSCode you need to set Python System Interpreter back to the default one without &lt;code&gt;virtualenv&lt;/code&gt; prefix for example: "&lt;em&gt;Python 3.9 virtualenv..&lt;/em&gt;" ==&amp;gt; "&lt;em&gt;Python 3.9&lt;/em&gt;", a reverse process of what's being shown above.&lt;/p&gt;




&lt;h2 id="сonclusion"&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Different project - different environment&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In short, it is better to use a virtual environment if you need to work with several projects at the same time which:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;use different library versions.&lt;/li&gt;
&lt;li&gt;use different Python versions.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Installing globally will become a mess&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Installing globally different versions of the same library for different projects will quickly turn into a mess, there will be no order, or if there will be a need to install different versions of Python it will turn into a mess of all messes:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3GK_4tgM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/78694043/145216823-7f2c8c4f-d469-4315-a852-6f817e5fe10d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3GK_4tgM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/78694043/145216823-7f2c8c4f-d469-4315-a852-6f817e5fe10d.png" alt="image" width="880" height="597"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2 id="links"&gt;Links&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://packaging.python.org/guides/installing-using-pip-and-virtual-environments/"&gt;Virtualenv&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://python-poetry.org/docs/"&gt;Poetry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://serpapi.com/libraries"&gt;SerpApi libraries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://xkcd.com/1987/"&gt;Black&amp;amp;White illustration by xkcd.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h2 id="acknowledgments"&gt;Acknowledgments&lt;/h2&gt;

&lt;p&gt;A big thanks to these guys for helping out with the feedback about illustrations:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.linkedin.com/in/ilyazub/"&gt;Ilya Z.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.linkedin.com/in/yevhen-mykhailov-043a341a1/"&gt;Yevhen M.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.linkedin.com/in/exsesx/"&gt;Oleh V.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.linkedin.com/in/yehor-tishchenko-6a8a32159/"&gt;Yehor T.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h2 id="outro"&gt;Outro&lt;/h2&gt;

&lt;p&gt;If you have anything to share, any questions or suggestions to this blog post, feel free to drop a comment below or reach out via Twitter at &lt;a href="https://twitter.com/DimitryZub"&gt;@dimitryzub&lt;/a&gt;, or &lt;a href="https://twitter.com/serp_api"&gt;@serp_api&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Yours,&lt;br&gt;
Dimitry, and the rest of SerpApi Team.&lt;/p&gt;




&lt;p&gt;Join us on &lt;a href="https://www.reddit.com/r/SerpApi/"&gt;Reddit&lt;/a&gt; | &lt;a href="https://twitter.com/serp_api"&gt;Twitter&lt;/a&gt; | &lt;a href="https://www.youtube.com/channel/UCUgIHlYBOD3yA3yDIRhg_mg"&gt;YouTube&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Add a  &lt;a href="https://forum.serpapi.com/feature-requests"&gt;Feature Request&lt;/a&gt;💫 or a &lt;a href="https://forum.serpapi.com/bugs"&gt;Bug&lt;/a&gt;🐞&lt;/p&gt;

</description>
      <category>python</category>
      <category>poetry</category>
      <category>virtualenv</category>
      <category>programming</category>
    </item>
    <item>
      <title>How to solve two sum problem in Java? [Solved]</title>
      <author>javinpaul</author>
      <pubDate>Wed, 22 Dec 2021 07:24:11 +0000</pubDate>
      <link>https://dev.to/javinpaul/how-to-solve-two-sum-problem-in-java-solved-2ci7</link>
      <guid>https://dev.to/javinpaul/how-to-solve-two-sum-problem-in-java-solved-2ci7</guid>
      <description>&lt;p&gt;&lt;em&gt;Disclosure: This post includes affiliate links; I may receive compensation if you purchase products or services from the different links provided in this article.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.educative.io/courses/grokking-the-coding-interview?affiliate_id=5073518643380224"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dl4gEglP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1400/1%2AnHQAymrct6Z7RGlK53T_oA.png" alt="14 Patterns to Ace Any Coding Interview Question" width="872" height="436"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hello Devs, if you have been solving &lt;a href="https://medium.com/javarevisited/50-data-structure-and-algorithms-interview-questions-for-programmers-b4b1ac61f5b0"&gt;data structure and algorithms problems&lt;/a&gt; or been through a couple of coding interviews then you might be familiar with the classical &lt;strong&gt;"Two Sum" problem&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;It's one of the classical coding problems of &lt;strong&gt;finding two numbers in a given array whose sum is equal to a given target number&lt;/strong&gt;. It's a good problem to learn &lt;a href="https://www.java67.com/2013/08/ata-structures-in-java-programming-array-linked-list-map-set-stack-queue.html"&gt;how array data structure works&lt;/a&gt; and programming basics like loops, conditionals, and operators.&lt;/p&gt;

&lt;p&gt;It's also good for developing your problem-solving skills and coding sense, which will help you in the long run. This is also a popular leetcode problem and commonly asked on &lt;a href="https://javarevisited.blogspot.com/2020/04/5-essential-skills-to-crack-coding-interviews.html"&gt;coding interviews&lt;/a&gt; to both beginners and intermediate programmers.&lt;/p&gt;

&lt;p&gt;In this article, I will show you the simplest possible solution to for this problem to kick-start your journey on solving &lt;a href="https://medium.com/javarevisited/20-array-coding-problems-and-questions-from-programming-interviews-869b475b9121"&gt;array-based coding problems&lt;/a&gt;. Before we talk about the solution, let's revisit the problem statement again:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Problem Statement:&lt;/strong&gt;&lt;br&gt;
Given an array of integers, find two numbers such that they add up to a specific target number.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The method &lt;code&gt;twoSum(int[] input, target)&lt;/code&gt;should return indices of the two numbers such that they add up to the target, where index1 must be less than index2. Please note that your returned answers (&lt;code&gt;both index1 and index2)&lt;/code&gt; are not zero-based.&lt;/p&gt;

&lt;p&gt;Note: You may assume that each input would have exactly one solution.&lt;/p&gt;

&lt;p&gt;Example&lt;br&gt;
&lt;strong&gt;[12,17,21,25], 29 -&amp;gt; [1,2]&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In order to solve this problem, a basic knowledge of &lt;a href="https://www.java67.com/2014/08/what-is-array-data-structure-in-java.html"&gt;array data structure&lt;/a&gt; and algorithms is experienced. You should also be familiar with Big O notation to calculate time and space complexity.&lt;/p&gt;

&lt;p&gt;If you are new to Data Structure and need a course to refresh your knowledge, I highly recommend you check out &lt;a href="https://click.linksynergy.com/fs-bin/click?id=JVFxdTr9V80&amp;amp;subid=0&amp;amp;offerid=323058.1&amp;amp;type=10&amp;amp;tmpid=14538&amp;amp;RD_PARM1=https%3A%2F%2Fwww.udemy.com%2Fdata-structures-and-algorithms-deep-dive-using-java%2F"&gt;&lt;strong&gt;Data Structures and Algorithms: Deep Dive Using Java&lt;/strong&gt;&lt;/a&gt; to build a foundation. This is a good course to learn data structure and algorithms using Java programming language.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#how-to-solve-two-sum-problem-in-java"&gt;
  &lt;/a&gt;
  How to solve Two Sum Problem in Java
&lt;/h2&gt;

&lt;p&gt;Here is our complete solution of two sum array problem in Java. This is a brute force way to solve the problem where we &lt;em&gt;start with the first element in the array&lt;/em&gt; and then check all other numbers in the array to find the pairs which add to the target value.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Rd2tDu-q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ysjry5snc0s6x2wj4lxp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rd2tDu-q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ysjry5snc0s6x2wj4lxp.png" alt="How to solve Two Sum Problem in Java" width="880" height="986"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is not the most efficient way to solve this problem but it works and that should be your first goal in the interview as well as in real-life scenarios.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;First, solve the problem and then optimize it.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The time complexity of this solution is &lt;strong&gt;quadratic O(N²)&lt;/strong&gt; and if you are asked this problem during the interview then you should also know tricks to reduce time complexity which I have left as an exercise for you.&lt;/p&gt;

&lt;p&gt;Good knowledge of data structure, algorithms, and common coding patterns helps you to find alternative solutions and reduce the time complexity. And, that's why I highly recommend every programmer to go through &lt;a href="https://www.educative.io/collection/5668639101419520/5671464854355968?affiliate_id=5073518643380224"&gt;&lt;strong&gt;Grokking the Coding Interview: Patterns for Coding Questions&lt;/strong&gt;&lt;/a&gt; course on Educative.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.educative.io/collection/5668639101419520/5671464854355968?affiliate_id=5073518643380224"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SQ5Sy9TN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/1%2AFQ-ViFyF9nQTQzTP4hcsVA.png" alt="" width="700" height="431"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is one of its kind courses that teaches you some common coding patterns like sliding window, merge interval, &lt;a href="https://javarevisited.blogspot.com/2016/07/how-to-find-3rd-element-from-end-in-linked-list-java.html"&gt;fast and slow pointers&lt;/a&gt;, two points, and many others which can be used to solve hundreds of coding problems. If you are preparing for coding interviews, I highly recommend you to learn these patterns.&lt;/p&gt;

&lt;p&gt;You can either buy this course or you can get an &lt;a href="https://www.educative.io/subscription?affiliate_id=5073518643380224"&gt;&lt;strong&gt;Educative subscription&lt;/strong&gt;&lt;/a&gt; on $18 per month which provides access to many useful courses for coding interviews like &lt;a href="https://www.educative.io/collection/5668639101419520/5649050225344512?affiliate_id=5073518643380224"&gt;Grokking the System Design Interview&lt;/a&gt; and &lt;a href="https://www.educative.io/collection/5668639101419520/5633779737559040?affiliate_id=5073518643380224"&gt;Grokking the Dynamic Programming Patterns&lt;/a&gt;. I highly recommend this subscription to the programmer preparing for job interviews.&lt;/p&gt;

&lt;p&gt;By the way, I have also written unit tests to test the logic in our code but I haven't tested for all scenarios. &lt;/p&gt;

&lt;p&gt;You can add more test in given JUnit function and test that if our solution works on boundary conditions like an array with zero elements, array with no pair for a sum, &lt;a href="https://javarevisited.blogspot.com/2014/08/how-to-find-all-pairs-in-array-of-integers-whose-sum-equal-given-number-java.html#axzz6acuPCYTR"&gt;an array with two pairs of given sum&lt;/a&gt;, and array with exactly one pair of elements for the given sum.&lt;/p&gt;

&lt;p&gt;When you run this program it will run fine and doesn't throw any error because the &lt;code&gt;twoSum()&lt;/code&gt; method will return an array with {1, 2} which matches the expected output in the &lt;code&gt;assertArrayEquals()&lt;/code&gt; method.&lt;/p&gt;

&lt;p&gt;These are actually indices of actual numbers in the input array which adds to the target value.&lt;/p&gt;

&lt;p&gt;For example, the target value in our case is 29 and the first and second element (12 + 17) adds to 29. &lt;em&gt;Since the question asked to return indices that are not zero-based we are adding one into indices and returning them.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;If you want to play just change the array input or expected output and you will start seeing errors as shown below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fmaster-the-coding-interview-data-structures-algorithms%2F"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FOwnefIb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/633/0%2AYwpg0dRMN5h6Qz79.png" alt="" width="633" height="354"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That's all about &lt;strong&gt;how to solve two sum problem in Java&lt;/strong&gt;.This is the brute force way to solve the problem and the time complexity of this problem is O(n²) because of two loops we have in our code. We are checking each element with every other element in the array to find the matching pair.&lt;/p&gt;

&lt;p&gt;Can you find a more clever way to solve the problem and reduce the time complexity to &lt;code&gt;O(nlogn)&lt;/code&gt; or maybe O(N)?&lt;/p&gt;

&lt;p&gt;Other &lt;strong&gt;Coding Interview Questions&lt;/strong&gt; you may like&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  5 Essential Skills to Crack Coding Interviews (&lt;a href="https://javarevisited.blogspot.com/2020/04/5-essential-skills-to-crack-coding-interviews.html"&gt;skills&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;  How to Print duplicate characters from String? (&lt;a href="http://java67.com/2014/03/how-to-find-duplicate-characters-in-String-Java-program.html"&gt;solution&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;  How to Find duplicate characters in a String? (&lt;a href="http://java67.blogspot.sg/2014/03/how-to-find-duplicate-characters-in-String-Java-program.html"&gt;solution&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;  50+ Data Structure and Algorithms Interview Questions (&lt;a href="https://dev.to/javinpaul/50-data-structure-and-algorithms-problems-from-coding-interviews-4lh2"&gt;list&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;  How to Check if String is Palindrome? (&lt;a href="http://java67.blogspot.com/2015/06/how-to-check-is-string-is-palindrome-in.html"&gt;solution&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;  30 array-based coding problems from interviews (&lt;a href="https://javarevisited.blogspot.com/2015/06/top-20-array-interview-questions-and-answers.html"&gt;questions&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;  Find the highest occurred character in a String? (&lt;a href="http://www.java67.com/2015/10/java-program-to-find-repeated-words-and-count.html"&gt;solution&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;  Check if a String contains only digits? (&lt;a href="http://javarevisited.blogspot.sg/2012/10/regular-expression-example-in-java-to-check-String-number.html"&gt;solution&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;  10 Data Structure and Algorithms courses for Interviews (&lt;a href="https://medium.com/hackernoon/10-data-structure-algorithms-and-programming-courses-to-crack-any-coding-interview-e1c50b30b927"&gt;courses&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;  How to reverse String in Java using Iteration and Recursion? (&lt;a href="http://javarevisited.blogspot.sg/2012/01/how-to-reverse-string-in-java-using.html"&gt;solution&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;  Count the occurrence of a given character in String? (&lt;a href="http://javarevisited.blogspot.sg/2012/12/how-to-count-occurrence-of-character-in-String.html"&gt;solution&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;  My favorite free course to learn Data Structure and Algorithms (&lt;a href="https://www.freecodecamp.org/news/these-are-the-best-free-courses-to-learn-data-structures-and-algorithms-in-depth-4d52f0d6b35a/"&gt;courses&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;  Convert numeric string to an int? (&lt;a href="http://javarevisited.blogspot.com/2011/08/convert-string-to-integer-to-string.html"&gt;solution&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;  Reverse words in a sentence without using a library method? (&lt;a href="http://java67.com/2015/06/how-to-reverse-words-in-string-java.html"&gt;solution&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;  Reverse a String in place in Java? (&lt;a href="http://javarevisited.blogspot.sg/2016/03/how-to-reverse-string-in-place-in-java.html"&gt;solution&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;  Count the number of vowels and consonants in a String? (&lt;a href="http://java67.blogspot.sg/2013/11/how-to-count-vowels-and-consonants-in-Java-String-word.html"&gt;solution&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;  Find the first non-repeated character from String? (&lt;a href="http://javarevisited.blogspot.sg/2014/03/3-ways-to-find-first-non-repeated-character-String-programming-problem.html"&gt;solution&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;  7 Best Data Structure and Algorithms Courses (&lt;a href="https://medium.com/javarevisited/7-best-courses-to-learn-data-structure-and-algorithms-d5379ae2588"&gt;best courses&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thanks for reading this article so far. If you like these two sums array-based coding problems then please share them with your friends and colleagues. If you have any questions or feedback then please drop a note.&lt;/p&gt;

&lt;p&gt;**P. S. --- **If you are preparing for a Programming Job Interview and you need more such questions, you can check the &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fmaster-the-coding-interview-data-structures-algorithms%2F"&gt;&lt;strong&gt;Master the Coding Interview: Data Structures + Algorithms&lt;/strong&gt;&lt;/a&gt; by Andrei Neagoie on Udemy. This is a great course to build and level up your Data Structure and Algorithms skills and crack the coding interview&lt;/p&gt;

</description>
      <category>java</category>
      <category>programming</category>
      <category>algorithms</category>
      <category>coding</category>
    </item>
    <item>
      <title>A11y tips: placeholder can't replace label</title>
      <author>Carlos Espada</author>
      <pubDate>Wed, 22 Dec 2021 07:22:39 +0000</pubDate>
      <link>https://dev.to/carlosespada/a11y-tips-placeholder-cant-replace-label-400i</link>
      <guid>https://dev.to/carlosespada/a11y-tips-placeholder-cant-replace-label-400i</guid>
      <description>&lt;p&gt;What do the &lt;a href="https://html.spec.whatwg.org/#the-placeholder-attribute"&gt;specifications&lt;/a&gt; say about the placeholder?&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The &lt;code&gt;placeholder&lt;/code&gt; attribute represents a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value. A hint could be a sample value or a brief description of the expected format.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;For example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;label for="email-address"&amp;gt;Email&amp;lt;/label&amp;gt;
&amp;lt;input
  type="email"
  id="email-address"
  name="email-address"
  placeholder="john.doe@example.com"
/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The function of the &lt;code&gt;placeholder&lt;/code&gt; attribute is very different from that of &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt;: a label is a title of the form control and it must always be present, the placeholder is just a help hint in certain fields and it may or may not exist. Different elements to fulfill different functions.&lt;/p&gt;

&lt;p&gt;So when you are doing the HTML of the forms, remember that: &lt;strong&gt;there is no case where placeholder can replace label&lt;/strong&gt;.&lt;/p&gt;

</description>
      <category>a11y</category>
      <category>tips</category>
      <category>html</category>
    </item>
  </channel>
</rss>
