<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How to Disable Copy Paste in Blogger Website </title>
      <author>Bhavyashah</author>
      <pubDate>Thu, 30 Sep 2021 15:56:51 +0000</pubDate>
      <link>https://dev.to/bhavyashah/how-to-disable-copy-paste-in-blogger-website-2h6d</link>
      <guid>https://dev.to/bhavyashah/how-to-disable-copy-paste-in-blogger-website-2h6d</guid>
      <description>&lt;p&gt;This tutorial explains the process to disable the Copy and Paste of Website, either of WordPress or Blogger. It is useful for those who log on their each each time they want to make a change to their website and they need to be able to make changes. A short tutorial of how you can &lt;a href="https://www.blogtriggers.com/2021/04/how-to-protect-your-content-in-blogger.html"&gt;disable copy and paste in blogger website&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Step1) First of all Visit Blogger.com&lt;/p&gt;

&lt;p&gt;Step2) Now In Blogger Dashboard go to the theme section &lt;/p&gt;

&lt;p&gt;Step3) Now Find &lt;code&gt;&amp;lt;/body&amp;gt; tag&lt;/code&gt; and paste this script code before the &lt;code&gt;&amp;lt;/body&amp;gt; tag&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;script&amp;gt;
        // Code Developed by BlogTriggers Team members
        window.onload = function() {
            document.addEventListener("contextmenu", function(e) {
                e.preventDefault();
            }, false);

            function disabledEvent(e) {
                if (e.stopPropagation) {
                    e.stopPropagation();
                } else if (window.event) {
                    window.event.cancelBubble = true;
                }
                e.preventDefault();
                return false;
            }
        };
        document.onkeydown = function(e) {
            return false;
        }
        navigator.keyboard.lock();
    &amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Step4) Now Save the Template.&lt;/p&gt;

&lt;p&gt;Congratulation you have successfully protect your content in blogger website &lt;/p&gt;

</description>
      <category>website</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Anyone out there willing to Contribute to the Development of JavaScript Frontend Library</title>
      <author>Beingana Jim Junior</author>
      <pubDate>Thu, 30 Sep 2021 15:55:09 +0000</pubDate>
      <link>https://dev.to/jimjunior/anyone-out-there-willing-to-contribute-to-the-development-of-javascript-frontend-library-2a03</link>
      <guid>https://dev.to/jimjunior/anyone-out-there-willing-to-contribute-to-the-development-of-javascript-frontend-library-2a03</guid>
      <description>&lt;p&gt;In the past 3 months i have been developing a JavaScript library for creating frontend web applications. The library is called &lt;a href="https://github.com/jim-junior/pearl-js"&gt;&lt;strong&gt;Pearl.Js&lt;/strong&gt;&lt;/a&gt;. It is written in &lt;a href="https://www.typescriptlang.org/"&gt;Typescript&lt;/a&gt;. And is almost similar to React.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The library consumes a virtual dom.&lt;/li&gt;
&lt;li&gt;It uses &lt;a href="https://devdocs.io/react/introducing-jsx"&gt;JSX&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;It is a component based library&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As u can se the above are a few of its similarities with react.&lt;br&gt;
Its source code can be found on its &lt;a href="https://github.com/jim-junior/pearl-js/"&gt;GitHub Repository&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#how-it-works"&gt;
  &lt;/a&gt;
  How it works
&lt;/h3&gt;

&lt;p&gt;The library consists of two parts. The core library that creates the virtual dom and the render that renders the virtual dom to the real dom in the browser.&lt;/p&gt;

&lt;p&gt;When an element is created through the &lt;code&gt;Pearl.createElement()&lt;/code&gt; function. It is represented as an object in the virtual dom and every element or component that is nested through it is stores in that element.&lt;/p&gt;

&lt;p&gt;Even the children behave the same way and this prevents the risk of difference in objects that are in the virtual dom.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#syntax"&gt;
  &lt;/a&gt;
  Syntax
&lt;/h3&gt;

&lt;p&gt;You can code it in either plane JavaScript or using JSX. It is better to use JSX since it is easier and faster. I will show you how you can code in both syntaxes&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Using plain Javascript&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Pearl&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@pearl-js/pearl&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Pearl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;button&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;attributes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mybutton&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;btn btn-primary&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;events&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;click&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;clicked&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;children&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Click Me&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="nx"&gt;Pearl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;button-cover&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mounted&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Using JSX&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Pearl&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;append&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@pearl-js/pearl&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;


&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"mybutton"&lt;/span&gt; &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;clicked&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"btn btn-primary"&lt;/span&gt; &lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Click Me&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="nx"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;button-cover&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mounted&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Note: when using JSX you need babel to compile it. In order to prevent babel from compiling it into React functions you need to install a given plugin that transforms JSX into Pearl Js functions.The plugin is called &lt;a href="https://www.npmjs.com/package/babel-plugin-jsx-to-pearl"&gt;babel-plugin-jsx-to-pearl&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#more-feature-of-the-library"&gt;
  &lt;/a&gt;
  More feature of the library
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;State:&lt;/strong&gt; This is for data management in components. Each time state updates the component rerender itself&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Components:&lt;/strong&gt; These are almost the same as react components the consists of state and can pass down props to child components.

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Props:&lt;/strong&gt; These are used to passed down data to Child components&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#contributing"&gt;
  &lt;/a&gt;
  Contributing
&lt;/h2&gt;

&lt;p&gt;The main reason why I am asking for contributers is because recently i found an issuse in the framework. When a component that has child components that are mapped through would rerender due to state update. It could encounter an error in rendering the children of the child component.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The following code is from the &lt;code&gt;test&lt;/code&gt; folder in the GitHub repository&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;//  tests/jsx/index.js&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Pearl&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@pearl-js/pearl&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Task&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./Tasks&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Tasks&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Pearl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;change&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;change&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;change&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;http://localhost:3000/tasks&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;updateState&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
          &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
      &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"editor"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;change&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Click Me&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;task&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Task&lt;/span&gt; &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;task&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Tasks&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;



&lt;span class="nx"&gt;Pearl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;root&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;App has mounted&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Task.js file&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// tests/jsx/Tasks.js&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Pearl&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@pearl-js/pearl&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Task&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Pearl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;code&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"task"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      task
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Task&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When the &lt;code&gt;change()&lt;/code&gt; function is called in the &lt;code&gt;Tasks&lt;/code&gt; component it rerenders the component and the its children. The &lt;code&gt;Task&lt;/code&gt; components are also rerendered with the props but their children are not rendered both in the virtual dom and in the real dom.&lt;/p&gt;

&lt;p&gt;That is the main error being faced now.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#proposed-features-that-need-to-be-added"&gt;
  &lt;/a&gt;
  Proposed features that need to be added
&lt;/h3&gt;

&lt;p&gt;In order for the framework to reach a world class level we need to add more features to it and these are also one reason we need contributors. So of the features include.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Global State management:&lt;/strong&gt; This is to prevent passing down props to other through components.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Lifecycle methods:&lt;/strong&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you also have a feature that you would like to add to this library you are free to add it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#contributing-to-source-code"&gt;
  &lt;/a&gt;
  Contributing to Source Code
&lt;/h3&gt;

&lt;p&gt;The source code is on GitHub all you have to do is fork and clone the repository in order to contribute to it.&lt;/p&gt;

&lt;p&gt;Cloning&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git clone https://github.com/jim-junior/pearl-js.git
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The  cloned directory will look somethin like this&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oLi3R319--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y9r99yuvf95tnwp2pxza.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oLi3R319--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y9r99yuvf95tnwp2pxza.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In packages folder there are two folders.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;|
|--|- babel-plugin-jsx-to-pearl
   |
   |- pearl

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;strong&gt;pearl&lt;/strong&gt; folder is the one that contains the main package and the &lt;strong&gt;babel-plugin-jsx-to-pearl&lt;/strong&gt; contains the babel plugin that transforms jsx into pearljs functions.&lt;br&gt;
You can contribute to any of those and incase you want to add another package to the repository it should go in the packages folder.&lt;/p&gt;




&lt;p&gt;I would be thankful to any one that contributes.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Vue Academy #6: Async update queue</title>
      <author>CodeOz</author>
      <pubDate>Thu, 30 Sep 2021 15:38:06 +0000</pubDate>
      <link>https://dev.to/codeoz/vue-academy-6-async-update-queue-56k</link>
      <guid>https://dev.to/codeoz/vue-academy-6-async-update-queue-56k</guid>
      <description>&lt;p&gt;Vue performs DOM updates &lt;strong&gt;asynchronously&lt;/strong&gt;! But what does mean?&lt;/p&gt;

&lt;p&gt;I will begin by explain you what is going on if we don't use an async update queue.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#normal-case"&gt;
  &lt;/a&gt;
  Normal case
&lt;/h3&gt;

&lt;p&gt;Imagine that we have an array and we show it into the DOM, each time we push a new item, we will render the DOM.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bZDREKME--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xzl6z1dxdieaqcoptlvc.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bZDREKME--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xzl6z1dxdieaqcoptlvc.jpg" alt="Dessin sans titre"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It's not really dramatic if we only add some items. But imagine if we decide to add 1000 items in this array at the same moment, we will render our DOM 1000 times! Your DOM will explode 🤯.&lt;/p&gt;

&lt;p&gt;We don't really need to update the DOM 1000 times, we only need one time, and we should only update it when we finish to add all items!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#async-update-queue"&gt;
  &lt;/a&gt;
  Async update queue
&lt;/h3&gt;

&lt;p&gt;Vue performs DOM updates &lt;strong&gt;asynchronously&lt;/strong&gt;. Whenever a data &lt;strong&gt;change&lt;/strong&gt; is observed (in our case, adding item into our array), it will &lt;strong&gt;NOT&lt;/strong&gt; directly update the DOM, it will add all change into a queue (buffer).&lt;/p&gt;

&lt;p&gt;It wait a few time (time needed to add all items to our array) and after this it will update the DOM. So we add 1000 items but we will update the DOM only &lt;strong&gt;ONE TIME!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZM9ARdJV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bgfi28fb6ol5h8ypdvkh.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZM9ARdJV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bgfi28fb6ol5h8ypdvkh.jpg" alt="Dessin sans titre (1)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This buffered de-duplication is important in avoiding unnecessary calculations and DOM manipulations.&lt;/p&gt;

&lt;p&gt;The moment when the queue will update the DOM is called a &lt;code&gt;tick&lt;/code&gt;!&lt;/p&gt;

&lt;p&gt;In general we don't need to careful about this, except if we need to do some &lt;strong&gt;action depending&lt;/strong&gt; on the DOM State. But it's not really recommended to base your action on DOM state, we recommend you to &lt;strong&gt;use component state&lt;/strong&gt; instead of &lt;strong&gt;DOM state.&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#example"&gt;
  &lt;/a&gt;
  Example
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"example"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;{{ message }}&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;vm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Vue&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;el&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#example&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;123&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="nx"&gt;vm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;new message&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="c1"&gt;// change data, but vue will not re-render immediately !&lt;/span&gt;

&lt;span class="nx"&gt;vm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;$el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;textContent&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;new message&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="c1"&gt;// false since the update is in the Queue, and not updated for the moment in the DOM&lt;/span&gt;

&lt;span class="c1"&gt;// NextTick is the moment where the Queue update all changed !&lt;/span&gt;
&lt;span class="nx"&gt;Vue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;nextTick&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// The DOM is update with the new change!&lt;/span&gt;
  &lt;span class="nx"&gt;vm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;$el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;textContent&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;new message&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="c1"&gt;// true&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can also use &lt;code&gt;await this.$nextTick()&lt;/code&gt; instead of callback!&lt;/p&gt;

&lt;p&gt;In some &lt;code&gt;test case&lt;/code&gt; you should need to check if your value is updated in the DOM, in this case you will need to use &lt;code&gt;nextTick&lt;/code&gt; before checking this update!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion-or-tldr"&gt;
  &lt;/a&gt;
  Conclusion or TLDR
&lt;/h3&gt;

&lt;p&gt;Async render queue allow vue to update the DOM only after a moment called &lt;code&gt;tick&lt;/code&gt;, it permit to avoid unneeded updated to the DOM.&lt;/p&gt;

&lt;p&gt;When you need to &lt;strong&gt;check a value in the DOM&lt;/strong&gt; (not recommended), you need to wait the &lt;code&gt;nextTick&lt;/code&gt; before checking the value in the DOM, otherwise the value will &lt;strong&gt;be not updated&lt;/strong&gt; at this moment!&lt;/p&gt;




&lt;p&gt;I hope you like this reading!&lt;/p&gt;

&lt;p&gt;🎁 You can get my new book &lt;code&gt;Underrated skills in javascript, make the difference&lt;/code&gt; for FREE if you follow me on &lt;a href="https://twitter.com/code__oz"&gt;Twitter&lt;/a&gt; and MP me 😁&lt;/p&gt;

&lt;p&gt;Or get it &lt;a href="https://codeoz.gumroad.com/l/RXLYp"&gt;HERE&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🎁 &lt;a href="https://www.getrevue.co/profile/code__oz"&gt;MY NEWSLETTER&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;☕️ You can &lt;a href="https://www.buymeacoffee.com/CodeoZ"&gt;SUPPORT MY WORKS&lt;/a&gt; 🙏&lt;/p&gt;

&lt;p&gt;🏃‍♂️ You can follow me on 👇&lt;/p&gt;

&lt;p&gt;🕊 Twitter : &lt;a href="https://twitter.com/code__oz"&gt;https://twitter.com/code__oz&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;👨‍💻 Github: &lt;a href="https://github.com/Code-Oz"&gt;https://github.com/Code-Oz&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And you can mark 🔖 this article!&lt;/p&gt;

</description>
      <category>vue</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>typescript</category>
    </item>
    <item>
      <title>AWS - NLP newsletter - 2021. Sep.</title>
      <author>João Moura</author>
      <pubDate>Thu, 30 Sep 2021 15:24:09 +0000</pubDate>
      <link>https://dev.to/aws/aws-nlp-newsletter-2021-sep-34o2</link>
      <guid>https://dev.to/aws/aws-nlp-newsletter-2021-sep-34o2</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QlQ0hJCp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zp6oesygzu431ar44wcb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QlQ0hJCp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zp6oesygzu431ar44wcb.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hello world. This is the second monthly Natural Language Processing(NLP) newsletter, covering everything related to NLP at AWS, and more. Feel free to leave comments, or share on your social network. Let's dive in!  &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#aws-nlp-services"&gt;
  &lt;/a&gt;
  AWS NLP Services
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#feature-releases"&gt;
  &lt;/a&gt;
  Feature Releases
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://aws.amazon.com/blogs/aws/amazon-textract-updates-up-to-32-price-reduction-in-8-aws-regions-and-up-to-50-reduction-in-asynchronous-job-processing-times/"&gt;&lt;strong&gt;Amazon Textract announcements price reductions, reduction in processing time for asynchronous operations up to 50% worldwide, US FedRAMP authorization&lt;/strong&gt;&lt;/a&gt;&lt;br&gt;
The usage of the AnalyzeDocument and DetectDocumentText API’s in eight AWS regions will now be billed at the same rates as prices in the US East (N.Virginia) region (not inclusive of the recently launched &lt;a href="https://aws.amazon.com/about-aws/whats-new/2021/07/amazon-textract-announces-specialized-support-automated-processing-invoices-receipts/"&gt;AnalyzeExpense API&lt;/a&gt;), posing a price reduction of up to 32%. Based on costumer feedback, enhancements made to Textract’s asynchronous operations reduced latency by as much as 50 percent worldwide. Finally, Textract achieved US FedRAMP authorization and added IRAP compliance support. &lt;a href="https://aws.amazon.com/about-aws/whats-new/2021/08/amazon-textract-reduced-pricing-analyzedocument-detectdocumenttext-region-expansion/"&gt;What’s New&lt;/a&gt;, &lt;a href="https://aws.amazon.com/blogs/aws/amazon-textract-updates-up-to-32-price-reduction-in-8-aws-regions-and-up-to-50-reduction-in-asynchronous-job-processing-times/"&gt;AWS News Blog&lt;/a&gt;, &lt;a href="https://docs.aws.amazon.com/textract/latest/dg/what-is.html"&gt;Documentation&lt;/a&gt;.  &lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws.amazon.com/about-aws/whats-new/2021/08/amazon-transcribe-speech-text-new-languages/"&gt;&lt;strong&gt;Amazon Transcribe adds support for 6 new languages&lt;/strong&gt;&lt;/a&gt;, &lt;a href="https://aws.amazon.com/about-aws/whats-new/2021/09/amazon-lex-launches-support-korean/"&gt;&lt;strong&gt;Amazon Lex adds support for Korean&lt;/strong&gt;&lt;/a&gt;&lt;br&gt;
Amazon Transcribe now supports batch transcription in six new languages - Afrikaans, Danish, Mandarin Chinese (Taiwan), Thai, New Zealand English, and South African English. Additionally, Amazon Lex it has just added support for Korean. &lt;a href="https://aws.amazon.com/about-aws/whats-new/2021/08/amazon-transcribe-speech-text-new-languages/"&gt;What’s New (Transcribe)&lt;/a&gt;, &lt;a href="https://aws.amazon.com/about-aws/whats-new/2021/09/amazon-lex-launches-support-korean/"&gt;What’s New (Lex)&lt;/a&gt;, &lt;a href="https://docs.aws.amazon.com/transcribe/latest/dg/transcribe-whatis.html"&gt;Transcribe Documentation&lt;/a&gt;, &lt;a href="https://docs.aws.amazon.com/lexv2/latest/dg/what-is.html"&gt;Lex Documentation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://docs.aws.amazon.com/transcribe/latest/dg/subtitles.html"&gt;&lt;strong&gt;Amazon Transcribe can now generate subtitles for your video files&lt;/strong&gt;&lt;/a&gt;&lt;br&gt;
Amazon Transcribe now supports the generation of WebVTT (*.vtt) and SubRip (.srt) output for use as video subtitles during a batch transcription job. You can select one or both options when you submit the job, and the resultant subtitle files are generated in the same destination as the underlying transcription output file. Find more details in the title link above.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws.amazon.com/about-aws/whats-new/2021/09/amazon-transcribe-pii-streaming-transcriptions/"&gt;&lt;strong&gt;Amazon Transcribe now supports redaction of personal identifiable information (PII) for streaming transcriptions&lt;/strong&gt;&lt;/a&gt;&lt;br&gt;
You can now use Amazon Transcribe to automatically identify and redact PII - such as Social Security numbers, credit card/bank account information, and contact information (i.e. name, email address, phone number and mailing address) - from your streaming transcription results. In addition, granular PII categories are now provided, instead of the unique [PII] tag available when redacting PII in a batch transcription job. With this new feature, companies can provide their contact center agents with valuable transcripts for on-going conversation while maintaining privacy standards. &lt;a href="https://aws.amazon.com/about-aws/whats-new/2021/09/amazon-transcribe-pii-streaming-transcriptions/"&gt;What’s New&lt;/a&gt;, &lt;a href="https://aws.amazon.com/blogs/machine-learning/introducing-pii-identification-and-redaction-in-streaming-transcriptions-using-amazon-transcribe/"&gt;AWS ML Blog&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws.amazon.com/about-aws/whats-new/2021/09/amazon-comprehend-extract-entities-native-format/"&gt;&lt;strong&gt;Extract custom entities from documents in their native format with Amazon Comprehend&lt;/strong&gt;&lt;/a&gt;&lt;br&gt;
Amazon Comprehend now allows you to extract custom entities from documents in a variety of formats (PDF, Word, plain text) and layouts (e.g., bullets ,lists). Prior to this announcement, you could only use Comprehend on plain text documents, which required you to flatten documents into machine-readable text; this feature combines the power of NLP and Optical Character Recognition (OCR) to extract custom entitities from your documents using the same API and with no preprocessing required. &lt;a href="https://aws.amazon.com/about-aws/whats-new/2021/09/amazon-comprehend-extract-entities-native-format/"&gt;What’s New&lt;/a&gt;, &lt;a href="https://aws.amazon.com/blogs/machine-learning/extract-custom-entities-from-documents-in-their-native-format-with-amazon-comprehend/"&gt;Getting Started (blog)&lt;/a&gt;, &lt;a href="https://aws.amazon.com/blogs/machine-learning/custom-document-annotation-for-extracting-named-entities-in-documents-using-amazon-comprehend/"&gt;Document Annotation for new feature (blog)&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#blog-postsdemos"&gt;
  &lt;/a&gt;
  Blog posts/demos
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://aws.amazon.com/blogs/machine-learning/transcribe-class-lectures-accurately-using-amazon-transcribe-with-custom-language-models/"&gt;&lt;strong&gt;Boost transcription accuracy of class lectures with custom language models for Amazon Transcribe&lt;/strong&gt;&lt;/a&gt;&lt;br&gt;
Practical example of how training a custom language model in Amazon Transcribe can help improve transcription accuracy on difficult specialized topics, such as biology lectures.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HtvNMiIM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w4g5873kyisq6cibxkrr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HtvNMiIM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w4g5873kyisq6cibxkrr.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Read more about how to leverage custom language models in the &lt;a href="https://docs.aws.amazon.com/transcribe/latest/dg/custom-language-models.html"&gt;Transcribe documentation&lt;/a&gt;.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#nlp-on-amazon-sagemaker"&gt;
  &lt;/a&gt;
  NLP on Amazon SageMaker
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#feature-releases"&gt;
  &lt;/a&gt;
  Feature Releases
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://aws.amazon.com/about-aws/whats-new/2021/09/amazon-sagemaker-studio-inference-endpoint-testing/"&gt;&lt;strong&gt;Amazon SageMaker now supports inference endpoint testing from SageMaker Studio&lt;/strong&gt;&lt;/a&gt;&lt;br&gt;
Once a model is deployed to Amazon SageMaker, customers can get predictions from their models deployed on SageMaker real-time endpoints. Previously, customers used third-party tooling such as curl or wrote code in Jupyter Notebooks to invoke the endpoints for inference. Now, customers can provide a JSON payload, send the inference request to the endpoint, and receive results directly from SageMaker Studio. The results are displayed directly in SageMaker Studio and can be downloaded for further analysis.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws.amazon.com/blogs/machine-learning/announcing-the-amazon-s3-plugin-for-pytorch/"&gt;&lt;strong&gt;Amazon S3 plugin for PyTorch&lt;/strong&gt;&lt;/a&gt;&lt;br&gt;
This is an open-source library, built to be used with the deep learning framework PyTorch for streaming data with Amazon S3. This feature is also available in PyTorch Deep Learning Containers, and with it you can take advantage of using data from S3 buckets directly with PyTorch dataset and dataloader API’s without needing to download it first on local storage. &lt;a href="https://aws.amazon.com/blogs/machine-learning/announcing-the-amazon-s3-plugin-for-pytorch/"&gt;AWS ML Blog&lt;/a&gt;, &lt;a href="https://github.com/aws/amazon-s3-plugin-for-pytorch"&gt;Plugin Github&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#blog-postsdemos"&gt;
  &lt;/a&gt;
  Blog posts/demos
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://github.com/aws-samples/detecting-data-drift-in-nlp-using-amazon-sagemaker-custom-model-monitor"&gt;&lt;strong&gt;Detecting Data Drift in NLP using SageMaker Custom Model Monitor&lt;/strong&gt;&lt;/a&gt;&lt;br&gt;
Detecting data drift in NLP is a challenging task. Model monitoring becomes an important aspect in MLOPS, because the change in data distribution from the training corpus to real-world data at inference time can cause model performance decay. This distribution shift is called data drift. This demo focuses on detecting that drift, making use of the custom monitoring capabilities of SageMaker Model Monitor.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#upcoming-events"&gt;
  &lt;/a&gt;
  Upcoming events
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.nlpsummit.org/nlp-2021/"&gt;&lt;strong&gt;NLP Summit 2021&lt;/strong&gt;&lt;/a&gt;&lt;br&gt;
Oct 05-07, 2021 &lt;br&gt;
Join the NLP Summit: two weeks of immersive, industry-focused content. Week one will include over 30 unique sessions, with a special track on NLP in Healthcare. Week two will feature beginner to advanced training workshops with certifications. Attendees can also participate in coffee chats with speakers, committers, and industry experts. &lt;a href="https://www.nlpsummit.org/nlp-2021/"&gt;Registration&lt;/a&gt; is free.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-startuploft-emea.com/e/dcb4f/aws-startup-accelerate-start-your-nlp-journey-on-aws-level-200-300"&gt;&lt;strong&gt;AWS Startup Accelerate: Start your NLP journey on AWS&lt;/strong&gt;&lt;/a&gt;&lt;br&gt;
Oct 11, 2021 &lt;br&gt;
AWS will be running a Technical talk on "Starting your NLP journey with AWS". Based on feedback from lead NLP ML Core startups, we see that developing NLP models is a complex and costly process, which is why we’d like to engage with Data Scientists and ML engineers to help them in their adoption journey. We would love to have you there! Register &lt;a href="https://aws-startuploft-emea.com/e/dcb4f/aws-startup-accelerate-start-your-nlp-journey-on-aws-level-200-300"&gt;here&lt;/a&gt;.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#miscellaneous"&gt;
  &lt;/a&gt;
  Miscellaneous
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;🤗 HuggingFace: Hardware Partner Program, Optimum, and Infinity&lt;/strong&gt;&lt;br&gt;
A trio of announcements for HuggingFace this month:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hugging Face has launched a &lt;a href="https://huggingface.co/blog/hardware-partners-program"&gt;Hardware Partner Program&lt;/a&gt;, partnering with AI Hardware accelerators to make state of the art production performance accessible with Transformers.&lt;/li&gt;
&lt;li&gt;In this context, HuggingFace has released &lt;a href="https://huggingface.co/hardware"&gt;Optimum&lt;/a&gt;, an ML optimization toolkit, which enables maximum efficiency to train and run models on specific hardware. As of today, you can use it to easily prune and/or quantize Transformer models for Intel Xeon CPU’s using Intel Low Precision Optimization Tool (LPOT), and later this year the first models &lt;a href="https://huggingface.co/blog/graphcore"&gt;optimized for GraphCore’s Intelligence Processing Unit (IPU)&lt;/a&gt; will be added.&lt;/li&gt;
&lt;li&gt;Finally, &lt;a href="https://huggingface.co/infinity"&gt;Infinity&lt;/a&gt; - HugginFace’s enterprise-scale inference solution - was officially announced on September 28th, comprised of a containerized solution which promises Transformers’ accuracy at 1ms latency.&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>aws</category>
      <category>nlp</category>
      <category>machinelearning</category>
      <category>ai</category>
    </item>
    <item>
      <title>The Collab Lab TCL-29</title>
      <author>Kevin Falting</author>
      <pubDate>Thu, 30 Sep 2021 14:53:52 +0000</pubDate>
      <link>https://dev.to/the-collab-lab/the-collab-lab-tcl-29-1apm</link>
      <guid>https://dev.to/the-collab-lab/the-collab-lab-tcl-29-1apm</guid>
      <description>&lt;p&gt;Over eight weeks, four highly motivated junior developers made the commitment to work together, participate in sprints with all the ceremony, and build a working smart to-do list. The results of the experience have been more than any of us thought!&lt;/p&gt;

&lt;p&gt;🎉 &lt;a href="https://tcl-29-shopping-list.web.app/"&gt;TCL 29 Smart Shopping List&lt;/a&gt; 🎉&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/the-collab-lab/tcl-29-smart-shopping-list"&gt;Github Repo&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;The junior developers are these wonderful people:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.linkedin.com/in/abigailnottingham/"&gt;Abigail Nottingham&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.linkedin.com/in/claire-yspol/"&gt;Claire Yspol&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.linkedin.com/in/eraulianr/"&gt;Nadinda Rachmat&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.linkedin.com/in/zachee-ishimwe/"&gt;Zachee Ishimwe&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The mentors:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.linkedin.com/in/chiamakaumeh"&gt;Chiamaka Umeh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.linkedin.com/in/luka-baramishvili/"&gt;Luka Baramishvili&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Bela Sinoimeri&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.linkedin.com/in/kevinfalting"&gt;Kevin Falting&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Every Sunday, we met for an hour to demo the week's work, go over a topic like code review or a11y standards, conduct a retro, and plan the work for the upcoming week. Each developer would be paired for the week and then be released to work on their assigned issue. Each team navigated their own schedules across timezones to find the time to pair program.&lt;/p&gt;

&lt;p&gt;The result was something quite cool, a smart shopping list that learns as you go! Here's the final demo call, definitely worth a watch to see what this talented group of devs came up with.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/NAvHq5QTp68"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Many of them were new to React and especially to working on a project with a team, and I've gotta say, that I'm very impressed with how quickly they slipped into a solid routine. If I hadn't known better, I would've thought them a bunch of remote working veterans! The patience and kindness each member lended to each other was a remarkable thing to see, and aside from the impressive &lt;em&gt;coding chops&lt;/em&gt; this group showed, their positive and can-do attitude is something that sets them far above peers.&lt;/p&gt;

&lt;p&gt;I mean, don't take my word for it, check out how well &lt;a href="https://github.com/the-collab-lab/tcl-29-smart-shopping-list/pull/21"&gt;Pull Request descriptions&lt;/a&gt; were written, complete with testing steps and all. The conversations on the PRs during code review were golden. To be honest, I learned more about React from their code and questions than any other videos or blogs.&lt;/p&gt;

&lt;p&gt;These four are certainly a capable group of developers and would be an asset to any team they join. 🙌&lt;/p&gt;

&lt;p&gt;I'm only one of the mentors for this team, and the others had some even more gracious things to say. 😁&lt;/p&gt;

&lt;p&gt;Luka:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;TCL-29 was very engaged and hardworking group. Here are a couple of points I want to emphasize: &lt;/p&gt;

&lt;p&gt;I think the team were &lt;strong&gt;supportive&lt;/strong&gt; and considerate of each other. Throughout the program they demonstrated an amazing amount of teamwork by helping each other understand different programming concepts, as well as teaching one another something new. Their support especially was demonstrated when the program’s level of difficulty was increased and when implementing new user stories needed more engagement. During this time everyone was ready to go extra miles to explain potential ways to solve the issues. In addition, what I’ve seen in their PRs are: Well thought out comments and questions; praising each other’s work when credit was due and questioning aspects when things were unclear. All done in a tactful and empathetic way.&lt;/p&gt;

&lt;p&gt;Another point I want to emphasize is their &lt;strong&gt;communication/demo skills&lt;/strong&gt;. With the practice and confidence it was truly fantastic to see how well they articulated their code and thought process. Given the fact that English is not their Native Language for most of the participants, their communication skills were just superb. It was more enjoyable to see that their demo skills improved in an exponential rate.&lt;/p&gt;

&lt;p&gt;Final point I want to mention is that the team was very &lt;strong&gt;independent&lt;/strong&gt;. Even though mentors always encouraged to ask as many questions as possible, the developers always tried get to the answers themselves. I thought this was an expression of high professionalism - to stay resilient and flexible to ask for help when it was totally necessary.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Chiamaka:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The teammates took off really fast, they bonded easily and started contributing to the project almost immediately. One really amazing quality they all had is the zeal to learn. They also had a &lt;strong&gt;willingness to research&lt;/strong&gt; what they didn't know about.&lt;/p&gt;

&lt;p&gt;They were &lt;strong&gt;very hard working&lt;/strong&gt; and never hesitated to ask questions when they weren’t clear about anything. They showed resilience and great team spirit during the project. They were ready to help each other unblock and put each other through.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;All in all, it was a great experience for everyone, and if you're wanting to hire some junior devs, I wouldn't look any further than these four, I mean how many junior devs have &lt;em&gt;experience&lt;/em&gt; working on a collaborative project?&lt;/p&gt;

&lt;p&gt;If you're a developer and wanting to give back to the dev community, volunteer with &lt;a href="https://the-collab-lab.codes"&gt;The Collab Lab&lt;/a&gt;. It's a wonderful experience and there are few other ways to have such a huge impact. 💪&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#weekly-syncs"&gt;
  &lt;/a&gt;
  Weekly Syncs
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=80PmQU1gSKo"&gt;Week 0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=UXj2uZzBWFM"&gt;Week 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=fWMZTDL1Ruk"&gt;Week 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=4UPe15TyakU"&gt;Week 3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=ruEGFVAzI4w"&gt;Week 4&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Week 5 (Forgot to hit record 😅)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=EIP5cD85TpQ"&gt;Week 6&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=8KmeY8XLAWc"&gt;Week 7&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=NAvHq5QTp68"&gt;Week 8&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
    </item>
    <item>
      <title>We are bad at programming</title>
      <author>scottshipp</author>
      <pubDate>Thu, 30 Sep 2021 14:39:12 +0000</pubDate>
      <link>https://dev.to/scottshipp/we-are-bad-at-programming-1e4g</link>
      <guid>https://dev.to/scottshipp/we-are-bad-at-programming-1e4g</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Photo by &lt;a href="https://unsplash.com/@nikkotations"&gt;nikko macaspac&lt;/a&gt; on &lt;a href="https://unsplash.com"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I am inspired today because Dan Luu has a mic-drop tweet:&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--1WuaRvg6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1372102910897623041/jswKUJa__normal.jpg" alt="Dan Luu profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Dan Luu
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @danluu
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      I feel like it would be useful for programmers, as a field, to acknowledge that humans are bad at programming.&lt;br&gt;&lt;br&gt;This is because techniques for improving at things you're bad at are different from techniques for improving at things you're good at.
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      20:11 PM - 28 Sep 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1442945072144678914" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1442945072144678914" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1442945072144678914" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;That's some harsh truth! So harsh, I feel like we need to say it again:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#we-are-bad-at-programming"&gt;
  &lt;/a&gt;
  We are bad at programming
&lt;/h2&gt;

&lt;p&gt;But what's the solution? Can we make a better programming language? 🤔&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;There is no programming language—no matter how structured—that will prevent programmers from making bad programs.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;      Larry Flon&lt;/p&gt;

&lt;p&gt;Oh shoot. Alright then. What about a better OS? 🤔&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;UNIX was not designed to stop its users from doing stupid things, as that would also stop them from doing clever things.&lt;br&gt;
      Doug Gwyn&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Ha ha ha ha ha. Well, I have macOh...wait. 🤔&lt;/p&gt;

&lt;p&gt;Ahem. Well, there's always disciplined testing and debugging.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If debugging is the process of removing bugs, then programming must be the process of putting them in.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;      Edsger W. Dijkstra&lt;/p&gt;

&lt;p&gt;Hmm ... so you're saying that you can't &lt;em&gt;debug&lt;/em&gt; your code as fast as you &lt;em&gt;bug&lt;/em&gt; your code? 🤔&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;There are two ways to write error-free programs; only the third one works.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;      Alan J. Perlis&lt;/p&gt;

&lt;p&gt;Hmmm. I see. Well ... great. 😩&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-starting-point"&gt;
  &lt;/a&gt;
  The starting point
&lt;/h2&gt;

&lt;p&gt;He actually offers an &lt;a href="https://twitter.com/danluu/status/1442945072144678914"&gt;entire thread&lt;/a&gt; on this topic that's worth reading. One of the things he says is that in programming, "we basically have no idea how to improve."&lt;/p&gt;

&lt;p&gt;He concludes that the reason for this is that "we can observe that most advice is useless or counterproductive."&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--1WuaRvg6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1372102910897623041/jswKUJa__normal.jpg" alt="Dan Luu profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Dan Luu
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @danluu
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      How you should approach improvement is very different in an environment where we know how to make people good, like skiing, where we can observe that advice is often very effective, vs. in programming, where we can observe that most advice is useless or counterproductive.
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      20:11 PM - 28 Sep 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1442945084975054849" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1442945084975054849" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1442945084975054849" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;h2&gt;
  &lt;a href="#good-advice"&gt;
  &lt;/a&gt;
  Good advice
&lt;/h2&gt;

&lt;p&gt;I don't think he's saying we're 100% doomed. If you read between the lines, he's just offering that perhaps we should put our thinking caps on. I love how Dan's tweet offers a starting point rather than a solution: &lt;em&gt;approach learning as though you are bad at programming.&lt;/em&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The competent programmer is fully aware of the limited size of his own skull. He therefore approaches his task with full humility, and avoids clever tricks like the plague.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;      Edsger Dijkstra&lt;/p&gt;

&lt;p&gt;I can tell you a couple hard-earned lessons from my own 14 years of software experience. I know what it's like to be a bad programmer, and to become a better one, so here's a handful of items that might help.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#experience"&gt;
  &lt;/a&gt;
  Experience
&lt;/h3&gt;

&lt;p&gt;First, experience does help. It's important to gain your own experience and then to trust it. There will be lessons learned the hard way with meltdowns in production, but those lessons really can't be learned another way. But another simpler way this comes up is that seeing is believing. Everyone should write a lot of code and experiment in a sandbox and observe the results. (REPL's are awesome!)&lt;/p&gt;

&lt;p&gt;One huge upside to learning from experience is that it is continual. You're never going to stop having new experiences and so you're never going to stop learning new things.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#keep-an-open-mind-and-resist-dogmatism"&gt;
  &lt;/a&gt;
  Keep an open mind and resist dogmatism
&lt;/h3&gt;

&lt;p&gt;Actually, something I've learned in just the last five years is that things you would never dream of doing in one context actually make sense in other contexts. So I've concluded something new: resist dogmatism.&lt;/p&gt;

&lt;p&gt;What is dogmatism? It's those "only," "always," and "never" ideas like "Never use a singleton" or "only use Gradle." &lt;/p&gt;

&lt;p&gt;Well, guess what? Most of these statements are false, and reality is more nuanced than it first appears. When you're a programmer just starting out it's fine to adopt some "universal truths" but prepare to be surprised and let your grip relax.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#deliberate-practice"&gt;
  &lt;/a&gt;
  Deliberate practice
&lt;/h3&gt;

&lt;p&gt;Third, &lt;a href="https://codingdojo.org/DeliberatePractice/"&gt;deliberate practice&lt;/a&gt; actually helps you grow a lot. One way to do this is with &lt;a href="http://codekata.com/kata/codekata-intro/"&gt;code katas&lt;/a&gt;. Constant deliberate practice is one thing that I have never regretted.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#testing-testing-and-more-testing"&gt;
  &lt;/a&gt;
  Testing, testing, and more testing
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Program testing can be a very effective way to show the presence of bugs, but is hopelessly inadequate for showing their absence.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;      Edsger W. Dijkstra&lt;/p&gt;

&lt;p&gt;While it's true that testing doesn't prove you have no bugs, &lt;strong&gt;writing tests helps you think about things you didn't think about.&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;All code is guilty, until proven innocent.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;      Anonymous&lt;/p&gt;

&lt;p&gt;It's mainly for this reason that I approach writing code from &lt;a href="https://en.wikipedia.org/wiki/Test-driven_development"&gt;TDD&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The main benefit of TDD to me is that it forces you to put your code in front of its first user: the tests. And this results in making your code handle itself much more gracefully.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-way-forward"&gt;
  &lt;/a&gt;
  The way forward
&lt;/h2&gt;

&lt;p&gt;I'm sure there's more I could say, but much of it is out there already, as you can tell from all the quotes in this ramble. Don't forget to at least go read old classics like &lt;em&gt;Clean Code&lt;/em&gt;, &lt;em&gt;The Pragmatic Programmer&lt;/em&gt;, &lt;em&gt;Working Effectively with Legacy Code,&lt;/em&gt; etc. if at least to learn how to reason about code and coding.&lt;/p&gt;

&lt;p&gt;May you approach coding as though you are a bad programmer.&lt;/p&gt;

&lt;p&gt;And may the users of our software forgive us all.&lt;/p&gt;

</description>
      <category>programming</category>
      <category>beginners</category>
      <category>career</category>
    </item>
    <item>
      <title>react-avatar-group: A responsive, automatically-generated group avatar component, powered by ui-avatars.</title>
      <author>Michael Bagley</author>
      <pubDate>Thu, 30 Sep 2021 14:25:13 +0000</pubDate>
      <link>https://dev.to/mbagley1020/react-avatar-group-a-responsive-automatically-generated-group-avatar-component-powered-by-ui-avatars-pk</link>
      <guid>https://dev.to/mbagley1020/react-avatar-group-a-responsive-automatically-generated-group-avatar-component-powered-by-ui-avatars-pk</guid>
      <description>&lt;p&gt;This library is great for displaying the 'active' users of your React application. The responsiveness of react-avatar-group is meant to be similar to the Google Docs user icons. Some live examples are &lt;a href="https://easybase.github.io/react-avatar-group/"&gt;available here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you need a more &lt;a href="https://easybase.io/4-reasons-to-use-websockets-for-your-next-project-with-example/#bonus-adding-user-avatars"&gt;in-depth tutorial on using this package with actual, live users, check out this post here&lt;/a&gt;. Otherwise, here's a quick walk-through on how to use this package.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6wMjD9gg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n8vdyhvnb12eh2qqt6yw.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6wMjD9gg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n8vdyhvnb12eh2qqt6yw.gif" alt="react avatar group react-avatar-group"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;First, install the package:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install react-avatar-group
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then open up your React file and import the package, as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// App.tsx&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;AvatarGroup&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-avatar-group&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;AvatarGroup&lt;/span&gt;
    &lt;span class="na"&gt;avatars&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;James&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Ava&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
      &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;avatar&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Jackson&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;fontColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;FF00FF&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;tooltip&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;This is a custom tooltip&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The only required prop to the &lt;code&gt;AvatarGroup&lt;/code&gt; component is &lt;code&gt;avatars&lt;/code&gt;, which is an array of strings or &lt;a href="https://github.com/easybase/react-avatar-group#iavatar"&gt;&lt;em&gt;IAvatar&lt;/em&gt;&lt;/a&gt; objects, for more customization.&lt;/p&gt;

&lt;p&gt;Another important prop is &lt;code&gt;max&lt;/code&gt;. This will hide the avatars beyond a certain length with a custom overflow avatar (as seen in the gif above). &lt;code&gt;displayAllOnHover&lt;/code&gt; will show all minions passed when the mouse hovers the avatar group, if there is a &lt;code&gt;max&lt;/code&gt; number passed.&lt;/p&gt;

&lt;p&gt;All the &lt;a href="https://github.com/easybase/react-avatar-group#props"&gt;props for react-avatar-group can be seen here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Using these other props, your &lt;code&gt;AvatarGroup&lt;/code&gt; may look like the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;AvatarGroup&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-avatar-group&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;AvatarGroup&lt;/span&gt;
    &lt;span class="na"&gt;avatars&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;James&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Ava&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
      &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;avatar&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Jackson&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;fontColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;FF00FF&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;tooltip&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;This is a custom tooltip&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
    &lt;span class="na"&gt;initialCharacters&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
    &lt;span class="na"&gt;max&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
    &lt;span class="na"&gt;size&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
    &lt;span class="na"&gt;displayAllOnHover&lt;/span&gt;
    &lt;span class="na"&gt;shadow&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>typescript</category>
    </item>
    <item>
      <title>Kubernetes Crash Course for Absolute Beginners 👏</title>
      <author>Techworld with Nana</author>
      <pubDate>Thu, 30 Sep 2021 14:18:53 +0000</pubDate>
      <link>https://dev.to/techworld_with_nana/kubernetes-crash-course-for-absolute-beginners-35pc</link>
      <guid>https://dev.to/techworld_with_nana/kubernetes-crash-course-for-absolute-beginners-35pc</guid>
      <description>&lt;p&gt;Kubernetes, also known as K8s, is &lt;strong&gt;the most popular platform for container orchestration&lt;/strong&gt; for automating deployment, scaling, and management of containerized applications.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-we-need-kubernetes"&gt;
  &lt;/a&gt;
  Why we need Kubernetes? 🤔
&lt;/h3&gt;

&lt;p&gt;After you have &lt;a href="https://youtu.be/3c-iBn73dDE"&gt;learnt Docker 🐳&lt;/a&gt;   you can start creating very complex applications with tens or even hundreds of containers, with containers talking to each other and interacting in some way.&lt;br&gt;
And these containers would need to be deployed across multiple servers in a distributed way.&lt;br&gt;
So you can imagine the &lt;strong&gt;overhead and effort&lt;/strong&gt; you would have, if you had to &lt;strong&gt;manage these hundreds of containers manually&lt;/strong&gt; without automation. 🤦‍♀️&lt;/p&gt;

&lt;p&gt;Every time containers crash or the communication between them isn’t working across multiple servers, you would have to interfere and fix the problem. &lt;/p&gt;

&lt;p&gt;So it would be great to have a tool that will &lt;strong&gt;automatically fix such issues and recover the application state&lt;/strong&gt;. That tool is a container orchestration tool. ⭐️&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;And &lt;strong&gt;Kubernetes&lt;/strong&gt; is one of the &lt;strong&gt;most popular container orchestration tools&lt;/strong&gt; out there.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;
  &lt;a href="#getting-started-with-kubernetes"&gt;
  &lt;/a&gt;
  Getting started with Kubernetes 😎
&lt;/h3&gt;

&lt;p&gt;In this crash course you will &lt;strong&gt;learn everything you need to know to get started with Kubernetes in 1 hour&lt;/strong&gt;. You will learn all the core concepts, its architecture and how Kubernetes works including the main Kubernetes components that you need to learn to work efficiently with Kubernetes.&lt;/p&gt;

&lt;p&gt;Finally, I will show a hands-on demo project, where you will learn how to deploy a web application with its database into a local Kubernetes cluster. It's a simple but realistic application setup, which can also serve as a blueprint configuration for most common application setups.&lt;/p&gt;

&lt;p&gt;The full tutorial is available here: 🤓&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/s_o8dwzRlu4"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#%E2%96%AC%E2%96%AC%E2%96%AC%E2%96%AC%E2%96%AC%E2%96%AC-course-overview-%E2%96%AC%E2%96%AC%E2%96%AC%E2%96%AC%E2%96%AC%E2%96%AC"&gt;
  &lt;/a&gt;
  ▬▬▬▬▬▬ COURSE OVERVIEW 📚  ▬▬▬▬▬▬
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#part-01-introduction-to-kubernetes"&gt;
  &lt;/a&gt;
  💎  Part 01: Introduction to Kubernetes
&lt;/h4&gt;

&lt;p&gt;In the first section you will learn all the core concepts.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What is Kubernetes&lt;/li&gt;
&lt;li&gt;Benefits of Kubernetes&lt;/li&gt;
&lt;li&gt;Kubernetes Architecture (Control Plane and Worker Nodes)&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#part-02-main-kubernetes-components"&gt;
  &lt;/a&gt;
  💎  Part 02: Main Kubernetes Components
&lt;/h4&gt;

&lt;p&gt;K8s has tons of components, but most of the time you are only working with a handful of them. This part shows you step by step how each component helps you to deploy your application and what the role of each of those components is.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Node &amp;amp; Pod&lt;/li&gt;
&lt;li&gt;Configuring Access with Service &amp;amp; Ingress&lt;/li&gt;
&lt;li&gt;External Configuration with ConfigMap &amp;amp; Secret&lt;/li&gt;
&lt;li&gt;Persisting Data with Volume&lt;/li&gt;
&lt;li&gt;Replication with Deployment &amp;amp; StatefulSet&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#part-03-kubernetes-configuration"&gt;
  &lt;/a&gt;
  💎  Part 03: Kubernetes Configuration
&lt;/h4&gt;

&lt;p&gt;In this part you'll learn the syntax and contents of K8s configuration file , which is used to create and configure components in a Kubernetes cluster.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#part-04-setup-kubernetes-cluster-locally-minikube-and-kubectl"&gt;
  &lt;/a&gt;
  💎  Part 04: Setup Kubernetes cluster locally (Minikube and kubectl)
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;What is Minikube&lt;/li&gt;
&lt;li&gt;What is Kubectl&lt;/li&gt;
&lt;li&gt;Install Minikube and Kubectl&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#part-05-complete-demo-project-deploy-webapp-with-mongodb"&gt;
  &lt;/a&gt;
  💎  Part 05: Complete Demo Project: Deploy WebApp with MongoDB
&lt;/h4&gt;

&lt;p&gt;I will show a hands-on demo project, where you will learn how to deploy a web application with its database into a local Kubernetes cluster. It's a simple but realistic application setup, which can also serve as a blueprint configuration for most common application setups.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Demo Project Overview&lt;/li&gt;
&lt;li&gt;Create MongoDB ConfigMap&lt;/li&gt;
&lt;li&gt;Create MongoDB Secret&lt;/li&gt;
&lt;li&gt;Create MongoDB Deployment and Service&lt;/li&gt;
&lt;li&gt;Create WebApp Deployment and Service&lt;/li&gt;
&lt;li&gt;Pass Secret Data to MongoDB Deployment&lt;/li&gt;
&lt;li&gt;Pass Config Data to WebApp Deployment&lt;/li&gt;
&lt;li&gt;Configure External Access&lt;/li&gt;
&lt;li&gt;Deploy all K8s resources into Minikube cluster&lt;/li&gt;
&lt;li&gt;Interacting with Kubernetes Cluster&lt;/li&gt;
&lt;li&gt;Access Web Application in Browser&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;▬▬▬▬▬▬   Course Pre-Requisites ▬▬▬▬▬▬ &lt;br&gt;
Docker - learn here:    ►  &lt;a href="https://youtu.be/3c-iBn73dDE"&gt;https://youtu.be/3c-iBn73dDE&lt;/a&gt;&lt;br&gt;
YAML -   learn here:    ►  &lt;a href="https://youtu.be/1uFVr15xDGg"&gt;https://youtu.be/1uFVr15xDGg&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;Like, share and follow me&lt;/strong&gt; 😍 for more content:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.facebook.com/groups/techworldwithnana"&gt;Private FB group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="//linkedin.com/in/nana-janashia"&gt;LinkedIn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/Njuchi_"&gt;Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCdngmbVKX1Tgre699-XLlUA?sub_confirmation=1"&gt;YouTube&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.instagram.com/techworld_with_nana/"&gt;Instagram&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>kubernetes</category>
      <category>devops</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>How to build 7,000+ REST APIs within 2 mins (Node.js + MySQL) !!</title>
      <author>o1lab</author>
      <pubDate>Thu, 30 Sep 2021 14:01:46 +0000</pubDate>
      <link>https://dev.to/o1lab/how-to-build-7-000-rest-apis-within-2-mins-node-js-mysql-470b</link>
      <guid>https://dev.to/o1lab/how-to-build-7-000-rest-apis-within-2-mins-node-js-mysql-470b</guid>
      <description>&lt;p&gt;NocoDB is an open source Airtable alternative that instantly also provides you REST APIs on any MySQL database!&lt;/p&gt;

&lt;p&gt;Without further ado-lets see quickly how to create APIs.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Pre-requisites
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Node.js or Docker&lt;/li&gt;
&lt;li&gt;An existing MySQL database

&lt;ul&gt;
&lt;li&gt;I am using a large MySQL database with 400+ tables within it! Creating APIs for each one of the table and relation would be more than 7000+ APIs.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting started
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#using-npx"&gt;
  &lt;/a&gt;
  Using npx
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npx create-nocodb-app
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#using-docker"&gt;
  &lt;/a&gt;
  Using Docker
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;docker run -d --name nocodb -p 8080:8080 nocodb/nocodb
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#now-lets-see-a-quick-demo"&gt;
  &lt;/a&gt;
  Now, let's see a quick demo
&lt;/h2&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/wSsyMmNjlHc"&gt;
&lt;/iframe&gt;
&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#faqs"&gt;
  &lt;/a&gt;
  FAQs
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Is authentication built in ? Yes&lt;/li&gt;
&lt;li&gt;Is ACL built in ? Yes&lt;/li&gt;
&lt;li&gt;Is collaboration built in ? Yes&lt;/li&gt;
&lt;li&gt;Are webhooks built in ? Yes&lt;/li&gt;
&lt;li&gt;Is there an audit log ? Yes&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#does-nocodb-support-other-databases-"&gt;
  &lt;/a&gt;
  Does NocoDB support other databases ?
&lt;/h2&gt;

&lt;p&gt;Yes - we do! &lt;/p&gt;

&lt;p&gt;NocoDB does support all of the below databases : &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Postgres&lt;/li&gt;
&lt;li&gt;SQL-server&lt;/li&gt;
&lt;li&gt;SQLite&lt;/li&gt;
&lt;li&gt;MySQL &amp;amp; MariaDB.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#where-can-i-find-more-details-about-nocodb-"&gt;
  &lt;/a&gt;
  Where can I find more details about NocoDB ?
&lt;/h2&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/nocodb"&gt;
        nocodb
      &lt;/a&gt; / &lt;a href="https://github.com/nocodb/nocodb"&gt;
        nocodb
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      🔥 🔥  The Open Source Airtable alternative  - Powered by Vue.js 🚀 🚀  
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
    &lt;b&gt;
        &lt;a href="https://www.nocodb.com" rel="nofollow"&gt;NocoDB&lt;/a&gt;&lt;br&gt;
    &lt;/b&gt;
    ✨ The Open Source Airtable Alternative ✨ &lt;br&gt;
&lt;/h1&gt;
&lt;p&gt;
Turns any MySQL, PostgreSQL, SQL Server, SQLite &amp;amp; MariaDB into a smart-spreadsheet
&lt;/p&gt;
&lt;div&gt;
&lt;p&gt;&lt;a href="https://travis-ci.com/github/NocoDB/NocoDB" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4e084bac046962268fcf7a8aaf3d4ac422d3327564f9685c9d1b57aa56b142e9/68747470733a2f2f7472617669732d63692e6f72672f6477796c2f657374612e7376673f6272616e63683d6d6173746572" alt="Build Status"&gt;&lt;/a&gt;
&lt;a href="http://nodejs.org/download/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/78a6449b07220242899619ce10cd5c39cc1e74992b768d308bd98f2a7e9995ae/68747470733a2f2f62616467656e2e6e65742f6e706d2f6e6f64652f6e657874" alt="Node version"&gt;&lt;/a&gt;
&lt;a href="https://twitter.com/NocoDB" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ec77e5fb18e5c0eef7b879f7b1473bc68ce6a354bdfdb9510c3bf70ad168eded/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f75726c2f68747470732f747769747465722e636f6d2f4e6f636f44422e7376673f7374796c653d736f6369616c266c6162656c3d466f6c6c6f772532302534304e6f636f4442" alt="Twitter"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;
    &lt;a href="http://www.nocodb.com" rel="nofollow"&gt;&lt;b&gt;Website&lt;/b&gt;&lt;/a&gt; •
    &lt;a href="https://discord.gg/5RgZmkW" rel="nofollow"&gt;&lt;b&gt;Discord&lt;/b&gt;&lt;/a&gt; •
    &lt;a href="https://twitter.com/nocodb" rel="nofollow"&gt;&lt;b&gt;Twitter&lt;/b&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/5435402/133762127-e94da292-a1c3-4458-b09a-02cd5b57be53.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PB_59gfR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/5435402/133762127-e94da292-a1c3-4458-b09a-02cd5b57be53.png" alt="OpenSourceAirtableAlternative"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;div&gt;
&lt;p&gt;&lt;a href="https://github.com/nocodb/nocodbmarkdown/readme/chinese.md"&gt;&lt;img height="50" src="https://res.cloudinary.com/practicaldev/image/fetch/s--90Rwt9R8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/61551451/135263434-75fe793d-42af-49e4-b964-d70920e41655.png"&gt;&lt;/a&gt;
&lt;a href="https://github.com/nocodb/nocodbmarkdown/readme/french.md"&gt;&lt;img height="50" src="https://res.cloudinary.com/practicaldev/image/fetch/s--W6hz37RN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/61551451/135263474-787d71e7-3a87-42a8-92a8-be1d1f55413d.png"&gt;&lt;/a&gt;
&lt;a href="https://github.com/nocodb/nocodbmarkdown/readme/german.md"&gt;&lt;img height="50" src="https://res.cloudinary.com/practicaldev/image/fetch/s--C0_U00RX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/61551451/135263531-fae58600-6616-4b43-95a0-5891019dd35d.png"&gt;&lt;/a&gt;
&lt;a href="https://github.com/nocodb/nocodbmarkdown/readme/spanish.md"&gt;&lt;img height="50" src="https://res.cloudinary.com/practicaldev/image/fetch/s--_-j2cYrJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/61551451/135263589-3dbeda9a-0d2e-4bbd-b1fc-691404bb74fb.png"&gt;&lt;/a&gt;
&lt;a href="https://github.com/nocodb/nocodbmarkdown/readme/portuguese.md"&gt;&lt;img height="50" src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ku2kMFme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/61551451/135263669-f567196a-d4e8-4143-a80a-93d3be32ba90.png"&gt;&lt;/a&gt;
&lt;a href="https://github.com/nocodb/nocodbmarkdown/readme/italian.md"&gt;&lt;img height="50" src="https://res.cloudinary.com/practicaldev/image/fetch/s--I1U27cQL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/61551451/135263707-ba4e04a4-268a-4626-91b8-048e572fd9f6.png"&gt;&lt;/a&gt;
&lt;a href="https://github.com/nocodb/nocodbmarkdown/readme/japanese.md"&gt;&lt;img height="50" src="https://res.cloudinary.com/practicaldev/image/fetch/s--m8lIZ7pi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/61551451/135263770-38e3e79d-11d4-472e-ac27-ae0f17cf65c4.png"&gt;&lt;/a&gt;
&lt;a href="https://github.com/nocodb/nocodbmarkdown/readme/korean.md"&gt;&lt;img height="50" src="https://res.cloudinary.com/practicaldev/image/fetch/s--cGasqxQI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/61551451/135263822-28fce9de-915a-44dc-962d-7a61d340e91d.png"&gt;&lt;/a&gt;
&lt;a href="https://github.com/nocodb/nocodbmarkdown/readme/russian.md"&gt;&lt;img height="50" src="https://res.cloudinary.com/practicaldev/image/fetch/s--0ScJCMmi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/61551451/135263888-151d4ad1-7084-4943-97c9-56f28cd40b80.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/62d299d2b7261e4c5f757e5ac9bc313ef9203b9b819dedf340db82138f8da065/68747470733a2f2f7374617469632e73636172662e73682f612e706e673f782d707869643d63313261373763632d383535652d343630322d386130662d363134623264306461353661"&gt;&lt;img src="https://camo.githubusercontent.com/62d299d2b7261e4c5f757e5ac9bc313ef9203b9b819dedf340db82138f8da065/68747470733a2f2f7374617469632e73636172662e73682f612e706e673f782d707869643d63313261373763632d383535652d343630322d386130662d363134623264306461353661"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.producthunt.com/posts/nocodb?utm_source=badge-featured&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-nocodb" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9cff91c3d5ada7906ec16f4adbde10de461bf84718d3cfbb0d37c8ca1ffc2a2d/68747470733a2f2f6170692e70726f6475637468756e742e636f6d2f776964676574732f656d6265642d696d6167652f76312f66656174757265642e7376673f706f73745f69643d323937353336267468656d653d6461726b" alt="NocoDB - The Open Source Airtable alternative | Product Hunt" width="250" height="54"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
Quick try&lt;/h1&gt;

&lt;h3&gt;
1-Click Deploy&lt;/h3&gt;

&lt;h4&gt;
Heroku&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://heroku.com/deploy?template=https://github.com/npgia/nocodb-seed-heroku" rel="nofollow"&gt;&lt;br&gt;
    &lt;img src="https://camo.githubusercontent.com/6979881d5a96b7b18a057083bb8aeb87ba35fc279452e29034c1e1c49ade0636/68747470733a2f2f7777772e6865726f6b7563646e2e636f6d2f6465706c6f792f627574746f6e2e737667" width="300px" alt="Deploy NocoDB to Heroku with 1-Click"&gt;&lt;br&gt;
&lt;/a&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;
Using Docker&lt;/h3&gt;

&lt;div class="highlight highlight-source-shell position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;docker run -d --name nocodb -p 8080:8080 nocodb/nocodb:latest&lt;/pre&gt;

&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;To persist data you can mount volume at &lt;code&gt;/usr/app/data/&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;
Using Npm&lt;/h3&gt;
&lt;div class="snippet-clipboard-content position-relative overflow-auto"&gt;&lt;pre&gt;&lt;code&gt;npx create-nocodb-app
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;
Using Git&lt;/h3&gt;
&lt;div class="snippet-clipboard-content position-relative overflow-auto"&gt;&lt;pre&gt;&lt;code&gt;git clone https://github.com/nocodb/nocodb-seed
cd nocodb-seed
npm install
npm start
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;
GUI&lt;/h3&gt;
&lt;p&gt;Access Dashboard using : &lt;a href="http://localhost:8080/dashboard" rel="nofollow"&gt;http://localhost:8080/dashboard&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
Join Our Community&lt;/h1&gt;
&lt;a href="https://discord.gg/5RgZmkW" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/8a7e4d7b3342da59bf8e778636f0860c8045593cc8003a834f88b0315782760e/68747470733a2f2f696e7669646765742e737769746368626c6164652e78797a2f3552675a6d6b57" alt="Join NocoDB : Free &amp;amp; Open Source Airtable Alternative"&gt;
&lt;/a&gt;
&lt;br&gt;
&lt;h1&gt;
Screenshots&lt;/h1&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/5435402/133759229-4275b934-873b-4a9b-9f23-96470fec9775.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rdup1vIP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/5435402/133759229-4275b934-873b-4a9b-9f23-96470fec9775.png" alt="2"&gt;&lt;/a&gt;
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/5435402/133759218-f8b0bffc-707f-451c-82f2-b5ba2573d6a6.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6LATNShL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/5435402/133759218-f8b0bffc-707f-451c-82f2-b5ba2573d6a6.png" alt="1"&gt;&lt;/a&gt;
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/5435402/133759245-a536165b-55f1-46a8-a74e-1964e7e481c6.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Wv2SIY6A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/5435402/133759245-a536165b-55f1-46a8-a74e-1964e7e481c6.png" alt="7"&gt;&lt;/a&gt;
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/5435402/133759240-dd3f2509-aab7-4bd1-9a58-4c2dff08f2f2.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Zao1XzmB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/5435402/133759240-dd3f2509-aab7-4bd1-9a58-4c2dff08f2f2.png" alt="5"&gt;&lt;/a&gt;
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/5435402/133759242-2311a127-17c8-406c-b865-1a2e9c8ee398.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6vTK1eTn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/5435402/133759242-2311a127-17c8-406c-b865-1a2e9c8ee398.png" alt="6"&gt;&lt;/a&gt;
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/5435402/133759234-9b539029-be36-4a35-b55a-bee3ebd0e010.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AcJfIMgr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/5435402/133759234-9b539029-be36-4a35-b55a-bee3ebd0e010.png" alt="3"&gt;&lt;/a&gt;
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/5435402/133759236-dc182129-3768-4e23-874e-98f5f32e962c.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fdapWRRj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/5435402/133759236-dc182129-3768-4e23-874e-98f5f32e962c.png" alt="4"&gt;&lt;/a&gt;
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/5435402/133759253-bb9bc729-ee28-4f86-ab95-7d112c0815f2.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ve3FcC51--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/5435402/133759253-bb9bc729-ee28-4f86-ab95-7d112c0815f2.png" alt="11"&gt;&lt;/a&gt;
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/5435402/133759250-ebd75ecf-31db-4a17-b2d7-2c43af78a54e.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aS0r1Yof--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/5435402/133759250-ebd75ecf-31db-4a17-b2d7-2c43af78a54e.png" alt="10"&gt;&lt;/a&gt;
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/5435402/133759248-3a7141e0-4b7d-4079-a5f9-cf8611d00bc5.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qWJU8PJV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/5435402/133759248-3a7141e0-4b7d-4079-a5f9-cf8611d00bc5.png" alt="8"&gt;&lt;/a&gt;
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/5435402/133759249-8c1a85c2-a55c-48f6-bd58-aa6b4195cce7.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fXwYsZln--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/5435402/133759249-8c1a85c2-a55c-48f6-bd58-aa6b4195cce7.png" alt="9"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
Features&lt;/h1&gt;
&lt;h3&gt;
Rich Spreadsheet Interface&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
⚡  Search, sort, filter, hide columns with uber ease&lt;/li&gt;
&lt;li&gt;
⚡  Create Views : Grid, Gallery, Kanban, Gantt, Form&lt;/li&gt;
&lt;li&gt;
⚡  Share Views : public &amp;amp; password protected&lt;/li&gt;
&lt;li&gt;
⚡  Personal &amp;amp; locked Views&lt;/li&gt;
&lt;li&gt;
⚡  Upload images to cells (Works with S3, Minio, GCP, Azure, DigitalOcean, Linode, OVH, BackBlaze)&lt;/li&gt;
&lt;li&gt;
⚡  Roles : Owner, Creator, Editor, Viewer, Commenter, Custom Roles.&lt;/li&gt;
&lt;li&gt;
⚡  Access Control : Fine-grained access control even at database, table &amp;amp; column level.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
App&lt;/h3&gt;…&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/nocodb/nocodb"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#please-join-our-community"&gt;
  &lt;/a&gt;
  Please join our community
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;📣   Github : &lt;a href="https://github.com/nocodb/nocodb"&gt;https://github.com/nocodb/nocodb&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;📣   Docs : &lt;a href="https://docs.nocodb.com"&gt;https://docs.nocodb.com&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;📣   Discord : &lt;a href="https://discord.gg/5RgZmkW"&gt;https://discord.gg/5RgZmkW&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;📣   Twitter : &lt;a href="https://twitter.com/nocodb"&gt;https://twitter.com/nocodb&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#more-"&gt;
  &lt;/a&gt;
  More :
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/o1lab/how-my-open-source-project-got-angel-investment-from-its-user-12dp"&gt;As an open source project how NocoDB got angel funded&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>node</category>
      <category>react</category>
      <category>database</category>
      <category>vue</category>
    </item>
    <item>
      <title>Flask Social Login with Github - Free sample included</title>
      <author>Sm0ke</author>
      <pubDate>Thu, 30 Sep 2021 13:54:53 +0000</pubDate>
      <link>https://dev.to/sm0ke/flask-social-login-with-github-free-sample-included-649</link>
      <guid>https://dev.to/sm0ke/flask-social-login-with-github-free-sample-included-649</guid>
      <description>&lt;p&gt;Hello Coders!&lt;/p&gt;

&lt;p&gt;This article presents an open-source sample that implements Github &lt;strong&gt;&lt;a href="https://blog.appseed.us/flask-social-login-with-github/"&gt;Social Login on top of Flask&lt;/a&gt;&lt;/strong&gt;, a popular web framework written in Python. The project source code can be downloaded and used from Github (MIT Licence) and also configured to work with other well-known OAuth2 providers like Google, Twitter, or Facebook.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Thanks for reading!&lt;/strong&gt; - Content provided by &lt;strong&gt;&lt;a href="https://appseed.us/"&gt;App Generator&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/app-generator/flask-social-login"&gt;Flask Social Login&lt;/a&gt;&lt;/strong&gt; - Source Code (Github)&lt;/p&gt;
&lt;/blockquote&gt;




&lt;p&gt;The code uses &lt;code&gt;Flask-Dance&lt;/code&gt; to bridge the authentication flow to the Github OAuth interface. In order to make the app more appealing a few simple pages styled with Bootstrap 5 are also provided.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4nfYBbwy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/68h4g0wp0i60qpfvz67u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4nfYBbwy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/68h4g0wp0i60qpfvz67u.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;The authentication flow provided by &lt;code&gt;Flask-Dance&lt;/code&gt; library requires only a few lines of code to implement a Social Authentication via Github (and not only).&lt;/p&gt;

&lt;p&gt;The first thing we need to do is to access Github and create a new OAuth application that will provide &lt;code&gt;OAUTH_CLIENT_ID&lt;/code&gt; and &lt;code&gt;OAUTH_SECRET_KEY&lt;/code&gt; required by &lt;code&gt;Flask-dance&lt;/code&gt; library.&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Create OAuth APP on Github&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In order to do this, we need to access &lt;code&gt;Github&lt;/code&gt; -&amp;gt; &lt;code&gt;Settings&lt;/code&gt; (top right corner) -&amp;gt; &lt;code&gt;Developer Settings&lt;/code&gt; from the left menu.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gqXA0M93--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l3qzuv1t6vrz541127em.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gqXA0M93--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l3qzuv1t6vrz541127em.png" alt="Flask Social Login - Create OAuth App on Github"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Access the &lt;code&gt;OAuth Apps&lt;/code&gt; item from the left menu and click to create a new &lt;code&gt;APP&lt;/code&gt;:&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7MIvbLnI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nv4qxgyup4t23hsj0dx2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7MIvbLnI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nv4qxgyup4t23hsj0dx2.png" alt="Flask Social Login - OAuth APPS Menu"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Once the new page is loaded we can create a sample APP. The most important settings are listed bellow:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Client ID&lt;/strong&gt; - (readonly) generated by Github - to be saved in &lt;code&gt;.env&lt;/code&gt; file&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Client Secrets&lt;/strong&gt; - we need to generate one and use it in &lt;code&gt;.env&lt;/code&gt; file&lt;/li&gt;
&lt;li&gt;Application Name - important for public services&lt;/li&gt;
&lt;li&gt;Homepage URL: &lt;code&gt;https://localhost:5000&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Authorization callback URL: &lt;code&gt;https://localhost:5000/login/github/authorized&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Please note that all URLs use &lt;code&gt;HTTPS&lt;/code&gt; schema, something that we need to take care in our project. Once the project is saved, we can go back to our project, save the information provided by Github and start it.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#flask-social-login-compile-project"&gt;
  &lt;/a&gt;
  Flask Social Login - Compile project
&lt;/h2&gt;

&lt;p&gt;As mentioned before, source code is published on Github and we can start and test this simple project with a few lines type in the terminal. Please note that the project requires a &lt;a href="https://docs.appseed.us/content/tutorials/minimal-programming-kit"&gt;minimal programming kit&lt;/a&gt; already installed in the workstation:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Python3&lt;/strong&gt; - a modern script language used for many types of projects
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;GIT&lt;/strong&gt; - a command-line tool used to download sources from Github&lt;/li&gt;
&lt;li&gt;A &lt;strong&gt;modern code editor&lt;/strong&gt; - &lt;code&gt;VSCode&lt;/code&gt; or &lt;code&gt;Atom&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;Once all tools are installed and accessible in the terminal we can proceed further and compile the project by following the instruction provided by the &lt;code&gt;README&lt;/code&gt; file.&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step #1&lt;/strong&gt; - Clone sources (public repository)&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="c"&gt;# Clone the sources&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;git clone https://github.com/app-generator/flask-social-login.git
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;flask-social-login
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step #2&lt;/strong&gt; - Create a virtual environment&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="c"&gt;# Virtualenv modules installation (Unix based systems)&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;virtualenv &lt;span class="nb"&gt;env&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;source env&lt;/span&gt;/bin/activate
&lt;span class="err"&gt;$&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="c"&gt;# Virtualenv modules installation (Windows based systems)&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="c"&gt;# virtualenv env&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="c"&gt;# .\env\Scripts\activate&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step #3&lt;/strong&gt; - Install dependencies&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="c"&gt;# Install requirements&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;pip3 &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-r&lt;/span&gt; requirements.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step #4&lt;/strong&gt; - Set Up Environment&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="c"&gt;# Set the FLASK_APP environment variable&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;Unix/Mac&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;FLASK_APP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;run.py
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;Windows&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nb"&gt;set &lt;/span&gt;&lt;span class="nv"&gt;FLASK_APP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;run.py
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;Powershell&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;$env&lt;/span&gt;:FLASK_APP &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;".&lt;/span&gt;&lt;span class="se"&gt;\r&lt;/span&gt;&lt;span class="s2"&gt;un.py"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step #5&lt;/strong&gt; - &lt;a href="https://docs.github.com/en/developers/apps/building-oauth-apps/creating-an-oauth-app"&gt;Creating an OAuth App&lt;/a&gt; (on Github)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;SignIN to Github&lt;/li&gt;
&lt;li&gt;Access &lt;code&gt;Settings&lt;/code&gt; -&amp;gt; &lt;code&gt;Developer Settings&lt;/code&gt; -&amp;gt; &lt;code&gt;OAuth Apps&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Edit your OAuth App

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;App Name&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;App Description&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;(mandatory) &lt;code&gt;HomePage&lt;/code&gt;: &lt;code&gt;https://localhost:5000&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;(mandatory) &lt;code&gt;Authorization callback URL&lt;/code&gt;: &lt;code&gt;https://localhost:5000/login/github/authorized&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Generate a new &lt;code&gt;secret key&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step #6&lt;/strong&gt; - Rename &lt;code&gt;.env.sample&lt;/code&gt; to &lt;code&gt;.env&lt;/code&gt; and edit the file&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;GITHUB_OAUTH_CLIENT_ID&lt;/code&gt; - value provided by Github (step #5)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;GITHUB_OAUTH_CLIENT_SECRET&lt;/code&gt; - value provided by Github (step #5)&lt;/li&gt;
&lt;/ul&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step #7&lt;/strong&gt; - (optional) Enable DEBUG Environment (local development)&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="c"&gt;# Set up the DEBUG environment&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;Unix/Mac&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;FLASK_ENV&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;development
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;Windows&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nb"&gt;set &lt;/span&gt;&lt;span class="nv"&gt;FLASK_ENV&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;development
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;Powershell&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;$env&lt;/span&gt;:FLASK_ENV &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"development"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step #8&lt;/strong&gt; - Start the project (HTTPS)&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;flask run &lt;span class="nt"&gt;--cert&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;adhoc
&lt;span class="err"&gt;$&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="c"&gt;# Access the app in browser: HTTPS://127.0.0.1:5000/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;At this point, the app should be up &amp;amp; running in the browser ready to successfully authenticate users via Github. &lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lyMdol1Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4ydjj1bt8h7m1p3pxfqs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lyMdol1Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4ydjj1bt8h7m1p3pxfqs.png" alt="Flask Social Login - HOMEpage"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Thanks for reading!&lt;/strong&gt; For more resources, please access:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://appseed.us/"&gt;AppSeed&lt;/a&gt; - for support and more &lt;a href="https://appseed.us/admin-dashboards/flask"&gt;Flask&lt;/a&gt; Starters&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://blog.appseed.us/flask-user-authentication-free-sample/"&gt;Flask User Authentication&lt;/a&gt; - blog article (provides free sample)&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>webdev</category>
      <category>flask</category>
      <category>oauth2</category>
      <category>appseed</category>
    </item>
    <item>
      <title>The Great Redux Toolkit Debate</title>
      <author>Sam Magura</author>
      <pubDate>Thu, 30 Sep 2021 13:41:10 +0000</pubDate>
      <link>https://dev.to/srmagura/the-great-redux-toolkit-debate-5045</link>
      <guid>https://dev.to/srmagura/the-great-redux-toolkit-debate-5045</guid>
      <description>&lt;p&gt;An &lt;a href="https://dev.to/srmagura/comment/1idl8"&gt;offhand comment&lt;/a&gt; I wrote one day while eating lunch sparked an unexpected and interesting debate with &lt;a href="https://twitter.com/acemarke"&gt;Mark Erikson&lt;/a&gt;, one of the maintainers of Redux.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://redux.js.org/"&gt;Redux&lt;/a&gt; has long been the go-to library for managing global state in React applications. &lt;a href="https://redux-toolkit.js.org/"&gt;Redux Toolkit&lt;/a&gt;, which Mark helped create, is a relatively new library that aims to be the "official, opinionated, batteries-included toolset for efficient Redux development." This post will go into my thoughts on the benefits and potential drawbacks of Redux Toolkit.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-redux-is-awesome"&gt;
  &lt;/a&gt;
  Why Redux is Awesome
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;It's unopinionated.&lt;/strong&gt; Redux requires you to put your global state in a store, and to manage that state via reducers and actions. An action is a simple JavaScript object with a &lt;code&gt;type&lt;/code&gt; property, and a reducer is a pure function that transforms the old state into the new state based on an action. Beyond this, everything else is up to you.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;It has a minimal API surface.&lt;/strong&gt; Redux only has &lt;a href="https://redux.js.org/api/api-reference"&gt;5 top-level exports&lt;/a&gt;, and only one of those, &lt;code&gt;createStore&lt;/code&gt;, is essential.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;It's extremely versatile.&lt;/strong&gt; Do you want your store to contain only the ID of the current user? Or do you want your store to track the state of every entity, page, widget, and input in your massive enterprise app? Whatever your use case, Redux and its large ecosystem have you covered.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#why-redux-is-hard"&gt;
  &lt;/a&gt;
  Why Redux is Hard
&lt;/h2&gt;

&lt;p&gt;Redux is hard for the same reasons it is awesome.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;It's unopinionated.&lt;/strong&gt; Redux doesn't tell you how to structure your application's state, reducers, or actions, so you have to make your own decisions.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;It has a minimal API surface.&lt;/strong&gt; You'll quickly realize you need more than just &lt;code&gt;createStore&lt;/code&gt; to create a useful application with Redux. A prime example of this is the need to fetch data from an API in response to an action.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;It's extremely versatile.&lt;/strong&gt; There are so many different frontend architectures that are possible with Redux that it's easy to get lost. It took me a long time to figure out how Redux fit into the React applications I was building.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#redux-toolkit-to-the-rescue"&gt;
  &lt;/a&gt;
  Redux Toolkit to the Rescue
&lt;/h2&gt;

&lt;p&gt;Redux Toolkit aims to eliminate first two of these pain points by providing an opinionated, convenient, and beginner-friendly approach to Redux development. Its features include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;createAction&lt;/code&gt; — lets you define action creators, similar to &lt;a href="https://github.com/piotrwitek/typesafe-actions"&gt;typesafe-actions&lt;/a&gt;. I'm a TypeScript die-hard so type safety is non-negotiable. 😆&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;createReducer&lt;/code&gt; — allows you to write a reducer without a &lt;code&gt;switch&lt;/code&gt; statement. Uses &lt;a href="https://immerjs.github.io/immer/"&gt;Immer&lt;/a&gt; under the hood. Immer is amazing and you should use it in your reducers even if you don't plan to use Redux Toolkit.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;createSlice&lt;/code&gt; — a powerful helper that allows you to define both the reducer and actions for a slice of your state in one fell swoop.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;createAsyncThunk&lt;/code&gt; — allows you to start an API call in response to an action and dispatch another action when the call completes.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;createEntityAdapter&lt;/code&gt; — returns a set of prebuilt reducers and selector functions for performing CRUD on an entity.&lt;/li&gt;
&lt;li&gt;RTK Query — a &lt;strong&gt;library&lt;/strong&gt; for fetching and caching server state in your Redux store. Can be compared to &lt;a href="https://react-query.tanstack.com/"&gt;React Query&lt;/a&gt; which aims to solve the same problems, but in a different way.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#my-review-of-the-redux-toolkit-rtk-api"&gt;
  &lt;/a&gt;
  My Review of the Redux Toolkit (RTK) API
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#overall-recommendation"&gt;
  &lt;/a&gt;
  Overall Recommendation
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;If you're new to Redux, use RTK, but don't feel like you need to utilize all of its features. You can do a lot with just &lt;code&gt;createAction&lt;/code&gt; and &lt;code&gt;createReducer&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;If you're already using Redux and Immer, there's no reason you have to switch to Redux Toolkit. Only use it if you agree with its opinionated approach.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#-raw-createaction-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;createAction&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;Not a new idea but a useful one nonetheless. Currently, typesafe-actions seems to be more powerful than RTK in this area because the typesafe-actions &lt;code&gt;getType&lt;/code&gt; function correctly types &lt;code&gt;action.payload&lt;/code&gt; in &lt;code&gt;switch&lt;/code&gt; reducers. The &lt;a href="https://github.com/piotrwitek/typesafe-actions#actiontype"&gt;&lt;code&gt;ActionType&lt;/code&gt;&lt;/a&gt; type helper is really nice too. I'd like to see RTK reach parity with typesafe-actions in this domain.&lt;/p&gt;

&lt;p&gt;If you can figure out how to write a type safe &lt;code&gt;switch&lt;/code&gt; reducer with RTK, let me know!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-createreducer-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;createReducer&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;As I said previously, Immer is really great. But Immer already works perfectly with &lt;code&gt;switch&lt;/code&gt; reducers so  I don't see a huge benefit to &lt;code&gt;createReducer&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-createslice-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;createSlice&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;I have a few concerns here. I like how in the traditional approach to Redux, you define your actions separately from your reducers. This separation of concerns allows you to lay out the operations your user can perform without getting bogged down in how those operations are implemented. &lt;code&gt;createSlice&lt;/code&gt; eschews this separation and I'm not sure that's a step in the right direction. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-createasyncthunk-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;createAsyncThunk&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;By including &lt;code&gt;createAsyncThunk&lt;/code&gt; in Redux Toolkit, the Redux team has made thunks the officially-recommended side effect model for Redux. I like how Redux itself is unopinionated regarding side effects, so I have mixed feelings about the built-in support for thunks.&lt;/p&gt;

&lt;p&gt;Of course, you can still use other side effect models like sagas and observables alongside Redux Toolkit. I'm a big fan of &lt;a href="https://redux-saga.js.org/"&gt;Redux Saga&lt;/a&gt;, which makes it straightforward to integrate Redux with your backend API while also enabling you to write incredibly powerful asynchronous flows. Sagas are written using generator functions and &lt;code&gt;yield&lt;/code&gt; which does take some getting used to. &lt;/p&gt;

&lt;p&gt;Mark tells me that sagas can be overkill for common use cases and thunks fit better here. I can see this point of view, but I still find sagas to be more intuitive and will be sticking with them.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-createentityadapter-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;createEntityAdapter&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;I'm concerned that &lt;code&gt;createEntityAdapter&lt;/code&gt; could lead to designs that are overly CRUD-centric, favoring basic &lt;code&gt;add&lt;/code&gt;, &lt;code&gt;update&lt;/code&gt;, and &lt;code&gt;remove&lt;/code&gt; actions over more meaningful, descriptive actions that are tailored to each entity. I'll admit that I don't fully understand the use case here. If &lt;code&gt;createEntityAdapter&lt;/code&gt; saves you from writing tons of duplicate code, by all means use it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#rtk-query"&gt;
  &lt;/a&gt;
  RTK Query
&lt;/h3&gt;

&lt;p&gt;RTK Query really is a separate library that happens to live in the same package as Redux Toolkit. I think it would be better as a separate package, but that's just me. Fortunately, RTK Query is exported from a separate entry point, so it will never be included in your bundle if you don't use it.&lt;/p&gt;

&lt;p&gt;RTK Query seems complex and unintuitive to me, but my opinion might change if I tried it out. If you're looking for an alternative, you might like &lt;a href="https://react-query.tanstack.com/"&gt;React Query&lt;/a&gt;. I also evaluated the similar &lt;a href="https://swr.vercel.app/"&gt;SWR&lt;/a&gt; library but found it lacking some features that my team uses constantly. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#marks-response-to-my-claim-that-rtk-is-overly-opinionated"&gt;
  &lt;/a&gt;
  Mark's Response to my Claim that RTK is Overly Opinionated
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://dev.to/markerikson/comment/1ieni"&gt;Read the full comment here!&lt;/a&gt; In summary:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;As you can see, all of these APIs have a common theme:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  These are things people were always doing with Redux, and have been taught in our docs&lt;/li&gt;
&lt;li&gt;  Because Redux didn't include anything built-in for this purpose, people were having to write this code by hand, or create their own abstractions&lt;/li&gt;
&lt;li&gt;  So we created standardized implementations of all these concepts that people could  &lt;em&gt;choose&lt;/em&gt;  to use  &lt;em&gt;if they want to&lt;/em&gt;, so that people don't  &lt;em&gt;have&lt;/em&gt;  to write any of this code by hand in the future.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#what-i-use-in-my-applications"&gt;
  &lt;/a&gt;
  What I Use in My Applications
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#my-last-4-react-web-apps"&gt;
  &lt;/a&gt;
  My Last 4 React Web Apps
&lt;/h3&gt;

&lt;p&gt;These are all medium-size single-page apps written entirely in React.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Redux is used for about 10% of the overall application state, with local component state making up the other 90%. We deliberately only use Redux for state that needs to stay in memory when navigating between screens, for example information about the current user.&lt;/li&gt;
&lt;li&gt;We constructed our actions and reducers with typesafe-actions, Immer, and &lt;code&gt;switch&lt;/code&gt; statements, whether using Redux or &lt;code&gt;useReducer&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;A simple custom-made &lt;code&gt;useQuery&lt;/code&gt; hook is used to fetch data from the backend. This data ends up in the local state of our &lt;code&gt;Page&lt;/code&gt; components.&lt;/li&gt;
&lt;li&gt;There's a dash of Redux Saga to support login and persisting changes to complex order drafts that the user creates.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#my-react-native-app"&gt;
  &lt;/a&gt;
  My React Native App
&lt;/h3&gt;

&lt;p&gt;This app has to work offline so it made sense to put the majority of the app's state in Redux.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Redux Saga is responsible for all the interaction with the backend API. This worked out quite well. There's a pretty complex saga for sending queued operations to the backend when a user comes back from being offline.&lt;/li&gt;
&lt;li&gt;The entire Redux store is persisted using &lt;a href="https://www.npmjs.com/package/redux-persist"&gt;redux-persist&lt;/a&gt;. This is still magic to me 😂.&lt;/li&gt;
&lt;li&gt;Local component state is used for forms.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#my-next-react-web-app"&gt;
  &lt;/a&gt;
  My Next React Web App
&lt;/h3&gt;

&lt;p&gt;New projects are always exciting because they give you the chance to rethink your architecture and tech stack. Going forward, we will:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Stick with typesafe-actions and &lt;code&gt;switch&lt;/code&gt; reducers. It was a close call between this and switching to Redux Toolkit's &lt;code&gt;createAction&lt;/code&gt; and &lt;code&gt;createReducer&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Replace our homegrown &lt;code&gt;useQuery&lt;/code&gt; with React Query. As a result, some state that we would have previously put in Redux will now be stored automatically in React Query's cache.&lt;/li&gt;
&lt;li&gt;Continue to use Redux Saga in a few places.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#further-reading"&gt;
  &lt;/a&gt;
  Further Reading
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.isquaredsoftware.com/2019/10/redux-starter-kit-1.0/"&gt;Mark Erikson: Redux Toolkit 1.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://redux-toolkit.js.org/"&gt;The Redux Toolkit documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#selfpromotion"&gt;
  &lt;/a&gt;
  Self-Promotion
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Check out my new library, &lt;a href="https://dev.to/srmagura/announcing-real-cancellable-promise-gkd"&gt;real-cancellable-promise&lt;/a&gt;!&lt;/li&gt;
&lt;li&gt;I'll be working on a new major version of &lt;a href="https://github.com/dvtng/react-loading-skeleton"&gt;react-loading-skeleton&lt;/a&gt;. &lt;a href="https://github.com/dvtng/react-loading-skeleton/issues/106"&gt;Check out the roadmap here!&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>redux</category>
      <category>react</category>
      <category>javascript</category>
      <category>typescript</category>
    </item>
    <item>
      <title>Ten Principles of Critique</title>
      <author>Jason C. McDonald</author>
      <pubDate>Thu, 30 Sep 2021 13:31:05 +0000</pubDate>
      <link>https://dev.to/codemouse92/ten-principles-of-critique-5f4p</link>
      <guid>https://dev.to/codemouse92/ten-principles-of-critique-5f4p</guid>
      <description>&lt;p&gt;Feedback. On the one hand, we live by it as programmers, designers, and software engineers. How can we improve if no one tells us? On the other hand, some feedback can leave us feeling devastated, often without a definite reason &lt;em&gt;why&lt;/em&gt; it has affected us.&lt;/p&gt;

&lt;p&gt;Critique is an especially tricky corner of communication, and it requires special care and attention to be effective.&lt;/p&gt;

&lt;p&gt;As an author, I've been participating in professional critique groups for over 20 years. As an internship supervisor, I spend a significant amount of time reviewing code, proposals, and other work, particularly that of junior developers. In turn, I have been on the receiving end of many critiques and code reviews throughout that time, both good and bad. These are ten principles of critique I have found effective in maximizing the benefits of constructive criticism without discouraging the person behind the work.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#why-bother"&gt;
  &lt;/a&gt;
  Why Bother?
&lt;/h1&gt;

&lt;p&gt;So why bother with all this? Can't people just learn to accept critique in any form? Not really. Even the thickest skinned person still has feelings. One may eventually build up an emotional callous — although that can lead to them being brusque and insensitive in turn — but in the meantime, time and energy is always spent processing the emotional quality of communication.&lt;/p&gt;

&lt;p&gt;There are two benefits to the constructive criticism techniques herein:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;It saves developer hours otherwise wasted on debating and reiterating already established or otherwise irrelevant points.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Because the emotional weight of the critique is decreased, the author can skip right to considering and responding to feedback, instead of trying to process and rationalize around their emotional response.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;So, to that aim, here are ten principles of an effective critique.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#1-recognize-good-faith-effort"&gt;
  &lt;/a&gt;
  1. RECOGNIZE GOOD FAITH EFFORT
&lt;/h1&gt;

&lt;p&gt;When someone takes the time to share their work, whether it be prose, code, a proposal, an idea, or whatever it may be, they are being vulnerable. Assume their work is their best effort to identify and solve a problem. Be careful of dismissing or devaluing their work in your mind because of real or perceived lack of experience. Great code can come even from junior developers, and great prose even from novice authors.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#2-actually-read"&gt;
  &lt;/a&gt;
  2. ACTUALLY READ
&lt;/h1&gt;

&lt;p&gt;When you're going to respond to, act on, or critique something, your first step is to read it thoroughly. It is very tempting to skim — we're all busy, after all! — but this ultimately wastes time when the author has to repeat what they already wrote. Furthermore, skimming is disrespectful to the author: they put real effort into the work, so you should expect to put in the time to read and understand. If you can’t spare the time, don’t comment.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#3-read-again"&gt;
  &lt;/a&gt;
  3. READ AGAIN
&lt;/h1&gt;

&lt;p&gt;Once you've read through the work, you'll probably have already formed an opinion. That's fine, but now you should read the work again. Check your own assumptions. See how many of your questions and concerns you can answer yourself.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#4-see-what-they-see"&gt;
  &lt;/a&gt;
  4. SEE WHAT THEY SEE
&lt;/h1&gt;

&lt;p&gt;Before critiquing, make an effort to see the problem and solution from the author's perspective. Ask clarifying questions. Be careful that these initial inquiries are not a form of criticism! Your first few questions should be dedicated to understanding the author's way of thinking. Bonus: these initial clarifying questions will often help the author self-identify flaws in their own work, which is always an ideal outcome.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#5-start-positive"&gt;
  &lt;/a&gt;
  5. START POSITIVE
&lt;/h1&gt;

&lt;p&gt;It's easy to launch into everything you disagree with about someone else's work. Resist this urge! When you're ready to give feedback, start by identifying something positive about the work you're commenting on. This is important because, as objective as we humans like to pretend we are, we are all still emotional creatures underneath. Starting with a genuine, positive comment will frame your upcoming constructive criticism as improving work, rather than invalidating it.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#6-ask-questions"&gt;
  &lt;/a&gt;
  6. ASK QUESTIONS
&lt;/h1&gt;

&lt;p&gt;Challenging assumptions and decisions is a normal part of constructive criticism, but these are often most effective in the form of questions the author can answer. For example, "Is there a reason you chose to use a singleton here instead of a class attribute?" is less threatening than "Singletons are terrible, use class attributes instead."&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#7-know-your-own-expectations"&gt;
  &lt;/a&gt;
  7. KNOW YOUR OWN EXPECTATIONS
&lt;/h1&gt;

&lt;p&gt;Clearly identify to yourself what it would take for you to change your mind about the work you're critiquing. This is especially important regarding proposals and ideas. Even if you feel certain, it's always possible for you to be wrong! When a debate becomes protracted, that's a particularly good time to enumerate to the author what it would take for you to change your position; you don't have to wait for them to ask.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#8-focus-on-the-work"&gt;
  &lt;/a&gt;
  8. FOCUS ON THE WORK
&lt;/h1&gt;

&lt;p&gt;This one feels obvious to everyone, but it is so easy to lose sight of during a critique. Keep a check on yourself to direct all criticism towards the work, and not towards the person. This can be more subtle than it first appears. Before you submit a critical comment, re-read it to consider how you'd feel if you received that comment, especially if you were in the author's position.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#9-end-positive"&gt;
  &lt;/a&gt;
  9. END POSITIVE
&lt;/h1&gt;

&lt;p&gt;If your critique goes beyond a handful of minor "nitpicks", be sure you find something else positive about the work to end your critique with. This is known as a "feedback sandwich": when the first and last comment are both positive, it bolsters the constructive nature of your criticism, and helps prevent discouragement. (If your feedback is somewhat non-linear, e.g. a code review, you can just tuck an additional positive comment amidst the others.)&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#10-provide-reinforcements"&gt;
  &lt;/a&gt;
  10. PROVIDE REINFORCEMENTS
&lt;/h1&gt;

&lt;p&gt;Once your comments have been addressed, and the work has earned your approval (in some measure), keep an eye on the feedback others are providing on the work. Be an advocate! Having to field criticism from multiple people alone is very discouraging. Be explicit about your approval of the work. Support the author's work publicly to the scope you've approved it as they address additional feedback. Lend your own expanding understanding to the conversation. This is both encouraging to the author, and helpful to the other reviewers as they try and understand the work.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h1&gt;

&lt;p&gt;All that may feel like a lot, but with a little practice, constructive critique can become a nearly automatic habit.&lt;/p&gt;

&lt;p&gt;Over time, these patterns build trust between individuals. It increases psychological safety, thereby inviting more participation. Feedback takes less time to process, and improvements can be made more rapidly. That's something everyone benefits from.&lt;/p&gt;

&lt;p&gt;After all, who doesn't want their critiques taken seriously?&lt;/p&gt;

</description>
      <category>culture</category>
      <category>communication</category>
      <category>community</category>
      <category>codereview</category>
    </item>
  </channel>
</rss>
