<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Astro 🚀 🚀 🚀 Framework</title>
      <author>sacarvy</author>
      <pubDate>Tue, 17 Aug 2021 17:14:41 +0000</pubDate>
      <link>https://dev.to/sacarvy/astro-framework-je3</link>
      <guid>https://dev.to/sacarvy/astro-framework-je3</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;You can use any framework you want (or none at all)&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;#### 🤩  Really Awesome Not!&lt;/li&gt;
&lt;li&gt;#### 🤔  But will it not create a mess&lt;/li&gt;
&lt;li&gt;#### 🤗  But still pretty powerfull&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;p&gt;Yes! it is powerful 🦄 for a person who has experience with the framework that he is going to use &lt;br&gt;
but still For Example knowing that &lt;strong&gt;svelte framework&lt;/strong&gt; is very good at animating stuff is pretty powerful to use it with other stuff who have to make your website .&lt;br&gt;
You can use many libraries at the same time in your website from different frameworks, But still use things which you are going to use most of time don't install &lt;br&gt;
4 to 5 UI libraries from different frameworks, If you do then you can't use one of them to it's capacity .&lt;br&gt;
And more libraries will create more confusion So, make a mind map before installing libraries &lt;br&gt;
Take a look at frameworks which you are going to use and Where you like to use with Astro .&lt;br&gt;
In most scenarios One framework is enough or Two framework . &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;In Comming year there are many tools comming, and already we have a ton of tools So, &lt;br&gt;
The thing that matter is your vesion that how to use them at right place to look and work pretty smooth .&lt;br&gt;
But still these tools are going to make life easier . &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#lets-work-with-an-svelte-exampl"&gt;
  &lt;/a&gt;
  Let's work with an svelte Exampl
&lt;/h2&gt;

&lt;p&gt;In This example I am going to show you how to make a svelte component&lt;br&gt;
that will animate underline with &lt;a href="https://roughnotation.com/"&gt;rough-notation&lt;/a&gt; &lt;br&gt;
Pure Javascript Library&lt;br&gt;
&lt;/p&gt;


&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;  &lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;onMount&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;svelte&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;annotate&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;rough-notation&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;onMount&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// a for annotation&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;annotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;underline&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#FFF&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;rtl&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;animate&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;animationDuration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;iterations&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;
      &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;show&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;bind:this=&lt;/span&gt;&lt;span class="s"&gt;{e}&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;slot/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#now-you-can-use-this-component-in-your-astro-file-like-this"&gt;
  &lt;/a&gt;
  Now you can use this component in your Astro file like this
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="o"&gt;---&lt;/span&gt;
  &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;MakeItUnderlineAnimate&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./yourSvelteFile.svelte&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; 
&lt;span class="o"&gt;---&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;MakeItUnderlineAnimate&lt;/span&gt; &lt;span class="na"&gt;client&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="na"&gt;visible&lt;/span&gt; &lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    iAmUnderlined word
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;MakeItUnderlineAnimate&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#making-it-a-reuseable-component"&gt;
  &lt;/a&gt;
  Making it a Reuseable component
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Reuseable components are great only if they are flexible &lt;br&gt;
Let's make our component &lt;strong&gt;&lt;em&gt;Reuseable&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
Let's see what we can change in our previous &lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#i-think-we-can-use-svelte-props-to-make-it-reuseable"&gt;
  &lt;/a&gt;
  I think we can use svelte props to make it reuseable
&lt;/h4&gt;

&lt;p&gt;we can accept values like color, from our component As,&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="o"&gt;--------&lt;/span&gt;
  &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;MakeItUnderlineAnimate&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./yourSvelteFile.svelte&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; 
&lt;span class="o"&gt;--------&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;MakeItUnderlineAnimate&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"#FF0060"&lt;/span&gt; &lt;span class="na"&gt;client&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="na"&gt;visible&lt;/span&gt; &lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    iAmUnderlined word
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;MakeItUnderlineAnimate&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And Now use it in our svelte file Like,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;  &lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;onMount&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;svelte&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;annotate&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;rough-notation&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;onMount&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// a for annotation&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;annotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;underline&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;rtl&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;animate&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;animationDuration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;iterations&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;
      &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;show&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;bind:this=&lt;/span&gt;&lt;span class="s"&gt;{e}&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;slot/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#this-will-work-perfectly-fine-"&gt;
  &lt;/a&gt;
  This will work perfectly fine .
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#so-its-bit-longer-but-you-might-learn-something-new-from-this-example-"&gt;
  &lt;/a&gt;
  So, it's bit longer but You might learn something new from this example .
&lt;/h4&gt;

&lt;p&gt;But still astro is in it's starting stage So, bug are there But to make Astro best by each day you can make issue about there bugs at there &lt;a href="https://github.com/snowpackjs/astro/"&gt;github repo&lt;/a&gt; .&lt;/p&gt;

&lt;p&gt;Checkout My personnel portfolio &lt;a href="https://zcz.netlify.app"&gt;WEBSITE&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>svelte</category>
      <category>developer</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Make your lambda functions lightweight</title>
      <author>Cesar Muñoz</author>
      <pubDate>Tue, 17 Aug 2021 16:51:51 +0000</pubDate>
      <link>https://dev.to/cesmunoz/make-your-lambda-functions-lightweight-o8h</link>
      <guid>https://dev.to/cesmunoz/make-your-lambda-functions-lightweight-o8h</guid>
      <description>&lt;p&gt;I see a lot of articles on how to create a lambda with simple steps, always showing the hello world. But every time you start using dependencies in your lambda function, it starts to weigh.&lt;/p&gt;

&lt;p&gt;So, this article will show you how to make your lambda more lightweight and have only the function that we need to execute&lt;/p&gt;

&lt;p&gt;Before jumping into the code you need these requirements:&lt;/p&gt;

&lt;p&gt;1) AWS CLI installed&lt;br&gt;
2) Configure your aws credentials locally with &lt;code&gt;aws configure&lt;/code&gt;. &lt;br&gt;
3) Obviously node installed (We are going to use node v12)&lt;br&gt;
4) Serverless installed &lt;code&gt;npm install -g serverless&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Do you have it all configured? Alright! Let's start coding!! 🙂&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;First, I wanna show you the problem&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Create a folder or create a repo and clone it. In my case, I created a repo and clone it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--L9EAzWdG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1yutie17xnduiy1gm8h6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L9EAzWdG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1yutie17xnduiy1gm8h6.png" alt="CreateRepo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I will use npm to install the dependencies, you could use yarn if you want to&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; npm init &lt;span class="nt"&gt;-y&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lbgSwV5v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zdfnw0xhejflaet21kgn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lbgSwV5v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zdfnw0xhejflaet21kgn.png" alt="npmInit"&gt;&lt;/a&gt;&lt;br&gt;
This will create a package.json &lt;/p&gt;

&lt;p&gt;Now we are going to create our lambda function with&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; sls init aws-node-rest-api
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XH9_xNOB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x768pzc6cvkg48ujh8fd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XH9_xNOB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x768pzc6cvkg48ujh8fd.png" alt="slsInit"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We are going to make a few changes to the project. &lt;/p&gt;

&lt;p&gt;The &lt;code&gt;aws-node-rest-api&lt;/code&gt; will change it to &lt;code&gt;src&lt;/code&gt; and copy &lt;code&gt;serveless.yml&lt;/code&gt; from &lt;code&gt;src&lt;/code&gt; in our root folder&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;mv &lt;/span&gt;aws-node-rest-api src
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;mv &lt;/span&gt;src/serveless.yml ./serverless.yml
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2nht5VI2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mza8zdahaccsjgdsba91.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2nht5VI2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mza8zdahaccsjgdsba91.png" alt="Moving Files"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And the last thing to change will be the path of where is our lambda function&lt;/p&gt;

&lt;p&gt;Before&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;app: aws-node-rest-api
service: aws-node-rest-api

provider:
  name: aws
  runtime: nodejs12.x

functions:
  hello:
    handler: handler.hello
    events:
      - http:
          path: /
          method: get
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;app: aws-node-rest-api
service: aws-node-rest-api

provider:
  name: aws
  runtime: nodejs12.x

functions:
  hello:
    &lt;span class="k"&gt;**&lt;/span&gt;handler: src/handler.hello&lt;span class="k"&gt;**&lt;/span&gt;
    events:
      - http:
          path: /
          method: get
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I highlighted the changed path of the lambda function. &lt;/p&gt;

&lt;p&gt;And that's it. Let's deploy our function!!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; serverless deploy
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After a while, you'll get the following picture&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XUGUc8tf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ps93r68gh89j2teufpdz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XUGUc8tf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ps93r68gh89j2teufpdz.png" alt="Deployed"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And if you go to aws you can see your new lambda function!! YEY!!! GOOD JOB!!!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wUS51tQo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2s4f894t16t0euazo0nl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wUS51tQo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2s4f894t16t0euazo0nl.png" alt="AwsFunction"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And if go to see what is deployed in our lambda function we can see the code&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3VxvVIPx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zg9i1ertbs7l8o99o6ke.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3VxvVIPx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zg9i1ertbs7l8o99o6ke.png" alt="AwsFunctionCode"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now that we are experts in serverless and lambda functions we want to add some packages&lt;/p&gt;

&lt;p&gt;Our lambdas won't we simple right? most of the time we are using packages, to do some calls to the database, call an aws feature, call an api, manipulate an image, etc.&lt;/p&gt;

&lt;p&gt;Now, let's install some packages. Let's say we are going to manipulate some images, in our case we are going to use &lt;code&gt;jimp&lt;/code&gt; (this is only for the example. I needed a heavy npm package)&lt;/p&gt;

&lt;p&gt;So in our console let's type the following command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; npm &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;--save&lt;/span&gt; jimp
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And now let's deploy again a see what's going on&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; severless deploy
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EfSRsWBk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2isiql83k1sec0bqzbcb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EfSRsWBk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2isiql83k1sec0bqzbcb.png" alt="AwsFunctionNoCode"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Wait! What? Cannot see the code? What's going on?&lt;/p&gt;

&lt;p&gt;Well, with the simple configuration we are uploading the node_modules folder into our lambda function and the package that we just installed makes the lambda too large to show the code.&lt;/p&gt;

&lt;p&gt;How can avoid this and see my code again!!?  &lt;strong&gt;Lambda Layers&lt;/strong&gt; to the rescue!!&lt;/p&gt;

&lt;p&gt;That's right! serverless has the ability to create Lambda Layers. A Lambda Layer is a ZIP archive that contains libraries or other dependencies. With that, we can make our lambda function smaller again.&lt;/p&gt;

&lt;p&gt;How we can achieve this? We are going to put our node_modules folder in a Lambda Layer.&lt;/p&gt;

&lt;p&gt;For this, we are going to make a few changes to our code.&lt;/p&gt;

&lt;p&gt;First, we are going to install this package&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; npm i &lt;span class="nt"&gt;--save-dev&lt;/span&gt; serverless-hooks-plugin
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and after that, we are creating a deployment folder and create a script where it has all the things that we need to create the layer.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;mkdir &lt;/span&gt;deployment
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;touch &lt;/span&gt;deployment/prepare.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In our &lt;a href="http://prepare.sh"&gt;prepare.sh&lt;/a&gt; we are going to copy the following code&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;'****** Starting Pre Deploy Script ******'&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;'1- Creating folder for layers and copy package.json'&lt;/span&gt; 
&lt;span class="nb"&gt;rm&lt;/span&gt; &lt;span class="nt"&gt;-rf&lt;/span&gt; ./.dist
&lt;span class="nb"&gt;rm&lt;/span&gt; &lt;span class="nt"&gt;-rf&lt;/span&gt; ./.serverless-layers
&lt;span class="nb"&gt;mkdir&lt;/span&gt; &lt;span class="nt"&gt;-p&lt;/span&gt; .serverless-layers/node-layers/nodejs
&lt;span class="nb"&gt;cp &lt;/span&gt;package.json .serverless-layers/node-layers/nodejs/
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;'DONE!'&lt;/span&gt; 

&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;'2 - Change path to serverless-layer, adding LIB dependency, remove npm and yarn files'&lt;/span&gt;
&lt;span class="nb"&gt;cd&lt;/span&gt; .serverless-layers/node-layers/nodejs
npm i &lt;span class="nt"&gt;--production&lt;/span&gt;
&lt;span class="nb"&gt;rm &lt;/span&gt;package.json
&lt;span class="nb"&gt;rm &lt;/span&gt;package-lock.json
&lt;span class="nb"&gt;cd&lt;/span&gt; ../../..
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;'DONE!'&lt;/span&gt; 

&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;'****** Finished Pre Deploy Script ******'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Basically we are creating a nodejs folder inside .serveless-layes/node-layers, copying the package.json from our root folder and install all the dependencies.&lt;/p&gt;

&lt;p&gt;Then, in our package.json we are adding a new script&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="s2"&gt;"deploy:prepare"&lt;/span&gt;: &lt;span class="s2"&gt;"sh deployment/prepare.sh"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Leaving our package.json something like this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="s2"&gt;"name"&lt;/span&gt;: &lt;span class="s2"&gt;"serverless-aws-node-layer-example"&lt;/span&gt;,
  &lt;span class="s2"&gt;"version"&lt;/span&gt;: &lt;span class="s2"&gt;"1.0.0"&lt;/span&gt;,
  &lt;span class="s2"&gt;"description"&lt;/span&gt;: &lt;span class="s2"&gt;""&lt;/span&gt;,
  &lt;span class="s2"&gt;"main"&lt;/span&gt;: &lt;span class="s2"&gt;"index.js"&lt;/span&gt;,
  &lt;span class="s2"&gt;"scripts"&lt;/span&gt;: &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;"deploy:prepare"&lt;/span&gt;: &lt;span class="s2"&gt;"sh deployment/prepare.sh"&lt;/span&gt;,
    &lt;span class="s2"&gt;"test"&lt;/span&gt;: &lt;span class="s2"&gt;"echo &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;Error: no test specified&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; &amp;amp;&amp;amp; exit 1"&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;,
  &lt;span class="s2"&gt;"repository"&lt;/span&gt;: &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;"type"&lt;/span&gt;: &lt;span class="s2"&gt;"git"&lt;/span&gt;,
    &lt;span class="s2"&gt;"url"&lt;/span&gt;: &lt;span class="s2"&gt;"git+https://github.com/cesmunoz/serverless-aws-node-layer-example.git"&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;,
  &lt;span class="s2"&gt;"keywords"&lt;/span&gt;: &lt;span class="o"&gt;[]&lt;/span&gt;,
  &lt;span class="s2"&gt;"author"&lt;/span&gt;: &lt;span class="s2"&gt;""&lt;/span&gt;,
  &lt;span class="s2"&gt;"license"&lt;/span&gt;: &lt;span class="s2"&gt;"ISC"&lt;/span&gt;,
  &lt;span class="s2"&gt;"bugs"&lt;/span&gt;: &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;"url"&lt;/span&gt;: &lt;span class="s2"&gt;"https://github.com/cesmunoz/serverless-aws-node-layer-example/issues"&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;,
  &lt;span class="s2"&gt;"homepage"&lt;/span&gt;: &lt;span class="s2"&gt;"https://github.com/cesmunoz/serverless-aws-node-layer-example#readme"&lt;/span&gt;,
  &lt;span class="s2"&gt;"dependencies"&lt;/span&gt;: &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;"jimp"&lt;/span&gt;: &lt;span class="s2"&gt;"^0.16.1"&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;,
  &lt;span class="s2"&gt;"devDependencies"&lt;/span&gt;: &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;"serverless-hooks-plugin"&lt;/span&gt;: &lt;span class="s2"&gt;"^1.1.0"&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And the last thing, we need to make this steps in our serveless.yml. &lt;/p&gt;

&lt;p&gt;Adding the following things:&lt;/p&gt;

&lt;p&gt;1) Using the custom hook that the package &lt;code&gt;serverless-hooks-plugin&lt;/code&gt; provides us&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;plugins:
  - serverless-hooks-plugin

custom:
  hooks:
    before:package:createDeploymentArtifacts:
      - npm run deploy:prepare
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;2) Creating the layer&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;layers:
  nodeModules:
    path: ./.serverless-layers/node-layers
    name: My-App-Node-Dependencies
    description: Node Modules &lt;span class="k"&gt;for &lt;/span&gt;My App
    compatibleRuntimes:
      - nodejs12.x
    package:
      include:
        - ./&lt;span class="k"&gt;**&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;3) Make our function package individually and exclude everything&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;package:
  individually: &lt;span class="nb"&gt;true
  &lt;/span&gt;exclude:
    - ./&lt;span class="k"&gt;**&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;4) Include only our handler.js in the lambda function and make use of the lambda layer&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;functions:
  hello:
    handler: src/handler.hello
    layers:
      - Ref: NodeModulesLambdaLayer
    package:
      include:
        - src/handler.js        
    events:
      - http:
          path: /
          method: get
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The final serveless.yml will be something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;app: aws-node-rest-api
service: aws-node-rest-api

provider:
  name: aws
  runtime: nodejs12.x

plugins:
  - serverless-hooks-plugin

custom:
  hooks:
    before:package:createDeploymentArtifacts:
      - npm run deploy:prepare

layers:
  nodeModules:
    path: ./.serverless-layers/node-layers
    name: My-App-Node-Dependencies
    description: Node Modules &lt;span class="k"&gt;for &lt;/span&gt;My App
    compatibleRuntimes:
      - nodejs12.x
    package:
      include:
        - ./&lt;span class="k"&gt;**&lt;/span&gt;

package:
  individually: &lt;span class="nb"&gt;true
  &lt;/span&gt;exclude:
    - ./&lt;span class="k"&gt;**&lt;/span&gt;

functions:
  hello:
    handler: src/handler.hello
    layers:
      - Ref: NodeModulesLambdaLayer
    package:
      include:
        - src/handler.js        
    events:
      - http:
          path: /
          method: get
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's deploy it again and see what happens&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; serverless deploy
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5kzg06fz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/110d6vpngzkyzxcuwx31.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5kzg06fz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/110d6vpngzkyzxcuwx31.png" alt="AwsFunctionCodeAgain"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Woala! We can see our code again! &lt;/p&gt;

&lt;p&gt;And Where is our lambda layer? &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--c9L1vVMS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sre3hw12wcynwn0dbtem.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c9L1vVMS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sre3hw12wcynwn0dbtem.png" alt="AwsLambdaLayer"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We can see and the lambda function has a dependency on our new lambda layer&lt;/p&gt;

&lt;p&gt;And if we go to lambda layers we can see it's there&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pmCUhE-D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ix9g1an54u6ol1o3ruth.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pmCUhE-D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ix9g1an54u6ol1o3ruth.png" alt="AwsLayers"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So with that configuration we can view always our code.&lt;/p&gt;

&lt;p&gt;Hope you found it useful as I do.&lt;/p&gt;

&lt;p&gt;I'll leave the code in this repo soon. (I've needed to reinstall macOS in my MacBook Pro, and I've lost the example. Sorry about that!)&lt;br&gt;
Repo: &lt;a href="https://github.com/cesmunoz/serverless-aws-node-layer-example"&gt;https://github.com/cesmunoz/serverless-aws-node-layer-example&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;See you next time!!&lt;/p&gt;

&lt;p&gt;C.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>node</category>
      <category>serverless</category>
      <category>aws</category>
    </item>
    <item>
      <title>My Zuri plan </title>
      <author>Chinemenma Igbokwe</author>
      <pubDate>Tue, 17 Aug 2021 16:35:19 +0000</pubDate>
      <link>https://dev.to/neme_igbokwe/my-zuri-plan-4lb9</link>
      <guid>https://dev.to/neme_igbokwe/my-zuri-plan-4lb9</guid>
      <description>&lt;p&gt;I am Igbokwe Chinemenma, a novice in front-end development which is why I am here. My intention is to build on the little knowledge I have in order to be an independent developer all round.I will also like to meet like minded developers who share the same interest as me especially women in order to build stronger foundation for women in technology as well as act as a motivation to them. Also my stack is front-end development.&lt;br&gt;
My goals for this internship are: &lt;br&gt;
To get a better understanding of JavaScript.&lt;br&gt;
To build a responsive website all on my own. &lt;/p&gt;

&lt;p&gt;What I intend to achieve are:&lt;br&gt;
To be an independent developer and programmer.&lt;/p&gt;

&lt;p&gt;To inspire everyone around me especially women.&lt;/p&gt;

&lt;p&gt;I love trying out challenging things as it keeps my brain at alert. If you are just like me excited in trying challenging things ensure enrolling into &lt;a href="https://internship.zuri.team/"&gt;https://internship.zuri.team/&lt;/a&gt;&lt;br&gt;
just like me and walk on a new journey.&lt;/p&gt;

&lt;p&gt;For Figma:&lt;br&gt;
&lt;a href="https://m.youtube.com/watch?v=jk1T0CdLxwU"&gt;https://m.youtube.com/watch?v=jk1T0CdLxwU&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For GitHub:&lt;br&gt;
&lt;a href="https://m.youtube.com/watch?v=SWYqp7iY_Tc"&gt;https://m.youtube.com/watch?v=SWYqp7iY_Tc&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For HTML:&lt;br&gt;
&lt;a href="https://m.youtube.com/watch?v=qz0aGYrrlhU"&gt;https://m.youtube.com/watch?v=qz0aGYrrlhU&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For JavaScript:&lt;br&gt;
&lt;a href="https://m.youtube.com/watch?v=W6NZfCO5SIk"&gt;https://m.youtube.com/watch?v=W6NZfCO5SIk&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For Flutter:&lt;br&gt;
&lt;a href="https://m.youtube.com/watch?v=pTJJsmejUOQ"&gt;https://m.youtube.com/watch?v=pTJJsmejUOQ&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Join me in trying out exciting and challenging things!&lt;/p&gt;

</description>
      <category>womenintech</category>
    </item>
    <item>
      <title>Adventures in Scale: Google is Tech’s Lewis and Clark </title>
      <author>Conor Bronsdon</author>
      <pubDate>Tue, 17 Aug 2021 16:33:34 +0000</pubDate>
      <link>https://dev.to/linearb/adventures-in-scale-google-is-tech-s-lewis-and-clark-3k3k</link>
      <guid>https://dev.to/linearb/adventures-in-scale-google-is-tech-s-lewis-and-clark-3k3k</guid>
      <description>&lt;p&gt;To call Google a titan of the tech industry would be an understatement. Their name has become synonymous with the internet itself. The very act of retrieving information from the internet — the core functionality of the internet and its most basic purpose — is known simply as “Googling” something. On their road to becoming the web’s biggest search engine and a moniker for the internet itself, Google also pioneered much of what it takes to grow a company at scale.&lt;/p&gt;

&lt;p&gt;On the Dev Interrupted Podcast Google Senior Engineer’s Hyrum Wright and Titus Winters, shared their lessons learned from programming at Google with LinearB Co-Founder and COO, Dan Lines. Both engineers have a deep understanding of the principles behind software development: Hyrum is semi-famous as the “Hyrum” of Hyrum’s Law; while Titus is responsible for 250 million lines of code that over 12,000 developers work on.&lt;/p&gt;

&lt;p&gt;But what lessons can we take from their interview — and their book &lt;a href="https://abseil.io/resources/swe-book"&gt;&lt;em&gt;Software Engineering at Google: Lessons Learned from Programming Over Time&lt;/em&gt;&lt;/a&gt;? How can we apply those lessons to our own projects? I’ve pulled out the core takeaways from their interview and condensed them so that any developer or company, be they responsible for 2,000 lines of code or 2,000,000, can learn something from Google’s roadmap.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-listen-to-google"&gt;
  &lt;/a&gt;
  Why listen to Google
&lt;/h2&gt;

&lt;p&gt;In spite of their enormous success and scale, Google doesn’t pretend to have all the answers; this lack of presumption is exactly the thinking that has made them the titan they are. Previous success is no guarantee of future success and no one understands this better than Google.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;One thing that Google is very good at is not accepting how everyone else does it as the one true way.”&lt;/em&gt; — Titus Winters, on the Dev Interrupted podcast at 20:35&lt;/p&gt;

&lt;p&gt;&lt;iframe width="100%" height="232px" src="https://open.spotify.com/embed/episode/2r5ZD46J8mueaopwBlYJs6"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;It’s easy to assume that events and conclusions are foregone, or that one event naturally follows another. Yet this is rarely the case. Most of the time people are working towards a specific outcome, and it’s not until later that the outcome is apparent contextually. This is true in life and software development.&lt;/p&gt;

&lt;p&gt;Google has spent the past couple decades approaching everything they do as trial and error, learning what does and does not work, and trying to institutionalize the things that do work. This is not a straight path.&lt;/p&gt;

&lt;p&gt;This mindset is obvious in Hyrum and Titus’ interview. Titus uses the analogy of Lewis and Clark to explain how the software development process at Google has unfolded.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;“They say Lewis and Clark explored the Louisiana Purchase, by which we mean, they took one path out and one path back, which is not exactly mapping, but in a similar way, we’re trying to give an exploration/trip-report/map.”&lt;/em&gt; — Titus Winters, on the Dev Interrupted podcast at 6:17&lt;/p&gt;

&lt;p&gt;He’s admitting that Google doesn’t have all of the answers; that Google’s path isn’t the *only *path to success; that other paths may be superior to Google’s; and that their path may not work for every business. But, with decades of experience, Google has learned a thing or two along the way, and maybe, just maybe, we can all learn something from the path they have trailblazed.&lt;/p&gt;

&lt;p&gt;After all, there aren’t many companies in the world that have hundreds of millions of lines of code.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-3-pillars-of-software-engineering-at-google"&gt;
  &lt;/a&gt;
  The 3 Pillars of Software Engineering at Google
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZDx8-_dI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/0%2AQb2YQYHDe3MFNtTR.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZDx8-_dI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/0%2AQb2YQYHDe3MFNtTR.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;“Anyone can change a line of code or change 10 lines of code. But how about changing 10,000 lines of code or 100,000 lines of code in a reasonable time?&lt;/em&gt; — Hyrum Wright, on the Dev Interrupted Podcast at 17:15&lt;/p&gt;

&lt;p&gt;With so much code to manage, Google has made maintaining their code a strategic goal. Code must be fresh and able to sustain changes to the code base for business or technical reasons. To best allow for this, they have identified 3 concepts that they believe are core to software engineering.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-time"&gt;
  &lt;/a&gt;
  1. Time
&lt;/h3&gt;

&lt;p&gt;All of the hardest stuff that software engineers are going to have to deal with like skew version, backwards compatibility, issues with data storage, dependency management, upgrades and many more, are all problems created by time. Once dev teams realize this, it will change their perspective on how best to write code.&lt;/p&gt;

&lt;p&gt;For instance, if you are going to get rid of your code within one or two years, then you probably don’t need to worry too much about making changes or upgrades to it in the future. But if you are going to write code that will remain in use after five or ten years, then you may want to approach it differently.&lt;/p&gt;

&lt;p&gt;If dev teams want their code base to last, they need to think about constructing code so that it can sustain changes within an organization’s lifespan. This fundamental realization allows time to peacefully coexist with the second pillar.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-scale"&gt;
  &lt;/a&gt;
  2. Scale
&lt;/h3&gt;

&lt;p&gt;How your system scales is a relationship with time. Scaling isn’t a new problem and Google has been at the forefront of pushing scale their entire existence. For instance, email existed before Gmail and search engines existed before Google, but Google’s brilliance was their ability to scale these technologies better than their competitors. It’s the root of their success.&lt;/p&gt;

&lt;p&gt;To beat their competitors they adopted a mindset of scaling as a process — a continual evolution.&lt;/p&gt;

&lt;p&gt;As a company grows, all of its operations expand and that continued expansion requires more resources, which begets even more resources still. This means growth cannot occur superlinearly because if it does, eventually a company will consume all of its resources maintaining the status quo.&lt;/p&gt;

&lt;p&gt;The key takeaway is to make sure your codebase and software both scale &lt;a href="https://www.google.com/search?q=sublinear&amp;amp;source=lmns&amp;amp;rlz=1C1JZAP_enUS848US852&amp;amp;hl=en&amp;amp;sa=X&amp;amp;ved=2ahUKEwj20Nra367yAhXefzABHSKWBGMQ_AUoAHoECAEQAA"&gt;sublinearly &lt;/a&gt;, that way if your codebase doubles or triples you won’t need six times as many engineers just to maintain your systems. (Sublinear scaling refers to team growth that occurs more slowly than the number of supported services of a company. Superlinear growth is the opposite — with team growth outpacing the number of supported services.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-tradeoffs-and-costs"&gt;
  &lt;/a&gt;
  3. Trade-offs and Costs
&lt;/h3&gt;

&lt;p&gt;After taking into consideration the best practices around time and scale, what is left is good decision making. Just as Hyrum and Titus note in their book, &lt;a href="https://abseil.io/resources/swe_at_google.2.pdf"&gt;“in software engineering, as in life, good choices lead to good outcomes.”&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;However, no organization has perfect data on which to base every decision, and therefore must strive to make the best decisions they can with the most data possible. People need insights into what an organization finds impactful.&lt;/p&gt;

&lt;p&gt;For instance, if an engineer spends a week on a project, it should probably be a project the organization considers a priority. Because if it is not, then no matter how perfect the code, it probably wasn’t the best use of the engineer’s time. Brain power should be devoted to the most difficult problems, not where a semicolon should be placed. The cost of incorrectly evaluating trade-offs is failing the 1st two pillars.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#coming-home"&gt;
  &lt;/a&gt;
  Coming Home
&lt;/h2&gt;

&lt;p&gt;While Hyrum and Titus may not be Lewis and Clark reborn, they have a valuable story to tell about trial and error in the Information Age. How a company scales is likely to define how it differentiates itself from its competitors and whether or not it will be successful. A company that can scale sublinearly will thrive, all others will stagnate as victims of their own success.&lt;/p&gt;

&lt;p&gt;Minding the principles of these modern-day explorations into the wilderness of code will help any organization keep an eye on the most valuable resource: time. But remember just as Lewis and Clark found one path forward, they didn’t find the *only *path forward.&lt;/p&gt;

&lt;p&gt;We can all learn something from Google, but never forget the path forward is your own.&lt;/p&gt;

&lt;p&gt;For more lessons in scaling and growth, consider registering for &lt;strong&gt;INTERACT&lt;/strong&gt;, Dev Interrupted’s biggest event yet. The interactive, community-driven, digital conference takes place September 30th. Designed by engineering leaders, for engineering leaders INTERACT will feature 10 speakers, 100s of engineers and engineering leaders, and is totally free.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2QYQCtGe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn-images-1.medium.com/max/2400/0%2AnHzak-kDc0MzrG55.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2QYQCtGe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn-images-1.medium.com/max/2400/0%2AnHzak-kDc0MzrG55.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#register-now"&gt;
  &lt;/a&gt;
  &lt;a href="https://devinterrupted.com/event/interact/"&gt;Register Now&lt;/a&gt;
&lt;/h1&gt;




&lt;p&gt;If you haven’t already joined the best developer discord out there, WYD?&lt;/p&gt;

&lt;p&gt;Look, I know we talk about it a lot but we love our developer discord community. With over 1500 members, the Dev Interrupted Discord Community is the best place for Engineering Leaders to engage in daily conversation. No salespeople allowed. &lt;a href="https://discord.gg/tpkmwM6c3g"&gt;Join the community &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gBWLfe0T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2048/0%2AxR_ViPMd2T8ljTzt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gBWLfe0T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2048/0%2AxR_ViPMd2T8ljTzt.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Originally published at &lt;a href="https://devinterrupted.com/adventures-in-scale-google-is-techs-lewis-and-clark/"&gt;https://devinterrupted.com&lt;/a&gt; on August 13, 2021.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>codequality</category>
      <category>database</category>
      <category>googlecloud</category>
      <category>discuss</category>
    </item>
    <item>
      <title>Cryptography and Ciphers explained</title>
      <author>Hargunbeer Singh</author>
      <pubDate>Tue, 17 Aug 2021 16:12:06 +0000</pubDate>
      <link>https://dev.to/hamiecod/cryptography-and-ciphers-explained-422a</link>
      <guid>https://dev.to/hamiecod/cryptography-and-ciphers-explained-422a</guid>
      <description>&lt;h2&gt;
  &lt;a href="#preface"&gt;
  &lt;/a&gt;
  Preface
&lt;/h2&gt;

&lt;p&gt;Do you know what is used in emails, messages and video chats for privacy? Do you know what is used as the underlying structure of the blockchain which is powering cryptocurrency? It is Cryptography.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;A cipher is an algorithm that can encode plaintext into unreadable text, and to decode the unreadable text back into readable text. For a specific text, you will have to use the same cipher for encoding and decoding of the text. They are used for safe information transfers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table of Contents
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#introduction"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#table-of-contents"&gt;Table of Contents&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#history"&gt;History&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#types-of-cryptography"&gt;Types of Cryptography&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#symmetric-key-cryptography"&gt;Symmetric Key cryptography&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#uses"&gt;Uses&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#advantages"&gt;Advantages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#block-ciphers"&gt;Block Ciphers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#stream-cipher"&gt;Stream Cipher&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#asymmetric-key-cryptography"&gt;Asymmetric Key Cryptography&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#uses-1"&gt;Uses&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#rsa"&gt;RSA&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#example"&gt;Example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#advantages-1"&gt;Advantages&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#history"&gt;
  &lt;/a&gt;
  History
&lt;/h2&gt;

&lt;p&gt;Ciphers were used long before the information age, like the substitution cipher, whose decoding was done by substituting letters following a certain pattern. The pattern was chosen by the encoder. Transposition cipher was also used before the information age, to decode a string encoded with transposition cipher, one had to shift the positions of letters. None of the old ciphers were cryptographically secure except for the one-time pad(now called One Time Password) cipher. It is a single-use pre-shared key used to decode the messages, it is nowadays used in authentication(see &lt;a href="https://github.com/hamiecod/MDN-Notes/tree/main/Glossary/CRA/CRA.md"&gt;CRA&lt;/a&gt;)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#types-of-cryptography"&gt;
  &lt;/a&gt;
  Types of Cryptography
&lt;/h2&gt;

&lt;p&gt;There are two types of cryptography - symmetric key cryptography and asymmetric key cryptography.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#symmetric-key-cryptography"&gt;
  &lt;/a&gt;
  Symmetric Key cryptography
&lt;/h3&gt;

&lt;p&gt;Symmetric-key algorithms are algorithms for cryptography that use the same encryption keys for both the encryption of plaintext and the decryption of corresponding ciphertext. Symmetric-key algorithms use stream ciphers or block ciphers.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#uses"&gt;
  &lt;/a&gt;
  Uses
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Used in HTTPS protocol&lt;/li&gt;
&lt;li&gt;Payment/Banking Applications to authenticate transactions&lt;/li&gt;
&lt;li&gt;used in data centres and servers to encrypt the data which is at rest&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#advantages"&gt;
  &lt;/a&gt;
  Advantages
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Faster than asymmetric-key cryptography because there is only one key in play&lt;/li&gt;
&lt;li&gt;Better performance because of less calculations being performed.&lt;/li&gt;
&lt;li&gt;As they are quicker, they are optimized for handling large amounts of data.&lt;/li&gt;
&lt;li&gt;Easier to set-up and implement.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#block-ciphers"&gt;
  &lt;/a&gt;
  Block Ciphers
&lt;/h4&gt;

&lt;p&gt;They are encryption algorithms that take an input message and a key to generate a new encrypted cipher text, and then it uses the cipher text and the same key to decrypt the message. It encrypts blocks of data of fixed size at a time. The size of the block depends on the size of the key. The data to be encrypted is divided into blocks of equal size.&lt;br&gt;
&lt;br&gt;&lt;br&gt; The encryption and the decryption algorithm accept two inputs - an input of size n bits and a key of size k bits; and returns a n-bit output. The decryption algorithm is the inverse function to encryption: decryption = encryption^(-1). Block cipher encryptions are just permuntations of the plain text by the key. Eac key selects one permutation from the set of 2^k permutations. There are infinite number of permutations/keys.&lt;br&gt;&lt;br&gt;&lt;br&gt;
We do not encrypt the data using 100s of keys because that is very expensive and time-consuming. Block Ciphers are very safe for secure data transfers, they are also used in cryptographic protocols. Popular block ciphers are AES, DES and 3DES. Block ciphers are slower but they are more secure and are the industry standard. The process of encryption using block ciphers is as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;each block --&amp;gt; corresponding encryption key --&amp;gt; corresponding encryption block --&amp;gt; combined binary text --&amp;gt; decimal or hexadecimal cipher
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#stream-cipher"&gt;
  &lt;/a&gt;
  Stream Cipher
&lt;/h4&gt;

&lt;p&gt;Stream cipher is a type of cipher that encrypts one bit at a time. It is a quicker format of encryption considering that it does not have to encrypt large blocks at a time. In stream ciphers, data is converted to binary digits and encrypted sequentially, each binary digit is encrypted one after other. Popular stream cipher algorithms include RC4 and Salsa20. The process of encrypting data using stream cipher is as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;plain text --&amp;gt; binary data --&amp;gt; algorithmic function(f(x)) using random encryption key --&amp;gt; decimal or hexadecimal data(ciphertext)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#asymmetric-key-cryptography"&gt;
  &lt;/a&gt;
  Asymmetric Key Cryptography
&lt;/h3&gt;

&lt;p&gt;Asymmetric-key algorithms are algorithms for cryptography that use different keys for encryption and decryption of data. It follows the concept of public keys(known to everyone) and private keys(known to nobody except the owner). &lt;br&gt;&lt;br&gt;&lt;br&gt;
Using this type of cryptography, the sender first encrypts the original text using a public key, and then sends the encrypted text to the receiver. The receiver decrypts the cipher using his private key. The public key can be shared with anyone who wants to send you a message, whereas the private key should not be shared with anybody. &lt;br&gt;&lt;br&gt;&lt;br&gt;
In asymmetric-key cryptography, unlike symmetric-key cryptography, the sender does not need to send the key to the receiver. Asymmetric-key cryptography resolves the risk of key sharing in a dangerous network in which the third party can intercept the key. &lt;br&gt;&lt;br&gt;&lt;br&gt;
It is impossible to create duplicate keys as the private and public keys are mathematically connected.&lt;br&gt;
Popular assymetric-key cryptography algorithms include RSA and DSA&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#uses"&gt;
  &lt;/a&gt;
  Uses
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Used in SSH protocol&lt;/li&gt;
&lt;li&gt;Used in mailing protocols like iMap&lt;/li&gt;
&lt;li&gt;Used in blockchain&lt;/li&gt;
&lt;li&gt;Used in digital signatures to maintain the authenticity of documents&lt;/li&gt;
&lt;li&gt;Used for sharing keys for symmetric key cryptography&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#rsa"&gt;
  &lt;/a&gt;
  RSA
&lt;/h4&gt;

&lt;p&gt;It is the most widely used Assymetric algorithm. It is named after its founders - Ron &lt;strong&gt;R&lt;/strong&gt;ivest, Adi &lt;strong&gt;S&lt;/strong&gt;hamir and Leonard &lt;strong&gt;A&lt;/strong&gt;dleman. It uses block ciphers to obsure the data. It is used on the web by VPNs, emails and GitHub.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#example"&gt;
  &lt;/a&gt;
  Example
&lt;/h4&gt;

&lt;p&gt;Emails use Assymetric-key cryptography, our email address is the public key, which is available publicly to everybody, whereas the credentials to log into our email are private, using which only the owner of the mail can read the mails.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#advantages"&gt;
  &lt;/a&gt;
  Advantages
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;No need of any reliable key sharing channel, it was a risk in symmetric key cryptography&lt;/li&gt;
&lt;li&gt;Longer keys which increase the security, like &lt;u&gt;2048 bit&lt;/u&gt; keys and &lt;u&gt;4096 bit&lt;/u&gt; keys&lt;/li&gt;
&lt;li&gt;Used for proof of authenticity of the owner as he only possesses the private key.&lt;/li&gt;
&lt;li&gt;If a third party modifies the ciphertext generated by the public key, the private key would not be able to decrypt the text and even if it does, it would be easy to identify the discrepancy.

&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>security</category>
      <category>blockchain</category>
      <category>devops</category>
      <category>cryptography</category>
    </item>
    <item>
      <title>What is up with var, let and const? What the hell is the difference between these three?</title>
      <author>Shubhra Agarwal</author>
      <pubDate>Tue, 17 Aug 2021 15:56:24 +0000</pubDate>
      <link>https://dev.to/shubhracodes/what-is-up-with-var-let-and-const-what-the-hell-is-the-difference-between-these-three-5dk1</link>
      <guid>https://dev.to/shubhracodes/what-is-up-with-var-let-and-const-what-the-hell-is-the-difference-between-these-three-5dk1</guid>
      <description>&lt;p&gt;With ES2016 came two new methods to declare variable i.e. &lt;code&gt;let&lt;/code&gt; and &lt;code&gt;const&lt;/code&gt;. Before that the developers had access to only &lt;code&gt;var&lt;/code&gt;(I feel bad for them, no kidding). &lt;/p&gt;

&lt;p&gt;So, what's the catch here? Why are there three different ways to declare variables? Wasn't JavaScript already confusing enough and now they're making it more confusing.&lt;/p&gt;

&lt;p&gt;Before we can understand how &lt;code&gt;var&lt;/code&gt; and &lt;code&gt;let/const&lt;/code&gt; differ we need to understand a computer science-y concept called &lt;code&gt;scope&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#function-scope-vs-block-scope"&gt;
  &lt;/a&gt;
  Function scope vs Block Scope
&lt;/h2&gt;

&lt;p&gt;JavaScript comes with two kinds of scope i.e Function scope and block scope. Let's have a look at the difference in both of them.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#function-scope"&gt;
  &lt;/a&gt;
  Function Scope
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function myFn() {
  var foo = 'peekaboo!';

  console.log(foo); // 'peekaboo!'
}

console.log(foo); // ReferenceError: foo is not defined
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Variables are function-scoped when using var because their visibility is restricted to the function. You'll get an error if you try to utilise it outside of the function.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#block-scope"&gt;
  &lt;/a&gt;
  Block Scope
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;if (true) {
  var foo = 'peekaboo!';
  let bar = 'i see u';
  const baz = 'baby blue!';

  console.log(foo); // 'peekaboo!';
  console.log(bar); // 'i see u';
  console.log(baz); // 'baby blue!';
}

console.log(foo); // 'peekaboo!';
console.log(bar); // ReferenceError: bar is not defined
console.log(baz); // ReferenceError: baz is not defined
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Notice the visibility of foo isn’t limited by the if-statement block. However, both &lt;code&gt;bar&lt;/code&gt; and &lt;code&gt;baz&lt;/code&gt; are limited in visibility to the block of code.&lt;/p&gt;

&lt;p&gt;This concept of scope is the most prominent distinction between the old-fashioned &lt;code&gt;var&lt;/code&gt; and modern &lt;code&gt;let/const&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hGro-vYt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pbhe41h74iecbev8p1r6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hGro-vYt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pbhe41h74iecbev8p1r6.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Source: &lt;a href="https://twitter.com/mpjme"&gt;https://twitter.com/mpjme&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#var"&gt;
  &lt;/a&gt;
  VAR
&lt;/h2&gt;

&lt;p&gt;Let's have a look at the following code snippet&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;for (var i = 0; i &amp;lt; 3; i++) {
  console.log(i);
}

console.log(i);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;According to you what will be the output of the following program??&lt;br&gt;
If you said&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;//0
//1
//2
//3
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;then you're absolutely correct.&lt;/p&gt;

&lt;p&gt;The variable &lt;code&gt;i&lt;/code&gt; is accessible outside of the for-loop. This is expected since variables defined with var have a function scope rather than a block scope i.e they're accessible within the whole function in which they are defined in.&lt;/p&gt;

&lt;p&gt;If it's so cool then what's the problem with using var? Why aren't we using it?&lt;/p&gt;

&lt;p&gt;I'll use the example below to explain:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    var greeter = "hey hi";
    var times = 4;

    if (times &amp;gt; 3) {
        var greeter = "say Hello instead"; 
    }

    console.log(greeter) // "say Hello instead"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So, since &lt;code&gt;times &amp;gt; 3&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;, greeter is redefined  to "say Hello instead". While this is not a problem if you knowingly want greeter to be redefined, it becomes a problem when you do not realise that a variable greeter has already been defined before.&lt;/p&gt;

&lt;p&gt;If you have used greeter in other parts of your code, you might be surprised at the output you might get. This will likely cause a lot of bugs in your code. This is why let and const are necessary.&lt;/p&gt;

&lt;p&gt;In layman terms, &lt;code&gt;var&lt;/code&gt; can be redefined and it's values can also be changed?&lt;/p&gt;

&lt;p&gt;So Shubhra, what can we do to save ourselves from making such blunder in production code???&lt;/p&gt;

&lt;p&gt;Well, worry not, the people in the JavaScript headquaters knew that you would be having this problem and already gave a solution for this.&lt;/p&gt;

&lt;p&gt;Here comes &lt;code&gt;let&lt;/code&gt; to save the day.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#let"&gt;
  &lt;/a&gt;
  LET
&lt;/h2&gt;

&lt;p&gt;In many ways &lt;code&gt;let&lt;/code&gt; is like a cousin of &lt;code&gt;var&lt;/code&gt;. It has a lot of similarities but differentiates in ways that makes ES2016 a more modern-feeling language.&lt;/p&gt;

&lt;p&gt;Let us take the same example we took in &lt;code&gt;var&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;for (let i = 0; i &amp;lt; 3; i++) {
  console.log(i);
}

console.log(i);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This time what do you think the output is going to be?? Well if you said&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;//0
//1
//2
//ReferenceError: i is not defined
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;then you're in luck.&lt;/p&gt;

&lt;p&gt;Hey Shubhra, if &lt;code&gt;let&lt;/code&gt; is a cousin of &lt;code&gt;var&lt;/code&gt; then why is it coming undefined? &lt;br&gt;
Let me tell you, so &lt;code&gt;let&lt;/code&gt; is blocked scope instead of being function scoped.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#let-can-be-updated-but-not-redeclared"&gt;
  &lt;/a&gt;
  let can be updated but not re-declared.
&lt;/h3&gt;

&lt;p&gt;Just like &lt;code&gt;var&lt;/code&gt;,  a variable declared with &lt;code&gt;let&lt;/code&gt; can be updated within its scope. Unlike &lt;code&gt;var&lt;/code&gt;, a &lt;code&gt;let&lt;/code&gt; variable cannot be re-declared within its scope. So while this will work:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    let greeting = "say Hi";
    greeting = "say Hello instead";
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;this will return an error:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    let greeting = "say Hi";
    let greeting = "say Hello instead"; // error: Identifier 'greeting' has already been declared
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;However, if the same variable is defined in different scopes, there will be no error:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    let greeting = "say Hi";
    if (true) {
        let greeting = "say Hello instead";
        console.log(greeting); // "say Hello instead"
    }
    console.log(greeting); // "say Hi"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Why is there no error? This is because both instances are treated as different variables since they have different scopes.&lt;/p&gt;

&lt;p&gt;This fact makes &lt;code&gt;let&lt;/code&gt; a better choice than &lt;code&gt;var&lt;/code&gt;. When using &lt;code&gt;let&lt;/code&gt;, you don't have to bother if you have used a name for a variable before as a variable exists only within its scope.&lt;/p&gt;

&lt;p&gt;Also, since a variable cannot be declared more than once within a scope, then the problem discussed earlier that occurs with &lt;code&gt;var&lt;/code&gt; does not happen.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#const"&gt;
  &lt;/a&gt;
  CONST
&lt;/h2&gt;

&lt;p&gt;The keyword &lt;code&gt;const&lt;/code&gt; is an abbreviation for constant. Similar to &lt;code&gt;let&lt;/code&gt;, it’s block-scoped, however, you can’t reassign it.&lt;/p&gt;

&lt;p&gt;What do you think is the output of this code?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const myBoolean = true;

if (myBoolean) {
  const turtles = [
    'leonardo',
    'donatello',
    'michaelangelo',
    'raphael'
  ];
  // turtles = turtles.concat('Shredder');  // 🙅‍♀️ this would throw an error

  console.log(turtles);
}

console.log(turtles);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The output&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// ['leonardo', 'donatello', 'michaelangelo', 'raphael']
// ReferenceError: turtles is not defined
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Because the &lt;code&gt;const&lt;/code&gt; is not transferred in this scenario, items can still be added to a const variable that links to an array or an object.&lt;br&gt;
This is a topic for another blog. I will discuss it later.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Because function-scope isn't as evident as block-scope, it's best to avoid using &lt;code&gt;var&lt;/code&gt;. The objective of ES2016-2019 appears to be to replace &lt;code&gt;var&lt;/code&gt; with &lt;code&gt;let/const&lt;/code&gt; because they encourage better code habits.&lt;/p&gt;

&lt;p&gt;If you need to construct a variable, you should usually use const. Use let instead if you know or suspect you'll need to reassign it (for-loops, switch statements, algorithm swapping).&lt;/p&gt;

</description>
      <category>javascript</category>
    </item>
    <item>
      <title>Getting started with Drayman</title>
      <author>Yan Ivan Evdokimov</author>
      <pubDate>Tue, 17 Aug 2021 15:54:56 +0000</pubDate>
      <link>https://dev.to/jansivans/getting-started-with-drayman-1ng7</link>
      <guid>https://dev.to/jansivans/getting-started-with-drayman-1ng7</guid>
      <description>&lt;p&gt;&lt;a href="http://www.drayman.io"&gt;Drayman&lt;/a&gt; is a server-side component framework which allows you to use any available HTML element, web component or custom Drayman third-party component together with server-side code in single script.&lt;/p&gt;

&lt;p&gt;With Drayman, browser only renders what user should see - all logic and calculations happen server-side and UI is written using JSX syntax.&lt;/p&gt;

&lt;p&gt;Best way to show Drayman capabilities is to create something with it. So let's get started.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#file-viewer-component"&gt;
  &lt;/a&gt;
  File viewer component
&lt;/h2&gt;

&lt;p&gt;Let's build a component which allows user to select a file from file system and view it's contents.&lt;/p&gt;

&lt;p&gt;First, you need to install a Drayman. It can be done by running these commands:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx @drayman/framework-init@latest my-app
&lt;span class="nb"&gt;cd &lt;/span&gt;my-app
npm start
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Website will be available at &lt;a href="http://localhost:3033"&gt;http://localhost:3033&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you don't want install anything, you can always try Drayman inside a CodeSandbox by visiting &lt;a href="http://new.drayman.io"&gt;new.drayman.io&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#initial-component-template"&gt;
  &lt;/a&gt;
  Initial component template
&lt;/h3&gt;

&lt;p&gt;Go to &lt;code&gt;src/components/home.tsx&lt;/code&gt; and replace it's contents with this code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;component&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;DraymanComponent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Select a file to view it directly from file system&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;select&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;select&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;br&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;pre&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;pre&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You will see an initial skeleton of our component. Further &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; will be used to show available files and &lt;code&gt;&amp;lt;pre&amp;gt;&lt;/code&gt; will show contents of the selected file.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#filling-select-with-options"&gt;
  &lt;/a&gt;
  Filling select with options
&lt;/h3&gt;

&lt;p&gt;Because Drayman runs a component server-side, we can use any Node.js library. In our case we will use &lt;code&gt;fs&lt;/code&gt; module.&lt;/p&gt;

&lt;p&gt;Let's read file names from project root directory and fill &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; options with them:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;promises&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;fs&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;fs&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;component&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;DraymanComponent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;files&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;fs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;readdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;includes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Select a file to view it directly from file system&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;select&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;files&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;fileName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;option&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;fileName&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;option&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;select&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;br&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;pre&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;pre&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Right now our component is only showing some elements without any interactivity. Our next step will be to add it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#reacting-to-user-actions"&gt;
  &lt;/a&gt;
  Reacting to user actions
&lt;/h3&gt;

&lt;p&gt;We need to remember which file user has selected to show it's contents. It can be done by using &lt;code&gt;onchange&lt;/code&gt; event attribute and attaching a function which will be &lt;a href="http://www.drayman.io/docs/components-in-depth/handling-events"&gt;executed server-side&lt;/a&gt;. We also need to add &lt;code&gt;value&lt;/code&gt; attribute to each &lt;code&gt;option&lt;/code&gt; so &lt;code&gt;select&lt;/code&gt; would know which option was selected.&lt;/p&gt;

&lt;p&gt;Let's also add &lt;code&gt;fs.readFile&lt;/code&gt; function inside &lt;code&gt;&amp;lt;pre&amp;gt;&lt;/code&gt; tag so Drayman would read file contents during re-render. We won't show &lt;code&gt;pre&lt;/code&gt; until file is actually selected:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;promises&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;fs&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;fs&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;component&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;DraymanComponent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;files&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;fs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;readdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;includes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;selectedFile&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Select a file to view it directly from file system&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;select&lt;/span&gt;
          &lt;span class="na"&gt;onchange&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;selectedFile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;files&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;fileName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;option&lt;/span&gt; &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;fileName&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;fileName&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;option&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;select&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;br&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;selectedFile&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;pre&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;fs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;readFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;selectedFile&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;utf-8&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;pre&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you make a selection from dropdown, you will see that nothing happens on page - file contents doesn't appear. That is because with Drayman you must strictly tell when a component needs to be re-rendered. It can be done by using a special &lt;a href="http://www.drayman.io/docs/components-in-depth/helpers/introduction"&gt;helper function&lt;/a&gt; &lt;code&gt;forceUpdate&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Import it and add to &lt;code&gt;onchange&lt;/code&gt; event after selected file was saved:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;promises&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;fs&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;fs&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;component&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;DraymanComponent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;forceUpdate&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;files&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;fs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;readdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;includes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;selectedFile&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Select a file to view it directly from file system&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;select&lt;/span&gt;
          &lt;span class="na"&gt;onchange&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;selectedFile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;forceUpdate&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;files&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;fileName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;option&lt;/span&gt; &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;fileName&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;fileName&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;option&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;select&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;br&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;selectedFile&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;pre&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;fs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;readFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;selectedFile&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;utf-8&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;pre&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now our component is complete and file contents is shown on select:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YQa0-OaA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b0ed55qu01a43ofyx938.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YQa0-OaA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b0ed55qu01a43ofyx938.gif" alt="blog-getting-started-final-result"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;We have built a component which combines server-side logic and client-side view in a single script.&lt;/p&gt;

&lt;p&gt;If this felt interesting to you, visit &lt;a href="http://www.drayman.io/"&gt;official docs&lt;/a&gt; to deep dive into a Drayman framework!&lt;/p&gt;

</description>
      <category>drayman</category>
      <category>node</category>
      <category>typescript</category>
      <category>jsx</category>
    </item>
    <item>
      <title>#beginner #digitalmarketing #zuriteam #tech</title>
      <author>emeraldriches</author>
      <pubDate>Tue, 17 Aug 2021 15:54:48 +0000</pubDate>
      <link>https://dev.to/emeraldriches/beginner-digitalmarketing-zuriteam-tech-icn</link>
      <guid>https://dev.to/emeraldriches/beginner-digitalmarketing-zuriteam-tech-icn</guid>
      <description>&lt;p&gt;&lt;a href="https://zuri.team"&gt;https://zuri.team&lt;/a&gt;&lt;br&gt;
My name is Ogaranya Eziaku, I'm a computer science student. Learnt about the internship and got registered.&lt;br&gt;
By the end of the 8 weeks, I'll love to know more about tech, move with the change in the world, make more friends in tech world, manage my time well because every task has a deadline and finally make cool cash 😎.&lt;br&gt;
Figma tutorial&lt;br&gt;
&lt;a href="https://youtu.be/1MbQaYCCzzI"&gt;https://youtu.be/1MbQaYCCzzI&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Using Git&lt;br&gt;
&lt;a href="https://youtu.be/SWYqp7iY_Tc"&gt;https://youtu.be/SWYqp7iY_Tc&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Html tutorial&lt;br&gt;
&lt;a href="https://youtu.be/UB1O30fR-EE"&gt;https://youtu.be/UB1O30fR-EE&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Python tutorial&lt;br&gt;
&lt;a href="https://youtu.be/nffRKEXks_Q"&gt;https://youtu.be/nffRKEXks_Q&lt;/a&gt;&lt;br&gt;
&lt;a href="https://training.zuri.team"&gt;https://training.zuri.team&lt;/a&gt; &lt;/p&gt;

</description>
    </item>
    <item>
      <title>How to get started with WordPress Hooks in Javascript</title>
      <author>David Woolf</author>
      <pubDate>Tue, 17 Aug 2021 15:54:33 +0000</pubDate>
      <link>https://dev.to/david_woolf/how-to-get-started-with-wordpress-hooks-in-javascript-400o</link>
      <guid>https://dev.to/david_woolf/how-to-get-started-with-wordpress-hooks-in-javascript-400o</guid>
      <description>&lt;p&gt;WordPress has provided hooks in PHP for years and they recently released a version for Javascript. Hooks allow different parts of your code to augment values or perform additional actions. When referring to actions and filters, we'll be using the term "hooks" to discuss both. If you see the words "action" or "filter", assume we're discussing functionality that only relates to only that hook.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-start-using-wordpress-hooks-in-javascript"&gt;
  &lt;/a&gt;
  How to start using WordPress hooks in Javascript
&lt;/h2&gt;

&lt;p&gt;Before handing WordPress hooks in Javascript, make sure you are coding in a JS file that has access to the global &lt;code&gt;wp&lt;/code&gt; javascript variable, or that you are using the &lt;code&gt;@wordpress/hooks&lt;/code&gt; npm package&lt;/p&gt;

&lt;p&gt;This article will be using the wp global variables hook endpoints for coding examples. If you are enqueuing your javascript correctly in WordPress, you should already have access to this variable. You can confirm this by doing &lt;code&gt;console.log(wp.hooks)&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#adding-your-own-hooks"&gt;
  &lt;/a&gt;
  Adding your own hooks
&lt;/h2&gt;

&lt;p&gt;Adding actions and filters in Javascript is similar to PHP:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// actions
wp.hooks.addAction('hookName', 'namespace', callback, priority)

// filters
wp.hooks.addFilter('hookName', 'namespace', callback, priority)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The parameters for both hook types are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;hookName&lt;/strong&gt;: the name of your action or filter, which you'll use to call the hook&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;namespace&lt;/strong&gt;: a custom namespace (for example: your product name).&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;callback&lt;/strong&gt;: the function that will execute your hook &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;priority&lt;/strong&gt;: the order in which your hook fires&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I'm not sure why the namespace parameter exists because you don't use it when calling a hook (although you do when removing one). To prevent duplicate hook names, I would recommend adding a namespace to your hook name as well.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#applying-hooks-in-your-code"&gt;
  &lt;/a&gt;
  Applying hooks in your code
&lt;/h2&gt;

&lt;p&gt;Just like with PHP, you have access to a couple of functions to call your filters and actions:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// actions
wp.hooks.doAction('hookName', ..args)

// filters
wp.hooks.applyFilters('hookName', 'content', ...args)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Notice how we don't refer to the namespace here, which is why I recommend adding one to your hook name.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Reminder: filters take a default value before the args list, and should return a value to a variable. Actions should execute code and not return anything.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;With these four API methods, you can implement a Javascript version of WordPress's hooks system.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#troubleshooting-when-hooks-dont-fire-in-the-correct-order"&gt;
  &lt;/a&gt;
  Troubleshooting when hooks don't fire in the correct order
&lt;/h2&gt;

&lt;p&gt;An issue I ran into the first time I tried to use the &lt;code&gt;wp.hooks.addFilter&lt;/code&gt; method was inconsistent filter execution.&lt;/p&gt;

&lt;p&gt;I was trying to pass a string through two &lt;code&gt;addFilter&lt;/code&gt; calls in separate plugins and I wanted the end value to include any modifications in each callback. Here is how I enqueued my javascript files in PHP (split between two plugin.php files):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// first plugin
wp_enqueue_script(
    'ndx-first-plugin-script', 
    plugin_dir_url(__FILE__) . 'dist/js/first.js', 
    [], 
    '1.0.0', 
    true
);

// second plugin
wp_enqueue_script(
    'ndx-second-plugin-script',
     plugin_dir_url(__FILE__) . 'dist/js/second.js',
     [],
     '1.0.0',
     true
);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In my first.js file I created a filter that would return "I am the beginning" prepended to a passed in value:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// ndx-first-plugin-script (first.js)
wp.hooks.addFilter(
    "ndx_change_string",
    "index",
    (value) =&amp;gt; {
        return `I am the beginning. ${value}`
    },
    10
)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In my second.js file, I added the same filter hook with a higher (read: lesser) priority and appended "I am the end" to the passed-in value:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// ndx-second-plugin-script (second.js)
wp.hooks.addFilter(
    "ndx_change_string",
    "index",
    (value) =&amp;gt; {
        return `${value} I am the end.`
    },
    20
)

console.log(wp.hooks.applyFilters("ndx_change_string", ""))
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Because my apply calls passed in empty strings I expected the result: "I am the beginning. I am the end." but what I got was "I am the end."&lt;/p&gt;

&lt;p&gt;Unfortunately, my second plugin's javascript loads first and doesn't see the first plugin's filter value (this can happen in PHP too, by the way). You will generally use filters to augment a standalone value, but it's also common to use them to add and remove items from arrays so sometimes the order is important.&lt;/p&gt;

&lt;p&gt;There are a couple of ways to solve this problem:&lt;/p&gt;

&lt;p&gt;Ensure the plugin where you plan to call &lt;code&gt;applyFilters&lt;/code&gt; is enqueued as a dependency in your other scripts:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// second plugin
wp_enqueue_script(
    'ndx-second-plugin-script',
     plugin_dir_url(__FILE__) . 'dist/js/second.js',
    ['ndx-first-plugin-script'], // add your first plugin script as a required dependency
    '1.0.0',
    true
);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Or utilize the built-in &lt;code&gt;hookAdded&lt;/code&gt; method to call additional filters after the first one is created:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;wp.hooks.addAction(
    "hookAdded",
    "core/i18n",
    (name, functionName, callback, priority) =&amp;gt; {
        if(name == "ndx_change_string" &amp;amp;&amp;amp; priority == 10) {
               // add additional filters here after the first one fires
        }
    },
    10
)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note that the &lt;code&gt;hookAdded&lt;/code&gt; method can be fragile and buggy and it would be very easy to get stuck in an infinite loop if two addFilter calls had a priority of 10.&lt;/p&gt;

</description>
      <category>wordpress</category>
      <category>javascript</category>
    </item>
    <item>
      <title>4G Mobile Proxies user's experience</title>
      <author>AlexWilsonJr.</author>
      <pubDate>Tue, 17 Aug 2021 15:54:15 +0000</pubDate>
      <link>https://dev.to/alexwilsonjr/4g-mobile-proxies-user-s-experience-h89</link>
      <guid>https://dev.to/alexwilsonjr/4g-mobile-proxies-user-s-experience-h89</guid>
      <description>&lt;p&gt;Hey.&lt;/p&gt;

&lt;p&gt;I'm not really into reviews and all that sort of things so don't be judging=)&lt;/p&gt;

&lt;p&gt;Everyone who works in the digital field is looking for ways to improve their work processes and minimize risks. &lt;/p&gt;

&lt;p&gt;A private mobile proxy is a great tool for working with social media and instant messengers. People use smartphones for Facebook, Instagram, etc. Social media are aware of this and therefore are loyal to the IP addresses of mobile providers.&lt;/p&gt;

&lt;p&gt;The telecom providers have very few bunches of these IPs: a lot of people use thousands of addresses. The algorithms of social media are unable to block or flag such IPs because it will take effect on the huge number of customers.&lt;/p&gt;

&lt;p&gt;As a SEO specialist, I use 4G Mobile IPs for work regularly. I've tried different providers like Proxy Guys, DSL Rentals, Storm Proxies, Proxy Army, etc. Well, some of them are stable, some not. Many providers are overpriced considering the service you get but I think DSL Rentals looks like kinda exception. Their service is worth every single dime.&lt;/p&gt;

&lt;p&gt;I was surprised by the opportunity to change IP every minute. I've never had such a clean IP pool no matter what state I'm using.  For all the time of usage, I've never faced the problem of black-listed IPs.&lt;/p&gt;

&lt;p&gt;By the way, I've noticed they have Residential DSL lines as well if you need to work in a specific state or even city. Those proxies are not shared, but individual. Therefore when you buy a line you are the only user of a residential internet connection which is really cool. &lt;/p&gt;

&lt;p&gt;I can recommend them if you're into SEO and all this marketing stuff.&lt;/p&gt;

&lt;p&gt;Proxy providers that I used:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://proxyguys.com/"&gt;https://proxyguys.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://proxyarmy.com/"&gt;https://proxyarmy.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://panel.dslrentals.com/"&gt;https://panel.dslrentals.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://stormproxies.com/"&gt;https://stormproxies.com/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>proxy</category>
      <category>seo</category>
      <category>marketing</category>
      <category>insights</category>
    </item>
    <item>
      <title>How to build a simple website using HTML and Bootstrap 5</title>
      <author>Tiiny Host</author>
      <pubDate>Tue, 17 Aug 2021 15:51:03 +0000</pubDate>
      <link>https://dev.to/rfoot8/how-to-build-a-simple-website-using-html-and-bootstrap-5-20bb</link>
      <guid>https://dev.to/rfoot8/how-to-build-a-simple-website-using-html-and-bootstrap-5-20bb</guid>
      <description>&lt;p&gt;Freelancing is becoming competitive day by day. To succeed in this era, you need to have a compelling and stellar portfolio website that can display your customer's testimonials, your previous samples, and your expertise. &lt;/p&gt;

&lt;p&gt;For this, you need to have a unique portfolio website. So if you're looking to build a custom website, this tutorial is for you!&lt;/p&gt;

&lt;p&gt;These are Five easy and simple steps to build your HTML website:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Set up a new HTML project&lt;/li&gt;
&lt;li&gt;Add the Hero Section&lt;/li&gt;
&lt;li&gt;Add Projects&lt;/li&gt;
&lt;li&gt;Add a Secondary CTA&lt;/li&gt;
&lt;li&gt;Deploy your website using tiiny.host&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You can learn the entire process of building your website at &lt;a href="https://tiiny.host/blog/how-to-build-a-simple-website-for-your-freelance-business-using-html-and-bootstrap-5/"&gt;https://tiiny.host/blog/how-to-build-a-simple-website-for-your-freelance-business-using-html-and-bootstrap-5/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>html</category>
      <category>webdev</category>
      <category>wordpress</category>
      <category>programming</category>
    </item>
    <item>
      <title>AWS Certified Cloud Practitioner CLF-C01 Exam Questions Part 5</title>
      <author>awslagi.com</author>
      <pubDate>Tue, 17 Aug 2021 15:45:25 +0000</pubDate>
      <link>https://dev.to/iam_awslagi/aws-certified-cloud-practitioner-clf-c01-exam-questions-part-5-1f25</link>
      <guid>https://dev.to/iam_awslagi/aws-certified-cloud-practitioner-clf-c01-exam-questions-part-5-1f25</guid>
      <description>&lt;p&gt;Source:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    AWS: https://www.awslagi.com
    GCP: https://www.gcp-examquestions.com
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A company has a compliance requirement to record and evaluate configuration changes, as well as perform remediation actions on AWS resources. Which AWS service should the company use?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. AWS Config
B. AWS Secrets Manager
C. AWS CloudTrail
D. AWS Trusted Advisor
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: A&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A company wants to provide one of its employees with access to Amazon RDS. The company also wants to limit the interaction to only the AWS CLI and AWS software development kits (SDKs). Which combination of actions should the company take to meet these requirements while following the principles of least privilege? (Choose two.)&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Create an IAM user and provide AWS Management Console access only.
B. Create an IAM user and provide programmatic access only.
C. Create an IAM role and provide AWS Management Console access only.
D. Create an IAM policy with administrator access and attach it to the IAM user.
E. Create an IAM policy with Amazon RDS access and attach it to the IAM user.
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: B E&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Which AWS service gives users on-demand, self-service access to AWS compliance control reports?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. AWS Config
B. Amazon GuardDuty
C. AWS Trusted Advisor
D. AWS Artifact
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: D&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A web developer is concerned that a DDoS attack could target an application. Which AWS services or features can help protect against such an attack? (Choose two.)&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. AWS Shield
B. AWS CloudTrail
C. Amazon CloudFront
D. AWS Support Center
E. AWS Service Health Dashboard
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: A C&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Which AWS Trusted Advisor check is available to all AWS users?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Core checks
B. All checks
C. Cost optimization checks
D. Fault tolerance checks
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: A&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A user has limited knowledge of AWS services, but wants to quickly deploy a scalable Node.js application in the AWS Cloud. Which service should be used to deploy the application?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. AWS CloudFormation
B. AWS Elastic Beanstalk
C. Amazon EC2
D. AWS OpsWorks
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: B&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Which tool can be used to create alerts when the actual or forecasted cost of AWS services exceeds a certain threshold?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Cost Explorer
B. AWS Budgets
C. AWS Cost and Usage Report
D. AWS CloudTrail
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: B&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;AnyCompany recently purchased Example Corp. Both companies use AWS resources, and AnyCompany wants a single aggregated bill. Which option allows AnyCompany to receive a single bill?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Example Corp. must submit a request to its AWS solutions architect or AWS technical account manager to link the accounts and consolidate billing.
B. AnyCompany must create a new support case in the AWS Support Center requesting that both bills be combined.
C. Send an invitation to join the organization from AnyCompany’s AWS Organizations master account to Example Corp.
D. Migrate the Example Corp. VPCs, Amazon EC2 instances, and other resources into the AnyCompany AWS account.
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: C&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A company is building an application that requires the ability to send, store, and receive messages between application components. The company has another requirement to process messages in first-in, first-out (FIFO) order. Which AWS service should the company use?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. AWS Step Functions
B. Amazon Simple Notification Service (Amazon SNS)
C. Amazon Kinesis Data Streams
D. Amazon Simple Queue Service (Amazon SQS)
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: D&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Which AWS services offer compute capabilities? (Choose two.)&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Amazon EC2
B. Amazon S3
C. Amazon Elastic Block Store (Amazon EBS)
D. Amazon Cognito
E. AWS Lambda
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: A E&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Which AWS service or feature requires an internet service provider (ISP) and a colocation facility to be implemented?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. AWS VPN
B. Amazon Connect
C. AWS Direct Connect
D. Internet gateway
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: C&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Which AWS service allows customers to purchase unused Amazon EC2 capacity at an often discounted rate?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Reserved Instances
B. On-Demand Instances
C. Dedicated Instances
D. Spot Instances
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: D&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Which AWS service provides the ability to host a NoSQL database in the AWS Cloud?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Amazon Aurora
B. Amazon DynamoDB
C. Amazon RDS
D. Amazon Redshift
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: B&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A company wants to be notified when its AWS Cloud costs or usage exceed defined thresholds. Which AWS service will support these requirements?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. AWS Budgets
B. Cost Explorer
C. AWS CloudTrail
D. Amazon Macie
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: A&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;What is the customer’s responsibility when using AWS Lambda?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Operating system configuration
B. Application management
C. Platform management
D. Code encryption
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: B&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Which of the following is the customer’s responsibility when using Amazon RDS?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Patching the operating system of underlying hardware
B. Controlling traffic to and from the database through security groups
C. Running backups that enable point-in-time recovery of a DB instance
D. Replacing failed DB instances
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: B&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Which tool can be used to identify scheduled changes to the AWS infrastructure?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. AWS Personal Health Dashboard
B. AWS Trusted Advisor
C. Billing Dashboard
D. AWS Config
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: D&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A workload on AWS will run for the foreseeable future by using a consistent number of Amazon EC2 instances. What pricing model will minimize cost while ensuring that compute resources remain available?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Dedicated Hosts
B. On-Demand Instances
C. Spot Instances
D. Reserved Instances
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: D&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;What are the advantages of deploying an application with Amazon EC2 instances in multiple Availability Zones? (Choose two.)&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Preventing a single point of failure
B. Reducing the operational costs of the application
C. Allowing the application to serve cross-region users with low latency
D. Increasing the availability of the application
E. Increasing the load of the application
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: A D&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A company is running a self-managed Oracle database directly on Amazon EC2 for its steady-state database. The company wants to reduce compute costs. Which option should the company use to maximize savings over a 3-year term?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. EC2 Dedicated Instances
B. EC2 Spot Instances
C. EC2 Reserved Instances
D. EC2 On-Demand Instances
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: C&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;How should a web application be deployed to ensure high availability in the AWS Cloud?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Deploy multiple instances of the application in multiple Availability Zones.
B. Deploy multiple instances of the application in a single Availability Zone.
C. Deploy the application to a compute-optimized Amazon EC2 instance in a single Availability Zone.
D. Deploy the application in one Amazon EC2 instance in an Auto Scaling group.
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: A&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A company has an AWS-hosted website located behind an Application Load Balancer. The company wants to safeguard the website from SQL injection or cross- site scripting. Which AWS service should the company use?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Amazon GuardDuty
B. AWS WAF
C. AWS Trusted Advisor
D. Amazon Inspector
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: B&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Which AWS service can be used to retrieve compliance reports on demand?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. AWS Secrets Manager
B. AWS Artifact
C. AWS Security Hub
D. AWS Certificate Manager
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: B&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A company wants to connect to AWS over a private, low-latency connection from its remote office. What is the recommended method to meet these requirements?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Create a VPN tunnel
B. Connect across the public internet
C. Use VPC peering to create a connection.
D. Use AWS Direct Connect.
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: D&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Which AWS Cloud design principles can help increase reliability? (Choose two.)&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Using monolithic architecture
B. Measuring overall efficiency
C. Testing recovery procedures
D. Adopting a consumption model
E. Automatically recovering from failure
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: C E&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Which AWS service or feature is used to send both text and email messages from distributed applications?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Amazon Simple Notification Service (Amazon SNS)
B. Amazon Simple Email Service (Amazon SES)
C. Amazon CloudWatch alerts
D. Amazon Simple Queue Service (Amazon SQS)
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: A&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A company wants to ensure its infrastructure is designed for fault tolerance and business continuity in the event of an environmental disruption. Which AWS infrastructure component should the company replicate across?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Edge locations
B. Availability Zones
C. Regions
D. Amazon Route 53
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: C&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Which AWS service should a cloud practitioner use to identify security vulnerabilities of an AWS account?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. AWS Secrets Manager
B. Amazon Cognito
C. Amazon Macie
D. AWS Trusted Advisor
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: D&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Which AWS service can be used to privately store and manage versions of source code?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. AWS CodeBuild
B. AWS CodeCommit
C. AWS CodePipeline
D. AWS CodeStar
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: B&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Which AWS service or feature can be used to prevent SQL injection attacks?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Security groups
B. Network ACLs
C. AWS WAF
D. IAM policy
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: C&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;How can AWS enable a company to control expenses as an application’s usage changes unpredictably?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. AWS will refund the cost difference if a customer moves to larger servers.
B. The application can be built to scale up or down automatically as resources are needed
C. Spot instances will automatically be used if the price is lower than on-demand instances.
D. Amazon CloudWatch will automatically predict what resources are needed.
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: B&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A pharmaceutical company operates its infrastructure in a single AWS Region. The company has thousands of VPCs in a various AWS accounts that it wants to interconnect. Which AWS service or feature should the company use to help simplify management and reduce operational costs?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. VPC endpoint
B. AWS Direct Connect
C. AWS Transit Gateway
D. VPC peering
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: C&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Which cloud computing benefit does AWS demonstrate with its ability to offer lower variable costs as a result of high purchase volumes?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Pay-as-you-go pricing
B. High availability
C. Global reach
D. Economies of scale
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: A&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The AWS IAM best practice for granting least privilege is to:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. apply an IAM policy to an IAM group and limit the size of the group.
B. require multi-factor authentication (MFA) for all IAM users.
C. require each IAM user who has different permissions to have multiple passwords.
D. apply an IAM policy only to IAM users who require it.
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: D&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A company is building an application that needs to deliver images and videos globally with minimal latency. Which approach can the company use to accomplish this in a cost effective manner?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Deliver the content through Amazon CloudFront.
B. Store the content on Amazon S3 and enable S3 cross-region replication.
C. Implement a VPN across multiple AWS Regions.
D. Deliver the content through AWS PrivateLink.
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: A&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A company wants to track AWS resource configuration changes for compliance reasons. Which AWS feature can be used to meet this requirement?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. AWS Cost and Usage Report
B. AWS Organizations service control policies (SCPs)
C. AWS Config rules
D. VPC Flow Logs
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: C&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A company is expecting a short-term spike in internet traffic for its application. During the traffic increase, the application cannot be interrupted. The company also needs to minimize cost and maximize flexibility. Which Amazon EC2 instance type should the company use to meet these requirements?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. On-Demand Instances
B. Spot Instances
C. Reserved Instances
D. Dedicated Hosts
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: A&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;What are the benefits of consolidated billing for AWS Cloud services? (Choose two.)&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Volume discounts
B. A minimal additional fee for use
C. One bill for multiple accounts
D. Installment payment options
E. Custom cost and usage budget creation
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: A C&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;An external auditor has requested that a company provide a list of all its IAM users, including the status of users’ credentials and access keys. What it the SIMPLEST way to provide this information?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Create an IAM user account for the auditor, granting the auditor administrator permissions.
B. Take a screenshot of each user’s page in the AWS Management Console, then provide the screenshots to the auditor.
C. Download the IAM credential report, then provide the report to the auditor.
D. Download the AWS Trusted Advisor report, then provide the report to the auditor.
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: C&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A company wants to transfer petabytes of data as quickly as possible from on-premises locations to the AWS Cloud. Which AWS service should the company use?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. AWS Snowball
B. AWS Global Accelerator
C. Amazon S3 Transfer Acceleration
D. Amazon Connect
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: A&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Which of the following services can be used to block network traffic to an instance? (Choose two.)&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Security groups
B. Amazon Virtual Private Cloud (Amazon VPC) flow logs
C. Network ACLs
D. Amazon CloudWatch
E. AWS CloudTrail
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: A C&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;According to the AWS shared responsibility model, which of the following are AWS responsibilities? (Choose two.)&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Network infrastructure and virtualization of infrastructure
B. Security of application data
C. Guest operating systems
D. Physical security of hardware
E. Credentials and policies
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: A D&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A company needs to track the activity in its AWS accounts, and needs to know when an API call is made against its AWS resources. Which AWS tool or service can be used to meet these requirements?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Amazon CloudWatch
B. Amazon Inspector
C. AWS Cloud Trail
D. AWS IAM
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: C&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Under the AWS shared responsibility model, which task is the customer’s responsibility when managing AWS Lambda functions?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Creating versions of Lambda functions
B. Maintaining server and operating systems
C. Scaling Lambda resources according to demand
D. Updating the Lambda runtime environment
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: A&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Which AWS service automatically handles application health monitoring?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Amazon API Gateway
B. AWS Elastic Beanstalk
C. AWS Lambda
D. AWS Config
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: B&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A user can increase operational efficiency in the AWS Cloud by:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. leveraging AWS managed services.
B. right-sizing AWS infrastructure.
C. manually creating all necessary resources.
D. managing their own software license.
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: A&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;According to security best practices, how should an Amazon EC2 instance be given access to an Amazon S3 bucket?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Hard code an IAM user’s secret key and access key directly in the application, and upload the file.
B. Store the IAM user’s secret key and access key in a text file on the EC2 instance, read the keys, then upload the file.
C. Have the EC2 instance assume a role to obtain the privileges to upload the file.
D. Modify the S3 bucket policy so that any service can upload to it at any time.
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: C&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Which of the following IT tasks does AWS perform to offload a company’s IT resource management responsibilities? (Choose two.)&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Configuring operating system firewalls
B. Setting up access controls for data
C. Backing up databases
D. Configuring database user accounts
E. Installing operating systems
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: C E&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Which AWS service can help a company detect an outage of its website servers and redirect users to alternate servers?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Amazon CloudFront
B. Amazon GuardDuty
C. Amazon Route 53
D. AWS Trusted Advisor
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: C&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Which AWS Trusted Advisor feature is available exclusively to users with AWS Business Support or AWS Enterprise Support?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Notification setup
B. Refresh checks
C. AWS Support API
D. Action links
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: C&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The AWS global infrastructure consists of Regions, Availability Zones, and what else?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. VPCs
B. Data centers
C. Dark fiber network links
D. Edge locations
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: D&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A media company wants to distribute video content to millions of users worldwide over the internet. The company wants to use the AWS global network backbone to distribute cached content with low latency and high data transfer speeds. Which AWS service will meet these requirements?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Amazon CloudFront
B. AWS Global Accelerator
C. AWS Direct Connect
D. Amazon Connect
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: A&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A bank needs to store recordings of calls made to its contact center for 6 years. The recordings must be accessible within 48 hours from the time they are requested.&lt;br&gt;
Which AWS service will provide a secure and cost-effective solution for retaining these files?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Amazon DynamoDB
B. Amazon S3 Glacier
C. Amazon Connect
D. Amazon ElastiCache
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: B&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Which AWS service or feature provides information about ongoing or upcoming scheduled events that can affect an AWS account?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. AWS Config
B. AWS Systems Manager
C. AWS Personal Health Dashboard
D. AWS Trusted Advisor
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: C&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Which statement is true about AWS global infrastructure?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Availability Zones can span multiple AWS Regions.
B. A VPC can have different subnets in different AWS Regions.
C. AWS Regions consist of multiple Availability Zones.
D. A single subnet can span multiple Availability Zones.
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: C&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A company wants to securely access an Amazon S3 bucket from an Amazon EC2 instance without accessing the internet. What should the company use to accomplish this goal?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. VPN connection
B. Internet gateway
C. VPC endpoint
D. NAT gateway
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: D&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Which of the following is an AWS best practice for managing an AWS account root user?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Keep the root user password with the security team.
B. Enable multi-factor authentication (MFA) for the root user.
C. Create an access key for the root user.
D. Keep the root user password consistent for compliance purposes.
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: B&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A company hosts images in an Amazon S3 bucket for a public-facing website that is viewed by millions of users around the globe. Which AWS service will deliver this content with reduced latency?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. AWS WAF
B. Amazon CloudWatch
C. Amazon Cloud Front
D. AWS CloudFormation
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: C&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A company has refined its workload to use specific AWS services to improve efficiency and reduce cost. Which best practice for cost governance does this example show?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A. Resource controls
B. Cost allocation
C. Architecture optimization
D. Tagging enforcement
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Answer: C&lt;/p&gt;

</description>
      <category>aws</category>
    </item>
  </channel>
</rss>
