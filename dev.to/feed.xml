<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Space Invaders Chaos.</title>
      <author>FRADAR</author>
      <pubDate>Tue, 16 Nov 2021 20:34:44 +0000</pubDate>
      <link>https://dev.to/fradar/space-invaders-chaos-1npd</link>
      <guid>https://dev.to/fradar/space-invaders-chaos-1npd</guid>
      <description>&lt;p&gt;This is basically Space Invaders on Steroids. Use the Arrow Keys to move, and spacebar to shoot the alien spaceships. Comment your score once you finish! (This is a very small game, so please don't expect much.)&lt;/p&gt;

&lt;p&gt;Try the game here:&lt;br&gt;
&lt;a href="https://codepen.io/FRADAR/full/jOywLmP"&gt;https://codepen.io/FRADAR/full/jOywLmP&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Like my games?&lt;br&gt;
Want to see more?&lt;br&gt;
Follow me here:&lt;br&gt;
&lt;a href="https://codepen.io/FRADAR"&gt;https://codepen.io/FRADAR&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thank you for your time.&lt;br&gt;
Bye!&lt;/p&gt;

</description>
      <category>codepen</category>
      <category>javascript</category>
      <category>gamedev</category>
      <category>2d</category>
    </item>
    <item>
      <title>Top eCommerce Website Design Features and Tips in 2021</title>
      <author>PNM Group</author>
      <pubDate>Tue, 16 Nov 2021 19:39:08 +0000</pubDate>
      <link>https://dev.to/pnmgroup/top-ecommerce-website-design-features-and-tips-in-2021-5ekf</link>
      <guid>https://dev.to/pnmgroup/top-ecommerce-website-design-features-and-tips-in-2021-5ekf</guid>
      <description>&lt;p&gt;Your eCommerce store isn't complete until it is able to engage and keep customers. In order to do this, retailers may need to develop an appealing and user-friendly eCommerce website. If your eCommerce store is able to make buying easier and make it easier for customers to buy, you'll see the most significant increase in sales.&lt;/p&gt;

&lt;p&gt;In order to achieve this, retailers may want to invest in specific design elements in order to provide a seamless interface to visitors. Customers must be able to find information. These features will enhance the way that customers interact in the eCommerce store and provide them with a the best experience. What is more, PNM Group is one of the leading &lt;a href="https://pnmgroup.co/creative"&gt;Creative Agency Toronto&lt;/a&gt;. Design, Development, SEO, IDX Canada, Branding, and Beyond.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2bjz2EQ3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.startupguys.net/wp-content/uploads/2020/04/ecommerce-website.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2bjz2EQ3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.startupguys.net/wp-content/uploads/2020/04/ecommerce-website.png" alt="E-Commerce Website Design" width="750" height="412"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Store owners will be able to transform their typical day-to-day customers into long-term customers. Here are the features that an eCommerce retailer should try to incorporate in their eCommerce store before 2021.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-most-important-design-features-to-ecommerce-sites"&gt;
  &lt;/a&gt;
  The most important design features to eCommerce sites
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Search Wizard&lt;/li&gt;

&lt;li&gt;Carousel Slides&lt;/li&gt;

&lt;li&gt;Megamenu&lt;/li&gt;

&lt;li&gt;Newsletter Pop-up&lt;/li&gt;

&lt;li&gt;Product Comparison&lt;/li&gt;

&lt;li&gt;Banners&lt;/li&gt;

&lt;li&gt;Reviews&lt;/li&gt;

&lt;li&gt;Help Desk&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#search-wizard"&gt;
  &lt;/a&gt;
  Search Wizard
&lt;/h3&gt;

&lt;p&gt;It is not everyone's favorite to click on a link to search for their favourite products. It is possible that they prefer to type in the information and then go to the item right away. In this case, browsing through the website can deter the desire to buy. Therefore, retailers will require an advanced tool to find products on their site.&lt;/p&gt;

&lt;p&gt;The search wizard will search the web, analyze and present huge volumes of relevant data in nearly real-time. Not only that it will be able to pull relevant data from the moment the user begins writing (minimum 3 characters). Users will also have the option to see every result for the search query they typed.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#carousel-slides"&gt;
  &lt;/a&gt;
  Carousel Slides
&lt;/h3&gt;

&lt;p&gt;Although it's not appropriate for every eCommerce company, it's an effective method to attract visitors straight off your homepage. Merchants can display top-selling products as well as other promotions that can draw interest of users. This feature has been proven to be informative and impactful.&lt;/p&gt;

&lt;p&gt;Integrating this into your online store won't require any effort. It also gives sellers the opportunity to display important information when users arrive at the home page. Display captivating and convincing images of your products that entice customers to click, go to the product's page and buy them.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#megamenu"&gt;
  &lt;/a&gt;
  Megamenu
&lt;/h3&gt;

&lt;p&gt;A well-designed mega menu that efficiently organizes all your products in subcategories and categories will be extremely useful to the users of your site. Customers will be able navigate the site by simply navigating through the menu. It is more than anything else it enhances the experience.&lt;/p&gt;

&lt;p&gt;Merchants are able to first separate all their SKUs , and then group them into categories and subcategories of the menu. Users will be able to find the item. Merchants may also include images and icons to every label on this mega menu. Make sure to design your site mobile-friendly.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#newsletter-popup"&gt;
  &lt;/a&gt;
  Newsletter Pop-up
&lt;/h3&gt;

&lt;p&gt;One method to stay on top of your customers who are loyal is to send them an email newsletter. Include a pop-up on the home page , which is activated after a certain time. Anyone who visits your website must experience them as a pop-up. The pop-up can collect an email address and send details on sales, deals patterns, trends, and other important information.&lt;/p&gt;

&lt;p&gt;Newsletters are the best method to draw customers into your shop. Even non-registered customers can convert after seeing a great bargain in the emails. Merchants are able to interact with customers by providing tips, trivia, and general news about eCommerce and more. Newsletters are the most effective way to establish a connection with your intended audience.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#product-comparison"&gt;
  &lt;/a&gt;
  Product Comparison
&lt;/h3&gt;

&lt;p&gt;Every now and then, consumers may feel the need to look at comparing two or more products in order to determine which one is the best for them. In this situation, having an instrument for comparing products simplifies their problem and helps ease their decision-making process.&lt;/p&gt;

&lt;p&gt;Being able to compare several products from different angles will help users gain greater insight into their options. Users must be able look at dimensions, color of the product, weight, price and more, based on the specific industry. Let customers get the most complete overview of technical aspects of the various products.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#banners"&gt;
  &lt;/a&gt;
  Banners
&lt;/h3&gt;

&lt;p&gt;The display of banners on the homepage, particularly animated ones, has been proven to draw attention of visitors. You can include anything you want however ensure that your content is as striking bright, vibrant, and lively as you can. The most attractive and attractive banners are highly visible.&lt;/p&gt;

&lt;p&gt;Everything that is displayed in the banner will be noticed by the people who visit. Merchants can have the top-selling items, any item available for sale, or even the ability to use a countdown timer in order to increase the an urgency. There is a guarantee that people will be enticed to click. Therefore it is very likely that orders will go up.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#reviews"&gt;
  &lt;/a&gt;
  Reviews
&lt;/h3&gt;

&lt;p&gt;Owners of eCommerce stores can set up an area on their website for positive reviews and positive feedback including ratings. Customers will immediately feel a sense of trust and feel more confident joining with your company. Thus, any customer who encounters this information is more likely to make orders through the website. Sincere and honest reviews help the brand appear more reliable to visitors.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#help-desk"&gt;
  &lt;/a&gt;
  Help Desk
&lt;/h3&gt;

&lt;p&gt;Include a helpdesk floating on the pages of the eCommerce website as is possible. Customers can use the help desk to send tickets with regards to their orders. Any issues that arise when placing an order are able to be addressed using the form that appears when you click this widget.&lt;/p&gt;

&lt;p&gt;By submitting the form, tickets, an unique ticket number is generated. This is sent to the customer via email, and to a representative from Support team. Merchants can also make use of the unique number for consolidating each message that is exchanged in relation to the purchase.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#wishlist"&gt;
  &lt;/a&gt;
  Wishlist
&lt;/h3&gt;

&lt;p&gt;Users can include their preferred products on the Wishlist. Additionally, let them share the list with other users on the site , and make it available with social platforms. Wish Lists are an excellent option to create gift lists or shopping lists. Additionally, this useful tool can act as a reminder for the future purchases. Users can locate the product conveniently in the near future.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#calltoaction-cta"&gt;
  &lt;/a&gt;
  Call-to-action (CTA)
&lt;/h3&gt;

&lt;p&gt;Engage your users to click on your website by showing an attractive, bright and attractive CTA on different web pages on the eCommerce store. A CTA will require some kind of contact in the future.&lt;/p&gt;

&lt;p&gt;In a rational and qualitative way, make sure you have as numerous CTAs in the best way you could on the website. The user shouldn't need to click through "Contact Us" or the "Contact Us" page or to a form in order to reach an important person within your business. Additionally, PNM Group is proud to announce &lt;a href="https://pnmgroup.co/"&gt;IDX Toronto&lt;/a&gt; service for Toronto Real Estate Board - IDX Listings Only.&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>product</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>MongoDB $weeklyUpdate (October 28, 2021): Latest MongoDB Tutorials, Events, Podcasts, &amp; Streams!</title>
      <author>Adrienne Tacke</author>
      <pubDate>Tue, 16 Nov 2021 19:24:03 +0000</pubDate>
      <link>https://dev.to/mongodb/mongodb-weeklyupdate-october-28-2021-latest-mongodb-tutorials-events-podcasts-streams-1go9</link>
      <guid>https://dev.to/mongodb/mongodb-weeklyupdate-october-28-2021-latest-mongodb-tutorials-events-podcasts-streams-1go9</guid>
      <description>&lt;h2&gt;
  &lt;a href="#hi-everyone"&gt;
  &lt;/a&gt;
  👋 Hi everyone!
&lt;/h2&gt;

&lt;p&gt;Welcome to MongoDB $weeklyUpdate! &lt;/p&gt;

&lt;p&gt;Here, you'll find the latest developer tutorials, upcoming official MongoDB events, and get a heads up on our latest Twitch streams and podcast, curated by &lt;a href="https://twitter.com/AdrienneTacke"&gt;Adrienne Tacke&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Enjoy!&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#freshest-tutorials-on-devhub"&gt;
  &lt;/a&gt;
  🎓 Freshest Tutorials on &lt;a href="https://developer.mongodb.com/"&gt;DevHub&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Want to find the latest MongoDB tutorials and articles created for developers, by developers? Look no further than our &lt;a href="https://developer.mongodb.com/"&gt;DevHub&lt;/a&gt;!&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#improve-your-apps-search-results-with-autotuning"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.mongodb.com/developer/how-to/improve-your-apps-search-results-with-auto-tuning/"&gt;Improve Your App's Search Results with Auto-Tuning&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.mongodb.com/developer/author/ethan-steininger/"&gt;Ethan Steininger&lt;/a&gt; &lt;br&gt;
&lt;a href="https://www.mongodb.com/developer/author/isa-torres/"&gt;Isa Torres&lt;/a&gt; &lt;br&gt;
This blog will cover how to leverage synonyms to create a feedback loop that is self-tuning, in order to deliver incrementally more relevant search results to your users. &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#automate-the-automation-on-mongodb-atlas"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.mongodb.com/developer/article/automate-automation-mongodb-atlas/"&gt;Automate the Automation on MongoDB Atlas&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.mongodb.com/developer/author/cassiano-ziegler-bein/"&gt;Cassiano Ziegler Bein&lt;/a&gt; &lt;br&gt;
Build your own automation with MongoDB Atlas API resources.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#persistence-in-unity-using-realm"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.mongodb.com/developer/how-to/realm-how-to-add-realm-to-your-unity-project/"&gt;Persistence in Unity Using Realm&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.mongodb.com/developer/author/dominic-frei/"&gt;Dominic Frei&lt;/a&gt; &lt;br&gt;
The goal of this article is to show you how to add Realm to your Unity game and make sure your data is persisted. &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#pymongoarrow-bridging-the-gap-between-mongodb-and-your-data-analysis-app"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.mongodb.com/developer/quickstart/pymongoarrow-and-data-analysis/"&gt;PyMongoArrow: Bridging the Gap Between MongoDB and Your Data Analysis App&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://twitter.com/judy2k"&gt;Mark Smith&lt;/a&gt; &lt;br&gt;
In this tutorial, I'm going to be using a sample database you can install when creating a cluster hosted on MongoDB Atlas.   &lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#mongodb-on-twitch-amp-youtube"&gt;
  &lt;/a&gt;
  📺 MongoDB on &lt;a href="https://www.twitch.tv/mongodb"&gt;Twitch&lt;/a&gt; &amp;amp; &lt;a href="https://www.youtube.com/channel/UCK_m2976Yvbx-TyDLw7n1WA"&gt;YouTube&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;We stream tech tutorials, live coding, and talk to members of our community via &lt;a href="https://www.twitch.tv/mongodb"&gt;Twitch&lt;/a&gt; and &lt;a href="https://www.youtube.com/channel/UCK_m2976Yvbx-TyDLw7n1WA"&gt;YouTube&lt;/a&gt;. Sometimes, we even stream twice a week! Be sure to &lt;a href="https://www.twitch.tv/mongodb"&gt;follow us on Twitch&lt;/a&gt; and &lt;a href="https://www.youtube.com/channel/UCK_m2976Yvbx-TyDLw7n1WA"&gt;subscribe to our YouTube channel&lt;/a&gt; to be notified of every stream!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Latest Stream&lt;/em&gt;&lt;br&gt;
&lt;a href="https://www.twitch.tv/videos/1157005653"&gt;https://www.twitch.tv/videos/1157005653&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🍿 &lt;a href="https://www.twitch.tv/mongodb"&gt;Follow us&lt;/a&gt; on Twitch and &lt;a href="https://www.youtube.com/channel/UCK_m2976Yvbx-TyDLw7n1WA"&gt;subscribe to our YouTube channel&lt;/a&gt; so you never miss a stream!&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#%F0%9F%8E%99-last-word-on-the-mongodb-podcast"&gt;
  &lt;/a&gt;
  🎙 Last Word on the &lt;a href="https://mongodb.libsyn.com/"&gt;MongoDB Podcast&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Latest Episode&lt;/em&gt;&lt;br&gt;
&lt;iframe width="100%" height="232px" src="https://open.spotify.com/embed/episode/3RclKR2MycRH4y3qTXdlpd"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Catch up on past episodes&lt;/em&gt;:&lt;br&gt;
Ep. 82 - &lt;a href="https://open.spotify.com/episode/4z0EYeJPti4peMvq56MQlV?si=CDvQ2EBhQ2i-0Q15c4hYSg"&gt;Serverless with Chris Shum&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ep. 81 - &lt;a href="https://open.spotify.com/episode/6tEcClMmSssrOfrjBC4XbO?si=BdoTygCyS7CjwgoIPG13kQ"&gt;The Realm JavaScript SDK with Kraen Hansen&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ep. 80 - &lt;a href="https://open.spotify.com/episode/05dFJ4h2eH3PNwAadDL3Bx?si=koSjwaJ7RV6mGd10bWqF5w"&gt;Exploring Prisma with Daniel Norman&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;(Not listening on Spotify? We got you! We're most likely on your favorite podcast network, including &lt;a href="https://podcasts.apple.com/us/podcast/the-mongodb-podcast/id1500452446"&gt;Apple Podcasts&lt;/a&gt;, &lt;a href="https://player.fm/series/the-mongodb-podcast"&gt;PlayerFM&lt;/a&gt;, &lt;a href="https://podtail.com/en/podcast/the-mongodb-podcast/"&gt;Podtail&lt;/a&gt;, and &lt;a href="https://www.listennotes.com/podcasts/the-mongodb-podcast-mongodb-0g6fUKMDN_y/"&gt;Listen Notes&lt;/a&gt; 😊)&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#mongodb-devrel-around-the-interwebz"&gt;
  &lt;/a&gt;
  🌍 MongoDB DevRel around the Interwebz
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Watch our team do their thang at various conferences, meetups, and podcasts around the world (virtually, for now). Also, find external articles and guest posts from our DevRel team here!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;📅 Upcoming&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Current Month&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Oct 28: &lt;a href="https://www.conf42.com/JavaScript_2021_Lauren_Hayward_Schaefer_Raise_Your_Profile"&gt;Conf42&lt;/a&gt; &lt;br&gt;
🌟 KEYNOTE 🌟&lt;br&gt;
&lt;a href="https://twitter.com/Lauren_Schaefer"&gt;Lauren Schaefer&lt;/a&gt; will be at &lt;a href="https://www.conf42.com/JavaScript_2021_Lauren_Hayward_Schaefer_Raise_Your_Profile"&gt;Conf42&lt;/a&gt; Conference to give their Keynote "How to Raise Your Profile as a Developer (And Why You Should Bother!)"!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Next Month&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Nov 8: &lt;br&gt;
&lt;a href="https://2021.devrel.net/speaker/lauren-schaefer/"&gt;DevRelCon&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/Lauren_Schaefer"&gt;Lauren Schaefer&lt;/a&gt; will be at &lt;a href="https://2021.devrel.net/speaker/lauren-schaefer/"&gt;DevRelCon&lt;/a&gt; Conference to give their talk "SEO 101 for DevRel"!&lt;/p&gt;

&lt;p&gt;Nov 10: &lt;a href="https://events.codemotion.com/conferences/online/2021/online-tech-conference-italian-edition-autumn/speakers"&gt;Codemotion&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/Lauren_Schaefer"&gt;Lauren Schaefer&lt;/a&gt; will be at &lt;a href="https://events.codemotion.com/conferences/online/2021/online-tech-conference-italian-edition-autumn/speakers"&gt;Codemotion&lt;/a&gt; Conference to give their talk "How to Raise Your Profile as a Developer (And Why You Should Bother!)"!&lt;/p&gt;




&lt;p&gt;💡 These $weeklyUpdates are always posted to the &lt;a href="https://www.mongodb.com/community/forums/"&gt;MongoDB Community Forums&lt;/a&gt; &lt;em&gt;first&lt;/em&gt;! &lt;a href="https://account.mongodb.com/account/register"&gt;Sign up&lt;/a&gt; today to always get first dibs on these $weeklyUpdates and other MongoDB announcements, interact with the MongoDB community, and help others solve MongoDB related issues!&lt;/p&gt;

</description>
      <category>mongodb</category>
      <category>database</category>
      <category>codenewbie</category>
      <category>python</category>
    </item>
    <item>
      <title>Code online without using any text editor app or IDE</title>
      <author>Lucifer25x</author>
      <pubDate>Tue, 16 Nov 2021 19:15:27 +0000</pubDate>
      <link>https://dev.to/lucifer25x/code-online-without-using-any-text-editor-app-or-ide-2e6m</link>
      <guid>https://dev.to/lucifer25x/code-online-without-using-any-text-editor-app-or-ide-2e6m</guid>
      <description>&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Code React.js, Javascript, Vue.js, Angular, HTML and etc. :&lt;br&gt;
&lt;a href="https://codesandbox.io/"&gt;https://codesandbox.io/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Code HTML, CSS, JS and share preview (code):&lt;br&gt;
&lt;a href="https://codepen.io/"&gt;https://codepen.io/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Code Next.js, Nuxt.js, Node.js, Javascript, Typescript, React, Angular, Vue 3, Static (HTML,CSS,JS), RxJS:&lt;br&gt;
&lt;a href="https://stackblitz.com/"&gt;https://stackblitz.com/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Code many programming languages (Python, Javascript, Rust, Assembly, C#, Swift, C, C++, Go(lang) and etc.):&lt;br&gt;
&lt;a href="https://replit.com/"&gt;https://replit.com/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You can use new vs-code website too for coding:&lt;br&gt;
&lt;a href="https://vscode.dev/"&gt;https://vscode.dev/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Also you can make your own simple editor (If you want make it, please search ace.js, monaco editor, codemirror and others, I prefer to use ace.js)&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Getting started with Flask and Cerberus - Building a Chess Analysis App (Part 2)</title>
      <author>propelauthblog</author>
      <pubDate>Tue, 16 Nov 2021 18:43:59 +0000</pubDate>
      <link>https://dev.to/propelauth/getting-started-with-flask-and-cerberus-building-a-chess-analysis-app-part-2-4jo1</link>
      <guid>https://dev.to/propelauth/getting-started-with-flask-and-cerberus-building-a-chess-analysis-app-part-2-4jo1</guid>
      <description>&lt;p&gt;In our &lt;a href="https://blog.propelauth.com/chess-analysis-1-analysis/"&gt;last post&lt;/a&gt;, we learned about chess analysis. We then created a python function &lt;code&gt;analyze_position&lt;/code&gt; that takes in a chess position and outputs a detailed analysis.&lt;/p&gt;

&lt;p&gt;In this post, we'll create an API around that function, so our users can submit positions for us to analyze. We'll use Flask as our web server and Cerberus to validate the input.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setting-up-flask"&gt;
  &lt;/a&gt;
  Setting up Flask
&lt;/h2&gt;

&lt;p&gt;Recall that last time we set up our project like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;mkdir &lt;/span&gt;chess-api
&lt;span class="nv"&gt;$ &lt;/span&gt;python3 &lt;span class="nt"&gt;-m&lt;/span&gt; venv venv
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;source &lt;/span&gt;venv/bin/activate
&lt;span class="o"&gt;(&lt;/span&gt;venv&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;$ &lt;/span&gt;pip &lt;span class="nb"&gt;install &lt;/span&gt;python-chess
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We're using &lt;a href="https://flask.palletsprojects.com/"&gt;Flask&lt;/a&gt; as our web server because it is very lightweight, so we'll want to install that next.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;(&lt;/span&gt;venv&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;$ &lt;/span&gt;pip &lt;span class="nb"&gt;install &lt;/span&gt;Flask
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The quickstart guide shows how easy it is to set up a route.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# app.py
&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;flask&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;hello_world&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;"&amp;lt;p&amp;gt;Hello, World!&amp;lt;/p&amp;gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Which we can run and test with &lt;code&gt;curl&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# flask run automatically looks for app.py&lt;/span&gt;
&lt;span class="o"&gt;(&lt;/span&gt;venv&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;$ &lt;/span&gt;flask run

&lt;span class="c"&gt;# different terminal, flasks default port is 5000&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;curl localhost:5000
&amp;lt;p&amp;gt;Hello, World!&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can also return a dictionary which is returned as JSON.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# app.py
&lt;/span&gt;
&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/json"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;hello_world_json&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"hello"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"world"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;curl &lt;span class="nt"&gt;-v&lt;/span&gt; localhost:5000/json
...
&amp;lt; HTTP/1.0 200 OK
&amp;lt; Content-Type: application/json
&amp;lt; Content-Length: 18
...
&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;"hello"&lt;/span&gt;:&lt;span class="s2"&gt;"world"&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#validating-json-body-in-flask-with-cerberus"&gt;
  &lt;/a&gt;
  Validating JSON body in Flask with Cerberus
&lt;/h2&gt;

&lt;p&gt;We want to make sure that only valid requests are allowed. &lt;a href="https://docs.python-cerberus.org/en/stable/"&gt;Cerberus&lt;/a&gt; is a lightweight validation library for python. We can define our expected schema and then make sure requests conform to it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# A FEN is a standard way of representing a chess board
# Make sure that both the FEN string is valid, 
#   and the resulting board is valid
&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;is_valid_fen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;field&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;board&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;chess&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Board&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fen&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;board&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_valid&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
            &lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;field&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Invalid FEN"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="nb"&gt;ValueError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;field&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Invalid FEN"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="n"&gt;SCHEMA&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s"&gt;"fen"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"string"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"required"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"check_with"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;is_valid_fen&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="s"&gt;"num_moves_to_return"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"integer"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"min"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"max"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"default"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="s"&gt;"time_limit"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"number"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"min"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"max"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3600&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"default"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="s"&gt;"depth_limt"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"integer"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"min"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"max"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The schema itself is pretty straightforward. We have 4 fields, 3 of which are optional integers/numbers. For the &lt;code&gt;fen&lt;/code&gt; field, we want to make sure it's both a string and a valid FEN, so we need to define a custom validation function.&lt;/p&gt;

&lt;p&gt;When we are ready, we can check that a dictionary is valid like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Validator&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SCHEMA&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;is_valid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;validate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;some_json_request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and if it isn't valid, &lt;code&gt;v.errors&lt;/code&gt; contains exactly what's wrong with it. &lt;code&gt;v.normalized(some_json_request)&lt;/code&gt; modifies it's input which we will use to fill in defaults for the optional fields.&lt;/p&gt;

&lt;p&gt;Let's put this all together in a new file &lt;code&gt;parser.py&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;cerberus&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Validator&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;flask&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;abort&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;jsonify&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;make_response&lt;/span&gt;

&lt;span class="c1"&gt;# ... schema from above
&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;parse_request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;json_body&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Validator&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SCHEMA&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# If invalid, exit out with a 400
&lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;validate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;json_body&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="c1"&gt;# abort exits early with an HTTP response
&lt;/span&gt;        &lt;span class="n"&gt;abort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;make_response&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;jsonify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;errors&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;400&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="c1"&gt;# Fill in defaults
&lt;/span&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;normalized&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;json_body&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can hook this up to a new route in our &lt;code&gt;app.py&lt;/code&gt;. For now, let's return the parsed request.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;parser&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;parse_request&lt;/span&gt;

&lt;span class="c1"&gt;# ...
&lt;/span&gt;
&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/analyze"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;methods&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"POST"&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;analyze&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;parse_request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_json&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After running our new app, we can test it with curl. Here's an example where we only specify the FEN and the&lt;br&gt;
other fields get their defaults filled in.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;curl &lt;span class="nt"&gt;-X&lt;/span&gt; POST 
       &lt;span class="nt"&gt;-H&lt;/span&gt; &lt;span class="s2"&gt;"Content-Type: application/json"&lt;/span&gt; 
       &lt;span class="nt"&gt;-d&lt;/span&gt; &lt;span class="s1"&gt;'{"fen": "8/8/6P1/4R3/8/6k1/2r5/6K1 b - - 0 1"}'&lt;/span&gt; localhost:5000/analyze
&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;"fen"&lt;/span&gt;:&lt;span class="s2"&gt;"8/8/6P1/4R3/8/6k1/2r5/6K1 b - - 0 1"&lt;/span&gt;,&lt;span class="s2"&gt;"num_moves_to_return"&lt;/span&gt;:1,&lt;span class="s2"&gt;"time_limit"&lt;/span&gt;:60&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And here's what happens with an invalid FEN.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;curl &lt;span class="nt"&gt;-v&lt;/span&gt; &lt;span class="nt"&gt;-X&lt;/span&gt; POST 
       &lt;span class="nt"&gt;-H&lt;/span&gt; &lt;span class="s2"&gt;"Content-Type: application/json"&lt;/span&gt; 
       &lt;span class="nt"&gt;-d&lt;/span&gt; &lt;span class="s1"&gt;'{"fen": "nonsense"}'&lt;/span&gt; localhost:5000/analyze
...
&amp;lt; HTTP/1.0 400 BAD REQUEST
...
&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;"fen"&lt;/span&gt;: &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"Invalid FEN"&lt;/span&gt;&lt;span class="o"&gt;]}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#analyzing-each-request-synchronously"&gt;
  &lt;/a&gt;
  Analyzing each request synchronously
&lt;/h2&gt;

&lt;p&gt;We already have our &lt;code&gt;analyze_position&lt;/code&gt; from the last post... what if we just use that directly in our route?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/analyze"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;methods&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"POST"&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;analyze&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;parsed_request&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;parse_request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_json&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
    &lt;span class="n"&gt;analysis&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;analyze_position&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fen&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;parsed_request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"fen"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                                &lt;span class="n"&gt;num_moves_to_return&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;parsed_request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"num_moves_to_return"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                                &lt;span class="n"&gt;depth_limit&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;parsed_request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"depth_limit"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                                &lt;span class="n"&gt;time_limit&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;parsed_request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"time_limit"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"analysis"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;analysis&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's test it with our mate in 2 example from before:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;curl &lt;span class="nt"&gt;-X&lt;/span&gt; POST 
       &lt;span class="nt"&gt;-H&lt;/span&gt; &lt;span class="s2"&gt;"Content-Type: application/json"&lt;/span&gt; 
       &lt;span class="nt"&gt;-d&lt;/span&gt; &lt;span class="s1"&gt;'{"fen": "8/8/6P1/4R3/8/6k1/2r5/6K1 b - - 0 1"}'&lt;/span&gt; localhost:5000/analyze
&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;"analysis"&lt;/span&gt;:[&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;"centipawn_score"&lt;/span&gt;:null,&lt;span class="s2"&gt;"mate_score"&lt;/span&gt;:-2,&lt;span class="s2"&gt;"pv"&lt;/span&gt;:[&lt;span class="s2"&gt;"c2c1"&lt;/span&gt;,&lt;span class="s2"&gt;"e5e1"&lt;/span&gt;,&lt;span class="s2"&gt;"c1e1"&lt;/span&gt;&lt;span class="o"&gt;]}]}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It works! It's not a terrible v0, but it has an obvious flaw. Analyzing requests can be a very CPU intensive task. Someone could request an hour-long depth 50 search and our webserver will spend a lot of time working on that. Not to mention that the request will likely time out meaning all the work we do is irrelevant. If a bunch of people request similar analyses, we'll quickly get overloaded.&lt;/p&gt;

&lt;p&gt;In our next post, we'll convert this API into an asynchronous API to solve these issues. See you then!&lt;/p&gt;

</description>
      <category>python</category>
      <category>tutorial</category>
      <category>codenewbie</category>
      <category>webdev</category>
    </item>
    <item>
      <title>'Avoid Surprise Bills from AWS' </title>
      <author>Ryan Bethel</author>
      <pubDate>Tue, 16 Nov 2021 18:43:54 +0000</pubDate>
      <link>https://dev.to/begin/avoid-surprise-bills-from-aws-3d75</link>
      <guid>https://dev.to/begin/avoid-surprise-bills-from-aws-3d75</guid>
      <description>&lt;p&gt;Architect users often ask for some way to avoid large surprise bills from AWS. The budget-watch plugin sets a cost limit for your app and temporarily shuts it down when the limit is reached. It is the first step to solving this problem for our community.&lt;/p&gt;

&lt;p&gt;Scaling is a built-in feature of dynamic apps using cloud functions. But if your app can scale to infinity, so can your bill. Many users have this concern, even though it rarely happens. Amazon has many services to help monitor billing. Setting an account-wide budget alert is a relatively easy first line of defense. But configuring more fine-grained monitoring for a single app is not so easy. It's a little like trying to fix your car by breaking into your mechanic's garage. The billing services are too complicated for a small team to devote their limited resources to.&lt;/p&gt;

&lt;p&gt;The unit of deployment in Architect is an individual app. None of the AWS budget solutions easily scope to a single app. You might have one app you expect to cost $100 per month and a dozen other experimental apps that you expect to be free. You should be able to easily set these limits and have some assurance there will be no surprises.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-budgetwatch-does"&gt;
  &lt;/a&gt;
  What budget-watch does
&lt;/h2&gt;

&lt;p&gt;There are many ways an app could run up your bill. Maybe you hit the top of hacker news, or you might have an infinite loop. The simplest way to stop a runaway app is to shut down the compute resources. By setting reserved concurrency (how many simultaneous executions can run) on all lambdas to zero, you can effectively stop most things that cost money in your app. You install the plugin with &lt;code&gt;npm install @architect/plugin-budget-watch&lt;/code&gt;, and then add the four lines shown below to your app manifest.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;@plugins
budget-watch

@budget
limit $40
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If the app uses multiple plugins, budget-watch should be listed last so that it is the last one applied. When deployed, it attaches a budget alert scoped to just the resources of the app. If the cost of those resources exceeds the limit set, a shutdown is triggered. To restart the app, the limit can be increased or removed and the app redeployed. This resets the lambda concurrency, and the app will resume operation. You can see the code on &lt;a href="https://github.com/architect/plugin-budget-watch"&gt;github.com/architect/plugin-budget-watch&lt;/a&gt; for more details.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#implementation-details-the-messy-parts"&gt;
  &lt;/a&gt;
  Implementation details (the messy parts)
&lt;/h2&gt;

&lt;p&gt;We would love to see Amazon build this feature into the platform. Solving this problem from the outside exposes many rough edges in the billing and CloudFormation APIs. The three biggest challenges are:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Enabling tags&lt;/li&gt;
&lt;li&gt;Slow billing updates&lt;/li&gt;
&lt;li&gt;Managing configuration drift&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#enabling-tags"&gt;
  &lt;/a&gt;
  Enabling tags
&lt;/h3&gt;

&lt;p&gt;An ideal solution would be deployed entirely through the app manifest using CloudFormation (AWS's infrastructure as code that Architect uses underneath). All that is needed to scope to an app is a single auto-generated tag (&lt;code&gt;aws:cloudformation:stack-name&lt;/code&gt;). But before this tag can be used, someone needs to navigate deep into the AWS console to activate it. This only needs to be done once, but it breaks the ideal user experience of avoiding the console altogether. Some users may not be allowed to activate tags because of account limits set by their organization.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#billing-updates"&gt;
  &lt;/a&gt;
  Billing updates
&lt;/h3&gt;

&lt;p&gt;Amazon bills you by the millisecond but only lets you check three times a day. It's like touching a stove and finding out eight hours later that you got burned. You can set all kinds of alerts on all sorts of dimensions, but you can't do any better than 8-12 hours of granularity. Even if you set an alert for a limit you have already passed, the notification may still be delayed for half a day until the next billing update.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#drift-detection"&gt;
  &lt;/a&gt;
  Drift detection
&lt;/h3&gt;

&lt;p&gt;Deterministic deploys are a core feature of Architect. You get the same infrastructure every time you deploy the same app manifest. This plugin should not break that contract. Setting a budget limit and resetting it after it has triggered are all done from the app manifest. To shut down the app the plugin changes all concurrency by directly calling the lambda API. This causes a drift (out of band configuration changes to infrastructure) between your app and manifest. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nKD42Dl0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/senv4g5rq6my3abtecy9.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nKD42Dl0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/senv4g5rq6my3abtecy9.gif" alt="girl drifting in a toy car" width="415" height="274"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This drift needs to be reversed if the app is restarted. If you deploy the same CloudFormation template, it will not make any update because the template has not changed. AWS has "Drift Detection" that you can enable to monitor the out-of-band changes, but it requires clicking around the console to enable it. There is no way to turn drift detection on with CloudFormation, and there is no way to automatically reconcile that drift by having your template overwrite those configuration changes. Not only that, drift detection does not even monitor the relevant lambda configurations.&lt;/p&gt;

&lt;p&gt;The workaround for this drift reset is to use a CloudFormation Custom Resource as a reset mechanism. Custom resources are intended for provisioning infrastructure outside of AWS and connect them to your stack through CloudFormation. They have lifecycle hooks for create, update, and delete that run custom logic. After the budget-watch limit is triggered, it can be reset by increasing the limit in the manifest or by removing the limit. This triggers an update in the custom resource that resets the concurrency back to its original settings.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#other-approaches-considered"&gt;
  &lt;/a&gt;
  Other approaches considered
&lt;/h2&gt;

&lt;p&gt;There are many ways to build a feature like this with AWS building blocks, but most suffer from the same limitations (i.e., 3x/day updates). Two promising approaches considered were cost anomaly detection w/SNS alerts and budget triggered actions. Cost anomaly detection was not used primarily because the alerts look for deviations in billing rather than absolute limits. What is the "expected" budget for the app I just deployed for the first time? &lt;/p&gt;

&lt;p&gt;Budget triggered actions seemed like the most promising solution provided by AWS. You set a budget with an alert that has automated actions attached. The challenge is that the actions you can specify are permissions, policy, and instance-based. These actions end up tightly coupled to implementation details of the app and must be updated as the app changes.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#limitations"&gt;
  &lt;/a&gt;
  Limitations
&lt;/h2&gt;

&lt;p&gt;The actual causes of large surprise bills are as varied as the many services that AWS offers. This solution cannot possibly catch every one. It focuses on the biggest source and applies the broadest intervention. Architect is a very flexible framework. It is possible (especially with custom plugins) to include infrastructure that will not be shut down by budget-watch. &lt;/p&gt;

&lt;p&gt;This plugin is still in Beta. We encourage people to try it out and give feedback. If you want to add the plugin to your Architect project you can follow the instruction in the GitHub repository (&lt;a href="https://github.com/architect/plugin-budget-watch"&gt;architect/plugin-budget-watch&lt;/a&gt;).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-about-begin-users"&gt;
  &lt;/a&gt;
  What about Begin users?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://begin.com"&gt;Begin.com&lt;/a&gt; has a generous free tier, so users do not have to worry about costs. But for those on the paid tier, we will soon make this feature available to all users of Begin. We hope that AWS will build this into the platform in a more usable way. Until then, we hope to relieve some of the fear of unexpected bills. If you want to build scalable web apps with Begin &lt;a href="https://begin.com/join"&gt;sign up&lt;/a&gt; for a free account today.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Aprender em Público </title>
      <author>Vinícius Neto</author>
      <pubDate>Tue, 16 Nov 2021 18:41:06 +0000</pubDate>
      <link>https://dev.to/viunow/aprender-em-publico-2feh</link>
      <guid>https://dev.to/viunow/aprender-em-publico-2feh</guid>
      <description>&lt;p&gt;A primeira vez que eu tive contato com esse tema, foi através do Twitter do &lt;a href="https://twitter.com/sseraphini"&gt;Sibelius&lt;/a&gt; e depois de ler alguns artigos dele sobre isso, nas referências encontrei o blog do &lt;a href="https://www.swyx.io/learn-in-public/"&gt;Shawn Wang&lt;/a&gt; onde ele explica um pouco mais a fundo sobre o que se trata o Learn in Public, ou Aprender em Público. &lt;/p&gt;

&lt;p&gt;A maioria das pessoas aprendem em 'privado', ou seja, independente se essas pessoas cursam uma universidade, curso técnico, YouTube, Udemy, etc, elas consomem o conteúdo e guardam para si, sem compartilhar tanto dúvidas que surgiram durante algum estudo ou mesmo quanto compartilhar o que a pessoa aprendeu após estudar determinado assunto.&lt;/p&gt;

&lt;p&gt;O processo de aprender algo pode deixar de ser complexo, estudar em silêncio ou no privado, pode não ser a melhor forma para todas as pessoas, pois se você tem diversas dúvidas e é uma pessoa que gosta de compartilhar ideias, debater sobre conteúdos, por qual motivo não está Aprendendo em Púbico durante seus estudos?&lt;/p&gt;

&lt;p&gt;Uma das melhores formas de estudar, é ensinando. Por exemplo, digamos que eu estou aprendendo sobre X, nunca vi sobre X na minha vida então é tudo novo para mim, se eu estudar todo o assunto e guardar tudo para mim no privado, provavelmente alguns tópicos não foram compreendidos e poderiam ter sido melhor aproveitados, quando eu passo a escrever sobre aquilo que aprendo e a compartilhar com outras pessoas publicamente, se abre um espaço para debater sobre determinado assunto e com isso receber formas diferentes de enxergar as coisas. &lt;/p&gt;

&lt;p&gt;Nem sempre você vai entender pela abordagem de um artigo A, pode ser que alguma pessoa acabe te explicando usando outra linguagem ou usando exemplos diferentes que façam sentido para você, por isso é importante compartilhar o que você está aprendendo e também tirar dúvidas publicamente para ter mais 'pontos de vista' sobre algo, quanto mais formas de se enxergar algo você tiver, melhor é, pois as coisas começam a fazer sentido ao ter várias formas de aprender um assunto.&lt;/p&gt;

&lt;p&gt;Um tempo atrás eu resolvia as coisas no privado, em grande parte, no máximo trocava alguma ideia com pessoas próximas, mas nunca publicamente. Me deparava com um problema, corria pro Stack Overflow, dezenas de abas no navegador, assistia vídeos, lia artigos, mas não comentava nada com ninguém, passava pelo trajeto sozinho, sendo que provavelmente alguma outra pessoa já havia passado pelo mesmo problema e se compartilhado em público, poderia reunir dezenas de pessoas para comentarem sobre a dúvida.&lt;/p&gt;

&lt;p&gt;Algumas dicas que deixo aqui sobre como começar a aprender em público, escolha redes sociais públicas, como o Twitter, e comece a se conectar com pessoas por aí, escrevendo sobre seus aprendizados, dúvidas, e também inicie discussões para que fortaleça o entendimento do assunto. Escreva artigos como este no &lt;a href="//dev.to"&gt;DEV Community&lt;/a&gt;, ou no Substack, Medium, existem centenas de locais para se fazer isso. Você pode também gravar vídeos, se gosta desse formato de comunicação, o importante é compartilhar o conhecimento publicamente e começar a praticar o Aprender em Público!&lt;/p&gt;

&lt;p&gt;Espero que essa leitura tenha feito algum sentido para você, sinta-se a vontade para comentar sobre, pontuar alguma discordância ou dar mais dicas sobre esse tema! Continue em frente, aproveite as redes sociais para se comunicar com o máximo de pessoas que puder, compartilhe o conhecimento sempre!&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>discuss</category>
      <category>performance</category>
      <category>writing</category>
    </item>
    <item>
      <title>EOL : Python Syntax Error</title>
      <author>Anjali Kumawat</author>
      <pubDate>Tue, 16 Nov 2021 18:27:11 +0000</pubDate>
      <link>https://dev.to/anjalikumawat2002/eol-python-syntax-error-3fl0</link>
      <guid>https://dev.to/anjalikumawat2002/eol-python-syntax-error-3fl0</guid>
      <description>&lt;h2&gt;
  &lt;a href="#eol"&gt;
  &lt;/a&gt;
  EOL
&lt;/h2&gt;

&lt;p&gt;EOL == End Of Line&lt;/p&gt;

&lt;p&gt;An EOL error indicatesthat Python interpreter expected a particular character or set of characters to have occurred in specific line of code, but that those characters were not found before the end of the line . This results in Python stopping the program execution and throwing a syntax error .The EOL error signifies that the Interpreter of Python reached the end of the line while scanning the string literal.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#syntaxerror-eol-while-scanning-string-literal"&gt;
  &lt;/a&gt;
  syntaxerror : Eol while scanning string literal
&lt;/h2&gt;

&lt;p&gt;Let’s take a look at our error:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;syntaxerror: EOL while scanning string literal
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If a syntax error is encountered, Python stops executing a program and gives a error . This is because the Python interpreter needs you to rectify the issue before it can read the rest of your code.&lt;/p&gt;

&lt;p&gt;This error is commonly caused by:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Strings that span multiple lines using the wrong syntax&lt;/li&gt;
&lt;li&gt;Missing quotation marks&lt;/li&gt;
&lt;li&gt;Mismatching quotation marks&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#what-is-string-literal-in-python"&gt;
  &lt;/a&gt;
  What is String Literal in Python?
&lt;/h3&gt;

&lt;p&gt;String literal is a set of characters enclosed between quotation marks (“). All the characters are noted as a sequence. In Python, you can declare &lt;a href="https://docs.python.org/3/library/string.html?highlight=string#module-string"&gt;string literals&lt;/a&gt; using three types, single quotation marks (‘ ‘), double quotation marks (” “), and triple quotation marks (“”” “””). Strings are arrays and their characters can be accessed by using square brackets. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;String Literal Example&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;exampleA = 'Single Quotes String'
exampleB = "Single Quotes String"
exampleC = """Single Quotes String"""

print(exampleA[0])  # it will print S
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#example-multiple-lines-string"&gt;
  &lt;/a&gt;
  Example : Multiple Lines String
&lt;/h2&gt;

&lt;p&gt;In Python, strings can span multiple lines.  Multi-line strings must be triple quoted, or written using three quotation marks.&lt;/p&gt;

&lt;p&gt;let's look at multiple line string -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;def Coder():
    message = "Welcome, Coders!
When to use iterative development? You should use iterative development only on projects that you want to succeed."
        print(message)

Coder()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output is -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;SyntaxError: EOL while scanning string literal
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;An error is returned because a string using single or double quotes cannot span multiple lines. To solve this problem, we need to enclose our string with three single or double quotes.&lt;/p&gt;

&lt;p&gt;Now look at the correct code -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;def Coder():
    message = """Welcome, Coders!
When to use iterative development? You should use iterative development only on projects that you want to succeed."""
        print(message)

Coder()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output is -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Welcome, Coders!
When to use iterative development? You should use iterative development only on projects that you want to succeed.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#example-missing-quotation-mark"&gt;
  &lt;/a&gt;
  Example : Missing Quotation Mark
&lt;/h2&gt;

&lt;p&gt;Strings must be closed after the contents of a string have been declared. Otherwise, Python returns a syntax error. &lt;/p&gt;

&lt;p&gt;Let’s take a look at a string that is not closed:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;def Coder():
    message = "Welcome, Coders!
        print(message)

Coder()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's check the output -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;SyntaxError: EOL while scanning string literal
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;An We have forgotten to close our string. If you look at the line of code where we declare the “message” variable, there is no closing string character.&lt;br&gt;
We can fix this error by closing our string using the same quotation mark that we used to open our string.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;def Coder():
    message = "Welcome, Coders!"
        print(message)

Coder()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Welcome, Coders!
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now code runs successfully.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#example-mismatching-quotation-marks"&gt;
  &lt;/a&gt;
  Example : Mismatching Quotation Marks
&lt;/h2&gt;

&lt;p&gt;The type of quote you use to open a string should be the same as the type of quote you use to close a string.&lt;/p&gt;

&lt;p&gt;A syntax error is returned when the types of quotes that you use to open and close a string are different. Let’s take a look at a program that opens a string using a single quote mark (‘) and closes a string using  a double quote mark (”) :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;def Coder():
    message = 'Welcome, Coders!"
        print(message)

Coder()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;SyntaxError: EOL while scanning string literal
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can fix this problem by making our quotations match. We’re going to change our first quotation mark to use double quotes (“):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;def Coder():
    message = "Welcome, Coders!"
        print(message)

Coder()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Welcome, Coders!
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now our code runs successfully.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion-eol-while-scanning-string-literal"&gt;
  &lt;/a&gt;
  Conclusion: EOL While Scanning String Literal
&lt;/h2&gt;

&lt;p&gt;Strings have helpful in thousands of ways in Python. As using them can provide easy access to a sequence of characters and their attributes. The only problem is that you have to take care of their syntax. Any invalid syntax and invalid backslashes in the string can cause EOF errors to appear. To avoid this error, follow all the steps from the post above.&lt;/p&gt;

&lt;p&gt;Keep Coding......&lt;br&gt;
Keep learning......💻&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>programming</category>
      <category>tutorial</category>
      <category>python</category>
    </item>
    <item>
      <title>Automatically update your CONTRIBUTORS file with this GitHub Action + Workflow</title>
      <author>Erika Heidi</author>
      <pubDate>Tue, 16 Nov 2021 18:15:07 +0000</pubDate>
      <link>https://dev.to/erikaheidi/automatically-update-your-contributors-file-with-this-github-action-workflow-d98</link>
      <guid>https://dev.to/erikaheidi/automatically-update-your-contributors-file-with-this-github-action-workflow-d98</guid>
      <description>&lt;h3&gt;
  &lt;a href="#my-workflow"&gt;
  &lt;/a&gt;
  My Workflow
&lt;/h3&gt;

&lt;p&gt;I wanted to build something simple but yet useful for open source maintainers. So here's what I built: an action to automatically generate a &lt;code&gt;CONTRIBUTORS.md&lt;/code&gt; file based on a project's top contributors, using the GitHub API to pull information about the project. The workflow then uses another action to create a pull request or commit the changes directly to the same repository where the workflow is configured.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--axKOB70b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g9rz7y5tmedisyahxfv6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--axKOB70b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g9rz7y5tmedisyahxfv6.png" alt="Automated pull request with github actions" width="880" height="628"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The action runs a &lt;a href="https://github.com/minicli/action-contributors/blob/main/minicli"&gt;single-command application&lt;/a&gt; created with &lt;a href="https://docs.minicli.dev"&gt;Minicli&lt;/a&gt;, a minimalist command-line framework for building PHP CLI commands.&lt;/p&gt;

&lt;p&gt;The application, action, and example workflows can be found here:&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/minicli"&gt;
        minicli
      &lt;/a&gt; / &lt;a href="https://github.com/minicli/action-contributors"&gt;
        action-contributors
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      GitHub Action to dynamically update CONTRIBUTORS file
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Generate / Update CONTRIBUTORS File - GitHub Action&lt;/h1&gt;
&lt;p&gt;This GitHub Action updates a CONTRIBUTORS file with the top contributors from the specified project, pulling contents from the GitHub API.&lt;/p&gt;
&lt;h2&gt;
Example Usage&lt;/h2&gt;
&lt;p&gt;This action is made to use in conjunction with &lt;a href="https://github.com/marketplace/actions/update-files-on-github"&gt;test-room-7/action-update-file&lt;/a&gt; in order to automatically commit an updated CONTRIBUTORS file in a fixed interval.&lt;/p&gt;
&lt;p&gt;The following example sets a workflow to update the file once a month, committing the changes directly to the main project's branch:&lt;/p&gt;
&lt;div class="highlight highlight-source-yaml position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-ent"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;Update CONTRIBUTORS file&lt;/span&gt;
&lt;span class="pl-ent"&gt;on&lt;/span&gt;
  &lt;span class="pl-ent"&gt;schedule&lt;/span&gt;:
    - &lt;span class="pl-ent"&gt;cron&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0 0 1 * *&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-ent"&gt;workflow_dispatch&lt;/span&gt;:
&lt;span class="pl-ent"&gt;jobs&lt;/span&gt;:
  &lt;span class="pl-ent"&gt;main&lt;/span&gt;:
    &lt;span class="pl-ent"&gt;runs-on&lt;/span&gt;: &lt;span class="pl-s"&gt;ubuntu-latest&lt;/span&gt;
    &lt;span class="pl-ent"&gt;steps&lt;/span&gt;:
      - &lt;span class="pl-ent"&gt;uses&lt;/span&gt;: &lt;span class="pl-s"&gt;minicli/action-contributors@v3&lt;/span&gt;
        &lt;span class="pl-ent"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Update a projects CONTRIBUTORS file&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
      - &lt;span class="pl-ent"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;Commit changes&lt;/span&gt;
        &lt;span class="pl-ent"&gt;uses&lt;/span&gt;: &lt;span class="pl-s"&gt;test-room-7/action-update-file@v1&lt;/span&gt;
        &lt;span class="pl-ent"&gt;with&lt;/span&gt;:
          &lt;span class="pl-ent"&gt;file-path&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;CONTRIBUTORS.md&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
          &lt;span class="pl-ent"&gt;commit-msg&lt;/span&gt;: &lt;span class="pl-s"&gt;Update Contributors&lt;/span&gt;
          &lt;span class="pl-ent"&gt;github-token&lt;/span&gt;: &lt;span class="pl-s"&gt;${{ secrets.GITHUB_TOKEN }}&lt;/span&gt;
        &lt;span class="pl-ent"&gt;env&lt;/span&gt;:
          &lt;span class="pl-ent"&gt;CONTRIB_REPOSITORY&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;minicli/minicli&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;…
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/minicli/action-contributors"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#submission-category"&gt;
  &lt;/a&gt;
  Submission Category:
&lt;/h3&gt;

&lt;p&gt;Maintainer Must-Haves&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#yaml-file-or-link-to-code"&gt;
  &lt;/a&gt;
  Yaml File or Link to Code
&lt;/h3&gt;

&lt;p&gt;Here is an example workflow to run this action once a month and commit the changes directly to the main project's branch:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Update CONTRIBUTORS file&lt;/span&gt;
&lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;schedule&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;cron&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;0&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;0&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;1&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;*&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;*"&lt;/span&gt;
  &lt;span class="na"&gt;workflow_dispatch&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;main&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;
    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;minicli/action-contributors@v2&lt;/span&gt;
        &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Update&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;a&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;projects&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;CONTRIBUTORS&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;file'&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Update resources&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;test-room-7/action-update-file@v1&lt;/span&gt;
        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;file-path&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;CONTRIBUTORS.md'&lt;/span&gt;
          &lt;span class="na"&gt;commit-msg&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Update Contributors&lt;/span&gt;
          &lt;span class="na"&gt;github-token&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.GITHUB_TOKEN }}&lt;/span&gt;
        &lt;span class="na"&gt;env&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;CONTRIB_REPOSITORY&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;minicli/minicli'&lt;/span&gt;
          &lt;span class="na"&gt;CONTRIB_OUTPUT_FILE&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;CONTRIBUTORS.md'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You need to replace the &lt;code&gt;CONTRIB_REPOSITORY&lt;/code&gt; value with the GitHub project you want to pull contributors from.&lt;/p&gt;

&lt;p&gt;If you'd prefer to create a pull request instead of committing the changes directly to the main branch, you can use the &lt;a href="https://github.com/marketplace/actions/create-pull-request"&gt;create-pull-request&lt;/a&gt; action instead. For that, you'll also need to include the &lt;a href="https://github.com/actions/checkout"&gt;actions/checkout&lt;/a&gt; GitHub Action:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Update CONTRIBUTORS file&lt;/span&gt;
&lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;schedule&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;cron&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;0&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;0&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;1&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;*&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;*"&lt;/span&gt;
  &lt;span class="na"&gt;workflow_dispatch&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;main&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;
    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/checkout@v2&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;minicli/action-contributors@v3&lt;/span&gt;
        &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;Update&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;a&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;projects&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;CONTRIBUTORS&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;file"&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Create a PR&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;peter-evans/create-pull-request@v3&lt;/span&gt;
        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;commit-message&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Update Contributors&lt;/span&gt;
          &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;[automated]&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Update&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Contributors&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;File"&lt;/span&gt;
          &lt;span class="na"&gt;token&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.GITHUB_TOKEN }}&lt;/span&gt;
        &lt;span class="na"&gt;env&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;CONTRIB_REPOSITORY&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;minicli/minicli'&lt;/span&gt;
          &lt;span class="na"&gt;CONTRIB_OUTPUT_FILE&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;CONTRIBUTORS.md'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#additional-resources-info"&gt;
  &lt;/a&gt;
  Additional Resources / Info
&lt;/h3&gt;

&lt;p&gt;Projects using this action:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/minicli/minicli"&gt;minicli/minicli&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/minicli/docs"&gt;minicli/docs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>actionshackathon21</category>
      <category>github</category>
      <category>opensource</category>
      <category>contributors</category>
    </item>
    <item>
      <title>Show and Hide Elements using jQuery</title>
      <author>Muhammad Rauf</author>
      <pubDate>Tue, 16 Nov 2021 18:10:28 +0000</pubDate>
      <link>https://dev.to/softcodeon/show-and-hide-elements-using-jquery-43ej</link>
      <guid>https://dev.to/softcodeon/show-and-hide-elements-using-jquery-43ej</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8NC-CZkN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5rx2jv7dpve8613xjcpv.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8NC-CZkN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5rx2jv7dpve8613xjcpv.jpg" alt="Image description" width="600" height="300"&gt;&lt;/a&gt;&lt;br&gt;
How to show and hide elements using jQuery. When you click the mouse over some HTML element then some further information will show up, and when you click mouse out from that element, the further message automatically gets hidden, hereinbelow example I have utilized mouse click to hide and show the additional message, you can use any event as per your requirement.&lt;/p&gt;

&lt;p&gt;Show/Hide elements jQuery&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nhA0jNYf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cad5n0aavxnzrl58ma9o.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nhA0jNYf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cad5n0aavxnzrl58ma9o.gif" alt="Image description" width="600" height="304"&gt;&lt;/a&gt;&lt;br&gt;
jQuery is a powerful &lt;a href="https://en.wikipedia.org/wiki/JavaScript_library"&gt;Javascript library&lt;/a&gt; which makes adding useful Javascript stuff to your website easy across browsers. This post looks at how to show and hide an element with jQuery using the show(), hide(), toggle(), fadeIn() and fadeOut() functions.&lt;/p&gt;

&lt;p&gt;The most simple way to hide an element with jQuery is to call .hide() and then .show() to show it again. This makes the element instantly show or hide.&lt;/p&gt;

&lt;p&gt;we are hiding a div by calling their id "show" and the CSS class "soft-toggle". Now let's see the practical example below.&lt;/p&gt;

&lt;p&gt;HTML Code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;'https://code.jquery.com/jquery-1.7.2.js'&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"soft"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"#show"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"soft-toggle"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Show&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"show"&lt;/span&gt; &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;"display:none"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Something is hidden By SoftCodeOn&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;CSS Code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;style&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nc"&gt;.soft&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;}&lt;/span&gt;
&lt;span class="nc"&gt;.soft-toggle&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#eee&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;30px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;#000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;200px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;100px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;30px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nf"&gt;#show&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;style&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;JavaScript Code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;rendered-js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;ready&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;.soft-toggle&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;click&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;//get collapse content selector&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;collapse_content_selector&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;href&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;//make the collapse content to be shown or hide&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;toggle_switch&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;collapse_content_selector&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toggle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;css&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;display&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;none&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;//change the button label to be 'Show'&lt;/span&gt;
        &lt;span class="nx"&gt;toggle_switch&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;html&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Show&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;//change the button label to be 'Hide'&lt;/span&gt;
        &lt;span class="nx"&gt;toggle_switch&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;html&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hide&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt; &lt;span class="p"&gt;});});&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/script&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is all fairly basic usage in these two post using these functions; you probably normally wouldn’t show and hide elements from clicking buttons but it makes it easy to illustrate the point.&lt;/p&gt;

&lt;p&gt;Common uses for showing and hiding stuff is when hovering over a navigation element and showing a sub-menu, or showing the shopping cart contents when clicking a shopping cart icon on an e-commerce page. View Original with detail : &lt;a href="https://softcodeon.com/tutorials/show-hide-elements-using-jquery.htm"&gt;Show and Hide Elements using jQuery&lt;/a&gt;. I hope you like this post, Please discuss below if you face any problem or query. Thank you.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>html</category>
      <category>programming</category>
    </item>
    <item>
      <title>Grid practice</title>
      <author>Dahye Ji</author>
      <pubDate>Tue, 16 Nov 2021 17:47:29 +0000</pubDate>
      <link>https://dev.to/daaahailey/grid-practice-14ac</link>
      <guid>https://dev.to/daaahailey/grid-practice-14ac</guid>
      <description>&lt;p&gt;I've been using flex more and haven't really used float or grid. I think I should try to use them more often when I write code. &lt;/p&gt;

&lt;p&gt;Grid is suitable for complex layout since you can organise content both into columns and rows.&lt;br&gt;
As it is with flex, grid also has grid container and grid items which are the children of the container. So the whole space of the container gets affected by the grid and according to the each properties and values of each items, the layout changes.&lt;br&gt;
You can specify it as display: grid in container.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1ekm3lIX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v0esr8cnpgmfrc26x2tl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1ekm3lIX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v0esr8cnpgmfrc26x2tl.png" alt="Image description" width="880" height="673"&gt;&lt;/a&gt;&lt;/p&gt;
image's from https://studiomeal.com/archives/533

 

&lt;p&gt; &lt;br&gt;
Grid track is row and column of grid, grid cell is a cell of grid. Grid line is the line that divide grid cells. To use grid, we write this in container first.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.container&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c"&gt;/* display: inline-grid; */&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;However, &lt;strong&gt;&lt;u&gt;nothing will change if the (grid)items are block elements&lt;/u&gt;&lt;/strong&gt;. Inline-grid also behaves like inline-block.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;strong&gt;grid-template-rows&lt;/strong&gt;&lt;/code&gt;, &lt;code&gt;&lt;strong&gt;grid-template columns&lt;/strong&gt;&lt;/code&gt; : these specify size of grid tracks.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.container&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="py"&gt;grid-template-columns&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;200px&lt;/span&gt; &lt;span class="m"&gt;200px&lt;/span&gt; &lt;span class="m"&gt;500px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="c"&gt;/* grid-template-columns: 1fr 1fr 1fr */&lt;/span&gt;
  &lt;span class="c"&gt;/* grid-template-columns: repeat(3, 1fr) */&lt;/span&gt;
  &lt;span class="c"&gt;/* grid-template-columns: 200px 1fr */&lt;/span&gt;
  &lt;span class="c"&gt;/* grid-template-columns: 100px 200px auto */&lt;/span&gt;

  &lt;span class="py"&gt;grid-template-rows&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;200px&lt;/span&gt; &lt;span class="m"&gt;200px&lt;/span&gt; &lt;span class="m"&gt;500px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="c"&gt;/* grid-template-rows: 1fr 1fr 1fr */&lt;/span&gt;
  &lt;span class="c"&gt;/* grid-template-rows: repeat(3, 1fr) */&lt;/span&gt;
  &lt;span class="c"&gt;/* grid-template-rows: 200px 1fr */&lt;/span&gt;
  &lt;span class="c"&gt;/* grid-template-rows: 100px 200px auto */&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;fr = fraction. (you can consider it as ratio)&lt;br&gt;
If &lt;code&gt;&lt;strong&gt;grid-template-columns: 1fr 1fr 1fr;&lt;/strong&gt;&lt;/code&gt;, this will make three columns which are 1:1:1.&lt;br&gt;
If &lt;code&gt;&lt;strong&gt;grid-template-columns: 100px 2fr 1fr;&lt;/strong&gt;&lt;/code&gt;, this will set the first column on the left to 100px, second and third column to have 2:1 ratio.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#repeat"&gt;
  &lt;/a&gt;
  repeat
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.container&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="py"&gt;grid-template-columns&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;repeat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="n"&gt;fr&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="c"&gt;/* The code above is the same as below */&lt;/span&gt;
  &lt;span class="c"&gt;/* grid-template-columns: 1fr 1fr 1fr 1fr 1fr */&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zWI_TTOZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gqidw8d2aymtyn39kuxo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zWI_TTOZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gqidw8d2aymtyn39kuxo.png" alt="Image description" width="880" height="507"&gt;&lt;/a&gt;&lt;/p&gt;
image's from https://studiomeal.com/archives/533





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="c"&gt;/* These two select the same area */&lt;/span&gt;

&lt;span class="nc"&gt;.item&lt;/span&gt;&lt;span class="nd"&gt;:nth-child&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="py"&gt;grid-column-start&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="py"&gt;grid-column-end&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="py"&gt;grid-row-start&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="py"&gt;grid-row-end&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.item&lt;/span&gt;&lt;span class="nd"&gt;:nth-child&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;grid-column&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;grid-row&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#gridarea"&gt;
  &lt;/a&gt;
  grid-area
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"ko"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"UTF-8"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;http-equiv=&lt;/span&gt;&lt;span class="s"&gt;"X-UA-Compatible"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"IE=edge"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width, initial-scale=1.0"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;flex-1&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nl"&gt;box-sizing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;border-box&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="nc"&gt;.container-color&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;cornsilk&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;3px&lt;/span&gt; &lt;span class="no"&gt;black&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="nc"&gt;.item-color&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;darkcyan&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;3px&lt;/span&gt; &lt;span class="no"&gt;black&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="nc"&gt;.container&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="no"&gt;black&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="py"&gt;gap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="py"&gt;grid-template-areas&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="s2"&gt;'header header header'&lt;/span&gt;
                &lt;span class="s2"&gt;'section section section'&lt;/span&gt;
                &lt;span class="s2"&gt;'footer footer footer'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="nc"&gt;.header&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="py"&gt;grid-area&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;header&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="no"&gt;tomato&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="nc"&gt;.section&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="py"&gt;grid-area&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;section&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="no"&gt;blue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="nc"&gt;.footer&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="py"&gt;grid-area&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;footer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="no"&gt;deeppink&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"container-color container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"item-color item header"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Lorem.&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"item-color item section"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Lorem, ipsum.&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"item-color item footer"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Lorem ipsum dolor sit.&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#gridrow-gridcolumn"&gt;
  &lt;/a&gt;
  &lt;code&gt;grid-row&lt;/code&gt;, &lt;code&gt;grid-column&lt;/code&gt;
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"ko"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"UTF-8"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;http-equiv=&lt;/span&gt;&lt;span class="s"&gt;"X-UA-Compatible"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"IE=edge"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width, initial-scale=1.0"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;flex-1&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nl"&gt;box-sizing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;border-box&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="nc"&gt;.container-color&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;cornsilk&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;3px&lt;/span&gt; &lt;span class="no"&gt;black&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="c"&gt;/* height: 500px; */&lt;/span&gt;
            &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="nc"&gt;.item-color&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;darkcyan&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;3px&lt;/span&gt; &lt;span class="no"&gt;black&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="nc"&gt;.container&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="nc"&gt;.header&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nl"&gt;grid-row&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nl"&gt;grid-column&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="nc"&gt;.section&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nl"&gt;grid-row&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nl"&gt;grid-column&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="nc"&gt;.aside&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nl"&gt;grid-row&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nl"&gt;grid-column&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="nc"&gt;.footer&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nl"&gt;grid-row&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nl"&gt;grid-column&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"container-color container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"item-color item header"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Lorem.&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"item-color item section"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Lorem, ipsum.&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"item-color item aside"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Lorem, ipsum dolor.&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"item-color item footer"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Lorem ipsum dolor sit.&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#grid-practice"&gt;
  &lt;/a&gt;
  Grid practice
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mLZCsKOB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mzda60jmzfu7r7w42v6b.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mLZCsKOB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mzda60jmzfu7r7w42v6b.gif" alt="Image description" width="500" height="271"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/daaahailey/likelion/blob/main/css/002.grid/003_codepen_grid_clone3.html"&gt;code&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Some issue from code above&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;If the element has transform, z-index gets ignored and the background cards came to the front on the top of other elements.&lt;br&gt;
So, instead of using transform: translate(), used top and left to move element.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Something to read: &lt;a href="https://coder-coder.com/z-index-isnt-working/"&gt;Why z-index isn't working?&lt;/a&gt; &lt;br&gt;
&lt;a href="https://erwinousy.medium.com/z-index%EA%B0%80-%EB%8F%99%EC%9E%91%ED%95%98%EC%A7%80%EC%95%8A%EB%8A%94-%EC%9D%B4%EC%9C%A0-4%EA%B0%80%EC%A7%80-%EA%B7%B8%EB%A6%AC%EA%B3%A0-%EA%B3%A0%EC%B9%98%EB%8A%94-%EB%B0%A9%EB%B2%95-d5097572b82f"&gt;in Korean&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#-you-can-also-check-grid-on-developers-tool-as-well"&gt;
  &lt;/a&gt;
  + You can also check grid on developer's tool as well.
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WFo_C9i6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m7zgzlfc2o44i8qk934r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WFo_C9i6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m7zgzlfc2o44i8qk934r.png" alt="Image description" width="880" height="375"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#game-to-practice-css-grid"&gt;
  &lt;/a&gt;
  Game to practice CSS grid
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://cssgridgarden.com/#ko"&gt;CSS Grid garden&lt;/a&gt;&lt;/p&gt;

</description>
      <category>css</category>
      <category>grid</category>
    </item>
    <item>
      <title>5 Inspiring hackathon project ideas</title>
      <author>carlosmendes-taikai</author>
      <pubDate>Tue, 16 Nov 2021 17:45:18 +0000</pubDate>
      <link>https://dev.to/taikai/5-inspiring-hackathon-project-ideas-fda</link>
      <guid>https://dev.to/taikai/5-inspiring-hackathon-project-ideas-fda</guid>
      <description>&lt;p&gt;&lt;strong&gt;Winning a hackathon is not easy and you know it.&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;We’ve already shared &lt;a href="https://taikai.network/en/blog/6-tips-to-win-a-hackathon"&gt;some tips you should follow&lt;/a&gt; to improve your chances of winning one, but everything will revolve around your idea for the project. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--E0GwlJuo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://taikai.azureedge.net/AIqKmkup9Xds8nHqNRBfA-PS2IT-P00fiyPW40k9BGE/rs:fit:800:0:0/aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3RhaWthaS1zdG9yYWdlL2ltYWdlcy80YjljNzg1MC00NmM1LTExZWMtOTNmNi1hN2UzM2QyYWE3NTF4cHMtNFRCU0cyT3F1MFEtdW5zcGxhc2goMSkuanBn" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E0GwlJuo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://taikai.azureedge.net/AIqKmkup9Xds8nHqNRBfA-PS2IT-P00fiyPW40k9BGE/rs:fit:800:0:0/aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3RhaWthaS1zdG9yYWdlL2ltYWdlcy80YjljNzg1MC00NmM1LTExZWMtOTNmNi1hN2UzM2QyYWE3NTF4cHMtNFRCU0cyT3F1MFEtdW5zcGxhc2goMSkuanBn" alt="hackathon challenge" width="800" height="534"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There are quite a few articles out there with generic and outdated ideas.&lt;/p&gt;

&lt;p&gt;If you really want to stand out from the crowd, you need to understand the &lt;strong&gt;context of each project and how they won the hackathon.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We’ll show you examples of real, winning hackathon projects, so you can adapt the ideas to your own project, as you see fit. &lt;/p&gt;

&lt;p&gt;Whether you’re a beginner or a seasoned participant, these hackathon ideas should get you inspired and ready to rock 🤘&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#winning-hackathon-project-ideas"&gt;
  &lt;/a&gt;
  Winning Hackathon Project Ideas 🥇
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#1-dedicated-marketplace-and-community-hub"&gt;
  &lt;/a&gt;
  1. Dedicated Marketplace and Community Hub 🖼️
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;The Challenge: #hackARThon&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;The prime goal of this hackathon was to render NFTs more accessible to a wider audience, while also giving artists more control over all elements of their creation, including distribution and monetization.&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Community-oriented hackathons are absolutely fantastic because you feel your work will have a direct impact on people’s lives.&lt;/p&gt;

&lt;p&gt;The team behind the “ARTIST-Made” project opted to create a Marketplace and Community Hub that provided limited edition art &amp;amp; design NFT items.&lt;/p&gt;

&lt;p&gt;Their goal was to “match lovers of Art &amp;amp; Design, Creative Minds, and Art Community” in a special hub, comprised of a marketplace and mobile app.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2aHFghNE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://taikai.azureedge.net/xW9xboEAn-y5TJ93hwI9zsbKJJY3FoLg_gXylhH_B3E/rs:fit:800:0:0/aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3RhaWthaS1zdG9yYWdlL2ltYWdlcy80OTdmZTQ3MC00NmM2LTExZWMtOTQzYi04N2NmYjJkMTE0NzhTY3JlZW5zaG90IDIwMjEtMTEtMTYgYXQgMTAuMTUuNDMucG5n" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2aHFghNE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://taikai.azureedge.net/xW9xboEAn-y5TJ93hwI9zsbKJJY3FoLg_gXylhH_B3E/rs:fit:800:0:0/aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3RhaWthaS1zdG9yYWdlL2ltYWdlcy80OTdmZTQ3MC00NmM2LTExZWMtOTQzYi04N2NmYjJkMTE0NzhTY3JlZW5zaG90IDIwMjEtMTEtMTYgYXQgMTAuMTUuNDMucG5n" alt="ARTIST-Made project" width="" height=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This project was incredible.&lt;/p&gt;

&lt;p&gt;For starters, it was exactly in line with the goal of the challenge.&lt;/p&gt;

&lt;p&gt;Secondly, a marketplace &amp;amp; hub meant that every party would use the platform, not just the artists: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;   Creators had a place to share their work digitally, get recognition, and most importantly, monetize it. &lt;/li&gt;
&lt;li&gt;   Art &amp;amp; Design Lovers had a niche platform to share their passion, access exclusive content, and communicate with each other. &lt;/li&gt;
&lt;li&gt;   Organizations, galleries, museums, and other entities had a social channel to share their events and promote their offering. &lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#the-hack"&gt;
  &lt;/a&gt;
  The Hack 💻
&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Community-oriented hackathons are absolutely fantastic because your work has a direct impact on people’s lives.&lt;/strong&gt; Developing a &lt;strong&gt;marketplace &amp;amp; community hub&lt;/strong&gt; is an interesting approach to connect communities and organizations, especially if you can provide great value for both.&lt;/p&gt;

&lt;p&gt;This project idea was extremely &lt;strong&gt;well detailed and presented&lt;/strong&gt;, making it a clear winner of the hackathon and a great source of inspiration for those that follow. &lt;/p&gt;

&lt;p&gt;Even though the challenge was focused on NFT technology, you can adapt the idea for other types of industries and communities.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-an-ai-satellitebased-navigation-platform"&gt;
  &lt;/a&gt;
  2. An AI, Satellite-based Navigation Platform 🛰️
&lt;/h3&gt;

&lt;p&gt;*&lt;em&gt;The Challenge: &lt;a href="https://taikai.network/en/cassinihackathons/challenges/connectingthearctic/overview"&gt;CASSINI Hackathon&lt;/a&gt; *&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;The second edition of the CASSINI Hackathon aimed to find solutions to protect and support the precious Arctic region. Open sea mobility, environmental monitoring and wildlife protection were the 3 main categories innovators could choose from.&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This hackathon was extremely popular and brought together more than 570 participants!&lt;/p&gt;

&lt;p&gt;The “PolarBearings” project was one of the winners. &lt;/p&gt;

&lt;p&gt;They created an &lt;strong&gt;AI-based polar navigation platform&lt;/strong&gt; that provided optimal routing for land vehicles in arctic regions, influenced by climate change. &lt;/p&gt;

&lt;p&gt;Did you know Arctic communities have to cross frozen lakes and ice roads for both personal and commercial needs? With the increasing temperatures due to climate change, these routes are becoming more and more dangerous.&lt;/p&gt;

&lt;p&gt;PolarBearings team tackled the challenge and used two components to craft this brilliant project: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;   A data platform that uses machine learning; &lt;/li&gt;
&lt;li&gt;   Satellite data for real-time ice trail safety predictions (using Copernicus) and navigation (using Galileo). &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Qs1WCvf7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://taikai.azureedge.net/-6ORqKMsDK3l4e_FvqzLnE2LZGPi3scT0Cup4YS9Ki0/rs:fit:800:0:0/aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3RhaWthaS1zdG9yYWdlL2ltYWdlcy8wZmRmYmViMC00NmQ2LTExZWMtYTVjYy1kNzcwNzc5MDZmZTRwb2xhcmJlYXJpbmdzIHByb2plY3QucG5n" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Qs1WCvf7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://taikai.azureedge.net/-6ORqKMsDK3l4e_FvqzLnE2LZGPi3scT0Cup4YS9Ki0/rs:fit:800:0:0/aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3RhaWthaS1zdG9yYWdlL2ltYWdlcy8wZmRmYmViMC00NmQ2LTExZWMtYTVjYy1kNzcwNzc5MDZmZTRwb2xhcmJlYXJpbmdzIHByb2plY3QucG5n" alt="PolarBearings" width="800" height="700"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We reached out to Thomas Metcalfe, who was part of the PolarBearings team, and he kindly shared with us their &lt;strong&gt;ideation process:&lt;/strong&gt; &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;“At first it was all market research. There wasn’t any advantage in building solutions without fully understanding the problem faced in the region. So, we all did independent research and shared our findings in Discord. &lt;/p&gt;

&lt;p&gt;Over time, some problems gained our interest more than others - at this point, we began considering solutions. &lt;/p&gt;

&lt;p&gt;We had maybe 2 or 3 meetings where we began pitching potential ideas, and through our discussions (and advice from the experts), we slowly eliminated ideas until we arrived at the one we were most confident in.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#the-hack"&gt;
  &lt;/a&gt;
  The Hack 💻
&lt;/h3&gt;

&lt;p&gt;AI product &amp;amp; service applications are becoming increasingly popular. The demand is also higher than ever. &lt;/p&gt;

&lt;p&gt;Obviously, we know that satellite navigation isn’t easily accessible and replicable.&lt;/p&gt;

&lt;p&gt;But your focus should be on the AI component, and how this German team managed to leverage the power of artificial intelligence to develop a project that prioritizes safety and reliability.&lt;/p&gt;

&lt;p&gt;And while their goal could have been just to design the technical side of the technology, they still managed to prototype a mobile app, define revenue models and detail a future roadmap of operations.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-mobile-app-with-a-very-special-feature"&gt;
  &lt;/a&gt;
  3. Mobile App with a very special feature 🏷️
&lt;/h3&gt;

&lt;p&gt;*&lt;em&gt;The Challenge: &lt;a href="https://taikai.network/en/ctt/challenges/dcode-challenge/overview"&gt;d|Code Hackathon&lt;/a&gt; *&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;`D|Code Challenge aimed to provide the Portuguese national post services a solution that could seamlessly read the barcodes containing all the data about a specific package.&lt;/p&gt;

&lt;p&gt;The application had to be able to recognize all of the information on the code and display it on the screen.`&lt;/p&gt;

&lt;p&gt;“Post it” was the winner project of this hackathon.&lt;/p&gt;

&lt;p&gt;The team of just two Brazilians developed a mobile app that delivered on its promise: &lt;strong&gt;they created a fast and accurate bus code (similar to a barcode), that could read the item information and present it on the mobile device.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kByEC1sQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://taikai.azureedge.net/CRr_wYVSfk2nv4LiIh2GPY913MJJfCNmIyhAoBwWdR0/rs:fit:800:0:0/aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3RhaWthaS1zdG9yYWdlL2ltYWdlcy9kOTE0YTg2MC00NmQ5LTExZWMtOTQzYi04N2NmYjJkMTE0NzhTY3JlZW5zaG90IDIwMjEtMTEtMTYgYXQgMTIuMzYuMjQucG5n" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kByEC1sQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://taikai.azureedge.net/CRr_wYVSfk2nv4LiIh2GPY913MJJfCNmIyhAoBwWdR0/rs:fit:800:0:0/aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3RhaWthaS1zdG9yYWdlL2ltYWdlcy9kOTE0YTg2MC00NmQ5LTExZWMtOTQzYi04N2NmYjJkMTE0NzhTY3JlZW5zaG90IDIwMjEtMTEtMTYgYXQgMTIuMzYuMjQucG5n" alt="Post it" width="" height=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-hack"&gt;
  &lt;/a&gt;
  The Hack 💻
&lt;/h3&gt;

&lt;p&gt;Sometimes, less is more. Many hackathons have different challenges, but others &lt;strong&gt;have just one target in their minds such as this one.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This project was a huge success since it &lt;strong&gt;addressed CTT's key pain point&lt;/strong&gt; and solved it with a simple and effective tool. The team &lt;strong&gt;employed bus code technology&lt;/strong&gt; to create a reading process that was &lt;strong&gt;swift, efficient, and, most importantly, capable of working without an internet connection in remote locations!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;They've also integrated this system with the smartphone app, making it &lt;strong&gt;easier for courier distributors to operate on a daily basis.&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-aibased-violence-detection-system"&gt;
  &lt;/a&gt;
  4. AI-Based Violence Detection System 🙅‍♂️
&lt;/h3&gt;

&lt;p&gt;*&lt;em&gt;The Challenge: &lt;a href="https://taikai.network/en/bithacks/challenges/bithacks/overview"&gt;BitHacks Hackathon&lt;/a&gt; *&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;BitHacks is a platform for AI Social Impact. They reached out to innovators to find solutions for existing social problems, through AI-based applications.&lt;/code&gt; &lt;/p&gt;

&lt;p&gt;Project “JustView” was one of the winners. The team decided to address &lt;strong&gt;social justice&lt;/strong&gt;, in the form of a very controversial topic lately - &lt;strong&gt;police brutality.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;lack of accountability of policemen&lt;/strong&gt; has been a hot trend - especially in the USA - but with &lt;strong&gt;repercussions all over the world.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1VsG_5oK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://taikai.azureedge.net/Lvx8t4ivCbQJiD_fU2evkh_bOInwg0NOMDGZTqK9cTY/rs:fit:800:0:0/aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3RhaWthaS1zdG9yYWdlL2ltYWdlcy85MzE4YzVmMC00NmQ3LTExZWMtOTNmNi1hN2UzM2QyYWE3NTFTY3JlZW5zaG90IDIwMjEtMTEtMTYgYXQgMTIuMTkuNDcucG5n" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1VsG_5oK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://taikai.azureedge.net/Lvx8t4ivCbQJiD_fU2evkh_bOInwg0NOMDGZTqK9cTY/rs:fit:800:0:0/aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3RhaWthaS1zdG9yYWdlL2ltYWdlcy85MzE4YzVmMC00NmQ3LTExZWMtOTNmNi1hN2UzM2QyYWE3NTFTY3JlZW5zaG90IDIwMjEtMTEtMTYgYXQgMTIuMTkuNDcucG5n" alt="JustView" width="" height=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That’s why the team decided to &lt;strong&gt;develop an AI-based violence detection system.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Police officers are using bodycams to record their interactions with citizens, but even then, the “large amount of camera data is not being reliably analyzed, leading to a lack of accountability”.&lt;/p&gt;

&lt;p&gt;The goal of this great project was to collect the data, analyze it, and create an algorithm that could distinguish violent from non-violent footage. The latter would then be sent to a third-party human investigator, for further analysis. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-hack"&gt;
  &lt;/a&gt;
  The Hack 💻
&lt;/h3&gt;

&lt;p&gt;Once again, the &lt;strong&gt;true power of AI is yet to be unleashed.&lt;/strong&gt; It can (and should) be used for the &lt;strong&gt;benefit of the community&lt;/strong&gt;, just like we’ve seen in this brilliant use case example.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-digital-stickers-for-fast-amp-secure-ticket-validations"&gt;
  &lt;/a&gt;
  5. Digital stickers for fast &amp;amp; secure ticket validations 🧾
&lt;/h3&gt;

&lt;p&gt;*&lt;em&gt;The Challenge: &lt;a href="https://taikai.network/en/wiener-linien/challenges/tickethon/overview"&gt;Tickethon&lt;/a&gt; *&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;`Wiener Linien - Vienna’s public transport operator - is responsible for roughly 180 underground, tram and bus lines.&lt;/p&gt;

&lt;p&gt;The purpose of this hackathon was to find ways to improve and speed up the process of both issuing and validating digital tickets. &lt;/p&gt;

&lt;p&gt;They also aimed to increase the efficiency of operations, the accuracy of ticket validation, as well as the overall passenger experience.`&lt;/p&gt;

&lt;p&gt;“Quicker with a Sticker” project not only had a clever name, but also a &lt;strong&gt;clever hackathon idea.&lt;/strong&gt; They used Bluetooth Low Energy (BLE) beacons and QR Codes to develop a digital sticker validation system. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MYmvcTgx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://taikai.azureedge.net/RuHGFmkioaMBoKZwn79BT-5KppR0SDGsBRyjdSl9qow/rs:fit:800:0:0/aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3RhaWthaS1zdG9yYWdlL2ltYWdlcy80NTUwODYxMC00NmRiLTExZWMtYTVjYy1kNzcwNzc5MDZmZTRTY3JlZW5zaG90IDIwMjEtMTEtMTYgYXQgMTIuMjUuMDYucG5n" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MYmvcTgx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://taikai.azureedge.net/RuHGFmkioaMBoKZwn79BT-5KppR0SDGsBRyjdSl9qow/rs:fit:800:0:0/aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3RhaWthaS1zdG9yYWdlL2ltYWdlcy80NTUwODYxMC00NmRiLTExZWMtYTVjYy1kNzcwNzc5MDZmZTRTY3JlZW5zaG90IDIwMjEtMTEtMTYgYXQgMTIuMjUuMDYucG5n" alt="Quicker with a Sticker" width="" height=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;This is how the system worked:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;`Inspectors were assigned an animated sticker before they started the validation process. &lt;/p&gt;

&lt;p&gt;When the user app detects one of the BLE beacons, it starts the verification process using the beacon id via the backend and, if successful, displays the sticker on the user’s screen. &lt;/p&gt;

&lt;p&gt;Then, this sticker can be shown to the ticket inspector as proof of a valid ticket.`&lt;/p&gt;

&lt;p&gt;This way, it was &lt;strong&gt;both easy and fast for inspectors and passengers to show and validate their tickets, significantly reducing queue time and overcrowding.&lt;/strong&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-hack"&gt;
  &lt;/a&gt;
  The Hack 💻
&lt;/h3&gt;

&lt;p&gt;This winning project idea had it all. They &lt;strong&gt;seamlessly integrated the digital sticker system within the mobile app&lt;/strong&gt; and proved that you can find solutions through technology, without needing to re-design major infrastructures.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Digital stickers are a great idea&lt;/strong&gt; that can be used in a variety of settings, so they can be a great choice for your next &lt;strong&gt;hackathon project.&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ask-yourself-this-questions"&gt;
  &lt;/a&gt;
  Ask yourself this questions 🙋
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;When starting a hackathon challenge, you should ask yourself (and your teammates) these questions:&lt;/strong&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;   Does my idea align with the hackathon objectives? &lt;/li&gt;
&lt;li&gt;   Can I implement every feature or do I need to focus on building a Minimum Viable Product? &lt;/li&gt;
&lt;li&gt;   Will a Proof of Concept be able to show Juries the core value of my project? &lt;/li&gt;
&lt;li&gt;   Is it possible to run this project in a real environment? (cost, time, and management wise) &lt;/li&gt;
&lt;li&gt;   Am I taking full advantage of the technologies or assets the organization is providing?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These questions will help you clear your mind, structure your ideas better and write off the ones that don’t oblige to the rules. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#now-its-your-turn-to-hop-on-a-hackathon-get-your-ateam-ready-and-energy-levels-high"&gt;
  &lt;/a&gt;
  Now it’s your turn to hop on a hackathon, get your A-team ready and energy levels high 🔥
&lt;/h3&gt;

&lt;p&gt;We provide an all-in-one hackathon platform and great challenges for you to hack. &lt;/p&gt;

&lt;p&gt;Check our latest challenges &lt;a href="https://taikai.network/en/challenges"&gt;over here&lt;/a&gt; and join the 50,000 innovators taking the world by storm ⚡ &lt;/p&gt;

</description>
      <category>hackathon</category>
      <category>codingchallenge</category>
      <category>projectideas</category>
      <category>webdev</category>
    </item>
  </channel>
</rss>
