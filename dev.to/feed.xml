<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Creating a blog using Nuxt and Nuxt Content - with TailwindCSS</title>
      <author>Miracleio</author>
      <pubDate>Sat, 11 Sep 2021 23:38:54 +0000</pubDate>
      <link>https://dev.to/miracleio/creating-a-blog-using-nuxt-and-nuxt-content-with-tailwindcss-5gd3</link>
      <guid>https://dev.to/miracleio/creating-a-blog-using-nuxt-and-nuxt-content-with-tailwindcss-5gd3</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-were-going-to-be-building"&gt;
  &lt;/a&gt;
  What we're going to be building
&lt;/h2&gt;

&lt;p&gt;We will be building a simple blog site using &lt;a href="https://nuxtjs.org/"&gt;Nuxt&lt;/a&gt; which is a framework popularly used for server side rendering and Static Site Generation with Vue.&lt;/p&gt;

&lt;p&gt;We'll also be using &lt;a href="https://content.nuxtjs.org/"&gt;Nuxt Content&lt;/a&gt; which is a module which acts as a &lt;strong&gt;Git-based Headless CMS&lt;/strong&gt; that fetches your Markdown, JSON, YAML, XML and CSV files through a MongoDB like API. It has powerful features that allow you to write blogs, documentations and more.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h2&gt;

&lt;p&gt;Before we dive right in, you should have:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A basic understanding of HTML, CSS &amp;amp; JS, Vue and the &lt;a href="https://www.markdownguide.org/basic-syntax/"&gt;Markdown syntax&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://nodejs.org/en/"&gt;Node&lt;/a&gt; installed&lt;/li&gt;
&lt;li&gt;A text editor, we recommend VS Code with the Vetur extension or WebStorm&lt;/li&gt;
&lt;li&gt;A terminal, I recommend using VS Code's integrated terminal&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting Started
&lt;/h2&gt;

&lt;p&gt;Let's install everything we need for the project.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#install-nuxt-using-createnuxtapp"&gt;
  &lt;/a&gt;
  Install nuxt using create-nuxt-app
&lt;/h3&gt;

&lt;p&gt;To get started quickly you can use the create-nuxt-app.&lt;/p&gt;

&lt;p&gt;Make sure you have npx installed (npx is shipped by default since npm 5.2.0) or npm v6.1 or yarn.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx create-nuxt-app &amp;lt;project-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Choose &lt;em&gt;Content - Git-based Headless CMS&lt;/em&gt; option from Nuxt.js modules&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pztnnG0Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m8220oni3yhs9y772w8b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pztnnG0Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m8220oni3yhs9y772w8b.png" alt="blog-with-nuxt-content-create-nuxt-app-install-content-Annotation 2021-07-11 014841"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Proceed to select other options, here's my preset:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DZR3AS2R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vbtcukp53cmjggjdji2n.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DZR3AS2R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vbtcukp53cmjggjdji2n.png" alt="blog-with-nuxt-content-create-nuxt-app-installation-Annotation 2021-07-11 015118"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Installation complete! 🎉&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dN2gkT_y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y2gqwiomt2aw2obwz549.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dN2gkT_y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y2gqwiomt2aw2obwz549.png" alt="blog-with-nuxt-content-create-nuxt-app-installation-complete-Annotation 2021-07-11 021302"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#install-nuxt-content-separately"&gt;
  &lt;/a&gt;
  Install nuxt content separately
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;If you already have Nuxt setup before now, you can install the content module by running the command&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;#install nuxt content&lt;/span&gt;

npm &lt;span class="nb"&gt;install&lt;/span&gt; @nuxt/content
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then we can add it to our modules property inside our nuxt.config file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;//nuxt.config.js&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;modules&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@nuxt/content&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#install-tailwind-and-tailwindcss-typography-via-npm"&gt;
  &lt;/a&gt;
  Install Tailwind and Tailwindcss typography via npm
&lt;/h3&gt;

&lt;p&gt;Tailwindcss is a utility first css framework that provides us with custom classes we can use to style our app.&lt;/p&gt;

&lt;p&gt;Tailwindcss Typography is "A plugin that provides a set of &lt;code&gt;prose&lt;/code&gt; classes you can use to add beautiful typographic defaults to any vanilla HTML you don't control (like HTML rendered from Markdown, or pulled from a CMS)."&lt;/p&gt;

&lt;p&gt;Install @nuxtjs/tailwindcss which is a nuxt module for tailwind integration as well as Tailwind and its peer-dependencies using npm:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-D&lt;/span&gt; @nuxtjs/tailwindcss tailwindcss@latest postcss@latest autoprefixer@latest
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Add the @nuxtjs/tailwindcss module to the buildModules section of your nuxt.config.js file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// nuxt.config.js&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;buildModules&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@nuxtjs/tailwindcss&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#create-your-configuration-file"&gt;
  &lt;/a&gt;
  Create your configuration file
&lt;/h3&gt;

&lt;p&gt;Next, generate your tailwind.config.js file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx tailwindcss init
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will create a minimal tailwind.config.js file at the root of your project:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;//tailwind.config.js&lt;/span&gt;
&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;purge&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[],&lt;/span&gt;
  &lt;span class="na"&gt;darkMode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// or 'media' or 'class'&lt;/span&gt;
  &lt;span class="na"&gt;theme&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{},&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;variants&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{},&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;plugins&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[],&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create a &lt;code&gt;tailwind.css&lt;/code&gt; file in &lt;code&gt;assets/css.tailwind.css&lt;/code&gt; use the &lt;code&gt;@tailwind&lt;/code&gt; directive to inject Tailwind’s base, components, and utilities styles:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="c"&gt;/*assets/css/tailwind.css*/&lt;/span&gt;
&lt;span class="k"&gt;@tailwind&lt;/span&gt; &lt;span class="n"&gt;base&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;@tailwind&lt;/span&gt; &lt;span class="n"&gt;components&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;@tailwind&lt;/span&gt; &lt;span class="n"&gt;utilities&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can import the css file into your components or make it accessible globally by defining the CSS files/modules/libraries you want to set globally &lt;em&gt;(included in every page).&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="cm"&gt;/* nuxt.config.js*/&lt;/span&gt;
  &lt;span class="c1"&gt;// Global CSS: https://go.nuxtjs.dev/config-css&lt;/span&gt;
  &lt;span class="nx"&gt;css&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="c1"&gt;// CSS file in the project&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@/assets/css/tailwind.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;],&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#install-tailwind-typography"&gt;
  &lt;/a&gt;
  Install Tailwind typography
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Using npm&lt;/span&gt;
npm &lt;span class="nb"&gt;install&lt;/span&gt; @tailwindcss/typography
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then add the plugin to your tailwind.config.js file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// tailwind.config.js&lt;/span&gt;
&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;purge&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[],&lt;/span&gt;
  &lt;span class="na"&gt;darkMode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// or 'media' or 'class'&lt;/span&gt;
  &lt;span class="na"&gt;theme&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{},&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;variants&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{},&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;plugins&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@tailwindcss/typography&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)],&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#configure-tailwind-to-remove-unused-styles-in-production"&gt;
  &lt;/a&gt;
  Configure Tailwind to remove unused styles in production
&lt;/h3&gt;

&lt;p&gt;In your tailwind.config.js file, configure the purge option with the paths to all of your pages and components so Tailwind can tree-shake unused styles in production builds:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// tailwind.config.js&lt;/span&gt;
&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;purge&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./components/**/*.{vue,js}&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./layouts/**/*.vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./pages/**/*.vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./plugins/**/*.{js,ts}&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./nuxt.config.{js,ts}&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="na"&gt;darkMode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// or 'media' or 'class'&lt;/span&gt;
  &lt;span class="na"&gt;theme&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{},&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;variants&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{},&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;plugins&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@tailwindcss/typography&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)],&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now run&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm run dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#quick-note"&gt;
  &lt;/a&gt;
  Quick note
&lt;/h3&gt;

&lt;p&gt;While going through these steps, I ran into an &lt;strong&gt;issue of mismatched packages&lt;/strong&gt; while trying to run &lt;code&gt;npm run dev&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dLNQOstN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rsbs404apyajua84is7q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dLNQOstN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rsbs404apyajua84is7q.png" alt="blog-with-nuxt-content-version-mismatch-error-Annotation 2021-07-11 031752"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Here's how I fixed it:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;update the mismatched package(s), which in my case was the &lt;code&gt;vue-server-renderer&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm i vue-server-renderer@latest &lt;span class="nt"&gt;--save&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V3ploY_S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0w0lqi8v71gfkya3kbj1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V3ploY_S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0w0lqi8v71gfkya3kbj1.png" alt="blog-with-nuxt-content-update-vue-renderer-version-Annotation 2021-07-11 032705"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That fixed it for me, when I ran &lt;code&gt;npm run dev&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--quLR2-8g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jvo06lbbk7417yikzznm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--quLR2-8g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jvo06lbbk7417yikzznm.png" alt="blog-with-nuxt-content-run-dev-succesfull-Annotation 2021-07-11 032953"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9Lx8eid---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x8xk2z31y6vvwv5718b1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9Lx8eid---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x8xk2z31y6vvwv5718b1.png" alt="blog-with-nuxt-content-site-preview-Annotation 2021-07-11 032953"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Sweet! 🎉, now we can move into the interesting stuff&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-your-first-blog-post"&gt;
  &lt;/a&gt;
  Create your first blog post
&lt;/h2&gt;

&lt;p&gt;The content module works by reading the files in our &lt;code&gt;content/&lt;/code&gt; directory.&lt;/p&gt;

&lt;p&gt;So, navigate to &lt;code&gt;content/&lt;/code&gt; and create an &lt;code&gt;articles/&lt;/code&gt; folder.&lt;br&gt;
Create a &lt;code&gt;first-blog-post.md&lt;/code&gt; file and&lt;br&gt;
insert the following&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight markdown"&gt;&lt;code&gt;content/articles/first-blog-post.md
&lt;span class="p"&gt;
---
&lt;/span&gt;
&lt;span class="c"&gt;&amp;lt;!--- YAML Front matter section in-between triple dashes '---' --&amp;gt;&lt;/span&gt;

title: First Blog Post
description: Learning how to create my blog using nuxt content
&lt;span class="p"&gt;
---
&lt;/span&gt;
&lt;span class="gh"&gt;# My first blog post&lt;/span&gt;

Hey there! 👋🏾

This is my first blog post learning nuxt content.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gx2jA2ol--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q6063qi8eu7b43jy8o0e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gx2jA2ol--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q6063qi8eu7b43jy8o0e.png" alt="blog-with-nuxt-content-create-content-md-file-Annotation 2021-07-11 034837"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note the YAML front matter section, this will be used later on to insert custom variables like title and description that we will access using &lt;code&gt;$content&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Next, we're going to create a &lt;a href="https://nuxtjs.org/docs/2.x/directory-structure/pages#dynamic-pages"&gt;dynamic page&lt;/a&gt; which will be used to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;fetch the article content using &lt;code&gt;asyncData&lt;/code&gt; before the page has been rendered. We have access to our content through the context by using the variable &lt;code&gt;$content&lt;/code&gt;. Since we are using a dynamic page, we can know what article file to fetch using the &lt;code&gt;params.slug&lt;/code&gt; variable provided by vue router to get the name of each article&lt;/li&gt;
&lt;li&gt;render the article in the template using &lt;code&gt;&amp;lt;nuxt-content&amp;gt;&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ok, navigate to &lt;code&gt;pages/&lt;/code&gt; and create a &lt;code&gt;blog/&lt;/code&gt; folder.&lt;br&gt;
Create a &lt;code&gt;_slug.vue&lt;/code&gt; (our dynamic page) file and&lt;br&gt;
insert the following&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;pages/blog/_slug.vue

&lt;span class="nt"&gt;&amp;lt;template&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;article&amp;gt;&lt;/span&gt;
    &lt;span class="c"&gt;&amp;lt;!-- this is where we will render the article contents --&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;nuxt-content&lt;/span&gt; &lt;span class="na"&gt;:document=&lt;/span&gt;&lt;span class="s"&gt;"article"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/article&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
  &lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;asyncData&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;$content&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;params&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;//here, we will fetch the article from the article/ folder based on the name provided in the 'params.slug`&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;article&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;$content&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;articles&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slug&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;article&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To display our content we are using the &amp;lt;nuxt-content /&amp;gt; component by passing in the variable we returned into the &lt;code&gt;:document="article"&lt;/code&gt; document prop.&lt;/p&gt;

&lt;p&gt;Go to your site and you should see something like this&lt;br&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WVBtwcRn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1cwzpbci8wxbyxzq38vr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WVBtwcRn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1cwzpbci8wxbyxzq38vr.png" alt="blog-with-nuxt-content-render-first-article-Annotation 2021-07-11 123202"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#accessing-default-injected-variables"&gt;
  &lt;/a&gt;
  Accessing default injected variables
&lt;/h2&gt;

&lt;p&gt;The content module provides lots of injected variables which we can use in our template.&lt;br&gt;
Some of the ones will be using are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;body: body text&lt;/li&gt;
&lt;li&gt;dir: directory&lt;/li&gt;
&lt;li&gt;extension: file extension (.md in this example)&lt;/li&gt;
&lt;li&gt;path: the file path&lt;/li&gt;
&lt;li&gt;slug: the file slug&lt;/li&gt;
&lt;li&gt;toc: an array containing our table of contents&lt;/li&gt;
&lt;li&gt;createdAt: the file creation date&lt;/li&gt;
&lt;li&gt;updatedAt: the date of the last file update&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We can access this data using the &lt;code&gt;article&lt;/code&gt; variable we created. Let's check them out by printing it with a &lt;code&gt;&amp;lt;pre&amp;gt;&lt;/code&gt; tag in our template&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;pre&amp;gt;&lt;/span&gt; {{ article }} &lt;span class="nt"&gt;&amp;lt;/pre&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We should see something like this on our page&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;slug&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;first-blog-post&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;toc&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[],&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;body&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;type&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;root&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;children&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="c1"&gt;// article content&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dir&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/articles&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;path&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/articles/first-blog-post&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;extension&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.md&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;createdAt&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;2021-07-11T02:34:43.695Z&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;updatedAt&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;2021-07-11T03:33:33.608Z&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#custom-injected-variables"&gt;
  &lt;/a&gt;
  Custom injected variables
&lt;/h3&gt;

&lt;p&gt;We'll also use this to display custom injected variables specified in the YAML front matter which must be valid YAML at the top of the file.&lt;br&gt;
This is useful for adding SEO variables such as title, description and image of your article.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;template&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;article&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"article"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="c"&gt;&amp;lt;!-- Our custom injected variables specified with the The YAML front matter goes here  --&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;header&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"article-header"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;{{article.title}}&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;{{article.description}}&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;

          &lt;span class="c"&gt;&amp;lt;!-- container for article details --&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"details-cont"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
              &lt;span class="c"&gt;&amp;lt;!-- the format date function converts the default date to a readable form --&amp;gt;&lt;/span&gt;
              &lt;span class="nt"&gt;&amp;lt;span&amp;gt;&lt;/span&gt;{{formatDate(article.updatedAt)}}&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/header&amp;gt;&lt;/span&gt;

      &lt;span class="c"&gt;&amp;lt;!-- this is where we will render the article contents --&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;nuxt-content&lt;/span&gt; &lt;span class="na"&gt;:document=&lt;/span&gt;&lt;span class="s"&gt;"article"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/article&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;asyncData&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;$content&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;params&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;//here, we will fetch the article from the article/ folder based on the name provided in the 'params.slug`&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;article&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;$content&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;articles&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slug&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;article&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;methods&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// format the date to be displayed in a readable format&lt;/span&gt;
        &lt;span class="nx"&gt;formatDate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toLocaleDateString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;en&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;year&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;numeric&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;month&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;long&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;day&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;numeric&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Notice the &lt;code&gt;formatDate&lt;/code&gt; function which we use to convert the &lt;code&gt;article.updatedAt&lt;/code&gt; value to a more readable date.&lt;/p&gt;

&lt;p&gt;We should have something like this:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ytgKihcA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2769n0hwuomh8jus5d1k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ytgKihcA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2769n0hwuomh8jus5d1k.png" alt="blog-with-nuxt-content-article-with-injected-variables-Annotation 2021-07-11 135032"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, we have two heading &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; elements. One from the YAML front matter and the main markdown. We can remove the one in the main markdown.&lt;br&gt;
We can also add more content for the styles:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight markdown"&gt;&lt;code&gt;&lt;span class="gu"&gt;## &amp;lt;!--- content/articles/first-blog-post --&amp;gt;&lt;/span&gt;

title: My First Blog Post
description: Learning how to create my blog using nuxt, the nuxt content module and tailwindcss
&lt;span class="p"&gt;
--------
&lt;/span&gt;
Hey there! 👋🏾
This is my first blog post learning nuxt content.

I'm currently building it using the following:
&lt;span class="p"&gt;
-&lt;/span&gt; Nuxt.js
&lt;span class="p"&gt;-&lt;/span&gt; Nuxt Content module
&lt;span class="p"&gt;-&lt;/span&gt; Tailwindcss
&lt;span class="p"&gt;-&lt;/span&gt; Tailwindcss typography
&lt;span class="gt"&gt;
&amp;gt; Sweet huh?&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Great! 😎 Let's touch it up a bit with some styling.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#styling-with-tailwindcss-and-tailwindcss-typography"&gt;
  &lt;/a&gt;
  Styling with Tailwindcss and Tailwindcss typography
&lt;/h2&gt;

&lt;p&gt;The content from our article shows up when we visit the slug along with some custom data. But it looks ugly, let's fix that.&lt;/p&gt;

&lt;p&gt;First, we apply the Tailwindcss typography &lt;code&gt;.prose&lt;/code&gt; class to the &lt;code&gt;&amp;lt;article&amp;gt;&lt;/code&gt; element for some basic styles:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;article&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"article prose lg:prose-xl"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/article&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, we just create our custom styles in &lt;code&gt;pages/blog/_slug.vue&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;style&lt;/span&gt; &lt;span class="nt"&gt;scoped&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;@layer&lt;/span&gt; &lt;span class="n"&gt;components&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nc"&gt;.article&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="err"&gt;@apply&lt;/span&gt; &lt;span class="err"&gt;prose&lt;/span&gt; &lt;span class="py"&gt;lg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;prose-xl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="err"&gt;@apply&lt;/span&gt; &lt;span class="err"&gt;p-4&lt;/span&gt; &lt;span class="err"&gt;mt-6&lt;/span&gt; &lt;span class="py"&gt;lg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;mt-8&lt;/span&gt; &lt;span class="n"&gt;m-auto&lt;/span&gt; &lt;span class="n"&gt;lg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;max-w-3xl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nc"&gt;.article-header&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="err"&gt;@apply&lt;/span&gt; &lt;span class="err"&gt;mb-12&lt;/span&gt; &lt;span class="err"&gt;pb-8&lt;/span&gt; &lt;span class="py"&gt;lg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;mb-16&lt;/span&gt; &lt;span class="n"&gt;border-gray-200&lt;/span&gt; &lt;span class="n"&gt;border-b-2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nc"&gt;.article-header&lt;/span&gt; &lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="err"&gt;@apply&lt;/span&gt; &lt;span class="err"&gt;mb-0;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nc"&gt;.article-header&lt;/span&gt; &lt;span class="nc"&gt;.details-cont&lt;/span&gt; &lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="err"&gt;@apply&lt;/span&gt; &lt;span class="err"&gt;text-opacity-50&lt;/span&gt; &lt;span class="err"&gt;text-sm;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;style&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Our page now looks like this:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Q-iRjbIt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bmi84d7jywrvj41gwq1r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q-iRjbIt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bmi84d7jywrvj41gwq1r.png" alt="blog-with-nuxt-content-configure-blog-with-styling-Annotation 2021-07-11 162500"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Sweet indeed 😍&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#adding-html-markup-and-vue-components-in-our-article-markdown"&gt;
  &lt;/a&gt;
  Adding HTML markup and Vue components in our article markdown
&lt;/h2&gt;

&lt;p&gt;We can add valid html code in our markdown file.&lt;br&gt;
Let's create an info box with some styling&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight markdown"&gt;&lt;code&gt;&amp;lt;!--
    content/articles/first-blog-post.md&lt;span class="sb"&gt;

    ...rest of file

    HTML in markdown
    Info box with svg icon
&lt;/span&gt; --&amp;gt;
&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"flex gap-4 items-start p-6 bg-blue-200 text-gray-800 border-blue-700 border-l-4 rounded-md"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;span&amp;gt;&amp;lt;svg&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text-blue-700"&lt;/span&gt; &lt;span class="na"&gt;xmlns=&lt;/span&gt;&lt;span class="s"&gt;"http://www.w3.org/2000/svg"&lt;/span&gt; &lt;span class="na"&gt;viewBox=&lt;/span&gt;&lt;span class="s"&gt;"-2 -2 24 24"&lt;/span&gt; &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;"24"&lt;/span&gt; &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;"24"&lt;/span&gt; &lt;span class="na"&gt;preserveAspectRatio=&lt;/span&gt;&lt;span class="s"&gt;"xMinYMin"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"icon jam jam-info"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;path&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text-blue-700"&lt;/span&gt; &lt;span class="na"&gt;d=&lt;/span&gt;&lt;span class="s"&gt;'M10 20C4.477 20 0 15.523 0 10S4.477 0 10 0s10 4.477 10 10-4.477 10-10 10zm0-2a8 8 0 1 0 0-16 8 8 0 0 0 0 16zm0-10a1 1 0 0 1 1 1v5a1 1 0 0 1-2 0V9a1 1 0 0 1 1-1zm0-1a1 1 0 1 1 0-2 1 1 0 0 1 0 2z'&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&amp;lt;/svg&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text-gray-800"&lt;/span&gt; &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;"line-height: initial"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Here we have important information we would love to share with you!&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You should have something like this:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1FT2vsmP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v5jt57q5mlayk3rr12x7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1FT2vsmP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v5jt57q5mlayk3rr12x7.png" alt="blog-with-nuxt-content-configure-blog-with-html-markup-Annotation 2021-07-11 175231"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Sweet, now we can make this a vue component that can be reused&lt;/p&gt;

&lt;p&gt;Create &lt;code&gt;infoBox.vue&lt;/code&gt; file in &lt;code&gt;components/global&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="c"&gt;&amp;lt;!-- components/global/infoBox.vue--&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;template&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"info-box"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;span&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;svg&lt;/span&gt;
        &lt;span class="na"&gt;xmlns=&lt;/span&gt;&lt;span class="s"&gt;"http://www.w3.org/2000/svg"&lt;/span&gt;
        &lt;span class="na"&gt;viewBox=&lt;/span&gt;&lt;span class="s"&gt;"-2 -2 24 24"&lt;/span&gt;
        &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;"24"&lt;/span&gt;
        &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;"24"&lt;/span&gt;
        &lt;span class="na"&gt;preserveAspectRatio=&lt;/span&gt;&lt;span class="s"&gt;"xMinYMin"&lt;/span&gt;
        &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"icon jam jam-info"&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;path&lt;/span&gt;
          &lt;span class="na"&gt;d=&lt;/span&gt;&lt;span class="s"&gt;"M10 20C4.477 20 0 15.523 0 10S4.477 0 10 0s10 4.477 10 10-4.477 10-10 10zm0-2a8 8 0 1 0 0-16 8 8 0 0 0 0 16zm0-10a1 1 0 0 1 1 1v5a1 1 0 0 1-2 0V9a1 1 0 0 1 1-1zm0-1a1 1 0 1 1 0-2 1 1 0 0 1 0 2z"&lt;/span&gt;
        &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;span&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;slot&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"info-box"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; Some information gets diaplayed here &lt;span class="nt"&gt;&amp;lt;/slot&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
  &lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;infoBox&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;style &lt;/span&gt;&lt;span class="na"&gt;scoped&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="k"&gt;@layer&lt;/span&gt; &lt;span class="n"&gt;components&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nc"&gt;.icon&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="err"&gt;@apply&lt;/span&gt; &lt;span class="err"&gt;text-gray-800;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nc"&gt;.info-box&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="err"&gt;@apply&lt;/span&gt; &lt;span class="err"&gt;flex&lt;/span&gt; &lt;span class="err"&gt;gap-4&lt;/span&gt; &lt;span class="err"&gt;items-start&lt;/span&gt; &lt;span class="err"&gt;p-6&lt;/span&gt; &lt;span class="err"&gt;bg-blue-200&lt;/span&gt; &lt;span class="err"&gt;text-gray-800&lt;/span&gt; &lt;span class="err"&gt;border-blue-500&lt;/span&gt; &lt;span class="err"&gt;border-l-4&lt;/span&gt; &lt;span class="err"&gt;rounded-md;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nc"&gt;.info-box&lt;/span&gt; &lt;span class="nt"&gt;span&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="err"&gt;@apply&lt;/span&gt; &lt;span class="err"&gt;text-gray-800&lt;/span&gt; &lt;span class="err"&gt;leading-none;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;We are creating it in a &lt;code&gt;components/global&lt;/code&gt; folder to register the component globally in order for nuxt to be able to auto import it into &lt;code&gt;&amp;lt;nuxt-content&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now, replace the html with our new &lt;code&gt;infoBox&lt;/code&gt; component&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="c"&gt;&amp;lt;!-- infoBox component automatically imported as global component  --&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;info-box&amp;gt;&lt;/span&gt;
  &lt;span class="c"&gt;&amp;lt;!-- insert into slot --&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;template&lt;/span&gt; &lt;span class="na"&gt;#info-box&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    Here we have important information we would love to share with you!
  &lt;span class="nt"&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/info-box&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If we view our page, we should still see our info box&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9xJfXabc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0nu6matr245fqua0iwzs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9xJfXabc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0nu6matr245fqua0iwzs.png" alt="blog-with-nuxt-content-configure-blog-with-html-markup-Annotation 2021-07-11 175231"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-content-api"&gt;
  &lt;/a&gt;
  The content API
&lt;/h2&gt;

&lt;p&gt;It's pretty awesome that the content module provides an API that we can access on the &lt;code&gt;http://localhost:3000/_content/&lt;/code&gt; route. we can fetch data for all articles on the &lt;code&gt;http://localhost:3000/_content/articles&lt;/code&gt; route.&lt;br&gt;
&lt;br&gt;&lt;br&gt;
We can access a single article using the slug of the article i.e &lt;code&gt;http://localhost:3000/_content/articles/first-blog-post&lt;/code&gt; to access the data for &lt;code&gt;http://localhost:3000/blog/first-blog-post&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#adding-previous-and-next-article-functionality"&gt;
  &lt;/a&gt;
  Adding Previous and Next Article functionality
&lt;/h2&gt;

&lt;p&gt;We're going to be adding a previous and next article functionality to our blog to navigate to other posts on our sites.&lt;br&gt;
So, let's create about three duplicates of our &lt;code&gt;content/articles/first-blog-post.md&lt;/code&gt; file so we can have more posts to navigate to.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JWaI5ZWs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qjtxv6ry5hrommtwnb66.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JWaI5ZWs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qjtxv6ry5hrommtwnb66.png" alt="blog-with-nuxt-content-duplicate-article-Annotation 2021-07-11 190022"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's create our &lt;code&gt;prevNext.vue&lt;/code&gt; component in our &lt;code&gt;components/&lt;/code&gt; folder&lt;/p&gt;

&lt;p&gt;Here, we have a &lt;code&gt;nuxt-link&lt;/code&gt; component which basically accesses the &lt;code&gt;slug&lt;/code&gt; and &lt;code&gt;title&lt;/code&gt; of the previous or next article.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="c"&gt;&amp;lt;!-- components/prevNext --&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;template&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;&amp;lt;!-- ...rest of file --&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;nuxt-link&lt;/span&gt; &lt;span class="na"&gt;v-if=&lt;/span&gt;&lt;span class="s"&gt;"prev"&lt;/span&gt; &lt;span class="na"&gt;:to=&lt;/span&gt;&lt;span class="s"&gt;"{ name: 'blog-slug', params: { slug: prev.slug } }"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"prev"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"icon-cont"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;svg&lt;/span&gt;&lt;span class="err"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="na"&gt;svg&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;span&amp;gt;&lt;/span&gt;{{ prev.title }}&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/nuxt-link&amp;gt;&lt;/span&gt;

&lt;span class="c"&gt;&amp;lt;!-- nuxt-link for "next" --&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;&amp;lt;!-- ...rest of file --&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This data is what will be passed as props to the component which we defined here:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="c"&gt;&amp;lt;!-- components/prevNext --&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
  &lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// create props for prev and next data that will be passed to the component&lt;/span&gt;
    &lt;span class="na"&gt;props&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;prev&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="na"&gt;next&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Our new component should look something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="c"&gt;&amp;lt;!-- components/prevNext --&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;template&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;section&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"prev-next"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"prev-next"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="c"&gt;&amp;lt;!-- if prev data is available display the link --&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;nuxt-link&lt;/span&gt;
      &lt;span class="na"&gt;v-if=&lt;/span&gt;&lt;span class="s"&gt;"prev"&lt;/span&gt;
      &lt;span class="na"&gt;:to=&lt;/span&gt;&lt;span class="s"&gt;"{ name: 'blog-slug', params: { slug: prev.slug } }"&lt;/span&gt;
      &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"prev"&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"icon-cont"&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;gt;&amp;lt;svg&lt;/span&gt;
          &lt;span class="na"&gt;xmlns=&lt;/span&gt;&lt;span class="s"&gt;"http://www.w3.org/2000/svg"&lt;/span&gt;
          &lt;span class="na"&gt;viewBox=&lt;/span&gt;&lt;span class="s"&gt;"-5 -5 24 24"&lt;/span&gt;
          &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;"24"&lt;/span&gt;
          &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;"24"&lt;/span&gt;
          &lt;span class="na"&gt;preserveAspectRatio=&lt;/span&gt;&lt;span class="s"&gt;"xMinYMin"&lt;/span&gt;
          &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"icon jam jam-arrow-left"&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;path&lt;/span&gt;
            &lt;span class="na"&gt;d=&lt;/span&gt;&lt;span class="s"&gt;"M3.414 7.657l3.95 3.95A1 1 0 0 1 5.95 13.02L.293 7.364a.997.997 0 0 1 0-1.414L5.95.293a1 1 0 1 1 1.414 1.414l-3.95 3.95H13a1 1 0 0 1 0 2H3.414z"&lt;/span&gt;
          &lt;span class="nt"&gt;/&amp;gt;&amp;lt;/svg&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;span&amp;gt;&lt;/span&gt; {{ prev.title }} &lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/nuxt-link&amp;gt;&lt;/span&gt;
    &lt;span class="c"&gt;&amp;lt;!-- else display empty span for styling purposes --&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"prev"&lt;/span&gt; &lt;span class="na"&gt;v-else&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;

    &lt;span class="c"&gt;&amp;lt;!-- if prev data is available display the link --&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;nuxt-link&lt;/span&gt;
      &lt;span class="na"&gt;v-if=&lt;/span&gt;&lt;span class="s"&gt;"next"&lt;/span&gt;
      &lt;span class="na"&gt;:to=&lt;/span&gt;&lt;span class="s"&gt;"{ name: 'blog-slug', params: { slug: next.slug } }"&lt;/span&gt;
      &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"next"&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;span&amp;gt;&lt;/span&gt;{{ next.title }}&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"icon-cont"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;svg&lt;/span&gt;
          &lt;span class="na"&gt;xmlns=&lt;/span&gt;&lt;span class="s"&gt;"http://www.w3.org/2000/svg"&lt;/span&gt;
          &lt;span class="na"&gt;viewBox=&lt;/span&gt;&lt;span class="s"&gt;"-5 -5 24 24"&lt;/span&gt;
          &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;"24"&lt;/span&gt;
          &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;"24"&lt;/span&gt;
          &lt;span class="na"&gt;preserveAspectRatio=&lt;/span&gt;&lt;span class="s"&gt;"xMinYMin"&lt;/span&gt;
          &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"icon jam jam-arrow-right"&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;path&lt;/span&gt;
            &lt;span class="na"&gt;d=&lt;/span&gt;&lt;span class="s"&gt;"M10.586 5.657l-3.95-3.95A1 1 0 0 1 8.05.293l5.657 5.657a.997.997 0 0 1 0 1.414L8.05 13.021a1 1 0 1 1-1.414-1.414l3.95-3.95H1a1 1 0 1 1 0-2h9.586z"&lt;/span&gt;
          &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/nuxt-link&amp;gt;&lt;/span&gt;
    &lt;span class="c"&gt;&amp;lt;!-- else display empty span for styling purposes --&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"next"&lt;/span&gt; &lt;span class="na"&gt;v-else&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
  &lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// create props for prev and next data that will be passed to the component&lt;/span&gt;
    &lt;span class="na"&gt;props&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;prev&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="na"&gt;next&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;style &lt;/span&gt;&lt;span class="na"&gt;scoped&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="k"&gt;@layer&lt;/span&gt; &lt;span class="n"&gt;components&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c"&gt;/* styling for the components */&lt;/span&gt;
    &lt;span class="nc"&gt;.prev-next&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="err"&gt;@apply&lt;/span&gt; &lt;span class="err"&gt;flex&lt;/span&gt; &lt;span class="err"&gt;gap-12&lt;/span&gt; &lt;span class="err"&gt;py-8&lt;/span&gt; &lt;span class="err"&gt;items-center&lt;/span&gt; &lt;span class="err"&gt;justify-between&lt;/span&gt; &lt;span class="err"&gt;m-auto&lt;/span&gt; &lt;span class="err"&gt;max-w-xl&lt;/span&gt; &lt;span class="py"&gt;lg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;max-w-4xl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nc"&gt;.prev-next&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="err"&gt;@apply&lt;/span&gt; &lt;span class="err"&gt;flex&lt;/span&gt; &lt;span class="err"&gt;gap-2;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let's get back to our &lt;code&gt;components/blog/_slug.vue&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// components/blog/_slug.vue&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;asyncData&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;$content&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;params&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;article&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;$content&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;articles&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slug&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="c1"&gt;// assign the first two objects in returned array to prev &amp;amp; next constant variables&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;prev&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;$content&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;articles&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="c1"&gt;// fetch only the title and slug from the articles&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;only&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;title&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;slug&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;updatedAt&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
      &lt;span class="c1"&gt;// sortby time updated, in ascending order&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sortBy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;updatedAt&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;asc&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="c1"&gt;// get the correct slug&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;surround&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slug&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="c1"&gt;// fetch data&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="c1"&gt;// return the data to be vailable for use in the file&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;article&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;prev&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;next&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// rest of &amp;lt;script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We now have the data of the each of the first two sorted articles each in &lt;code&gt;prev&lt;/code&gt; &amp;amp; &lt;code&gt;next&lt;/code&gt; variables, which we will now pass to the &lt;code&gt;prevNext&lt;/code&gt; component after the &lt;code&gt;&amp;lt;article&amp;gt;&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="c"&gt;&amp;lt;!-- components/blog/_slug.vue --&amp;gt;&lt;/span&gt;

&lt;span class="c"&gt;&amp;lt;!-- rest of file --&amp;gt;&lt;/span&gt;

&lt;span class="c"&gt;&amp;lt;!-- Pass the data to the component props--&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;prev-next&lt;/span&gt; &lt;span class="na"&gt;:prev=&lt;/span&gt;&lt;span class="s"&gt;"prev"&lt;/span&gt; &lt;span class="na"&gt;:next=&lt;/span&gt;&lt;span class="s"&gt;"next"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/prev-next&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we go:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UuVoM7wM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wx1en3j1jdtxwj13v04k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UuVoM7wM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wx1en3j1jdtxwj13v04k.png" alt="blog-with-nuxt-content-prevVext-component-Annotation 2021-07-12 003740"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Great!&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#listing-out-all-our-articles"&gt;
  &lt;/a&gt;
  Listing out all our Articles
&lt;/h2&gt;

&lt;p&gt;Now, it'll be really nice if we could display our articles on our blog page.&lt;br&gt;
&lt;br&gt;&lt;br&gt;
Let's create a new page in our &lt;code&gt;blogs/&lt;/code&gt; folder; &lt;code&gt;pages/blogs/index.vue&lt;/code&gt;&lt;br&gt;
&lt;br&gt;&lt;br&gt;
Then in the &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;, we pass in &lt;code&gt;$content&lt;/code&gt; and &lt;code&gt;params&lt;/code&gt; into our &lt;code&gt;asyncData&lt;/code&gt; function.&lt;br&gt;
Within the function we pass &lt;code&gt;aritcles&lt;/code&gt; which is the folder which our articles are stored into &lt;code&gt;$content&lt;/code&gt; and chain &lt;code&gt;.only(['title', 'slug', 'updatedAt', 'description'])&lt;/code&gt; to fetch only those attributes from the articles,&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;code&gt;.sortBy('createdAt', 'asc')&lt;/code&gt; to sort it&lt;br&gt;
&lt;br&gt;&lt;br&gt;
and lastly &lt;code&gt;fetch()&lt;/code&gt; to fetch the data and assign it to &lt;code&gt;const articles&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="c"&gt;&amp;lt;!-- pages/blog/index.vue --&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
  &lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;asyncData&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;$content&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;articles&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;$content&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;articles&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;only&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;title&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;slug&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;updatedAt&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;description&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sortBy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;createdAt&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;asc&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;articles&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;

    &lt;span class="na"&gt;methods&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;formatDate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// format the date to be displayed in a readable format&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we can use the &lt;code&gt;v-for&lt;/code&gt; directive to render our articles from the &lt;code&gt;articles&lt;/code&gt; data&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="c"&gt;&amp;lt;!-- pages/blog/index.vue --&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;template&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;section&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"blog"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;header&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"blog-header"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;It's nice you're here. Welcome.&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;
        Have a look what I've been spending hours behind the screen writing
        about
      &lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/header&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;ul&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"articles"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;li&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"article"&lt;/span&gt; &lt;span class="na"&gt;v-for=&lt;/span&gt;&lt;span class="s"&gt;"article of articles"&lt;/span&gt; &lt;span class="na"&gt;:key=&lt;/span&gt;&lt;span class="s"&gt;"article.slug"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;nuxt-link&lt;/span&gt; &lt;span class="na"&gt;:to=&lt;/span&gt;&lt;span class="s"&gt;"{ name: 'blog-slug', params: { slug: article.slug } }"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;{{ article.title }}&lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;{{ article.description }}&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;

          &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"details-cont"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;span&amp;gt;&lt;/span&gt;{{ formatDate(article.updatedAt) }}&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/nuxt-link&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;

&lt;span class="c"&gt;&amp;lt;!--- Styling the page --&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;style &lt;/span&gt;&lt;span class="na"&gt;scoped&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="k"&gt;@layer&lt;/span&gt; &lt;span class="n"&gt;base&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nc"&gt;.blog&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="err"&gt;@apply&lt;/span&gt; &lt;span class="err"&gt;p-4&lt;/span&gt; &lt;span class="err"&gt;mt-6&lt;/span&gt; &lt;span class="py"&gt;lg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;mt-8&lt;/span&gt; &lt;span class="n"&gt;m-auto&lt;/span&gt; &lt;span class="n"&gt;lg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;max-w-3xl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nc"&gt;.blog-header&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="err"&gt;@apply&lt;/span&gt; &lt;span class="err"&gt;prose&lt;/span&gt; &lt;span class="py"&gt;lg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;prose-xl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="err"&gt;@apply&lt;/span&gt; &lt;span class="err"&gt;mb-12&lt;/span&gt; &lt;span class="err"&gt;pb-8&lt;/span&gt; &lt;span class="py"&gt;lg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;mb-16&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nc"&gt;.blog-header&lt;/span&gt; &lt;span class="nt"&gt;h1&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="err"&gt;@apply&lt;/span&gt; &lt;span class="err"&gt;mb-0;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nc"&gt;.articles&lt;/span&gt; &lt;span class="nc"&gt;.article&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="err"&gt;@apply&lt;/span&gt; &lt;span class="err"&gt;prose&lt;/span&gt; &lt;span class="py"&gt;lg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;prose-lg&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="err"&gt;@apply&lt;/span&gt; &lt;span class="err"&gt;pl-0&lt;/span&gt; &lt;span class="err"&gt;py-2&lt;/span&gt; &lt;span class="err"&gt;list-none;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nc"&gt;.articles&lt;/span&gt; &lt;span class="nc"&gt;.article&lt;/span&gt; &lt;span class="nt"&gt;h2&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="err"&gt;@apply&lt;/span&gt; &lt;span class="err"&gt;mb-0;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's visit &lt;a href="http://localhost:3000/blog"&gt;http://localhost:3000/blog&lt;/a&gt;, we should see our blog page&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OV34al5V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5uh8bdz3j8ru2zyk4tbv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OV34al5V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5uh8bdz3j8ru2zyk4tbv.png" alt="blog-with-nuxt-content-blog-list-index-page-Annotation 2021-07-14 061942"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-a-navigation-for-our-site"&gt;
  &lt;/a&gt;
  Creating a navigation for our site
&lt;/h2&gt;

&lt;p&gt;The last thing we are going to be doing is creating a simple navigation that will take us to our home page and blog page.&lt;/p&gt;

&lt;p&gt;Let's create our &lt;code&gt;siteHeader.vue&lt;/code&gt; component in &lt;code&gt;components/&lt;/code&gt; with some basic styling.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="c"&gt;&amp;lt;!-- components/siteHeader.vue --&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;template&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;header&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"site-header"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"site-header"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"wrapper"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;nuxt-link&lt;/span&gt; &lt;span class="na"&gt;to=&lt;/span&gt;&lt;span class="s"&gt;"/"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;figure&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"site-logo"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;PortfolioX&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/figure&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/nuxt-link&amp;gt;&lt;/span&gt;

      &lt;span class="nt"&gt;&amp;lt;nav&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"site-nav"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;ul&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"links"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;li&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"link"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;nuxt-link&lt;/span&gt; &lt;span class="na"&gt;to=&lt;/span&gt;&lt;span class="s"&gt;"/blog"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Blog&lt;span class="nt"&gt;&amp;lt;/nuxt-link&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/nav&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/header&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
  &lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;style &lt;/span&gt;&lt;span class="na"&gt;scoped&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="k"&gt;@layer&lt;/span&gt; &lt;span class="n"&gt;components&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nc"&gt;.site-header&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="err"&gt;@apply&lt;/span&gt; &lt;span class="err"&gt;w-auto&lt;/span&gt; &lt;span class="err"&gt;p-4&lt;/span&gt; &lt;span class="err"&gt;py-8&lt;/span&gt; &lt;span class="err"&gt;sticky&lt;/span&gt; &lt;span class="err"&gt;top-0&lt;/span&gt; &lt;span class="err"&gt;bg-white&lt;/span&gt; &lt;span class="err"&gt;bg-opacity-70&lt;/span&gt; &lt;span class="err"&gt;backdrop-filter&lt;/span&gt; &lt;span class="err"&gt;backdrop-blur-md&lt;/span&gt; &lt;span class="err"&gt;z-10;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nc"&gt;.site-header&lt;/span&gt; &lt;span class="nc"&gt;.wrapper&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="err"&gt;@apply&lt;/span&gt; &lt;span class="err"&gt;m-auto&lt;/span&gt; &lt;span class="err"&gt;max-w-5xl&lt;/span&gt; &lt;span class="err"&gt;flex&lt;/span&gt; &lt;span class="err"&gt;items-center&lt;/span&gt; &lt;span class="err"&gt;justify-between;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, we add it to our default site layout, in &lt;code&gt;layouts/default.vue&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="c"&gt;&amp;lt;!-- layouts/default.vue --&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;template&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;site-header&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;Nuxt&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Our &lt;code&gt;siteHeader.vue&lt;/code&gt; It is now automatically imported into our layout. Have a look at our page&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_Iz-wFj2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3ighw93fy7merzj1gvg1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_Iz-wFj2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3ighw93fy7merzj1gvg1.png" alt="blog-with-nuxt-content-blog-with-site-header-Annotation 2021-07-14 075929"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Beautiful 😘&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;We've managed to build a pretty simple blog site with important features using just one module, nuxt/content.&lt;br&gt;
The focus of this article was the content module, so, I'll drop links for more reading on tailwindcss.&lt;br&gt;
&lt;br&gt;&lt;br&gt;
I think this is a pretty awesome and useful feature in Nuxt.js.I think you would love to play around with it even more because there is a lot more functionality you can add to your project that we didn't cover here.&lt;/p&gt;

&lt;p&gt;I hope you see this useful, I will consider writing on deployment in the future but I'll just drop some links that I feel are useful till then.&lt;/p&gt;

&lt;p&gt;Thanks for reading. Happy coding 😎.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#futher-reading"&gt;
  &lt;/a&gt;
  Futher Reading
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#useful-links"&gt;
  &lt;/a&gt;
  Useful links
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;The content module documentation: &lt;a href="https://content.nuxtjs.org/"&gt;https://content.nuxtjs.org/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;NuxtJs documentation: &lt;a href="https://nuxtjs.org/docs/2.x/get-started/installation"&gt;https://nuxtjs.org/docs/2.x/get-started/installation&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Tailwindcss documentation: &lt;a href="https://tailwindcss.com/docs/"&gt;https://tailwindcss.com/docs/&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#awesome-reads"&gt;
  &lt;/a&gt;
  Awesome reads
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;An article on creatung a blog with Nuxt content: &lt;a href="https://nuxtjs.org/blog/creating-blog-with-nuxt-content#add-a-search-field"&gt;https://nuxtjs.org/blog/creating-blog-with-nuxt-content#add-a-search-field&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;An article on building a prtfolio site with NuxtJs: &lt;a href="https://itnext.io/building-the-ultimate-portfolio-site-with-nuxt-js-and-netlify-beautiful-blazing-fast-100-seod-102913a60cfd"&gt;https://itnext.io/building-the-ultimate-portfolio-site-with-nuxt-js-and-netlify-beautiful-blazing-fast-100-seod-102913a60cfd&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>nuxt</category>
      <category>nuxtcontent</category>
      <category>vue</category>
      <category>tailwindcss</category>
    </item>
    <item>
      <title>Advanced TypeScript - typing JSON/Resource files.</title>
      <author>Prithpal Sooriya</author>
      <pubDate>Sat, 11 Sep 2021 22:11:16 +0000</pubDate>
      <link>https://dev.to/prithpalsooriya/advanced-typescript-typing-json-resource-files-4h62</link>
      <guid>https://dev.to/prithpalsooriya/advanced-typescript-typing-json-resource-files-4h62</guid>
      <description>&lt;p&gt;By setting &lt;code&gt;resolveJsonModule&lt;/code&gt; in your &lt;code&gt;tsconfig&lt;/code&gt; to true, TypeScript will attempt to get the type/shape of the JSON for you.&lt;/p&gt;

&lt;p&gt;We can use this to provide better type safety and auto complete for functions that use the JSON files.&lt;/p&gt;

&lt;p&gt;For example typing i18n/resource. Either for custom solutions, library wrappers, or for libraries themselves.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-existingstatic-imports"&gt;
  &lt;/a&gt;
  Using existing/static imports.
&lt;/h2&gt;

&lt;p&gt;Static imports are the usual imports you see at the top of the file.&lt;/p&gt;

&lt;p&gt;If we are already statically importing our JSON resource, we can use &lt;code&gt;typeof&lt;/code&gt; &amp;amp; &lt;code&gt;keyof&lt;/code&gt; to get its type and keys.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Resources&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./resource.json&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;ResourceKeys&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kr"&gt;keyof&lt;/span&gt; &lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;Resources&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// Index to keys path if complex.&lt;/span&gt;
&lt;span class="c1"&gt;// type ResourceKeys = keyof typeof Resources['path']['to']['key']&lt;/span&gt;

&lt;span class="p"&gt;...&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;translate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;ResourceKeys&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#using-dynacmic-imports"&gt;
  &lt;/a&gt;
  Using Dynacmic Imports
&lt;/h2&gt;

&lt;p&gt;If we are worried about the import cost, then we can use dynamic imports for our actual code &amp;amp; type imports for the TypeScript types.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Type only import.&lt;/span&gt;
&lt;span class="c1"&gt;// Stripped when transpiled&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;Resources&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./resource.json&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;ResourceKeys&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kr"&gt;keyof&lt;/span&gt; &lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;Resources&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(...)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Dynamic import&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;resource&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./resource.json&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;...&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;translate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;ResourceKeys&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If your version of TypeScript does not support typed imports, then we can extract out the types to separate file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// ResourceTypes.ts&lt;/span&gt;
&lt;span class="cm"&gt;/*
  Import is only used for type (no JS code).
  This file only contains types.
  &amp;gt; Will get transpiled to an empty file
  &amp;gt; Will be tree shaken out of bundle.
*/&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Resources&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./resource.json&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;ResourceKeys&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kr"&gt;keyof&lt;/span&gt; &lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;Resources&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#using-declaration-files"&gt;
  &lt;/a&gt;
  Using Declaration Files
&lt;/h2&gt;

&lt;p&gt;Finally we could modify/use declaration files. This is great if you are using a library E.g. &lt;a href="https://react.i18next.com/latest/TypeScript"&gt;i18next docs&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;We have successfully used this to provide auto-complete &amp;amp; type safety. We have even spotted missing or misspelled keys!&lt;/p&gt;

&lt;p&gt;One caveat is that we had to restart our TS server if our resources were modified or new keys were added. I think this was due to our large resources, or maybe due to caching done on the TS server?&lt;br&gt;&lt;br&gt;
But a relatively small price to get this type safety.&lt;/p&gt;

</description>
      <category>typescript</category>
      <category>json</category>
      <category>internationalisation</category>
      <category>i18n</category>
    </item>
    <item>
      <title>Top Programming Languages</title>
      <author>Ritik Tiwari</author>
      <pubDate>Sat, 11 Sep 2021 21:25:22 +0000</pubDate>
      <link>https://dev.to/theritiktiwari/top-programming-languages-35mf</link>
      <guid>https://dev.to/theritiktiwari/top-programming-languages-35mf</guid>
      <description>&lt;h2&gt;
  &lt;a href="#c"&gt;
  &lt;/a&gt;
  C++
&lt;/h2&gt;

&lt;p&gt;If you are interested in learning C++, remember that it's a very complex language to learn in beginning. If you are aiming at taking on big projects where you wish to have a lot of control of how the things work, C++ is a good choice. If you know C then C++ is bit simple for you but not C isn't mandatory. Once you master C++, learning other programming language is much easier. &lt;/p&gt;

&lt;p&gt;&lt;code&gt;C/C++ is also good for placements.&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#java"&gt;
  &lt;/a&gt;
  Java
&lt;/h2&gt;

&lt;p&gt;If you aren't sure that what you do with coding then java is good choice because of its versatility. Java is a great asset to have when you start applying for your first job as a developer. Java is most the useful/preferred programming language for android mobile development. Java is quite difficult for beginners but this will be simple with time.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Java is also a good choice for placements.&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#javascript"&gt;
  &lt;/a&gt;
  JavaScript
&lt;/h2&gt;

&lt;p&gt;If you want to become a front-end developer, you have to learn javascript at some point. A full-scalable website can't build without JavaScript. JS is the "hottest" &amp;amp; best language for web development at this moment. No trouble to finding a job once you master in JavaScript. Use JS with HTML - CSS &amp;amp; you got a complete portfolio of skills to get your first front-end developer job!&lt;/p&gt;

&lt;p&gt;&lt;code&gt;JS is less preferred for placements.&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#python"&gt;
  &lt;/a&gt;
  Python
&lt;/h2&gt;

&lt;p&gt;If you want to see results quickly and build meaningful from the beginning, python is a great choice. Python lets you create so many different projects from data mining to game development that you can start learning it &amp;amp; see what you like the most as you progress. Python is a slow language &amp;amp; can't be use competitive programming. &lt;/p&gt;

&lt;p&gt;&lt;code&gt;Python is also less preferred for placements.&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#objectivec"&gt;
  &lt;/a&gt;
  Objective-C
&lt;/h2&gt;

&lt;p&gt;If you want to create the apps for the App Store, objective-C is a necessary skill you need to learn. When you start learning Objective-C, be prepared to learn Swift too. The combination of these two languages will give you great skill set for iOS development for a long time! &lt;/p&gt;

&lt;p&gt;&lt;code&gt;Objective-C has not good scope for placements.&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#php"&gt;
  &lt;/a&gt;
  PHP
&lt;/h2&gt;

&lt;p&gt;Since PHP is easy to get started with, it's a great choice for a beginner programmer. Additionally PHP is the most useful programming language for Wordpress Development. If you're planning to become a freelance web-developer; PHP is safe choice : Wordpress &amp;amp; other Content Management Systems (CMS) often use PHP. &lt;/p&gt;

&lt;p&gt;&lt;code&gt;PHP also has not good scope for placements.&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This is a distinct point of view; most firms follow this, but it may be different in your instance.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Also Check : &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/theritiktiwari/dev-resources"&gt;Developer Resources&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://instagram.com/codingwalls"&gt;Coding Walls&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>cpp</category>
      <category>javascript</category>
      <category>php</category>
      <category>python</category>
    </item>
    <item>
      <title>Utilizando o Session Manager - AWS System Manager
</title>
      <author>Rafael Conceição</author>
      <pubDate>Sat, 11 Sep 2021 21:13:55 +0000</pubDate>
      <link>https://dev.to/rafaelonline/utilizando-o-session-manager-aws-system-manager-44j3</link>
      <guid>https://dev.to/rafaelonline/utilizando-o-session-manager-aws-system-manager-44j3</guid>
      <description>&lt;h2&gt;
  &lt;a href="#o-que-%C3%A9-o-system-manager"&gt;
  &lt;/a&gt;
  O que é o System Manager?
&lt;/h2&gt;

&lt;p&gt;O &lt;a href="https://aws.amazon.com/pt/systems-manager/"&gt;System Manager&lt;/a&gt;, também conhecido como SSM, é um serviço que permite acompanhar e gerenciar sua infraestrutura. Sendo possível automatizar tarefas, manter a conformidade e segurança de instâncias EC2 e também servidores locais.&lt;/p&gt;

&lt;p&gt;Ele é composto por cinco (05) categorias: &lt;a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-ops-center.html"&gt;Operations Management&lt;/a&gt;, &lt;a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-application-management.html"&gt;Application Management&lt;/a&gt;, &lt;a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-actions-and-change.html"&gt;Change Management&lt;/a&gt;, &lt;a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-instances-and-nodes.html"&gt;Node Management&lt;/a&gt;, e &lt;a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-shared-resources.html"&gt;Shared Resources&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#o-que-%C3%A9-o-session-manager"&gt;
  &lt;/a&gt;
  O que é o Session Manager?
&lt;/h2&gt;

&lt;p&gt;O &lt;a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/session-manager.html#session-manager-benefits"&gt;Session Manager&lt;/a&gt; permite o gerenciamento de instâncias EC2 e/ou máquinas locais, através de um shell baseado em browser e também através do AWS CLI.&lt;/p&gt;

&lt;p&gt;Principais benefícios na utilização:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Controle quem pode utilizar o Session Manager e quais instâncias podem eles podem acessar, de forma centralizada através do IAM.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Não é necessário ter portas SSH abertas para realizar um acesso remoto, como isso também não é necessário ficar gerenciando chaves SSH e certificados.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Logging e auditora da sessão, fornecendo o registro de conexões, comandos executados na instância e notificações de início/término de uma sessão.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#configurando-o-system-manager-para-o-session-manager"&gt;
  &lt;/a&gt;
  Configurando o System Manager, para o Session Manager
&lt;/h2&gt;

&lt;p&gt;Por padrão o System Manager não tem permissão para executar ações nas instâncias. Para isso é necessário utilizar um IAM Profile para conceder acesso, então algumas políticas podem ser necessárias:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;AmazonSSMManagedInstanceCore&lt;/em&gt;: Essa política permite a utilização principal do serviço do System Manager. Sendo de uso obrigatório.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;AmazonSSMDirectoryServiceAccess&lt;/em&gt;: Necessário quando você deseja associar a instância a um Directory Service.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;CloudWatchAgentServerPolicy&lt;/em&gt;: Necessário quando você pretende utilizar recursos do Amazon EventBridge ou CloudWatch Logs na instância.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Criei um código Terraform para servir de exemplo de criação de uma politica, role e IAM Profile, confere lá no meu Github o repositório &lt;a href="https://github.com/rafaelonline/aws-ssm-policy/"&gt;aws-ssm-policy&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A política deve ser associada a role utilizada pelas instâncias. Se a instância não tenha nenhuma role, é possível associar a role que criamos com o código Terraform anterior.&lt;/p&gt;

&lt;p&gt;Caso deseje utilizar o KMS para criptografar a conexão ou exportar logs para o S3 , por exemplo, será necessário permissões adicionais, consulte a &lt;a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/getting-started-create-iam-instance-profile.html"&gt;documentação&lt;/a&gt; para maiores detalhes:&lt;/p&gt;

&lt;p&gt;É possível também restringir a utilização por usuários/grupos, para isso verifique a &lt;a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/session-manager-getting-started-restrict-access.html"&gt;documentação&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#utilizando-o-session-manager"&gt;
  &lt;/a&gt;
  Utilizando o Session Manager
&lt;/h2&gt;

&lt;p&gt;Via Console EC2&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Selecione a instância e escolha &lt;strong&gt;Conectar&lt;/strong&gt; .&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Para &lt;strong&gt;Método de conexão&lt;/strong&gt;, escolha &lt;strong&gt;Gerenciador de sessão&lt;/strong&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Escolha &lt;strong&gt;conectar&lt;/strong&gt; .&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Via AWS CLI&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Para iniciar uma sessão usando o AWS CLI, execute o seguinte comando.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;aws ssm start-session &lt;span class="nt"&gt;--target&lt;/span&gt; instance-id
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;O AWS CLI deve estar instalado e configurado no computador de origem.&lt;/p&gt;

&lt;p&gt;Outros métodos podem ser consultados na &lt;a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/session-manager-working-with-sessions-start.html"&gt;documentação&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sobre-o-ssm-agent"&gt;
  &lt;/a&gt;
  Sobre o SSM agent
&lt;/h2&gt;

&lt;p&gt;O SSM agent deve estar instalado em cada instância para que seja possível o gerenciamento por parte do System Manager.&lt;/p&gt;

&lt;p&gt;Por padrão o agente vem pré-instalado nas seguintes AMIs fornecidas pela AWS:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Amazon Linux 1 e 2&lt;/li&gt;
&lt;li&gt;Amazon Linux 2 ECS-Optimized&lt;/li&gt;
&lt;li&gt;Ubuntu Server 16.04, 18.04 e 20.04&lt;/li&gt;
&lt;li&gt;Windows Server 2008-2019&lt;/li&gt;
&lt;li&gt;macOS 10.14.x e 10.15.x&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Mais detalhes sobre o serviço, consulta de logs do agente e atualizações, acesse a página da &lt;a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/ssm-agent.html"&gt;documentação&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>aws</category>
      <category>ssm</category>
      <category>security</category>
      <category>ec2</category>
    </item>
    <item>
      <title>10 Android Apps to Evolve Your Programming Skills</title>
      <author>Aya Bouchiha</author>
      <pubDate>Sat, 11 Sep 2021 21:11:00 +0000</pubDate>
      <link>https://dev.to/ayabouchiha/10-android-apps-to-evolve-your-programming-skills-17ce</link>
      <guid>https://dev.to/ayabouchiha/10-android-apps-to-evolve-your-programming-skills-17ce</guid>
      <description>&lt;h2&gt;
  &lt;a href="#10-android-apps-to-evolve-your-programming-skills"&gt;
  &lt;/a&gt;
  10 android apps to evolve your programming skills.
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://play.google.com/store/apps/details?id=com.datacamp&amp;amp;hl=en&amp;amp;gl=US"&gt;DataCamp: Learn Python, SQL &amp;amp; R coding&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://play.google.com/store/apps/details?id=com.getmimo&amp;amp;hl=en&amp;amp;gl=US"&gt;Mimo: Learn coding in HTML, JavaScript, Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://play.google.com/store/apps/details?id=com.learnprogramming.codecamp&amp;amp;hl=en&amp;amp;gl=US"&gt;Programming Hero: Coding Just Got Fun (beta)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://play.google.com/store/apps/details?id=com.area120.grasshopper&amp;amp;hl=en&amp;amp;gl=US"&gt;Grasshopper: Learn to Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://play.google.com/store/apps/details?id=com.freeit.java&amp;amp;hl=en&amp;amp;gl=US"&gt;Programming Hub: Learn to code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://play.google.com/store/apps/details?id=com.sololearn&amp;amp;hl=en&amp;amp;gl=US"&gt;Sololearn: Learn to Code for Free&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://play.google.com/store/apps/details?id=com.codinghomies.programming.books.learn.to.code&amp;amp;hl=en&amp;amp;gl=US"&gt;900+ Programming Books - Free Coding Books at Once&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://play.google.com/store/apps/details?id=free.programming.programming&amp;amp;hl=en&amp;amp;gl=US"&gt;Learn DS &amp;amp; Algo, Programming Interview Preparation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://play.google.com/store/apps/details?id=net.androidsquad.androidmaster&amp;amp;hl=en&amp;amp;gl=US"&gt;Master Coding - Learn Coding from Zero to Hero&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Have a good day!&lt;/p&gt;

</description>
      <category>codenewbie</category>
      <category>beginners</category>
      <category>100daysofcode</category>
    </item>
    <item>
      <title>What features can a Blog Website Should Have?</title>
      <author>Himanshu</author>
      <pubDate>Sat, 11 Sep 2021 19:52:46 +0000</pubDate>
      <link>https://dev.to/hima_khaitan/what-features-can-a-blog-website-should-have-3m2a</link>
      <guid>https://dev.to/hima_khaitan/what-features-can-a-blog-website-should-have-3m2a</guid>
      <description>&lt;h3&gt;
  &lt;a href="#idea"&gt;
  &lt;/a&gt;
  Idea
&lt;/h3&gt;

&lt;p&gt;One must wonder what features to include in a Blog Website. So did I. After a long run of thoughts I made this aesthetic looking website and named it &lt;strong&gt;The Chaotic&lt;/strong&gt;.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/himakhaitan"&gt;
        himakhaitan
      &lt;/a&gt; / &lt;a href="https://github.com/himakhaitan/TheChaotic"&gt;
        TheChaotic
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      The Chaotic is a Personal Blog Website 💻 made using MERN Stack. The theme of the website is set to aesthetic as well as inspiring🌱. To be more precise, the website is set to target Youth Audience as a whole. 🧲
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;

  &lt;br&gt;
  &lt;a rel="noopener noreferrer" href="https://github.com/himakhaitan/TheChaotic/blob/main/images/Logo.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Idf6O9aK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/himakhaitan/TheChaotic/raw/main/images/Logo.png" width="200"&gt;&lt;/a&gt;
  &lt;br&gt;  
  The Chaotic - Blog Website
  &lt;br&gt;
&lt;/h1&gt;
&lt;p&gt;
&lt;a href="https://www.mongodb.com/" rel="nofollow"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IkxXKTiA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/himakhaitan/TheChaotic/raw/main/images/mongodb.png" width="100"&gt;
&lt;/a&gt; 
&lt;a href="https://expressjs.com/" rel="nofollow"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6n_wHbQl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/himakhaitan/TheChaotic/raw/main/images/expressjs.png" width="100"&gt;
&lt;/a&gt;
 
&lt;a href="https://reactjs.org/" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vIyOZy5F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/himakhaitan/TheChaotic/raw/main/images/reactjs.png" width="60"&gt;&lt;/a&gt;
   
&lt;a href="https://nodejs.org/en/" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--psITFUtv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/himakhaitan/TheChaotic/raw/main/images/nodejs.png" width="60"&gt;&lt;/a&gt;
  
&lt;/p&gt;

&lt;h4&gt;
A Personal Blog Website Setup using &lt;a href="https://www.mongodb.com/mern-stack" rel="nofollow"&gt;MERN Stack&lt;/a&gt;.&lt;/h4&gt;
&lt;p&gt;
  
    &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/80a1153c429992993a5fc1d8009c2f9ed74f95263366dc21a2daec8fb25077c9/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646570656e64656e636965732d7570253230746f253230646174652d627269676874677265656e2e737667"&gt;&lt;img src="https://camo.githubusercontent.com/80a1153c429992993a5fc1d8009c2f9ed74f95263366dc21a2daec8fb25077c9/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646570656e64656e636965732d7570253230746f253230646174652d627269676874677265656e2e737667"&gt;&lt;/a&gt;
  
  &lt;a href="https://github.com/himakhaitan/TheChaotic/issues"&gt;&lt;img src="https://camo.githubusercontent.com/d9ac4d4824e2b7488101f456174c06f12daa873dc05ff0d5b3c6b18da341c3dc/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f68696d616b68616974616e2f5468654368616f7469632e737667"&gt;&lt;/a&gt;
  &lt;a href="https://opensource.org/licenses/MIT" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/45b4ffbd594af47fe09a3432f9f8e122c6518aa6352b4ce453a1a2563da2905c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d677265656e2e737667"&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
  &lt;a href="https://github.com/himakhaitan/TheChaotic#description"&gt;Description&lt;/a&gt; •
  &lt;a href="https://github.com/himakhaitan/TheChaotic#screenshot"&gt;Screenshot&lt;/a&gt; •
  &lt;a href="https://github.com/himakhaitan/TheChaotic#installation-and-setup"&gt;Installation and Setup&lt;/a&gt; • &lt;a href="https://github.com/himakhaitan/TheChaotic#dependcies"&gt;Dependencies&lt;/a&gt; •
  &lt;a href="https://github.com/himakhaitan/TheChaotic#license"&gt;License&lt;/a&gt; • &lt;a href="https://github.com/himakhaitan/TheChaotic#contribution"&gt;Contribution&lt;/a&gt;
&lt;/p&gt;
&lt;h2&gt;
Description&lt;/h2&gt;
&lt;h2&gt;
Screenshot&lt;/h2&gt;
&lt;p&gt;Below are some of the screenshots of UI from The Chaotic&lt;/p&gt;
&lt;h3&gt;
Home Page&lt;/h3&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/himakhaitan/TheChaotic/blob/main/images/screenshot1.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tadTdgXA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/himakhaitan/TheChaotic/raw/main/images/screenshot1.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
Contact Page&lt;/h3&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/himakhaitan/TheChaotic/blob/main/images/screenshot2.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QQgI3s61--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/himakhaitan/TheChaotic/raw/main/images/screenshot2.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
Category Pages&lt;/h3&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/himakhaitan/TheChaotic/blob/main/images/screenshot4.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e7ZqoAi6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/himakhaitan/TheChaotic/raw/main/images/screenshot4.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/himakhaitan/TheChaotic/blob/main/images/screenshot5.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DIwqGuV3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/himakhaitan/TheChaotic/raw/main/images/screenshot5.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
About Pages&lt;/h3&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/himakhaitan/TheChaotic/blob/main/images/screenshot3.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2k8KNFkn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/himakhaitan/TheChaotic/raw/main/images/screenshot3.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Installation and Setup&lt;/h2&gt;
&lt;h2&gt;
Dependencies&lt;/h2&gt;
&lt;h2&gt;
License&lt;/h2&gt;
&lt;p&gt;This project uses an &lt;a href="https://opensource.org/licenses/MIT" rel="nofollow"&gt;MIT&lt;/a&gt; license.&lt;/p&gt;
&lt;h2&gt;
Contribution&lt;/h2&gt;
&lt;/div&gt;

  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/himakhaitan/TheChaotic"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;The Chaotic is a Personal Blog Website 💻 made using MERN Stack. The theme of the website is set to aesthetic as well as inspiring🌱. To be more precise, the website is set to target Youth Audience as a whole. 🧲&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#details"&gt;
  &lt;/a&gt;
  Details
&lt;/h3&gt;

&lt;p&gt;The frontend of the website is made using ReactJs and backend is made up of NodeJs using ExpressJs. MongoDB is the powering database of the project.&lt;/p&gt;

&lt;p&gt;Backend Default URL - &lt;code&gt;http://localhost:8000&lt;/code&gt;&lt;br&gt;
Frontend Default URL - &lt;code&gt;http://localhost:3000&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#cloning-and-setting-up-the-project"&gt;
  &lt;/a&gt;
  Cloning and Setting up the Project
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Clone the repository using &lt;code&gt;git clone https://github.com/himakhaitan/TheChaotic.git&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;cd into Backend using &lt;code&gt;cd ./Backend&lt;/code&gt; and run &lt;code&gt;npm install&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Now change directory to Frontend &lt;code&gt;cd ../Frontend&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;npm install&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now that you have installed all the dependencies for the project. Now we have to configure our &lt;code&gt;.env&lt;/code&gt; file as per &lt;code&gt;sample.env&lt;/code&gt; for the Backend.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#running-the-project"&gt;
  &lt;/a&gt;
  Running the Project
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;cd into &lt;code&gt;Backend&lt;/code&gt; using &lt;code&gt;cd ./Backend&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;run &lt;code&gt;npm run server&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;cd into &lt;code&gt;Frontend&lt;/code&gt; using &lt;code&gt;cd ../Frontend&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;run &lt;code&gt;npm run start&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#features"&gt;
  &lt;/a&gt;
  Features
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Blogs Archive&lt;/li&gt;
&lt;li&gt;Tags Creation&lt;/li&gt;
&lt;li&gt;Blogs Search&lt;/li&gt;
&lt;li&gt;Contact Form Spam Protection&lt;/li&gt;
&lt;li&gt;Commenting&lt;/li&gt;
&lt;li&gt;Admin Panel&lt;/li&gt;
&lt;li&gt;Admin Authentication&lt;/li&gt;
&lt;li&gt;Categories wise sorting&lt;/li&gt;
&lt;li&gt;Image Uploads&lt;/li&gt;
&lt;li&gt;Social Sharing&lt;/li&gt;
&lt;li&gt;Authorship&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#status"&gt;
  &lt;/a&gt;
  Status
&lt;/h3&gt;

&lt;p&gt;Project is completely open source and it will be highly thankful if someone wants to contribute or point out any issues with the code. You can anytime open a new issue or create a pull request.&lt;/p&gt;

&lt;p&gt;To know more you can reach me through the Discord Server &lt;a href="https://discord.gg/SbD66RXr4W"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#my-github-profile"&gt;
  &lt;/a&gt;
  My Github Profile
&lt;/h3&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/himakhaitan"&gt;
        himakhaitan
      &lt;/a&gt; / &lt;a href="https://github.com/himakhaitan/himakhaitan"&gt;
        himakhaitan
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/himakhaitan/himakhaitan/blob/main/1.jpg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jhPldnYX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/himakhaitan/himakhaitan/raw/main/1.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;
I'm a CSE geek 💻 from India who loves to code.&lt;/h4&gt;
&lt;p&gt;
  &lt;a href="https://github.com/himakhaitan/himakhaitanmailto:himanshukhaitan10@gmail.com"&gt;&lt;img height="40" src="https://res.cloudinary.com/practicaldev/image/fetch/s--xYGaXB7t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/himakhaitan/himakhaitan/raw/main/icons/mail.png"&gt;&lt;/a&gt;
  &lt;a href="https://www.linkedin.com/in/himanshu-khaitan-431666204/" rel="nofollow"&gt;&lt;img height="40" src="https://res.cloudinary.com/practicaldev/image/fetch/s--wxIqX2ly--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/himakhaitan/himakhaitan/raw/main/icons/linkedin.png"&gt;&lt;/a&gt;  &lt;a href="https://www.instagram.com/hima_khaitan/" rel="nofollow"&gt;&lt;img height="40" src="https://res.cloudinary.com/practicaldev/image/fetch/s--hI5Nl9bb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/himakhaitan/himakhaitan/raw/main/icons/insta.png"&gt;&lt;/a&gt;  
  &lt;a href="https://dev.to/hima_khaitan" rel="nofollow"&gt;&lt;img height="40" src="https://res.cloudinary.com/practicaldev/image/fetch/s--jCiVUhCA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/himakhaitan/himakhaitan/raw/main/icons/dev.png"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;An avid and passionate coder specializing in different languages. I love to build and design websites which the end user would enjoy using while keeping the website performant and the code clean. Up for freelance web development work and collaborating on exciting &lt;b&gt;Open Source &amp;amp; Personal&lt;/b&gt; projects.&lt;/p&gt;

&lt;h2&gt;
⚡ Stuff I Know&lt;/h2&gt;
&lt;br&gt;
&lt;p&gt;
&lt;a rel="noopener noreferrer" href="https://github.com/himakhaitan/himakhaitan/blob/main/icons/html5.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WPZScEHV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/himakhaitan/himakhaitan/raw/main/icons/html5.png" height="40"&gt;&lt;/a&gt;      
&lt;a rel="noopener noreferrer" href="https://github.com/himakhaitan/himakhaitan/blob/main/icons/css.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4hgqiZ2J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/himakhaitan/himakhaitan/raw/main/icons/css.png" height="40"&gt;&lt;/a&gt;    
&lt;a rel="noopener noreferrer" href="https://github.com/himakhaitan/himakhaitan/blob/main/icons/sass.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lhTwFUaN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/himakhaitan/himakhaitan/raw/main/icons/sass.png" height="40"&gt;&lt;/a&gt;    
&lt;a rel="noopener noreferrer" href="https://github.com/himakhaitan/himakhaitan/blob/main/icons/bootstrap.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JD5P6TZL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/himakhaitan/himakhaitan/raw/main/icons/bootstrap.png" height="40"&gt;&lt;/a&gt;    
&lt;a rel="noopener noreferrer" href="https://github.com/himakhaitan/himakhaitan/blob/main/icons/js.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZUzycnHh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/himakhaitan/himakhaitan/raw/main/icons/js.png" height="40"&gt;&lt;/a&gt;    
&lt;a rel="noopener noreferrer" href="https://github.com/himakhaitan/himakhaitan/blob/main/icons/node.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dl1FdMRK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/himakhaitan/himakhaitan/raw/main/icons/node.png" height="40"&gt;&lt;/a&gt;    
&lt;a rel="noopener noreferrer" href="https://github.com/himakhaitan/himakhaitan/blob/main/icons/expressjs.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z1s5LNAC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/himakhaitan/himakhaitan/raw/main/icons/expressjs.png" height="40"&gt;&lt;/a&gt;    
&lt;a rel="noopener noreferrer" href="https://github.com/himakhaitan/himakhaitan/blob/main/icons/postman.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TF-nvKo3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/himakhaitan/himakhaitan/raw/main/icons/postman.png" height="40"&gt;&lt;/a&gt;    
&lt;a rel="noopener noreferrer" href="https://github.com/himakhaitan/himakhaitan/blob/main/icons/react.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i9ZJOFsG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/himakhaitan/himakhaitan/raw/main/icons/react.png" height="40"&gt;&lt;/a&gt;    
&lt;a rel="noopener noreferrer" href="https://github.com/himakhaitan/himakhaitan/blob/main/icons/mongo.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dR-32qEA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/himakhaitan/himakhaitan/raw/main/icons/mongo.png" height="40"&gt;&lt;/a&gt;    
&lt;br&gt;&lt;br&gt;
&lt;a rel="noopener noreferrer" href="https://github.com/himakhaitan/himakhaitan/blob/main/icons/c.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Yepts2il--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/himakhaitan/himakhaitan/raw/main/icons/c.png" height="40"&gt;&lt;/a&gt;    
&lt;a rel="noopener noreferrer" href="https://github.com/himakhaitan/himakhaitan/blob/main/icons/cpp.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L31vmUlD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/himakhaitan/himakhaitan/raw/main/icons/cpp.png" height="40"&gt;&lt;/a&gt;    
&lt;a rel="noopener noreferrer" href="https://github.com/himakhaitan/himakhaitan/blob/main/icons/git.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b1430J1c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/himakhaitan/himakhaitan/raw/main/icons/git.png" height="40"&gt;&lt;/a&gt;    
&lt;a rel="noopener noreferrer" href="https://github.com/himakhaitan/himakhaitan/blob/main/icons/github.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5ZEcRHGs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/himakhaitan/himakhaitan/raw/main/icons/github.png" height="40"&gt;&lt;/a&gt;    
&lt;a rel="noopener noreferrer" href="https://github.com/himakhaitan/himakhaitan/blob/main/icons/linux.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LaHtEgGm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/himakhaitan/himakhaitan/raw/main/icons/linux.png" height="40"&gt;&lt;/a&gt;    
&lt;a rel="noopener noreferrer" href="https://github.com/himakhaitan/himakhaitan/blob/main/icons/heroku.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AjAmxEsT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/himakhaitan/himakhaitan/raw/main/icons/heroku.png" height="40"&gt;&lt;/a&gt;    
&lt;a rel="noopener noreferrer" href="https://github.com/himakhaitan/himakhaitan/blob/main/icons/figma.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TgXPEoiw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/himakhaitan/himakhaitan/raw/main/icons/figma.png" height="40"&gt;&lt;/a&gt;    
&lt;a rel="noopener noreferrer" href="https://github.com/himakhaitan/himakhaitan/blob/main/icons/canva.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WX5JulQx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/himakhaitan/himakhaitan/raw/main/icons/canva.png" height="40"&gt;&lt;/a&gt;   
&lt;a rel="noopener noreferrer" href="https://github.com/himakhaitan/himakhaitan/blob/main/icons/redux.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--79n8UtTO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/himakhaitan/himakhaitan/raw/main/icons/redux.png" height="40"&gt;&lt;/a&gt;    
&lt;a rel="noopener noreferrer" href="https://github.com/himakhaitan/himakhaitan/blob/main/icons/next-js.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3iqizuMs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/himakhaitan/himakhaitan/raw/main/icons/next-js.png" height="40"&gt;&lt;/a&gt;    
&lt;a rel="noopener noreferrer" href="https://github.com/himakhaitan/himakhaitan/blob/main/icons/typescript.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aTXDoHB---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/himakhaitan/himakhaitan/raw/main/icons/typescript.png" height="40"&gt;&lt;/a&gt;    
&lt;a rel="noopener noreferrer" href="https://github.com/himakhaitan/himakhaitan/blob/main/icons/wordpress.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OH4C0ulq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/himakhaitan/himakhaitan/raw/main/icons/wordpress.png" height="40"&gt;&lt;/a&gt;    
&lt;/p&gt;
&lt;br&gt;

&lt;p&gt;
  &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/ce7b9188f079294587c7bcb5e720bd2a54a4a393913c48c78c6a1c939fcd93a0/68747470733a2f2f6769746875622d726561646d652d73747265616b2d73746174732e6865726f6b756170702e636f6d3f757365723d68696d616b68616974616e267468656d653d746f6b796f6e6967687426686964655f626f726465723d7472756526666972653d444432373237"&gt;&lt;img src="https://camo.githubusercontent.com/ce7b9188f079294587c7bcb5e720bd2a54a4a393913c48c78c6a1c939fcd93a0/68747470733a2f2f6769746875622d726561646d652d73747265616b2d73746174732e6865726f6b756170702e636f6d3f757365723d68696d616b68616974616e267468656d653d746f6b796f6e6967687426686964655f626f726465723d7472756526666972653d444432373237"&gt;&lt;/a&gt;
    &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/73483d5bfe87818a76d1763bda2c4e0302643e7c1e8d36b1b6747062f5762a03/68747470733a2f2f6769746875622d726561646d652d73746174732e76657263656c2e6170702f6170693f757365726e616d653d68696d616b68616974616e2673686f775f69636f6e733d7472756526686964655f626f726465723d74727565267468656d653d746f6b796f6e6967687426686964655f626f726465723d7472756526666972653d444432373237"&gt;&lt;img src="https://camo.githubusercontent.com/73483d5bfe87818a76d1763bda2c4e0302643e7c1e8d36b1b6747062f5762a03/68747470733a2f2f6769746875622d726561646d652d73746174732e76657263656c2e6170702f6170693f757365726e616d653d68696d616b68616974616e2673686f775f69636f6e733d7472756526686964655f626f726465723d74727565267468656d653d746f6b796f6e6967687426686964655f626f726465723d7472756526666972653d444432373237"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h4&gt;
Happily turning coffee into code!✅
&lt;/h4&gt;

&lt;/div&gt;
&lt;br&gt;
&lt;br&gt;
  &lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/himakhaitan/himakhaitan"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


&lt;h3&gt;
  &lt;a href="#projects-i-am-working-on"&gt;
  &lt;/a&gt;
  Projects I am working on
&lt;/h3&gt;

&lt;p&gt;I am currently working on a MERN stack hospital management system fully equipped to manage modern day Hospitals.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Happily Turning Coffee into Code. 💻🌱&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>showdev</category>
      <category>react</category>
      <category>webdev</category>
      <category>githunt</category>
    </item>
    <item>
      <title>PHP-backend Roadmap</title>
      <author>Elijah Zobenko</author>
      <pubDate>Sat, 11 Sep 2021 19:35:24 +0000</pubDate>
      <link>https://dev.to/he110/php-backend-roadmap-2j1a</link>
      <guid>https://dev.to/he110/php-backend-roadmap-2j1a</guid>
      <description>&lt;p&gt;There are tons of tools in IT to ease programmers' workflow and make a product more efficient. But in the very beginning of honing PHP that might be such a puzzle to pick the right direction and instruments to learn first. A common solution for such problems now – roadmaps – visual sequences which answer the question "what to learn next?". Subject I'd like to discuss in the article – where to invest your time and efforts to learn PHP faster and become a demanding backend programmer.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#php-amp-git-basics"&gt;
  &lt;/a&gt;
  PHP &amp;amp; Git basics
&lt;/h3&gt;

&lt;p&gt;To learn the programming language – just a beginning. And even here it's important to make the right steps. Don't aim to learn and memorize everything about PHP and simply focus on tools you'll be using 90% of the time. And of course, always apply gathered skills in practice.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VSaRWNuu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m3l8dhyku0au5vhx06pq.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VSaRWNuu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m3l8dhyku0au5vhx06pq.jpg" alt="img1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The next deserving attention thing after learning PHP – &lt;a href="https://git-scm.com/"&gt;Git&lt;/a&gt;. You'll probably be using it on a daily basis regardless of your chosen programming language. In a nutshell, Git is a team cooperation tool, which allows you to save states of a code.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#composer-and-databases"&gt;
  &lt;/a&gt;
  Composer and databases
&lt;/h3&gt;

&lt;p&gt;Usage of external libraries is a great solution in most cases. Especially if they earned the community's trust. To use it efficiently you should learn the &lt;a href="https://getcomposer.org/"&gt;Composer&lt;/a&gt; – a packet manager to extremely ease the process of connecting and updating all your PHP dependencies.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---huypkFZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vnphf7d3qhdpd1evlzq2.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---huypkFZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vnphf7d3qhdpd1evlzq2.jpg" alt="PHP Backend Roadmap (7)"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;And finally, we got to the databases. There are so many solutions in the market so it's even hard to list and not to forget any. However, there are few leaders of the field, which I personally recommend to pick for your stack. For relational databases it's &lt;a href="https://www.postgresql.org/download/"&gt;PostgreSQL&lt;/a&gt;, and for NoSQL – &lt;a href="https://www.mongodb.com/try/download/community"&gt;MongoDB&lt;/a&gt;. &lt;a href="https://www.php.net/manual/ru/book.pdo.php"&gt;PDO&lt;/a&gt; will be useful for understanding how all the interaction between PHP and your data happens, and ORMs – will boost the effectiveness and security of that communication.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#working-flow-optimization"&gt;
  &lt;/a&gt;
  Working flow optimization
&lt;/h3&gt;

&lt;p&gt;For any programmer, speed is one of the most important factors. And debugging speed affects it directly. There are two main solutions to get rid of seeded &lt;code&gt;echo&lt;/code&gt; and &lt;code&gt;var_dump&lt;/code&gt; from a code, but my advice is to use the first and more common – xDebug. It's not ever hard to connect and configure it but it will always be bringing benefits.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S9NsiN4Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zzlphb9ewd4nrbvj3tr1.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S9NsiN4Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zzlphb9ewd4nrbvj3tr1.jpg" alt="PHP Backend Roadmap (8)"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;But the quality of the code and its style may seem subjective things, but teamwork requires it really often. In the &lt;a href="https://www.php-fig.org/psr/psr-12/"&gt;PSR-12&lt;/a&gt; standard, you can find the list of recommendations on how to style it. That standard isn't the only existing one, but it's definitely the most common. To simplify following it you can use &lt;a href="https://github.com/squizlabs/PHP_CodeSniffer"&gt;CodeSniffer&lt;/a&gt;. And in order to develop the habit of writing clean code, you can use &lt;a href="https://psalm.dev/"&gt;Psalm&lt;/a&gt;, &lt;a href="https://psalm.dev/"&gt;Phan&lt;/a&gt;, or &lt;a href="https://phpstan.org/"&gt;PHPStan&lt;/a&gt; linters. There's no need to learn each – better to choose the one you like most. In my case it's Psalm.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-about-html"&gt;
  &lt;/a&gt;
  What about HTML?
&lt;/h3&gt;

&lt;p&gt;Talking about PHP there is less and less mentioning of Full-stack. Fields of work have long been divided and PHP has taken an honorable place at the backend. Therefore learning HTML isn't a requirement for us but rather an optimization. What is really important is to clearly understand how to implement interaction with the front-end. Essential things in this area for us are REST and JSON API. Web-browser might be replaced with &lt;a href="https://www.postman.com/downloads/"&gt;Postman&lt;/a&gt; – an ultimate tool to debug API. Earning a habit of documenting interfaces using &lt;a href="https://swagger.io/specification/"&gt;OpenAPI&lt;/a&gt; or &lt;a href="https://apiblueprint.org/"&gt;Blueprint&lt;/a&gt; will save you from constant questions from colleagues and give you +10 to karma.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eXEZhjT7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qpp9vsbwdluv1yimkepr.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eXEZhjT7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qpp9vsbwdluv1yimkepr.jpg" alt="PHP Backend Roadmap (9)"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#boosting-up-the-project"&gt;
  &lt;/a&gt;
  Boosting up the project
&lt;/h3&gt;

&lt;p&gt;The high response rate of the project is due not only to the servers but also to high-quality code. Sometimes to increase it, it's enough to reduce the number of requests to the database or to remember the result of heavy calculations. Caching mechanisms can help us in this. You will find interfaces for organizing them in the &lt;a href="https://www.php-fig.org/psr/psr-6/"&gt;PSR-6&lt;/a&gt; and &lt;a href="https://www.php-fig.org/psr/psr-6/"&gt;PSR-16&lt;/a&gt; standards. And choose the final caching mechanism depending on the project.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--H0RAnlpz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w1ewsxnflinlqhzlv38y.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H0RAnlpz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w1ewsxnflinlqhzlv38y.jpg" alt="PHP Backend Roadmap (10)"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Another common method of speeding up a project is to perform processing in the background. There are two categories of solutions here: task schedulers (&lt;a href="https://timeweb.com/ru/community/articles/chto-takoe-cron"&gt;Crontab&lt;/a&gt;) will be useful for performing mailings, recalculating tariffs, and other regular tasks. And message brokers will allow you to take heavy operations into the background and monitor their execution without slowing down the response to the user.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#testing-and-frameworks"&gt;
  &lt;/a&gt;
  Testing and frameworks
&lt;/h3&gt;

&lt;p&gt;Not all teams write tests for the code. This decision can be made on the basis of many factors. But understanding how to write the testable code is extremely important. Practicing with &lt;a href="https://phpunit.readthedocs.io/en/9.5/"&gt;PHPUnit&lt;/a&gt; will help you gain knowledge in this area. And if you want to try other approaches, pay attention to &lt;a href="https://codeception.com/quickstart"&gt;Codeception&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kzSydacn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pf4rmz95zklahpao0ir5.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kzSydacn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pf4rmz95zklahpao0ir5.jpg" alt="PHP Backend Roadmap (11)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When a lot of tools have been studied, it's time to combine them into a coherent system. In order not to reinvent the wheel, pay attention to one of the popular frameworks. In them, you will find the best modern practices, as well as get used to high-quality architecture. I suggest making a choice from the two most popular options:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://symfony.com/download"&gt;Symfony&lt;/a&gt; – strict and exacting, used mostly in highly loaded applications.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://laravel.com/"&gt;Laravel&lt;/a&gt; – the most common and popular today.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#profiling-and-monitoring"&gt;
  &lt;/a&gt;
  Profiling and monitoring
&lt;/h3&gt;

&lt;p&gt;When your project is launched, it is important to monitor its "health". Are the servers coping? Is there a DDoS attack? Is there a fatal exception on the prod? Monitoring is a simple and useful tool that will give you answers to all these questions. You should start with logging. The &lt;a href="https://www.php-fig.org/psr/psr-3/"&gt;PSR-3&lt;/a&gt; standard describes the interface, and &lt;a href="https://github.com/Seldaek/monolog"&gt;Monolog&lt;/a&gt; will save you from having to write your own logging service. &lt;a href="https://sentry.io/"&gt;Sentry&lt;/a&gt; will help you to be up to date with errors, &lt;a href="https://grafana.com/"&gt;Grafana&lt;/a&gt; will build beautiful graphs, and &lt;a href="https://www.graylog.org/products/open-source#download-open"&gt;Graylog&lt;/a&gt; or &lt;a href="https://www.elastic.co/what-is/elk-stack"&gt;ELK&lt;/a&gt; will simplify log search and incident investigation.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bnTyj5Rh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/20ejicym8fim0yjdgw7w.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bnTyj5Rh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/20ejicym8fim0yjdgw7w.jpg" alt="PHP Backend Roadmap (12)"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;However, there are cases that cannot be solved by simple monitoring. For example, if the application is abnormally slow in certain areas. Such incidents are most effectively solved with the help of profiling tools. You will not use them so often, but it is important to remember about their existence.&lt;/p&gt;

&lt;p&gt;Of course, the PHP world is not limited to the listed tools and, after mastering them, there is still a lot to learn. But remember: at the beginning of your journey, you should focus on the main and most common things that you will meet in 80-90% of teams. All the listed programs and approaches were chosen according to this criterion. Save the &lt;a href="https://psv4.userapi.com/c532036/u5174301/docs/d1/2648ec370a16/PHP_Backend_roadmap.jpg?extra=171JcjPMvETOcLL0cL2DdX90DM49GIrkQLpo8hv71euYSM51JaNnjotlf3envmbbz5-LyKJg4TKKKd1UPs5OFFdeBErx7YJ0WyltSmDL8K7v8O230OAKDveyb64jofjTuGbWBzHkBZQCxat60CBK"&gt;roadmap&lt;/a&gt;, and check it in your educational adventure. And finally: success in studying and building a career.&lt;/p&gt;

</description>
      <category>php</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>One does not "just containerize" an app</title>
      <author>Tyler Smith</author>
      <pubDate>Sat, 11 Sep 2021 19:05:02 +0000</pubDate>
      <link>https://dev.to/tylerlwsmith/one-does-not-just-containerize-an-app-5eae</link>
      <guid>https://dev.to/tylerlwsmith/one-does-not-just-containerize-an-app-5eae</guid>
      <description>&lt;p&gt;The Docker ecosystem is filled with leaky abstractions. The utopian vision of Docker containers is a world where a developer can grab a base container for a language, copy in their code with a minimal Dockerfile, and be ready to develop and deploy instantly.&lt;/p&gt;

&lt;p&gt;Unfortunately, this landscape is filled with per-language gotchas that make this world a far cry from reality. Here are some of the wonky things I've run into when working with containers:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;When working with &lt;strong&gt;Python&lt;/strong&gt;, you &lt;em&gt;really&lt;/em&gt; can't use the Alpine-based images. Python package binaries don't compile correctly on Alpine out of the box. For a lightweight container, you need to use a slim Debian container. This means you must already know that "Buster" and "Stretch" are Debian versions (because Debian is not in the tag name), and you must know which version is more recent.&lt;/li&gt;
&lt;li&gt;When developing using the official &lt;strong&gt;Python&lt;/strong&gt; images, you can't get good autocomplete in your editor without extra steps because the packages aren't in the mounted volume. You can use the VS Code Remote extension to actually edit files within the container, or you could use &lt;code&gt;venv&lt;/code&gt; to colocate the dependencies with the code. However, using &lt;code&gt;venv&lt;/code&gt; within the container won't give you proper autocomplete because the Python interpreter is &lt;em&gt;inside&lt;/em&gt; the container itself.&lt;/li&gt;
&lt;li&gt;The official &lt;strong&gt;PHP&lt;/strong&gt; image won't let you install PHP packages from the Debian repos because its PHP executable is compiled from source. You must instead use the container's &lt;code&gt;docker-php-ext-install&lt;/code&gt; command. &lt;/li&gt;
&lt;li&gt;The official &lt;strong&gt;PHP&lt;/strong&gt; image does not come with PHP's Composer package manager, yet Python, Node and Ruby images all come with their respective language package manager out of the box. You must find a way to programmatically install Composer.&lt;/li&gt;
&lt;li&gt;The official &lt;strong&gt;Node&lt;/strong&gt; image comes preconfigured with a default unprivileged user. This is an incredible feature that I wish all images had, however, it is an image-specific feature that you must keep in mind when building a production Dockerfile.&lt;/li&gt;
&lt;li&gt;You cannot run an unprivileged user with the official &lt;strong&gt;Nginx&lt;/strong&gt; image. Nginx has a separate Nginx image that uses an unprivileged user, however, it is not marked with the official tag.&lt;/li&gt;
&lt;li&gt;The official &lt;strong&gt;MySQL&lt;/strong&gt; image (and countless others) don't have a version for ARM processors, meaning they can't run on common inexpensive devices like the Raspberry Pi.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A few months ago I had a goal of "learning Docker," but I've found that I've instead spent most of my time learning the individual base images and their quirks. This isn't totally surprising since every language requires lots of domain specific knowledge: it took me two weeks to figure out how to deploy my first Rails app on an Ubuntu VM. Docker's infrastructure-as-code paradigm also offers enormous advantages over configuring each development and deployment environment manually, which I did prior to adopting containerization.&lt;/p&gt;

&lt;p&gt;However, it's worth acknowledging the complexities and pain-points of working with Docker images. One does not "just containerize" an app: it's a process that involves a lot of learning for each language and base image.&lt;/p&gt;

</description>
      <category>docker</category>
      <category>devops</category>
      <category>containers</category>
      <category>infrastructure</category>
    </item>
    <item>
      <title>Introduction to Servlets</title>
      <author>Saumya Agnihotri</author>
      <pubDate>Sat, 11 Sep 2021 19:02:33 +0000</pubDate>
      <link>https://dev.to/saumyaagnihotri/introduction-to-servlets-331f</link>
      <guid>https://dev.to/saumyaagnihotri/introduction-to-servlets-331f</guid>
      <description>&lt;p&gt;While surfing any website on the internet, for any page in it there are two things that happens, request and response between the client and server. Client sends a request to retrieve any page and response comes from the server. &lt;/p&gt;

&lt;p&gt;There are basically two types of pages - static and dynamic. Dynamic pages are those pages which are created during run time. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#web-containers"&gt;
  &lt;/a&gt;
  Web containers
&lt;/h2&gt;

&lt;p&gt;So now to understand where servlets fits in this picture, we need to understand something called web containers which are nothing but helper applications which are used to generate these dynamic pages. These helper functions contains servlets for the same purpose. Apache Tomcat is one of the examples for web containers. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#servlets"&gt;
  &lt;/a&gt;
  Servlets
&lt;/h2&gt;

&lt;p&gt;Now what exactly this servlet does and what it is exactly? It's nothing but a java file which can take the request from the client on the internet and it can process that request and it can provide you a response in the form of an HTML page. It's a normal class that extends HttpServlets&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#deployment-descriptor"&gt;
  &lt;/a&gt;
  Deployment Descriptor
&lt;/h2&gt;

&lt;p&gt;Now how does this web container will know which servlet is suitable for handling any incoming request. Well, for that we have web.xml files which are also know as deployment descriptor. Here you mention for which request which servlet should be called.&lt;/p&gt;

</description>
      <category>java</category>
      <category>webdev</category>
      <category>todayilearned</category>
    </item>
    <item>
      <title>Typescript : Type guards simply explained.</title>
      <author>Ricardo Paul</author>
      <pubDate>Sat, 11 Sep 2021 18:46:45 +0000</pubDate>
      <link>https://dev.to/ricardopaul/typescript-type-guards-simply-explained-oik</link>
      <guid>https://dev.to/ricardopaul/typescript-type-guards-simply-explained-oik</guid>
      <description>&lt;p&gt;Today we're exploring a functionality in Typescript called &lt;strong&gt;type guards&lt;/strong&gt;, if the name sounds strange to you,know however this is a technique that you probably have used in plain Javascript if you've been coding in that language for a while.&lt;/p&gt;

&lt;p&gt;Type guards is a technique used in Typescript to get information about the type of a variable (to know what the type is) and this often happens within a conditional block like if/else. To achieve this, typescript makes use of some built-in javascript operators like &lt;code&gt;typeof&lt;/code&gt;, &lt;code&gt;instance of&lt;/code&gt;, the &lt;code&gt;in&lt;/code&gt; operator which is used to determine if an object contains a property.&lt;/p&gt;

&lt;p&gt;So this is enough theory already, let's go through some examples.&lt;br&gt;
Oh just before, type guards mostly come to use when we're dealing with a function whose parameter has a &lt;strong&gt;union type&lt;/strong&gt; as type annotation.&lt;br&gt;
If you're not familiar with Union Types, you can take it literally as a union of types, e.g:&lt;br&gt;
&lt;code&gt;Type UnionOfTypes = string | number&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Let's go through a failing code example to see where Type guards come in.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;StringOrNumber&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt; &lt;span class="c1"&gt;//our union type&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;processAmount&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;amount&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;StringOrNumber&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;amount&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="c1"&gt;//error&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the snippet above, our function &lt;code&gt;processAmount()&lt;/code&gt; takes an argument &lt;code&gt;amount&lt;/code&gt; which can be either a string or a number.&lt;br&gt;
In the function body, we just assume that &lt;code&gt;amount&lt;/code&gt; is a number and try to add 10 to it. The compiler gets confused, it cannot add 10 (number) to &lt;br&gt;
amount (string | number) and thus signals us that there's an error:&lt;br&gt;
&lt;code&gt;Operator '+' cannot be applied to types 'StringOrNumber' and 'number'&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Ok, so what are we doing wrong? Well, we are not narrowing the type of the argument &lt;code&gt;amount&lt;/code&gt;. We need a way to tell the compiler that it should treat &lt;br&gt;
our variable as a number and let us perform our operation. &lt;strong&gt;That's where type guards come in.&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;StringOrNumber&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;processAmount&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;amount&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;StringOrNumber&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;amount&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;number&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;amount&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;amount&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This time, by using the &lt;code&gt;typeof&lt;/code&gt; operator within a conditional block, we tell the typescript compiler to treat &lt;code&gt;amount&lt;/code&gt; as a number within the scope and now our code can compile without errors.&lt;/p&gt;

&lt;p&gt;That is Type guards in a nutshell, remember that there are other operators used to perform Type guards and narrowing in Typescript like &lt;code&gt;instanceof&lt;/code&gt; and &lt;code&gt;in&lt;/code&gt;. I'll cover these in a future blog post.&lt;/p&gt;

</description>
      <category>typescript</category>
      <category>typeguards</category>
      <category>javascript</category>
    </item>
    <item>
      <title>⌨️ An ACTUAL typewriter (that auto types and is interactive too!)  🤯 </title>
      <author>InHuOfficial</author>
      <pubDate>Sat, 11 Sep 2021 18:43:47 +0000</pubDate>
      <link>https://dev.to/inhuofficial/an-actual-interactive-typewriter-2hg9</link>
      <guid>https://dev.to/inhuofficial/an-actual-interactive-typewriter-2hg9</guid>
      <description>&lt;p&gt;A bit late to the party but here is my silly entry for the typewriter wars!&lt;/p&gt;

&lt;p&gt;And unlike everyone else...I built a typewriter!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;warning:&lt;/strong&gt; This will not be very accessible for screen reader users I am afraid.&lt;/p&gt;

&lt;p&gt;&lt;iframe src="https://jsfiddle.net/t4naug2y/7//embedded/result//dark" width="100%" height="600"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;It is a little rough around the edges and way better on a PC, but it works and it will do for a quick idea (I say quick, it took ages!).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#it-is-interactive"&gt;
  &lt;/a&gt;
  It is interactive
&lt;/h2&gt;

&lt;p&gt;Once the initial animation has played you can use it just like a typewriter! You may have to click on the typewriter to focus the fiddle.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;on mobile:&lt;/strong&gt; there is an input you can focus to bring the keyboard up.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-no-tutorial-this-time"&gt;
  &lt;/a&gt;
  What no tutorial this time?
&lt;/h2&gt;

&lt;p&gt;Nope, there is not a single piece of code here that I would want you to use in the real world!&lt;/p&gt;

&lt;p&gt;However I have taken the time to make sure that the key movements actually correspond to the keys on your keyboard, so I hope that you can forgive the shoddy code in exchange for the &lt;strong&gt;eternity&lt;/strong&gt; that it took me to label up all the parts of the SVG!&lt;/p&gt;

&lt;p&gt;Anyway, just have fun with it and at least I joined the fight, even if it was late!&lt;/p&gt;

</description>
      <category>showdev</category>
      <category>css</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>34 Javascript CSS Tabs For Websites 2021</title>
      <author>Niemvuilaptrinh</author>
      <pubDate>Sat, 11 Sep 2021 18:13:17 +0000</pubDate>
      <link>https://dev.to/haycuoilennao19/34-javascript-css-tabs-for-websites-2021-o9l</link>
      <guid>https://dev.to/haycuoilennao19/34-javascript-css-tabs-for-websites-2021-o9l</guid>
      <description>&lt;p&gt;Today's article will introduce tab components built with CSS and Javascript to help the process develop and design your web better as well as improve the user experience when using website. Now let's dive into the commonly used tab components in it's 2021!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-is-component-tab"&gt;
  &lt;/a&gt;
  What Is Component Tab?
&lt;/h1&gt;

&lt;p&gt;The Component tab is a navigational element used in a web page that makes it easy for users to access different content by clicking on the headings above the component tab. It helps You can optimize the page occupancy rate of the elements in the website with the main purpose of helping Users can generalize the content we want to convey as well as display on devices like the phone is more organized and neat.&lt;br&gt;
Some notes when you use component tabs are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Must show which tab is active so that users can determine where they are in content.&lt;/li&gt;
&lt;li&gt;Should display tab titles in the same row.&lt;/li&gt;
&lt;li&gt;Use the shortest and most concise wording possible for each tab title.&lt;/li&gt;
&lt;li&gt;Headings must be related to a content.&lt;/li&gt;
&lt;li&gt;Avoid page reloads when users switch to other tabs.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To make it easier to understand, please see the following example:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3x9gXpYw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/dn4nxz7f0/image/upload/v1594177097/tab-navigation/hinh-anh-tab_loixl2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3x9gXpYw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/dn4nxz7f0/image/upload/v1594177097/tab-navigation/hinh-anh-tab_loixl2.png" alt="Example Tab"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#navbar-tab-html"&gt;
  &lt;/a&gt;
  Navbar Tab HTML
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--75LWgAo2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/tab-html/tab-html/navbar-with-tab-html.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--75LWgAo2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/tab-html/tab-html/navbar-with-tab-html.png" alt="Navbar Tab HTML"&gt;&lt;/a&gt;&lt;br&gt;
You can see the results below.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/team/keyframers/embed/xvoBrx?height=600&amp;amp;default-tab=html,result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#css-tab"&gt;
  &lt;/a&gt;
  CSS Tab
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0xg6HaRN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/tab-html/tab-html/CSS%2520Tab.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0xg6HaRN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/tab-html/tab-html/CSS%2520Tab.png" alt="CSS Tab"&gt;&lt;/a&gt;&lt;br&gt;
You can see the results below.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/ejsado/embed/wDJab?height=600&amp;amp;default-tab=html,result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#animated-transition-tabs"&gt;
  &lt;/a&gt;
  Animated Transition Tabs
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dSWJp_Nw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/tab-html/tab-html/Animated%2520Transition%2520Tabs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dSWJp_Nw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/tab-html/tab-html/Animated%2520Transition%2520Tabs.png" alt="Animated Transition Tabs"&gt;&lt;/a&gt;&lt;br&gt;
You can see the results below.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/flkt-crnpio/embed/WxROwy?height=600&amp;amp;default-tab=html,result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#material-design-css-tabs"&gt;
  &lt;/a&gt;
  Material Design CSS Tabs
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S3xtzdDo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/tab-html/tab-html/Material%2520Design%2520CSS%2520Tabs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S3xtzdDo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/tab-html/tab-html/Material%2520Design%2520CSS%2520Tabs.png" alt="Material Design CSS Tabs"&gt;&lt;/a&gt;&lt;br&gt;
You can see the results below.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/mildrenben/embed/bdGdOb?height=600&amp;amp;default-tab=html,result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#horizontal-scrolling-tabs"&gt;
  &lt;/a&gt;
  Horizontal Scrolling Tabs
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_wKDX03A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/tab-html/tab-html/Horizontal%2520Scrolling%2520Tabs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_wKDX03A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/tab-html/tab-html/Horizontal%2520Scrolling%2520Tabs.png" alt="Horizontal Scrolling Tabs"&gt;&lt;/a&gt;&lt;br&gt;
You can see the results below.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/onlyveen/embed/EXpEqP?height=600&amp;amp;default-tab=html,result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#pure-css-tabs"&gt;
  &lt;/a&gt;
  Pure CSS Tabs
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sQYE7O1N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/tab-html/tab-html/Pure%2520CSS%2520Tabs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sQYE7O1N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/tab-html/tab-html/Pure%2520CSS%2520Tabs.png" alt="Pure CSS Tabs"&gt;&lt;/a&gt;&lt;br&gt;
You can see the results below.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/wallaceerick/embed/ojtal?height=600&amp;amp;default-tab=html,result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#tabs-html-css"&gt;
  &lt;/a&gt;
  Tabs HTML CSS
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2rTYprMP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/tab-html/tab-html/Tabs%2520HTML%2520CSS.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2rTYprMP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/tab-html/tab-html/Tabs%2520HTML%2520CSS.png" alt="Tabs HTML CSS"&gt;&lt;/a&gt;&lt;br&gt;
You can see the results below.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/YozhEzhi/embed/gcLpI?height=600&amp;amp;default-tab=html,result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#simple-jquery-tabs"&gt;
  &lt;/a&gt;
  Simple Jquery Tabs
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VK2iar4F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/tab-html/tab-html/Simple%2520Jquery%2520Tabs%2520%25281%2529.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VK2iar4F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/tab-html/tab-html/Simple%2520Jquery%2520Tabs%2520%25281%2529.png" alt="Simple Jquery Tabs"&gt;&lt;/a&gt;&lt;br&gt;
You can see the results below.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/interstellar/embed/zNapzo?height=600&amp;amp;default-tab=html,result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#html-tab-example"&gt;
  &lt;/a&gt;
  HTML Tab Example
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Kcr68t3h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/tab-html/tab-html/HTML%2520Tab%2520Example.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Kcr68t3h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/tab-html/tab-html/HTML%2520Tab%2520Example.png" alt="HTML Tab Example"&gt;&lt;/a&gt;&lt;br&gt;
You can see the results below.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/CoffeeCupDrummer/embed/qmIdx?height=600&amp;amp;default-tab=html,result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#html-tab-with-icon"&gt;
  &lt;/a&gt;
  HTML Tab With Icon
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Zt5we-dN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/tab-html/tab-html/HTML%2520Tab%2520With%2520Icon%2520%25281%2529.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Zt5we-dN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/tab-html/tab-html/HTML%2520Tab%2520With%2520Icon%2520%25281%2529.png" alt="HTML Tab With Icon"&gt;&lt;/a&gt;&lt;br&gt;
You can see the results below.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/RGonyeau/embed/Mvrzxx?height=600&amp;amp;default-tab=html,result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#responsive-tab-ui"&gt;
  &lt;/a&gt;
  Responsive Tab UI
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NLrDZM8J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/tab-html/tab-html/Responsive%2520Tab%2520UI.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NLrDZM8J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/tab-html/tab-html/Responsive%2520Tab%2520UI.png" alt="Responsive Tab UI"&gt;&lt;/a&gt;&lt;br&gt;
You can see the results below.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/derekjp/embed/pPqwXJ?height=600&amp;amp;default-tab=html,result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#html-tabs-javascript"&gt;
  &lt;/a&gt;
  HTML Tabs Javascript
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EMJPxevP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/tab-html/tab-html/HTML%2520Tabs%2520Javascript%2520%25281%2529.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EMJPxevP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/tab-html/tab-html/HTML%2520Tabs%2520Javascript%2520%25281%2529.png" alt="HTML Tabs Javascript"&gt;&lt;/a&gt;&lt;br&gt;
You can see the results below.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/juliepark/embed/pLMxoP?height=600&amp;amp;default-tab=html,result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#jquery-multiple-tabs"&gt;
  &lt;/a&gt;
  JQuery Multiple Tabs
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_983wZV1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/tab-html/tab-html/JQuery%2520Multiple%2520Tabs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_983wZV1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/tab-html/tab-html/JQuery%2520Multiple%2520Tabs.png" alt="JQuery Multiple Tabs"&gt;&lt;/a&gt;&lt;br&gt;
You can see the results below.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/Ramnk7/embed/yWBWEe?height=600&amp;amp;default-tab=html,result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#tab-switch-animation-css"&gt;
  &lt;/a&gt;
  Tab Switch Animation CSS
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3kxU3lEQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/tab-html/tab-html/Tab%2520Switch%2520Animation%2520CSS%2520.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3kxU3lEQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/tab-html/tab-html/Tab%2520Switch%2520Animation%2520CSS%2520.png" alt="Tab Switch Animation CSS"&gt;&lt;/a&gt;&lt;br&gt;
You can see the results below.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/aaroniker/embed/YRKGPV?height=600&amp;amp;default-tab=html,result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#vertical-tabs"&gt;
  &lt;/a&gt;
  Vertical Tabs
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PbL8oVDk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/tab-html/tab-html/Vertical%2520Tabs%2520%25281%2529.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PbL8oVDk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/tab-html/tab-html/Vertical%2520Tabs%2520%25281%2529.png" alt="Vertical Tabs"&gt;&lt;/a&gt;&lt;br&gt;
You can see the results below.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/hilotacker/embed/dXpeYg?height=600&amp;amp;default-tab=html,result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#beautiful-tabs-css"&gt;
  &lt;/a&gt;
  Beautiful Tabs CSS
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Dm3fKe59--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/tab-html/tab-html/Beautiful%2520Tabs%2520CSS%2520%25281%2529.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Dm3fKe59--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/tab-html/tab-html/Beautiful%2520Tabs%2520CSS%2520%25281%2529.png" alt="Beautiful Tabs CSS"&gt;&lt;/a&gt;&lt;br&gt;
You can see the results below.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/jdniki/embed/PzZERJ?height=600&amp;amp;default-tab=html,result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#tabs-hover-effects"&gt;
  &lt;/a&gt;
  Tabs Hover Effects
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--R1vNuFIc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/tab-html/tab-html/Tabs%2520Hover%2520Effects.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--R1vNuFIc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/tab-html/tab-html/Tabs%2520Hover%2520Effects.png" alt="Tabs Hover Effects"&gt;&lt;/a&gt;&lt;br&gt;
You can see the results below.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/rafaelavlucas/embed/MLKGba?height=600&amp;amp;default-tab=html,result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#css-tabs-without-javascript"&gt;
  &lt;/a&gt;
  CSS Tabs Without Javascript
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0vu9NkMm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/tab-html/tab-html/CSS%2520Tabs%2520Without%2520Javascript.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0vu9NkMm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/tab-html/tab-html/CSS%2520Tabs%2520Without%2520Javascript.png" alt="CSS Tabs Without Javascript"&gt;&lt;/a&gt;&lt;br&gt;
You can see the results below.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/woranov/embed/NRqLWK?height=600&amp;amp;default-tab=html,result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#vertical-tabs-with-smooth-animation"&gt;
  &lt;/a&gt;
  Vertical Tabs With Smooth Animation
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ME07U07W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/tab-html/tab-html/Vertical%2520Tabs%2520With%2520Smooth%2520Animation%2520%25281%2529.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ME07U07W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/tab-html/tab-html/Vertical%2520Tabs%2520With%2520Smooth%2520Animation%2520%25281%2529.png" alt="Vertical Tabs With Smooth Animation"&gt;&lt;/a&gt;&lt;br&gt;
You can see the results below.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/codesuey/embed/zwyGxm?height=600&amp;amp;default-tab=html,result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#css-only-tabs"&gt;
  &lt;/a&gt;
  CSS Only Tabs
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vSJPe4T9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/tab-html/tab-html/CSS%2520Only%2520Tabs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vSJPe4T9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/tab-html/tab-html/CSS%2520Only%2520Tabs.png" alt="CSS Only Tabs"&gt;&lt;/a&gt;&lt;br&gt;
You can see the results below.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/jakealbaugh/embed/KBsIo?height=600&amp;amp;default-tab=html,result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#responsive-css-tabs"&gt;
  &lt;/a&gt;
  RESPONSIVE CSS TABS
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BKaH7DeJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/tab-html/tab-html/RESPONSIVE%2520CSS%2520TABS.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BKaH7DeJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/tab-html/tab-html/RESPONSIVE%2520CSS%2520TABS.png" alt="RESPONSIVE CSS TABS"&gt;&lt;/a&gt;&lt;br&gt;
You can see the results below.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/josh_vogt/embed/EaaZbP?height=600&amp;amp;default-tab=html,result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#3d-css-tabs"&gt;
  &lt;/a&gt;
  3D CSS Tabs
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--28Dt9CKm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/tab-html/tab-html/3D%2520CSS%2520Tabs%2520.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--28Dt9CKm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/tab-html/tab-html/3D%2520CSS%2520Tabs%2520.png" alt="3D CSS Tabs"&gt;&lt;/a&gt;&lt;br&gt;
You can see the results below.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/raevenk/embed/ojXMzV?height=600&amp;amp;default-tab=html,result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#pure-css-tab-navigation"&gt;
  &lt;/a&gt;
  Pure CSS Tab Navigation
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vf56i0HE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/tab-html/tab-html/Pure%2520CSS%2520Tab%2520Navigation.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vf56i0HE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/tab-html/tab-html/Pure%2520CSS%2520Tab%2520Navigation.png" alt="Pure CSS Tab Navigation"&gt;&lt;/a&gt;&lt;br&gt;
You can see the results below.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/chrysokitty/embed/bnsxr?height=600&amp;amp;default-tab=html,result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#responsive-tabs-css-only"&gt;
  &lt;/a&gt;
  Responsive Tabs CSS Only
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--M6orf5ti--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/tab-html/tab-html/Responsive%2520Tabs%2520CSS%2520Only.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--M6orf5ti--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/tab-html/tab-html/Responsive%2520Tabs%2520CSS%2520Only.png" alt="Responsive Tabs CSS Only"&gt;&lt;/a&gt;&lt;br&gt;
You can see the results below.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/JamieKDonnelly/embed/wBQQPK?height=600&amp;amp;default-tab=html,result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#simple-responsive-tabs-with-javascript-and-css"&gt;
  &lt;/a&gt;
  Simple Responsive Tabs With Javascript And CSS
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---opIWiCI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/tab-html/tab-html/Simple%2520Responsive%2520Tabs%2520With%2520Javascript%2520And%2520CSS%2520%25281%2529.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---opIWiCI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/tab-html/tab-html/Simple%2520Responsive%2520Tabs%2520With%2520Javascript%2520And%2520CSS%2520%25281%2529.png" alt="Simple Responsive Tabs With Javascript And CSS"&gt;&lt;/a&gt;&lt;br&gt;
You can see the results below.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/gigghem/embed/RNBNvq?height=600&amp;amp;default-tab=html,result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#pure-css-tabs-responsive"&gt;
  &lt;/a&gt;
  Pure CSS Tabs Responsive
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yq1AY1N0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/tab-html/tab-html/Pure%2520CSS%2520Tabs%2520Responsive.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yq1AY1N0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/tab-html/tab-html/Pure%2520CSS%2520Tabs%2520Responsive.png" alt="Pure CSS Tabs Responsive"&gt;&lt;/a&gt;&lt;br&gt;
You can see the results below.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/japick/embed/NvqKLJ?height=600&amp;amp;default-tab=html,result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#tabs-css-with-image"&gt;
  &lt;/a&gt;
  Tabs CSS With Image
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V4lwysDs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/tab-html/tab-html/Tabs%2520CSS%2520With%2520Image%2520%25281%2529.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V4lwysDs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/tab-html/tab-html/Tabs%2520CSS%2520With%2520Image%2520%25281%2529.png" alt="Tabs CSS With Image"&gt;&lt;/a&gt;&lt;br&gt;
You can see the results below.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/Danil89/embed/pyqpZj?height=600&amp;amp;default-tab=html,result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#tabs-css3-html5"&gt;
  &lt;/a&gt;
  Tabs CSS3 HTML5
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--az84vVAs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/tab-html/tab-html/Tabs%2520CSS3%2520HTML5%2520%25281%2529.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--az84vVAs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/tab-html/tab-html/Tabs%2520CSS3%2520HTML5%2520%25281%2529.png" alt="Tabs CSS3 HTML5"&gt;&lt;/a&gt;&lt;br&gt;
You can see the results below.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/imprakash/embed/epZvbQ?height=600&amp;amp;default-tab=html,result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#simple-tabs-css-collection"&gt;
  &lt;/a&gt;
  Simple Tabs CSS Collection
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GygWQCnI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/tab-html/tab-html/Simple%2520Tabs%2520CSS%2520Collection.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GygWQCnI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/tab-html/tab-html/Simple%2520Tabs%2520CSS%2520Collection.png" alt="Simple Tabs CSS Collection"&gt;&lt;/a&gt;&lt;br&gt;
You can see the results below.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/poppe1219/embed/FsxBa?height=600&amp;amp;default-tab=html,result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#tabs-in-html-using-css"&gt;
  &lt;/a&gt;
  Tabs In HTML Using CSS
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TrpgzZY8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/tab-html/tab-html/Tabs%2520In%2520HTML%2520Using%2520CSS%2520%25281%2529.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TrpgzZY8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/tab-html/tab-html/Tabs%2520In%2520HTML%2520Using%2520CSS%2520%25281%2529.png" alt="Tabs In HTML Using CSS"&gt;&lt;/a&gt;&lt;br&gt;
You can see the results below.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/axelaredz/embed/ipome?height=600&amp;amp;default-tab=html,result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#animated-tabs"&gt;
  &lt;/a&gt;
  Animated tabs
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--G7oWmpGe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/tab-html/tab-html/Animated%2520tabs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--G7oWmpGe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/tab-html/tab-html/Animated%2520tabs.png" alt="Animated tabs"&gt;&lt;/a&gt;&lt;br&gt;
You can see the results below.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/AngelKrak/embed/kbzlr?height=600&amp;amp;default-tab=html,result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#css-animation-transition-tabs"&gt;
  &lt;/a&gt;
  CSS Animation Transition Tabs
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CBUowgwF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/tab-html/tab-html/CSS%2520Animation%2520Transition%2520Tabs%2520%25281%2529.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CBUowgwF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/tab-html/tab-html/CSS%2520Animation%2520Transition%2520Tabs%2520%25281%2529.png" alt="CSS Animation Transition Tabs"&gt;&lt;/a&gt;&lt;br&gt;
You can see the results below.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/Kseso/embed/heysk?height=600&amp;amp;default-tab=html,result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#tabs-css-using-icon"&gt;
  &lt;/a&gt;
  Tabs CSS Using Icon
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RuamgaNF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/tab-html/tab-html/Tabs%2520CSS%2520Using%2520Icon%2520%25281%2529.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RuamgaNF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/tab-html/tab-html/Tabs%2520CSS%2520Using%2520Icon%2520%25281%2529.png" alt="Tabs CSS Using Icon"&gt;&lt;/a&gt;&lt;br&gt;
You can see the results below.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/ejsado/embed/gPVgVv?height=600&amp;amp;default-tab=html,result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#tabs-javascript-with-tweenmax"&gt;
  &lt;/a&gt;
  Tabs Javascript With TweenMax
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--t8dGzyTY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/tab-html/tab-html/Tabs%2520Javascript%2520With%2520TweenMax.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t8dGzyTY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://niemvuilaptrinh.ams3.cdn.digitaloceanspaces.com/tab-html/tab-html/Tabs%2520Javascript%2520With%2520TweenMax.png" alt="Tabs Javascript With TweenMax"&gt;&lt;/a&gt;&lt;br&gt;
You can see the results below.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/PointC/embed/rZZGRj?height=600&amp;amp;default-tab=html,result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/nhat"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rb9xKs4G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png" alt="Buy Me A Coffee"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
      <category>beginners</category>
    </item>
  </channel>
</rss>
