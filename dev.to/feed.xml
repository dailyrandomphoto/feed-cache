<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Modern Software Engineering [Book Notes] </title>
      <author>Jorge Tovar</author>
      <pubDate>Sun, 02 Jan 2022 17:29:01 +0000</pubDate>
      <link>https://dev.to/jorgetovar621/modern-software-engineering-book-notes-5fdn</link>
      <guid>https://dev.to/jorgetovar621/modern-software-engineering-book-notes-5fdn</guid>
      <description>&lt;h2&gt;
  &lt;a href="#notes"&gt;
  &lt;/a&gt;
  Notes
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#whats-software-engineering"&gt;
  &lt;/a&gt;
  What's Software Engineering
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt;: A scientific approach to creating Software. Full of information on how to master learning and handle complexity in our field. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.amazon.com/Modern-Software-Engineering-Discipline-Development/dp/0137314914"&gt;Modern Software Engineering Book&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Software Engineering applies a scientific approach to finding solutions to problems.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Engineering is stuff that works! &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Software development is the process of discovering and learning, &lt;strong&gt;so we need to become experts at learning and handling complexity&lt;/strong&gt;. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Software Engineering practices must allow us to build software faster and better. If not , it is just a waste of time. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Software is not a Production problem (physical things with a high cost of replication). Then we need to use different tools for the job such as testability, experiments, continuous delivery&lt;/strong&gt; remember that our real focus is learning and discovery.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Our Aim as software engineers is to create systems with high Stability and High Throughput (Measuring Performance)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Stability&lt;/strong&gt; = Change Failure Rate + Recover Failure Time&lt;br&gt;
&lt;strong&gt;High Throughput&lt;/strong&gt; = Lead time + Frequency of Deployment &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#optimize-for-learning"&gt;
  &lt;/a&gt;
  Optimize for Learning
&lt;/h3&gt;

&lt;p&gt;Learning is a fundamental factor in our job as professionals, also key in the discovery process of our systems.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Iterative&lt;/li&gt;
&lt;li&gt;Incremental &lt;/li&gt;
&lt;li&gt;Empiricism&lt;/li&gt;
&lt;li&gt;Feedback &lt;/li&gt;
&lt;li&gt;Experimental&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The main idea is to focus on small steps gathering feedback &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Work in a way that allows us to make mistakes &lt;/li&gt;
&lt;li&gt;Explore the problem and make experiments controlling the variables &lt;/li&gt;
&lt;li&gt;We need to learn from previous experiences &lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#optimize-for-handling"&gt;
  &lt;/a&gt;
  Optimize for handling
&lt;/h2&gt;

&lt;p&gt;Edsger Dijkstra said &lt;br&gt;
&lt;em&gt;The art of programming is the art of handling complexity&lt;/em&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Complexity &lt;/li&gt;
&lt;li&gt;Cohesion&lt;/li&gt;
&lt;li&gt;Coupling &lt;/li&gt;
&lt;li&gt;Separation of concerns &lt;/li&gt;
&lt;li&gt;Modularity &lt;/li&gt;
&lt;li&gt;Information hiding and abstraction &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The main idea is focus, keep things simple. &lt;br&gt;
Remember that &lt;code&gt;Simple != Easy&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tools-to-support-engineering-in-software"&gt;
  &lt;/a&gt;
  Tools to support engineering in Software
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Testability&lt;/li&gt;
&lt;li&gt;Deployability&lt;/li&gt;
&lt;li&gt;Controlling the variables &lt;/li&gt;
&lt;li&gt;Continuous delivery&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;One of the main takeaways for me in this chapter was tackling problems from:&lt;br&gt;
&lt;em&gt;Business Vision, Goals &amp;gt; Technical Architecture &amp;gt; Process &amp;gt; Organizational Structure&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;instead of&lt;br&gt;&lt;br&gt;
&lt;em&gt;Organization Structure&amp;gt;  Business Vision, Goals &amp;gt; Technical Architecture &amp;gt; Processes&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;: this book provides valuable insights about Software Engineering and the practices that allow us to work on a Scientific approach. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtube.com/c/ContinuousDelivery"&gt;Dave Farley Youtube&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/davefarley77?t=GwVNXdtcO3Ut1e1WV_jkhg&amp;amp;s=09"&gt;Dave Farley Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>java</category>
      <category>design</category>
      <category>jvm</category>
      <category>architecture</category>
    </item>
    <item>
      <title>api.peviitor.ro; scraper[2]</title>
      <author>Boga Sebastian Nicolae</author>
      <pubDate>Sun, 02 Jan 2022 17:07:08 +0000</pubDate>
      <link>https://dev.to/sebiboga/apipeviitorro-scraper2-4nj1</link>
      <guid>https://dev.to/sebiboga/apipeviitorro-scraper2-4nj1</guid>
      <description>&lt;p&gt;Odata inregistrati in &lt;code&gt;dev.peviitor.ro&lt;/code&gt;, avem acces la API.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xbviLBYn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/65y8zdfia4jwqb6xl93m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xbviLBYn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/65y8zdfia4jwqb6xl93m.png" alt="API" width="880" height="565"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#ce-este-un-api"&gt;
  &lt;/a&gt;
  Ce este un API?
&lt;/h4&gt;

&lt;p&gt;Prin intermediul API-ului pus la dispozitie, ai acces la informatia din index. &lt;br&gt;
API-ul este definit prin cateva end-pointuri. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hLMkMu2F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gjszlatcge6xvpqrvhu6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hLMkMu2F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gjszlatcge6xvpqrvhu6.png" alt="API image" width="880" height="480"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pentru scraper doua endpointuri devin extrem de importante:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Endpointul care sterge locurile de munca ale unei companii: &lt;br&gt;
&lt;a href="https://api.peviitor.ro/#/search%20engine/post_v1_clean_"&gt;CLEAN&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Endpointul care adauga un loc de munca sau mai multe locuri de munca pentru o companie:&lt;br&gt;
&lt;a href="https://api.peviitor.ro/#/search%20engine/post_v1_update_"&gt;UPDATE&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Prin endpointul de UPDATE se pot trimite mai multe locuri de munca folosind un ARRAY de JSON.&lt;/p&gt;

&lt;p&gt;In versiunea 1 al API-ului avem acces la date fara cheia API, dar din versiunea 3, cheia devine obligatorie.&lt;/p&gt;

&lt;p&gt;Puteti consulta API-ul versiunea 1 la adresa: &lt;a href="https://api.peviitor.ro/"&gt;https://api.peviitor.ro/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;API-ul este prezentat prin intermediul SwaggerUI&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5hiynFbJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/skde2dztglptewgoosv2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5hiynFbJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/skde2dztglptewgoosv2.png" alt="swagger_logo" width="419" height="120"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>api</category>
      <category>peviitor</category>
      <category>job</category>
      <category>locuridemunca</category>
    </item>
    <item>
      <title>Running Kedro on Ubuntu 21.10 Impish Indri</title>
      <author>Waylon Walker</author>
      <pubDate>Sun, 02 Jan 2022 16:39:56 +0000</pubDate>
      <link>https://dev.to/waylonwalker/running-kedro-on-ubuntu-2110-impish-indri-1dg2</link>
      <guid>https://dev.to/waylonwalker/running-kedro-on-ubuntu-2110-impish-indri-1dg2</guid>
      <description>&lt;p&gt;I just installed a brand new Ubuntu 21.10 Impish Indri, and wanted a kedro project to play with so I did what any good kedroid would do, I went to my command line and ran&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pipx run kedro new --starter spaceflights
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But what I got back was not what I expected!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;Fatal error from pip prevented installation. Full pip output &lt;span class="k"&gt;in &lt;/span&gt;file:
    /home/walkers/.local/pipx/logs/cmd_2022-01-01_20.42.16_pip_errors.log

Some possibly relevant errors from pip &lt;span class="nb"&gt;install&lt;/span&gt;:
    ERROR: Could not find a version that satisfies the requirement kedro &lt;span class="o"&gt;(&lt;/span&gt;from versions: none&lt;span class="o"&gt;)&lt;/span&gt;
    ERROR: No matching distribution found &lt;span class="k"&gt;for &lt;/span&gt;kedro
Error installing kedro.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is weird, why cant I run kedro new with pipx?  Lets try pip.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;pip &lt;span class="nb"&gt;install &lt;/span&gt;kedro
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Same issue.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;ERROR: Could not find a version that satisfies the requirement kedro &lt;span class="o"&gt;(&lt;/span&gt;from versions: none&lt;span class="o"&gt;)&lt;/span&gt; 
ERROR: No matching distribution found &lt;span class="k"&gt;for &lt;/span&gt;kedro
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;br&gt;
      &lt;a href="https://waylonwalker.com/what-is-kedro/"&gt;&lt;br&gt;
          &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SSzH6VtF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.waylonwalker.com/what-is-kedro-og_250x140.png" alt="article cover for &amp;lt;br&amp;gt;
 What is Kedro&amp;lt;br&amp;gt;
" width="250" height="140"&gt;&lt;br&gt;
      &lt;/a&gt;&lt;br&gt;
  

&lt;blockquote&gt;
&lt;p&gt;Curious what kedro is?  Check out &lt;a href="https://waylonwalker.com/what-is-kedro/"&gt;this article&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;
  &lt;a href="#whats-up"&gt;
  &lt;/a&gt;
  What's up..
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;wrong python version&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The issue is that kedro only runs on up to &lt;code&gt;python 3.8&lt;/code&gt;, and on Ubuntu&lt;br&gt;
21.10 when you &lt;code&gt;apt install python3&lt;/code&gt; you get &lt;code&gt;python 3.9&lt;/code&gt; and the&lt;br&gt;
standard repos don't have an old enough version to run kedro.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#how-to-fix-this"&gt;
  &lt;/a&gt;
  How to fix this?
&lt;/h2&gt;

&lt;p&gt;Theres a couple of ways you can fix this?  They all involve installing a distribution that does not come from the standard repo.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#where-can-i-get-the-right-version"&gt;
  &lt;/a&gt;
  Where Can I get the right version
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Anaconda&lt;/li&gt;
&lt;li&gt;Python.org&lt;/li&gt;
&lt;li&gt;deadsnakes&lt;/li&gt;
&lt;li&gt;pyenv&lt;/li&gt;
&lt;li&gt;miniconda&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#i-have-two-articles-that-can-help-you"&gt;
  &lt;/a&gt;
  I have two articles that can help you
&lt;/h2&gt;


&lt;br&gt;
      &lt;a href="https://waylonwalker.com/install-miniconda/"&gt;&lt;br&gt;
          &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bSxD58im--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.waylonwalker.com/install-miniconda-og_250x140.png" alt="article cover for &amp;lt;br&amp;gt;
 How to Install miniconda on linux (from the command line only)&amp;lt;br&amp;gt;
" width="250" height="140"&gt;&lt;br&gt;
      &lt;/a&gt;&lt;br&gt;
  

&lt;blockquote&gt;
&lt;p&gt;Check out this article on &lt;a href="https://waylonwalker.com/what-is-kedro/"&gt;installing miniconda&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Using miniconda we can make a new conda environment that uses python == 3.8.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;conda create &lt;span class="nt"&gt;-n&lt;/span&gt; myenv &lt;span class="nv"&gt;python&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;3.8
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;br&gt;
      &lt;a href="https://waylonwalker.com/til/pyenv-first-impressions/"&gt;&lt;br&gt;
          &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kePyEnMW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.waylonwalker.com/til/pyenv-first-impressions-og_250x140.png" alt="article cover for &amp;lt;br&amp;gt;
 My first impressions with pyenv&amp;lt;br&amp;gt;
" width="250" height="140"&gt;&lt;br&gt;
      &lt;/a&gt;&lt;br&gt;
  

&lt;p&gt;Check out this post on my first &lt;a href="https://waylonwalker.com/til/pyenv-first-impressions/"&gt;impressions with pyenv&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Using pyenv we can install python == 3.8 to use to create a virtual environment.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;pyenv &lt;span class="nb"&gt;install &lt;/span&gt;3.8.12
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>kedro</category>
      <category>python</category>
      <category>datascience</category>
    </item>
    <item>
      <title>Excelize 2.5.0 Released - Go language API for spreadsheets (Excel) files</title>
      <author>xuri</author>
      <pubDate>Sun, 02 Jan 2022 16:38:44 +0000</pubDate>
      <link>https://dev.to/xuri/excelize-250-released-go-language-api-for-spreadsheets-excel-files-hmg</link>
      <guid>https://dev.to/xuri/excelize-250-released-go-language-api-for-spreadsheets-excel-files-hmg</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jRqmRj73--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fyhamsgpj5bzxf34owxz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jRqmRj73--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fyhamsgpj5bzxf34owxz.png" alt="Excelize 2.5.0 Released - Go language API for spreadsheets (Excel) files" width="880" height="585"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Excelize is a library written in pure Go providing a set of functions that allow you to write to and read from XLSX / XLSM / XLTM files. Supports reading and writing spreadsheet documents generated by Microsoft Excel&amp;amp;tradde; 2007 and later. Supports complex components by high compatibility, and provided streaming API for generating or reading data from a worksheet with huge amounts of data.&lt;/p&gt;

&lt;p&gt;GitHub: &lt;a href="https://github.com/xuri/excelize"&gt;github.com/xuri/excelize&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We are pleased to announce the release of version 2.5.0. Featured are a handful of new areas of functionality and numerous bug fixes.&lt;/p&gt;

&lt;p&gt;A summary of changes is available in the &lt;a href="https://github.com/xuri/excelize/releases/tag/v2.5.0"&gt;Release Notes&lt;/a&gt;. A full list of changes is available in the &lt;a href="https://github.com/xuri/excelize/compare/v2.4.1...v2.5.0"&gt;changelog&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#release-notes"&gt;
  &lt;/a&gt;
  Release Notes
&lt;/h2&gt;

&lt;p&gt;The most notable changes in this release are:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#compatibility"&gt;
  &lt;/a&gt;
  Compatibility
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Close spreadsheet and row's iterator required, the user should be close the stream after using the row's iterator, and close the spreadsheet after opening an existing spreadsheet&lt;/li&gt;
&lt;li&gt;Change &lt;code&gt;ReadZipReader&lt;/code&gt; as an implementation of the &lt;code&gt;File&lt;/code&gt;, extract spreadsheet with given options, and support extract in memory or touching the filesystem&lt;/li&gt;
&lt;li&gt;Remove unnecessary exported variable &lt;code&gt;XMLHeader&lt;/code&gt;, we can using &lt;code&gt;encoding/xml&lt;/code&gt; package's &lt;code&gt;xml.Header&lt;/code&gt; instead of it&lt;/li&gt;
&lt;li&gt;Remove unused exported error variable &lt;code&gt;ErrToExcelTime&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#notable-features"&gt;
  &lt;/a&gt;
  Notable Features
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;New API: &lt;code&gt;SetRowStyle&lt;/code&gt; support for set style for the rows, related issue #990&lt;/li&gt;
&lt;li&gt;New API: &lt;code&gt;GetCellType&lt;/code&gt; support for get the cell's data type, related issue #417 and #520&lt;/li&gt;
&lt;li&gt;New API: &lt;code&gt;SetAppProps&lt;/code&gt; and &lt;code&gt;GetAppProps&lt;/code&gt; support to set and get document application properites, related issue #1095&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;GetCellValue&lt;/code&gt;, &lt;code&gt;GetRows&lt;/code&gt;, &lt;code&gt;GetCols&lt;/code&gt;, &lt;code&gt;Rows&lt;/code&gt; and &lt;code&gt;Cols&lt;/code&gt; support to specify read cell with raw value, related issue #621&lt;/li&gt;
&lt;li&gt;New support 95 formula functions: ACCRINT, ACCRINTM, ADDRESS, AMORDEGRC, AMORLINC, AVEDEV, AVERAGEIF, CHIDIST, CONFIDENCE, CONFIDENCE.NORM, COUNTIF, COUNTIFS, COUPDAYBS, COUPDAYS, COUPDAYSNC, COUPNCD, COUPNUM, COUPPCD, DATEVALUE, DAY, DAYS, DELTA, DEVSQ, DISC, DURATION, ERF, ERF.PRECISE, ERFC, ERFC.PRECISE, GEOMEAN, GESTEP, IFNA, IFS, INDEX, INTRATE, ISFORMULA, ISLOGICAL, ISREF, ISOWEEKNUM, MATCH, MAXA, MAXIFS, MDURATION, MINIFS, MINUTE, MONTH, ODDFPRICE, PERCENTILE.EXC, PERCENTRANK.EXC, PERCENTRANK.INC, PERCENTRANK, PRICE, PRICEDISC, PRICEMAT, PV, QUARTILE.EXC, RANK, RANK.EQ, RATE, RECEIVED, RRI, SHEETS, SLN, STANDARDIZE, STDEV.P, STDEVP, SWITCH, SYD, TBILLEQ, TBILLPRICE, TBILLYIELD, TEXTJOIN, TIME, TRANSPOSE, TRIMMEAN, VALUE, VAR, VAR.S, VARA, VARPA, VDB, WEEKDAY, WEIBULL, WEIBULL.DIST, XIRR, XLOOKUP, XNPV, XOR, YEAR, YEARFRAC, YIELD, YIELDDISC, YIELDMAT, Z.TEST, ZTEST, related issue #1002&lt;/li&gt;
&lt;li&gt;Formula calculation engine support nested calc for &lt;code&gt;IF&lt;/code&gt; formula, related issue #987&lt;/li&gt;
&lt;li&gt;Formula calculation engine support get shared formula, related issue #844&lt;/li&gt;
&lt;li&gt;Formula calculation engine support text comparison, related issue #998&lt;/li&gt;
&lt;li&gt;Support specify the formula in the data validation range, related issue #1012&lt;/li&gt;
&lt;li&gt;Support specified unzip size limit on open file options, avoid zip bombs vulnerability attack&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;SetCellFormula&lt;/code&gt; now support set the shared formula&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;UpdateLinkedValue&lt;/code&gt; will skip macro sheet, related issue #1014&lt;/li&gt;
&lt;li&gt;Fix &lt;code&gt;AddPicture&lt;/code&gt; created duplicate image in some cases, caused by incorrect internal relationships ID calculation, related issue #1017&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;AddShape&lt;/code&gt; support set line width of add the shape, related issue #262&lt;/li&gt;
&lt;li&gt;New options &lt;code&gt;UnzipXMLSizeLimit&lt;/code&gt; have been added, support to specifies the memory limit on unzipping worksheet and shared string table in bytes&lt;/li&gt;
&lt;li&gt;An error will be returned if given an invalid custom number format when creating a new style, related issue #1028&lt;/li&gt;
&lt;li&gt;Now support set row style in the stream writer&lt;/li&gt;
&lt;li&gt;Stream writer will create a time number format for time type cells, related issue #1107&lt;/li&gt;
&lt;li&gt;Now support specify compact and outline for the pivot table, related issue #1029&lt;/li&gt;
&lt;li&gt;Support get current rows/columns and total rows/columns in the stream reader, related PR #1054&lt;/li&gt;
&lt;li&gt;Now support time zone location when set cell value, related issue #1069&lt;/li&gt;
&lt;li&gt;Export 7 errors so users can act differently on different type of errors&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#improve-the-compatibility"&gt;
  &lt;/a&gt;
  Improve the Compatibility
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Improve compatibility with row element with &lt;code&gt;r="0"&lt;/code&gt; attribute&lt;/li&gt;
&lt;li&gt;Preserve XML control character&lt;/li&gt;
&lt;li&gt;Improve the compatibility of style settings with Apple Numbers, related issue #1059&lt;/li&gt;
&lt;li&gt;Support multi-byte language on set header footer, related issue #1061&lt;/li&gt;
&lt;li&gt;Preserve horizontal tab character when set the cell value, related issue #1108&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#bug-fixes"&gt;
  &lt;/a&gt;
  Bug Fixes
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Fix the data validation deletion failed, resolve issue #979&lt;/li&gt;
&lt;li&gt;Fix set data validation drop list failed in some cases, resolve issue #986&lt;/li&gt;
&lt;li&gt;Fix formula calculation engine &lt;code&gt;LOOKUP&lt;/code&gt; doesn't handle array form correctly, resolve issue #994&lt;/li&gt;
&lt;li&gt;Fix formula calculation engine &lt;code&gt;LOOKUP&lt;/code&gt; can only find exact match, resolve issue #997&lt;/li&gt;
&lt;li&gt;Fix formula percentages calculated incorrectly, resolve issue #993&lt;/li&gt;
&lt;li&gt;Fix panic caused by incorrect cell read on some case&lt;/li&gt;
&lt;li&gt;Fix conditional format bottom N not working&lt;/li&gt;
&lt;li&gt;Fix time parse accuracy issue, resolve issue #1026 and #1030&lt;/li&gt;
&lt;li&gt;Fix build-in scientific number format failed, resolve issue #1027&lt;/li&gt;
&lt;li&gt;Fix small float parse error in some case, resolve issue #1031&lt;/li&gt;
&lt;li&gt;Fix worksheet deletion failed in some case&lt;/li&gt;
&lt;li&gt;Fix build-in time number format parse error, resolve issue #1060&lt;/li&gt;
&lt;li&gt;Fix &lt;code&gt;NewStyle&lt;/code&gt; returned incorrect style ID in some case&lt;/li&gt;
&lt;li&gt;Fix merged cell range error after row/column insert/deletion in some corner case&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#performance"&gt;
  &lt;/a&gt;
  Performance
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Merge cell time cost speed up, time cost decrease over 90%&lt;/li&gt;
&lt;li&gt;Improve streaming reading performance, unzip shared string table to system temporary file when large inner XML, memory usage decreased about 60%, related issue #1096&lt;/li&gt;
&lt;li&gt;Worksheet list read speed up&lt;/li&gt;
&lt;li&gt;Merge column styles to reduce spreadsheet size, resolve issue #1057&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#miscellaneous"&gt;
  &lt;/a&gt;
  Miscellaneous
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;The dependencies module has been updated&lt;/li&gt;
&lt;li&gt;Unit tests and godoc updated&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://xuri.me/excelize"&gt;Documentation website&lt;/a&gt; with multilingual: Arabic, German, Spanish, English, French, Russian, Chinese, Japanese, and Korean, which has been updated&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>go</category>
      <category>excel</category>
      <category>xlsx</category>
    </item>
    <item>
      <title>Advice I would give myself if I was learning to code today!</title>
      <author>Fahad Imran</author>
      <pubDate>Sun, 02 Jan 2022 16:11:51 +0000</pubDate>
      <link>https://dev.to/fahadimran117/advice-i-would-give-myself-if-i-was-learning-to-code-today-1lkj</link>
      <guid>https://dev.to/fahadimran117/advice-i-would-give-myself-if-i-was-learning-to-code-today-1lkj</guid>
      <description>&lt;p&gt;My journey as a programmer started when I chose to pursue &lt;strong&gt;Software Engineering&lt;/strong&gt; as a major after completing my High School Education. Since then, I have been programming for the better part of the last 4 years in various programming languages starting from Python, Java, C++, and recently JavaScript.&lt;/p&gt;

&lt;p&gt;It is important to mention that I had literally &lt;strong&gt;never&lt;/strong&gt; written a single line of code before starting my bachelor's. In fact, I don't remember taking a computer course throughout my middle and high school years. Suffice it to say, I was not like those students in my class, who had been coding as a hobby for a long time, or those who had already published entire Apps to the Play Store.&lt;/p&gt;

&lt;p&gt;Thus, in all aspects, I was a complete Newbie. Therefore, I also had some misconceptions about programming and coding in general. It took me the better part of the last 3-4 years to understand my negligence, and realize how mistaken I was. Thus, I am writing this blog post to help others who are new to programming like I was, by sharing the things I wish someone had told me when I was learning to code.&lt;/p&gt;

&lt;p&gt;Enough talking, let's dive into it, shall we?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-fundamentals-are-everything"&gt;
  &lt;/a&gt;
  1. Fundamentals are everything
&lt;/h2&gt;

&lt;p&gt;As a new programmer, your number one priority should be to &lt;strong&gt;master the fundamentals&lt;/strong&gt;. By this I mean, you should have a grasp over concepts like variables, data types, data structures, conditionals, loops, algorithms, etc.&lt;/p&gt;

&lt;p&gt;The reason being, once you have sound knowledge of the fundamentals, you can learn any&lt;br&gt;
programming language in a matter of days. At the core, all programming languages generally have the same concepts and a good knowledge of the fundamentals will help you regardless of the programming language you choose to pick up.&lt;/p&gt;

&lt;p&gt;I can say with my own example that once you know the basics, picking up a new language will be a piece of cake. I recently got the opportunity to try out &lt;a href="https://flutter.dev/"&gt;Flutter&lt;/a&gt; for a project. Flutter uses a programming language called &lt;a href="https://dart.dev/"&gt;Dart&lt;/a&gt; which is developed by Google. Since I was familiar with the basics of &lt;strong&gt;object-oriented programming&lt;/strong&gt; in Java, the transition to Dart was essentially painless as it uses the same concepts underneath albeit with a slightly different syntax.&lt;/p&gt;

&lt;p&gt;Thus, if you take away one thing from this post, it should be to concentrate on sharpening up your fundamental programming concepts.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-making-mistakes-is-totally-ok"&gt;
  &lt;/a&gt;
  2. Making mistakes is totally OK
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Fear of making mistakes&lt;/strong&gt; is another big reason people fail at programming. I too was in the same boat. I had the notion that a good programmer knows the exact syntax of the language in addition to writing the perfect code that runs the first time around. This notion hindered my ability to learn new things because I was so afraid of making mistakes that I never even tried new technologies.&lt;/p&gt;

&lt;p&gt;This concept of mine was blasted to smithereens in a very short span of time. Writing clean and elegant code that runs on the very first try and produces the correct output is nothing short of a fantasy. Even the most experienced developers cannot write fully functioning and error-free code on the first attempt. The sooner you realize this, the faster you will learn from your mistakes.&lt;/p&gt;

&lt;p&gt;Errors are an &lt;strong&gt;essential&lt;/strong&gt; part of programming. The sooner you feel comfortable with seeing red output on the screen screaming at you, the quicker you will master programming. Some of the best programmers I know or follow still spend a considerable amount of time-solving simple errors and looking up syntax that they cannot remember.&lt;/p&gt;

&lt;p&gt;So, take it easy and try stuff out without worrying about the results - the &lt;strong&gt;worst&lt;/strong&gt; thing that can happen is your computer screaming at you and who cares about that, right?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-college-aint-teaching-you-everything"&gt;
  &lt;/a&gt;
  3. College ain't teaching you everything
&lt;/h2&gt;

&lt;p&gt;By far the worst notion you could have as a new programmer is expecting the university or college to teach you everything you'll be needing on your job.&lt;/p&gt;

&lt;p&gt;Universities follow a fixed curriculum, and while certain courses have greatly benefited me - many courses were &lt;strong&gt;not&lt;/strong&gt; relevant to what is required in the field (not even close).&lt;/p&gt;

&lt;p&gt;For example, most universities don't teach you about the latest trends in web development in or about tools like Git, Linux etc. which are widely used throughout the industry.&lt;/p&gt;

&lt;p&gt;So, what can you do?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Develop a habit of learning on your own&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;In my case, the entire knowledge I have about &lt;strong&gt;web development&lt;/strong&gt; is through my own efforts and learning. (this ranges from the basic stuff like HTML, CSS to more advanced frameworks/libraries like React and Node.js).&lt;/p&gt;

&lt;p&gt;While it may be true in other fields of engineering, the programming landscape changes so quickly that educational institutions can't keep pace. Learning to code is a continuous process and you must keep practicing and expanding your skillset if you want to stay relevant in today's competitive market.&lt;/p&gt;

&lt;p&gt;And the best thing is the abundance of &lt;strong&gt;online resources&lt;/strong&gt; available to help you in this regard. If you want to learn a language or framework there are probably a lot of tutorials and articles that you can consult. So, it's a matter of dedication and hard work which you are willing to put in, and you can master a skill in no time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-tutorial-hell-is-your-worst-enemy"&gt;
  &lt;/a&gt;
  4. Tutorial hell is your worst enemy
&lt;/h2&gt;

&lt;p&gt;Another problem that new programmers face is the tendency to fall into &lt;strong&gt;Tutorial Hell&lt;/strong&gt;. Most of us resort to coding tutorials on YouTube and Udemy courses to learn any new language, framework, or skill. But these courses have a critical flaw that many of us don't realize.&lt;/p&gt;

&lt;p&gt;As you are following along with your instructor, you might feel very confident and even feel like you're getting everything. But as soon as you finish a course and try to develop something on your own, you'll feel &lt;strong&gt;completely blank&lt;/strong&gt; and have no idea where to even start. This has happened to me many times and it's a very sinking feeling.&lt;/p&gt;

&lt;p&gt;The problem with these tutorials and courses is that they teach you how to build a specific application. What they don't teach you is how to develop the mindset to &lt;strong&gt;solve a particular problem&lt;/strong&gt;. Additionally, you also don't understand why the instructor is using a particular framework or why he/she is writing a piece of code in that way and not the other way round.&lt;/p&gt;

&lt;p&gt;Thus, it just becomes a case of copying code that the instructor is writing and not understanding the reasoning behind it. So, while you may finish the course and build the application yet, you will be &lt;strong&gt;unable&lt;/strong&gt; to code something from scratch on your own.&lt;/p&gt;

&lt;p&gt;Instead, the best way to benefit from these courses is to modify the code after you have finished the project. Try to break the code and change things around. Experiment with a different approach to implementing a specific feature. At the very least, try to add some functionality on top of the course project. By adopting this approach, you will learn why things work the way they do and understand the purpose behind the code, instead of merely copy-pasting it as your own.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-jack-of-all-trades-master-of-none"&gt;
  &lt;/a&gt;
  5. Jack of all trades master of none!
&lt;/h2&gt;

&lt;p&gt;Finally, the last bit of advice I will give to upcoming programmers is that &lt;strong&gt;you don't have to learn everything under the sun&lt;/strong&gt;. When you first start to code, you quickly realize that there are WAY too many fields that you can choose from and it can be quite overwhelming to decide what you want to do.&lt;/p&gt;

&lt;p&gt;Let me give you a taste of what I am talking about. Let's say you are interested in web development. You can choose to become a frontend developer in which case you'll be learning technologies like HTML, CSS, JavaScript, and probably a JavaScript framework like React.js, Angular.js, or Vue.js. Not to mention the plethora of CSS libraries like Bootstrap, Tailwind CSS, etc. and concepts like responsive design, cross-browser compatibility and and and....&lt;/p&gt;

&lt;p&gt;Do you see where I am getting at? And this is just &lt;strong&gt;one&lt;/strong&gt; field.&lt;/p&gt;

&lt;p&gt;Maybe you fancy Mobile Development or perhaps Game Development. You might be into Machine Learning or Artificial Intelligence and work with data analysis and training complex neural networks. Or you might want to indulge in the field of cybersecurity and work on ethical hacking (at least I hope so) and so on.&lt;/p&gt;

&lt;p&gt;Suffice it to say, whatever you want to do there is a whole world built around it. My advice to you is to &lt;strong&gt;choose what you want to specialize in&lt;/strong&gt; and go all out in it. There is a great demand for talented individuals who are great developers/programmers in a specific field - instead of those who know a bit about everything. So, experiment to find what you like the most and then focus on mastering the skills needed in that field and you'll be doing better than most.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lets-sum-it-up"&gt;
  &lt;/a&gt;
  Let's sum it up
&lt;/h2&gt;

&lt;p&gt;Thus, these were some of the things I learned since I started to code. I am in &lt;strong&gt;no way an expert&lt;/strong&gt; yet, this is the essence of what I have personally experienced in my 3-4 years of programming. I am extremely happy with my decision to choose this field as my profession and I want to give back to the community as much as possible.&lt;/p&gt;

&lt;p&gt;For all the new programmers starting, focus on fundamentals, continue learning in your time, and don't forget to have fun!&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#thats-all-folks"&gt;
  &lt;/a&gt;
  That's all folks!
&lt;/h2&gt;

&lt;p&gt;If you have any questions feel free to ask me in the comments and I will do my best to answer them. Till then, thanks for reading, and happy coding!&lt;/p&gt;

&lt;p&gt;Cover Photo by &lt;a href="https://unsplash.com/@ikukevk?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Kevin Ku&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/coding?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>webdev</category>
      <category>codenewbie</category>
      <category>programming</category>
    </item>
    <item>
      <title>Machine Learning Best Practices in Healthcare and Life Sciences | AWS White Paper Summary</title>
      <author>Adit Modi</author>
      <pubDate>Sun, 02 Jan 2022 16:04:00 +0000</pubDate>
      <link>https://dev.to/awsmenacommunity/machine-learning-best-practices-in-healthcare-and-life-sciences-aws-white-paper-summary-49ob</link>
      <guid>https://dev.to/awsmenacommunity/machine-learning-best-practices-in-healthcare-and-life-sciences-aws-white-paper-summary-49ob</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;This whitepaper describes how AWS approaches machine learning (ML) in a regulated environment and provides guidance on good ML practices using AWS products.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The pharmaceutical industry, which is sometimes slow to adopt the latest technologies, is witnessing a massive change. The industry is looking to technologies such as artificial intelligence/machine learning (AI/ML), Internet of Things (IoT), blockchain, and other Industry 4.0 technologies. With this adoption of new technology comes regulatory challenges.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Machine Learning in particular has garnered some focus recently with the publishing of a discussion paper by the FDA. It explores the use of AI/ML in the context of medical devices but many of the same topics arise when bringing up ML adoption with executive leadership in any company: How do you trust ML models to not make important business decisions based on erroneous or unstable values? &lt;br&gt;
How do you know you have good hygiene in managing your ML environments? Are you prepared for (or capable of) a retrospective analysis if anything goes wrong?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;One particularly strong example is seen in pharmaceutical companies, who must abide by mandatory reporting standards for any patient-relevant “Adverse Events” that are viewed by any employee or ingested by the company. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;This means that creating a new Twitter account for a particular market, or releasing a digital therapeutic app for patient health, can result in a surge of new natural language data that needs to be reviewed, adjudicated, and in some cases reported to the FDA.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;This flood of data can completely overwhelm manual review teams and risk delays in reporting to the FDA within the mandated time limits, resulting in the potential for formal warnings or even legal action. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ML has the potential to address the immediate needs of scale in these scenarios, and triage obvious problem cases from innocuous cases.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;However, before deploying these models, you may need to evaluate a few requirements relevant to your stakeholders or regulators, such as model reproducibility, model explainability, decision support tooling, and how this all ties into templatized ML workflows.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#benefits-of-machine-learning"&gt;
  &lt;/a&gt;
  Benefits of machine learning
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Regulatory agencies such as the FDA acknowledge that ML-based technologies hold the potential to transform healthcare through their ability to derive new and important insights from vast amounts of data. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;One of the technology’s greatest strengths is its ability to continually learn from real-world data, and its capability to improve its performance.  &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The ability for AI/ML software to learn from real-world feedback (training) and improve its performance (adaptation) makes these technologies uniquely situated among software as a medical device (SaMD). &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;To help customers realize the benefits of ML, this whitepaper covers the points raised by the FDA while also drawing from AWS resources.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The Life Sciences industry (encompassing, but not exclusively, bio-pharma, genomics, medical diagnostics, and medical devices) is governed by a set of regulatory guidelines called Good Laboratory Practice, Good Clinical Practice, Good Manufacturing Practice, and Good Machine Learning Practices (commonly referred to as “GxP”).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The &lt;a href=""&gt;GxP Systems on AWS&lt;/a&gt; whitepaper provides information on how AWS approaches GxP-related compliance and security, and provides customers guidance on using AWS products in the context of GxP.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The &lt;a href=""&gt;AWS Well-Architected Framework&lt;/a&gt; helps you understand the pros and cons of decisions you make while building systems on AWS. Using the Framework enables you to learn architectural best practices for designing and operating reliable, secure, efficient, and cost-effective systems in the cloud. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The &lt;a href=""&gt;Machine Learning Lens&lt;/a&gt; whitepaper focuses on how to design, deploy, and architect your ML workloads in the AWS Cloud. This lens adds to the best practices included in the Well-Architected Framework, but also covers ML scenarios and identifies key elements to ensure that your workloads are architected according to best practices.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#life-sciences-at-aws"&gt;
  &lt;/a&gt;
  Life sciences at AWS
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;AWS started its dedicated Genomics and Life Sciences Practice in 2014 in response to the growing demand for an experienced and reliable life sciences cloud industry leader.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The AWS Genomics and Life Sciences practice serves a large ecosystem of life sciences customers, including some of the largest enterprise pharmaceutical, biotechnology, medical device, genomics, start-ups, university, and government institutions, as well as healthcare payers and providers.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In addition to the resources available within the Genomics and Life Science practice at AWS, you can also work with AWS Life Sciences Competency Partners to drive innovation and improve efficiency across the life sciences value chain, including cost- effective storage and compute capabilities, advanced analytics, and patient personalization mechanisms.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;AI/ML in the life sciences industry fall under five main categories:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Research and discovery&lt;/strong&gt; — Use cases include molecular structure prediction, antibody binding affinity prediction, outcome prediction for patients with certain biomarkers, patient data enrichment and search, the classification of tissue samples, and so on.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Clinical development&lt;/strong&gt; — Use cases include forecasting and optimization of trial timelines, optimization of inclusion/exclusion criteria and site selection, protocol document enrichment, and so on.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Manufacturing and supply chain&lt;/strong&gt; — Use cases include predictive maintenance of equipment, computer vision for effective line clearance, optimization of manufacturing process staging, vial inspection, and so on.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Commercial&lt;/strong&gt; — Use cases include predicting healthcare providers with relevant patient bases, identifying next best action for sales and marketing, annotation and management of existing promotional materials, and so on.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Post-market surveillance and patient support&lt;/strong&gt; — Use cases include forecasting patient cost, automation of adverse event detection from social media or call centers, patient outcome prediction, and so on.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#current-regulatory-situation"&gt;
  &lt;/a&gt;
  Current regulatory situation
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Traditional Computer Systems Validation (CSV) is a point-in-time exercise where the resultant computer system was tested against the requirements to verify that the system satisfies its intended use. Whenever there was a change, the system went through revalidation.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;However, the FDA’s view is that AI/ML-based SaMD exist on a spectrum, from locked to nearly continuously learning and changing.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The FDA proposes a Total Product Lifecycle (TPLC) approach which enables the evaluation and monitoring of a software product from its premarket development to postmarket performance, along with continued demonstration of the organization’s excellence.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;With this approach, the FDA will assess the following:&lt;br&gt;
Culture of quality and organizational excellence — to gain a reasonable assurance of the high quality of the organization’s software development, testing, and performance monitoring capabilities&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Pre-market assurance of safety and effectiveness&lt;/li&gt;
&lt;li&gt;Review of SaMD pre-specifications and algorithm change protocol&lt;/li&gt;
&lt;li&gt;Real-world performance monitoring&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zn-L8LjM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/az5cp29v5fssnm6erfct.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zn-L8LjM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/az5cp29v5fssnm6erfct.png" alt="Image description" width="880" height="462"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Reference Implementation of Good machine learning practices&lt;/em&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;This framework relies on the principle of a “predetermined change control plan.” The predetermined change control plan includes the types of anticipated modifications, (SaMD Pre-Specifications) based on the retraining and model update strategy, and the associated methodology (Algorithm Change Protocol) being used to implement those changes in a controlled manner that manages risks to patients.

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;SaMD Pre-Specifications (SPS)&lt;/strong&gt; — A SaMD manufacturer’s anticipated modifications to “performance” or “inputs,” or changes related to the “intended use” of AI/ML-based SaMD. These are the types of changes the manufacturer plans to achieve when the SaMD is in use. The SPS draws a “region of potential changes” around the initial specifications and labeling of the original device. This is what the manufacturer intends the algorithm to become as it learns.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Algorithm Change Protocol (ACP)&lt;/strong&gt; — Specific methods that a manufacturer has in place to achieve and appropriately control the risks of the anticipated types of modifications delineated in the SPS. The ACP is a step-by-step delineation of the data and procedures to be followed so that the modification achieves its goals and the device remains safe and effective after the modification. 
The preceding figure provides a general overview of the components of an ACP. This is how the algorithm will learn and change while remaining safe and effective.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#challenges-to-support-aiml-enabled-gxp-workloads"&gt;
  &lt;/a&gt;
  Challenges to support AI/ML enabled GxP workloads
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Developing AI/ML-enabled GxP workloads raise the following challenges:

&lt;ul&gt;
&lt;li&gt;Building a secure infrastructure that complies with a stringent regulatory process working on the public cloud and aligning to the FDA framework for AI/ML&lt;/li&gt;
&lt;li&gt;Supporting an AI/ML-enabled solution for GxP workloads covering:&lt;/li&gt;
&lt;li&gt;Reproducibility&lt;/li&gt;
&lt;li&gt;Traceability&lt;/li&gt;
&lt;li&gt;Data integrity&lt;/li&gt;
&lt;li&gt;Monitoring the Machine Learning model with respect to various changes to parameters and data&lt;/li&gt;
&lt;li&gt;Handling model uncertainty and confidence calibration&lt;/li&gt;
&lt;li&gt;Making AI/ML models interpretable&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#provision-a-secure-and-gxpcompliant-machine-learning-environment"&gt;
  &lt;/a&gt;
  Provision a secure and GXP-compliant machine learning environment
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;For healthcare and life sciences customers, the security and privacy of an ML environment is paramount. It is therefore strongly recommended that you protect your environment against unauthorized access, privilege escalation, and data exfiltration. Common considerations when you set up a secure ML environment include:

&lt;ul&gt;
&lt;li&gt;Platform qualification&lt;/li&gt;
&lt;li&gt;Compute and network isolation&lt;/li&gt;
&lt;li&gt;Authentication and authorization
These considerations are detailed in the following sections.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#platform-qualification"&gt;
  &lt;/a&gt;
  Platform qualification
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The validated state of ML models may be brought into question if the underlying IT infrastructure is not maintained in a demonstrable state of control and regulatory compliance. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Similarly, data integrity can also be affected by problems related to IT infrastructure. Therefore, to support a culture of quality and operational excellence, it is important to qualify your underlying platform and then maintain it under a state of control.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Details about platform qualification and the approach taken by many AWS customers are described in GxP whitepaper. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Customers will often provide a qualified MLOps platform to their teams, along with a selection of pre-qualified building blocks to support their specific needs. &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#compute-and-network-isolation"&gt;
  &lt;/a&gt;
  Compute and network isolation
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;A well-governed and secure ML workflow begins with establishing a private and isolated compute and network environment. The virtual private cloud (VPC) that hosts Amazon SageMaker and its associated components, such as Jupyter notebooks, training instances, and hosting instances, should be deployed in a private network with no internet connectivity.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Connectivity between SageMaker and other AWS services, such as Amazon Simple Storage Service (Amazon S3), should be established using VPC endpoints or even AWS PrivateLink. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Additionally, when creating a VPC endpoint, you can attach an endpoint policy to further control access to specific resources for which you are connecting.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#authentication-and-authorization"&gt;
  &lt;/a&gt;
  Authentication and authorization
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;After you create an isolated and private network environment, the next step is to ensure that only authorized users can access the appropriate AWS services. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;AWS Identity and Access Management (IAM) can help you create preventive controls for many aspects of your ML environment, including access to SageMaker resources, access to your data in S3, and access to API endpoints.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You can access AWS using a RESTful API, and every API call is authorized by IAM. You grant explicit permissions through IAM policy documents, which specify the principal (who), the actions (API calls), and the resources (such as S3 objects) that are allowed, as well as the conditions under which the access is granted.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Access to AWS Glue and Amazon SageMaker resources is also governed by IAM. While each organization has different authentication and access requirements, you should configure permissions in line with IAM best practices and your own internal policies and controls by granting least privilege access, or granting only the permissions required to perform a particular task.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Role-based access control (RBAC) is an approach used commonly by customers in financial services for ensuring only authorized parties have access to desired system controls. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Creating roles based on job function policies, and using AWS Config to monitor and periodically audit IAM policies attached to users, is a recommended best practice for viewing configuration changes over time.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;AWS Config offers conformance packs, which provide a general-purpose compliance framework designed to enable you to create security, operational or cost-optimization governance checks using managed or custom AWS Config rules and AWS Config remediation actions.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#data-encryption"&gt;
  &lt;/a&gt;
  Data encryption
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Because ML environments can contain sensitive data and intellectual property, one of the considerations for a secure ML environment is data encryption. AWS recommends that you enable data encryption, both at rest and in transit.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;For at rest encryption, AWS provides tools for creating an encrypted file system using open standard algorithms. For instance, customers can encrypt data stored in Amazon S3 and the data stored in Amazon Elastic Block Store (Amazon EBS) volumes.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Some healthcare customers require the use of AWS KMS keys. Additionally, AWS recommends enabling Amazon S3 default encryption so that all new objects are encrypted when they are stored in the Amazon S3 bucket.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#machine-learning-lifecycle"&gt;
  &lt;/a&gt;
  Machine learning lifecycle
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Building and operating a typical ML workload is an iterative process, and consists of multiple phases. We identify these phases loosely based on the open standard process model for Cross Industry Standard Process Data Mining (CRISP-DM) as a general guideline. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;CRISP-DM is used as a baseline because it’s a proven tool in the industry and is application neutral, which makes it an easy-to-apply methodology that is applicable to a wide variety of ML pipelines and workloads. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The end-to-end ML process includes the following phases:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Business goal identification &lt;/li&gt;
&lt;li&gt;ML problem framing&lt;/li&gt;
&lt;li&gt;Data collection&lt;/li&gt;
&lt;li&gt;Data integration and preparation&lt;/li&gt;
&lt;li&gt;Feature engineering&lt;/li&gt;
&lt;li&gt;Model training&lt;/li&gt;
&lt;li&gt;Model validation&lt;/li&gt;
&lt;li&gt;Business evaluation&lt;/li&gt;
&lt;li&gt;Production deployment (model deployment and model inference)&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Below section presents a high-level overview of the various phases of an end-to-end ML lifecycle, which helps frame our discussion around security, compliance, and operationalization of Amazon Web Services ML best practices in healthcare and life science.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dSdyfiws--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/96ypw40tmtixt9k4gbm4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dSdyfiws--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/96ypw40tmtixt9k4gbm4.png" alt="Image description" width="807" height="714"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;The machine learning lifecycle process&lt;/em&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;More Details about various phases of an end-to-end Ml lifecycle can be found &lt;a href=""&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#best-practices-for-ml-lifecycle-stages"&gt;
  &lt;/a&gt;
  Best practices for ML lifecycle stages
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Data collection&lt;/li&gt;
&lt;li&gt;Data integration and preparation&lt;/li&gt;
&lt;li&gt;Feature engineering&lt;/li&gt;
&lt;li&gt;Model training&lt;/li&gt;
&lt;li&gt;Model validation&lt;/li&gt;
&lt;li&gt;Additional considerations for AI/ML compliance&lt;/li&gt;
&lt;li&gt;Auditability&lt;/li&gt;
&lt;li&gt;Traceability&lt;/li&gt;
&lt;li&gt;Reproducibility&lt;/li&gt;
&lt;li&gt;Model interpretability&lt;/li&gt;
&lt;li&gt;Model monitoring&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Operationalize AI/ML workloads&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;More Details about best practices for Different Lifecycle stages can be found &lt;a href=""&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#reference-architectures"&gt;
  &lt;/a&gt;
  Reference architectures
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#training-pipeline"&gt;
  &lt;/a&gt;
  Training pipeline
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;The following shows a specific model training and tracking architecture that leverages AWS native tools and services.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--T-5hnlHH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1vs8kt1dj8ubkdhj09qd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T-5hnlHH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1vs8kt1dj8ubkdhj09qd.png" alt="Image description" width="880" height="460"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Model training and tracking architecture&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Step 1: Train Model Handler (Lambda) | Train Model Queue (SQS)&lt;/strong&gt; — Model training is initiated; training could be initiated in multiple ways:

&lt;ul&gt;
&lt;li&gt;Manually (follows human in the loop design)&lt;/li&gt;
&lt;li&gt;Automated (by scheduling relevant jobs)&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Steps 2, 3: AWS Glue&lt;/strong&gt; — Reads and processes data from multiple sources. Intermediate files like train/test/validation datasets are stored in a training repository (S3)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Steps 4, 5: Amazon SageMaker&lt;/strong&gt; — Trains the ensemble models and saves the model file and train and test results into S3 and DynamoDB training results tables&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Step 6: Training Results Queue (SQS)&lt;/strong&gt; — Upon completion of model training, a notification is sent to an analyst/data scientist to review the model performance results, based on the decision made by the reviewer that an action would be taken&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;&lt;strong&gt;Step 7, 8, 9: Endpoint Update Handler (Lambda)&lt;/strong&gt; — Depending on the decision of the reviewer, either&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The endpoint is updated with the new model, or&lt;/li&gt;
&lt;li&gt;The existing endpoint is not deleted or reused&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Step 10: After the endpoint is updated, an email notification will be sent to the client.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#inference-pipeline"&gt;
  &lt;/a&gt;
  Inference pipeline
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;The following figure shows a specific model inference architecture that leverages AWS native tools and services.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HO8D8ukM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0qmor52o658tn2cx2iv3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HO8D8ukM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0qmor52o658tn2cx2iv3.png" alt="Image description" width="880" height="433"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Specific model inference architecture that leverages AWS native tools and services&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Step1: When the input data is available, ingest handler is invoked and necessary preprocessing steps are performed. Data is stored in S3 and a message is passed to Records Queue&lt;/li&gt;
&lt;li&gt;Step 2: Inference Handler is involved by the Records Queue, and data is read from S3&lt;/li&gt;
&lt;li&gt;Step 3: Inference Handler performs inference using Amazon SageMaker resources&lt;/li&gt;
&lt;li&gt;Step 4: After performing inference, the results are saved in the DynamoDB results table and the message is passed to the Results Queue&lt;/li&gt;
&lt;li&gt;Step 5: Results Handler then publishes the results to the Client application or a QuickSight dashboard&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#orchestration"&gt;
  &lt;/a&gt;
  Orchestration
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;General guidelines for creating pipelines include using an orchestration layer, such as AWS CodePipeline.&lt;br&gt;
To incorporate traceability, use the following services listed in the following architecture:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Amazon SageMaker, a fully-managed ML service that lets data scientists and developers build, train, and deploy ML models to production&lt;/li&gt;
&lt;li&gt;Amazon S3, a highly scalable, reliable service to store and retrieve any amount of data, at any time, from anywhere on the web&lt;/li&gt;
&lt;li&gt;Amazon DynamoDB, a fully managed key-value and document database that delivers single-digit millisecond performance at any scale&lt;/li&gt;
&lt;li&gt;AWS Lambda, a serverless compute service to run code without provisioning or managing servers&lt;/li&gt;
&lt;li&gt;AWS Glue, a fully-managed data preparation service for ETL operation&lt;/li&gt;
&lt;li&gt;AWS CodePipeline, a fully managed nearly continuous delivery service that helps you automate your release pipelines for fast and reliable application and infrastructure updates&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The following figure highlights only the key components for tracking data and model lineage:&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LoVAfOeY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/udni85ip86m1mqyuqsvm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LoVAfOeY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/udni85ip86m1mqyuqsvm.png" alt="Image description" width="622" height="605"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Key components for tracking data and model lineage&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Latest code changes; commit_id can be extracted from AWS CodeCommit or any GitHub toolkit.&lt;/li&gt;
&lt;li&gt;AWS Glue Crawlers, AWS Glue jobs, or any ETL services can be used to extract raw data, run preprocessing, split data into train/test/validation datasets, and export data to S3 and metadata to DynamoDB tables.&lt;/li&gt;
&lt;li&gt;Amazon SageMaker can be used for model development and evaluation steps. Necessary model training results and model artifacts can be sent to S3. Necessary metadata can be sent to DynamoDB tables.&lt;/li&gt;
&lt;li&gt;Model performance results can be reviewed by data scientists or other human reviewers to decide if the model can be promoted to the production environment, in which case the management table model version status can be set to ACTIVE.&lt;/li&gt;
&lt;li&gt;After data is scored, input data, predicted probability, predicted label, and the model version used for performing inference can be saved in a DynamoDB inference results table, and necessary results can be sent to S3.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#orchestration-for-sagemaker-jobs"&gt;
  &lt;/a&gt;
  Orchestration for SageMaker jobs
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Amazon SageMaker Pipelines can automate various tasks across the ML lifecycle. All infrastructure is fully managed. SageMaker Pipelines have the ability to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Orchestrate SageMaker jobs and author reproducible ML pipelines&lt;/li&gt;
&lt;li&gt;Deploy custom-build models for inference in real-time with low latency or offline inferences with Batch Transform&lt;/li&gt;
&lt;li&gt;Monitor lineage of objects&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Through a simple interface, you can implement sound operating practices for deploying and monitoring production workflows, model artifact deployment, and artifact lineage tracking while adhering to safety and best practice paradigms for ML application creation.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;Certain use cases may necessitate a single, larger, end-to-end pipeline that can handle anything. Other use cases, such as the following, can necessitate multiple pipelines:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;One pipeline for ETL and data transformation steps&lt;/li&gt;
&lt;li&gt;One pipeline for model training, tuning, lineage, and depositing into the Model Registry&lt;/li&gt;
&lt;li&gt;Possibly another pipeline for specific inference scenarios (such as real-time vs. batch)&lt;/li&gt;
&lt;li&gt;One pipeline for triggering retraining by using SageMaker Model Monitor to detect model drift or data drift and trigger retraining.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;Some of the main components in Amazon SageMaker Pipelines include pipelines, Model Registry, and MLOps templates.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Pipelines&lt;/strong&gt; – Model building pipelines are defined with a simple Python SDK. They can include any operation available in Amazon SageMaker, such as data preparation with Amazon SageMaker Processing or Amazon SageMaker Data Wrangler, model training, model deployment to a real-time endpoint, or batch transform. You can also add Amazon SageMaker Clarify to your pipelines to detect bias prior to training, or after the model has been deployed. Likewise, you can add Amazon SageMaker Model Monitor to detect data and prediction quality issues. &lt;/li&gt;
&lt;li&gt;After they are launched, model building pipelines are run as CI/CD pipelines. Every step is recorded, and detailed logging information is available for traceability and debugging purposes. You can also visualize pipelines in Amazon SageMaker Studio, and track their different runs in real-time.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Model Registry&lt;/strong&gt; – The Model Registry lets you track and catalog your models. In SageMaker Studio, you can easily view model history, list and compare versions, and track metadata such as model evaluation metrics. You can also define which versions may or may not be deployed in production. You can even build pipelines that automatically trigger model deployment after approval has been given. You’ll find that the Model Registry is very useful in tracing model lineage, improving model governance, and strengthening your compliance posture.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;MLOps templates&lt;/strong&gt; – SageMaker Pipelines includes a collection of built-in CI/CD templates published via AWS Service Catalog for popular pipelines (build/train/deploy, deploy only, and so on). You can also add and publish your own templates, so that your teams can efficiently discover them and deploy them. Not only do templates save lots of time, they also make it easier for ML teams to collaborate from experimentation to deployment, using standard processes, and without having to manage any infrastructure. Templates also enable Ops teams to customize steps as needed, and give them full visibility for troubleshooting.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xbH_fevU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/exor00w8j57o3vzk7m0u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xbH_fevU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/exor00w8j57o3vzk7m0u.png" alt="Image description" width="880" height="426"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Directed acyclic graph of steps that orchestrate SageMaker jobs&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The preceding figure is a Directed Acyclic Graph (DAG) of steps and conditions that orchestrate SageMaker jobs and resource creation. Sample notebooks are available to get you started.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;This whitepaper discusses security and GxP compliance considerations for operationalizing AI/ML workloads in the life sciences industry. It references Good Machine Learning Practices (GMLP), as referenced by the FDA, and details best practices for implementing ML workflows. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;However, you should work with your company’s regulatory and compliance team and understand your company’s policies and regulatory responsibilities before implementing these solutions, which may impact your use of ML.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#reference"&gt;
  &lt;/a&gt;
  Reference
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://d1.awsstatic.com/whitepapers/ML-best-practices-health-science.pdf?did=wp_card&amp;amp;trk=wp_card"&gt;Original paper&lt;/a&gt;&lt;/p&gt;

</description>
      <category>aws</category>
      <category>machinelearning</category>
      <category>datascience</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Create Bubble Navigation Bar In Android Using Java </title>
      <author>Dilmohit</author>
      <pubDate>Sun, 02 Jan 2022 15:56:19 +0000</pubDate>
      <link>https://dev.to/dilmohit/create-bubble-navigation-bar-in-android-using-java-47ho</link>
      <guid>https://dev.to/dilmohit/create-bubble-navigation-bar-in-android-using-java-47ho</guid>
      <description>&lt;p&gt;Hi there, in this post i will be talking about how we can create a beautiful bubble navigation bar in our android project. Just like Navigation drawer, navigation bar is also used by most of the android apps if not all. There are a lot of ways to implement navigation bar in your project. But today we will be using a library to implement bubble navigation bar in our android project.&lt;/p&gt;

&lt;p&gt;Step 1 - Create a project using empty activity&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vJCed0RM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wqvbdc4pdveb8h82g0se.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vJCed0RM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wqvbdc4pdveb8h82g0se.png" alt="Image description" width="880" height="494"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Step 2 - Add this library in your build.gradle&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;implementation 'com.gauravk.bubblenavigation:bubblenavigation:1.0.7'
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Step 3 - Add this code in your activity_main.xml&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;?xml version="1.0" encoding="utf-8"?&amp;gt;
&amp;lt;RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity"&amp;gt;

    &amp;lt;FrameLayout
        android:id="@+id/fragment_container"
        android:layout_width="match_parent"
        android:layout_height="match_parent"/&amp;gt;

    &amp;lt;androidx.cardview.widget.CardView
        android:layout_width="match_parent"
        android:layout_height="90dp"
        android:layout_marginBottom="20dp"
        android:layout_marginLeft="10dp"
        android:layout_marginRight="10dp"
        app:cardCornerRadius="30dp"
        android:layout_alignParentBottom="true"&amp;gt;

        &amp;lt;com.gauravk.bubblenavigation.BubbleNavigationLinearView
            android:id="@+id/bubblenavigationbar"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:background="@color/white"
            android:orientation="horizontal"&amp;gt;

            &amp;lt;com.gauravk.bubblenavigation.BubbleToggleView
                android:id="@+id/homefrag"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                app:bt_active="true"
                app:bt_colorActive="@color/purple_200"
                app:bt_colorInactive="@color/black"
                app:bt_title="Home"
                app:bt_icon="@drawable/home"/&amp;gt;

            &amp;lt;com.gauravk.bubblenavigation.BubbleToggleView
                android:id="@+id/searchfrag"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                app:bt_active="true"
                app:bt_colorActive="#F51662"
                app:bt_colorInactive="@color/black"
                app:bt_title="Search"
                app:bt_icon="@drawable/search"/&amp;gt;

            &amp;lt;com.gauravk.bubblenavigation.BubbleToggleView
                android:id="@+id/notificationfrag"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                app:bt_active="true"
                app:bt_colorActive="#E0F41D"
                app:bt_colorInactive="@color/black"
                app:bt_title="Notify"
                app:bt_icon="@drawable/notifications"/&amp;gt;

            &amp;lt;com.gauravk.bubblenavigation.BubbleToggleView
                android:id="@+id/profilefrag"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                app:bt_active="true"
                app:bt_colorActive="@color/teal_200"
                app:bt_colorInactive="@color/black"
                app:bt_title="Profile"
                app:bt_icon="@drawable/profile"/&amp;gt;

       &amp;lt;/com.gauravk.bubblenavigation.BubbleNavigationLinearView&amp;gt;

    &amp;lt;/androidx.cardview.widget.CardView&amp;gt;

&amp;lt;/RelativeLayout&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;logic - So lets understand what is happening here in this xml code. First we have added a library in our project. Now even if you are a beginner in android development you would have known what libraries are. &lt;/p&gt;

&lt;p&gt;Now First we have selected Relative Layout as our root view. Then we have added a Framelayout, here in framelayout we will transact our fragments.&lt;/p&gt;

&lt;p&gt;Now by implementing this library in our project we get some of its features that we can use in our project. First we get two NavigationViwes - &lt;/p&gt;

&lt;p&gt;BubbleNavigationConstraintView: supports spread, inside and packed mode&lt;br&gt;
BubbleNavigationLinearView: allows equal distribution using weight or packed mode&lt;/p&gt;

&lt;p&gt;In our project we have used BubbleNavigationLinearView. Now these NavigationViews will contain our UI Components such as Home, Search, Notification and profile. You can add upto 5 UI elements.&lt;/p&gt;

&lt;p&gt;I have Also used card view to give our navigation bar round shapes to make it look more attractive&lt;/p&gt;

&lt;p&gt;This library also provides us another feature that is BubbleToggleView. This view is used to create new UI Components. &lt;/p&gt;

&lt;p&gt;Step 4 - Add these vector assets in your drawable &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---ThD8DFz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6ra9cszcmykytoiwwope.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---ThD8DFz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6ra9cszcmykytoiwwope.png" alt="Image description" width="610" height="646"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Step 5 - Create blank fragments and name them as shown in the image or you can choose name as per your requirements &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GuTvQj-N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3moncyu7o2ji1zw2thwt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GuTvQj-N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3moncyu7o2ji1zw2thwt.png" alt="Image description" width="609" height="604"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Step 6 - Add this code in your MainActivity.java&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;package com.example.bubblebottomnavigation;

import androidx.appcompat.app.AppCompatActivity;
import androidx.fragment.app.FragmentManager;
import androidx.fragment.app.FragmentTransaction;
import android.os.Bundle;
import com.example.bubblebottomnavigation.fragments.HomeFragment;
import com.example.bubblebottomnavigation.fragments.NotificationsFragment;
import com.example.bubblebottomnavigation.fragments.ProfileFragment;
import com.example.bubblebottomnavigation.fragments.SearchFragment;
import com.gauravk.bubblenavigation.BubbleNavigationLinearView;

public class MainActivity extends AppCompatActivity {

    BubbleNavigationLinearView bubbleNavigationLinearView;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

   bubbleNavigationLinearView = 
   findViewById(R.id.bubblenavigationbar);

        FragmentManager manager = getSupportFragmentManager();
        FragmentTransaction transaction = 
        manager.beginTransaction();
        transaction.replace(R.id.fragment_container, new 
        HomeFragment());
        transaction.commit();

        bubbleNavigationLinearView.setNavigationChangeListener((view, position) -&amp;gt; {
            switch (position){

                case 0:
                    FragmentManager manager1 = 
                    getSupportFragmentManager();
                    FragmentTransaction transaction1 = 
                    manager1.beginTransaction();
                    transaction1.replace(R.id.fragment_container, 
                    new HomeFragment());
                    transaction1.commit();
                    break;

                    case 1:
                    manager1 = getSupportFragmentManager();
                    transaction1 = manager1.beginTransaction();
                    transaction1.replace(R.id.fragment_container, 
                    new SearchFragment());
                    transaction1.commit();
                    break;

                    case 2:
                    manager1 = getSupportFragmentManager();
                    transaction1 = manager1.beginTransaction();
                    transaction1.replace(R.id.fragment_container, 
                    new NotificationsFragment());
                    transaction1.commit();
                    break;

                    case 3:
                    manager1 = getSupportFragmentManager();
                    transaction1 = manager1.beginTransaction();
                    transaction1.replace(R.id.fragment_container, 
                    new ProfileFragment());
                    transaction1.commit();
                    break;
            }
        });

    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Logic -  Here in our MainActivity first we have initialize our BubbleNavigationLinearView Method. Than we have replaced our home fragment with our container using Fragment Manager to keep our home fragment as default fragment. &lt;/p&gt;

&lt;p&gt;Next we have used switch statement in .setNavigationChangeListener method to find and then replace our fragments with our container based on there positions.&lt;/p&gt;

&lt;p&gt;Output - &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JElLY4DV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j8t4nk55tchxz1csnpjt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JElLY4DV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j8t4nk55tchxz1csnpjt.png" alt="Image description" width="826" height="412"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you find this library usefull i request you to visit its creators github page &lt;a href="https://github.com/gauravk95/bubble-navigation"&gt;here&lt;/a&gt; and give a star there. &lt;/p&gt;

&lt;p&gt;Thanks for reading this article. Write down your thoughts in comments or any suggestions for me or anything you think could be improved.&lt;/p&gt;

</description>
      <category>android</category>
      <category>java</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>How to Create a Good Roadmap for 2022? </title>
      <author>Luís Von Muller</author>
      <pubDate>Sun, 02 Jan 2022 15:46:52 +0000</pubDate>
      <link>https://dev.to/luisvonmuller/how-to-create-a-good-roadmap-for-2022-4fn5</link>
      <guid>https://dev.to/luisvonmuller/how-to-create-a-good-roadmap-for-2022-4fn5</guid>
      <description>&lt;p&gt;&lt;em&gt;&lt;strong&gt;Understanding Knowledge, setting up the road and evaluating it while following it.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I’m kind of a Senior Software Developer, I’m 24 years old and I’ve been coding since my fourteens. But I had &lt;strong&gt;Up and Lows&lt;/strong&gt; during all this time, especially on the “&lt;strong&gt;learning&lt;/strong&gt;” path. &lt;/p&gt;

&lt;p&gt;&lt;small&gt;   I have a strong Bipolarity disorder and, while on some side of it, my TDAH shows up really hard. &lt;/small&gt;&lt;/p&gt;

&lt;p&gt;By that, for this year, I got myself into trying to fix the inconstant learning curve that I had and how to figure out a way to get myself following it along the whole year, by now, there’s no proof that this work, actually, by 2022’s I’ll be testing this on myself.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;As the world changes, we should change to follow along. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Thats why I’m proposing this, because we need to keep up, as professionals (no matters about if you’re or not a developer like myself, I think this could work for you too)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-knowledge-ideia"&gt;
  &lt;/a&gt;
  The “Knowledge" Ideia
&lt;/h2&gt;

&lt;p&gt;Imagine that all your knowledge stands in some of pyramid shape. Like this: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yTd4PjiT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y86c0kxkfwipds4blsrm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yTd4PjiT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y86c0kxkfwipds4blsrm.png" alt="Image description" width="880" height="666"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Take a good look on the concept, you will able to understand it.   There is “fundamentals”, by that I mean: “They gonna be the base” for the next role and so goes on. &lt;/p&gt;

&lt;p&gt;After sometime, you’ll get'em &lt;strong&gt;exercised so much&lt;/strong&gt; that you won't be in the need to really keep overlooking at them.&lt;/p&gt;

&lt;p&gt;After that, we get the &lt;strong&gt;applied concepts&lt;/strong&gt;. And those gonna be built already over other fundamentals, like the sharing of the culture with Math (Logic) by the language. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Inter Topic Knowledge&lt;/strong&gt; is like what you’ll learn at some undergraduate process (or not, u can be a self-taught as I am.)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Intra Topic&lt;/strong&gt; stands for things like: some kind of extremely applied concept, for sure, they can be also more, like a programming framework, a way to tests things, and so goes on… &lt;/p&gt;

&lt;p&gt;But let me make sure you understand the idea of this: &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#you-will-not-be-able-to-grow-further-knowledge-if-the-bases-arent-solid"&gt;
  &lt;/a&gt;
  You will not be able to grow further knowledge if the bases aren’t solid.
&lt;/h3&gt;

&lt;p&gt;You have the need to sometimes come back and check that you’re really know that, because if you don’t, &lt;strong&gt;everything could fall together&lt;/strong&gt;, giving yourself a really strong and bad &lt;strong&gt;breakdown&lt;/strong&gt;. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-the-meaning-of-the-triangle-or-how-to-apply-a-new-one"&gt;
  &lt;/a&gt;
  Whats the meaning of the triangle? Or how to apply a new one?
&lt;/h2&gt;

&lt;p&gt;The triangle gonna provide you some kind of good goal reached understandings, measurements and concept to follow along while learning. Something like this:  &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BFjdv6qy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i5ha66gpnwi3jkialpdg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BFjdv6qy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i5ha66gpnwi3jkialpdg.png" alt="Image description" width="880" height="529"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This explains a lot by itself, but let me help:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;You'll need to reach out to something new making an &lt;strong&gt;effort&lt;/strong&gt; to reach the new idea (concept).&lt;/li&gt;
&lt;li&gt;You'll need to right &lt;strong&gt;test&lt;/strong&gt; it after it, to make sure that you've &lt;strong&gt;learned by the effort made&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;You will get the &lt;strong&gt;understandings&lt;/strong&gt; (bases) to reach your goal.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This is a loop. For sure. Bigger the goal. Bigger the Stack, bigger the bases in need and so, bigger the energy. &lt;/p&gt;

&lt;p&gt;But, energy is what is our fuel (glucose). After sometime you will get used to it after the sureness of your Goal, and it will stack up as well like the others later on (like logic and language). &lt;/p&gt;

&lt;p&gt;Now, ask yourself: &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;"Do I already have enough bases for my next learning triangle goal? If so, what I want to learn? And How I can make sure that My effort can be measured and understood by my own".&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Follow me on twitter to check out my own and if its working. :)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/luisvonmuller"&gt;My Twitter&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks ;)&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>programming</category>
      <category>productivity</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Please remove that .DS_Store</title>
      <author>Julien Maury</author>
      <pubDate>Sun, 02 Jan 2022 15:26:42 +0000</pubDate>
      <link>https://dev.to/jmau111/please-remove-that-dsstore-39i3</link>
      <guid>https://dev.to/jmau111/please-remove-that-dsstore-39i3</guid>
      <description>&lt;p&gt;macOS automatically creates &lt;code&gt;.DS_Store&lt;/code&gt; when you open a folder with Finder, the default file manager. The operating system stores some information in binary in this file, for example, the list of files inside the folder.&lt;/p&gt;

&lt;p&gt;You cannot read a &lt;code&gt;.DS_Store&lt;/code&gt; file just by opening it (binary data), but it's pretty easy to decode. If for some reason, the file gets deployed to a webserver, things can turn nasty:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;it might disclose some information such as the name of some removed files as &lt;code&gt;.DS_Store&lt;/code&gt; files are only updated by Finder&lt;/li&gt;
&lt;li&gt;it might also be used to &lt;a href="https://github.com/lijiejie/ds_store_exp"&gt;download files recursively&lt;/a&gt; from the webserver 🔥&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;How the heck can you deploy such files on production?&lt;/p&gt;

&lt;p&gt;It happens more often than you might think, for example, when you don't ignore &lt;code&gt;.DS_Store&lt;/code&gt; files in your project's &lt;code&gt;.gitignore.&lt;/code&gt; I see it very frequently, including in public repositories.&lt;/p&gt;

&lt;p&gt;The best approach, to me, is to configure it globally on your machine. This way, even if you forget to ignore those files in your particular project, it will be skipped anyway.&lt;/p&gt;

&lt;p&gt;The following command will locate your global &lt;code&gt;.gitignore&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git config --global core.excludesfile  
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Open it and verify that &lt;code&gt;.DS_Store&lt;/code&gt; files are in the list. &lt;/p&gt;

&lt;p&gt;If the ignore file does not exist yet, create a &lt;code&gt;.gitignore&lt;/code&gt; file at the root of your home directory and run this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git config --global core.excludesfile ~/.gitignore
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It will set the file as the global ignore file. You can find plenty of templates on the web to get a robust list for various usages.&lt;/p&gt;

&lt;p&gt;To list and remove potential existing &lt;code&gt;.DS_Store&lt;/code&gt; in your repository:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;find . -name .DS_Store -print0 | xargs -0 git rm -f --ignore-unmatch
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Be safe.&lt;/p&gt;

&lt;p&gt;Photo by &lt;a href="https://unsplash.com/@giorgiotrovato"&gt;Giorgio Trovato&lt;/a&gt;&lt;/p&gt;

</description>
      <category>cybersecurity</category>
      <category>security</category>
      <category>macos</category>
      <category>git</category>
    </item>
    <item>
      <title>My experience migrating a React App from Create-React-App 4 to 5</title>
      <author>Diego Ballesteros</author>
      <pubDate>Sun, 02 Jan 2022 15:24:41 +0000</pubDate>
      <link>https://dev.to/diballesteros/my-experience-migrating-a-react-app-from-create-react-app-4-to-5-17k0</link>
      <guid>https://dev.to/diballesteros/my-experience-migrating-a-react-app-from-create-react-app-4-to-5-17k0</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8pnFsRh7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1024/1%2Akci3fAxsO-1c9zmkB1tZJw.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8pnFsRh7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1024/1%2Akci3fAxsO-1c9zmkB1tZJw.jpeg" alt="React photo" width="880" height="586"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Photo by Lautaro Andreani on Unsplash&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Recently the team behind &lt;a href="https://create-react-app.dev/"&gt;Create-React-App&lt;/a&gt; updated the package from version 4 to 5. You can see a full list of changes right &lt;a href="https://github.com/facebook/create-react-app/releases"&gt;here&lt;/a&gt;. This fixed a lot of outdated dependencies, gave support to Tailwind, updated Webpack, and a bunch of other changes. This article addresses how I went about the process and all the small little problems I ran into along the way.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#updating"&gt;
  &lt;/a&gt;
  Updating
&lt;/h3&gt;

&lt;p&gt;In order to update the version from 4 to 5 run the following command:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mw4dmxyj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/908/0%2AoRTBT5dOV95RCO4D" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mw4dmxyj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/908/0%2AoRTBT5dOV95RCO4D" alt="Yarn command to update react-scripts" width="880" height="397"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Upon starting up the dev environment for my app I noticed that the compile-time reduced considerably, which was a welcome change! But I also received several warnings and errors after updating and starting up the app.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#warning"&gt;
  &lt;/a&gt;
  Warning
&lt;/h3&gt;

&lt;p&gt;My first warning was about the source maps for third party libraries that don’t actually exist:&lt;/p&gt;

&lt;p&gt;Failed to parse source map from ...\node_modules\html-to-image\src\applyStyleWithOptions.ts' file: Error: ENOENT: no such file or directory&lt;/p&gt;

&lt;p&gt;For the time being, I’m not aware of a way to avoid this with a setting so to omit the warnings in the terminal I decided to no longer output the source maps, specifically for the dev environment.&lt;/p&gt;

&lt;p&gt;In the root folder I created the following file: .env.development and added the following line:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;GENERATE_SOURCEMAP=FALSE
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The development suffix is important because I needed the source maps in production because of some third-party libraries.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#errors"&gt;
  &lt;/a&gt;
  Errors
&lt;/h3&gt;

&lt;p&gt;I received two major errors after the update, the first one was related to CSS-In-Modules in combination with SASS:&lt;/p&gt;

&lt;p&gt;Invalid dependencies have been reported by plugins or loaders for this module. All reported dependencies need to be absolute paths.&lt;br&gt;&lt;br&gt;
Invalid dependencies may lead to broken watching and caching.&lt;/p&gt;

&lt;p&gt;Luckily enough in the error message itself the file that was being affected was referenced, for example:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--reAgjrqR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1024/0%2AW_bA7cKuuKIGeI9a" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--reAgjrqR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1024/0%2AW_bA7cKuuKIGeI9a" alt="Sass error" width="880" height="144"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This one was fairly simple to solve as the error message itself indicated the solution, just have to change the relative path to an absolute path. So this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;@use 'styles/mixins'; 
@import 'styles/variables';
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;changed to this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;@use 'src/styles/mixins'; @import 'src/styles/variables';
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;My final error was:&lt;/p&gt;

&lt;p&gt;ERROR in Failed to load config "react" to extend from.&lt;br&gt;&lt;br&gt;
Referenced from: */.eslintrc.json&lt;/p&gt;

&lt;p&gt;This error is in reference to ESLint, from what I could gather their internal ESLint was running into a conflict with my personal configurations, to circumvent this I changed up the dependencies in the .eslintrc.json file.&lt;/p&gt;

&lt;p&gt;I use a variety of extensions but I left it as follows, removing “react” and adding in “react-app”&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;"extends": [ 
"react-app", 
...Other dependencies 
]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And that’s it! Let me know what you think of Create-React-App 5 if you use it or if you run into any other issues.&lt;/p&gt;

&lt;p&gt;More content at &lt;a href="https://relatablecode.com"&gt;Relatable Code&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Originally published at&lt;/em&gt; &lt;a href="https://relatablecode.com/migrating-a-react-app-from-create-react-app-4-to-5/"&gt;&lt;em&gt;https://relatablecode.com&lt;/em&gt;&lt;/a&gt; &lt;em&gt;on January 2, 2022.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>cra</category>
      <category>react</category>
    </item>
    <item>
      <title>How to upload multiple images with preview using Laravel and Vue</title>
      <author>Mohamed Hafidi</author>
      <pubDate>Sun, 02 Jan 2022 14:27:24 +0000</pubDate>
      <link>https://dev.to/simodev/how-to-upload-multiple-images-with-preview-using-laravel-and-vue-282j</link>
      <guid>https://dev.to/simodev/how-to-upload-multiple-images-with-preview-using-laravel-and-vue-282j</guid>
      <description>&lt;p&gt;&lt;strong&gt;Image upload&lt;/strong&gt; is one of the most popular features in modern web. But from all the components that can make up a form, the image upload component could be one of the most frustrating for a lot of developers since it demand a lot of effort and styling. And that's why I created &lt;a href="https://github.com/s1modev/media-upload"&gt;Media-Upload&lt;/a&gt; package.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/s1modev/media-upload"&gt;Media-Upload&lt;/a&gt; is an easy to setup &lt;strong&gt;Vue package&lt;/strong&gt; for multiple images upload with preview that support the create and the update form, and it will handle the upload for you via ajax requests.&lt;/p&gt;

&lt;p&gt;For this tutorial, we will create a simple form where you can also upload images using &lt;strong&gt;Laravel 8&lt;/strong&gt;, &lt;strong&gt;Vue 3&lt;/strong&gt; and &lt;strong&gt;Bootstrap 5&lt;/strong&gt;.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Z1YMR4qw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/as6qgdhtn1536uzmv6o9.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z1YMR4qw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/as6qgdhtn1536uzmv6o9.PNG" alt="Image description" width="815" height="564"&gt;&lt;/a&gt;&lt;br&gt;
As you can see, media-upload preview the images instead of just an input file field.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#step-1-backend-setup"&gt;
  &lt;/a&gt;
  Step 1: Backend Setup
&lt;/h1&gt;

&lt;p&gt;First of all, let's stat with the backend by preparing the database.&lt;br&gt;
we will need two tables, the posts table&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Schema::create('posts', function (Blueprint $table) {
  $table-&amp;gt;id();
  $table-&amp;gt;string('title');
  $table-&amp;gt;string('description');
  $table-&amp;gt;timestamps();
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and the images table&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Schema::create('images', function (Blueprint $table) {
  $table-&amp;gt;id();
  $table-&amp;gt;foreignId('post_id')-&amp;gt;constrained();
  $table-&amp;gt;string('name');
  $table-&amp;gt;timestamps();
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and don't forget to setup your Models too.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#step-2-mediaupload-installation"&gt;
  &lt;/a&gt;
  Step 2: Media-Upload installation
&lt;/h1&gt;

&lt;p&gt;You can install &lt;strong&gt;media-upload&lt;/strong&gt; via npm:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ npm install @s1modev/media-upload
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;or via yarn&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ yarn add @s1modev/media-upload
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;after the installation you can import it on your &lt;code&gt;app.js&lt;/code&gt; file&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;require('./bootstrap');

import { createApp } from 'vue';

import { UploadMedia, UpdateMedia } from '@s1modev/media-upload';

let app=createApp({})

app.component('upload-media' , UploadMedia);
app.component('update-media' , UpdateMedia);

app.mount("#app")
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#step-3-createadd-form"&gt;
  &lt;/a&gt;
  Step 3: Create/Add form
&lt;/h1&gt;

&lt;p&gt;In our &lt;code&gt;create.blade.php&lt;/code&gt; we will create two inputs and use the &lt;code&gt;&amp;lt;upload-media/&amp;gt;&lt;/code&gt; component&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;form action="{{route('post.create')}}" method="post"&amp;gt;
  @csrf
  &amp;lt;div class="form-group"&amp;gt;
    &amp;lt;label for=""&amp;gt;Title&amp;lt;/label&amp;gt;
    &amp;lt;input type="text" name="title" class="form-control @error('title') is-invalid @enderror" value="{{old('title')}}
  &amp;lt;/div&amp;gt;
  &amp;lt;div class="form-group mt-3"&amp;gt;
    &amp;lt;label for=""&amp;gt;Description&amp;lt;/label&amp;gt;
    &amp;lt;textarea name="description" rows="4" class="form-control @error('title') is-invalid @enderror"&amp;gt;{{old('description')}}&amp;lt;/textarea&amp;gt;
  &amp;lt;/div&amp;gt;
  &amp;lt;div class="mt-3"&amp;gt;
    &amp;lt;label for="" class="m-0"&amp;gt;Media&amp;lt;/label&amp;gt;
      &amp;lt;div id="app"&amp;gt;
        &amp;lt;upload-media 
          server='/api/upload'
          error="@error('media'){{$message}}@enderror"&amp;gt;
        &amp;lt;/upload-media&amp;gt;
      &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;button class="btn btn-primary text-white mt-4"&amp;gt;Submit&amp;lt;/button&amp;gt;
&amp;lt;/form&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#usage"&gt;
  &lt;/a&gt;
  Usage
&lt;/h3&gt;

&lt;p&gt;Now we will need to add this line in our &lt;code&gt;api.php&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;//upload image
Route::post('/upload', [ImageController::class, 'store'])-&amp;gt;name('upload');
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the &lt;code&gt;ImageController&lt;/code&gt; we will create a function &lt;code&gt;store()&lt;/code&gt; that temporary stores the uploaded image in &lt;code&gt;tmp\uploads&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;public function store(Request $request){
  $path = public_path('tmp/uploads');

  if (!file_exists($path)) {
    mkdir($path, 0777, true);
  }

  $file = $request-&amp;gt;file('image');

  $name = uniqid() . '_' . trim($file-&amp;gt;getClientOriginalName());

  $file-&amp;gt;move($path, $name);

  return ['name'=&amp;gt;$name];
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;store()&lt;/code&gt; function will give the uploaded image a unique name and stores it in &lt;code&gt;tmp/upload&lt;/code&gt;, and will return the unique name to &lt;code&gt;&amp;lt;upload-media /&amp;gt;&lt;/code&gt; component so it could continue its work.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-post-controller"&gt;
  &lt;/a&gt;
  Create Post Controller
&lt;/h3&gt;

&lt;p&gt;Setting up the &lt;code&gt;web.php&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Route::get('/post/create', [PostController\Create::class, 'index']);
Route::post('/post/create', [PostController\Create::class, 'store'])-&amp;gt;name('post.create');
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And in our create controller &lt;code&gt;PostController/Create.php&lt;/code&gt; this is how the &lt;code&gt;store()&lt;/code&gt; function looks like&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;public function store(Request $request){

  $this-&amp;gt;validate($request,[
    'title'=&amp;gt;'required',
    'description'=&amp;gt;'required',
    'media'=&amp;gt;'required',
  ]);

  $post = Post::create([
    'title'=&amp;gt;$request-&amp;gt;title,
    'description'=&amp;gt;$request-&amp;gt;description,
  ]);

  foreach($request-&amp;gt;media as $image){     
    $from = public_path('tmp/uploads/'.$image);
    $to = public_path('post_images/'.$image);

    File::move($from, $to);
    $post-&amp;gt;images()-&amp;gt;create([
      'name' =&amp;gt; $image,
    ]);
  }

  $posts = Post::get();
  return redirect()-&amp;gt;route('post.dashboard', ['posts'=&amp;gt;$posts]);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This code simply store the post and uses the unique images names to move the added images from the temporary location &lt;code&gt;/tmp/uploads&lt;/code&gt; file to its final location &lt;code&gt;/post_images&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note that&lt;/strong&gt; &lt;code&gt;tmp/uploads&lt;/code&gt; and &lt;code&gt;/post_images&lt;/code&gt; directories need to be created!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#step-4-updateedit-form"&gt;
  &lt;/a&gt;
  Step 4: Update/Edit form
&lt;/h1&gt;

&lt;p&gt;In the update form &lt;code&gt;update.blade.php&lt;/code&gt; we will need to use the second component &lt;code&gt;&amp;lt;update-media/&amp;gt;&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;form action="{{route('post.update', $post-&amp;gt;id)}}" method="post"&amp;gt;
  @csrf
    &amp;lt;div class="form-group"&amp;gt;
      &amp;lt;label for=""&amp;gt;Title&amp;lt;/label&amp;gt;
      &amp;lt;input type="text" name="title" class="form-control" value="{{$post-&amp;gt;title}}" required&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div class="form-group mt-3"&amp;gt;
      &amp;lt;label for=""&amp;gt;Description&amp;lt;/label&amp;gt;
      &amp;lt;textarea name="description" rows="4" class="form-control" required&amp;gt;{{$post-&amp;gt;description}}&amp;lt;/textarea&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div class="mt-3" id="app"&amp;gt;
      &amp;lt;update-media 
        server='/api/upload' 
        media_file_path='/post_images'
        media_server="/api/media/{{$post-&amp;gt;id}}" 
        error="@error('media'){{$message}}@enderror"&amp;gt;
      &amp;lt;/update-media&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;button class="btn btn-primary text-white mt-4"&amp;gt;Save&amp;lt;/button&amp;gt;
&amp;lt;/form&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt; will need the saved images names to preview it, so don't forget to add this line in the &lt;code&gt;api.php&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;//return post images
Route::post('/media/{post}', [ImageController::class, 'getImages'])-&amp;gt;name('post.images');
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and also we should add the &lt;code&gt;getImages&lt;/code&gt; function in our &lt;code&gt;ImageController&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;public function getImages(Post $post){
  $images = $post-&amp;gt;images;
  return ['media'=&amp;gt;$images];
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#update-post-controller"&gt;
  &lt;/a&gt;
  Update post controller
&lt;/h3&gt;

&lt;p&gt;we will need to add this two line in our &lt;code&gt;web.php&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Route::get('/post/update/{post}',[PostController\Update::class, 'index']);
Route::post('/post/update/{post}',[PostController\Update::class, 'update'])-&amp;gt;name('post.update');
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And finally we will need an &lt;code&gt;update()&lt;/code&gt; function in our &lt;code&gt;PostController/Update.php&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;public function update(Post $post, Request $request){
  $this-&amp;gt;validate($request,[
    'title'=&amp;gt;'required',
    'description'=&amp;gt;'required',
    'media'=&amp;gt;'required',
  ]);

  $post-&amp;gt;update($request-&amp;gt;all());

  if(isset($request-&amp;gt;added_media)){
    foreach($request-&amp;gt;added_media as $image){

      $from = public_path('tmp/uploads/'.$image);
      $to = public_path('post_images/'.$image);

      File::move($from, $to);
      $post-&amp;gt;images()-&amp;gt;create([
        'name' =&amp;gt; $image,
      ]);
    }
  }

  if(isset($request-&amp;gt;deleted_media)){
    foreach($request-&amp;gt;deleted_media as $deleted_media){
      File::delete(public_path('post_images/'.$deleted_media));
      Image::where('name', $deleted_media)-&amp;gt;delete();
    }
  }

  $posts = Post::get();
  return redirect()-&amp;gt;route('post.dashboard', ['posts'=&amp;gt;$posts]);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;this function basically add the added images and delete the deleted image.&lt;/p&gt;

&lt;p&gt;You will find this project in &lt;a href="https://github.com/s1modev/media-upload-demo"&gt;this repository&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#homework"&gt;
  &lt;/a&gt;
  Homework
&lt;/h1&gt;

&lt;p&gt;In the situation when a user upload the images on the form but leave the form before the final submit, the temporary images are still stored on the server and won't get moved or deleted.&lt;/p&gt;

&lt;p&gt;well it’s up to you how to deal with this situation, but I recommend you to schedule an artisan command using &lt;a href="https://laravel.com/docs/8.x/scheduling"&gt;Laravel scheduling&lt;/a&gt; to cleanup all those images that have not been used.&lt;/p&gt;

</description>
      <category>laravel</category>
      <category>vue</category>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Introduction to RabbitMQ and Symfony</title>
      <author>Fabio Hiroki</author>
      <pubDate>Sun, 02 Jan 2022 14:15:56 +0000</pubDate>
      <link>https://dev.to/fabiothiroki/introduction-to-rabbitmq-and-symfony-2an4</link>
      <guid>https://dev.to/fabiothiroki/introduction-to-rabbitmq-and-symfony-2an4</guid>
      <description>&lt;p&gt;One day I was trying to learn the deep concepts of RabbitMQ, its use cases and why it's different from other message brokers. I've started by reading the &lt;a href="https://www.rabbitmq.com/getstarted.html"&gt;cool documentation&lt;/a&gt; and then I was eager to try it out in a demo application.&lt;/p&gt;

&lt;p&gt;Turns out it wasn't so easy to setup a &lt;a href="https://symfony.com/"&gt;Symfony&lt;/a&gt; application and connect to RabbitMQ. Google displayed different solutions and I also needed StackOverflow to install some additional dependencies.&lt;/p&gt;

&lt;p&gt;Hopefully I could condense all the information and display it here in a simple and fun way.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-am-i-going-to-build"&gt;
  &lt;/a&gt;
  What am I going to build?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/l2JeblbdfRL0i2qOI/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/l2JeblbdfRL0i2qOI/giphy.gif" alt="A man confused" width="480" height="364"&gt;&lt;/a&gt;&lt;br&gt;
Initially I thought of creating a web application to explore the different patterns of using RabbitMQ. After struggling with the setup of RabbitMQ using a popular web framework, I decided to take a step back and simply create an endpoint that publishes a message, and a consumer that logs the content received. So let's build it!&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#symfony"&gt;
  &lt;/a&gt;
  Symfony
&lt;/h2&gt;

&lt;p&gt;But why Symfony, right? It's a popular PHP framework and I really liked its software architecture and integration with RabbitMQ. &lt;/p&gt;

&lt;p&gt;First, I installed &lt;a href="https://symfony.com/download"&gt;Symfony CLI&lt;/a&gt; and create a a traditional web application:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;symfony new &lt;span class="nt"&gt;--full&lt;/span&gt; php-symfony-rabbitmq
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;My application now can be started by running the following command on the new project directory:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;symfony serve
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#symfony-messenger"&gt;
  &lt;/a&gt;
  Symfony messenger
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/APwmwKVumP56UsAkLd/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/APwmwKVumP56UsAkLd/giphy.gif" alt="A mailman showing a letter" width="480" height="270"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://symfony.com/doc/current/messenger.html"&gt;Symfony Messenger&lt;/a&gt; is the message bus abstraction provided by a separate lib. Let's install it then!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;composer require symfony/messenger
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Following the good documentation, I created a simple class to encapsulate the message to be published:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="k"&gt;final&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;SampleMessage&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;__construct&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;private&lt;/span&gt; &lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;getContent&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And its respective handler:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="k"&gt;final&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;SampleMessangeHandler&lt;/span&gt; &lt;span class="kd"&gt;implements&lt;/span&gt; &lt;span class="nc"&gt;MessageHandlerInterface&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;__invoke&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;SampleMessage&lt;/span&gt; &lt;span class="nv"&gt;$message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// magically invoked when an instance of SampleMessage is dispatched&lt;/span&gt;
        &lt;span class="nb"&gt;print_r&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Handler handled the message!'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now to see if everything is working so far, I added a simple endpoint to dispatch a message:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="k"&gt;final&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;SampleController&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;AbstractController&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;#[Route('/sample', name: 'sample')]&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;MessageBusInterface&lt;/span&gt; &lt;span class="nv"&gt;$bus&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="kt"&gt;Response&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;SampleMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'content'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nv"&gt;$bus&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;dispatch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;sprintf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Message with content %s was published'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$message&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;getContent&lt;/span&gt;&lt;span class="p"&gt;()));&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Thankfully when I hit the endpoint, I can see the output from the handler and the http response from the controller:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;curl http://localhost:8000/sample

Handler handled the message!Message with content content was published
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#where-is-rabbitmq"&gt;
  &lt;/a&gt;
  Where is RabbitMQ?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/w3TwZiezAY1TG/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/w3TwZiezAY1TG/giphy.gif" alt="Gif of a Rabbit" width="499" height="361"&gt;&lt;/a&gt;&lt;br&gt;
Yeah so far there's not even a trace of RabbitMQ, but don't worry because I've prepared the terrain.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#install-all-dependencies"&gt;
  &lt;/a&gt;
  Install all dependencies
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#docker-image"&gt;
  &lt;/a&gt;
  Docker image
&lt;/h3&gt;

&lt;p&gt;I'll use docker to spawn a RabbitMQ instance, because it's much easier. Just install &lt;a href="https://docs.docker.com/compose/install/"&gt;Docker Compose&lt;/a&gt; and then edit the &lt;code&gt;.docker-compose.yml&lt;/code&gt; file on the project root directory to add a new service:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;3'&lt;/span&gt;

&lt;span class="na"&gt;services&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;rabbitmq&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;rabbitmq:3.9-management&lt;/span&gt;
    &lt;span class="na"&gt;ports&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;5672:5672'&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;15672:15672'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;By running &lt;code&gt;docker-compose up&lt;/code&gt; on project root directory, I can see everything is working.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#pecl-amqp-extension"&gt;
  &lt;/a&gt;
  PECL AMQP Extension
&lt;/h3&gt;

&lt;p&gt;The AMQP (Advanced Message Queuing Protocol, the protocol which RabbitMQ uses) extension is needed to be installed using PECL (PHP Extension Community Language). This was a bit tricky, at least on MacOS:&lt;/p&gt;

&lt;p&gt;First, installed &lt;a href="https://brew.sh/"&gt;HomeBrew&lt;/a&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;/bin/bash &lt;span class="nt"&gt;-c&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;$(&lt;/span&gt;curl &lt;span class="nt"&gt;-fsSL&lt;/span&gt; https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh&lt;span class="si"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then installed &lt;code&gt;rabbitmq-c&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;brew &lt;span class="nb"&gt;install &lt;/span&gt;rabbitmq-c
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Which enabled the installation of amqp extension:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;pecl &lt;span class="nb"&gt;install &lt;/span&gt;amqp
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When prompted to enter the path to &lt;code&gt;librabbitmq&lt;/code&gt;, you need to check which version is installed inside the folder &lt;code&gt;/usr/local/Cellar/rabbitmq-c/&lt;/code&gt;. Mine was &lt;code&gt;0.11.0&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;Set the path to librabbitmq &lt;span class="nb"&gt;install &lt;/span&gt;prefix &lt;span class="o"&gt;[&lt;/span&gt;autodetect] : /usr/local/Cellar/rabbitmq-c/0.11.0
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally, the last dependency:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;composer require symfony/amqp-messenger 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What a relief! Now I can go back to proper coding.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-the-asynchronous-power"&gt;
  &lt;/a&gt;
  Using the asynchronous power
&lt;/h2&gt;

&lt;p&gt;By default the username and password created in the docker image are &lt;code&gt;guest&lt;/code&gt;, which is coincidentally the exact line I need to uncomment on &lt;code&gt;.env&lt;/code&gt; file to expose the RabbitMQ connection as an environment variable:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;###&amp;gt; symfony/messenger ###&lt;/span&gt;
&lt;span class="c"&gt;# Choose one of the transports below&lt;/span&gt;
&lt;span class="c"&gt;# MESSENGER_TRANSPORT_DSN=doctrine://default&lt;/span&gt;
 &lt;span class="nv"&gt;MESSENGER_TRANSPORT_DSN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;amqp://guest:guest@localhost:5672/%2f/messages
&lt;span class="c"&gt;# MESSENGER_TRANSPORT_DSN=redis://localhost:6379/messages&lt;/span&gt;
&lt;span class="c"&gt;###&amp;lt; symfony/messenger ###&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now with this new known value, I need to tell the application which messages should be handled by this new transport.&lt;/p&gt;

&lt;p&gt;Then on file &lt;code&gt;config/packages/messanger.yaml&lt;/code&gt;, I defined a new transport and the message type that will use it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;framework&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;messenger&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;transports&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="c1"&gt;# https://symfony.com/doc/current/messenger.html#transport-configuration&lt;/span&gt;
            &lt;span class="na"&gt;async&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;%env(MESSENGER_TRANSPORT_DSN)%'&lt;/span&gt;

        &lt;span class="na"&gt;routing&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="c1"&gt;# Route your messages to the transports&lt;/span&gt;
            &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;App\Message\SampleMessage'&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="s"&gt;async&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now I can hit the previous endpoint again:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;curl http://localhost:8000/sample
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And in another terminal I can check the message is still being handled:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;php bin/console messenger:consume async &lt;span class="nt"&gt;-vv&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This outputs a verbose log message but the important parts are:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;[&lt;/span&gt;messenger] Received message App&lt;span class="se"&gt;\M&lt;/span&gt;essage&lt;span class="se"&gt;\S&lt;/span&gt;ampleMessage
&lt;span class="o"&gt;[&lt;/span&gt;messenger] App&lt;span class="se"&gt;\M&lt;/span&gt;essage&lt;span class="se"&gt;\S&lt;/span&gt;ampleMessage was handled successfully &lt;span class="o"&gt;(&lt;/span&gt;acknowledging to transport&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="nb"&gt;.&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;messenger] Message App&lt;span class="se"&gt;\M&lt;/span&gt;essage&lt;span class="se"&gt;\S&lt;/span&gt;ampleMessage handled by App&lt;span class="se"&gt;\M&lt;/span&gt;essageHandler&lt;span class="se"&gt;\S&lt;/span&gt;ampleMessangeHandler
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To be sure the application is really using RabbitMQ, I can access the admin on &lt;a href="http://localhost:15672"&gt;http://localhost:15672&lt;/a&gt; and see this cool chart:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oKO6ygYV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nwbszsz53h8wsh7tjdy0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oKO6ygYV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nwbszsz53h8wsh7tjdy0.png" alt="Chart showing the message rate" width="808" height="312"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wrap-up"&gt;
  &lt;/a&gt;
  Wrap up
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/xT5LMK5WOVhGdMMAzm/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/xT5LMK5WOVhGdMMAzm/giphy.gif" alt="Gif of someone happy" width="480" height="366"&gt;&lt;/a&gt;&lt;br&gt;
Finally I have a basic setup of RabbitMQ and Symfony! Now I can give life to a bunch of side projects and explore message queueing patterns. Hope you enjoyed and learned something in the way!&lt;/p&gt;

</description>
      <category>php</category>
      <category>architecture</category>
      <category>tutorial</category>
      <category>webdev</category>
    </item>
  </channel>
</rss>
