<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How to Edit a Github Action</title>
      <author>Rizèl Scarlett</author>
      <pubDate>Thu, 13 Jan 2022 18:36:26 +0000</pubDate>
      <link>https://dev.to/github/how-to-edit-a-github-action-3j14</link>
      <guid>https://dev.to/github/how-to-edit-a-github-action-3j14</guid>
      <description>&lt;h2&gt;
  &lt;a href="#why-edit-a-github-action"&gt;
  &lt;/a&gt;
  Why edit a GitHub Action?
&lt;/h2&gt;

&lt;p&gt;There are many reasons to edit a GitHub Action. Perhaps, you found an Action suited to your use case. It's almost perfect, but there's just one minor feature missing. Maybe you noticed a bug or edge case, or you have an idea to take the Action to the next level. &lt;/p&gt;

&lt;p&gt;One solution is to recreate the Action, make it your own, and add all the improvements you desire. The second and my preferred solution is to make a pull request for the Action you are already using. The latter encourages you to treat the Action as an open source project. In return, the benefits include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Expanding your developer network - This is a potential opportunity to interact with the creator of the Action.
&lt;/li&gt;
&lt;li&gt;Technical Exposure - Editing an Action used by multiple developers means you have to think about how your edits will affect other users, which may expose you to new technological problems.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Disclaimer:&lt;/strong&gt; Make sure you get the author's approval to add changes to their Action. The easiest way to do this is by opening an issue and starting a discussion with the author and/or other contributors.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#my-reason"&gt;
  &lt;/a&gt;
  My reason
&lt;/h3&gt;

&lt;p&gt;Not to sound too nerdy, but I feel a rush of excitement and anticipation when I pick up an open source issue. I probably feel that way because I'm still relatively new to open source, and I've transitioned from writing production code every day to not writing production code at all. &lt;/p&gt;

&lt;p&gt;I picked up an issue earlier this month, but I didn't work on it immediately because of the holidays. When I returned a week later, a contributor reassigned the issue to themselves and opened a pull request. &lt;/p&gt;

&lt;p&gt;While I was impressed by the contributor's eagerness, speed, and clever solution, I felt disappointed for a brief moment. Until a friend, &lt;a class="mentioned-user" href="https://dev.to/mtfoley"&gt;@mtfoley&lt;/a&gt; and frequent contributor helped me realize the root cause of the problem: the Contributor Take Action had a minor bug. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The TLDR:&lt;/strong&gt; &lt;a href="https://dev.to/github/assigning-new-contributors-to-issues-using-github-actions-1d27"&gt;The Contributor Take Action&lt;/a&gt; allows contributors to self-assign issues by typing ".take" in a comment. However, if another contributor comments ".take" after the initial contributor self-assigns the issue, the Action will assign that issue to the subsequent contributor as well. &lt;/p&gt;

&lt;p&gt;Matthew helped me transform my disappointment into opportunity: I could fix the bug in Contributor Take Action. I will still get to push code, and I could reduce the chance of miscommunicated reassigned issues in open source projects that use this Action.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-test-and-edit"&gt;
  &lt;/a&gt;
  How to Test and Edit
&lt;/h2&gt;

&lt;p&gt;Contributing code to a GitHub Action is similar to contributing to any open source project. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-setup"&gt;
  &lt;/a&gt;
  The Setup
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Step 1&lt;/strong&gt;: Locate the Action on GitHub’s Marketplace&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9rbF0J71--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mvmyps5f47gfy3f3m65h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9rbF0J71--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mvmyps5f47gfy3f3m65h.png" alt="Image with screenshot of Action on GitHub Marketplace" width="880" height="780"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;*&lt;em&gt;Step 2: *&lt;/em&gt; Find the repository for the Action. The URL for the repository is underneath the "Links" section. Once you click that link, it should lead you to the repository.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GRNIwHJ9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a6itlb6txkuwzgzaxjlw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GRNIwHJ9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a6itlb6txkuwzgzaxjlw.png" alt="Links to the repository are shown in this image" width="880" height="780"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j4fBH0tu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sno34hqhpoflq7r9bl7p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j4fBH0tu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sno34hqhpoflq7r9bl7p.png" alt="Screenshot of the Action's repository" width="880" height="607"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 3:&lt;/strong&gt; Fork the repository by pressing the fork button on the top right.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--q2XuItEH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pakt07o1fj57eoqbl2hn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q2XuItEH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pakt07o1fj57eoqbl2hn.png" alt="Screenshot indicating where the fork button is" width="880" height="607"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 4:&lt;/strong&gt; Once the project is forked, you should have a copy of the repository. Head over to your copy and clone the repository or open it up in Codespaces.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ukd6edsF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d9ez74mnf38rem8xx1mc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ukd6edsF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d9ez74mnf38rem8xx1mc.png" alt="Screenshot of cloned repository" width="880" height="446"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 5:&lt;/strong&gt; Set up a repository for testing and follow the directions written in the Action’s ReadMe.&lt;/p&gt;

&lt;p&gt;In my case, I used a repository I made for sandboxing and playing around with actions called &lt;a href="https://github.com/blackgirlbytes/deploy-with-actions"&gt;deploy-with-actions&lt;/a&gt;. Inside of my deploy-with-actions repository, I created a .github/workflows directory. Inside that directory, I created a take.yml file, and I pasted the workflow written in YAML from the take-action repository's README into that file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;
&lt;span class="c1"&gt;# .github/workflows/take.yml &lt;/span&gt;

&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Assign issue to contributor&lt;/span&gt;

&lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; 

  &lt;span class="na"&gt;issue_comment&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;

&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;

  &lt;span class="na"&gt;assign&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;

    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Take an issue&lt;/span&gt;

    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;

    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;

    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;take the issue&lt;/span&gt;

      &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;bdougie/take-action@main&lt;/span&gt;

      &lt;span class="na"&gt;env&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;

        &lt;span class="na"&gt;GITHUB_TOKEN&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ github.token }}&lt;/span&gt;

      &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;

        &lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Thanks for taking this issue! Let us know if you have any questions!&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Step 6:&lt;/strong&gt; Point the workflow to your forked Action. You can even point it to a different branch or commit. It should look like:  &lt;/p&gt;

&lt;p&gt;&lt;code&gt;uses: {username}/{repo_name}@{branch_name}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;For instance, I changed&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;
 &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;bdougie/take-action@main&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;to&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;
 &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;blackgirlbytes/take-action@handle-if-assigned&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#actually-testing"&gt;
  &lt;/a&gt;
  Actually Testing
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Step 6:&lt;/strong&gt; First, let's check that the Action is working as expected by triggering the Action. After I committed and pushed all the files from the set up above, in my case, I opened up an issue and commented ".take" from a GitHub user account I created for testing. To be clear, I did this in my repository that is using the Action called deploy-with-actions, not the repository for the Action. As expected, I received a message that said, "Thanks for taking this on! If you have not already, join the conversation in our Discord."&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CTq6t8cI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sn576rf4qyy2pjrt4q4p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CTq6t8cI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sn576rf4qyy2pjrt4q4p.png" alt='Screenshot of fake user commenting and a GitHub bot responding "Thanks for taking this on"' width="880" height="274"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 7:&lt;/strong&gt; Time to debug! Try editing your Action and adding a few log statements. You can read the documentation &lt;a href="https://docs.github.com/en/actions/monitoring-and-troubleshooting-workflows/enabling-debug-logging"&gt;here&lt;/a&gt; to learn more about debugging logs. Here’s an example of some edits I made to blackgirlbytes/take-action/action.yml on the handle-if-assigned branch.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;
&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;contributor-takes-action&lt;/span&gt;

&lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;This is an action to assign yourself to an issue for a repo you are not a contributor to.&lt;/span&gt;

&lt;span class="na"&gt;author&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Brian Douglas&lt;/span&gt;

&lt;span class="na"&gt;branding&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;

  &lt;span class="na"&gt;icon&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;thumbs-up'&lt;/span&gt;

  &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;white'&lt;/span&gt;

&lt;span class="na"&gt;inputs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;

  &lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;

    &lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Message&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;to&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;prospective&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;contributor'&lt;/span&gt;

    &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;false&lt;/span&gt;

    &lt;span class="na"&gt;default&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;

&lt;span class="na"&gt;runs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;

  &lt;span class="na"&gt;using&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;composite"&lt;/span&gt;

  &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;

    &lt;span class="pi"&gt;-&lt;/span&gt;

      &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;|&lt;/span&gt;

        &lt;span class="s"&gt;BODY="$(jq '.comment.body' $GITHUB_EVENT_PATH)"&lt;/span&gt;

        &lt;span class="s"&gt;ISSUE_NUMBER="$(jq '.issue.number' $GITHUB_EVENT_PATH)"&lt;/span&gt;

        &lt;span class="s"&gt;LOGIN="$(jq '.comment.user.login' $GITHUB_EVENT_PATH | tr -d \")"&lt;/span&gt;

        &lt;span class="s"&gt;REPO="$(jq '.repository.full_name' $GITHUB_EVENT_PATH | tr -d \")"&lt;/span&gt;

        &lt;span class="s"&gt;ISSUE_JSON="$(jq '.issue' $GITHUB_EVENT_PATH)"&lt;/span&gt;

        &lt;span class="s"&gt;ISSUE_CURRENTLY_ASSIGNED=`echo $ISSUE_JSON | jq '.assignees | length == 0'`&lt;/span&gt;

        &lt;span class="s"&gt;if [[ $BODY == *".take"* ]]; then&lt;/span&gt;

          &lt;span class="s"&gt;if [[ "$ISSUE_CURRENTLY_ASSIGNED" == true ]]; then&lt;/span&gt;

            &lt;span class="s"&gt;echo "$ISSUE_CURRENTLY_ASSIGNED"&lt;/span&gt;

            &lt;span class="s"&gt;echo "Assigning issue $ISSUE_NUMBER to $LOGIN"&lt;/span&gt;

            &lt;span class="s"&gt;echo "Using the link: https://api.github.com/repos/$REPO/issues/$ISSUE_NUMBER/assignees"&lt;/span&gt;

            &lt;span class="s"&gt;curl -H "Authorization: token $GITHUB_TOKEN" -d '{"assignees":["'"$LOGIN"'"]}' https://api.github.com/repos/$REPO/issues/$ISSUE_NUMBER/assignees&lt;/span&gt;

            &lt;span class="s"&gt;if [[ ! -z $INPUT_MESSAGE ]]; then&lt;/span&gt;

              &lt;span class="s"&gt;jq -n -r --arg body "$INPUT_MESSAGE" '{body: $body}' &amp;gt; payload.json&lt;/span&gt;

              &lt;span class="s"&gt;curl -X POST -H "Authorization: token $GITHUB_TOKEN" --data @payload.json https://api.github.com/repos/$REPO/issues/$ISSUE_NUMBER/comments&lt;/span&gt;

            &lt;span class="s"&gt;fi&lt;/span&gt;

          &lt;span class="s"&gt;else&lt;/span&gt;

            &lt;span class="s"&gt;echo "This issue is currently assigned to a different user"&lt;/span&gt;

          &lt;span class="s"&gt;fi&lt;/span&gt;

        &lt;span class="s"&gt;fi&lt;/span&gt;

      &lt;span class="na"&gt;shell&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;bash&lt;/span&gt;

      &lt;span class="na"&gt;env&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;

        &lt;span class="na"&gt;INPUT_MESSAGE&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;${{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;inputs.message&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}"&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Step 8:&lt;/strong&gt; Check the results by reading the Actions logs and continue to modify the code until you get your desired results. I found my Actions logs by heading to the deploy-with-actions repository and clicking on the Actions tab. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bJ3bpUJn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zbv4m2hshnkwiw96lc81.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bJ3bpUJn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zbv4m2hshnkwiw96lc81.png" alt="Screenshot of Action logs" width="880" height="426"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 9:&lt;/strong&gt; Once you have a working solution, commit and push your changes, and create a pull request. Make a pull request comparing forks instead of branches.&lt;/p&gt;

&lt;p&gt;You can find my PR &lt;a href="https://github.com/bdougie/take-action/pull/6"&gt; here&lt;/a&gt;. In this PR, I made a pull request comparing my branch to the author’s branch. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3GMWWwTS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5xtogdljpng9yelxmwc3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3GMWWwTS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5xtogdljpng9yelxmwc3.png" alt="Screenshot of the pull request being compared" width="880" height="431"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Although this solution was successfully merged, I have more to add. My initial implementation doesn’t comment or assign the subsequent contributors, but now I’m working on adding a response or feedback for contributors to understand why they weren’t assigned if the issue was already assigned to another contributor. You can check out my work in progress pull request &lt;a href="https://github.com/bdougie/take-action/pull/8"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Comment below with your thoughts and any Actions you’ve contributed to in the past!&lt;/p&gt;

</description>
      <category>github</category>
      <category>githubactions</category>
      <category>devops</category>
      <category>opensource</category>
    </item>
    <item>
      <title>Managing Django Media &amp; Static Files on Heroku with Bucketeer</title>
      <author>Daniel Starner</author>
      <pubDate>Thu, 13 Jan 2022 18:22:54 +0000</pubDate>
      <link>https://dev.to/heroku/properly-managing-django-media-static-files-on-heroku-o2l</link>
      <guid>https://dev.to/heroku/properly-managing-django-media-static-files-on-heroku-o2l</guid>
      <description>&lt;p&gt;This article will walk through how we correctly persist static &amp;amp; media files for a Django application hosted on Heroku. As a bonus, it will also explain how we can satisfy the additional constraint of specifying private versus public media files based on model definitions.&lt;/p&gt;

&lt;p&gt;Before I begin, this post extends from &lt;a href="https://testdriven.io/blog/storing-django-static-and-media-files-on-amazon-s3/"&gt;this TestDriven.io article&lt;/a&gt; that was written awhile back. I frequent it often when setting up my projects, and have built some extra functionality on top of it over the years. I decided to create a more focused post that references Heroku &amp;amp; Bucketeer with these extra features after helping an individual on StackOverflow.&lt;/p&gt;


&lt;div class="ltag__stackexchange--container"&gt;
  &lt;div class="ltag__stackexchange--title-container"&gt;
    
      &lt;div class="ltag__stackexchange--title"&gt;
        &lt;h1&gt;
          &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7Gn-iPj_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/stackoverflow-logo-b42691ae545e4810b105ee957979a853a696085e67e43ee14c5699cf3e890fb4.svg" alt=""&gt;
            &lt;a href="https://stackoverflow.com/questions/70481782/how-to-add-image-for-image-field-for-a-model-instance-in-django-admin-panel-on-h/70483913#70483913" rel="noopener noreferrer"&gt;
              &lt;span class="title-flare"&gt;answer&lt;/span&gt; re: How to add image for image field for a model instance in django admin panel on heroku?
            &lt;/a&gt;
        &lt;/h1&gt;
        &lt;div class="ltag__stackexchange--post-metadata"&gt;
          &lt;span&gt;Dec 26 '21&lt;/span&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;a class="ltag__stackexchange--score-container" href="https://stackoverflow.com/questions/70481782/how-to-add-image-for-image-field-for-a-model-instance-in-django-admin-panel-on-h/70483913#70483913" rel="noopener noreferrer"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y9mJpuJP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/stackexchange-arrow-up-eff2e2849e67d156181d258e38802c0b57fa011f74164a7f97675ca3b6ab756b.svg" alt=""&gt;
        &lt;div class="ltag__stackexchange--score-number"&gt;
          0
        &lt;/div&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wif5Zq3z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/stackexchange-arrow-down-4349fac0dd932d284fab7e4dd9846f19a3710558efde0d2dfd05897f3eeb9aba.svg" alt=""&gt;
      &lt;/a&gt;
    
  &lt;/div&gt;
  &lt;div class="ltag__stackexchange--body"&gt;
    
&lt;blockquote&gt;
&lt;p&gt;I think it's because I turn off a PC, where I took these images&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This probably is not it, because Heroku doesn't have access to the files on your computer.&lt;/p&gt;

&lt;p&gt;When you upload a file to the Django admin, it looks at the &lt;code&gt;DEFAULT_FILE_STORAGE&lt;/code&gt; settings configuration to determine how to…&lt;/p&gt;
    
  &lt;/div&gt;
  &lt;div class="ltag__stackexchange--btn--container"&gt;
    
      &lt;a href="https://stackoverflow.com/questions/70481782/how-to-add-image-for-image-field-for-a-model-instance-in-django-admin-panel-on-h/70483913#70483913" rel="noopener noreferrer"&gt;Open Full Answer&lt;/a&gt;
    
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;So without further ado, let's first dive into what static &amp;amp; media files are and how Heroku dynos manage their filesystem? &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-media-amp-static-files"&gt;
  &lt;/a&gt;
  What are Media &amp;amp; Static Files
&lt;/h2&gt;

&lt;p&gt;If you are working with a &lt;a href="http://djangoproject.com/"&gt;Django&lt;/a&gt; project, then you inevitably have all of your Python application code written around a bunch of &lt;code&gt;.py&lt;/code&gt; files. These are the code paths of your application, and the end-user - hopefully - never actually sees these files or their contents.&lt;/p&gt;

&lt;p&gt;Outside of these business-logic files, it is common to serve users directly from your server's file system. For these &lt;strong&gt;static files&lt;/strong&gt;, Django doesn't need to run any code for them; the framework looks up the file and returns the contents for the requesting user to view.&lt;/p&gt;

&lt;p&gt;Some examples of static files include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Non-templated HTML&lt;/li&gt;
&lt;li&gt;CSS &amp;amp; JavaScript files to make your page look nice&lt;/li&gt;
&lt;li&gt;User profile pictures&lt;/li&gt;
&lt;li&gt;Generated PDFs&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Media files&lt;/strong&gt; in Django are a particular variant of static files. Media files are read from the server's file system as well. Unlike static files, though, they are usually generated files uploaded by users or generated by your application and are associated with a model's &lt;a href="https://docs.djangoproject.com/en/4.0/ref/models/fields/#filefield"&gt;&lt;code&gt;FileField&lt;/code&gt;&lt;/a&gt; or &lt;a href="https://docs.djangoproject.com/en/4.0/ref/models/fields/#django.db.models.ImageField"&gt;&lt;code&gt;ImageField&lt;/code&gt;&lt;/a&gt;. In the examples above, user profile pictures and generated PDFs are typical examples of media files.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#django-with-media-amp-static-files"&gt;
  &lt;/a&gt;
  Django with Media &amp;amp; Static Files
&lt;/h3&gt;

&lt;p&gt;When a new media file is uploaded to a Django web application, the framework looks at the &lt;code&gt;DEFAULT_FILE_STORAGE&lt;/code&gt; settings configuration to determine how to store that file. &lt;a href="https://docs.djangoproject.com/en/4.0/ref/settings/#default-file-storage"&gt;By default&lt;/a&gt;, it uses the &lt;a href="https://docs.djangoproject.com/en/4.0/ref/files/storage/#django.core.files.storage.FileSystemStorage"&gt;&lt;code&gt;django.core.files.storage.FileSystemStorage&lt;/code&gt; class&lt;/a&gt;, which is what most projects start off as having configured. This implementation looks at the &lt;a href="https://docs.djangoproject.com/en/4.0/ref/settings/#std:setting-MEDIA_ROOT"&gt;&lt;code&gt;MEDIA_ROOT&lt;/code&gt; configuration&lt;/a&gt; that is defined in the &lt;code&gt;settings.py&lt;/code&gt; file and copies the uploaded file contents to &lt;a href="https://docs.djangoproject.com/en/4.0/ref/models/fields/#django.db.models.FileField.upload_to"&gt;a deterministically-created file path&lt;/a&gt; under that given &lt;code&gt;MEDIA_ROOT&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;For example, if the &lt;code&gt;MEDIA_ROOT&lt;/code&gt; is set as &lt;code&gt;/var/www/media&lt;/code&gt;, all uploaded files will be copied and written to a location under &lt;code&gt;/var/www/media/&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#heroku-with-media-amp-static-files"&gt;
  &lt;/a&gt;
  Heroku with Media &amp;amp; Static Files
&lt;/h3&gt;

&lt;p&gt;Storing these static files on your server's disk file system is okay until you start to work with a containerization platform such as &lt;a href="https://www.heroku.com/home"&gt;Heroku&lt;/a&gt;. To explain why this is the case, it helps to take a step back.&lt;/p&gt;

&lt;p&gt;When downloading files on your personal computer, it's okay that these get written to the file system - usually under &lt;code&gt;~/Downloads&lt;/code&gt; or somewhere similar. This download is because you &lt;em&gt;expect&lt;/em&gt; your computer's file system to persist across restarts and shutdowns; if you download a file and restart your computer, that downloaded file should still be there once the laptop is finished restarting.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://heroku.com/home"&gt;Heroku&lt;/a&gt; uses &lt;a href="https://www.docker.com/resources/what-container"&gt;containerization&lt;/a&gt; to execute customer workloads. One fact of this environment is that the associated file systems do not persist across restarts and reschedules. &lt;a href="https://www.heroku.com/dynos"&gt;Heroku dynos&lt;/a&gt; are ephemeral, and they can be destroyed, restarted, and moved without any warning, which &lt;a href="https://devcenter.heroku.com/articles/dynos#ephemeral-filesystem"&gt;replaces the associated filesystem&lt;/a&gt;. This situation means that any uploaded files referenced by &lt;code&gt;FileField's and&lt;/code&gt;ImageField's are just deleted without a trace every time the dyno is restarted, moved, or scaled.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#complete-example-codebase"&gt;
  &lt;/a&gt;
  Complete Example Codebase
&lt;/h2&gt;

&lt;p&gt;I will be stepping through the process of configuring the Django application for Heroku &amp;amp; S3-compatible storage, but feel free to reference the repository below for the complete code to browse through.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/dstarner"&gt;
        dstarner
      &lt;/a&gt; / &lt;a href="https://github.com/dstarner/django-heroku-static-file-example"&gt;
        django-heroku-static-file-example
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Used in my blog post of detailing private &amp;amp; public static files for a Heroku-served Django application
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Properly Managing Django Media &amp;amp; Static Files on Heroku Example&lt;/h1&gt;
&lt;p&gt;Used in my blog post of detailing private &amp;amp; public static files for a Heroku-served Django application.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This does include a $5.00 / month &lt;a href="https://elements.heroku.com/addons/bucketeer" rel="nofollow"&gt;Bucketeer add-on&lt;/a&gt; as a part of the one-click deployment.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://heroku.com/deploy?template=https://github.com/dstarner/django-heroku-static-file-example" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6979881d5a96b7b18a057083bb8aeb87ba35fc279452e29034c1e1c49ade0636/68747470733a2f2f7777772e6865726f6b7563646e2e636f6d2f6465706c6f792f627574746f6e2e737667" alt="Deploy"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/dstarner/django-heroku-static-file-example"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


&lt;h2&gt;
  &lt;a href="#bootstrapping-django-on-heroku"&gt;
  &lt;/a&gt;
  Bootstrapping Django on Heroku
&lt;/h2&gt;

&lt;p&gt;This tutorial aims to help you retrofit an existing Django project with S3-compatible storage, but I'll quickly go through the steps I used to set up the example Django application. It may help those new to Django &amp;amp; Heroku or those who encounter bugs following the rest of the setup process.&lt;/p&gt;

&lt;p&gt;You can view the tagged project before the storage change &lt;a href="https://github.com/dstarner/django-heroku-static-file-example/commit/299bbe2403e3c35b4cd905aa61eee974ccdb9558"&gt;at commit &lt;code&gt;299bbe2&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Bootstrapped a Django project &lt;code&gt;example&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;Uses &lt;a href="https://python-poetry.org/"&gt;&lt;code&gt;poetry&lt;/code&gt;&lt;/a&gt; for dependency management&lt;/li&gt;
&lt;li&gt;All of the Django code is under the &lt;code&gt;example&lt;/code&gt; package, and the &lt;code&gt;manage.py&lt;/code&gt; file is in the root. I've always found this structure cleaner than the &lt;a href="https://docs.djangoproject.com/en/4.0/ref/applications/"&gt;Django apps&lt;/a&gt; defined in the project root.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Configured the project for Heroku

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://pypi.org/project/django-heroku/"&gt;&lt;code&gt;django-heroku&lt;/code&gt; package&lt;/a&gt; to automatically configure &lt;code&gt;ALLOWED_HOSTS&lt;/code&gt;, &lt;code&gt;DATABASE_URL&lt;/code&gt;, and more. This reduces the headache of deploying Django on Heroku considerably&lt;/li&gt;
&lt;li&gt;A &lt;a href="https://devcenter.heroku.com/articles/procfile"&gt;&lt;code&gt;Procfile&lt;/code&gt;&lt;/a&gt; that runs a &lt;a href="https://gunicorn.org/"&gt;&lt;code&gt;gunicorn&lt;/code&gt; process&lt;/a&gt; for managing the WSGI application&lt;/li&gt;
&lt;li&gt;An &lt;code&gt;app.json&lt;/code&gt; is defined with some fundamental configuration values and resources defined for the project to work&lt;/li&gt;
&lt;li&gt;A &lt;code&gt;release&lt;/code&gt; process definition in the &lt;code&gt;Procfile&lt;/code&gt; and an associated &lt;code&gt;scripts/release.sh&lt;/code&gt; script that runs staticfile collection and database migrations&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#introducing-herokus-bucketeer-addon"&gt;
  &lt;/a&gt;
  Introducing Heroku's Bucketeer Add-On
&lt;/h2&gt;

&lt;p&gt;Before we can start managing static and media files, the Django application needs a persistent place to store the files. Again, we can look to &lt;a href="https://elements.heroku.com/addons"&gt;Heroku's extensive list of Add-Ons&lt;/a&gt; for s3-compatible storage. Ours of choice will be one called &lt;strong&gt;Bucketeer&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Heroku's &lt;a href="https://elements.heroku.com/addons/bucketeer"&gt;Bucketeer add-on&lt;/a&gt; provides an &lt;a href="https://aws.amazon.com/s3/"&gt;AWS S3 storage&lt;/a&gt; bucket to upload and download files for our application. The Django application will use this configured bucket to store files uploaded by the server and download them from the S3 when a user requests the files.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you'd like to learn more about AWS S3, the widely-popular data storage solution that Bucketeer is built upon, you can read the &lt;a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/Welcome.html"&gt;S3 user documentation&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;It is worth mentioning that the base plan for Bucketeer - &lt;code&gt;Hobbyist&lt;/code&gt; - is  $5 per month.&lt;/strong&gt; If you plan on spinning up the one-click example posted above, it should only cost a few cents if you &lt;a href="https://help.heroku.com/LGKL6LTN/how-do-i-delete-destroy-a-heroku-application"&gt;proactively destroy the application&lt;/a&gt; when you are done using it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#including-the-bucketeer-addon"&gt;
  &lt;/a&gt;
  Including the Bucketeer Add-On
&lt;/h3&gt;

&lt;p&gt;To include the &lt;a href="https://elements.heroku.com/addons/bucketeer"&gt;Bucketeer add-on&lt;/a&gt; in our application, we can configure it through the Heroku CLI, web dashboard, or via the project's &lt;code&gt;app.json&lt;/code&gt; file. We will use the third method of including the add-on in an &lt;code&gt;app.json&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;If the project does not have one already, we can create the basic structure listed below, with the critical part being the addition of the &lt;code&gt;"add-ons"&lt;/code&gt; configuration. This array defines the &lt;code&gt;"bucketeer:hobbyist"&lt;/code&gt; resource that our application will use, and Heroku will install the add-on into our application if it does not already exist. We also include the &lt;code&gt;" as"&lt;/code&gt; keyword, which will preface the associated configuration variables with the term &lt;code&gt;BUCKETEER&lt;/code&gt;. This prefacing is helpful to keep the generated configuration value names deterministic because, by default, Heroku will generate the prefix as a random color.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// ... rest above&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;addons&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="c1"&gt;// ...other addons...&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;plan&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;bucketeer:hobbyist&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;as&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;BUCKETEER&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With the required resources being defined, we can start integrating with our storage add-on.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#implementing-our-storage-solution"&gt;
  &lt;/a&gt;
  Implementing Our Storage Solution
&lt;/h2&gt;

&lt;p&gt;The &lt;a href="https://django-storages.readthedocs.io/en/latest/"&gt;&lt;code&gt;django-storages&lt;/code&gt; package&lt;/a&gt; is a collection of custom, reuseable storage backends for Django. It aids immensely in saving static and media files to different cloud &amp;amp; storage provider options. &lt;a href="https://django-storages.readthedocs.io/en/latest/backends/amazon-S3.html"&gt;One of the supported storage providers is S3&lt;/a&gt;, which our Bucketeer add-on is built on. We will leverage the S3 &lt;code&gt;django-storages&lt;/code&gt; backend to handle different file types.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#installing-raw-djangostorages-endraw-"&gt;
  &lt;/a&gt;
  Installing &lt;code&gt;django-storages&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;Begin by installing the &lt;code&gt;django-storages&lt;/code&gt; package and the related &lt;a href="https://aws.amazon.com/sdk-for-python/"&gt;&lt;code&gt;boto3&lt;/code&gt; package&lt;/a&gt; used to interface with AWS's S3. We will also lock our dependencies to ensure &lt;code&gt;poetry&lt;/code&gt; and our Heroku deployment continue to work as expected.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="go"&gt;poetry add django-storages boto3 &amp;amp;&amp;amp; poetry lock
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, just like most Django-related packages, &lt;code&gt;django-storages&lt;/code&gt; will need to be added to the project's &lt;code&gt;INSTALLED_APPS&lt;/code&gt; in the projects &lt;code&gt;settings.py&lt;/code&gt; file. This will allow Django to load the appropriate code flows as the application starts up.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# example/config/settings.py
&lt;/span&gt;&lt;span class="n"&gt;INSTALLED_APPS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="c1"&gt;# ... django.X.Y apps above
&lt;/span&gt;    &lt;span class="s"&gt;'storages'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="c1"&gt;# ... custom project apps below
&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#implementing-static-public-amp-private-storage-backends"&gt;
  &lt;/a&gt;
  Implementing Static, Public &amp;amp; Private Storage Backends
&lt;/h3&gt;

&lt;p&gt;We will return to the &lt;code&gt;settings.py&lt;/code&gt; file later to configure the usage of &lt;code&gt;django-storages&lt;/code&gt;, but before that can be done, we will implement three custom &lt;a href="https://docs.djangoproject.com/en/4.0/howto/custom-file-storage/"&gt;storage backends&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A storage backend for static files - CSS, Javascript, and publicly accessible images - that will be stored in version control - aka &lt;code&gt;git&lt;/code&gt; - and shipped with the application&lt;/li&gt;
&lt;li&gt;A &lt;strong&gt;public&lt;/strong&gt; storage backend for dynamic media files that are not stored in version control, such as uploaded files and attachments&lt;/li&gt;
&lt;li&gt;A &lt;strong&gt;private&lt;/strong&gt; storage backend for dynamic media files that are not stored in the version control that require extra access to be viewed, such as per-user reports and potentially profile images. Files managed by this backend require an access key and will block access to those without a valid key.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We can extend from &lt;code&gt;django-storages&lt;/code&gt; 's &lt;code&gt;S3Boto3Storage&lt;/code&gt; storage backend to create these. The following code can be directly "copy and paste "'d into your project. The different &lt;code&gt;settings&lt;/code&gt; attributes read in the module will be written shortly, so &lt;strong&gt;do not expect this code to work if you import it right now&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# FILE: example/utils/storage_backends.py
&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.conf&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;storages.backends.s3boto3&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;S3Boto3Storage&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;StaticStorage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S3Boto3Storage&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="s"&gt;"""Used to manage static files for the web server"""&lt;/span&gt;
    &lt;span class="n"&gt;location&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;STATIC_LOCATION&lt;/span&gt;
    &lt;span class="n"&gt;default_acl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;STATIC_DEFAULT_ACL&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;PublicMediaStorage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S3Boto3Storage&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="s"&gt;"""Used to store &amp;amp; serve dynamic media files with no access expiration"""&lt;/span&gt;
    &lt;span class="n"&gt;location&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PUBLIC_MEDIA_LOCATION&lt;/span&gt;
    &lt;span class="n"&gt;default_acl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PUBLIC_MEDIA_DEFAULT_ACL&lt;/span&gt;
    &lt;span class="n"&gt;file_overwrite&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;PrivateMediaStorage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S3Boto3Storage&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="s"&gt;"""
    Used to store &amp;amp; serve dynamic media files using access keys
    and short-lived expirations to ensure more privacy control
    """&lt;/span&gt;
    &lt;span class="n"&gt;location&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PRIVATE_MEDIA_LOCATION&lt;/span&gt;
    &lt;span class="n"&gt;default_acl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PRIVATE_MEDIA_DEFAULT_ACL&lt;/span&gt;
    &lt;span class="n"&gt;file_overwrite&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
    &lt;span class="n"&gt;custom_domain&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The attributes listed in each storage backend class perform the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;location&lt;/code&gt;: This dictates the parent directory used in the S3 bucket for associated files. This is concatenated with the generated path provided by a &lt;code&gt;FileField&lt;/code&gt; or &lt;code&gt;ImageField&lt;/code&gt; 's &lt;a href="https://docs.djangoproject.com/en/4.0/ref/models/fields/#django.db.models.FileField.upload_to"&gt;&lt;code&gt;upload_to&lt;/code&gt; method&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;default_acl&lt;/code&gt;: This dictates the access policy required for reading the files. This dictates the storage backend's access control through values of &lt;code&gt;None&lt;/code&gt;, &lt;code&gt;public-read&lt;/code&gt;, and &lt;code&gt;private&lt;/code&gt;. &lt;code&gt;django-storages&lt;/code&gt; and the &lt;code&gt;S3Boto3Storage&lt;/code&gt; parent class with translate these into object policies.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;file_overwrite&lt;/code&gt;: In most cases, it's better not to overwrite existing files if we update a specific path. With this set to &lt;code&gt;False&lt;/code&gt;, a unique suffix will be appended to the path to prevent naming collisions.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;custom_domain&lt;/code&gt;: Disabled here, but you can enable it if you want to use &lt;a href="https://django-storages.readthedocs.io/en/latest/backends/amazon-S3.html#cloudfront"&gt;AWS's CloudFront and &lt;code&gt;django-storage&lt;/code&gt; to serve from it&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#configure-settings-to-use-the-storage-backends"&gt;
  &lt;/a&gt;
  Configure Settings to Use the Storage Backends
&lt;/h3&gt;

&lt;p&gt;With our storage backends defined, we can configure them to be used in different situations via the &lt;code&gt;settings.py&lt;/code&gt; file. However, it is challenging to use S3 and these different cloud storage backends while in development, and I've always been a proponent of keeping all resources and files "local" to the development machine, so we will create a logic path that will:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Use the local filesystem to store static and media files for convenience. The Django server will be responsible for serving these files directly.&lt;/li&gt;
&lt;li&gt;Use the custom S3 storage backends when an environment variable is enabled. We will use the &lt;code&gt;S3_ENABLED&lt;/code&gt; variable to control this, enabling it in our Heroku configuration variables.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;First, we will assume that you have a relatively vanilla &lt;code&gt;settings.py&lt;/code&gt; file concerning the static- &amp;amp; media-related variables. For reference, a new project should have a block that looks similar to the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/
&lt;/span&gt;
&lt;span class="n"&gt;STATIC_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'static/'&lt;/span&gt;

&lt;span class="n"&gt;STATIC_ROOT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;BASE_DIR&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="s"&gt;'collected-static'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We will design a slightly advanced control flow that will seamlessly handle the two cases defined above. In addition, it will provide enough control to override each part of the configuration as needed.&lt;/p&gt;

&lt;p&gt;Since there are already default values for the static file usage, we can add default values for media file usage. These will be used when serving files locally from the server while in development mode.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;STATIC_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'/static/'&lt;/span&gt;
&lt;span class="n"&gt;STATIC_ROOT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;BASE_DIR&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="s"&gt;'collected-static'&lt;/span&gt;

&lt;span class="n"&gt;MEDIA_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'/media/'&lt;/span&gt;
&lt;span class="n"&gt;MEDIA_ROOT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;BASE_DIR&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="s"&gt;'collected-media'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To begin the process of including S3, let's create the controls to manage if we should serve static &amp;amp; media files from the local server or through the S3 storage backend. We will create three variables&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;S3_ENABLED&lt;/code&gt;: controls whether media &amp;amp; static files should use S3 storage by default&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;LOCAL_SERVE_MEDIA_FILES&lt;/code&gt;: controls whether media files should use S3 storage. Defaults to the negated &lt;code&gt;S3_ENABLED&lt;/code&gt; value&lt;/li&gt;
&lt;li&gt; &lt;code&gt;LOCAL_SERVE_STATIC_FILES&lt;/code&gt;: controls whether static files should use S3 storage. Defaults to the negated &lt;code&gt;S3_ENABLED&lt;/code&gt; value
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;decouple&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt;  &lt;span class="c1"&gt;# import explained below
&lt;/span&gt;
&lt;span class="c1"&gt;# ...STATIC and MEDIA settings here...
&lt;/span&gt;
&lt;span class="c1"&gt;# The following configs determine if files get served from the server or an S3 storage
&lt;/span&gt;&lt;span class="n"&gt;S3_ENABLED&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'S3_ENABLED'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cast&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;LOCAL_SERVE_MEDIA_FILES&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'LOCAL_SERVE_MEDIA_FILES'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cast&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;S3_ENABLED&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;LOCAL_SERVE_STATIC_FILES&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'LOCAL_SERVE_STATIC_FILES'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cast&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;S3_ENABLED&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;LOCAL_SERVE_MEDIA_FILES&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;LOCAL_SERVE_STATIC_FILES&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;S3_ENABLED&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="nb"&gt;ValueError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'S3_ENABLED must be true if either media or static files are not served locally'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the example above, we are using the &lt;a href="https://pypi.org/project/python-decouple/"&gt;&lt;code&gt;python-decouple&lt;/code&gt; package&lt;/a&gt; to make it easier to read and cast environment variables to Python variables. I highly recommend this package when working with &lt;code&gt;settings.py&lt;/code&gt; configurations. We also include a value check to ensure consistency across these three variables. If all three variables are defined in the environment but conflict with one another, the program will throw an error.&lt;/p&gt;

&lt;p&gt;We can now start configuring the different configuration variables required by our file storage backends based on those control variables' value(s). We begin by including some S3 configurations required whether we are serving static, media, or both types of files.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;S3_ENABLED&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;AWS_ACCESS_KEY_ID&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'BUCKETEER_AWS_ACCESS_KEY_ID'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;AWS_SECRET_ACCESS_KEY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'BUCKETEER_AWS_SECRET_ACCESS_KEY'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;AWS_STORAGE_BUCKET_NAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'BUCKETEER_BUCKET_NAME'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;AWS_S3_REGION_NAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'BUCKETEER_AWS_REGION'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;AWS_DEFAULT_ACL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
    &lt;span class="n"&gt;AWS_S3_SIGNATURE_VERSION&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'S3_SIGNATURE_VERSION'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'s3v4'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;AWS_S3_ENDPOINT_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;'https://&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;AWS_STORAGE_BUCKET_NAME&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;.s3.amazonaws.com'&lt;/span&gt;
    &lt;span class="n"&gt;AWS_S3_OBJECT_PARAMETERS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'CacheControl'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'max-age=86400'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above defines some of the variables required by the &lt;a href="https://django-storages.readthedocs.io/en/latest/backends/amazon-S3.html"&gt;&lt;code&gt;django-storages&lt;/code&gt; S3 backend&lt;/a&gt; and sets the values to environment configurations that are provided by the Bucketeer add-on. As previously mentioned, all of the add-on environment variables are prefixed with &lt;code&gt;BUCKETEER_&lt;/code&gt;. The &lt;code&gt;S3_SIGNATURE_VERSION&lt;/code&gt; environment variable is not required and &lt;em&gt;most likely&lt;/em&gt; does not need to be included.&lt;/p&gt;

&lt;p&gt;With the S3 configuration together, we can reference the &lt;code&gt;LOCAL_SERVE_MEDIA_FILES&lt;/code&gt; and &lt;code&gt;LOCAL_SERVE_STATIC_FILES&lt;/code&gt; control variables to override the default static and media file settings if they are desired to be served via S3.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;LOCAL_SERVE_STATIC_FILES&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;STATIC_DEFAULT_ACL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'public-read'&lt;/span&gt;
    &lt;span class="n"&gt;STATIC_LOCATION&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'static'&lt;/span&gt;
    &lt;span class="n"&gt;STATIC_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;AWS_S3_ENDPOINT_URL&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;/&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;STATIC_LOCATION&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;/'&lt;/span&gt;
    &lt;span class="n"&gt;STATICFILES_STORAGE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'example.utils.storage_backends.StaticStorage'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Notice the last line where &lt;code&gt;STATICFILES_STORAGE&lt;/code&gt; is set to the custom Backend we created. That ensures it follows the location &amp;amp; ACL (Access Control List) policies that we configured initially. With this configuration, all static files will be placed under &lt;code&gt;/static/&lt;/code&gt; in the bucket, but feel free to update &lt;code&gt;STATIC_LOCATION&lt;/code&gt; if desired.&lt;/p&gt;

&lt;p&gt;We can configure a very similar situation for media files.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;LOCAL_SERVE_MEDIA_FILES&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;PUBLIC_MEDIA_DEFAULT_ACL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'public-read'&lt;/span&gt;
    &lt;span class="n"&gt;PUBLIC_MEDIA_LOCATION&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'media/public'&lt;/span&gt;

    &lt;span class="n"&gt;MEDIA_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;AWS_S3_ENDPOINT_URL&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;/&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;PUBLIC_MEDIA_LOCATION&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;/'&lt;/span&gt;
    &lt;span class="n"&gt;DEFAULT_FILE_STORAGE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'rn_api.utils.storage_backends.PublicMediaStorage'&lt;/span&gt;

    &lt;span class="n"&gt;PRIVATE_MEDIA_DEFAULT_ACL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'private'&lt;/span&gt;
    &lt;span class="n"&gt;PRIVATE_MEDIA_LOCATION&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'media/private'&lt;/span&gt;
    &lt;span class="n"&gt;PRIVATE_FILE_STORAGE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'rn_api.utils.storage_backends.PrivateMediaStorage'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The big difference here is that we have configured &lt;em&gt;two&lt;/em&gt; different storage backends for media files; one for publicly accessible objects and one for objects that require an access token. When the file is requested, this token will be generated internally by &lt;code&gt;django-storages&lt;/code&gt; so you do not have to worry about anonymous public access.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#local-development-serving"&gt;
  &lt;/a&gt;
  Local Development Serving
&lt;/h3&gt;

&lt;p&gt;Since we will have &lt;code&gt;S3_ENABLED&lt;/code&gt; set to &lt;code&gt;False&lt;/code&gt; in our local development environment, it will serve static and media files locally through the Django server instead of from S3. We will need to configure the URL routing to handle this scenario. We can configure our &lt;code&gt;urls.py&lt;/code&gt; file to serve the appropriate files like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.conf&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.conf.urls.static&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;static&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.contrib&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;admin&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.urls&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt;


&lt;span class="n"&gt;urlpatterns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'admin/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;admin&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;urls&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LOCAL_SERVE_STATIC_FILES&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;urlpatterns&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;static&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;STATIC_URL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;document_root&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;STATIC_ROOT&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LOCAL_SERVE_MEDIA_FILES&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;urlpatterns&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;static&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MEDIA_URL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;document_root&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MEDIA_ROOT&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will locally serve the static or media files based on the values of the &lt;code&gt;LOCAL_SERVE_STATIC_FILES&lt;/code&gt; and &lt;code&gt;LOCAL_SERVE_MEDIA_FILES&lt;/code&gt; settings variables we defined.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#enabling-s3-storage"&gt;
  &lt;/a&gt;
  Enabling S3 Storage
&lt;/h3&gt;

&lt;p&gt;We can enable these storages and our add-on in the &lt;code&gt;app.json&lt;/code&gt; file to start using these storage backends. This will effectively disable &lt;code&gt;LOCAL_SERVE_STATIC_FILES&lt;/code&gt; and &lt;code&gt;LOCAL_SERVE_MEDIA_FILES&lt;/code&gt; to start serving both via S3 when deployed to Heroku.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// ...rest of configs...&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;env&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// ...rest of envs...&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;S3_ENABLED&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;description&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Enable to upload &amp;amp; serve static and media files from S3&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;value&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;True&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#using-the-private-storage"&gt;
  &lt;/a&gt;
  Using the Private Storage
&lt;/h3&gt;

&lt;p&gt;By default, Django will use the &lt;code&gt;PublicMediaStorage&lt;/code&gt; class for uploading media files, meaning the contents will be publicly accessible to anyone with the link. However, a model can utilize the &lt;code&gt;PrivateMediaStorage&lt;/code&gt; backend when desired, which will create short-lived access tokens that prevent the public from viewing the associated object.&lt;/p&gt;

&lt;p&gt;The below is an example of using public and private media files on the same model.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.db&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;example.utils.storage_backends&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;PrivateMediaStorage&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Organization&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Model&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="s"&gt;"""A sample Organization model with public and private file field usage
    """&lt;/span&gt;

    &lt;span class="n"&gt;logo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ImageField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;help_text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'A publicly accessible company logo'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;expense_report&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FileField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;help_text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'The private expense report requires a short-lived access token'&lt;/span&gt;
        &lt;span class="n"&gt;storage&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;PrivateMediaStorage&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;  &lt;span class="c1"&gt;# will create private files
&lt;/span&gt;    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;You can see the code for this complete example &lt;a href="https://github.com/dstarner/django-heroku-static-file-example/commit/265becc025cd41ebe1de6cb489150b7f6b110f23"&gt;at commit &lt;code&gt;265becc&lt;/code&gt;&lt;/a&gt;. This configuration will allow your project to scale efficiently using &lt;a href="https://www.djangoproject.com/"&gt;Django&lt;/a&gt; on &lt;a href="https://www.heroku.com/home"&gt;Heroku&lt;/a&gt; using &lt;a href="https://elements.heroku.com/addons/bucketeer"&gt;Bucketeer&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In a future post, we will discuss how to upload and set these files using vanilla Django &amp;amp; &lt;a href="https://www.django-rest-framework.org/"&gt;Django REST Framework&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;As always, if you find any bugs, issues, or unclear explanations, please reach out to me so I can improve the tutorial &amp;amp; experience for future readers.&lt;/p&gt;

&lt;p&gt;Take care everyone&lt;/p&gt;

</description>
      <category>django</category>
      <category>heroku</category>
      <category>aws</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Storebay: A cross-platform ecommerce application [Android, IOS, Web]</title>
      <author>Narottam04</author>
      <pubDate>Thu, 13 Jan 2022 18:14:13 +0000</pubDate>
      <link>https://dev.to/narottam04/storebay-a-cross-platform-ecommerce-application-android-ios-web-3e4g</link>
      <guid>https://dev.to/narottam04/storebay-a-cross-platform-ecommerce-application-android-ios-web-3e4g</guid>
      <description>&lt;h3&gt;
  &lt;a href="#overview-of-my-submission"&gt;
  &lt;/a&gt;
  Overview of My Submission
&lt;/h3&gt;

&lt;p&gt;Storebay is an E-Commerce platform. It is built on the MERN stack (MongoDB, Express, React, Node js). It has features like a custom admin panel to manage users, PayPal checkout, reviews,android and ios app and more.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#submission-category"&gt;
  &lt;/a&gt;
  Submission Category:
&lt;/h3&gt;

&lt;p&gt;E-Commerce Creation&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#link-to-code"&gt;
  &lt;/a&gt;
  Link to Code
&lt;/h3&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/Narottam04"&gt;
        Narottam04
      &lt;/a&gt; / &lt;a href="https://github.com/Narottam04/StoreBay"&gt;
        StoreBay
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#main-tech-stack"&gt;
  &lt;/a&gt;
  Main Tech Stack
&lt;/h3&gt;

&lt;p&gt;React - For Frontend&lt;br&gt;
Tailwind CSS - For Styling&lt;br&gt;
Node Js, Express - For Backend&lt;br&gt;
PayPal : For Payment&lt;br&gt;
MongoDB Atlas : For Database &lt;br&gt;
MongoDB Atlas Search : For autocomplete search functionality&lt;br&gt;
Capacitor Js: For converting existing web app to android and ios&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#app-preview-amp-features"&gt;
  &lt;/a&gt;
  App Preview &amp;amp; Features
&lt;/h2&gt;

&lt;h4&gt;
  &lt;a href="#homepage"&gt;
  &lt;/a&gt;
  HomePage
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8JDNA5Mt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xl21965gv6biz6v73x2k.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8JDNA5Mt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xl21965gv6biz6v73x2k.jpeg" alt="Home Page" width="880" height="384"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9hjAiVrR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mae1w6ctaop2w85dbqj1.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9hjAiVrR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mae1w6ctaop2w85dbqj1.jpeg" alt="Home Page" width="880" height="484"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#login-page"&gt;
  &lt;/a&gt;
  Login Page
&lt;/h4&gt;

&lt;p&gt;Login and Sign up is created using Node Js &amp;amp;&amp;amp; MongoDB &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jFNIUG8g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ny8tf26rklqy1zy812rr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jFNIUG8g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ny8tf26rklqy1zy812rr.png" alt="Login Page" width="880" height="445"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--40Coazmw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/saw1actpdj0iaccg0r5f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--40Coazmw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/saw1actpdj0iaccg0r5f.png" alt="Login Page" width="880" height="446"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#profile-page"&gt;
  &lt;/a&gt;
  Profile Page
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qINxvcq6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sxnm9r4au2yu9iwdym6k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qINxvcq6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sxnm9r4au2yu9iwdym6k.png" alt="Profile Page" width="880" height="443"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#admin-page"&gt;
  &lt;/a&gt;
  Admin Page
&lt;/h3&gt;

&lt;p&gt;Using a custom admin panel, a user can make other users admins, manage products, add new ones, update existing ones, and mark a delivery as successful.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WwS3hczl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6taoxbfrql37w3gfz00e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WwS3hczl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6taoxbfrql37w3gfz00e.png" alt="Admin Page" width="880" height="422"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RGGMLK9W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5rolaythzhu0l32bjm58.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RGGMLK9W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5rolaythzhu0l32bjm58.png" alt="Admin Page" width="880" height="427"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--P3rMyFa8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vy9ava4nzx7kphqf9bjn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P3rMyFa8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vy9ava4nzx7kphqf9bjn.png" alt="Admin Page" width="880" height="402"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#product-overview"&gt;
  &lt;/a&gt;
  Product overview
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ao-A89Il--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cajp5u0c7pjfn4owzd48.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ao-A89Il--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cajp5u0c7pjfn4owzd48.png" alt="Product" width="880" height="446"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#reviews"&gt;
  &lt;/a&gt;
  Reviews
&lt;/h4&gt;

&lt;p&gt;Each signed in user can only add one review per products.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--U6ArTVvq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jbrpwz038sq6twszqhwb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--U6ArTVvq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jbrpwz038sq6twszqhwb.png" alt="review" width="880" height="192"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#cart"&gt;
  &lt;/a&gt;
  Cart
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hoo8N1jl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hssvtt2plcge6invtn3a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hoo8N1jl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hssvtt2plcge6invtn3a.png" alt="Cart" width="880" height="444"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#checkout-process"&gt;
  &lt;/a&gt;
  Checkout Process
&lt;/h2&gt;

&lt;h4&gt;
  &lt;a href="#step1"&gt;
  &lt;/a&gt;
  Step1
&lt;/h4&gt;

&lt;p&gt;User must add their shipping address for step 1&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--izhtf9FX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ngo8d2b6s46aoj9cmhqk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--izhtf9FX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ngo8d2b6s46aoj9cmhqk.png" alt="Checkout1" width="880" height="447"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#step2"&gt;
  &lt;/a&gt;
  Step2
&lt;/h4&gt;

&lt;p&gt;User must choose a payment method. Currently only paypal payment method is working&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CXLqb6Kc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vh63nnvdqpv6qqhq2mig.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CXLqb6Kc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vh63nnvdqpv6qqhq2mig.png" alt="Checkout2" width="880" height="423"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#step-3"&gt;
  &lt;/a&gt;
  Step 3
&lt;/h4&gt;

&lt;p&gt;Step 3 is order summary where you can view your product,shipping and payment details  &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#step-4-imp"&gt;
  &lt;/a&gt;
  Step 4 [IMP]
&lt;/h4&gt;

&lt;p&gt;Payment using paypal&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i9rGnZgm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q2nbsg4urdkhan19hmte.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i9rGnZgm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q2nbsg4urdkhan19hmte.png" alt="Checkout3" width="880" height="446"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7QpFy3Un--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qjp432a4sff9fk7x79xm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7QpFy3Un--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qjp432a4sff9fk7x79xm.png" alt="Checkout4" width="880" height="530"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nTGoB3kP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/osi6yhpf2gcndkn2c86a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nTGoB3kP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/osi6yhpf2gcndkn2c86a.png" alt="Checkout5" width="880" height="438"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That's all folks, I hope you enjoy this project&lt;/p&gt;

</description>
      <category>atlashackathon</category>
      <category>react</category>
      <category>mongodb</category>
      <category>node</category>
    </item>
    <item>
      <title>Binary search is not for sorted arrays only !</title>
      <author>Rounit Ranjan Sinha</author>
      <pubDate>Thu, 13 Jan 2022 17:56:45 +0000</pubDate>
      <link>https://dev.to/rounit08/binary-search-is-not-for-sorted-arrays-only--2aba</link>
      <guid>https://dev.to/rounit08/binary-search-is-not-for-sorted-arrays-only--2aba</guid>
      <description>&lt;p&gt;While talking about ' Binary Search ' , we consider that it will only work for "Sorted arrays" , but that's not the condition.&lt;/p&gt;

&lt;p&gt;It will work for " Unsorted arrays" also ,&lt;/p&gt;

&lt;p&gt;yes but only one kind of "unsorted array" ,&lt;br&gt;
i.e., &lt;em&gt;The Rotated Array&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;It can be done in O(log n) time complexity , like a binary search , but it uses different method .&lt;br&gt;
It uses "adjusted divide and conquer algorithm"&lt;br&gt;
The DAC👍&lt;/p&gt;

&lt;p&gt;And ssshhhh 🤫 &lt;strong&gt;&lt;em&gt;it will be solved recursively only&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>New Year Resolution Tracker with Weekly Automated Reports</title>
      <author>Alex</author>
      <pubDate>Thu, 13 Jan 2022 17:30:39 +0000</pubDate>
      <link>https://dev.to/alexyct/new-year-resolution-tracker-with-weekly-automated-reports-o27</link>
      <guid>https://dev.to/alexyct/new-year-resolution-tracker-with-weekly-automated-reports-o27</guid>
      <description>&lt;h3&gt;
  &lt;a href="#overview-of-my-submission"&gt;
  &lt;/a&gt;
  Overview of My Submission
&lt;/h3&gt;

&lt;p&gt;For the MongoDB Atlas Hackathon, we created a web app to help you track and achieve your new year resolutions in 2022! Link to the project: &lt;a href="https://nyrtracker.vercel.app/"&gt;https://nyrtracker.vercel.app&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It is difficult staying on top of your new year resolutions. Two key reasons why people, including myself, fail to stay on top of their resolutions include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Forgetting about them over time&lt;/li&gt;
&lt;li&gt;Not knowing how to better achieve&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Therefore, our web app uses MongoDB to address these issues by:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Sending daily reminders for you to log data and track your progress&lt;/li&gt;
&lt;li&gt;Sending automated weekly reports to summarise your progress, provide insights on how you can better achieve your goals, and prompt you to write journals.&lt;/li&gt;
&lt;li&gt;Providing a dashboard to visualise your data/progress, display the insights in your weekly report, and provide a space to add memos about your resolutions.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is an effective way to automate the data collection and analysis process that many of us go through (and forget about over time). Given the time constraints of the hackathon, our web app only supports exercising as a new year resolution.&lt;/p&gt;

&lt;p&gt;Try out the app on &lt;a href="https://nyrtracker.vercel.app/"&gt;https://nyrtracker.vercel.app/&lt;/a&gt; by signing up with your Google account. Alternatively, you can check out screenshots below in this post. Enjoy!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#submission-category"&gt;
  &lt;/a&gt;
  Submission Category:
&lt;/h3&gt;

&lt;p&gt;Automation Innovation: We use MongoDB Atlas Serverless Instances to automate the weekly data aggregation and analysis I perform regarding my new year resolution progress tracking.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#link-to-code"&gt;
  &lt;/a&gt;
  Link to Code
&lt;/h3&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/alexyct"&gt;
        alexyct
      &lt;/a&gt; / &lt;a href="https://github.com/alexyct/new-year-resolution-tracker"&gt;
        new-year-resolution-tracker
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h3&gt;
Overview of My Submission&lt;/h3&gt;
&lt;p&gt;For the MongoDB Atlas Hackathon, we created a web app to help you track and achieve your new year resolutions in 2022! Link to the project: &lt;a href="https://nyrtracker.vercel.app/" rel="nofollow"&gt;https://nyrtracker.vercel.app&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It is difficult staying on top of your new year resolutions. Two key reasons why people, including myself, fail to stay on top of their resolutions include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Forgetting about them over time&lt;/li&gt;
&lt;li&gt;Not knowing how to better achieve&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Therefore, our web app uses MongoDB to address these issues by:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Sending daily reminders for you to log data and track your progress&lt;/li&gt;
&lt;li&gt;Sending automated weekly reports to summarise your progress, provide insights on how you can better achieve your goals, and prompt you to write journals.&lt;/li&gt;
&lt;li&gt;Providing a dashboard to visualise your data/progress, display the insights in your weekly report, and provide a space to add memos about your resolutions.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is an effective way to automate the data…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/alexyct/new-year-resolution-tracker"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#additional-resources-info"&gt;
  &lt;/a&gt;
  Additional Resources / Info
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Some technologies we used:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://nextjs.org/"&gt;Next.js&lt;/a&gt; &amp;amp; &lt;a href="https://reactjs.org/"&gt;React&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://mongodb.com/"&gt;MongoDB&lt;/a&gt; Atlas Serverless Instances&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://axios-http.com/docs/intro"&gt;Axios&lt;/a&gt; for HTTP requests&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://next-auth.js.org/"&gt;Next-auth&lt;/a&gt; for authentication&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://nodemailer.com/"&gt;Nodemailer&lt;/a&gt; &amp;amp; &lt;a href="https://www.easycron.com/"&gt;Easycron&lt;/a&gt; for daily and weekly emails&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://developers.google.com/chart"&gt;Google Charts&lt;/a&gt; for data visualisation&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Some screenshots of the app:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Dashboard&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_cokuvj7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7mry508v4k64ugzk4z2k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_cokuvj7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7mry508v4k64ugzk4z2k.png" alt="Dashboard" width="880" height="738"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Add Data Screen&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--H5w96rR3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/11i5m7dm9fade3cslxnu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H5w96rR3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/11i5m7dm9fade3cslxnu.png" alt="Add Data Screen" width="880" height="738"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Add Memo Screen&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oD3-vqWi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0y5r5mw1hh1q704frcza.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oD3-vqWi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0y5r5mw1hh1q704frcza.png" alt="Add Memo Screen" width="880" height="738"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Weekly Report Email&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fIhzyy2m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n0m7p087a4tix2zlbjt3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fIhzyy2m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n0m7p087a4tix2zlbjt3.png" alt="Weekly Report Email" width="880" height="364"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;On Mobile&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GCgf39pN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jo66n93vgk1exa71pof1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GCgf39pN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jo66n93vgk1exa71pof1.png" alt="Mobile View" width="880" height="482"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For judges of the Hackathon, we recognise that you may not have time to actually try to app and wait a week for the automated reports. So if you sign in to the app, you will see buttons that sends you a demo of the weekly automated report (as well as demo of the daily reminders).&lt;/p&gt;

&lt;p&gt;Hope you like our project!&lt;/p&gt;

</description>
      <category>atlashackathon</category>
    </item>
    <item>
      <title>Complete Django CRUD Web app with MongoDB Atlas</title>
      <author>&gt;&gt;&gt;&gt;su Shubham////?[0]</author>
      <pubDate>Thu, 13 Jan 2022 17:27:42 +0000</pubDate>
      <link>https://dev.to/shubham8268/complete-django-crud-web-app-with-mongodb-atlas-h4g</link>
      <guid>https://dev.to/shubham8268/complete-django-crud-web-app-with-mongodb-atlas-h4g</guid>
      <description>&lt;h3&gt;
  &lt;a href="#overview-of-my-submission"&gt;
  &lt;/a&gt;
  Overview of My Submission
&lt;/h3&gt;

&lt;p&gt;This is a Complete Django CRUD Webapp with MongoDB Atlas. I made this project to take participate in MongoDB Atlas hackathon in dev.to&lt;/p&gt;

&lt;p&gt;I made this using:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Django&lt;/li&gt;
&lt;li&gt;Design Django Form with Bootstrap and crispy forms&lt;/li&gt;
&lt;li&gt;MongoDB Atlas for backend&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The complete backend is made by django and for database I used MongoDB Atlas.&lt;br&gt;
There are many collection but, auth_user, employee_register_employee and employee_postion_employee are the main collection in crud Database of CRUD Cluster.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mrCVQ1Ds--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0nhckdt4s8o7jh4h0mp1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mrCVQ1Ds--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0nhckdt4s8o7jh4h0mp1.png" alt="Cluster_image" width="880" height="429"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To connect django with MongoDB Atlas I used djongo library and pymongo made for python to connect with MongoDB.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--J0pXHpXt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5xw31y2m42meyx7o9n0h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--J0pXHpXt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5xw31y2m42meyx7o9n0h.png" alt="database connection" width="880" height="221"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is how the web app looks like&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;DEMO VIDEO:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6Hjr55-u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/286w7mfmqv05mtmdkv8z.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6Hjr55-u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/286w7mfmqv05mtmdkv8z.gif" alt="demo video" width="680" height="382"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;REGISTER PAGE:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YcznomOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2y5x9lchhudi6mlbst8a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YcznomOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2y5x9lchhudi6mlbst8a.png" alt="register page" width="880" height="417"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;EMPLOYEE LIST PAGE:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZVHkc7RT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l280pr7wt1tr0s8kkd27.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZVHkc7RT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l280pr7wt1tr0s8kkd27.png" alt="Employee list" width="880" height="424"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#how-you-will-see-this-project"&gt;
  &lt;/a&gt;
  How you will see this project
&lt;/h4&gt;
&lt;h5&gt;
  &lt;a href="#step-1"&gt;
  &lt;/a&gt;
  &lt;strong&gt;STEP 1:&lt;/strong&gt;
&lt;/h5&gt;

&lt;p&gt;Fork this repo and clone it using:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git clone https://github.com/shubham8268/Django-CRUD-Operations
cd Django-CRUD-Operations

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;br&gt;&lt;br&gt;
The Django skeleton is look like this:&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--l_eVs9N0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8tttn1xoqpghopcqt3ye.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--l_eVs9N0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8tttn1xoqpghopcqt3ye.png" alt="Django Structure" width="567" height="499"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;h5&gt;
  &lt;a href="#step-2"&gt;
  &lt;/a&gt;
  &lt;strong&gt;STEP 2:&lt;/strong&gt;
&lt;/h5&gt;

&lt;p&gt;Install virtualenv then create a virtual environment test:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pip3 install virtualenv
virtualenv test
source test/bin/activate
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Install all the dependencies using:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pip3 install -r requirements.txt
cd employee_project

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h5&gt;
  &lt;a href="#step-3"&gt;
  &lt;/a&gt;
  &lt;strong&gt;STEP 3:&lt;/strong&gt;
&lt;/h5&gt;

&lt;p&gt;Now you can see the website in your localhost:8000 using:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;python3 manange.py runserver
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#submission-category"&gt;
  &lt;/a&gt;
  Submission Category:
&lt;/h3&gt;

&lt;p&gt;Choose Your Own Adventure: Create an application using MongoDB Atlas that doesn’t fit into any of the categories above.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#link-to-code"&gt;
  &lt;/a&gt;
  Link to Code
&lt;/h3&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/shubham8268"&gt;
        shubham8268
      &lt;/a&gt; / &lt;a href="https://github.com/shubham8268/Django-CRUD-Operations"&gt;
        Django-CRUD-Operations
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Complete Django CRUD Webapp with MongoDB Atlas&lt;/h1&gt;
&lt;p&gt;This is a Complete Django CRUD Webapp with MongoDB Atlas. I made this project to take participate in MongoDB Atlas hackathon in dev.to&lt;/p&gt;
&lt;p&gt;I made this using:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Django&lt;/li&gt;
&lt;li&gt;Design Django Form with Bootstrap and crispy forms&lt;/li&gt;
&lt;li&gt;MongoDB Atlas for backend&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The complete backend is made by django and for database I used MongoDB Atlas
There are many collection but, auth_user, employee_register_employee and employee_postion_employee are the main collection.&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/75021117/149378147-207effff-fc50-4098-93f2-d9e0b3556dbc.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rD-PXEii--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/75021117/149378147-207effff-fc50-4098-93f2-d9e0b3556dbc.png" alt="CLUSTER"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To connect django with MongoDB Atlas I used djongo library and pymongo made for python to connect with MongoDB.&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/shubham8268/Django-CRUD-OperationsCONNECTION.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ey-NDvqm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/shubham8268/Django-CRUD-OperationsCONNECTION.png" alt="database connection"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is how the web app looks like&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;DEMO VIDEO:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/shubham8268/Django-CRUD-OperationsDEMO.gif"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AV4yyBpZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://github.com/shubham8268/Django-CRUD-OperationsDEMO.gif" alt="database connection"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;REGISTER PAGE:&lt;/strong&gt;
&lt;a rel="noopener noreferrer" href="https://github.com/shubham8268/Django-CRUD-OperationsREGISTER%20PAGE.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--M4IHOfeB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/shubham8268/Django-CRUD-OperationsREGISTER%2520PAGE.png" alt="database connection"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;EMPLOYEE LIST PAGE:&lt;/strong&gt;
&lt;a rel="noopener noreferrer" href="https://github.com/shubham8268/Django-CRUD-OperationsEMPLOYEE%20LIST.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t0MPGYj6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/shubham8268/Django-CRUD-OperationsEMPLOYEE%2520LIST.png" alt="database connection"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
How you will see this project&lt;/h2&gt;
&lt;h4&gt;
&lt;strong&gt;STEP 1:&lt;/strong&gt;
&lt;/h4&gt;
&lt;p&gt;Fork this repo and clone it using:&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative overflow-auto"&gt;&lt;pre&gt;&lt;code&gt;git clone https://github.com/shubham8268/Django-CRUD-Operations
cd Django-CRUD-Operations
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;br&gt;
The Django skeleton is look like this
&lt;br&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/shubham8268/Django-CRUD-Operationsstructure.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BKqFu21i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/shubham8268/Django-CRUD-Operationsstructure.png" alt="Django structure"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;h4&gt;
&lt;strong&gt;STEP 2:&lt;/strong&gt;
&lt;/h4&gt;
&lt;p&gt;Install virtualenv then create a virtual environment test:&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative overflow-auto"&gt;
&lt;pre&gt;&lt;code&gt;pip3 install virtualenv
virtualenv test&lt;/code&gt;&lt;/pre&gt;…&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/shubham8268/Django-CRUD-Operations"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#additional-resources-info"&gt;
  &lt;/a&gt;
  Additional Resources / Info
&lt;/h3&gt;

&lt;p&gt;This was my first time using MongDB as the database for a website which was a really great experience of using noSQL specially MongoDB Atlas, I'm also planning to use it in my future projects.&lt;br&gt;
I learned about &lt;a href="https://pymongo.readthedocs.io/en/stable/"&gt;pymongo package&lt;/a&gt; and &lt;a href="https://www.djongomapper.com/"&gt;djongo&lt;/a&gt; availabe for python. I took help from &lt;a href="https://www.mongodb.com/compatibility/mongodb-and-django"&gt;How to Use Django with MongoDB&lt;/a&gt; document.&lt;/p&gt;

</description>
      <category>atlashackathon</category>
    </item>
    <item>
      <title>Roadmap to being a Full Stack Web Developer</title>
      <author>Shashank shekhar</author>
      <pubDate>Thu, 13 Jan 2022 17:22:20 +0000</pubDate>
      <link>https://dev.to/shashank2k19/roadmap-to-being-a-full-stack-web-developer-11m7</link>
      <guid>https://dev.to/shashank2k19/roadmap-to-being-a-full-stack-web-developer-11m7</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;Hey, DEV.to community!&lt;br&gt;
I was thinking of how I started my web dev career and suddenly I remembered how furious I was when I was looking for the right thing to do or even where to start!&lt;/p&gt;

&lt;p&gt;As a tech beginner, knowing what to learn and in what order to learn them is often an issue. There are tons of programming language in the web development community, as well as a plenty of tools to be conversant with. It’s easy to get lost.&lt;br&gt;
This is why I have come up with a web development roadmap for newcomer and aspiring web developers, along with their respective resources.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-web-development-"&gt;
  &lt;/a&gt;
  What is Web Development ?
&lt;/h2&gt;

&lt;p&gt;Web development refers to the building, creating, and maintaining of websites. It includes aspects such as web design, web publishing, web programming, and database management. It is the creation of an application that works over the internet i.e. websites.&lt;/p&gt;

&lt;p&gt;The word Web Development is made up of two words, that is:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Web: It refers to websites, web pages or anything that works over the internet.&lt;/li&gt;
&lt;li&gt;Development: Building the application from scratch.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#frontend-web-development"&gt;
  &lt;/a&gt;
  Front-End Web Development
&lt;/h2&gt;

&lt;p&gt;The front end of a website is the part that users interact directly with. It is also known as the 'client side' of the application. It includes everything that Users experience directly: text colors and styles, images, graphs and tables, buttons, colors, and navigation menu. Front-end development is done using HTML, CSS, and JavaScript. Whenever a website, web application, or mobile app is opened, front end developers implement the structure, design, behavior, and content on the browser screen. Among the main goals of the Front End are responsiveness and performance. There should be no part of the website that behaves abnormally irrespective of the screen size, the developer must ensure that the site is responsive, i.e. that it appears correctly on devices of all sizes.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eS4qBuUr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b9odvy3alcbq0cjwhviv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eS4qBuUr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b9odvy3alcbq0cjwhviv.png" alt="Image description" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#backend-web-development"&gt;
  &lt;/a&gt;
  Back-End Web Development
&lt;/h2&gt;

&lt;p&gt;The backend of a website is server-side. The server stores and organizes data, and ensures there is no problem on the client end of the web page. It is the part of the website that can not be seen or interacted with. It is the part of the software that does not have direct contact with users. Backend designers develop software components and characteristics that end users can access indirectly through a front-end application. Besides creating APIs, establishing libraries, and working with systems without user interfaces, the backend also includes scientific programming systems.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#text-editor-and-ide"&gt;
  &lt;/a&gt;
  Text Editor and IDE
&lt;/h2&gt;

&lt;p&gt;What you need to start is an IDE. IDE stands for Integrated Development Environment. They will help you write your codes faster and debug them easier. But the most popular ones are the ones below:&lt;/p&gt;

&lt;blockquote&gt;
&lt;h4&gt;
  &lt;a href="#vs-code"&gt;
  &lt;/a&gt;
  &lt;a href="https://code.visualstudio.com/"&gt;VS Code&lt;/a&gt;
&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7jxZONMq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gys9cn4y66w4tv98bau9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7jxZONMq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gys9cn4y66w4tv98bau9.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Visual Studio Code is a source-code editor made by Microsoft for Windows, Linux and macOS. Features include support for debugging, syntax highlighting, intelligent code completion, snippets, code refactoring, and embedded Git. Users can change the theme, keyboard shortcuts, preferences, and install extensions that add additional functionality.&lt;/p&gt;

&lt;blockquote&gt;
&lt;h4&gt;
  &lt;a href="#sublime-text-3"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.sublimetext.com/"&gt;Sublime Text 3&lt;/a&gt;
&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HNBX9ApD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sz5x5aw384x00d2k9rkx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HNBX9ApD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sz5x5aw384x00d2k9rkx.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Sublime Text is a commercial source code editor. It natively supports many programming languages and markup languages. Users can expand its functionality with plugins, typically community-built and maintained under free-software licenses. &lt;/p&gt;

&lt;blockquote&gt;
&lt;h4&gt;
  &lt;a href="#atom"&gt;
  &lt;/a&gt;
  &lt;a href="https://atom.io/"&gt;Atom&lt;/a&gt;
&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZRqK5amI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uu4xjbzhl1wib3t5ukln.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZRqK5amI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uu4xjbzhl1wib3t5ukln.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Atom is a free and open-source text and source code editor for macOS, Linux, and Microsoft Windows with support for plug-ins written in JavaScript, and embedded Git Control. Developed by GitHub,&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;First things first, I will suggest you try your hands on the most demanded or popular programming languages in the industry (this is quite relative) and go with the one you feel most comfortable with and in respect to how great you are at learning it.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#html"&gt;
  &lt;/a&gt;
  HTML
&lt;/h2&gt;

&lt;p&gt;HTML stands for HyperText Markup Language. It is used to design web pages using a markup language. It is the combination of Hypertext and Markup language. Hypertext defines the link between the web pages. A markup language is used to define the text document within tag which defines the structure of web pages. It is a markup language that is used by the browser to manipulate text, images, and other content to display in the required format.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Resources&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.w3schools.com/html/"&gt;https://www.w3schools.com/html/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.geeksforgeeks.org/html-tutorials/"&gt;https://www.geeksforgeeks.org/html-tutorials/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#css"&gt;
  &lt;/a&gt;
  CSS
&lt;/h2&gt;

&lt;p&gt;CSS (Cascading Style Sheets) is a stylesheet language used to design the webpage to make it attractive. It is used to describe the look and formatting of a document written in a markup language. It provides an additional feature to HTML. It is generally used with HTML to change the style of web pages and user interfaces. It can also be used with any kind of XML documents including plain XML, SVG, and XUL.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Resources&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.w3schools.com/css/"&gt;https://www.w3schools.com/css/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.geeksforgeeks.org/css-tutorials/"&gt;https://www.geeksforgeeks.org/css-tutorials/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;CSS Frameworks&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;A CSS framework comprises several CSS stylesheets ready for use by web developers and designers. The stylesheets are prepped for use for standard web design functions: setting colors, layout, fonts, navbars, etc. &lt;br&gt;
With a CSS framework, the user has a completed CSS stylesheet, and they only have to code the HTML with accurate classes, structure, and IDs to set up a web page. The framework already has classes built-in for common website elements – footer, slider, navigation bar, hamburger menu, column-based layouts, etc.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://getbootstrap.com/docs/5.0/getting-started/introduction/"&gt;Bootstrap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bulma.io/"&gt;Bulma&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://materializecss.com/"&gt;Materialize CSS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#sass"&gt;
  &lt;/a&gt;
  SASS
&lt;/h2&gt;

&lt;p&gt;Sass is the short form of Syntactically Awesome Style Sheet. It is an upgrade to Cascading Style Sheets (CSS). Sass is a CSS pre-processor. It is fully compatible with every version of CSS. Sass reduces the repetition of CSS and therefore saves time. Due to its advanced features it is often termed as Sassy CSS. SCSS have file extension of &lt;code&gt;.scss&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Resources&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.w3schools.com/sass/default.php"&gt;https://www.w3schools.com/sass/default.php&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.geeksforgeeks.org/sass-introduction/"&gt;https://www.geeksforgeeks.org/sass-introduction/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#javascript"&gt;
  &lt;/a&gt;
  JavaScript
&lt;/h2&gt;

&lt;p&gt;JavaScript is the world most popular lightweight, interpreted compiled programming language. It is also known as scripting language for web pages. It is well-known for the development of web pages, many non-browser environments also use it. JavaScript can be used for Client-side developments as well as Server-side developments.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Resources&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.w3schools.com/js/"&gt;https://www.w3schools.com/js/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.geeksforgeeks.org/javascript-tutorial/"&gt;https://www.geeksforgeeks.org/javascript-tutorial/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#reactjs"&gt;
  &lt;/a&gt;
  ReactJS
&lt;/h2&gt;

&lt;p&gt;React is a declarative, efficient, and flexible JavaScript library for building user interfaces. ReactJS is an open-source, component-based front-end library responsible only for the view layer of the application.&lt;br&gt;
React uses a declarative paradigm that makes it easier to reason about your application and aims to be both efficient and flexible. It designs simple views for each state in your application, and React will efficiently update and render just the right component when your data changes. The declarative view makes your code more predictable and easier to debug.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Resources&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.w3schools.com/REACT/DEFAULT.ASP"&gt;https://www.w3schools.com/REACT/DEFAULT.ASP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.geeksforgeeks.org/react-js-introduction-working/"&gt;https://www.geeksforgeeks.org/react-js-introduction-working/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#nodejs"&gt;
  &lt;/a&gt;
  Nodejs
&lt;/h2&gt;

&lt;p&gt;Node.js is a run time platform to run server-side apps in JavaScript. It adopted the V8 browser engine to interpret JavaScript code on the server. It comes with its own set of built-in modules in its standard library for running server-side apps and allows for interaction with hardware directly.&lt;/p&gt;

&lt;p&gt;It can let us manipulate files and do many things on a computer. It’s different from JavaScript in the browser since it does completely different things. One of the things Node.js can do is run a webserver to serve static and dynamic content.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Resources&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.w3schools.com/nodejs/"&gt;https://www.w3schools.com/nodejs/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.geeksforgeeks.org/introduction-to-node-js/"&gt;https://www.geeksforgeeks.org/introduction-to-node-js/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#mongodb"&gt;
  &lt;/a&gt;
  MongoDB
&lt;/h2&gt;

&lt;p&gt;MongoDB, the most popular NoSQL database, is an open-source document-oriented database. The term ‘NoSQL’ means ‘non-relational’. It means that MongoDB isn’t based on the table-like relational database structure but provides an altogether different mechanism for storage and retrieval of data. This format of storage is called BSON ( similar to JSON format). &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Resources&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.w3schools.com/nodejs/nodejs_mongodb.asp"&gt;https://www.w3schools.com/nodejs/nodejs_mongodb.asp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.geeksforgeeks.org/mongodb-an-introduction/"&gt;https://www.geeksforgeeks.org/mongodb-an-introduction/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#git"&gt;
  &lt;/a&gt;
  Git
&lt;/h2&gt;

&lt;p&gt;A super cool tool you need to learn is &lt;a href="https://git-scm.com/"&gt;Git&lt;/a&gt;. Git is a version controlling software which will help you store different versions of your code and never lose your back-up. There are free git hosts like &lt;a href="https://github.com/"&gt;GitHub&lt;/a&gt; and &lt;a href="https://bitbucket.org/product"&gt;BitBucket&lt;/a&gt; which you can use to store your codes online.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GG2PPxUf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/89ecff7rfptvmdf07e10.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GG2PPxUf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/89ecff7rfptvmdf07e10.jpg" alt="Image description" width="880" height="351"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  Wrapping Up
&lt;/h2&gt;

&lt;p&gt;Thanks for reading this article so far. You might be thinking that there is so much stuff to learn, so many courses to join, but you don't need to worry.&lt;br&gt;
There is a good chance that you may already know most of the stuff, and there are also a lot of useful free resources which you can use, I have also linked them here and there along with best resources, which are certainly not free, but worth of money.&lt;/p&gt;

&lt;p&gt;At the end of the day, you should have enough knowledge and experience about the things mentioned here.&lt;br&gt;
Good luck with your Web Development journey! It's certainly not going to be easy, but by following this roadmap and guide, you are one step closer to becoming the Web Developer, you always wanted to be.&lt;/p&gt;

&lt;p&gt;Also, you can leave you suggestions in the comment section and give a reaction if you enjoyed reading it 💖&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Feel free to connect with me on &lt;a href="https://www.linkedin.com/in/shashank-shekhar-523306156/"&gt;LinkedIn&lt;/a&gt; | &lt;a href="https://twitter.com/this_is_Shashnk"&gt;Twitter&lt;/a&gt; | &lt;a href="https://www.instagram.com/shashank._.shekhar_/"&gt;Instagram&lt;/a&gt;&lt;br&gt;
Also checkout my &lt;a href="https://mrshekhar.live/"&gt;Portfolio Website&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>javascript</category>
      <category>career</category>
    </item>
    <item>
      <title>How to show recent GitHub activities on your profile readme</title>
      <author>Sachin Chaurasiya</author>
      <pubDate>Thu, 13 Jan 2022 17:17:50 +0000</pubDate>
      <link>https://dev.to/sachinchaurasiya/how-to-show-recent-github-activities-on-your-profile-readme-23he</link>
      <guid>https://dev.to/sachinchaurasiya/how-to-show-recent-github-activities-on-your-profile-readme-23he</guid>
      <description>&lt;p&gt;We all know Github is a great platform to collaborate with people and contribute to open source projects.   daily, we do perform some activities on GitHub like creating an issue, creating a pull request, code review and all other things.&lt;/p&gt;

&lt;p&gt;These are the activities that get added to our contributions and we get a green square for each day with our contributions counts.&lt;/p&gt;

&lt;p&gt;For Example, contribution count graph like this,&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0k6sUCqP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642088656573/WeTNEMO3f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0k6sUCqP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642088656573/WeTNEMO3f.png" alt="image.png" width="880" height="195"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When we click on any box we will get activities of that day something like this.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VXLud94x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642088945299/-GcVzoR6N.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VXLud94x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642088945299/-GcVzoR6N.png" alt="image.png" width="880" height="676"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here you can see my activities of date &lt;code&gt;10th October 2021&lt;/code&gt;, I created some commits and opened some issues.&lt;/p&gt;

&lt;p&gt;Have you ever thought of showing your GitHub activities on your Profile Readme?&lt;/p&gt;

&lt;p&gt;You will be thinking like is that even possible? yes, it is possible and today in this article, we will be discussing how to show our recent GitHub activities on our profile readme.&lt;/p&gt;

&lt;p&gt;Let's get started.&lt;/p&gt;

&lt;p&gt;We will be going to use Github Actions that will help us to create a workflow to show our recent activities on Profile readme.&lt;/p&gt;

&lt;p&gt;before jumping into the setup let's first discuss what are GitHub actions and what they are used for.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-github-actions"&gt;
  &lt;/a&gt;
  What are GitHub actions?
&lt;/h2&gt;

&lt;p&gt;GitHub actions are a set of events and workflow, whenever specified events happen to your GitHub repository it will run the associated workflow for it.&lt;/p&gt;

&lt;p&gt;want to learn more about Github actions, you can get started from &lt;a href="https://docs.github.com/en/actions/learn-github-actions/understanding-github-actions"&gt;here&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/cP0I9w2coGU"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#github-activity-readme"&gt;
  &lt;/a&gt;
  GitHub - Activity - Readme
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;GitHub - Activity - Readme&lt;/strong&gt; is a Github action that will update your profile readme with recent GitHub activity.&lt;/p&gt;

&lt;p&gt;It is created by &lt;strong&gt;James George&lt;/strong&gt; you can check his profile &lt;a href="https://github.com/jamesgeorge007"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;to work with this action we will need to set up a workflow that will be running automatically to update the profile readme with recent activities.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#setting-up-workflow"&gt;
  &lt;/a&gt;
  Setting up workflow
&lt;/h3&gt;

&lt;p&gt;we can easily set up this workflow in our profile repository to capture and update profile readme with recent activities.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#create-the-raw-github-endraw-folder-in-your-profile-repository-if-it-does-not-exist"&gt;
  &lt;/a&gt;
  Create the &lt;code&gt;.github&lt;/code&gt; folder in your profile repository if it does not exist.
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;gt; mkdir .github
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#create-the-raw-workflows-endraw-folder-inside-the-raw-github-endraw-folder-if-it-does-not-exist"&gt;
  &lt;/a&gt;
  Create the &lt;code&gt;workflows&lt;/code&gt; folder inside the &lt;code&gt;.github&lt;/code&gt;folder if it does not exist.
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;gt;mkdir .github/workflows
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#create-the-raw-workflownameyml-endraw-file-inside-raw-workflows-endraw-folder"&gt;
  &lt;/a&gt;
  Create the &lt;code&gt;{workflowname}.yml&lt;/code&gt; file inside &lt;code&gt;workflows&lt;/code&gt; folder.
&lt;/h4&gt;

&lt;p&gt;where you can replace  &lt;strong&gt;workflow name&lt;/strong&gt; with your workflow name. I will give the name &lt;code&gt;update-readme.yml&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;gt; update-readme.yml
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;after creating a workflow file add this content to it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Update README&lt;/span&gt;

&lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;schedule&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;cron&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;*/5&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;*&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;*&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;*&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;*"&lt;/span&gt; &lt;span class="c1"&gt;# Runs every 5 minutes.&lt;/span&gt;

&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;build&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Update this repo's README with recent activity&lt;/span&gt;

    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/checkout@v2&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;jamesgeorge007/github-activity-readme@master&lt;/span&gt;
        &lt;span class="na"&gt;env&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;GITHUB_TOKEN&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.GITHUB_TOKEN }}&lt;/span&gt;
        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;COMMIT_MSG&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;Updated&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;README&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;with&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;recent&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;activity"&lt;/span&gt;
          &lt;span class="na"&gt;MAX_LINES&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#here-we-have-three-main-components-of-the-workflow"&gt;
  &lt;/a&gt;
  Here we have three main components of the workflow
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;name&lt;/li&gt;
&lt;li&gt;on&lt;/li&gt;
&lt;li&gt;jobs&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Let's discuss them one by one&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;name&lt;/strong&gt; is the name of the workflow after workflow run If you see the actions tab in your repository you will get workflow runs like this.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RXRkDeiQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642090901545/UQ3bn-6LK.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RXRkDeiQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642090901545/UQ3bn-6LK.png" alt="image.png" width="880" height="90"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;on&lt;/strong&gt; is used for defining what action you want to run this workflow.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;here we are running this workflow on &lt;code&gt;schedule&lt;/code&gt; using a cron job to run this workflow every 5 minutes automatically.&lt;/p&gt;

&lt;p&gt;If you don't know much about cron syntax this may be helpful for you&lt;br&gt;
&lt;a href="https://crontab.guru"&gt;The quick and simple editor for cron schedule expressions&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;jobs&lt;/strong&gt; is used for defining what to do when an event happens on our repository.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;here we are defining only one job that is &lt;strong&gt;build&lt;/strong&gt; which will commit on our repository with the message &lt;strong&gt;Update this repo's README with recent activity&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;for jobs, we will need to define what environment it will be running and we are running this job on &lt;code&gt;ubuntu&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;also, we will need to define what steps to use, something like this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;      - uses: actions/checkout@v2
      - uses: jamesgeorge007/github-activity-readme@master
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;env&lt;/code&gt; is used for automatic token authentication.&lt;br&gt;
you don't need to worry about &lt;code&gt;secrets.GITHUB_TOKEN&lt;/code&gt; will automatically get referred from your GitHub account.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;env:
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;if you notice we are using the &lt;code&gt;with&lt;/code&gt; attribute for 2nd action that is &lt;code&gt;jamesgeorge007/github-activity-readme@master&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;here we are providing 2 options &lt;code&gt;COMMIT_MSG&lt;/code&gt; and &lt;code&gt;MAX_LINES&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;COMMIT_MSG - Commit message used while committing to the repository.&lt;/li&gt;
&lt;li&gt;MAX_LINES - The most number of lines should populate in your readme file&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now, I hope we are clear with all the components of a workflow.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#the-last-step-is-to-add-this-content-to-your-profile-raw-readmemd-endraw-file"&gt;
  &lt;/a&gt;
  The Last step is to add this content to your profile &lt;code&gt;README.md&lt;/code&gt; file.
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# Recent Activity :zap:
&amp;lt;!--START_SECTION:activity--&amp;gt;
&amp;lt;!--END_SECTION:activity--&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Think of it like a block that will get replaced by your recent activities.&lt;/p&gt;

&lt;p&gt;For Example :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# Recent Activity :zap:

&amp;lt;!--START_SECTION:activity--&amp;gt;
1. 🎉 Merged PR [#2197](https://github.com/open-metadata/OpenMetadata/pull/2197) in [open-metadata/OpenMetadata](https://github.com/open-metadata/OpenMetadata)
2. ❗️ Closed issue [#2040](https://github.com/open-metadata/OpenMetadata/issues/2040) in [open-metadata/OpenMetadata](https://github.com/open-metadata/OpenMetadata)
3. ❗️ Closed issue [#2028](https://github.com/open-metadata/OpenMetadata/issues/2028) in [open-metadata/OpenMetadata](https://github.com/open-metadata/OpenMetadata)
4. ❗️ Closed issue [#2156](https://github.com/open-metadata/OpenMetadata/issues/2156) in [open-metadata/OpenMetadata](https://github.com/open-metadata/OpenMetadata)
5. 🗣 Commented on [#2156](https://github.com/open-metadata/OpenMetadata/issues/2156) in [open-metadata/OpenMetadata](https://github.com/open-metadata/OpenMetadata)
6. 🎉 Merged PR [#2154](https://github.com/open-metadata/OpenMetadata/pull/2154) in [open-metadata/OpenMetadata](https://github.com/open-metadata/OpenMetadata)
7. ❗️ Closed issue [#2087](https://github.com/open-metadata/OpenMetadata/issues/2087) in [open-metadata/OpenMetadata](https://github.com/open-metadata/OpenMetadata)
8. ❗️ Opened issue [#2156](https://github.com/open-metadata/OpenMetadata/issues/2156) in [open-metadata/OpenMetadata](https://github.com/open-metadata/OpenMetadata)
9. ❗️ Opened issue [#2147](https://github.com/open-metadata/OpenMetadata/issues/2147) in [open-metadata/OpenMetadata](https://github.com/open-metadata/OpenMetadata)
10. ❗️ Closed issue [#1876](https://github.com/open-metadata/OpenMetadata/issues/1876) in [open-metadata/OpenMetadata](https://github.com/open-metadata/OpenMetadata)
&amp;lt;!--END_SECTION:activity--&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Example of my profile readme with recent activities&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--W6R9YFdl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642092043619/6FPB6gSY4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--W6R9YFdl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1642092043619/6FPB6gSY4.png" alt="image.png" width="880" height="372"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;we discussed what are github actions and why they are used for.&lt;/li&gt;
&lt;li&gt;we did set up the workflow to update our profile readme with recent activities.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#links"&gt;
  &lt;/a&gt;
  Links
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/marketplace/actions/github-activity-readme"&gt;GitHub - Activity - Readme&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Sachin-chaurasiya"&gt;Sachin Chaurasiya Github Profile&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And that’s it for this topic. Thank you for reading.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#connect-with-me"&gt;
  &lt;/a&gt;
  Connect with me
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.linkedin.com/in/sachin-chaurasiya"&gt;LinkedIn&lt;/a&gt; | &lt;a href="https://twitter.com/sachindotcom"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/sachin87"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y61HrVIM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/v2/default-blue.png" alt="Buy Me A Coffee" width="545" height="153"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>github</category>
      <category>git</category>
      <category>webdev</category>
      <category>opensource</category>
    </item>
    <item>
      <title>PHP Traits Explained</title>
      <author>Eelco Verbrugge</author>
      <pubDate>Thu, 13 Jan 2022 17:11:54 +0000</pubDate>
      <link>https://dev.to/eelcoverbrugge/php-traits-explained-197e</link>
      <guid>https://dev.to/eelcoverbrugge/php-traits-explained-197e</guid>
      <description>&lt;p&gt;In line of my previous blogs &lt;a href="https://dev.to/eelcoverbrugge/php-interfaces-explained-35g"&gt;PHP Interfaces Explained&lt;/a&gt; and &lt;a href="https://dev.to/eelcoverbrugge/php-abstract-classes-10eh"&gt;PHP Abstract Classes Explained&lt;/a&gt;, I'll explain PHP Traits today.&lt;/p&gt;

&lt;p&gt;In PHP a child class can inherit only from one single parent. This allows a class to reuse methods from vertically hierarchy by extending an &lt;a href="https://dev.to/eelcoverbrugge/php-abstract-classes-10eh"&gt;Abstract class&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you like to reuse methods in many different classes in horizontally hierarchy, we use Traits. Traits are used to group methods and implement in  multiple classes. Traits can't be initiated on it's own like a normal class could.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#for-example"&gt;
  &lt;/a&gt;
  For example
&lt;/h2&gt;

&lt;p&gt;Let's say we would like to check if a user has access in many classes:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;trait Access
{
    public function hasAccess(string $username): bool
    {
        //..Check if $username has access
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Everyone who can access Files, is allowed to download them. To use this Trait into our class:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;class File
{
    use Access;

    public function download(string $username): Response
    {
        if ($this-&amp;gt;hasAccess($username)) {
            //..Download file x
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Wherever you implement your Trait with &lt;strong&gt;use Access;&lt;/strong&gt; you are able to refer to &lt;code&gt;$this-&amp;gt;yourMethod()&lt;/code&gt; as of it would be one of this class. Which in this case is only &lt;code&gt;hasAccess()&lt;/code&gt;. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#multiple-inheritance"&gt;
  &lt;/a&gt;
  Multiple inheritance
&lt;/h2&gt;

&lt;p&gt;What if you need multiple inheritance to reuse various methods in many different classes in horizontally hierarchy?&lt;/p&gt;

&lt;p&gt;This is easily done, let's create an other one:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;trait Ability
{
    public function canUpload(string $username): bool
    {
        //..Check if $username can upload
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We want to check if our $username can access files and is allowed to upload as well:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;class File
{
    use Access, Ability;

    public function upload(string $username): Response
    {
        if ($this-&amp;gt;hasAccess($username) &amp;amp;&amp;amp; $this-&amp;gt;canUpload($username)) {
            //..Upload file
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Tadaa! As you can see, Trait's are easily implemented and freely used everywhere you want in your project.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bad-practice"&gt;
  &lt;/a&gt;
  Bad practice
&lt;/h2&gt;

&lt;p&gt;If ever used duplicated methods by implementing multiple Traits, an error will arise. Let's say both Traits have the method &lt;code&gt;canDownload()&lt;/code&gt; implemented, PHP wouldn't know which one to use. This is solved by the keyword &lt;code&gt;insteadof&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;class File
{
    use Access, Ability{
        Access::canDownload insteadof Ability;
    }

    public function upload(string $username): Response
    {
        if ($this-&amp;gt;hasAccess($username) &amp;amp;&amp;amp; $this-&amp;gt;canUpload($username)) {
            //..Upload file
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let me know your experience with Traits and best practices.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Recreating the Solana Explorer</title>
      <author>Corey</author>
      <pubDate>Thu, 13 Jan 2022 17:10:20 +0000</pubDate>
      <link>https://dev.to/coreystevens/recreating-the-solana-explorer-1eo4</link>
      <guid>https://dev.to/coreystevens/recreating-the-solana-explorer-1eo4</guid>
      <description>&lt;p&gt;As a beginner building in the Solana Ecosystem, I've been searching for hands on projects to get involved with. Really I have been just cloning and building off the shoulder of giants, so that's what this is...&lt;/p&gt;

&lt;p&gt;Still, not as easy as just plug and play, so it really is a big of a process to get it deployed. &lt;/p&gt;

&lt;p&gt;Check out the Solana Explorer with not much of a twist, but again it's still fucking deployed. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SolExplr&lt;/strong&gt; &lt;a href="https://solexplr.vercel.app/"&gt;https://solexplr.vercel.app/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Give me a follow on my socials:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Twitter &lt;a href="https://twitter.com/OfficialCoreyS"&gt;https://twitter.com/OfficialCoreyS&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Github &lt;a href="https://t.co/jQfcnf5dFi"&gt;https://t.co/jQfcnf5dFi&lt;/a&gt;&lt;/p&gt;

</description>
      <category>solana</category>
      <category>rust</category>
      <category>react</category>
      <category>devops</category>
    </item>
    <item>
      <title>Bug Tracker, Project Management tool - The Racoon Tracker</title>
      <author>Fabian Ferno</author>
      <pubDate>Thu, 13 Jan 2022 16:42:06 +0000</pubDate>
      <link>https://dev.to/fabianferno/bug-tracker-project-management-tool-the-racoon-tracker-1b17</link>
      <guid>https://dev.to/fabianferno/bug-tracker-project-management-tool-the-racoon-tracker-1b17</guid>
      <description>&lt;h3&gt;
  &lt;a href="#overview-of-our-submission"&gt;
  &lt;/a&gt;
  Overview of Our Submission
&lt;/h3&gt;

&lt;p&gt;The "&lt;strong&gt;Racoon Tracker&lt;/strong&gt;" is an issue/project tracker that helps ease software delivery by making the whole process of tracking and keeping up with bug fixes seamless and easy.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Submit, Track &amp;amp; Resolve bugs in a snap!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://tracker.racoon.dev"&gt;https://tracker.racoon.dev&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#submission-category"&gt;
  &lt;/a&gt;
  Submission Category
&lt;/h3&gt;

&lt;p&gt;Choose Our Own Adventure&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#links-to-code"&gt;
  &lt;/a&gt;
  Links to Code
&lt;/h3&gt;

&lt;p&gt;Front End React App: &lt;br&gt;
&lt;a href="https://github.com/the-racoon-devs/racoon-tracker-fe-v1"&gt;https://github.com/the-racoon-devs/racoon-tracker-fe-v1&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Back End Rest API: &lt;br&gt;
&lt;a href="https://github.com/the-racoon-devs/racoon-tracker-api-v1"&gt;https://github.com/the-racoon-devs/racoon-tracker-api-v1&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Published API Documentation:&lt;br&gt;
&lt;a href="https://documenter.getpostman.com/view/18928487/UVXeteBv"&gt;https://documenter.getpostman.com/view/18928487/UVXeteBv&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#our-tech-stack"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Our Tech Stack&lt;/strong&gt;
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#design-system"&gt;
  &lt;/a&gt;
  Design System
&lt;/h4&gt;

&lt;p&gt;Our design system is entirely built on Tailwind's beautiful CSS framework and UI kit.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jGHQm6DL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/0ZAcwQj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jGHQm6DL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/0ZAcwQj.png" alt="" width="880" height="344"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#frontend"&gt;
  &lt;/a&gt;
  Front-End
&lt;/h4&gt;

&lt;p&gt;Our front-end is built on a custom CRA boilerplate with React.js and TypeScript.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iIBnQPGZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/6khAPym.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iIBnQPGZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/6khAPym.png" alt="" width="880" height="262"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#backend"&gt;
  &lt;/a&gt;
  Back-End
&lt;/h4&gt;

&lt;p&gt;Our back-end is built on Express.js with the ability to scale quickly and add more functionality in the form of microservices.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VoAecbsy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/7TcM6u3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VoAecbsy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/7TcM6u3.png" alt="" width="880" height="458"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#database"&gt;
  &lt;/a&gt;
  Database
&lt;/h4&gt;

&lt;p&gt;MongoDB Atlas provides cloud database service using AWS, Azure, and Google Cloud. It also has various automation tools for performing various backend functionalities and comes with visualization tools. The services that are used in this project are described below.&lt;/p&gt;

&lt;p&gt;Atlas is used as the main cloud database for storing the user information and project information along with it's tickets.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EaLpS62l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/ppT8DJc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EaLpS62l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/ppT8DJc.png" alt="" width="880" height="341"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#deployments"&gt;
  &lt;/a&gt;
  Deployments
&lt;/h4&gt;

&lt;p&gt;Our React Front End is deployed over Netlify's Jamstack App Deployment platform.&lt;/p&gt;

&lt;p&gt;Our Express Back End is deployed over Railway.app cloud serverless platform.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#screenshots"&gt;
  &lt;/a&gt;
  Screenshots:
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j8dPRQ7s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/SEi6s8J.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j8dPRQ7s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/SEi6s8J.png" alt="" width="880" height="276"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JMbfUSp1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/BbXKvmT.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JMbfUSp1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/BbXKvmT.png" alt="" width="880" height="431"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8aNP30Mm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/FpwhNGz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8aNP30Mm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/FpwhNGz.png" alt="" width="880" height="224"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dQHet9V5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/QPBM3If.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dQHet9V5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/QPBM3If.png" alt="" width="880" height="706"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7hhVMjD0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/Q93xXdv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7hhVMjD0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/Q93xXdv.png" alt="" width="880" height="450"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qXeGZzMc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/XtURRdW.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qXeGZzMc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/XtURRdW.png" alt="" width="880" height="261"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#collaborators"&gt;
  &lt;/a&gt;
  Collaborators
&lt;/h3&gt;

&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/fabianferno"&gt;@fabianferno&lt;/a&gt;, &lt;a href="https://twitter.com/fabianferno"&gt;Twitter&lt;/a&gt;&lt;br&gt;
&lt;a class="mentioned-user" href="https://dev.to/thedanielmark"&gt;@thedanielmark&lt;/a&gt;, &lt;a href="https://twitter.com/the_danielmark"&gt;Twitter&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#additional-resources-info"&gt;
  &lt;/a&gt;
  Additional Resources / Info
&lt;/h3&gt;

&lt;p&gt;React CRA Boilerplate: &lt;a href="https://github.com/react-boilerplate/react-boilerplate-cra-template"&gt;https://github.com/react-boilerplate/react-boilerplate-cra-template&lt;/a&gt;&lt;/p&gt;

</description>
      <category>atlashackathon</category>
      <category>mongodb</category>
      <category>javascript</category>
    </item>
    <item>
      <title>How do you review CSS?</title>
      <author>William Iommi</author>
      <pubDate>Thu, 13 Jan 2022 16:32:12 +0000</pubDate>
      <link>https://dev.to/wiommi/how-do-you-review-css-20fi</link>
      <guid>https://dev.to/wiommi/how-do-you-review-css-20fi</guid>
      <description>&lt;p&gt;What is your workflow when you have to do a tech review and there are a bunch of CSS-like files?&lt;br&gt;
Do you follow some guidelines? Do you build the feature branch somewhere? Or you just close your eyes 🙈, click on the 'Viewed' checkbox and let the QA guys do the rest? 😬&lt;/p&gt;

&lt;p&gt;👇👇👇&lt;/p&gt;

</description>
      <category>css</category>
      <category>productivity</category>
      <category>programming</category>
      <category>discuss</category>
    </item>
  </channel>
</rss>
