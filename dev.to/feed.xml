<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Best Blogging Sites in 2021</title>
      <author>Ashish Yadav</author>
      <pubDate>Thu, 13 May 2021 06:43:03 +0000</pubDate>
      <link>https://dev.to/expoashish/best-blogging-sites-in-2021-5cep</link>
      <guid>https://dev.to/expoashish/best-blogging-sites-in-2021-5cep</guid>
      <description>&lt;p&gt;Are you planning to start writing blogs but not sure which blogging site to use? Here i have listed best blogging sites you can use to start your own blog today:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table Of Contents:
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#1-wordpressorg"&gt;
  &lt;/a&gt;
  &lt;a href="https://expoashish.blogspot.com/2021/05/best-blogging-sites-in-2021.html"&gt;1. WordPress.org&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#2-mediumcom"&gt;
  &lt;/a&gt;
  &lt;a href="https://expoashish.blogspot.com/2021/05/best-blogging-sites-in-2021.html"&gt;2. Medium.com&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#3-bloggercom"&gt;
  &lt;/a&gt;
  &lt;a href="https://expoashish.blogspot.com/2021/05/best-blogging-sites-in-2021.html"&gt;3. Blogger.com&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#4-wordpresscom"&gt;
  &lt;/a&gt;
  &lt;a href="https://expoashish.blogspot.com/2021/05/best-blogging-sites-in-2021.html"&gt;4. WordPress.com&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#5-wixcom"&gt;
  &lt;/a&gt;
  &lt;a href="https://expoashish.blogspot.com/2021/05/best-blogging-sites-in-2021.html"&gt;5. Wix.com&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#6-weeblycom"&gt;
  &lt;/a&gt;
  &lt;a href="https://expoashish.blogspot.com/2021/05/best-blogging-sites-in-2021.html"&gt;6. Weebly.com&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#7-tumblrcom"&gt;
  &lt;/a&gt;
  &lt;a href="https://expoashish.blogspot.com/2021/05/best-blogging-sites-in-2021.html"&gt;7. Tumblr.com&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#8-ghostorg"&gt;
  &lt;/a&gt;
  &lt;a href="https://expoashish.blogspot.com/2021/05/best-blogging-sites-in-2021.html"&gt;8. Ghost.org&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#9-squarespacecom"&gt;
  &lt;/a&gt;
  &lt;a href="https://expoashish.blogspot.com/2021/05/best-blogging-sites-in-2021.html"&gt;9. Squarespace.com&lt;/a&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#10-devto"&gt;
  &lt;/a&gt;
  &lt;a href="https://expoashish.blogspot.com/2021/05/best-blogging-sites-in-2021.html"&gt;10. Dev.to&lt;/a&gt;
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#and-subscribe-to-our-youtube-channel-bestcodecreator"&gt;
  &lt;/a&gt;
  🎥💡🔥AND Subscribe to Our YouTube Channel &lt;a href="https://www.youtube.com/bestcodecreator"&gt;bestcodecreator&lt;/a&gt;
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#and-support-our-blogging-site-myblogs"&gt;
  &lt;/a&gt;
  🎥💡🔥AND Support Our Blogging site &lt;a href="https://expoashish.blogspot.com/2021/05/best-blogging-sites-in-2021.html"&gt;myblogs&lt;/a&gt;
&lt;/h4&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion:
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Thank you for reading this blog🔥🔥.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>computerscience</category>
      <category>techtalks</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>How many applications did it take for you to find your first dev job?</title>
      <author>Madza</author>
      <pubDate>Thu, 13 May 2021 06:36:16 +0000</pubDate>
      <link>https://dev.to/madza/how-many-applications-did-it-take-for-you-to-find-your-first-dev-job-3gak</link>
      <guid>https://dev.to/madza/how-many-applications-did-it-take-for-you-to-find-your-first-dev-job-3gak</guid>
      <description>&lt;p&gt;I've heard of hundreds of applications with no success, as well as cases with no applications at all thanks to internships or contacts in the field.&lt;/p&gt;

&lt;p&gt;Thought this could be motivational for beginners, so could you recall how many applications did it take for you to find your first developer job?&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>career</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Do you use Docker?</title>
      <author>Madza</author>
      <pubDate>Thu, 13 May 2021 06:20:55 +0000</pubDate>
      <link>https://dev.to/madza/do-you-use-docker-2cb3</link>
      <guid>https://dev.to/madza/do-you-use-docker-2cb3</guid>
      <description>&lt;p&gt;Docker is a platform for building apps based on containers — small and lightweight execution environments that make shared use of the operating system kernel but otherwise run in isolation from one another.&lt;/p&gt;

&lt;p&gt;Do you use Docker in your projects?&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>docker</category>
      <category>productivity</category>
    </item>
    <item>
      <title>CoreUI - Open-Source Products</title>
      <author>Sm0ke</author>
      <pubDate>Thu, 13 May 2021 05:15:54 +0000</pubDate>
      <link>https://dev.to/sm0ke/coreui-open-source-products-31p1</link>
      <guid>https://dev.to/sm0ke/coreui-open-source-products-31p1</guid>
      <description>&lt;p&gt;Hello Coders, &lt;/p&gt;

&lt;p&gt;This article presents all free projects crafted by the &lt;a href="https://www.admin-dashboards.com/coreui-open-source-products/"&gt;CoreUI&lt;/a&gt; agency and released under permissive licenses in the open-source ecosystem. Products can be downloaded directly from Github without a registration lock and used for hobby and commercial products.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Thanks for reading!&lt;/em&gt; - Content provided by &lt;strong&gt;&lt;a href="https://appseed.us/"&gt;App Generator&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;




&lt;ul&gt;
&lt;li&gt;(Free) &lt;a href="https://coreui.io/bootstrap"&gt;CoreUI - Bootstrap&lt;/a&gt; version&lt;/li&gt;
&lt;li&gt;(Free) &lt;a href="https://appseed.us/admin-dashboards/flask-dashboard-coreui"&gt;CoreUI - Flask&lt;/a&gt; provided with database, authentication&lt;/li&gt;
&lt;li&gt;(Free) &lt;a href="https://appseed.us/admin-dashboards/django-dashboard-coreui"&gt;CoreUI - Django&lt;/a&gt; simple starter &lt;/li&gt;
&lt;li&gt;(Free) &lt;a href="https://coreui.io/react"&gt;CoreUI - React&lt;/a&gt; Dashboard&lt;/li&gt;
&lt;li&gt;(Free) &lt;a href="https://coreui.io/vue/"&gt;CoreUI - Vue&lt;/a&gt; Template&lt;/li&gt;
&lt;li&gt;(Free) &lt;a href="https://coreui.io/angular"&gt;CoreUI - Angular&lt;/a&gt; Template&lt;/li&gt;
&lt;li&gt;(Free) &lt;a href="https://coreui.io/laravel"&gt;CoreUI - Laravel&lt;/a&gt; Starter&lt;/li&gt;
&lt;li&gt;(Free) &lt;a href="https://icons.coreui.io"&gt;CoreUI - Free Icons&lt;/a&gt; (1500+ set)&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MqC-Za83--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zjcermavpr8jbp0l3ldt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MqC-Za83--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zjcermavpr8jbp0l3ldt.png" alt="CoreUI - Open-source Dashboard Template crafted in many tech flavors."&gt;&lt;/a&gt;  &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#coreui-bootstrap"&gt;
  &lt;/a&gt;
  CoreUI Bootstrap
&lt;/h2&gt;

&lt;p&gt;CoreUI is an Open Source Bootstrap Admin Template. But CoreUI is not just another Admin Template. It goes way beyond hitherto admin templates thanks to transparent code and file structure. And if that's not enough, let’s just add that CoreUI consists bunch of unique features and over 1000 high-quality icons.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://coreui.io/bootstrap/"&gt;CoreUI&lt;/a&gt; - product page&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://coreui.io/demo/free/3.4.0/"&gt;CoreUI&lt;/a&gt; - LIVE demo&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/coreui/coreui-free-bootstrap-admin-template"&gt;CoreUI&lt;/a&gt; - source code&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qZag1gor--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ekin3lc0j3voeged22vb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qZag1gor--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ekin3lc0j3voeged22vb.png" alt="CoreUI Bootstrap."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#coreui-flask"&gt;
  &lt;/a&gt;
  &lt;a href="https://appseed.us/admin-dashboards/flask-dashboard-coreui"&gt;CoreUI Flask&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;CoreUI Dashboard design coded in Flask Framework with SQLite database, ORM and authentication. The product comes with free support via Github (issues tracker) and &lt;a href="https://discord.gg/fZC6hup"&gt;Discord&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://appseed.us/admin-dashboards/flask-dashboard-coreui"&gt;CoreUI Flask&lt;/a&gt; - product page&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://flask-coreui.appseed-srv1.com/"&gt;CoreUI Flask&lt;/a&gt; - LIVE deployment&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nLSAF9aS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/axnx3r9vg8s7tiudipvd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nLSAF9aS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/axnx3r9vg8s7tiudipvd.png" alt="CoreUI Flask."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#coreui-django"&gt;
  &lt;/a&gt;
  &lt;a href="https://appseed.us/admin-dashboards/django-dashboard-coreui"&gt;CoreUI Django&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;CoreUI design coded in Django Framework with SQLite database, ORM, and authentication. The product is released on Github under the MIT license and is actively supported via &lt;a href="https://discord.gg/fZC6hup"&gt;Discord&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://appseed.us/admin-dashboards/django-dashboard-coreui"&gt;CoreUI Django&lt;/a&gt; - product page&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://django-coreui.appseed-srv1.com/"&gt;CoreUI Django&lt;/a&gt; - LIVE deployment&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fM6G2Xj9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hxovb4fmf4o3fizip6vn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fM6G2Xj9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hxovb4fmf4o3fizip6vn.png" alt="CoreUI Django."&gt;&lt;/a&gt;   &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#coreui-react"&gt;
  &lt;/a&gt;
  CoreUI React
&lt;/h2&gt;

&lt;p&gt;CoreUI is meant to be the UX game changer. Pure &amp;amp; transparent code is devoid of redundant components, so the app is light enough to offer the ultimate user experience. This means mobile devices also, where the navigation is just as easy and intuitive as on a desktop or laptop.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://coreui.io/react/"&gt;CoreUI React&lt;/a&gt; - product page&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://coreui.io/react/demo/free/3.1.1/#/dashboard"&gt;CoreUI React&lt;/a&gt; - LIVE Demo&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/coreui/coreui-free-react-admin-template"&gt;CoreUI React&lt;/a&gt; - source code&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XIInd21E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fjuqi340g6lrr32yx90v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XIInd21E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fjuqi340g6lrr32yx90v.png" alt="CoreUI React."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#coreui-vuejs"&gt;
  &lt;/a&gt;
  CoreUI Vuejs
&lt;/h2&gt;

&lt;p&gt;The Vuejs version of CoreUI comes with the same pixel-perfect layout and permissive license. The product can be downloaded and used directly from Github.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://coreui.io/vue/"&gt;CoreUI VueJS&lt;/a&gt; - product page&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://coreui.io/vue/demo/free/3.1.1/#/dashboard"&gt;CoreUI VueJS&lt;/a&gt; - LIVE demo&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/coreui/coreui-free-vue-admin-template"&gt;CoreUI VueJS&lt;/a&gt; - source code&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nlsf1VkM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vwmmsugf9kx338036qd7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nlsf1VkM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vwmmsugf9kx338036qd7.png" alt="CoreUI Vuejs."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#coreui-angular"&gt;
  &lt;/a&gt;
  CoreUI Angular
&lt;/h2&gt;

&lt;p&gt;Save thousands of development hours by using ready-made, reusable, and commonly used widgets and UI components. Moreover, CoreUI Angular Admin Template is delivered with a ready-to-use environment, so you don't have to waste time configuring the project. All build scripts and tools are ready to use out of the box. With CoreUI Template you can start a new project in a minute!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://coreui.io/angular"&gt;CoreUI Angular&lt;/a&gt; - product page&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://coreui.io/angular/demo/free/2.11.1/#/dashboard"&gt;CoreUI Angular&lt;/a&gt; - LIVE Demo&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/coreui/coreui-free-angular-admin-template"&gt;CoreUI Angular&lt;/a&gt; - source code&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--A_aKSViR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1ifye9kgh3k0lmcldrv8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--A_aKSViR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1ifye9kgh3k0lmcldrv8.png" alt="CoreUI Angular."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#coreui-laravel"&gt;
  &lt;/a&gt;
  CoreUI Laravel
&lt;/h2&gt;

&lt;p&gt;CoreUI Laravel Admin Panel is 100% compatible with Bootstrap, so if you are familiar with Bootstrap but you demand something more than it provides, then CoreUI Laravel Admin Panel is an answer. On the other hand, if you’re happy to stay with Bootstrap, our admin template goes in hand.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://coreui.io/laravel/"&gt;CoreUI Laravel&lt;/a&gt; - product page&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://coreui.io/demo/free/3.4.0/"&gt;CoreUI Laravel&lt;/a&gt; - LIVE demo&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/coreui/coreui-free-laravel-admin-template"&gt;CoreUI Laravel&lt;/a&gt; - source code&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--z4QzrEQ5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rww0pow8myyf7qtq6h4s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z4QzrEQ5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rww0pow8myyf7qtq6h4s.png" alt="CoreUI Laravel."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#coreui-icons"&gt;
  &lt;/a&gt;
  CoreUI Icons
&lt;/h2&gt;

&lt;p&gt;CoreUI Icons is an open-source icon set with more than 1500 icons in multiple formats SVG, PNG, and Webfonts. CoreUI Icons are beautifully crafted symbols for common actions and items. You can use them in your digital products for web or mobile app.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://icons.coreui.io"&gt;CoreUI Icons&lt;/a&gt; - product page&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/coreui/coreui-icons"&gt;CoreUI Icons&lt;/a&gt; - source code&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fBWIll99--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uv3bisa8kheh2uijpzfg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fBWIll99--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uv3bisa8kheh2uijpzfg.png" alt="CoreUI Icons."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Thanks for reading!&lt;/strong&gt; For more resources, please access:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Free &lt;a href="https://dev.to/sm0ke/react-dashboards-open-source-apps-1c7j"&gt;React Dashboards&lt;/a&gt; - a curated list published on Dev.to&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://appseed.us/admin-dashboards/open-source"&gt;Open-source Admin Dashboards&lt;/a&gt; - provided by AppSeed&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>webdev</category>
      <category>react</category>
      <category>vue</category>
      <category>coreui</category>
    </item>
    <item>
      <title>HTML : contenteditable</title>
      <author>Rajesh Kumar Yadav</author>
      <pubDate>Thu, 13 May 2021 05:11:31 +0000</pubDate>
      <link>https://dev.to/rajeshkumaryadavdotcom/html-contenteditable-1dje</link>
      <guid>https://dev.to/rajeshkumaryadavdotcom/html-contenteditable-1dje</guid>
      <description>&lt;p&gt;You can set the HTML5 &lt;code&gt;contenteditable&lt;/code&gt; attribute with the value true (i.e. &lt;code&gt;contentEditable="true"&lt;/code&gt;) to make an element editable in HTML, such as &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; element.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;p contenteditable&amp;gt;This is an editable paragraph.&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Upon clicking on the paragraph, the content of it can be edited similar to an input text field. When the &lt;code&gt;contenteditable&lt;/code&gt; attribute is not set on an element, the element will inherit it from its parent. So all child text of a content editable element will also be editable, but you can turn it off for specific text, like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;p contenteditable&amp;gt;
 This is an editable paragraph.
 &amp;lt;span contenteditable="false"&amp;gt;But not this.&amp;lt;/span&amp;gt;
&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Note that an uneditable text element inside an editable element will still have a text cursor as inherited from its&lt;br&gt;
parent as well.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#example"&gt;
  &lt;/a&gt;
  Example
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang="en"&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;meta charset="utf-8"&amp;gt;
&amp;lt;title&amp;gt;HTML5 Editable Elements&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;h1 contentEditable="true"&amp;gt;Your Name&amp;lt;/h1&amp;gt;
    &amp;lt;div contentEditable="true"&amp;gt;You Favorite Movie&amp;lt;/div&amp;gt;
    &amp;lt;p contentEditable="true"&amp;gt;Your Comment&amp;lt;/p&amp;gt;
    &amp;lt;p&amp;gt;&amp;lt;strong&amp;gt;Note:&amp;lt;/strong&amp;gt; Click on the elements and type some text.&amp;lt;/p&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/rkycom"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rb9xKs4G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png" alt="Buy Me A Coffee"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;With all that being said, I highly recommend you keep learning!&lt;/p&gt;

&lt;p&gt;Thank you for reading this article. Please feel free to connect with me on &lt;a href="https://www.linkedin.com/in/www-rajeshkumaryadav-com/"&gt;LinkedIn&lt;/a&gt; and &lt;a href="https://twitter.com/rky_com"&gt;Twitter&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>html</category>
      <category>programming</category>
      <category>webdev</category>
      <category>productivity</category>
    </item>
    <item>
      <title>What are Employers Looking for in Candidates for Fully Remote Jobs?</title>
      <author>vicky209</author>
      <pubDate>Thu, 13 May 2021 04:36:58 +0000</pubDate>
      <link>https://dev.to/vicky209/what-are-employers-looking-for-in-candidates-for-fully-remote-jobs-aa7</link>
      <guid>https://dev.to/vicky209/what-are-employers-looking-for-in-candidates-for-fully-remote-jobs-aa7</guid>
      <description>&lt;p&gt;More and more companies are seeing the benefits of &lt;a href="https://quire.io/blog/p/work-from-home-tips.html"&gt;remote workers&lt;/a&gt; far outweigh any potential drawbacks. And, in part, that’s why so many jobs are now becoming fully remote.&lt;/p&gt;

&lt;p&gt;It’s often cheaper both for the employer and the employee if the employee works from home. But not everyone has what it takes to be able to work fully remotely.&lt;/p&gt;

&lt;p&gt;Employers are looking for candidates who are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;effective and efficient communicators &lt;/li&gt;
&lt;li&gt;have good &lt;a href="https://quire.io/blog/p/5-tips-to-improve-time-management-skills.html"&gt;time management&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;independent and trustworthy&lt;/li&gt;
&lt;li&gt;tech savvy&lt;/li&gt;
&lt;li&gt;work well independently for long stretches of time&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Candidates looking for remote jobs who have these traits are most likely to get hired.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-traits-employers-are-looking-for-in-candidates-for-remote-work"&gt;
  &lt;/a&gt;
  5 traits employers are looking for in candidates for remote work
&lt;/h2&gt;

&lt;p&gt;[Remote working culture])(&lt;a href="https://quire.io/blog/p/productivity-tips-during-lockdown.html"&gt;https://quire.io/blog/p/productivity-tips-during-lockdown.html&lt;/a&gt;) has entered a new phase.&lt;/p&gt;

&lt;p&gt;That phase being there is a large remote work force worldwide. And even when the COVID-19 pandemic is over, many companies and organizations are saying they will probably never go 100% back to how it was.&lt;/p&gt;

&lt;p&gt;So how can you land yourself a remote job? There are 5 traits that employers are looking for. Ideally, you want to have all five to be a standout candidate.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-effective-communicator"&gt;
  &lt;/a&gt;
  1. Effective communicator
&lt;/h3&gt;

&lt;p&gt;You have to be an effective and efficient communicator. Because working remotely means staying in &lt;a href="https://quire.io/blog/p/transparency-in-communication.markdown.html"&gt;constant communication&lt;/a&gt; with your team. Which is done through email, video calling, and messaging.&lt;/p&gt;

&lt;p&gt;With the written word being the primary form of communication, it’s vital that you can clearly and succinctly convey ideas in writing.&lt;/p&gt;

&lt;p&gt;Also: it’s very easy to sound curt/rude in writing, so if you can show tact and subtly in your writing this will go a long way to helping your job prospects.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-good-with-time-management"&gt;
  &lt;/a&gt;
  2. Good with time management
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://quire.io/blog/p/time-mangement-skills.html"&gt;Time management&lt;/a&gt; is a very broad term that can cover motivation, proactiveness, and organizational skills.&lt;/p&gt;

&lt;p&gt;So, how good are you at staying focused for long stretches of time? Are you able prioritize your tasks and follow-up team members and managers when necessary?&lt;/p&gt;

&lt;p&gt;If you said yes to these, then you’re likely a good fit for remote work.&lt;/p&gt;

&lt;p&gt;After all, these traits are important even if you’re working in an office. But working remotely, they become vital. And if you can demonstrate that you have these traits, you significantly increase your chances of gaining a remote job.&lt;/p&gt;

&lt;p&gt;The other part of time management is working under pressure. Because sometimes deadlines can be brutal. And if you’re not able to work remotely, and under pressure, you may find that remote work is not right for you.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-trustworthy-and-independent"&gt;
  &lt;/a&gt;
  3. Trustworthy and independent
&lt;/h3&gt;

&lt;p&gt;These ties into the above point.&lt;/p&gt;

&lt;p&gt;Independent employees have to be &lt;a href="https://quire.io/blog/p/task-management-software-helps-productivity.html"&gt;self-motivated and proactive&lt;/a&gt;. Because, unlike an office environment, most of your work day will be spent unsupervised.&lt;/p&gt;

&lt;p&gt;You’ve got to be able to show that you can be productive from your home office (even if your home office is your bedroom or lounge room), and that your employer(s) has made the right decision in allowing your to do remote work.&lt;/p&gt;

&lt;p&gt;Trust is one of the biggest reasons many employers were—and some still are—reluctant to let their employees work from home. And this is partly for another reason: control.&lt;/p&gt;

&lt;p&gt;When employees are in the office it’s easy to see what they are doing. It’s easy to see who showed up on time and who is late. Who’s slacking off and who’s got their nose to the grindstone.&lt;/p&gt;

&lt;p&gt;With remote work, all you can see is the communication (messaging and emails) and the results. Depending on the size and structure of the company, remote working doesn’t provide the same level of observation on an employee’s day-to-day doings.&lt;/p&gt;

&lt;p&gt;Which bothers some employers. Your trustworthiness and independence are huge factors in determining if you’re a viable candidate for a fully remote job.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-good-with-technologytech-savvy"&gt;
  &lt;/a&gt;
  4. Good with technology/tech savvy
&lt;/h3&gt;

&lt;p&gt;Effective remote working relies on the latest tools and technology to run smoothly. This is why it’s necessary that you are good with technology, a faster learner, and/or are quick to adapt.&lt;/p&gt;

&lt;p&gt;This isn’t to say you have to own the latest gear—the most recent Apple Mac or PC, the latest model. &lt;/p&gt;

&lt;p&gt;There are some good software tools out there to help track tasks, communication, and KPIs. As well as provide enhanced video conferencing experiences.&lt;/p&gt;

&lt;p&gt;Software tools like project management software have really come into their own in the last few years.&lt;/p&gt;

&lt;p&gt;When the pandemic hit, more and more companies realized the importance and value of a project management software tool that could help organize projects, tasks, and employees.&lt;/p&gt;

&lt;p&gt;With projects being broken down into tasks, and then those tasks being organized by priority—and by team member—it does make ensuring everyone’s one the same page a straightforward process.&lt;/p&gt;

&lt;p&gt;There’s also the communication aspect. Many &lt;a href="https://quire.io/compare/best-project-management-software-reviews-comparisons"&gt;project management software tools&lt;/a&gt; (like &lt;a href="https://quire.io"&gt;Quire&lt;/a&gt;) have messaging options in the platform. Which allows team members to leave real-time comments on tasks as well as communicate via the message app.&lt;/p&gt;

&lt;p&gt;Familiarity with project management software tools can be a big bonus when applying for fully remote work.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-can-work-long-periods-in-solitude"&gt;
  &lt;/a&gt;
  5. Can work long periods in solitude
&lt;/h3&gt;

&lt;p&gt;Make no mistake. This is a very solitary job. You will be—physically—on your own.&lt;/p&gt;

&lt;p&gt;And this trait ties back into what we’ve already discussed in points 2 and 3 (time management and independence). If you have no problem sitting at your desk for long periods doing your work, then you will have little problem with a fully remote job.&lt;/p&gt;

&lt;p&gt;But if the idea of sitting alone working—with only email and messaging for company—then a fully remote job may not be the best fit for you.&lt;/p&gt;

&lt;p&gt;However, if you have no problem sitting at your computer in a comfortable environment working for 8 hours a day then this will definitely help your candidacy for remote work.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-traits-employers-are-looking-for-in-candidates-for-fully-remote-jobs"&gt;
  &lt;/a&gt;
  The traits employers are looking for in candidates for fully remote jobs
&lt;/h2&gt;

&lt;p&gt;The new remote work culture is here to stay. And if you want to succeed and thrive in this culture you need to be able to show employers that you are the ideal candidate for a fully remote job.&lt;/p&gt;

&lt;p&gt;Employers are looking for motivated, independent, reliable, and trustworthy candidates. And if you fit this description, and you can demonstrate it to prospective employers, you have a far greater chance than most of landing a remote job.&lt;/p&gt;

</description>
      <category>productivity</category>
    </item>
    <item>
      <title>Five reasons to use Full Stack React Node js for your next project!
</title>
      <author>Alexis Gilbert</author>
      <pubDate>Thu, 13 May 2021 04:35:44 +0000</pubDate>
      <link>https://dev.to/alexisdevs/five-reasons-to-use-full-stack-react-node-js-for-your-next-project-4nma</link>
      <guid>https://dev.to/alexisdevs/five-reasons-to-use-full-stack-react-node-js-for-your-next-project-4nma</guid>
      <description>&lt;p&gt;React js and Node js is considered one of the exceptional technologies of javascript.&lt;/p&gt;

&lt;p&gt;The main objective of ReactJS is to provide rapidness, scalability and flexibility to the large size of applications as a robust frontend technology.&lt;/p&gt;

&lt;p&gt;Whereas, Nodejs possess a single-threaded nature which allows it to cater to real-time and push-based web applications,&lt;/p&gt;

&lt;p&gt;This undoubtedly puts this technology into a strong candidate list for backend technologies.&lt;/p&gt;

&lt;p&gt;When these two robust technologies come together in the picture, strong backend and frontend Imagine, how extensive and top-notch web application can be made!&lt;/p&gt;

&lt;p&gt;Still not convinced? Okay, I am going to give you the top five reasons why you should get these front end and backend technologies or a &lt;strong&gt;Full stack React Node js Developer&lt;/strong&gt; for your project who can give you prominent results by optimizing these amazing two technologies!&lt;/p&gt;

&lt;p&gt;So let’s get started!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RbTjM47u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pz8r0inan7ib4ijg1049.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RbTjM47u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pz8r0inan7ib4ijg1049.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#profound-maintenance-for-the-dynamic-web-applications"&gt;
  &lt;/a&gt;
  Profound Maintenance for the dynamic web applications
&lt;/h1&gt;

&lt;p&gt;When your web applications fall under Real-time Applications, which have to maintain the real-time data and information Reactjs and Nodejs is the pioneer in such requirements.&lt;/p&gt;

&lt;p&gt;It works exceptionally well with such applications due to their nature and primary functionality.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#handles-high-server-load"&gt;
  &lt;/a&gt;
  Handles High Server load
&lt;/h1&gt;

&lt;p&gt;Yes, it’s true, often it happens where servers make requests several times in a short span of a period and sometimes if your backend is not strong enough you lost the ability to handle the server load efficiently.&lt;/p&gt;

&lt;p&gt;However, this doesn’t happen with noadJS as it is built that way to cater to server request rapidly no matter how much it is, balancing the server load with perfect balance!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#full-stack-react-node-js-developer-is-the-best-with-a-single-page-application"&gt;
  &lt;/a&gt;
  full stack react node js developer is the best with a single page application
&lt;/h1&gt;

&lt;p&gt;Single-page applications can be made with the smoothest UI/UX features and utmost user-friendliness with ReactJS with just minimum resources and efforts &lt;/p&gt;

&lt;p&gt;Whilst, the backend must be strong enough to handle the database most efficiently, in which NodeJS wins the race quite effortlessly.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#build-mern-stack-applications"&gt;
  &lt;/a&gt;
  Build MERN stack applications
&lt;/h1&gt;

&lt;p&gt;Everyone, working in the industry of web applications is aware of this extensive framework, MERN. &lt;/p&gt;

&lt;p&gt;Combination of MongoDB, ExpressJS, ReactJS and finally NodeJS as a cherry on the top of the cake.&lt;/p&gt;

&lt;p&gt;This combination nevertheless, one of the robust framework which ideally works best for the sites like E-commerce, banking sector or the healthcare web application.&lt;/p&gt;

&lt;p&gt;My point is it works the best even better when the web application is having a larger size and complex in nature.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#building-json-for-the-apis"&gt;
  &lt;/a&gt;
  Building JSON for the APIs
&lt;/h1&gt;

&lt;p&gt;For Javascript object notion the JSON file is widely known for. It facilitates the procedure of transferring the data between your server and web application.&lt;/p&gt;

&lt;p&gt;I don’t think I need to state the importance of APIs in the process of the development process here.&lt;/p&gt;

&lt;p&gt;As a developer, you must take particular data or input from the user and provide output as a result of that input.&lt;/p&gt;

&lt;p&gt;Now nodeJS works as creating a reusable code that can also be accessed by the ReactJS. This process ultimately reduces your efforts and gives you optimum results.&lt;/p&gt;

&lt;p&gt;To sum up all things, I believe that now I may have convinced you of this amazing combination of These two robust technologies that can bring some exceptional results to your business project out there.&lt;/p&gt;

&lt;p&gt;I suggest you shall get the assistance of an expert on this matter, as they are highly skilled &lt;a href="https://www.bacancytechnology.com/node-js-development"&gt;&lt;strong&gt;Node.js developer&lt;/strong&gt;&lt;/a&gt; who knows the functionalities of both the technologies and can work very well with both, Otherwise, the technologies are capable of handling your project with utmost functionalities!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>node</category>
      <category>devops</category>
    </item>
    <item>
      <title>Straight Insertion Sort Using C</title>
      <author>skptricks</author>
      <pubDate>Thu, 13 May 2021 04:20:20 +0000</pubDate>
      <link>https://dev.to/skptricks_93/straight-insertion-sort-using-c-1110</link>
      <guid>https://dev.to/skptricks_93/straight-insertion-sort-using-c-1110</guid>
      <description>&lt;p&gt;Insertion sort is a simple sorting algorithm that builds the final sorted array (or list) one item at a time.&lt;/p&gt;

&lt;p&gt;Straight Insertion Sort using C&lt;/p&gt;

&lt;p&gt;Let’s say we have an array a, so at each i-th pass, a[i] is successively compared with a[i-1], a[i-2], etc. until an element smaller than a[i] is found or the beginning of the array is reached. Elements that are found to be greater than a[i], are moved right by one position each to make room for a[i].&lt;/p&gt;

&lt;p&gt;The time complexity of this algorithm is O(n^2).&lt;/p&gt;

&lt;p&gt;The complete source code is given below&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.skptricks.com/2021/05/straight-insertion-sort-using-c.html"&gt; Read More...&lt;/a&gt;&lt;/p&gt;

</description>
      <category>c</category>
      <category>programming</category>
      <category>coding</category>
      <category>career</category>
    </item>
    <item>
      <title>Journey to the real world by cloning DEV.to backend server(part 3)</title>
      <author>Harsh Mangalam</author>
      <pubDate>Thu, 13 May 2021 04:15:33 +0000</pubDate>
      <link>https://dev.to/harshmangalam/journey-to-the-real-world-by-cloning-dev-to-backend-server-part-3-2bl9</link>
      <guid>https://dev.to/harshmangalam/journey-to-the-real-world-by-cloning-dev-to-backend-server-part-3-2bl9</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;In the last series we have installed the required minimum dependencies to setup our project as we will move further in this project we will install our required dependencies according to requirement.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Apollo server use schema first approach to write graphql query which create not much problem in smaller project but when your project grows and required better type for your schema then you should go through &lt;code&gt;nexus schema&lt;/code&gt; which is code first approach to write graphql schema.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;In this project we will use apollo server schema first approach for simplicity and we will explore the Query , Mutation and Subscription to design our application.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;At first we will setup prisma with javascript and postgresql.&lt;br&gt;
If you want to setup prisma for typescript or any other database you can explore &lt;a href="https://www.prisma.io/docs/getting-started/setup-prisma/start-from-scratch-typescript-postgres"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;we have already install prisma as a dev dependencies in our previous series. You can setup postgresql on ubuntu using &lt;a href="https://www.digitalocean.com/community/tutorials/how-to-install-postgresql-on-ubuntu-20-04-quickstart"&gt;this&lt;/a&gt; blog post on digital ocean&lt;/p&gt;

&lt;p&gt;open the terminal at the root of your project devblog_server and generate prisma project.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npx prisma init

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will initialize a brand new prisma project containing a folder &lt;code&gt;prisma&lt;/code&gt; which contain &lt;code&gt;schema.prisma&lt;/code&gt; file &lt;code&gt;schema.prisma&lt;/code&gt; is a only one source of truth for our database model . If we want to create any table in and connect to any type of database whole configuration and model creation can be done in this file.&lt;/p&gt;

&lt;p&gt;You will notice &lt;code&gt;prisma init&lt;/code&gt; also create a &lt;code&gt;.env&lt;/code&gt; file . &lt;code&gt;.env&lt;/code&gt; file is a configuration file which is useful in case of storing any secrets that your application required. We can install it manually using &lt;code&gt;pnpm add dotenv&lt;/code&gt; if you are working on nodejs.But prisma automatically install it in our dependencies so we have not required to install it here.&lt;/p&gt;

&lt;p&gt;open &lt;code&gt;.env&lt;/code&gt; file you will see there is one field which prisma create for you to connect to database. Here we will using postgresql so it will seem like&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;DATABASE_URL="postgresql://postgres:harsh12345@localhost:5432/devblog"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;DATABASE_URL is field that can used as a environment variable in our nodejs file to get data stored in it&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;postgres:harsh12345&lt;/code&gt; contain postgresql username and password  &lt;code&gt;username:password&lt;/code&gt; it use UNIX like authentication flow which contain role for different user.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;@localhost:5432&lt;/code&gt; is a host and port on which postgresql server is up and running.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;devblog&lt;/code&gt; is our database name which  prisma will automatically create for us when we will apply our first migration&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;do not push &lt;code&gt;.env&lt;/code&gt; file to github always add &lt;code&gt;.env&lt;/code&gt; in you &lt;code&gt;.gitignore&lt;/code&gt; file because it contain all of your secrets and connection url when we will deploy this project we will see how we will use heroku postgres url for now we will use local postgres server on machine.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Lets create some folder structure for our project. Every one have their own way to create project structure . I also follow my own way to configure it. I have created it like this it can scale and easily add new features in future&lt;/p&gt;

&lt;p&gt;At first create &lt;code&gt;src/&lt;/code&gt; directory in your root level . for us our root level is &lt;code&gt;devblog_server&lt;/code&gt; . &lt;br&gt;
Then create &lt;code&gt;server.js&lt;/code&gt; file where we will configure our server&lt;/p&gt;

&lt;p&gt;&lt;code&gt;server.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const { ApolloServer ,gql} = require("apollo-server-express");
const context = require("./context");
const http = require("http");
const express = require("express");
const { PORT } = require("./config");

const typeDefs  = gql`
type Query {
   hello : String!
}

`
const resolvers = {
 Query :{
     hello(){
   return "welcome the real world"
    }
 }

async function startApolloServer() {
  const app = express();

  const server = new ApolloServer({
    typeDefs,
    resolvers,
    context,
    tracing: true, // tracing trace our request and response time and much more.
  });
  await server.start();


  server.applyMiddleware({ app });

// testing for REST endpoints through express server

  app.use((req, res, next) =&amp;gt; {
    return res.status(200).json({
      success: true,
      message: "Express server up &amp;amp; running",
    });
  });

  const httpServer = http.createServer(app);

  server.installSubscriptionHandlers(httpServer);

  await new Promise((resolve) =&amp;gt; httpServer.listen(PORT, resolve));
  console.log(`🚀 Express Server ready at http://localhost:${PORT}`);
  console.log(
    `🚀 Graphql Server ready at http://localhost:${PORT}${server.graphqlPath}`
  );
  console.log(
    `🚀 Subscriptions ready at ws://localhost:${PORT}${server.subscriptionsPath}`
  );
}

startApolloServer();
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Above we have imported and instanceated Apollo server , express server and native nodejs  http server to handle all of our subscriptions , mutation and query.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;tracing&lt;/code&gt; is work like and even better than morgan . In &lt;code&gt;REST&lt;/code&gt; world we use &lt;code&gt;morgan&lt;/code&gt; to log our req and res time tracing do the same job in graphql playground . we will see graphql playground in our next series when we start our first server.&lt;/p&gt;

&lt;p&gt;create &lt;code&gt;context.js and config.js in src/ folder&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;context.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
const prisma = require("./prisma");

module.exports = ({ req, res }) =&amp;gt; {


  return {
    prisma,
  };
};


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;here we imported prisma and pass to context of apollo server so that prisma can available in all of our resolvers. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Be careful do not create new instance of PrismaClient in your every resolvers because it will impact your application performance . you can read about performance optimization in prisma docs &lt;a href="https://www.prisma.io/docs/guides/performance-and-optimization/connection-management"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;code&gt;config.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;exports.PORT = process.env.PORT

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;.env&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;...
PORT=4000
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;we knew that when we will deploy our backend on heroku their PORT randomly assigned hence there PORT will automatically configured using heroku environment variable&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In our next series we start our server on localhost and apply our first migration by creating user and post model.&lt;/p&gt;

</description>
      <category>node</category>
      <category>apollo</category>
      <category>express</category>
      <category>prisma</category>
    </item>
    <item>
      <title>Deploy  Django + MySql Application into AWS EC2 instance with nginx and SSL</title>
      <author>Ruhan Khandakar</author>
      <pubDate>Thu, 13 May 2021 04:11:18 +0000</pubDate>
      <link>https://dev.to/ruhanrk/deploy-django-mysql-application-into-aws-ec2-instance-with-nginx-and-ssl-4f98</link>
      <guid>https://dev.to/ruhanrk/deploy-django-mysql-application-into-aws-ec2-instance-with-nginx-and-ssl-4f98</guid>
      <description>&lt;p&gt;All the version used in this tutorial&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Python 3.8.X&lt;/li&gt;
&lt;li&gt;Django 3.2.2&lt;/li&gt;
&lt;li&gt;gunicorn 20.1.0&lt;/li&gt;
&lt;li&gt;MySQL 8.0.20 (RDS)&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#ec2-setup"&gt;
  &lt;/a&gt;
  EC2 Setup
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Create EC2 instance (Screenshots attached below), during this instance creation.
we'll have to download &lt;code&gt;pem/cer&lt;/code&gt; file. It'll be used later to access this instance from the terminal via SSH
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--82ZJ0k2d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sepcum5zrogbcvfyytte.gif" alt="aws_ec2"&gt;
&lt;/li&gt;
&lt;li&gt;To connect the instance, Follow &lt;em&gt;&lt;em&gt;how to connect to instance guide&lt;/em&gt;&lt;/em&gt; from the EC2 dashboard.&lt;/li&gt;
&lt;li&gt;After login into our instance, run the following commands to update our instance -&amp;gt; &lt;code&gt;sudo apt update; sudo apt upgrade -y&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;In order to use pip3 and venv we have to install some packages -&amp;gt; &lt;code&gt;sudo apt install python3-pip python3-venv&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Let's create one virutal env -&amp;gt; &lt;code&gt;python3 -m venv env&lt;/code&gt;. And activate it -&amp;gt; &lt;code&gt;source env/bin/activate&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Now we have to install &lt;code&gt;gunicorn&lt;/code&gt;&lt;sup&gt;&lt;a href="#gunicorn"&gt;&lt;em&gt;&lt;em&gt;&lt;code&gt;details&lt;/code&gt;&lt;/em&gt;&lt;/em&gt;&lt;/a&gt;&lt;/sup&gt; (make sure you're in the virtual environment) -&lt;code&gt;pip3 install gunicorn&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: if your project has a MySQL database, you have to install some other packages&lt;br&gt;
&lt;code&gt;sudo apt install python3-dev default-libmysqlclient-dev build-essential libssl-dev&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Now let us pull the repository and install all the dependencies. After this do the necessary &lt;code&gt;migrations&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Let us install nginx&lt;sup&gt;&lt;a href="#nginx"&gt;&lt;em&gt;&lt;em&gt;&lt;code&gt;details&lt;/code&gt;&lt;/em&gt;&lt;/em&gt;&lt;/a&gt;&lt;/sup&gt; -&amp;gt; &lt;code&gt;sudo apt install nginx -y&lt;/code&gt;. now you can check with &lt;code&gt;sudo nginx&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Before starting the &lt;code&gt;nginx&lt;/code&gt; setup we have to change our instance's  &lt;em&gt;&lt;em&gt;&lt;code&gt;security groups&lt;/code&gt;&lt;/em&gt;&lt;/em&gt; (Check below screenshots)&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BdrHIQj_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gpwy0c1466ey9okj07rx.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BdrHIQj_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gpwy0c1466ey9okj07rx.gif" alt="ec2_security_group"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Now let us do a little test, we're going to start our application by gunicorn (what is it? will discuss it in later.) -&lt;code&gt;gunicorn --bind 0.0.0.0:8000 courier_allocation.wsgi:application&lt;/code&gt;, after running this we'll see something like 👇🏻&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--68RcGGXV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s4lmrdb1aat4p2bamby9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--68RcGGXV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s4lmrdb1aat4p2bamby9.png" alt="Screenshot 2021-05-09 at 4.57.28 PM"&gt;&lt;/a&gt; &lt;br&gt;
and now we can access our application from our instance IP address, like this &lt;code&gt;ec2-XX-XX-XX-XX.ap-south-1.compute.amazonaws.com:8000&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;But now if we close our terminal then we won't be able to access our application.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Now we have to do some setup so that our application can run in the background. Here, we'll use &lt;code&gt;supervisor&lt;/code&gt;&lt;sup&gt;&lt;a href="#supervisor"&gt;&lt;em&gt;&lt;em&gt;&lt;code&gt;details&lt;/code&gt;&lt;/em&gt;&lt;/em&gt;&lt;/a&gt;&lt;/sup&gt;. To install this package we have to run &lt;code&gt;sudo apt install -y supervisor&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;After installation, we have to create one supervisor config file. For this follow the below steps.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;First go to &lt;code&gt;cd /etc/supervisor/conf.d/&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Here we'll create one config file -&amp;gt; &lt;code&gt;sudo touch gunicorn.conf&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;In this &lt;code&gt;conf&lt;/code&gt; file paste the below code.&lt;/li&gt;
&lt;/ol&gt;


&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    [program:gunicorn]
    directory=/home/ubuntu/PROJECT_FOLDER
    command=/home/ubuntu/env/bin/gunicorn --workers 3 --bind unix:/home/ubuntu/PROJECT_FOLDER/app.sock DJANGO_PROJECT_FOLDER.wsgi:application
    autostart=true
    autorestart=true
    stderr_logfile=/home/ubuntu/logs/gunicorn.err.log
    stdout_logfile=/home/ubuntu/logs/gunicorn.out.log
    [group:guni]
    programs:gunicorn
&lt;/code&gt;&lt;/pre&gt;

&lt;/blockquote&gt;




&lt;ul&gt;
&lt;li&gt;Now we have to run some commands&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;code&gt;sudo supervisorctl reread&lt;/code&gt; -&amp;gt; Output - &lt;em&gt;&lt;em&gt;&lt;code&gt;guni: available&lt;/code&gt;&lt;/em&gt;&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;sudo supervisorctl update&lt;/code&gt; -&amp;gt; Output -  &lt;em&gt;&lt;em&gt;&lt;code&gt;guni: added process group&lt;/code&gt;&lt;/em&gt;&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;sudo supervisorctl status&lt;/code&gt; -&amp;gt; Output -  &lt;em&gt;&lt;em&gt;&lt;code&gt;guni:gunicorn                    RUNNING   pid 20199, uptime 0:00:17&lt;/code&gt;&lt;/em&gt;&lt;/em&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;




&lt;ul&gt;
&lt;li&gt;Now let's do the nginx&lt;sup&gt;&lt;a href="#nginx"&gt;&lt;em&gt;&lt;em&gt;&lt;code&gt;details&lt;/code&gt;&lt;/em&gt;&lt;/em&gt;&lt;/a&gt;&lt;/sup&gt; configuration&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;First we have to go to - &lt;code&gt;cd /etc/nginx/sites-available/&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Here we need to create one config file - &lt;code&gt;sudo touch django.conf&lt;/code&gt; (you can choose any file name). Paste the below code inside your newly created file
&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    # Nginx Configuration for sample Django application
    ######################################################
    server {
        listen 80;
        server_name ec2-XX-XX-XX-XX.ap-south-1.compute.amazonaws.com;
        location / {
            include proxy_params;
            proxy_pass http://unix:/home/ubuntu/PROJECT_FOLDER/app.sock;
        }
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;After this run - &lt;code&gt;sudo ln django.conf /etc/nginx/sites-enabled/&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;now let's test - &lt;code&gt;sudo nginx -t&lt;/code&gt; - Output -&amp;gt; &lt;code&gt;nginx: the configuration file /etc/nginx/nginx.conf syntax is ok&lt;/code&gt; &lt;code&gt;nginx: configuration file /etc/nginx/nginx.conf test is successful&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Sometime you might get this error -&amp;gt; &lt;code&gt;nginx: [emerg] could not build server_names_hash, you should increase server_names_hash_bucket_size: 64&lt;/code&gt;. To fix this we have to add &lt;code&gt;server_names_hash_bucket_size  128;&lt;/code&gt; at the top of your http block (located in &lt;code&gt;/etc/nginx/nginx.conf&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;Now we have to restart our nginx service -&amp;gt; &lt;code&gt;sudo service nginx restart&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Our &lt;code&gt;nginx&lt;/code&gt;&lt;sup&gt;&lt;a href="#nginx"&gt;&lt;em&gt;&lt;em&gt;&lt;code&gt;details&lt;/code&gt;&lt;/em&gt;&lt;/em&gt;&lt;/a&gt;&lt;/sup&gt; is up and running 😁. You can directly access your app from Public IP Address (EC2)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Note: Still a lot of configuration is left, like cache, route multiple ports, load balancer etc. Will discuss it in a different post. 🙂&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h3&gt;
  &lt;a href="#ssl-setup"&gt;
  &lt;/a&gt;
  SSL Setup
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;* Requirements: domain address which is mapped to your Instance Public IP.&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Setup SSL certificate with certbot is quite easy. We just need to install some packages and a little bit of setup&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt; Install packages - &lt;code&gt;sudo apt install certbot python3-certbot-nginx&lt;/code&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Before we generate the certificate, we have to add our domain name in our &lt;code&gt;django.conf&lt;/code&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;Change existing &lt;code&gt;server_name&lt;/code&gt; to - &lt;code&gt;server_name test.domain.com;&lt;/code&gt; (if you want to map multiple domains then use as space separate like this - &lt;code&gt;server_name test.domain.com testing.domain.com;&lt;/code&gt;)&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;After setup is done, run the below two commands&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;sudo certbot certonly --nginx&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo certbot certonly --nginx&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Now we have to &lt;code&gt;restart&lt;/code&gt; our &lt;code&gt;nginx&lt;/code&gt; - &lt;code&gt;sudo service nginx restart&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Now you can visit your secure website 😊.&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#django-static-file-issue-fix-after-deployment-production"&gt;
  &lt;/a&gt;
  Django Static File issue Fix after deployment (production)
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;You might notice that in production, &lt;code&gt;CSS/JS/Images/Fonts&lt;/code&gt; files are not working for &lt;code&gt;/admin&lt;/code&gt;.&lt;br&gt;
This is because of the &lt;code&gt;Static&lt;/code&gt; folder issue. In the local development environment &lt;code&gt;Django&lt;/code&gt; use &lt;code&gt;Python HTTPServer&lt;/code&gt;, and it automatically handles &lt;code&gt;Static files&lt;/code&gt;. But in production our server is running through &lt;code&gt;nginx&lt;/code&gt;, that's why we have to do little setup. Let's do the setup.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;First, we have to create one &lt;code&gt;static&lt;/code&gt; folder in our &lt;code&gt;root&lt;/code&gt; directory.&lt;/li&gt;
&lt;li&gt;Now inside our project main &lt;code&gt;settings.py&lt;/code&gt; we just need to add one line of code&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;STATIC_ROOT =  BASE_DIR / 'static/'&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Now run this command &lt;code&gt;python3 manage.py collectstatic&lt;/code&gt;&lt;sup&gt;&lt;a href="#collectstatic"&gt;&lt;em&gt;&lt;em&gt;&lt;code&gt;3&lt;/code&gt;&lt;/em&gt;&lt;/em&gt;&lt;/a&gt;&lt;/sup&gt;. With this command, &lt;code&gt;Django&lt;/code&gt; will copy all static assets into your &lt;code&gt;Root Static Folder&lt;/code&gt;. In our case, it's the &lt;code&gt;Static&lt;/code&gt; folder.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Now one setup is left, which is &lt;code&gt;nginx&lt;/code&gt;,&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Go to your &lt;code&gt;nginx&lt;/code&gt; &lt;code&gt;django.conf&lt;/code&gt; file and add the below code after the &lt;code&gt;location&lt;/code&gt; code block&lt;/p&gt;


&lt;pre class="highlight plaintext"&gt;&lt;code&gt;location /static/ {
               autoindex on;
               alias /home/ubuntu/PROJECT_FOLDER/static/;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Now restart &lt;code&gt;nginx&lt;/code&gt; server - &lt;code&gt;sudo service nginx restart&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;




&lt;h4&gt;
  &lt;a href="#nginx"&gt;
  &lt;/a&gt;
  nginx
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Nginx&lt;/code&gt;, pronounced like “&lt;em&gt;&lt;em&gt;engine-ex&lt;/em&gt;&lt;/em&gt;”, is an open-source web server that, since its initial success as a web server, is now also used as a reverse proxy, HTTP cache, and load balancer.&lt;/p&gt;

&lt;p&gt;Nginx is built to offer low memory usage and high concurrency. Rather than creating new processes for each web request, Nginx uses an asynchronous, event-driven approach where requests are handled in a single thread.&lt;/p&gt;

&lt;p&gt;With Nginx, one master process can control multiple worker processes. The master maintains the worker processes, while the workers do the actual processing. Because Nginx is asynchronous, each request can be executed by the worker concurrently without blocking other requests. &lt;a href="https://kinsta.com/knowledgebase/what-is-nginx/#:~:text=Nginx%2C%20pronounced%20like%20%E2%80%9Cengine%2D,HTTP%20cache%2C%20and%20load%20balancer."&gt;more info&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4&gt;
  &lt;a href="#gunicorn"&gt;
  &lt;/a&gt;
  gunicorn:
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Gunicorn&lt;/em&gt; is a stand-alone &lt;em&gt;WSGI&lt;/em&gt; web application server that offers a lot of functionality. It natively supports various frameworks with its adapters, making it an extremely easy to use drop-in replacement for many development servers that are used during development.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4&gt;
  &lt;a href="#supervisor"&gt;
  &lt;/a&gt;
  supervisor:
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;At some point you'll likely find yourself writing a script that needs to run all the time - a "long running script". These are scripts that shouldn't fail if there's an error or ones that should restart when the system reboots.&lt;/p&gt;

&lt;p&gt;To accomplish this, we need something to watch these scripts. Such tools are process watchers. They watch processes and restart them if they fail, and ensure they start on system boot.&lt;/p&gt;

&lt;p&gt;And &lt;em&gt;Supervisord&lt;/em&gt; is a simple and popular choice for doing these tasks and monitoring our process&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4&gt;
  &lt;a href="#collectstatic"&gt;
  &lt;/a&gt;
  collectstatic
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;Using the &lt;em&gt;collectstatic&lt;/em&gt; command, Django looks for all static files in your apps and collects them into a single location that can easily be served in production, i.e. the STATIC_ROOT. In our case, we are telling Django that when we run &lt;code&gt;python3 manage.py collectstatic&lt;/code&gt;, gather all static files into a folder called &lt;code&gt;static&lt;/code&gt; in our project root directory. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;That's it for this article. I hope you found it useful. Feel free to drop your comments below and like the post.&lt;/p&gt;

</description>
      <category>python</category>
      <category>django</category>
      <category>nginx</category>
      <category>aws</category>
    </item>
    <item>
      <title>Mid-Life Coding Newbie</title>
      <author>Will</author>
      <pubDate>Thu, 13 May 2021 04:01:28 +0000</pubDate>
      <link>https://dev.to/ravhawk/mid-life-coding-newbie-3ai3</link>
      <guid>https://dev.to/ravhawk/mid-life-coding-newbie-3ai3</guid>
      <description>&lt;p&gt;My name is Will and I do NOT consider myself a coder, but a future hopeful. However, even at the age of 45 with 3 kids, a full time career (not anywhere near coding) and a pretty busy life, I've decided that something I've been toying around with for literal decades is something that MAYBE, just maybe, I might be able to consider as a future.&lt;/p&gt;

&lt;p&gt;Even now as I start to write my first blog, I realize how much of a newbie I must be to anyone who might consider reading this. This will probably not be the typical tech blog, full of the usual items from those well versed in programming. However, I'm doing this for my own personal journey into coding and anyone who might be crazy enough to travel along with me on this journey and possibly be inspired to do the same.&lt;/p&gt;

&lt;p&gt;A bit of background, I started with computers in the 80s and you probably know what that means, archaic and interesting to say the least. I started messing around at the age of 8 or so either playing with my Atari 2600, using tape drives on Radio Shack computers and learning with basic coding on IBM computers to create simple programs to make moving shapes and such dance on the screen. However, that was short lived and I quickly moved away from programming, while still continuing to be active in computers all throughout my life.&lt;/p&gt;

&lt;p&gt;I had many stops and starts over the next few decades toying with the idea, however, it wasn't as easy to do online learning as it is now, especially if you weren't a CS major in college and paying the bills immediately took a front seat. I did not go into CS, but another, unrelated major. Over the last several years, I took a more serious approach to this and have been looking to really get into it, but felt completely lost and "too old" to NOW learn to code and translate that into a career.&lt;/p&gt;

&lt;p&gt;Starting in 2017, I found FreeCodeCamp.org and it seemed like a great place to start to dive into this and see if it was something I really wanted to do. I went through the beginning content for a while and again stopped and started over the last few years, mostly trying to overcome the thoughts I was too old and trying to convince myself that this was something I could really do, even in some sort of freelance/side gig method, instead of trying to transition to a full time career.&lt;/p&gt;

&lt;p&gt;Over the next few posts, I'll explain a bit more of these past experiences I've had and to go into more detail of what I've done specifically over the last few years and what my plan is going forward. As I go through my personal experiences trying to learn coding through a self paced, self learning process, I'll take you along with me.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>codenewbie</category>
      <category>html</category>
      <category>css</category>
    </item>
    <item>
      <title>Do you really know what variable hoisting in JS is ???(Part 1)</title>
      <author>prashanth</author>
      <pubDate>Thu, 13 May 2021 03:56:49 +0000</pubDate>
      <link>https://dev.to/prashan81992916/do-you-really-know-what-variable-hoisting-in-js-is-part-1-503p</link>
      <guid>https://dev.to/prashan81992916/do-you-really-know-what-variable-hoisting-in-js-is-part-1-503p</guid>
      <description>&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;   Interviewer: Tell me, what is variable hoisting in JS?

   devDood:  The concept of variable and function 
             declarations to physically moved to the top 
             of your code is called hoisting
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Is this factually right??🤔&lt;/p&gt;

&lt;p&gt;Absolutely not!!!&lt;/p&gt;

&lt;p&gt;If this is not the answer, then what is variable hoisting?&lt;/p&gt;

&lt;p&gt;The main agenda of this post is to make you understand how hoisting works in Javascript. I highly recommend you to read the post on execution context before continuing further.&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/prashan81992916" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mIZj8YVu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--BiO8cCct--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/425057/a3ccaaf3-e084-4695-9c50-f283d9210113.png" alt="prashan81992916 image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/prashan81992916/how-does-js-code-run-execution-context-and-call-stack-3a7" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;How Does JS code run - Execution context  and Call stack&lt;/h2&gt;
      &lt;h3&gt;prashanth ・ May 11 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#codenewbie&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#executioncontext&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;p&gt;So Lets start,&lt;/p&gt;

&lt;p&gt;In Javascript, both variables and functions are hoisted which basically means, no error is thrown when you reference a variable or a function before declaration.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Variable hoisting&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Take a moment to think what will be printed in the console.&lt;/p&gt;

&lt;p&gt;If your answer is &lt;code&gt;undefined&lt;/code&gt; then that's right, but why it is printing &lt;code&gt;undefined&lt;/code&gt; rather than throwing some error?. If you try to reference a variable before declaration in some other language(like C,C++,...) you will get an error saying&lt;code&gt;a is not defined&lt;/code&gt;. So lets find out why??.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    Note: Undefined and not defined are not same

    Undefined - It is one of the 7 primitive types in js 
                which is initialised to all the variables 
                during memory creation phase. It is 
                possible to explicitly assign it to a 
                variable(for ex a=undefined) , but good 
                practice is not to do so, as it is used to 
                serve a specific purpose

    not defined - In JS, it is a Reference error that we 
                  get when referencing to an undeclared 
                  variable as it is nowhere available in
                  its scope
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;If you have read the post on &lt;code&gt;execution context&lt;/code&gt; , you now know that execution context consists of two phases - &lt;code&gt;memory creation and code execution&lt;/code&gt;. During memory creation phase the special keyword &lt;code&gt;undefined&lt;/code&gt; is initialised to variables declared in the code. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--z4HAY-LN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ubkqzzp2oodwwlaudtj3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z4HAY-LN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ubkqzzp2oodwwlaudtj3.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;During code execution phase when the control goes to the first line , the js engine looks for the value of &lt;code&gt;a&lt;/code&gt; in the current &lt;code&gt;execution context's memory&lt;/code&gt; which has the value &lt;code&gt;undefined&lt;/code&gt;.This is the reason why undefined is printed in the console.After which 5 is assigned to the variable a in the memory.If you remove the declaration statement (&lt;strong&gt;let a = 5;&lt;/strong&gt;), then you get a reference error (&lt;strong&gt;a is not defined&lt;/strong&gt;) as it is not available in its memory space. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Function hoisting&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
&lt;span class="c1"&gt;//Prashanth says Hi, 🙌🏻&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EtIvfq_g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ph0y1g64lcp77wxebxvi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EtIvfq_g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ph0y1g64lcp77wxebxvi.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Just like variables, functions are also hoisted. This is because, during memory allocation phase function code is copied as it is instead of initialising with undefined as we saw in variables. So in the code execution phase when the control hits the first line - function invocation, js engine will look in the memory, gets the function code and executes it gracefully.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ev3hJIWG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5onxv2o7bkj40f9jbryc.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ev3hJIWG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5onxv2o7bkj40f9jbryc.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Enough of all the boring theoretical mumbo jumbo........... &lt;br&gt;
let's try to learn using chrome dev tools.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Learn hoisting using Dev Tools&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We know that whenever js code runs, a global execution context(global scope) is created. Trust me, this is also true even if you didn't write a single line of code.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mNRUeru6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4hrbsr7d84otgprww144.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mNRUeru6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4hrbsr7d84otgprww144.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;400&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With all the basics that you learned above, try to figure out what will be printed in the console and write your answers with explanation in the comment section.&lt;/p&gt;

&lt;p&gt;Voilà!!!. You have completed the part1 of hoisting.&lt;/p&gt;

&lt;p&gt;Follow me back to know the detailed explanation of above code using dev tools - Part✌🏻 on hoisting &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>tutorial</category>
      <category>webdev</category>
    </item>
  </channel>
</rss>
