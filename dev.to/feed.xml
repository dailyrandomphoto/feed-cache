<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>tmux rotate-window</title>
      <author>Waylon Walker</author>
      <pubDate>Thu, 22 Jul 2021 13:03:28 +0000</pubDate>
      <link>https://dev.to/waylonwalker/tmux-rotate-window-45km</link>
      <guid>https://dev.to/waylonwalker/tmux-rotate-window-45km</guid>
      <description>&lt;p&gt;Rotate window is the main way that I navigated tmux before I learned&lt;br&gt;
&lt;code&gt;select-pane&lt;/code&gt;.  It allows you to change your focused pane, or rotate the&lt;br&gt;
position of the panes easily.&lt;/p&gt;

&lt;p&gt;Default keybindings&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;bind-key        C-o rotate-window
bind-key          o &lt;span class="k"&gt;select&lt;/span&gt;&lt;span class="nt"&gt;-pane&lt;/span&gt; &lt;span class="nt"&gt;-t&lt;/span&gt; :.+
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;My keybindings look just a bit different than the default ones, I do not like&lt;br&gt;
needing to hit prefix for every command, especially for repeated commands.  I&lt;br&gt;
set a similar keybinding to the default one that uses mod instead of prefix.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;bind&lt;/span&gt; &lt;span class="nt"&gt;-n&lt;/span&gt; M-o &lt;span class="k"&gt;select&lt;/span&gt;&lt;span class="nt"&gt;-pane&lt;/span&gt; &lt;span class="nt"&gt;-t&lt;/span&gt; :.+
&lt;span class="nb"&gt;bind&lt;/span&gt; &lt;span class="nt"&gt;-n&lt;/span&gt; M-O rotate-window
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;p&gt;Be sure to check out the full youtube playlist and subscribe if you like it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/playlist?list=PLTRNG6WIHETB4reAxbWza3CZeP9KL6Bkr"&gt;https://www.youtube.com/playlist?list=PLTRNG6WIHETB4reAxbWza3CZeP9KL6Bkr&lt;/a&gt;&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/waylonwalker" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---Ukb2PhF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--Izxe95PY--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/271838/95e313ca-39fc-4ee6-bf57-ad52b4dcf0d2.png" alt="waylonwalker"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/waylonwalker/how-i-navigate-tmux-in-2021-2ina" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;How I navigate tmux in 2021&lt;/h2&gt;
      &lt;h3&gt;Waylon Walker ・ May 12 ・ 9 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#bash&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#linux&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#productivity&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Also check out this long form post for more about how I use tmux.&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>cli</category>
      <category>linux</category>
      <category>tmux</category>
    </item>
    <item>
      <title>The Best Python Frameworks for web development</title>
      <author>Rocky</author>
      <pubDate>Thu, 22 Jul 2021 12:49:43 +0000</pubDate>
      <link>https://dev.to/codelivly/the-best-python-frameworks-for-web-development-fnm</link>
      <guid>https://dev.to/codelivly/the-best-python-frameworks-for-web-development-fnm</guid>
      <description>&lt;p&gt; By &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/&amp;amp;ved=2ahUKEwier_PQ1fbxAhXa4jgGHVYsAvoQFjAAegQIBxAC&amp;amp;usg=AOvVaw1PUPii-XosNgl1ZTInOseb"&gt;&lt;span&gt;Codelivly&lt;/span&gt;&lt;/a&gt;&lt;/b&gt;:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/what-is-python-basis-of-python-explained/&amp;amp;ved=2ahUKEwiXxNL01fbxAhWrzTgGHf7VC0kQFjAAegQIBRAC&amp;amp;usg=AOvVaw3QgOqpH-tRUYruiDiis7Z7"&gt;Python&lt;/a&gt; is on an unexpected upward movement. And, the demand is sure to continue with no sign of dampening anytime soon. Python is expected to overtake Java and C# in the coming years, which is a clear indication of a lot more to come. Many of today’s big tech companies such as Google, Netflix, Instagram, are selecting Python frameworks for web development.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Read More&lt;/b&gt;: &lt;b&gt;&lt;a href="https://bit.ly/3rwqtHN"&gt;&lt;span&gt;Best Python Frameworks For Web Development&lt;/span&gt;&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

</description>
      <category>python</category>
    </item>
    <item>
      <title>10 Steps that will help you turn your idea into a product. Part 1</title>
      <author>Aleksandr Skobeltcyn</author>
      <pubDate>Thu, 22 Jul 2021 11:50:41 +0000</pubDate>
      <link>https://dev.to/skob/10-steps-that-will-help-you-turn-your-idea-into-a-product-part-1-2g31</link>
      <guid>https://dev.to/skob/10-steps-that-will-help-you-turn-your-idea-into-a-product-part-1-2g31</guid>
      <description>&lt;p&gt;Hi Devs!&lt;/p&gt;

&lt;p&gt;Do you remember how you got the &lt;strong&gt;💎idea&lt;/strong&gt; and want to make it but don't know &lt;strong&gt;how&lt;/strong&gt; to approach it?&lt;/p&gt;

&lt;p&gt;In this series of articles, I will share the whole process of it.&lt;/p&gt;

&lt;p&gt;Let's start with &lt;strong&gt;Part 1&lt;/strong&gt;, what we have for today:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IDI9IQuG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8629vqtbysnsrndmg3hp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IDI9IQuG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8629vqtbysnsrndmg3hp.png" alt="Group 177"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Each step has a&lt;/em&gt; 🎯 &lt;em&gt;end goal so it's easy to be laser-focused&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-idea"&gt;
  &lt;/a&gt;
  1. Idea
&lt;/h2&gt;

&lt;p&gt;🎯&lt;em&gt;End goal: Clear vision&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;My idea is simple: Habit-tracking app.&lt;/p&gt;

&lt;p&gt;After my &lt;a href="https://dev.to/skob/reachable-dreams-step-by-step-3l0k"&gt;one-year experiment&lt;/a&gt; I decided to create an app that will help me stick with good habits.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-motivation"&gt;
  &lt;/a&gt;
  2. Motivation
&lt;/h2&gt;

&lt;p&gt;🎯&lt;em&gt;End goal: Motivational boost&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;At the start, the motivation level is super high, but based on my experience product development will take time.&lt;/p&gt;

&lt;p&gt;So I decided to write down things that will help me stay motivated for a longer time:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;New skills: Flutter/Firebase/Figma and improved CV&lt;/li&gt;
&lt;li&gt;App that will help me and my close friends&lt;/li&gt;
&lt;li&gt;Practice Vim&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#3-mockup"&gt;
  &lt;/a&gt;
  3. Mockup
&lt;/h2&gt;

&lt;p&gt;🎯&lt;em&gt;End goal: general visuals to understand the architecture&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Opchzmpn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dtlhhaxhgukgr0dt95cw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Opchzmpn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dtlhhaxhgukgr0dt95cw.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here I decided to not go into details, only features that help make the job done: &lt;strong&gt;Create a habit and mark it as done&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-market-research"&gt;
  &lt;/a&gt;
  4. Market research
&lt;/h2&gt;

&lt;p&gt;🎯&lt;em&gt;End goal: Update my knowledge in a field&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;So, I bounced about the idea with my friends first, to listen to what they think. A &lt;a href="https://hamedmp.com/"&gt;friend&lt;/a&gt; of mine already researched the topic so he gave me pretty good sources to scrutinize.&lt;/p&gt;

&lt;p&gt;I have looked at 22 apps that exist in Apple/Play stores, noted the pros and cons of each to better understand the landscape. &lt;/p&gt;

&lt;p&gt;And created the notion page with:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Features that are mostly in demand in such kinds of apps&lt;/li&gt;
&lt;li&gt;What people don't like in rivals apps&lt;/li&gt;
&lt;li&gt;The strong and weak sides of each app on the market&lt;/li&gt;
&lt;li&gt;Keywords&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#5-technology-choice-and-education"&gt;
  &lt;/a&gt;
  5. Technology choice and Education
&lt;/h2&gt;

&lt;p&gt;🎯&lt;em&gt;End goal: Define a tech stack&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I set two main criteria in order to simplify choice:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Speed and cost - faster and lower respectively &lt;/li&gt;
&lt;li&gt;Feasibility - have access to devices API that app required&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And what we have had on a table:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://web.dev/progressive-web-apps/"&gt;&lt;strong&gt;PWA&lt;/strong&gt;&lt;/a&gt; - progressive web app&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cordova.apache.org/"&gt;&lt;strong&gt;Phone Gap/Cordova&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Native Android and IOS&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://reactnative.dev/"&gt;&lt;strong&gt;React Native&lt;/strong&gt;&lt;/a&gt; / &lt;a href="https://flutter.dev/"&gt;&lt;strong&gt;Flutter&lt;/strong&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Let's look a bit in detail at how the decision here has been made.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PWA&lt;/strong&gt; - Seems good, but after &lt;a href="https://firt.dev/pwa-2021/"&gt;read this research&lt;br&gt;
&lt;/a&gt; I decided to not go this way. The onboarding process for IOS users seems pretty horrible from a UX point of view, at least for now.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Phone Gap/Cordova&lt;/strong&gt; - Same as start something new with PHP now. It works, but you know what I mean😁.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Native apps&lt;/strong&gt; - Two code bases will be expensive to develop and maintain. And the benefits of the native approach are just overkilling for a simple app like mine.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;React Native/Flutter&lt;/strong&gt; - Both actually perfectly fit the task. After a quick look at the documentation, checked the GitHub trends, and available tooling I decided to go with Flutter. &lt;/p&gt;

&lt;p&gt;Here is how made that decision:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; Flutter has been developed and maintain by Google and I have experience in Angular.
So should be easy to understand things from the same provider&lt;/li&gt;
&lt;li&gt;As a backend, I decided to go with Firebase. Because it speeds up the process and seems like have good integration with Flutter&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;And I spent 1 day watching &lt;a href="https://www.youtube.com/watch?v=zLOaNyuO670"&gt;flutter crash-course&lt;/a&gt;, reading documentation, learning about Firebase basics.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-setting-up-the-environment"&gt;
  &lt;/a&gt;
  6. Setting up the environment
&lt;/h2&gt;

&lt;p&gt;🎯&lt;em&gt;End goal: speed up the development&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I wanted something that is already working, so I looked at the boilerplates, starters to bring myself as close to the working app as possible.&lt;/p&gt;

&lt;p&gt;I found &lt;a href="https://github.com/delay/flutter_starter"&gt;one&lt;/a&gt;, and in a few minutes, the simple app with authentication had already been on my phone. Cool, isn't it?&lt;/p&gt;

&lt;p&gt;With a starter code, I am helped myself a lot since I am new at flutter:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;I learned from other developers how to structure the code in a right way&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;I decreased the development time quite a lot&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#7-mvp-and-feedback-from-instagram"&gt;
  &lt;/a&gt;
  7. MVP and Feedback from Instagram
&lt;/h2&gt;

&lt;p&gt;🎯&lt;em&gt;End goal: feedback and extra motivation boost&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Cool, after few days of modification starter I had a working app:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--khsbLRp8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tdss86i94aknco33aw3p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--khsbLRp8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tdss86i94aknco33aw3p.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I uploaded a video of the app to Instagram with a simple question: &lt;strong&gt;Would you like to use such an app?&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xC0PjDHZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/veog8rcamoiiufuwzc7r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xC0PjDHZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/veog8rcamoiiufuwzc7r.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The result was good, even though I knew I have to be careful with this data because of &lt;a href="https://www.linkedin.com/pulse/ugly-baby-syndrome-johnny-killerup-pedersen/"&gt;Ugly Baby Syndrome&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Anyway, it was good for the motivation, the public announcement created positive pressure on me and I had first feedback.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-proper-uiux"&gt;
  &lt;/a&gt;
  8. Proper UI/UX
&lt;/h2&gt;

&lt;p&gt;🎯&lt;em&gt;End goal: UI layout&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I went to a &lt;a href="https://dribbble.com/"&gt;dribble&lt;/a&gt; for the inspiration. Looked at how the designers show certain things in an app like mine, what color scheme is usually used.&lt;/p&gt;

&lt;p&gt;So after one day of good flow, I got this in the &lt;a href="http://figma.com/"&gt;Figma&lt;/a&gt;:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RDacLhi5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6lqjl6a18ff5pyykdqtf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RDacLhi5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6lqjl6a18ff5pyykdqtf.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I did run the second survey on Instagram that showed that most people prefer grid view instead of the list. So I picked that one for the first version &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#9-development"&gt;
  &lt;/a&gt;
  9. Development
&lt;/h2&gt;

&lt;p&gt;🎯&lt;em&gt;End goal: Working App with new UI/UX&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;It took me 2 extra days to make it real. Some UI things have been removed to speed up the process.&lt;/p&gt;

&lt;p&gt;Few key points here:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;First I created a theme class with colors, styles, and fonts. That will guarantee the same style across the whole app&lt;/li&gt;
&lt;li&gt;The rest is just coding and by having a complete UI, it is just a matter of time. &lt;/li&gt;
&lt;li&gt;Using &lt;a href="https://www.vim.org/"&gt;vim&lt;/a&gt; speed up that proceed for nearly 30-40%, despite the painful learning curve&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#10-first-release"&gt;
  &lt;/a&gt;
  10. First Release
&lt;/h2&gt;

&lt;p&gt;🎯&lt;em&gt;End goal: Google Play link to share&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;So here I chose the same approach as described above: Theory + Practice in 20/80 proportion.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;I looked at how other app developers present their products in stores&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Read the articles about how to make a better visuals, SEO and higher acquisitions rate&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Made visuals in Figma and Photoshop&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Wrote SEO description with wording from Market Research&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Built a simple &lt;a href="https://better.me"&gt;website&lt;/a&gt; to basically place &lt;strong&gt;terms of use&lt;/strong&gt; and &lt;strong&gt;privacy policy&lt;/strong&gt; which is required by App Store and Google Play&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;And after a 3 days (Google reviewed took exactly that time) I am finally got a approved app here: &lt;a href="https://play.google.com/store/apps/details?id=io.skob.bettre"&gt;Google Play&lt;/a&gt; 🎉🎉🎉&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-next"&gt;
  &lt;/a&gt;
  What's next
&lt;/h2&gt;

&lt;p&gt;Cool, I hope it was a fun read for you! Now the plan is to gain a small user base to test in a real environment, so you are very welcome to join &lt;a href="https://play.google.com/store/apps/details?id=io.skob.bettre"&gt;here&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;After the testing process will be done, I will make a release for IOS so I could start more aggressive distribution such as Product Hunt, Google/Facebook Ads, and so on. About this, you can read in Part 2, which will be published after the work is done!&lt;/p&gt;

&lt;p&gt;Subscribe to stay tuned!&lt;/p&gt;

&lt;p&gt;And I really appreciate your negative or positive feedback in the comment section below!&lt;/p&gt;

&lt;p&gt;Best,&lt;br&gt;
Alex&lt;br&gt;
&lt;a href="https://skob.io"&gt;https://skob.io&lt;/a&gt;&lt;/p&gt;

</description>
      <category>flutter</category>
      <category>mobile</category>
      <category>productivity</category>
      <category>startup</category>
    </item>
    <item>
      <title>Arrays Questions: Reverse an array</title>
      <author>Kathan Vakharia</author>
      <pubDate>Thu, 22 Jul 2021 11:13:11 +0000</pubDate>
      <link>https://dev.to/kathanvakharia/arrays-question-reverse-an-array-5ann</link>
      <guid>https://dev.to/kathanvakharia/arrays-question-reverse-an-array-5ann</guid>
      <description>&lt;p&gt;In this series of posts, I will discuss coding questions on the &lt;code&gt;Arrays&lt;/code&gt; Data structure.&lt;br&gt;
The posts in this series will be organized in the following way,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Question Link ❓&lt;/li&gt;
&lt;li&gt;Possible Explanation 📝&lt;/li&gt;
&lt;li&gt;Documented C++ Code 🧹&lt;/li&gt;
&lt;li&gt;Time and Space Complexity Analysis ⌛🌌&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;
  &lt;a href="#the-question"&gt;
  &lt;/a&gt;
  The Question
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.hackerearth.com/practice/data-structures/arrays/1-d/practice-problems/algorithm/print-array-in-reverse/"&gt;https://www.hackerearth.com/practice/data-structures/arrays/1-d/practice-problems/algorithm/print-array-in-reverse/&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;💡 Give yourself at least 15-20 mins to figure out the solution :)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;
  &lt;a href="#explanation"&gt;
  &lt;/a&gt;
  Explanation
&lt;/h2&gt;

&lt;p&gt;The idea is to maintain two index variables &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt;, initially pointing to the &lt;em&gt;first&lt;/em&gt; element and &lt;em&gt;last&lt;/em&gt; element of the array respectively.&lt;/p&gt;

&lt;p&gt;And then, we will &lt;em&gt;swap&lt;/em&gt; values in the following order: &lt;strong&gt;(first, last)&lt;/strong&gt; → &lt;strong&gt;(second, second-last)&lt;/strong&gt; → &lt;strong&gt;(third, third, third-last)&lt;/strong&gt; ....until we reach the &lt;em&gt;middle&lt;/em&gt; element of the array. &lt;/p&gt;

&lt;p&gt;Here's the pseudo-code,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    while start &amp;lt; end:
            swap(arr[start], arr[end])
            start = start + 1 //move start ahead by one step
            end = end - 1 //move end back by one step
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;💡 If you are wondering why there's &lt;code&gt;&amp;lt;&lt;/code&gt; instead of &lt;code&gt;≤&lt;/code&gt; ? It's because &lt;code&gt;start&lt;/code&gt; will be equal to &lt;code&gt;end&lt;/code&gt; only in the case of &lt;em&gt;odd&lt;/em&gt; length arrays and they both will point to the &lt;em&gt;middle&lt;/em&gt; element of the array. And it does no good to swap it with itself as the array is already reversed by then.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#still-confused"&gt;
  &lt;/a&gt;
  Still confused?
&lt;/h3&gt;

&lt;p&gt;Assume index starts from zero.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Think what happens when &lt;code&gt;arr.length = 3&lt;/code&gt;(&lt;em&gt;odd&lt;/em&gt;), after one iteration, &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; both will point to index=1 and array is already reversed.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Think what happens when &lt;code&gt;arr.length = 4&lt;/code&gt;(&lt;em&gt;even&lt;/em&gt;), after two iteration, &lt;code&gt;start(2)&lt;/code&gt; will be greater than &lt;code&gt;end(1)&lt;/code&gt; and array will be reversed.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#c-code"&gt;
  &lt;/a&gt;
  C++ Code
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#solution"&gt;
  &lt;/a&gt;
  Solution
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="cp"&gt;#include&amp;lt;iostream&amp;gt;
&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;reverse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="c1"&gt;//untill we reach the middle &lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="c1"&gt;//swap arr[start] and arr[end]&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;temp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
        &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
        &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="c1"&gt;//move start ahead&lt;/span&gt;
        &lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="c1"&gt;//move end back&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;//driver code&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;cin&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="n"&gt;cin&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="n"&gt;reverse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="n"&gt;cout&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#complexity-analysis"&gt;
  &lt;/a&gt;
  Complexity Analysis
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;N&lt;/code&gt;: length of the array&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#time-complexity-on"&gt;
  &lt;/a&gt;
  Time Complexity: O(N)
&lt;/h3&gt;

&lt;p&gt;Since we are iterating nearly N/2 times, thus time will be O(N/2)  = O(N).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#space-complexity-o1"&gt;
  &lt;/a&gt;
  Space Complexity: O(1)
&lt;/h3&gt;

&lt;p&gt;We didn't use any extra space.&lt;/p&gt;

</description>
      <category>algorithms</category>
      <category>arrays</category>
      <category>codenewbie</category>
      <category>cpp</category>
    </item>
    <item>
      <title>Debugging JavaScript, DOM, CSS and accessing the browser console without leaving Visual Studio Code</title>
      <author>Christian Heilmann</author>
      <pubDate>Thu, 22 Jul 2021 10:58:27 +0000</pubDate>
      <link>https://dev.to/codepo8/debugging-javascript-dom-css-and-accessing-the-browser-console-without-leaving-visual-studio-code-250i</link>
      <guid>https://dev.to/codepo8/debugging-javascript-dom-css-and-accessing-the-browser-console-without-leaving-visual-studio-code-250i</guid>
      <description>&lt;p&gt;Now that &lt;a href="https://code.visualstudio.com"&gt;Visual Studio Code&lt;/a&gt; has an in-built JavaScript debugger, it has become incredibly convenient to debug your project without leaving the editor. You can debug JavaScript, tweak CSS and the DOM and interact with the browser Console right inside VS Code. And you don't need to know which extensions to install as the editor guides you along the way. &lt;/p&gt;

&lt;p&gt;Under the hood, this uses the &lt;a href="https://marketplace.visualstudio.com/items?itemName=ms-vscode.js-debug"&gt;JS Debugger&lt;/a&gt; and the &lt;a href="https://aka.ms/devtools-for-code%20extensions"&gt;Edge Tools for VS Code&lt;/a&gt;. Here's what the flow looks like:&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/UqFOICZRPAo"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;If you haven't got the Edge Tools extension installed, VS Code will prompt you to do so the first time, as shown in this screencast:&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/1-6fRdqyoA0"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;In addition to breakpoint, DOM and CSS debugging, Visual Studio Code's Debug Console now also is the same &lt;a href="https://docs.microsoft.com/microsoft-edge/devtools-guide-chromium/console/"&gt;Console&lt;/a&gt; you normally get in the browser. You can access the window object of the browser instance and use all the &lt;a href="https://docs.microsoft.com/microsoft-edge/devtools-guide-chromium/console/utilities"&gt;Console Utilty Methods&lt;/a&gt; like &lt;code&gt;$&lt;/code&gt; and &lt;code&gt;$$&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/IF69nJ7El2Y"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;To run the debugger automatically on your project, you need to create a &lt;code&gt;launch.json&lt;/code&gt; file and define the debugger as the launch type. The Edge Tools extension can also do that automatically for you. If your application is not on &lt;code&gt;localhost:8080&lt;/code&gt; you need to tweak the &lt;code&gt;url&lt;/code&gt; parameter.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;version&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;0.2.0&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;configurations&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;type&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;pwa-msedge&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;request&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;launch&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Launch Edge against localhost&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;url&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;http://localhost:8080&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;webRoot&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;${workspaceFolder}&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you want to see this in action, you can &lt;a href="https://github.com/codepo8/simple-to-do"&gt;download/fork the demo to-do app&lt;/a&gt; I used in the screencasts. &lt;/p&gt;

&lt;p&gt;What do you think? Anything you're still missing in that workflow? &lt;a href="https://github.com/microsoft/vscode-edge-devtools/issues"&gt;File an issue on GitHub&lt;/a&gt; and tell us about it!&lt;/p&gt;

</description>
      <category>visualstudiocode</category>
      <category>debugging</category>
      <category>browsers</category>
    </item>
    <item>
      <title>Connect Terraform to Azure Devops Git Repos over SSH</title>
      <author>Marcel.L</author>
      <pubDate>Thu, 22 Jul 2021 10:52:57 +0000</pubDate>
      <link>https://dev.to/pwd9000/connect-terraform-to-azure-devops-git-repos-over-ssh-163c</link>
      <guid>https://dev.to/pwd9000/connect-terraform-to-azure-devops-git-repos-over-ssh-163c</guid>
      <description>&lt;h2&gt;
  &lt;a href="#terraform-module-sources"&gt;
  &lt;/a&gt;
  Terraform module sources?
&lt;/h2&gt;

&lt;p&gt;Terraform supports many different &lt;a href="https://www.terraform.io/docs/language/modules/sources.html"&gt;Module Sources&lt;/a&gt;. In todays tutorial we look at how we can configure an Azure DevOps repo with SSH and use this repo as a module source in terraform. We will also take a look at how we can use the &lt;strong&gt;install SSH key&lt;/strong&gt; DevOps task in a pipeline that runs terraform so that the DevOps agent running the terraform deployment can connect to the DevOps repo as a source over SSH.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-1-prepare-ssh-key"&gt;
  &lt;/a&gt;
  Step 1: Prepare SSH Key
&lt;/h2&gt;

&lt;p&gt;First we have to create a SSH key pair:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Install Git for windows.&lt;/li&gt;
&lt;li&gt;In a powershell console run: &lt;code&gt;ssh-keygen&lt;/code&gt;. This will create a private key: &lt;code&gt;id_rsa&lt;/code&gt; and a public key: &lt;code&gt;id_rsa.pub&lt;/code&gt; under the following path: &lt;code&gt;%UserProfile%/.ssh&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;If a passphrase was used in the creation of the key pair, make a note of the passphrase as we will need it later on.&lt;/li&gt;
&lt;li&gt;Next run: &lt;code&gt;ssh-keyscan -H -t rsa ssh.dev.azure.com &amp;gt; $env:userprofile/.ssh/known_hosts&lt;/code&gt;. The content of the file will be used later on in the setup of the &lt;a href="https://github.com/MicrosoftDocs/azure-devops-docs/blob/master/docs/pipelines/tasks/utility/install-ssh-key.md"&gt;Install SSH Key&lt;/a&gt; devops task in our DevOps pipeline.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---jWDCrIv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/master/posts/Devops-Terraform-Git-Ssh/assets/Sshkey01.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---jWDCrIv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/master/posts/Devops-Terraform-Git-Ssh/assets/Sshkey01.png" alt="Sshkey01"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-2-prepare-azure-devops"&gt;
  &lt;/a&gt;
  Step 2: Prepare Azure Devops
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Copy the private key file created in the previous step &lt;code&gt;id_rsa&lt;/code&gt; into azure &lt;strong&gt;pipelines -&amp;gt; Library -&amp;gt; Secure files&lt;/strong&gt;. The file can be renamed to make it more friendly to use later on in the &lt;a href="https://github.com/MicrosoftDocs/azure-devops-docs/blob/master/docs/pipelines/tasks/utility/install-ssh-key.md"&gt;Install SSH Key&lt;/a&gt; devops task. In my case I have renamed my private key to &lt;code&gt;terraform_rsa&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wR8NkdM_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/master/posts/Devops-Terraform-Git-Ssh/assets/securefile01.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wR8NkdM_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/master/posts/Devops-Terraform-Git-Ssh/assets/securefile01.png" alt="securefile01"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Under the &lt;strong&gt;user settings&lt;/strong&gt; in Azure Devops go to SSH public keys and select &lt;strong&gt;Add&lt;/strong&gt;. Give a name and add the contents of the file created &lt;code&gt;id_rsa.pub&lt;/code&gt;. In my case I have renamed my public key to &lt;code&gt;terraform_rsa.pub&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3aLPJbfx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/master/posts/Devops-Terraform-Git-Ssh/assets/sshpub01.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3aLPJbfx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/Pwd9000-ML/blog-devto/master/posts/Devops-Terraform-Git-Ssh/assets/sshpub01.gif" alt="sshpub01"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-3-how-to-use-install-ssh-key-devops-task"&gt;
  &lt;/a&gt;
  Step 3: How to use &lt;em&gt;Install SSH Key&lt;/em&gt; devops task
&lt;/h2&gt;

&lt;p&gt;When using an Azure DevOps pipeline to execute terraform code from a DevOps agent referencing an Azure Devops git Repo as a module source, we can make use of the &lt;a href="https://github.com/MicrosoftDocs/azure-devops-docs/blob/master/docs/pipelines/tasks/utility/install-ssh-key.md"&gt;Install SSH Key&lt;/a&gt; devops task to install the SSH key pair we just created onto the DevOps agent that will be executing the terraform code.&lt;/p&gt;

&lt;p&gt;We will create a few variables next. These variables can either be created inside of a &lt;a href="https://docs.microsoft.com/en-us/azure/devops/pipelines/library/variable-groups?view=azure-devops&amp;amp;tabs=yaml#use-a-variable-group"&gt;variable group&lt;/a&gt; or a &lt;a href="https://docs.microsoft.com/en-us/azure/key-vault/general/overview"&gt;key vault&lt;/a&gt; and accessed using the &lt;a href="https://docs.microsoft.com/en-us/azure/devops/pipelines/release/azure-key-vault?view=azure-devops"&gt;Azure key vault task&lt;/a&gt; in our devops pipeline.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create a &lt;strong&gt;ssh public key&lt;/strong&gt; variable that will be used in our pipeline: &lt;code&gt;terraform-git-ssh-pub&lt;/code&gt; and add the content of file &lt;code&gt;id_rsa.pub&lt;/code&gt;. This can also be stored as a secret in Azure key vault instead and can be accessed as variables in our pipeline using the &lt;strong&gt;azure key vault&lt;/strong&gt; &lt;a href="https://docs.microsoft.com/en-us/azure/devops/pipelines/release/azure-key-vault?view=azure-devops"&gt;devops task&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Create a &lt;strong&gt;known hosts&lt;/strong&gt; variable that will be used in our pipeline: &lt;code&gt;git_ssh_known_hosts&lt;/code&gt; and add the content of file &lt;code&gt;known_hosts&lt;/code&gt; created earlier with &lt;code&gt;ssh-keyscan&lt;/code&gt;. This can also be stored as a secret in Azure key vault instead and can be accessed as variables in our pipeline using the &lt;strong&gt;azure key vault&lt;/strong&gt; &lt;a href="https://docs.microsoft.com/en-us/azure/devops/pipelines/release/azure-key-vault?view=azure-devops"&gt;devops task&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;(Optional) If a passphrase was used in the generation of the ssh key pair in step one, you can create a variable that will be used in our pipeline: &lt;code&gt;git_ssh_pass&lt;/code&gt; and add the secret value. This can also be stored as a secret in Azure key vault instead and can be accessed as variables in our pipeline using the &lt;strong&gt;azure key vault&lt;/strong&gt; &lt;a href="https://docs.microsoft.com/en-us/azure/devops/pipelines/release/azure-key-vault?view=azure-devops"&gt;devops task&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Create the &lt;a href="https://github.com/MicrosoftDocs/azure-devops-docs/blob/master/docs/pipelines/tasks/utility/install-ssh-key.md"&gt;Install SSH Key&lt;/a&gt; devops task and use the following parameters:&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
&lt;li&gt;Display Name: Install an SSH key&lt;/li&gt;
&lt;li&gt;Known Hosts Entry: $(git_ssh_known_hosts)&lt;/li&gt;
&lt;li&gt;SSH Public Key: $(terraform-git-ssh-pub)&lt;/li&gt;
&lt;li&gt;Passphrase: $(git_ssh_pass) (Note: if no passphrase was used when the ssh key pair was generated, this can be left as [none])&lt;/li&gt;
&lt;li&gt;SSH Key: terraform_rsa (This was the private key we uploaded into secure files library in step2, which we renamed from &lt;code&gt;id_rsa&lt;/code&gt;)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Thats it, the &lt;a href="https://github.com/MicrosoftDocs/azure-devops-docs/blob/master/docs/pipelines/tasks/utility/install-ssh-key.md"&gt;Install SSH Key&lt;/a&gt; Devops task will now install the SSH key on the Azure DevOps agent, allowing our terraform deployment to connect securely to our Azure DevOps git repo hosting our modules over ssh.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#devops-yaml-pipeline-example"&gt;
  &lt;/a&gt;
  Devops Yaml pipeline example
&lt;/h3&gt;

&lt;p&gt;Here is a yaml pipeline example of the tasks/steps to read in secrets as variables from the &lt;strong&gt;key vault&lt;/strong&gt; task and including the &lt;strong&gt;install SSH keys&lt;/strong&gt; task.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="c1"&gt;### Link to key vault.&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;task&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;AzureKeyVault@1&lt;/span&gt;
    &lt;span class="na"&gt;displayName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Keyvault&lt;/span&gt;
    &lt;span class="na"&gt;inputs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;azureSubscription&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;TerraformSP&lt;/span&gt; &lt;span class="c1"&gt;#ADO service connection (Service principal)&lt;/span&gt;
      &lt;span class="na"&gt;KeyVaultName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;mykeyvault'&lt;/span&gt;
      &lt;span class="na"&gt;secretsFilter&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;*'&lt;/span&gt;
      &lt;span class="na"&gt;runAsPreJob&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;

  &lt;span class="c1"&gt;### Install SSH key on ADO agent to access terraform modules git repo.&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;task&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;InstallSSHKey@0&lt;/span&gt;
    &lt;span class="na"&gt;displayName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Install&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;an&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;SSH&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;key'&lt;/span&gt;
    &lt;span class="na"&gt;inputs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;knownHostsEntry&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;$(git_ssh_known_hosts)'&lt;/span&gt; &lt;span class="c1"&gt;#Variable pulled in from key vault via key vault task above.&lt;/span&gt;
      &lt;span class="na"&gt;sshPublicKey&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;$(terraform-git-ssh-pub)'&lt;/span&gt; &lt;span class="c1"&gt;#Variable pulled in from key vault via key vault task above.&lt;/span&gt;
      &lt;span class="na"&gt;sshPassphrase&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;$(git_ssh_pass)'&lt;/span&gt; &lt;span class="c1"&gt;#Variable pulled in from key vault via key vault task above.&lt;/span&gt;
      &lt;span class="na"&gt;sshKeySecureFile&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;terraform_rsa'&lt;/span&gt; &lt;span class="c1"&gt;#This was originally renamed from id_rsa and uploaded into secure files library on the project hosting our TF modules repo&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#terraform-source-module-example"&gt;
  &lt;/a&gt;
  Terraform source module example
&lt;/h3&gt;

&lt;p&gt;Here is an example of how we can reference our Azure DevOps repo containing our module code in our terraform deployment.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight hcl"&gt;&lt;code&gt;&lt;span class="nx"&gt;module&lt;/span&gt; &lt;span class="s2"&gt;"mymodule"&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="nx"&gt;source&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"git::git@ssh.dev.azure.com:v3/Org/Project/repo"&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I hope you have enjoyed this post and have learned something new. You can also find the code samples used in this blog post on my &lt;a href="https://github.com/Pwd9000-ML/blog-devto/tree/master/posts/Devops-Terraform-Git-Ssh/code"&gt;Github&lt;/a&gt;. ❤️&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#author"&gt;
  &lt;/a&gt;
  &lt;em&gt;Author&lt;/em&gt;
&lt;/h3&gt;

&lt;p&gt;Marcel.L - &lt;a href="mailto:pwd9000@hotmail.co.uk"&gt;pwd9000@hotmail.co.uk&lt;/a&gt;&lt;/p&gt;

</description>
      <category>tutorial</category>
      <category>azure</category>
      <category>productivity</category>
      <category>devops</category>
    </item>
    <item>
      <title>Quick CSS trick : Make gradient Text Stroke.</title>
      <author>Modern Web</author>
      <pubDate>Thu, 22 Jul 2021 10:12:45 +0000</pubDate>
      <link>https://dev.to/kunaal438/quick-css-trick-make-gradient-text-stroke-1ila</link>
      <guid>https://dev.to/kunaal438/quick-css-trick-make-gradient-text-stroke-1ila</guid>
      <description>&lt;p&gt;Hello, welcome. Today we'll see a quick CSS trick. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#gradient-text-stroke"&gt;
  &lt;/a&gt;
  Gradient Text Stroke
&lt;/h1&gt;

&lt;p&gt;Wonder, how to make a gradient text stroke ? Let's see how you can make one very easily.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#video-tutorial"&gt;
  &lt;/a&gt;
  Video Tutorial
&lt;/h1&gt;

&lt;p&gt;If you want, you can watch quick tutorial video on youtube.&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/fXOjhxYogtM"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#lets-start"&gt;
  &lt;/a&gt;
  Let's start
&lt;/h1&gt;

&lt;p&gt;So, first thing we need a text, to start with. So, after writing basic HTML structure. Create &lt;code&gt;h1&lt;/code&gt; element inside body or you can create any text element.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;h1&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;gradient&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now add basic styling.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;box-sizing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;border-box&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;'roboto'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#eee&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h6&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  Output
&lt;/h6&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XP1svCNs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8ro4zr8sjah5rnkcbby0.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XP1svCNs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8ro4zr8sjah5rnkcbby0.PNG" alt="Capture-2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can see, we centered our Text element. right ? So, now style out text.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.text&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;150px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#eee&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;text-transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;capitalize&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h6&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  output
&lt;/h6&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RjrlPK4T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7gk7ki6jx69qnchzc7qt.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RjrlPK4T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7gk7ki6jx69qnchzc7qt.PNG" alt="Capture-3"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Notice, background color and text color both are same here.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now, add some gradient background to the text.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.text&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c"&gt;/*previous styles*/&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;linear-gradient&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-45deg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;#eeaa52&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;#e73c6f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;#2394d5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;#2af3b7&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nl"&gt;background-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;200%&lt;/span&gt; &lt;span class="m"&gt;200%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h6&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  output
&lt;/h6&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NZN4PrtS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xtrxdj5khqb613s6eagw.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NZN4PrtS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xtrxdj5khqb613s6eagw.PNG" alt="Capture-4"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But, we don't want background color, right ? so for that use this property.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.text&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c"&gt;/*previous styles*/&lt;/span&gt;
    &lt;span class="nl"&gt;-webkit-background-clip&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;text&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What is this property for, this will only show background color within text. Means like this.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BRXKCcQD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j6xkh5p0kxmp5g9tdqwa.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BRXKCcQD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j6xkh5p0kxmp5g9tdqwa.PNG" alt="Capture-5"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But this will only work if, text color is set to transparent. But in our case. Our text color is not transparent, because of that we'll not be able to see any gradient color. I hope it makes sense.&lt;/p&gt;

&lt;p&gt;Now the last step, use &lt;code&gt;-webkit-text-stroke&lt;/code&gt; property.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.text&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c"&gt;/*previous styles*/&lt;/span&gt;
    &lt;span class="nl"&gt;-webkit-text-stroke&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;8px&lt;/span&gt; &lt;span class="nb"&gt;transparent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;here you can give any stroke color after 8px (stroke width) but by giving transparent, you are making space within the text, so our background gradient should be visible.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h6&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  output
&lt;/h6&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PfFY0q2c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qemzepy4mdsoywbm8r87.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PfFY0q2c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qemzepy4mdsoywbm8r87.PNG" alt="Capture-6"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So, it's done. I hope you understood each and everything. If you have doubt or I missed some point let me know in the comments.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#articles-you-may-found-useful"&gt;
  &lt;/a&gt;
  Articles you may found Useful
&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://dev.to/kunaal438/css-position-everything-you-need-for-good-developer-pfh"&gt;CSS Positions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/kunaal438/media-query-everything-you-need-for-responsive-design-b8g"&gt;CSS Media Query&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/kunaal438/display-flex-complete-guide-on-css-flex-box-2021-5bi2"&gt;CSS flex box&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you like, you can subscribe my youtube channel, and follow me on instagram. I create awesome web contents. [&lt;a href="https://www.youtube.com/c/modern_web?sub_confirmation=1"&gt;Subscribe&lt;/a&gt;], [&lt;a href="https://www.instagram.com/modern_web_channel/"&gt;Instagram&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;Thanks For reading.&lt;/p&gt;

</description>
      <category>css</category>
      <category>html</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Windows 11, but for Web</title>
      <author>Piyush Suthar</author>
      <pubDate>Thu, 22 Jul 2021 09:47:24 +0000</pubDate>
      <link>https://dev.to/piyush/windows-11-but-for-web-22h1</link>
      <guid>https://dev.to/piyush/windows-11-but-for-web-22h1</guid>
      <description>&lt;p&gt;Hello! &lt;/p&gt;

&lt;p&gt;Recently I started creating a clone of Windows 11 for web in Preact. My main focus while creating this clone was performance. It must work smoothly even on a low end device (like mine).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Kc7bvm9i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j9f8wowzy388tsvjss1p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Kc7bvm9i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j9f8wowzy388tsvjss1p.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The UI isn't complete yet. I'll be working on it in my free time. My focus while creating this is maintainability and Performance. Anyone with a basic level react knowledge should easily understand the code.&lt;/p&gt;

&lt;p&gt;Here's the stack I used:-&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Preact (For smooth runtime performance)&lt;/li&gt;
&lt;li&gt;ViteJS (For smooth development performance)&lt;/li&gt;
&lt;li&gt;CSS modules (I know frameworks would have been better. But I wanted some control and Performance Babe!)

&lt;ul&gt;
&lt;li&gt;TypeScript (Obviously :)&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Try it out here -&amp;gt; &lt;a href="https://win11.vercel.app"&gt;Windows 11 Web&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I'll recommend you to contribute or atleast check the code. You'll learn something :)&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/PiyushSuthar"&gt;
        PiyushSuthar
      &lt;/a&gt; / &lt;a href="https://github.com/PiyushSuthar/Windows-11-Web"&gt;
        Windows-11-Web
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Awe-amazing Windows 11 clone. Oh wait, Not for your Computer, but for the web! ⚡
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Windows 11 Web&lt;/h1&gt;
&lt;p&gt;Awe-amazing Windows 11 clone. Oh wait, Not for your Computer, but for the web! ⚡&lt;/p&gt;
&lt;p&gt;Try Windows 11 Web:- &lt;a href="https://win11.vercel.app/" rel="nofollow"&gt;win11.vercel.app&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This isn't ready yet, and who knows when it will XD&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;
Why?&lt;/h3&gt;
&lt;p&gt;Microsoft launched their newest version of Windows and I was very excited to test it out. So I made this!&lt;/p&gt;
&lt;p&gt;BTW, This project was inspired by &lt;a href="https://github.com/PuruVJ/macos-web"&gt;Macos Web&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
Stack&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://preactjs.com/" rel="nofollow"&gt;Preact&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://vitejs.dev/" rel="nofollow"&gt;ViteJS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
Acknowledgement&lt;/h3&gt;
&lt;p&gt;Thanks to &lt;a href="https://twitter.com/JanaSunrise" rel="nofollow"&gt;Sunrit Jana&lt;/a&gt; for writing an awesome description for this project! and to &lt;a href="https://twitter.com/BeingMani97" rel="nofollow"&gt;Manivannan&lt;/a&gt; for sharing icons with me!&lt;/p&gt;
&lt;p&gt;And to all the Super-Awesome contributors!&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;code&gt;(tbh, finding suitable icons is the most difficult part of making this project)&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h4&gt;
More&lt;/h4&gt;
&lt;p&gt;Some similar, but super awesome projects!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://winxp.vercel.app/" rel="nofollow"&gt;Windows XP Web&lt;/a&gt; by &lt;a href="https://github.com/ShizukuIchi/winXP"&gt;sh1zuku&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://macos.now.sh/" rel="nofollow"&gt;MacOS Web&lt;/a&gt; by &lt;a href="https://github.com/PuruVJ/macos-web"&gt;Puru Vijay&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://vivek9patel.github.io/" rel="nofollow"&gt;Ubuntu Web&lt;/a&gt; by &lt;a href="https://github.com/vivek9patel/vivek9patel.github.io"&gt;Vivek Patel&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://windows11.webflow.io/" rel="nofollow"&gt;Windows 11 web, but with no-code&lt;/a&gt; by &lt;a href="https://twitter.com/BeingMani97" rel="nofollow"&gt;Manivannan&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/PiyushSuthar/Windows-11-Web"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


&lt;h3&gt;
  &lt;a href="#demo"&gt;
  &lt;/a&gt;
  Demo
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Kc7bvm9i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j9f8wowzy388tsvjss1p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Kc7bvm9i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j9f8wowzy388tsvjss1p.png" alt="Light Mode Start Menu"&gt;&lt;/a&gt;&lt;br&gt;
Start Menu (Light Mode)&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9Vm-UJge--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6yzniqgprl9gl95luick.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9Vm-UJge--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6yzniqgprl9gl95luick.png" alt="Dark Mode Start Menu"&gt;&lt;/a&gt;&lt;br&gt;
Start menu (Dark Mode)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ecvZuXTi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kgwmu0cc8v9ogde6ml2k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ecvZuXTi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kgwmu0cc8v9ogde6ml2k.png" alt="Widget Light Mode"&gt;&lt;/a&gt;&lt;br&gt;
Widget (Light Mode)&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_wsZf1Yj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ot1g5tf27ocl4a0yi0x6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_wsZf1Yj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ot1g5tf27ocl4a0yi0x6.png" alt="Widget Dark Mode"&gt;&lt;/a&gt;&lt;br&gt;
Widget (Dark mode)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GQrQPVHp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rn2bqanqchk9w204oywo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GQrQPVHp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rn2bqanqchk9w204oywo.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
 Windows (Light Mode)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1tFlDC7S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xsifqi86trfgiio3i765.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1tFlDC7S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xsifqi86trfgiio3i765.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
Context Menu &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#end"&gt;
  &lt;/a&gt;
  End
&lt;/h3&gt;

&lt;p&gt;You can follow me on twitter to follow the progress &lt;a href="https://twitter.com/piyushsthr"&gt;@piyushsthr&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>react</category>
      <category>css</category>
      <category>showdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Heatwave &amp; Brexit - WEEK 10</title>
      <author>iqraraza</author>
      <pubDate>Thu, 22 Jul 2021 09:25:42 +0000</pubDate>
      <link>https://dev.to/iqraraza/heatwave-brexit-week-10-1bk8</link>
      <guid>https://dev.to/iqraraza/heatwave-brexit-week-10-1bk8</guid>
      <description>&lt;p&gt;The second week in Frontend exposed the concepts of Data-fetching, styling, routers, react context API and optimistic rendering. All concepts that are completely new to me and will take a little time to understand and implement. &lt;/p&gt;

&lt;p&gt;It was the usual drill this week, pair programming to prep ourselves with the solo front end project, next week. The fear of that was looming over me all week, not to mention the project phase was something everyone was anxious about. I had to keep reminding myself to take one step at a time.&lt;/p&gt;

&lt;p&gt;This week flew by without me even realising. House renovations were at a stand still. Thank you Brexit ! No windows, no frames, no builders, no work. &lt;/p&gt;

&lt;p&gt;Also the uninvited heatwave hit and studying in 30 degrees heat is no fun. &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>codenewbie</category>
      <category>beginners</category>
      <category>react</category>
    </item>
    <item>
      <title>Programmers That Don't Blog Should Start Right Now</title>
      <author>Adrian Twarog</author>
      <pubDate>Thu, 22 Jul 2021 08:50:31 +0000</pubDate>
      <link>https://dev.to/adriantwarog/programmers-that-don-t-blog-should-start-right-now-295c</link>
      <guid>https://dev.to/adriantwarog/programmers-that-don-t-blog-should-start-right-now-295c</guid>
      <description>&lt;p&gt;&lt;strong&gt;Programmers that don't blog should start right now.&lt;/strong&gt; You're future self with thank you when your blog helps you getting a better job, earn more money and of course, have an easier time learning new concepts.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Your blog is your portfolio&lt;/li&gt;
&lt;li&gt;It provides a way to share your knowledge&lt;/li&gt;
&lt;li&gt;You can use your blog is a way to make more money&lt;/li&gt;
&lt;li&gt;Blogging is a great way to help you learn&lt;/li&gt;
&lt;li&gt;Blogging is a way to interact with other programmers&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/fxLFjOa-9UY"&gt;
&lt;/iframe&gt;
&lt;br&gt;
&lt;/p&gt;
&lt;center&gt;&lt;a href="https://youtu.be/fxLFjOa-9UY"&gt;Programmers That Don't Blog Should Start Right Now&lt;/a&gt;&lt;/center&gt;

&lt;p&gt;Programmers are often judged by their past work. Blogs are a great way to show prospective employers your work and skills. This is especially true for programmers who are self-taught and don't have a formal education. I have found that employers are often impressed by self-learning programmers.&lt;/p&gt;

&lt;p&gt;If you haven't taken the time to blog about your work, you're missing out on a terrific opportunity to show prospective employers what you're capable of. I would stongly recommend that you get started right now. What are you waiting for?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#it-provides-a-way-to-share-your-knowledge"&gt;
  &lt;/a&gt;
  It provides a way to share your knowledge
&lt;/h2&gt;

&lt;p&gt;I'm sure that right now you probably have a lot of knowledge in your head that you would like to share with other people. Blogging is an excellent way to do that.&lt;/p&gt;

&lt;p&gt;Here are some of the things that you can share with your readers:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Your experience&lt;/li&gt;
&lt;li&gt;Your knowledge&lt;/li&gt;
&lt;li&gt;Your opinions&lt;/li&gt;
&lt;li&gt;Your ideas&lt;/li&gt;
&lt;li&gt;Your mistakes&lt;/li&gt;
&lt;li&gt;Your thoughts&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--inYWN1zR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g63a8pk94lgdcx7ivh89.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--inYWN1zR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g63a8pk94lgdcx7ivh89.gif" alt="Programmers should blog"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can use your blog is a way to make more money&lt;/p&gt;

&lt;p&gt;I believe that most people don't blog because they don't see how it can be used to make more money. Here are some of the ways that you can use your blog to make more money:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You can use your blog as a form of self-promotion&lt;/li&gt;
&lt;li&gt;You can use your blog as a way to get money from advertisements&lt;/li&gt;
&lt;li&gt;You can use your blog as a way to get money from sponsors&lt;/li&gt;
&lt;li&gt;You can use your blog as a way to promote your products&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#blogging-is-a-great-way-to-help-you-learn"&gt;
  &lt;/a&gt;
  Blogging is a great way to help you learn
&lt;/h2&gt;

&lt;p&gt;I believe that the best way to learn a new programming concept is to share your thoughts and ideas. Blogging is a great way to do that because you can write about your thoughts and you can also get feedback from the people who read your blog.&lt;/p&gt;

&lt;p&gt;When I write a blog post, I often find that I have to think about the concepts that I'm writing about and I can't help but think about them more.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lVNOuMyC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5d5dzdyy0gvfspmsk0tg.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lVNOuMyC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5d5dzdyy0gvfspmsk0tg.gif" alt="Coders should blog"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#blogging-is-a-way-to-interact-with-other-programmers"&gt;
  &lt;/a&gt;
  Blogging is a way to interact with other programmers
&lt;/h2&gt;

&lt;p&gt;I believe that blogging is a great way to have a voice in the programming community. Here are some of the ways that you can use your blog to interact with other programmers:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You can show the things that you have learned&lt;/li&gt;
&lt;li&gt;You can talk about your ideas&lt;/li&gt;
&lt;li&gt;You can share your opinions&lt;/li&gt;
&lt;li&gt;You can get feedback from your readers&lt;/li&gt;
&lt;li&gt;You can help other programmers&lt;/li&gt;
&lt;li&gt;You can offer your knowledge&lt;/li&gt;
&lt;li&gt;You can answer questions&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#i-started-blogging"&gt;
  &lt;/a&gt;
  I started blogging
&lt;/h2&gt;

&lt;p&gt;I started blogging, the first step was surprisingly easy but you need to make sure you find a good blogging platform. There were lots of options out there, like medium, which was already established for writing articles, but locked you into their platform and wasn't very coder friendly, especially for code snippets.&lt;/p&gt;

&lt;p&gt;I also saw other places that let you post like devto, but those aren't really for blogging, and more akin to things like reddit.&lt;/p&gt;

&lt;p&gt;The option I decided on was &lt;a href="https://hashnode.com/?source=adriantwarog"&gt;Hashnode&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For those who haven't heard about it, it was one of the newer platforms, and this means that you get the opportunity to ride the wave of growth that comes along with that. If you want to get noticed, I would join in now because I can see this platform becoming as large as freeCodeCamp and other communities specifically for developers.&lt;/p&gt;

&lt;p&gt;And the reason this was possible is because they combine of both your own personally blog, alongside a community of developer blogs that show up as a feed. This means that your articles will be recommended to others while also remaining your own. I wanted to give them a try.&lt;/p&gt;

&lt;p&gt;I registered the domain &lt;a href="https://adriantwarog.com?source=adriantwarog"&gt;adriantwarog.com&lt;/a&gt; recently, and wanted to see how this works. The first step was to setup the DNS to point towards hashnode, and then, that's it!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://adriantwarog.com/programmers-that-dont-blog-should-start-right-now?source=adriantwarog"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zybiq0pW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wqubg3srqn3bu17vgbox.JPG" alt="Coding and blogging"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;I'll be posting the video for this article on Thursday where I'll go more into depth about my journey in content, blogging and why I think it's important, but hope you enjoyed this sneak peek!&lt;/p&gt;

&lt;p&gt;If you haven't already, sign up to Hashnode and try writing your first article, your future self will definitely thank you!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://hashnode.com/?source=adriantwarog"&gt;https://hashnode.com/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#follow-and-support-me"&gt;
  &lt;/a&gt;
  Follow and support me:
&lt;/h2&gt;

&lt;p&gt;Special thanks if you subscribe to my channel :)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCvM5YYWwfLwpcQgbRr68JLQ?sub_confirmation=1"&gt;🎞️ Youtube&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/adrian_twarog"&gt;🐦 Twitter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#want-to-see-more"&gt;
  &lt;/a&gt;
  Want to see more:
&lt;/h2&gt;

&lt;p&gt;I will try to post new great content every day. Here are the latest items:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://adriantwarog.com/40-amazing-developers-you-should-follow-on-youtube"&gt;40 Amazing Developers You Should Follow On Youtube&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://adriantwarog.com/designing-a-website-ui"&gt;Designing a Website UI&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>beginners</category>
      <category>productivity</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>The 3-Second Frontend Developer Test</title>
      <author>Jens Oliver Meiert</author>
      <pubDate>Thu, 22 Jul 2021 08:38:55 +0000</pubDate>
      <link>https://dev.to/j9t/the-3-second-frontend-developer-test-4ep6</link>
      <guid>https://dev.to/j9t/the-3-second-frontend-developer-test-4ep6</guid>
      <description>&lt;p&gt;If you had to hire a frontend developer and had just one question, what would you ask?&lt;/p&gt;

&lt;p&gt;I recommend the 3-second frontend developer test:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Do you validate [your HTML and CSS code]?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A truthful answer gives you more than any other question would do.&lt;/p&gt;

&lt;p&gt;Why is that?&lt;/p&gt;

&lt;p&gt;The answer tells you several important things:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Foundational knowledge: Through validating and the correcting of validation issues, the developer is sure to have and to maintain &lt;em&gt;foundational&lt;/em&gt; knowledge of development with HTML and CSS. A developer not validating &lt;em&gt;may or may not&lt;/em&gt; have this knowledge.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Base quality: Assuming a validation routine, validation ensures base quality of the output. A developer who doesn’t validate, on the other hand, is guaranteed to deliver inferior quality. Guaranteed, because even with perfect HTML and CSS knowledge, they will make mistakes. No one writes perfect code, all the time, and a senior frontend developer is not permitted an excuse from checking their code on issues.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Professional conduct: Frontend development is open to everyone. To this day, there is nothing tangible that differentiates a professional frontend developer from a wannabe or amateur developer. (I’m close to recording how my houseplants write HTML and CSS less invalid than &lt;a href="https://meiert.com/en/blog/valid-html-2021/"&gt;that of the most popular sites&lt;/a&gt;.) Nothing differentiates professional and amateur developers—except for a habit of validation. A developer who doesn’t validate and who doesn’t ship valid code is not a professional developer.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Aspiration: The practice of validation suggests aspiration; the developer is not content with using HTML and CSS incorrectly, with not using them professionally. A developer not validating their HTML and CSS does not demonstrate any more aspiration than a driver revving their car’s engine in the central business district. That may appear competitive, but they’re a far cry from a professional race driver.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Validation is important. Validation is &lt;strong&gt;the&lt;/strong&gt; thing that makes frontend developers &lt;em&gt;professional&lt;/em&gt; frontend developers. Validation is therefore a key criterion for hiring. By applying it, you set a well-defined bar, and you help the field of frontend development &lt;a href="https://meiert.com/en/blog/critical-frontend-development/"&gt;level up as a profession and a craft&lt;/a&gt;. Be a frontend developer who validates and ships valid HTML and CSS; hire frontend developers who validate and ship valid HTML and CSS.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;PS.&lt;br&gt;The few exceptions do prove the rule. They may consist in pending updates to validators, but can also relate to false positives. They do not consist in a developer or an organization putting themselves above the rule—especially not &lt;a href="https://meiert.com/en/blog/good-embed-code/"&gt;when their code is shared&lt;/a&gt;. As the impact is larger, even higher standards apply here. The time of unconditionally accepted sloppiness in professional frontend development must end.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;PPS.&lt;br&gt;If you like another perspective at the benefits of validation, &lt;a href="https://www.htmlvalidator.com/htmlval/whyvalidate.html"&gt;&lt;cite&gt;Why Validate Your Pages?&lt;/cite&gt;&lt;/a&gt; tries to be super-comprehensive. If you like a list of (web-based) validators, &lt;a href="https://uitest.com/analysis/#conformance"&gt;UITest.com’s “conformance” section&lt;/a&gt; features the main ones, covering other languages as well (disclosure: I run UITest.com).&lt;/em&gt;&lt;/p&gt;

</description>
      <category>profession</category>
      <category>html</category>
      <category>css</category>
      <category>codequality</category>
    </item>
    <item>
      <title>Parsing cookie strings in Java with HttpCookie</title>
      <author>Pavel Polívka</author>
      <pubDate>Thu, 22 Jul 2021 08:24:45 +0000</pubDate>
      <link>https://dev.to/pavel_polivka/parsing-cookie-strings-in-java-with-httpcookie-5gol</link>
      <guid>https://dev.to/pavel_polivka/parsing-cookie-strings-in-java-with-httpcookie-5gol</guid>
      <description>&lt;p&gt;The other day I was solving a very complex bug involving some sticky session cookies and multiple reverse proxies. During the bug solving process I discovered that I need to parse set-cookie header strings and do some value filtering in one of our reverse proxies. &lt;/p&gt;

&lt;p&gt;My first idea was to write some kind of regex that would parse the string and get me my desired values. I went with something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;(.*?)=(.*?)($|;|,(?! ))
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here is a &lt;a href="https://regexr.com/62bdp"&gt;regexer link&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Turns out this is more complex than simple regex. One string can contain multiple cookies, optional parameters, etc... Then there is an issue with multiple formats of how the cookie string can look like. I would need to write a lot of logic around my regex.&lt;/p&gt;

&lt;p&gt;Naturally, I am a bit lazy so I started looking into what Java can offer. There must be an existing solution for this. I found a class named &lt;code&gt;HttpCookie&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;Usage is very simple:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;HttpCookie&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;cookies&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;HttpCookie&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;parse&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cookie&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It will parse all the cookies in the string into a collection of objects that have all the needed info.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt; &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// NAME= ... "$Name" style is reserved&lt;/span&gt;
 &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// value of NAME&lt;/span&gt;

 &lt;span class="c1"&gt;// Attributes encoded in the header's cookie fields.&lt;/span&gt;
 &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;comment&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Comment=VALUE ... describes cookie's use&lt;/span&gt;
 &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;commentURL&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// CommentURL="http URL" ... describes cookie's use&lt;/span&gt;
 &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kt"&gt;boolean&lt;/span&gt; &lt;span class="n"&gt;toDiscard&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Discard ... discard cookie unconditionally&lt;/span&gt;
 &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;domain&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Domain=VALUE ... domain that sees cookie&lt;/span&gt;
 &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kt"&gt;long&lt;/span&gt; &lt;span class="n"&gt;maxAge&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;MAX_AGE_UNSPECIFIED&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Max-Age=VALUE ... cookies auto-expire&lt;/span&gt;
 &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Path=VALUE ... URLs that see the cookie&lt;/span&gt;
 &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;portlist&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Port[="portlist"] ... the port cookie may be returned to&lt;/span&gt;
 &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kt"&gt;boolean&lt;/span&gt; &lt;span class="n"&gt;secure&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Secure ... e.g. use SSL&lt;/span&gt;
 &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kt"&gt;boolean&lt;/span&gt; &lt;span class="n"&gt;httpOnly&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// HttpOnly ... i.e. not accessible to scripts&lt;/span&gt;
 &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;version&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Version=1 ... RFC 2965 style&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This saved me a lot of time.&lt;/p&gt;

</description>
      <category>java</category>
    </item>
  </channel>
</rss>
