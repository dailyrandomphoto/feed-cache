<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Top 5 Best Online Code Editors</title>
      <author>CoderZ90</author>
      <pubDate>Tue, 19 Oct 2021 07:02:20 +0000</pubDate>
      <link>https://dev.to/official_fire/top-5-best-online-code-editors-1ei2</link>
      <guid>https://dev.to/official_fire/top-5-best-online-code-editors-1ei2</guid>
      <description>&lt;p&gt;Hello Guys üëã In this blog post i will tell you the top 5 best online code editors (No Downloads!).&lt;/p&gt;

&lt;p&gt;Before we move further please subscribe to my youtube channel ( i post coding tutorials ) - &lt;a href="https://youtube.com/codingfire?sub_confirmation=1"&gt;https://youtube.com/codingfire?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#no-1-stackblitz"&gt;
  &lt;/a&gt;
  &lt;strong&gt;No 1. Stackblitz&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Stackblitz claims to be the fastest, most secure&lt;br&gt;
dev environment on the planet and in my opinion it is actually very fast.. Stackblitz is also very easy to use.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Website Link - &lt;a href="https://stackblitz.com/"&gt;https://stackblitz.com/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0r9-Y7WE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.stack.imgur.com/teoDX.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0r9-Y7WE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.stack.imgur.com/teoDX.png" alt="StackBlitz Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#no-2-codesandbox"&gt;
  &lt;/a&gt;
  &lt;strong&gt;No 2. Codesandbox&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Codesandbox it is pretty famous and i guess many of you who know this website right ?. But for those who dont know let me tell you. it is an online editor for rapid web development. With CodeSandbox, you can prototype quickly, experiment easily, and share creations with a click. Use it to create static sites, full-stack web apps, or components on any device with a web browser.&lt;/p&gt;

&lt;p&gt;The best part of codesandbox is that codesandbox is not only available for pc but also for tab / android devices. Good thing right ? üòä&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Website Link - &lt;a href="https://codesandbox.io/"&gt;https://codesandbox.io/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PuR_Jvw2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codesandbox.io/static/video-e6a34ad1b9555966b2b8be018e27c2a2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PuR_Jvw2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codesandbox.io/static/video-e6a34ad1b9555966b2b8be018e27c2a2.png" alt="Codesandbox Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#no-3-replit"&gt;
  &lt;/a&gt;
  &lt;strong&gt;No 3. Replit&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Replit allows users to write code and build apps and websites using a browser. Not only apps and websites but you can also code python in the browser and more. The site also has various collaborative features, including capability for real-time, multi-user editing with a live chat feed. Coooolll...&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Website Link - &lt;a href="https://replit.com/"&gt;https://replit.com/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5lOcFXbq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://appedus.com/wp-content/uploads/2021/02/Repl.it-Funding-Round-2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5lOcFXbq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://appedus.com/wp-content/uploads/2021/02/Repl.it-Funding-Round-2.png" alt="Replit image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#no-4-codepen"&gt;
  &lt;/a&gt;
  &lt;strong&gt;No 4. Codepen&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Now codepen is not just an online code editor. in codepen you can also share your projects with others, discover other projects, follow each other, fork pens and more&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Website Link - &lt;a href="https://codepen.io"&gt;https://codepen.io&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jElyxoJz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://martech.zone/wp-content/uploads/2021/03/codepen-html-css-javascript-testing.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jElyxoJz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://martech.zone/wp-content/uploads/2021/03/codepen-html-css-javascript-testing.png" alt="Codepen"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#no-5-jsfiddle"&gt;
  &lt;/a&gt;
  &lt;strong&gt;No 5. Jsfiddle&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;JSFiddle is an online IDE service and online community for testing and showcasing user-created and collaborational HTML, CSS and JavaScript code snippets, known as 'fiddles'. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Website Link - &lt;a href="https://jsfiddle.net/"&gt;https://jsfiddle.net/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Gn4m2IWo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s---cRJS076--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_900%2Cq_auto%2Cw_1600/https://thepracticaldev.s3.amazonaws.com/i/5zzr3h0foe04onjolqx7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Gn4m2IWo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s---cRJS076--/c_imagga_scale%2Cf_auto%2Cfl_progressive%2Ch_900%2Cq_auto%2Cw_1600/https://thepracticaldev.s3.amazonaws.com/i/5zzr3h0foe04onjolqx7.png" alt="jsfiddle"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So i think all done. Thankyou for giving your time and reading this blog i hope you liked it&lt;/p&gt;

&lt;p&gt;Also dont forget to subscribe to my youtube channel üòä - &lt;a href="https://youtube.com/codingfire?sub_confirmation=1"&gt;https://youtube.com/codingfire?sub_confirmation=1&lt;/a&gt;  üôè&lt;/p&gt;

</description>
      <category>codequality</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Fetch both price and product data from stripe in a single api call</title>
      <author>Michael Liendo</author>
      <pubDate>Tue, 19 Oct 2021 06:52:04 +0000</pubDate>
      <link>https://dev.to/mtliendo/fetch-both-price-and-product-data-from-stripe-in-a-single-api-call-llo</link>
      <guid>https://dev.to/mtliendo/fetch-both-price-and-product-data-from-stripe-in-a-single-api-call-llo</guid>
      <description>&lt;h2&gt;
  &lt;a href="#use-case"&gt;
  &lt;/a&gt;
  Use Case
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;I want to display products in my web app that show the product's name, description and price. Similar to the below screenshot&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ytdqmZzP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1634622991134/1a9vevy3l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ytdqmZzP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1634622991134/1a9vevy3l.png" alt="product card that shows plant picture, product name and price"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;I want to use the Stripe Dashboard as my source-of-truth.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Upon visiting my simple store, I would like my customers to receive the latest product information.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#the-problem"&gt;
  &lt;/a&gt;
  The Problem
&lt;/h2&gt;

&lt;p&gt;I tried to fetch all the &lt;code&gt;product&lt;/code&gt; data, but that didn't work since it doesn't contain the prices for those products.&lt;/p&gt;

&lt;p&gt;I tried to fetch the &lt;code&gt;price&lt;/code&gt; data, but the &lt;code&gt;product&lt;/code&gt; field only contains an ID for the product and not the rest of the data.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;ü§î "Do I really have to get all of my price data, then iterate over each price just to get the product data?"&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Neither the  &lt;a href="https://stripe.com/docs/api/prices/list?lang=node"&gt;Stripe Price docs&lt;/a&gt;  or the  &lt;a href="https://stripe.com/docs/api/products/list?lang=node"&gt;Product docs&lt;/a&gt; address this use case. A quick google search confirmed my initial approach:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--P4_ifuzv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1634623505257/c1VeNjOHm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P4_ifuzv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1634623505257/c1VeNjOHm.png" alt="StackOverflow answer confirming my initial assumption"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But for such a common task, it just wasn't sitting right with me.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--SFD1cc2c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1352432817511276548/ALy2t2oP_normal.jpg" alt="Michael Liendo profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Michael Liendo
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/mtliendo"&gt;@mtliendo&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      &lt;a href="https://twitter.com/ibrahimcesar"&gt;@ibrahimcesar&lt;/a&gt; &lt;a href="https://twitter.com/stripe"&gt;@stripe&lt;/a&gt; It's so odd that that how I would expect this to work by default isn't the case. Makes me think I'm overlooking something.
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      20:42 PM - 18 Oct 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1450200714664349699" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1450200714664349699" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1450200714664349699" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;h2&gt;
  &lt;a href="#the-solution"&gt;
  &lt;/a&gt;
  The Solution
&lt;/h2&gt;

&lt;p&gt;Special shoutout goes to my buddy  &lt;a href="https://twitter.com/Dayhaysoos"&gt;Nick (@dayhaysoos)&lt;/a&gt;. He let me know that prices can use the &lt;code&gt;expand&lt;/code&gt; parameter to get the corresponding product information. &lt;/p&gt;

&lt;p&gt;After a quick search through the  &lt;a href="https://stripe.com/docs/expand"&gt;Stripe docs for "expand"&lt;/a&gt;, the solution became clear:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Stripe&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;stripe&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Home&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;productPriceData&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;productPriceData&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;display&lt;/span&gt; &lt;span class="nx"&gt;stripe&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getServerSideProps&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;stripe&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Stripe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;STRIPE_SECRET_KEY&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;productPriceData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;stripe&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prices&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;list&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="na"&gt;expand&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;data.product&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="c1"&gt;// üéâ Give me the product data too&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;productPriceData&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;props&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;productPriceData&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Home&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#quick-notes"&gt;
  &lt;/a&gt;
  üóíÔ∏è Quick Notes
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Expand can be used for just about any API call, but will only go 4 levels deep on what it returns.&lt;/li&gt;
&lt;li&gt;It's showcased here, but just to be clear, you can dig into an object with dot-notation: &lt;code&gt;data.product.nestedKey.nestedKey2&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;I was going to use the &lt;code&gt;revalidate&lt;/code&gt; key in &lt;code&gt;getStaticProps&lt;/code&gt; to be cool, but then I realized that if a user refreshes the page, they should &lt;em&gt;always&lt;/em&gt; see the correct price.&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>nextjs</category>
      <category>stripe</category>
    </item>
    <item>
      <title>Infix, prefix, postfix. Is it Matter?</title>
      <author>Natserract</author>
      <pubDate>Tue, 19 Oct 2021 06:49:01 +0000</pubDate>
      <link>https://dev.to/natserract/infix-prefix-postfix-is-it-matter-mbi</link>
      <guid>https://dev.to/natserract/infix-prefix-postfix-is-it-matter-mbi</guid>
      <description>&lt;p&gt;When learning a programming language, of course there are some mandatory things that should not be missed, such as understanding syntax, data types, operators, etc. So in this article, I will discuss about &lt;strong&gt;operators&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Operator_(computer_programming)"&gt;Operator&lt;/a&gt; is actually just a symbol used to perform certain mathematical or logical operations. There are many types of operators, for example: &lt;code&gt;(+)&lt;/code&gt;, &lt;code&gt;(*)&lt;/code&gt;, &lt;code&gt;(++)&lt;/code&gt;. The fact that we will not be able to escape from mathematics in life, especially in mathematical programming language that is &lt;a href="https://en.wikipedia.org/wiki/Functional_programming"&gt;functional programming&lt;/a&gt;. As one mathematician blogger say:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;"After my involving myself in the subject, one thing that stands out is the relatively low distance between thought expressed in my ordinary day-to-day mathematical discourse, and thought expressed in Haskell code."&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Most of the time we write mathematical expressions like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight haskell"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is a common method used both in programming languages ‚Äã‚Äãand in schools. If you look at the code above, the position of the operator &lt;code&gt;(+)&lt;/code&gt; is in the middle &lt;a href="https://en.wikipedia.org/wiki/Operand"&gt;operand&lt;/a&gt;, this is in accordance with the principle The main point of fp is that the value of an expression depends only on the value of its sub-expression.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#infix"&gt;
  &lt;/a&gt;
  Infix
&lt;/h2&gt;

&lt;p&gt;Infix is ‚Äã‚Äãbasically just a method used to perform an operation, where the operator position is placed between the operands, for example like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight haskell"&gt;&lt;code&gt;&lt;span class="err"&gt;Œª&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's operation is actually interpreted as &lt;strong&gt;"First multiply 5 * 2, then add the result by 3, then the final result is 13"&lt;/strong&gt;. Here some questions begin to arise, &lt;em&gt;why the first operation evaluated is `(&lt;/em&gt;)&lt;code&gt; first, not &lt;/code&gt;(+)&lt;code&gt;? Shouldn't the result be &lt;/code&gt;3+5=8*2=16`??*&lt;/p&gt;

&lt;p&gt;Ok, the answer is because all these operators have their own &lt;strong&gt;priority&lt;/strong&gt;, in this table &lt;code&gt;9&lt;/code&gt; is the highest. I found this out while reading &lt;a href="https://www.haskell.org/onlinereport/decls.html#fixity"&gt;&lt;strong&gt;fixity declarations&lt;/strong&gt;&lt;/a&gt; on &lt;a href="https://www.haskell.org/"&gt;haskell&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;+--------+----------------------+-----------------------+-------------------+
| Prec-  |   Left associative   |    Non-associative    | Right associative |
| edence |      operators       |       operators       |    operators      |
+--------+----------------------+-----------------------+-------------------+
| 9      | !!                   |                       | .                 |
| 8      |                      |                       | ^, ^^, **         |
| 7      | *, /, `div`,         |                       |                   |
|        | `mod`, `rem`, `quot` |                       |                   |
| 6      | +, -                 |                       |                   |
| 5      |                      |                       | :, ++             |
| 4      |                      | ==, /=, &amp;lt;, &amp;lt;=, &amp;gt;, &amp;gt;=, |                   |
|        |                      | `elem`, `notElem`     |                   |
| 3      |                      |                       | &amp;amp;&amp;amp;                |
| 2      |                      |                       | ||                |
| 1      | &amp;gt;&amp;gt;, &amp;gt;&amp;gt;=              |                       |                   |
| 0      |                      |                       | $, $!, `seq`      |
+--------+----------------------+-----------------------+-------------------+
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The table above relates to the order in which operations will be evaluated first.&lt;/p&gt;

&lt;p&gt;After seeing how the priority/precedence/precedence is for each of the operators above, this time the case is slightly different, namely by adding brackets &lt;code&gt;( )&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight haskell"&gt;&lt;code&gt;&lt;span class="err"&gt;Œª&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's operation mean's &lt;strong&gt;"first add 3 and 5, then multiply by 2, then the final result is 16&lt;/strong&gt;. The question arises again, &lt;em&gt;instead of `(&lt;/em&gt;)&lt;code&gt; having priority 7 &amp;gt; 6 &lt;/code&gt;(+)`??*&lt;/p&gt;

&lt;p&gt;Ok, this is because &lt;strong&gt;infix notation&lt;/strong&gt; has a rule that if there is a parenthesis &lt;code&gt;( )&lt;/code&gt; then the highest priority is &lt;code&gt;( )&lt;/code&gt; which is worth &lt;a href="http://orc.csres.utexas.edu/documentation/html/refmanual%20/ref.syntax.precedence.html"&gt;13&lt;/a&gt;. So the result is 16.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prefix-aka-polish"&gt;
  &lt;/a&gt;
  Prefix (aka Polish)
&lt;/h2&gt;

&lt;p&gt;Prefix otherwise known as "Polish notation", where the position of the operator is written before the operand. The expression is like this &lt;code&gt;/* A + B C D&lt;/code&gt;. Take a look at the code below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight haskell"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the prefix operation, evaluation is carried out from &lt;strong&gt;left to right&lt;/strong&gt;, &lt;strong&gt;based on the two values ‚Äã‚Äãclosest to the right&lt;/strong&gt;. If you refer to the code above, it means &lt;strong&gt;"first add 3 and 5, then multiply by 2, then the final result is 16"&lt;/strong&gt;. The first evaluation occurs at (3 + 5) because these two numbers are close to each other, just multiply by 2."&lt;/p&gt;

&lt;p&gt;I give another case, an example of an expression like this &lt;code&gt;+ * 2 10 / 14 2&lt;/code&gt;. Evaluation happens &lt;strong&gt;"First multiply 2 and 10, divide 14 by 2, last 20 + 7 = 27"&lt;/strong&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;By the way the prefix notation doesn't support brackets &lt;code&gt;( )&lt;/code&gt;, so it won't have any effect. Haskell has no prefix operators, with the exception of minus (-), which is both infix and prefix.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#postfix-aka-polish"&gt;
  &lt;/a&gt;
  Postfix (aka !Polish)
&lt;/h2&gt;

&lt;p&gt;Postfix is ‚Äã‚Äãcalled "reverse polish notation", where the operator is at the end of the operand. This notation is used in several old programming languages ‚Äã‚Äãsuch as &lt;a href="https://www.forth.com/resources/forth-programming-language/"&gt;Forth&lt;/a&gt; and &lt;a href="https://en.wikipedia.org/wiki/PostScript"&gt;Postscript&lt;/a&gt; . Take a look at the code below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight haskell"&gt;&lt;code&gt;&lt;span class="err"&gt;Œª&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;::&lt;/span&gt; &lt;span class="kt"&gt;Bool&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="kt"&gt;Bool&lt;/span&gt;
&lt;span class="err"&gt;Œª&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt;
&lt;span class="err"&gt;Œª&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;True&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In haskell itself to support postfix operators, yo've to use &lt;a href="https://ghc.readthedocs.io/en/8.0.1/glasgow_exts.html"&gt;syntax extensions&lt;/a&gt; on &lt;a href="https://www.haskell.org%20/ghc/"&gt;GHC&lt;/a&gt;, so you don't get scolded by the compiler.&lt;/p&gt;

&lt;p&gt;Yes, that's 3 kinds of notation used in writing expressions. Although prefer to infix syntax because it is easier to read, each has its own purpose and purpose. This article is important for you, especially those who are learning functional programming, where mathematics happens everywhere.&lt;/p&gt;

&lt;p&gt;But most importantly, I hope this article is useful, Thanks!&lt;/p&gt;

</description>
      <category>operator</category>
      <category>haskell</category>
      <category>infix</category>
      <category>prefix</category>
    </item>
    <item>
      <title>React basics: creating a custom media query hook</title>
      <author>Chris Bongers</author>
      <pubDate>Tue, 19 Oct 2021 06:47:55 +0000</pubDate>
      <link>https://dev.to/dailydevtips1/react-basics-creating-a-custom-media-query-hook-1o72</link>
      <guid>https://dev.to/dailydevtips1/react-basics-creating-a-custom-media-query-hook-1o72</guid>
      <description>&lt;p&gt;So far, we have checked out some pre-defined basic hooks in React.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://daily-dev-tips.com/posts/react-basics-explaining-the-usestate-hook/"&gt;React useState hook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://daily-dev-tips.com/posts/react-basics-explaining-the-useeffect-hook/"&gt;React useEffect hook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://daily-dev-tips.com/posts/react-basics-explaining-the-usecontext-hook/"&gt;React useContext hook&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;But there is another way you can go about this: creating your own custom hooks.&lt;/p&gt;

&lt;p&gt;Let's put it to the test and see why we even want to extract something to be its own hook?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-a-media-query-check"&gt;
  &lt;/a&gt;
  Creating a media query check
&lt;/h2&gt;

&lt;p&gt;I've created a sample &lt;a href="https://github.com/rebelchris/react-basics"&gt;GitHub repo&lt;/a&gt; that you can use to play along.&lt;/p&gt;

&lt;p&gt;Open up the &lt;code&gt;App.js&lt;/code&gt; file, and let's say we want to show a conditional text to desktop users and small screen users.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;isDesktop&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setIsDesktop&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;media&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;matchMedia&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;(min-width: 960px)&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;listener&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setIsDesktop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;media&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;matches&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;listener&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;resize&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;listener&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;removeEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;resize&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;listener&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;isDesktop&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'App'&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;isDesktop&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Desktop&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Small screen&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What we do here is create a simple boolean state called &lt;code&gt;isDesktop&lt;/code&gt;.&lt;br&gt;
Then we leverage the &lt;code&gt;useEffect&lt;/code&gt; to listen to our window and look for a media query that matches &lt;code&gt;(min-width: 960px)&lt;/code&gt;.&lt;br&gt;
We then set the desktop variable to true or false, based on what the media query evaluates.&lt;/p&gt;

&lt;p&gt;Lastly, we add a listener to the resize event to detect whenever the screen resizes and updates accordingly.&lt;/p&gt;

&lt;p&gt;Then we return a conditional header based on whether this is true or false.&lt;/p&gt;

&lt;p&gt;And it works!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_Hja8arv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633775518073/twrvZJqv1.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_Hja8arv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1633775518073/twrvZJqv1.gif" alt="React basics: creating a custom media query hook"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;However, now imagine we also want to use this logic in another component?&lt;/p&gt;

&lt;p&gt;We could copy-paste this code there and be done with it.&lt;br&gt;
Yes, correct, but it's not a neat solution as we would be re-using code that we could extract.&lt;/p&gt;

&lt;p&gt;And that's precisely where custom hooks can come in handy.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#creating-a-custom-media-query-hook-in-react"&gt;
  &lt;/a&gt;
  Creating a custom media query hook in React
&lt;/h2&gt;

&lt;p&gt;Let's take what we just created, but place it inside a custom hook now.&lt;/p&gt;

&lt;p&gt;Create the hook file called &lt;code&gt;useMedia&lt;/code&gt; inside a &lt;code&gt;hooks&lt;/code&gt; directory (You must create this directory).&lt;/p&gt;

&lt;p&gt;Pay attention to the &lt;code&gt;use&lt;/code&gt; part as this is a condition to hooks. They MUST start with &lt;code&gt;use&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;useMedia&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;isDesktop&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setIsDesktop&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;media&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;matchMedia&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;(min-width: 960px)&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;listener&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setIsDesktop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;media&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;matches&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;listener&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;resize&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;listener&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;removeEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;resize&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;listener&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;isDesktop&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;isDesktop&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;useMedia&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can now go back to our &lt;code&gt;App.js&lt;/code&gt; and clean up the code to look more like this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;useMedia&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./hooks/useMedia&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;isDesktop&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useMedia&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'App'&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;isDesktop&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Desktop&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Small screen&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Pretty solid. We now have a hook that we can re-use in multiple components.&lt;/p&gt;

&lt;p&gt;However, we can go a step further and extract the actual media query from it.&lt;br&gt;
That way, we can test for multiple media queries using the same hook.&lt;/p&gt;

&lt;p&gt;First, make sure the &lt;code&gt;useMedia&lt;/code&gt; hook can accept a query parameter.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;useMedia&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then we need to modify our variables inside this hook and use the query to test against.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;useMedia&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;matches&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setMatches&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;media&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;matchMedia&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;listener&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setMatches&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;media&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;matches&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;listener&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nx"&gt;media&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;change&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;listener&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;media&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;removeEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;change&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;listener&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;matches&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;matches&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we can modify our use to look like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;isDesktop&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useMedia&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;(min-width: 960px)&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Pretty solid, right!&lt;br&gt;
You can even go ahead and use this to check for multiple media queries now.&lt;/p&gt;

&lt;p&gt;Do note we also changed the listener, so instead of adding a resize listener, we add one to the media query to see if that changes!&lt;/p&gt;

&lt;p&gt;This stuff super stokes me as it becomes way easier to split out our codebase with custom hooks.&lt;/p&gt;

&lt;p&gt;You can find this complete example on &lt;a href="https://github.com/rebelchris/react-basics/tree/custom-hook"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thank-you-for-reading-and-lets-connect"&gt;
  &lt;/a&gt;
  Thank you for reading, and let's connect!
&lt;/h3&gt;

&lt;p&gt;Thank you for reading my blog. Feel free to subscribe to my email newsletter and connect on &lt;a href="https://www.facebook.com/DailyDevTipsBlog"&gt;Facebook&lt;/a&gt; or &lt;a href="https://twitter.com/DailyDevTips1"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
    </item>
    <item>
      <title>Prepare for AWS re:Invent 2021</title>
      <author>Andra Glavan (she/her)</author>
      <pubDate>Tue, 19 Oct 2021 06:08:31 +0000</pubDate>
      <link>https://dev.to/andraglavan/prepare-for-aws-reinvent-2021-8p</link>
      <guid>https://dev.to/andraglavan/prepare-for-aws-reinvent-2021-8p</guid>
      <description>&lt;p&gt;Photo: screenshot from re:Invent &lt;a href="https://reinvent.awsevents.com/"&gt;page&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For the past few days I've been searching for ways to prepare for the AWS re:Invent 2021 in person conference and I started to feel a bit overwhelmed at first. I have started to search and read more about it and in this post I would like to share with you what helped me out so far in making a plan for the event.&lt;br&gt;&lt;/p&gt;

&lt;p&gt;This will be my first time ever attending the conference (hopefully in person), and as we get closer to the event and also to the &lt;a href="https://reinvent.awsevents.com/faqs/"&gt;reserved seating&lt;/a&gt; opening up (today!) I had to try and make up my mind quickly. &lt;br&gt;
I will start by sharing a few links I found useful and at the end I will talk a bit about the tips and tricks.&lt;br&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#useful-links-to-prepare-for-aws-reinvent-2021"&gt;
  &lt;/a&gt;
  Useful links to prepare for AWS re:Invent 2021 &lt;br&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;AWS re:Invent&lt;/strong&gt; &lt;a href="https://reinvent.awsevents.com/faqs/"&gt;FAQs&lt;/a&gt; page - here we can find all we need about topics such as health and safety, registration, accessibility, and so on.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7z66ZWTG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4rf8knn745duu4mwogml.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7z66ZWTG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4rf8knn745duu4mwogml.jpg" alt="AWS FAQ page"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;AWS How to re:Invent&lt;/strong&gt; &lt;a href="https://reinvent.awsevents.com/how-to-reinvent/"&gt;page&lt;/a&gt; - this is an AMAZING page! Here Annie Hancock and Kelley Schultz from AWS are sharing everything we need to know about the conference and how to approach and plan it in order to make the most out of it. The first episode you'll see is the latest one, scroll down and start with episode 1. It will take you about 45 minutes to watch all 3 episodes published by now (October 18, 2021). &lt;br&gt;
The highlights for me here were: &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Getting an overview over the session types and which ones have reserved seating, which ones don't.&lt;/li&gt;
&lt;li&gt;Make a goal for what you want to achieve at this conference, something like: see a certain talk, get a certification, learn more about a topic or work to improve another. Arrange your calendar with this goal in mind, but always listen to your body and have a Plan B because this week is going to be a LOT to handle. The final goal will be to enjoy it nevertheless, don't forget that üòÑ 
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;AWS Breakout Content&lt;/strong&gt; &lt;a href="https://reinvent.awsevents.com/learn/breakout-content/"&gt;page&lt;/a&gt; - here we can find the session names explained, more details about what a breakout session or a chalk talk is. &lt;br&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;AWS Attendee Guides&lt;/strong&gt; &lt;a href="https://reinvent.awsevents.com/how-to-reinvent/attendee-guides/"&gt;page&lt;/a&gt; - here I will try to follow the most relevant guides for me from the AWS Hero Guides part. It's nice that we can chose a domain, like Serverless and have a look at what &lt;a href="https://twitter.com/emrahsamdan"&gt;Emrah Samdan&lt;/a&gt; will pick and chose for this event. Every guide has at the end the same few tips for the conference and explains how to reserve seats.&lt;br&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;AWS re:Invent 2021&lt;/strong&gt; &lt;a href="https://reinvent.awsevents.com/agenda/?trk=direct"&gt;Agenda&lt;/a&gt; - as the name implies, here we can find a high-level agenda of the event.&lt;br&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#tips-amp-tricks"&gt;
  &lt;/a&gt;
  Tips &amp;amp; tricks
&lt;/h2&gt;

&lt;p&gt;There is so much to do in so little time, so my approach was to first see which kind of sessions will be available online after the event, this way I can go if I really want to see that session live, or I can skip if I really can't make it and see it online later on. I feel this takes a bit the stress of "I have to see them all" thought that crossed my mind üòÖ .&lt;/p&gt;

&lt;p&gt;Breakout sessions, leadership sessions, and keynotes will be available online later on.&lt;/p&gt;

&lt;p&gt;About the reserved seating, if you don't have the time to watch the session on &lt;strong&gt;How to re:Invent&lt;/strong&gt; here are my takes:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Reserve first seats for chalk talks and smaller session because they are usually filling up faster than others.&lt;/li&gt;
&lt;li&gt;Leadership sessions have reserved seating but the Keynotes don't, you have to be there sooner to get your spot. There are ways to see the Keynotes from outside of the room in places specially prepared for this.
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Some tips I have received over &lt;a href="https://www.linkedin.com/in/andra-glavan-0003ab69/"&gt;LinkedIn&lt;/a&gt; and also found in this nice &lt;a href="https://dev.to/hiro/tips-and-tricks-for-your-first-tech-conference-aws-re-invent-2lam"&gt;article&lt;/a&gt;:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Wear comfy shoes&lt;/li&gt;
&lt;li&gt;Pack a bit of water and some snacks&lt;/li&gt;
&lt;li&gt;Have a backpack (keep it lightweight if possible)
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Let me know if this was useful to you and please share other tips and tricks if you have some üåü .&lt;/p&gt;

</description>
      <category>awscommunity</category>
      <category>reinvent2021</category>
      <category>guide</category>
      <category>aws</category>
    </item>
    <item>
      <title>Simple sortable list with VueJS</title>
      <author>Shuvo</author>
      <pubDate>Tue, 19 Oct 2021 06:07:45 +0000</pubDate>
      <link>https://dev.to/0shuvo0/creating-a-sortable-list-using-vuejs-3e2f</link>
      <guid>https://dev.to/0shuvo0/creating-a-sortable-list-using-vuejs-3e2f</guid>
      <description>&lt;p&gt;In this article we are going to create a simple sortable list using Vue JS.(However you would like to create an advanced project like shown in the cover photo you can follow this &lt;a href="https://www.youtube.com/playlist?list=PLBh9z20x5LUoALR6IdyNlJSiBP6BIEEFA"&gt;VueJS tutorial series&lt;/a&gt; that I have started.) &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/mD_QQvJYQAI"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Okay lets start by using v-for directive to create a simple list.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;template&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"todo"&lt;/span&gt; &lt;span class="na"&gt;v-for=&lt;/span&gt;&lt;span class="s"&gt;"todo in todos"&lt;/span&gt; &lt;span class="na"&gt;:key=&lt;/span&gt;&lt;span class="s"&gt;"todo"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;span&amp;gt;&lt;/span&gt;{{todo}}&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;App&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;todos&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Item 1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;item 3&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Item 3&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Item 4&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Item 5&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;/*Your CSS goes here*/&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The output should look something like this&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GPVADKgh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/khkjzjdq7fc9zznjf3ev.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GPVADKgh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/khkjzjdq7fc9zznjf3ev.png" alt="Vue List Demo"&gt;&lt;/a&gt;&lt;br&gt;
But the list is not sortable so let make is sortable now. To do that we are going to use &lt;a href="https://github.com/SortableJS/Vue.Draggable"&gt;Vue.Draggable&lt;/a&gt; so install it by running &lt;code&gt;npm i vuedraggable&lt;/code&gt;.&lt;br&gt;
Now you can import it and use it like a component.&lt;br&gt;
So to make our list sortable we simply have to wrap our list with &lt;code&gt;draggable&lt;/code&gt; and we also have to use our &lt;strong&gt;todos&lt;/strong&gt; for its &lt;strong&gt;v-model&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;template&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;draggable&lt;/span&gt; &lt;span class="na"&gt;v-model=&lt;/span&gt;&lt;span class="s"&gt;"todos"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"todo"&lt;/span&gt; &lt;span class="na"&gt;v-for=&lt;/span&gt;&lt;span class="s"&gt;"todo in todos"&lt;/span&gt; &lt;span class="na"&gt;:key=&lt;/span&gt;&lt;span class="s"&gt;"todo"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;span&amp;gt;&lt;/span&gt;{{todo}}&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/draggable&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;draggable&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vuedraggable&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;App&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;components&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;draggable&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;todos&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Item 1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;item 3&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Item 3&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Item 4&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Item 5&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now you will se you can now drag your todos to sort them&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--A7-50OwZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a7br997fmg0r0jdo4o2b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--A7-50OwZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a7br997fmg0r0jdo4o2b.png" alt="Vue list sort"&gt;&lt;/a&gt;&lt;br&gt;
Also If you want you can specify a handle for sorting(the element that you will drag to sort the list)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;template&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;draggable&lt;/span&gt; &lt;span class="na"&gt;v-model=&lt;/span&gt;&lt;span class="s"&gt;"todos"&lt;/span&gt; &lt;span class="na"&gt;handle=&lt;/span&gt;&lt;span class="s"&gt;".handle"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"todo"&lt;/span&gt; &lt;span class="na"&gt;v-for=&lt;/span&gt;&lt;span class="s"&gt;"todo in todos"&lt;/span&gt; &lt;span class="na"&gt;:key=&lt;/span&gt;&lt;span class="s"&gt;"todo"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"handle"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&lt;span class="ni"&gt;&amp;amp;#8597;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;span&amp;gt;&lt;/span&gt;{{todo}}&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/draggable&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uAnB5o3u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2l8apuzg1pugm75ife2f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uAnB5o3u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2l8apuzg1pugm75ife2f.png" alt="Vue list sort with handle"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Finally You can use &lt;strong&gt;transition-group&lt;/strong&gt; to add some animation&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;template&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;draggable&lt;/span&gt; &lt;span class="na"&gt;v-model=&lt;/span&gt;&lt;span class="s"&gt;"todos"&lt;/span&gt; &lt;span class="na"&gt;handle=&lt;/span&gt;&lt;span class="s"&gt;".handle"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;transition-group&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"list"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"todo"&lt;/span&gt; &lt;span class="na"&gt;v-for=&lt;/span&gt;&lt;span class="s"&gt;"todo in todos"&lt;/span&gt; &lt;span class="na"&gt;:key=&lt;/span&gt;&lt;span class="s"&gt;"todo"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"handle"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&lt;span class="ni"&gt;&amp;amp;#8597;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;lt;span&amp;gt;&lt;/span&gt;{{todo}}&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/transition-group&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/draggable&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
&lt;span class="nc"&gt;.list-move&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;.5s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So now if you try to sort your todos you will see they animates their position.&lt;/p&gt;

&lt;p&gt;That's all for now and Thanks for reading. Be sure to check out my other articles and My &lt;a href="https://www.youtube.com/AngleBrace"&gt;YouTube Channel&lt;/a&gt; &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/mD_QQvJYQAI"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>vue</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Awesome SEO for your site.</title>
      <author>Abhiraj Bhowmick</author>
      <pubDate>Tue, 19 Oct 2021 05:53:52 +0000</pubDate>
      <link>https://dev.to/abhirajb/awesome-seo-for-your-site-2k3b</link>
      <guid>https://dev.to/abhirajb/awesome-seo-for-your-site-2k3b</guid>
      <description>&lt;p&gt;When building out your website, you‚Äôll want to keep search engine optimization (SEO) in mind. You want your site visitors to be able to easily find what they‚Äôre looking for, so it‚Äôs important that Google can follow all of your links correctly. To do that, web developers often follow these simple 10 best practices when creating a new website.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Get Rid of Flash: Flash was popular once upon a time, but its shelf life has passed us by. Today, it just makes it more difficult for both humans and computers to read your website content and is especially problematic when your user base is internationally dispersed or using assistive technology.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Use Semantic HTML5 Tags: Tags like&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;b&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;i&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;u&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;strong&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;have been deprecated with HTML5 in favor of tags like&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;em&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;which already convey context.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Don't Forget About Indexable External Links: If a site visitor wants to contact you, consider adding a link below your navigation bar so they don't have to guess where to click. When making those link decisions, don't forget about indexable external links ‚Äì Google's crawlers won't be able to index them if they aren't on your page.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Choose Suitable Keywords: Keywords are great tools for human searches ‚Äì people understand them well ‚Äì but there's an art form that goes into choosing good keywords from organic searches.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Redesign Existing Pages Instead of Adding New Ones: Filling up your site with duplicate information is just going to frustrate users who didn't know better than to look for it in more than one place.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Use Proper Anchor Text Every Time&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Move That Navbar Up Above: It can make sense to put secondary navigation at the bottom of every page, but do make sure each primary header above each major section starts with&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Include Robots Meta Tag Within Header Files&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Stay Away From Frames Unless Absolutely Necessary,&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Avoid Frame Busting Scripts, They Disrupt Your Page Flow: Historically, frames were a useful method to create extra real estate within a single window. These days however, most browsers will attempt to resize themselves to fit larger pages ‚Äì including ones that use frames. An additional issue occurs when some scripts mistakenly break frame-based pages as soon as they load, but scripts can easily check whether your website is already framed before breaking everything.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;How to ensure good SEO for any site?&lt;/p&gt;

&lt;p&gt;1) On-page Optimization&lt;/p&gt;

&lt;p&gt;The goal of on-page optimization is simple: ensure that a website‚Äôs content includes all of the necessary elements for search engines to locate, index, and correctly rank it. When done correctly, on-page optimization helps websites provide an exceptional user experience while also being discovered by searchers. So why isn‚Äôt every site optimized? In short, because optimizing a website requires knowing what matters to search engines‚Äîand even Google itself admits that understanding SEO can be challenging. &lt;/p&gt;

&lt;p&gt;2) User Experience and User Interface&lt;/p&gt;

&lt;p&gt;If you‚Äôre building a website, focus on its user experience. Visitors should be able to quickly find what they‚Äôre looking for. If you have a high-quality product or service that fits into a competitive market, chances are there are going to be plenty of people trying their best not just to take business away from you but also just curious about learning more about your company. Google Analytics can tell you how many visitors land on specific pages within your site as well as how much time they spend there before moving on or leaving entirely.&lt;/p&gt;

&lt;p&gt;3) What Google Does Not Like&lt;/p&gt;

&lt;p&gt;Google is a machine, but it does not like spam. It doesn‚Äôt take much for a website to be flagged as a black-hat website in Google‚Äôs search engine. If your page ranks high on Google, it helps build trust in your site. When people see that you are an authority in your field, they will likely click through from another site to view content or buy something from you. However, if they click through and see that all of your pages have been created automatically with no human involvement whatsoever, your web design may not have met all of Google‚Äôs standards.&lt;/p&gt;

&lt;p&gt;4) Watch Out For Cloaking and Spamming Techniques&lt;/p&gt;

&lt;p&gt;Cloaking is a technique that shows a search engine a completely different version of your website than a human visitor. A great way to spot cloaking is if you notice that certain pages of your site have been tagged as spam by search engines. Cloaking can negatively impact your search engine optimization efforts, so it‚Äôs important to stay on top of those things. While you may think it‚Äôs easier said than done, remember that if you don‚Äôt pay attention, competitors who do could gain an unfair advantage on your business.&lt;/p&gt;




&lt;p&gt;As always, thanks for reading and have a great day!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>[25] Top 10 Must-Have Web Dev Tools ‚Äì October 2021</title>
      <author>MV</author>
      <pubDate>Tue, 19 Oct 2021 05:14:07 +0000</pubDate>
      <link>https://dev.to/villivald/25-top-10-must-have-web-dev-tools-september-2021-200j</link>
      <guid>https://dev.to/villivald/25-top-10-must-have-web-dev-tools-september-2021-200j</guid>
      <description>&lt;p&gt;There is an October 2021 edition of my &lt;a href="https://www.create-react-app.com/tags/top"&gt;blog post series&lt;/a&gt; - Top 10 Best Web Dev Tools. Every month I try to pick the most intriguing and handy instruments that, I believe, are must-haves for every web developer. This time there are:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-openmoji"&gt;
  &lt;/a&gt;
  1). OpenMoji
&lt;/h2&gt;

&lt;p&gt;An open-source emoji library made by 60+ students and 3 professors of the &lt;a href="https://www.hfg-gmuend.de/"&gt;HfG Schw√§bisch Gm√ºnd&lt;/a&gt; and 20+ external contributors. I already use some of their brilliant emojis in my &lt;a href="https://koripallopaikat.com/"&gt;basketball-related project&lt;/a&gt;. They seem like a great alternative to the standard ones.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QrDJLROX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.create-react-app.com/static/img/images/26/openmoji.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QrDJLROX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.create-react-app.com/static/img/images/26/openmoji.webp" alt="Open source emojis library"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://openmoji.org/"&gt;https://openmoji.org/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-accessible-palette"&gt;
  &lt;/a&gt;
  2). Accessible Palette
&lt;/h2&gt;

&lt;p&gt;Accessible Palette allows you to create entire color systems. It is a tool for designers and developers who want to create color systems that are accessible to everyone. To generate color ranges, they are using &lt;a href="https://gka.github.io/chroma.js/"&gt;chroma.js&lt;/a&gt; library, which I mentioned in my &lt;a href="https://www.create-react-app.com/posts/2021-09-16-top-10-web-dev-tools-09-2021/"&gt;previous post&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yymiOsQA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.create-react-app.com/static/img/images/26/palette.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yymiOsQA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.create-react-app.com/static/img/images/26/palette.webp" alt="Accessible Palette"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://accessiblepalette.com/"&gt;https://accessiblepalette.com/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-basic-pattern-repository"&gt;
  &lt;/a&gt;
  3). Basic Pattern Repository
&lt;/h2&gt;

&lt;p&gt;Basic Pattern Repository is a collection of SVG patterns for your next side project. See also &lt;a href="https://www.heropatterns.com/"&gt;Hero Patterns&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BAya5JYi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.create-react-app.com/static/img/images/26/patterns.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BAya5JYi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.create-react-app.com/static/img/images/26/patterns.webp" alt="basic patterns collection, svg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://patterns.helloyes.dev/"&gt;https://patterns.helloyes.dev/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-blobbb-fun"&gt;
  &lt;/a&gt;
  4). blobbb fun
&lt;/h2&gt;

&lt;p&gt;It is an easy-to-use generator for creating unique SVG forms. I also recommend you to check &lt;a href="https://app.haikei.app/"&gt;another generator&lt;/a&gt; made by Haikei, which I already mentioned in &lt;a href="https://www.create-react-app.com/posts/2021-07-12-top-10-web-dev-tools-07-2021/"&gt;an earlier post&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Hn45hVdA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.create-react-app.com/static/img/images/26/blobb.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Hn45hVdA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.create-react-app.com/static/img/images/26/blobb.webp" alt="blobb svg generator"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.blobbb.fun/"&gt;https://www.blobbb.fun/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-motion-one"&gt;
  &lt;/a&gt;
  5). Motion One
&lt;/h2&gt;

&lt;p&gt;A new animation library with small size and fast performance. Can't wait to try it in my projects.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PlW6QYgT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.create-react-app.com/static/img/images/26/motion.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PlW6QYgT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.create-react-app.com/static/img/images/26/motion.webp" alt="js motion library"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://motion.dev/"&gt;https://motion.dev/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-theatrejs"&gt;
  &lt;/a&gt;
  6). Theatre.js
&lt;/h2&gt;

&lt;p&gt;What? Yes, it is another JavaScript animation library. Seems very intriguing to me as well.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CcWSHj2g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.create-react-app.com/static/img/images/26/theatre.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CcWSHj2g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.create-react-app.com/static/img/images/26/theatre.webp" alt="js animation library"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.theatrejs.com/"&gt;https://www.theatrejs.com/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-huey"&gt;
  &lt;/a&gt;
  7). huey
&lt;/h2&gt;

&lt;p&gt;Since this post, in general, is more focused on visual things, there is another tool for creating accessible color palettes. Huey has an option to simulate the different types of color blindness, which can be very useful.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kJ02Oc8v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.create-react-app.com/static/img/images/26/huey.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kJ02Oc8v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.create-react-app.com/static/img/images/26/huey.webp" alt="accessible color palette generator"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://huey.design/"&gt;https://huey.design/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-huetone"&gt;
  &lt;/a&gt;
  8). Huetone
&lt;/h2&gt;

&lt;p&gt;Huetone is the tool you need to create and fine-tune your color system. The main difference from the previous ones is that Huetone uses &lt;a href="https://lea.verou.me/2020/04/lch-colors-in-css-what-why-and-how/"&gt;LCH color space&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SVVFBbTT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.create-react-app.com/static/img/images/26/huetone.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SVVFBbTT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.create-react-app.com/static/img/images/26/huetone.webp" alt="color palette generator"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://huetone.ardov.me/"&gt;https://huetone.ardov.me/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#9-buttons-generator"&gt;
  &lt;/a&gt;
  9). Buttons Generator
&lt;/h2&gt;

&lt;p&gt;Buttons Generator by &lt;a href="https://twitter.com/denicmarko"&gt;Marko Denic&lt;/a&gt; seems like it's already been in every top and newsletter, so I also wanted to share it with you ü§ì.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7WO-B2Pi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.create-react-app.com/static/img/images/26/buttons.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7WO-B2Pi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.create-react-app.com/static/img/images/26/buttons.webp" alt="buttons generator"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://markodenic.com/tools/buttons-generator/"&gt;https://markodenic.com/tools/buttons-generator/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#10-heroicons"&gt;
  &lt;/a&gt;
  10). heroicons
&lt;/h2&gt;

&lt;p&gt;Beautiful hand-crafted SVG icons, by the makers of &lt;a href="https://tailwindcss.com/"&gt;Tailwind&lt;/a&gt; (the worst thing to happen to CSS, you know üíÅ‚Äç‚ôÇÔ∏è). Versions for React and Vue &lt;a href="https://github.com/tailwindlabs/heroicons#react"&gt;are available&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Sbm7UBJG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.create-react-app.com/static/img/images/26/heroicons.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Sbm7UBJG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.create-react-app.com/static/img/images/26/heroicons.webp" alt="collection of svg icons"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://heroicons.com/"&gt;https://heroicons.com/&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;a href="https://www.create-react-app.com/posts/2021-10-19-top-10-web-dev-tools-10-2021/"&gt;Original post @ create-react-app.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;My Site &lt;a href="https://villivald.com/"&gt;https://villivald.com/&lt;/a&gt;&lt;br&gt;
GitHub &lt;a href="https://github.com/villivald"&gt;https://github.com/villivald&lt;/a&gt;&lt;br&gt;
Twitter &lt;a href="https://twitter.com/crapp_blog"&gt;https://twitter.com/crapp_blog&lt;/a&gt;&lt;/p&gt;

</description>
      <category>codenewbie</category>
      <category>productivity</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Liman ile LAPS Y√∂netimi</title>
      <author>oz9un</author>
      <pubDate>Tue, 19 Oct 2021 05:13:58 +0000</pubDate>
      <link>https://dev.to/aciklab/liman-ile-laps-yonetimi-20n</link>
      <guid>https://dev.to/aciklab/liman-ile-laps-yonetimi-20n</guid>
      <description>&lt;p&gt;Yerel y√∂neticilerin parolalarƒ±nƒ± kolayca y√∂netmemizi saƒülayan LAPS, artƒ±k &lt;strong&gt;Domain&lt;/strong&gt; eklentisi aracƒ±lƒ±ƒüƒ± ile Liman √ºzerinde de kullanƒ±labilmektedir. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#kullan%C4%B1m-senaryosu"&gt;
  &lt;/a&gt;
  Kullanƒ±m senaryosu:
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;LAPS'ƒ±n kurulu olduƒüu 'WINSERVDC' adƒ±nda bir Windows DC'miz olduƒüunu ve bu sunucuyu Liman'a &lt;strong&gt;Domain&lt;/strong&gt; eklentisi ile beraber eklediƒüimizi varsayalƒ±m:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5ia9RuDQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/25bunam6bf2p4b6q7eim.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5ia9RuDQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/25bunam6bf2p4b6q7eim.png" alt="Liman Aray√ºz√º"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;WINSERVDC sunucumuz i√ßerisinde LAPS'ƒ±n y√ºkl√º olduƒüu istemcilerimizi ise 'LAPS-CLIENTS' OU altƒ±nda toplamƒ±≈ü olalƒ±m:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tIydo1pv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/366ys117yxqy9zo1312r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tIydo1pv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/366ys117yxqy9zo1312r.png" alt="Domain Eklentisi Aray√ºz√º"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Artƒ±k &lt;strong&gt;Domain&lt;/strong&gt; eklentisinin aray√ºz√ºnden y√∂netmek istediƒüimiz istemcinin √ºzerine saƒü tƒ±klayarak se√ßenekleri a√ßabilir ve 'LAPS Y√∂netim' ekranƒ±na eri≈üebiliriz:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Wj6HPidn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/giu0ngx2fcmg5gbtm0op.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Wj6HPidn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/giu0ngx2fcmg5gbtm0op.png" alt="LAPS Y√∂netim Eri≈üimi"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A√ßƒ±lan 'LAPS Y√∂netim' ekranƒ±nda kullanƒ±cƒ±nƒ±n kar≈üƒ±sƒ±na 3 temel bilgi gelmektedir:&lt;/p&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Parola&lt;/li&gt;
&lt;li&gt;Parolanƒ±n yenilenme tarihi&lt;/li&gt;
&lt;li&gt;Parolanƒ±n g√ºncellenmi≈ü yenilenme tarihi&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Y√∂netici yetkilerine sahip kullanƒ±cƒ± WINSERVDC Domain Controller'ƒ± √ºzerinde 'LAPS Y√∂netim' ekranƒ±na eri≈üerek istediƒüi istemcinin 'Parola yenilenme tarihi'ni g√ºncelleyebilmektedir. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kT11r3jS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mivocas2nc9yqw7hhwrb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kT11r3jS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mivocas2nc9yqw7hhwrb.png" alt="LAPS Y√∂netim Ekranƒ±"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Parola yenilenme tarihi 'Change expiration time' butonu aracƒ±lƒ±ƒüƒ± ile tarih ve saat olarak ayarlanabilmektedir:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HuW9qD_p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r1lkzwfq0o1bya7lqmf9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HuW9qD_p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r1lkzwfq0o1bya7lqmf9.png" alt="LAPS Tarih Ayarƒ±"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--il6_5uRR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x2si7xyzsl20m2l0queb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--il6_5uRR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x2si7xyzsl20m2l0queb.png" alt="LAPS Saat Ayarƒ±"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Son adƒ±mda y√∂netici yeni tarih ve saat deƒüerini kaydederek hedef istemcideki parolanƒ±n yenilenme tarihini g√ºncelleyebilir:
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Zfj4YBCM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9wmwor2vi0dup9hbdbxy.png" alt="LAPS Tarih G√ºncellemesi"&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Kaydedildikten sonra:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iOXg6KCC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k2sjmwnxdvrkx833uw0n.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iOXg6KCC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k2sjmwnxdvrkx833uw0n.png" alt="LAPS Yeni Tarih"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;LAPS Parola yenilenme tarihi ba≈üarƒ±yla g√ºncellendi. Artƒ±k 18/10/2021 08:03 tarihinden sonra istemci √ºzerinde tetiklenecek bir gpupdate event'i sonucunda istemci yeni bir parola √ºretecek ve bu bilgiyi WINSERVDC ile payla≈üacaktƒ±r. Biz de LAPS Y√∂netim ekranƒ± √ºzerinde bu bilginin g√ºncellendiƒüini g√∂rm√º≈ü olacaƒüƒ±z.&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>laps</category>
      <category>windows</category>
      <category>liman</category>
      <category>password</category>
    </item>
    <item>
      <title>What's the most scared you've ever been as a developer?</title>
      <author>Sherry</author>
      <pubDate>Tue, 19 Oct 2021 04:59:47 +0000</pubDate>
      <link>https://dev.to/sherrydays/whats-the-most-scared-youve-ever-been-as-a-developer-2f7a</link>
      <guid>https://dev.to/sherrydays/whats-the-most-scared-youve-ever-been-as-a-developer-2f7a</guid>
      <description></description>
      <category>discuss</category>
      <category>career</category>
    </item>
    <item>
      <title>A ping when your model is done training !</title>
      <author>Ghaiyur</author>
      <pubDate>Tue, 19 Oct 2021 04:55:36 +0000</pubDate>
      <link>https://dev.to/ghaiyur/a-ping-when-your-model-is-done-training--46d4</link>
      <guid>https://dev.to/ghaiyur/a-ping-when-your-model-is-done-training--46d4</guid>
      <description>&lt;p&gt;In the early stages of my DS practice, I spent most of my time waiting around for models to train. Going for a break was a brave risk because what if the session failed and I end up wasting 30 minutes just loitering about??&lt;/p&gt;

&lt;p&gt;Wish had this back then, would have saved me the worries!&lt;br&gt;
Waiting for the #pytorch integration!&lt;/p&gt;

&lt;p&gt;Repo : &lt;a href="https://github.com/aporia-ai/mlnotify"&gt;https://github.com/aporia-ai/mlnotify&lt;/a&gt;&lt;/p&gt;

</description>
      <category>ai</category>
      <category>machinelearning</category>
      <category>jupyter</category>
      <category>modeltraining</category>
    </item>
    <item>
      <title>How to get all months from the year  using in Laravel</title>
      <author>Vickyvn</author>
      <pubDate>Tue, 19 Oct 2021 04:47:41 +0000</pubDate>
      <link>https://dev.to/vickyvn5/how-to-get-all-months-in-the-year-with-carbon-using-in-laravel-faf</link>
      <guid>https://dev.to/vickyvn5/how-to-get-all-months-in-the-year-with-carbon-using-in-laravel-faf</guid>
      <description>&lt;p&gt;$month = [];&lt;/p&gt;

&lt;p&gt;for ($m=1; $m&amp;lt;=12; $m++) {&lt;br&gt;
     $month[] = date('F', mktime(0,0,0,$m, 1, date('Y')));&lt;br&gt;
}&lt;/p&gt;

&lt;p&gt;print_r($month);&lt;/p&gt;

&lt;p&gt;date('F') will get result current month of the year. example October.&lt;br&gt;
so with the help of mktime(0,0,0,2, 1, date('Y')) we will get output February.&lt;br&gt;
 so we replace 2 to $m in for each and get answer in $month array.&lt;br&gt;
we will get output like this.&lt;br&gt;
Array ( &lt;br&gt;
 [0] =&amp;gt; January&lt;br&gt;
 [1] =&amp;gt; February &lt;br&gt;
 [2] =&amp;gt; March&lt;br&gt;
 [3] =&amp;gt; April&lt;br&gt;
 [4] =&amp;gt; May&lt;br&gt;
 [5] =&amp;gt; June&lt;br&gt;
 [6] =&amp;gt; July&lt;br&gt;
 [7] =&amp;gt; August&lt;br&gt;
 [8] =&amp;gt; September&lt;br&gt;
 [9] =&amp;gt; October&lt;br&gt;
 [10] =&amp;gt; November&lt;br&gt;
 [11] =&amp;gt; December &lt;br&gt;
)&lt;/p&gt;

</description>
      <category>laravel</category>
      <category>php</category>
    </item>
  </channel>
</rss>
