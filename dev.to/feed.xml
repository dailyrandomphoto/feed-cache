<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>20 Git Commands You should know 😎</title>
      <author>1nj3ct0r</author>
      <pubDate>Thu, 08 Apr 2021 18:28:14 +0000</pubDate>
      <link>https://dev.to/1nj3ct0r/20-git-commands-you-should-know-4j2p</link>
      <guid>https://dev.to/1nj3ct0r/20-git-commands-you-should-know-4j2p</guid>
      <description>&lt;p&gt;Git is a version control system developed in 2005 by Linus Torvalds (The creator of the Linux kernel) 😏 It helps you keep track of the code changes you have made to files in your project 😍 It comes with a large number of commands that you can use to manage your source code efficiently&lt;/p&gt;

&lt;p&gt;In this article 📜 we'll go over the 20 most commonly used Git commands that every software developer should know&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#checking-the-git-configuration"&gt;
  &lt;/a&gt;
  Checking the Git Configuration 🔧
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git config &lt;span class="nt"&gt;-l&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above command displays a list of information about your Git configuration 🤔 including username, email, default code editor, etc.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#configure-your-git-username"&gt;
  &lt;/a&gt;
  Configure your Git Username 🙍‍♂️🙍
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git config &lt;span class="nt"&gt;--global&lt;/span&gt; user.email &lt;span class="s2"&gt;"example@sample.com"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above command could be used to configure your email address 📧 Replace your email address with &lt;a href="mailto:example@sample.com"&gt;example@sample.com&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#initialize-a-git-repository"&gt;
  &lt;/a&gt;
  Initialize a Git Repository 😀
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git init
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above command can be used to initialize 😃 That is to create a new Git repository 😄 It can be used to convert an existing project to a Git repository 🤨 The above command creates a new .git subfolder in your current working directory that contains all the require metadata for the new repository&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#adding-a-single-file-to-the-staging-area"&gt;
  &lt;/a&gt;
  Adding a single file to the staging area ➕
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git add FILE
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above command adds a file to the staging area 📁 Be sure to replace FILE with the name of the file to be added to the staging area&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#adding-all-files-to-the-staging-area"&gt;
  &lt;/a&gt;
  Adding all files to the staging area 🗃️
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git add &lt;span class="nb"&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above command adds all files to the staging area&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#check-git-status"&gt;
  &lt;/a&gt;
  Check Git Status 📋
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git status
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above commands displays the status of the current repository including the current branch, the list of deployed, undeployed, and untracked files, etc.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#maintain-changes"&gt;
  &lt;/a&gt;
  Maintain Changes 🙂
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git commit
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above command commits the changes to head 🙃 When executed it opens a code editor in the terminal where you can write a commit message &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#fix-changes-with-a-message"&gt;
  &lt;/a&gt;
  Fix Changes with a Message ✉️
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git commit &lt;span class="nt"&gt;-m&lt;/span&gt; &lt;span class="s2"&gt;"YOUR COMMIT MESSAGE"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This command lets you specify just a short summary for your commit message without opening the code editor ✏️ Replace "YOUR COMMIT MESSAGE" with your own commit summary which describes the changes in your commit&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#check-git-history"&gt;
  &lt;/a&gt;
  Check Git History 🕐
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git log
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above command displays a list of commit logs&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#get-branch-list-use"&gt;
  &lt;/a&gt;
  Get Branch List Use 📝
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git branch
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above command to display the list of all created branches in the local repository&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#delete-a-branch"&gt;
  &lt;/a&gt;
  Delete a Branch 🗑️
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git branch &lt;span class="nt"&gt;-d&lt;/span&gt; BRANCH
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Use the above command to delete a Git branch ➖ Make sure to replace BRANCH with the name of your own branch 🙂🙃 Also don't forget to add the -d flag 🚩 It tells Git that you want to delete the specified branch&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-a-new-branch"&gt;
  &lt;/a&gt;
  Create a New Branch ✔️
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git branch BRANCH
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Use the above command to create a new branch 😉 One thing we need to keep in mind is that Git does not automatically switch to this branch - you need to do this manually with the checkout command (See #14)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#change-branches"&gt;
  &lt;/a&gt;
  Change Branches 🔄
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git checkout BRANCH
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can use the above command to switch to a newly created branch or to another branch&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-a-new-branch-in-git-and-switch-to-it-immediately"&gt;
  &lt;/a&gt;
  Create a new branch in Git and switch to it immediately 🔃
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git checkout &lt;span class="nt"&gt;-b&lt;/span&gt; BRANCH
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can create and checkout a new Git branch in a single command by adding the -b option to the checkout command&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#adding-a-remote-repository-in-git"&gt;
  &lt;/a&gt;
  Adding a Remote Repository in Git ⬆️
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git add remote &lt;span class="s2"&gt;"https://REPO_URL"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The command adds a remote repository to your local repository 😊 Make sure to replace REPO_URL with the actual URL of the remote and repository&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#commit-your-changes-to-a-remote-repository-in-git"&gt;
  &lt;/a&gt;
  Commit your changes to a remote repository in Git 😇
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git push
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can use the above command to commit your changes to the remote repository&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pulling-changes-from-a-remote-repository-in-git"&gt;
  &lt;/a&gt;
  Pulling Changes from a Remote Repository in Git 🤩
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git pull
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can use the above command to pull the latest changes from the remote repository&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#stowing-changes"&gt;
  &lt;/a&gt;
  Stowing Changes 😜
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git stash
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The stash command allows you to temporarily park (stash) your uncommitted changes (Both staged and unstaged) to save them for later use&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#undoing-saved-changes"&gt;
  &lt;/a&gt;
  Undoing Saved Changes 😎
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git stash pop
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Use the above command to reapply changes parked with the stash command&lt;/p&gt;

&lt;p&gt;And that's it 🤓 Those were the 20 Git commands I use most often&lt;br&gt;
I hope you found this article useful - have fun 😅👋&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Also Published on &lt;em&gt;&lt;a href="https://www.c-sharpcorner.com/article/20-git-commands-you-should-know/"&gt;C Sharp Corner 🔗&lt;/a&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>git</category>
      <category>command</category>
      <category>useful</category>
      <category>trend</category>
    </item>
    <item>
      <title>Generate your web-app boilerplate like create-react-app does.</title>
      <author>Leopold</author>
      <pubDate>Thu, 08 Apr 2021 17:24:04 +0000</pubDate>
      <link>https://dev.to/leopold/generate-your-web-app-boilerplate-like-create-react-app-does-301p</link>
      <guid>https://dev.to/leopold/generate-your-web-app-boilerplate-like-create-react-app-does-301p</guid>
      <description>&lt;p&gt;Hello everyone, this is my first post here, and I hope my English is going to be smooth enough to make it enjoyable to read 👍.&lt;/p&gt;

&lt;p&gt;It looks cool to create a npm package and type :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx my-dream-boilerplate app-name
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And boom ! Your project is magically there all setup with your favorite configs, tools and more.&lt;/p&gt;

&lt;p&gt;That's what we will do right now.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-"&gt;
  &lt;/a&gt;
  Why ?
&lt;/h2&gt;

&lt;p&gt; &lt;br&gt;
Before we really start, let's try to answer to this question :&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Why would you create your own wep-app boilerplate when there are great tools already in place such as create-react-app which also do a lot more that a simple project boilerplate ?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Here is what motivated me :&lt;br&gt;
When I create a web application, I started to be very bored of having to install each time the same packages, commands, folders, etc. over and over.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;I can extract some kind of layout of my projects.&lt;/strong&gt;&lt;br&gt;
I mostly use React.js and I do need EACH TIME (or almost) to install/change the same bunch of things (react-router-dom, styled-component, build my components structure, redux, etc.) while at the contrary I don't need create-react-app to make a small app or fast prototyping stuffs. &lt;br&gt;
I waste time installing packages, add configs and organizing my folders.&lt;/p&gt;

&lt;p&gt;So I get interested in making that &lt;strong&gt;npx my-dream-boilerplate app-name&lt;/strong&gt; command works to generate the project starter i like.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#initialize-the-project"&gt;
  &lt;/a&gt;
  Initialize the project
&lt;/h2&gt;

&lt;p&gt; &lt;br&gt;
For demo purpose let's keep things very very (and very) simple.&lt;br&gt;
We'll do like in a lot of projects: add a package.json and install all the dependencies we need.&lt;br&gt;
 &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#installing-dependencies-and-setup"&gt;
  &lt;/a&gt;
  Installing dependencies and setup
&lt;/h3&gt;

&lt;p&gt; &lt;br&gt;
First let's initialize the project :&lt;/p&gt;

&lt;p&gt;Create a new foler, for example "create-my-boilerplate" and run inside it :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm init
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The only dependencies we will use here are parcel and rimraf.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Parcel is a web application bundler, there are others Javascript bundlers (webpack, rollup, etc.) but parcel comes up with (almost) no config, a development server, hot module replacement, etc. So this is well enough for our need here.&lt;/li&gt;
&lt;li&gt;rimraf is a npm package used as the UNIX command equivalent rm -rf for node. We will only use it for a command in the script part.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-D&lt;/span&gt; parcel-bundler
npm &lt;span class="nb"&gt;install &lt;/span&gt;rimraf
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Change the npm scripts field in your package.json :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;scripts&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;start&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;parcel index.html&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;build&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;parcel build index.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-the-structure"&gt;
  &lt;/a&gt;
  Create the structure
&lt;/h3&gt;

&lt;p&gt; &lt;br&gt;
Create an index.html and an index.js file.&lt;/p&gt;

&lt;p&gt;Your index.html looks like this :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;Cool&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"index.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now verify that everything is working :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm start
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Again, the project structure is ridiculous here but how to setup a web project isn't the point of the article.&lt;br&gt;
 &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#script-npx-speed"&gt;
  &lt;/a&gt;
  Script + Npx = speed
&lt;/h2&gt;

&lt;p&gt; &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#more-setup"&gt;
  &lt;/a&gt;
  More setup
&lt;/h3&gt;

&lt;p&gt; &lt;br&gt;
All right so how do i automatized all of this ? We want to type some kind of command like &lt;strong&gt;npx create-react-app app-name&lt;/strong&gt; and boom my project appears !&lt;/p&gt;

&lt;p&gt;This is possible thanks to &lt;strong&gt;the 'bin' field in the package.json&lt;/strong&gt; and npx the package runner command.&lt;/p&gt;

&lt;p&gt;Add to your package.json&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;bin&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;create-boilerplate&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./generate-app.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Create at the root of the project a 'bin' repository with a generate-app.js file (name it as you want).&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;So ./bin/generate-app.js is the script executed when we will type the command &lt;strong&gt;npx create-my-boilerplate name-of-your-app&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Before going any further we need to create a git repository.&lt;br&gt;
So run &lt;strong&gt;git init and create a .gitignore file.&lt;/strong&gt;.&lt;br&gt;
Your .gitignore file have to ignore folders that parcel generate when you run/build : .cache, dist and build.&lt;/p&gt;

&lt;p&gt;To finish the setup part, push your project to a new git repository, your git repo url is going to be use in the next part because we want to clone the repo.&lt;br&gt;
 &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#the-script"&gt;
  &lt;/a&gt;
  The script
&lt;/h3&gt;

&lt;p&gt; &lt;br&gt;
We are working on create-app.js now.&lt;br&gt;
Again, let's keep things simple, the script have to handle this :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;We want to execute a command who accepts an argument representing the application name and validate it.&lt;/li&gt;
&lt;li&gt;If it is valid, verify if the project name doesn't already exist in the current folder.&lt;/li&gt;
&lt;li&gt;Then we want to clone the github repository of this project boilerplate.&lt;/li&gt;
&lt;li&gt;We want to install all the dependencies.&lt;/li&gt;
&lt;li&gt;We want to delete files not useful.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Firstly we require the packages we need : (you don't need to install them).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;execSync&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;child_process&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;path&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;fs&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We verify that an app name is provided (npx create-boilerplate with no argument isn't a valid command) :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;You have to provide a name to your app.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;For example :&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;    npx create-my-boilerplate my-app&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Declare variables we need :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;projectName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;currentPath&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cwd&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;projectPath&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;currentPath&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;projectName&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;git_repo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;YOUR_GIT_URL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Verify the project name is available otherwise cancel the process :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;fs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mkdirSync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;projectPath&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;code&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;EEXIST&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`The file &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;projectName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; already exist in the current directory, please give it another name.`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we reach the main part :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Downloading files...&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;execSync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`git clone --depth 1 &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;git_repo&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;projectPath&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

      &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;chdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;projectPath&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Installing dependencies...&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;execSync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;npm install&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Removing useless files);
      execSync(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="nx"&gt;npx&lt;/span&gt; &lt;span class="nx"&gt;rimraf&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;git&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;);
      fs.rmdirSync(path.join(projectPath, &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="nx"&gt;bin&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;), { recursive: true});

      console.log(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="nx"&gt;The&lt;/span&gt; &lt;span class="nx"&gt;installation&lt;/span&gt; &lt;span class="nx"&gt;is&lt;/span&gt; &lt;span class="nx"&gt;done&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt; &lt;span class="nx"&gt;is&lt;/span&gt; &lt;span class="nx"&gt;ready&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;use&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;);

    } catch (error) {
      console.log(error);
    }
}
main();
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Read lines with console.log(), they pretty much explain every command.&lt;br&gt;
This is a very basic CLI but you could do a lot more thanks to node environment, add colors, package.json generator, etc.&lt;/p&gt;

&lt;p&gt;That's it.&lt;br&gt;
You can test your package locally :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;link &lt;/span&gt;create-my-boilerplate
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It creates a symbolic link so that you can use it as a node module in the folder you are currently located.&lt;/p&gt;

&lt;p&gt;And now it is the great time, where the magic comes :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx create-my-boilerplate app-name
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Your script runs and your project spawns. &lt;br&gt;
Congratulation.&lt;br&gt;
As you can see, a basic generation is definitely not complicated.&lt;/p&gt;

&lt;p&gt;You can start :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm start
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Go further, make your own boilerplate with your favorite setup and learn to publish on npm.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm login
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;bash npm publish
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now check your package on &lt;a href="https://www.npmjs.com/"&gt;https://www.npmjs.com/&lt;/a&gt; !&lt;/p&gt;

&lt;p&gt;I hope It wasn't too confused and that it will inspire you a little bit about Node.js scripting possibilities, yours project needs and/or new packages ideas.&lt;br&gt;
I myself ending up building my own project boilerplate last week (and in fact thats my first npm package ever) for react-applications with parcel, which include features I use regularly such as prettier, css autoprefixer and reset, tests, styled-components, etc.&lt;br&gt;
If you are interested you can have a look to the code on my github particularly the ./bin/ folder where i have a bit more advanced script than in this article : &lt;a href="https://www.npmjs.com/package/react-parcel-app"&gt;https://www.npmjs.com/package/react-parcel-app&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks for reading and have a good day.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>node</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Everything You Need to Know About Bullet Journals</title>
      <author>Sarah Bartley</author>
      <pubDate>Thu, 08 Apr 2021 17:07:37 +0000</pubDate>
      <link>https://dev.to/theoriginalbpc/everything-you-need-to-know-about-bullet-journals-1h9e</link>
      <guid>https://dev.to/theoriginalbpc/everything-you-need-to-know-about-bullet-journals-1h9e</guid>
      <description>&lt;p&gt;&lt;em&gt;Originally published May 17, 2018 on The Original BritishPandaChick blog. I made tweaks to the original post so it would work for The Practical Dev.&lt;/em&gt;

&lt;/p&gt;
&lt;p&gt;One of my favorite things to collect are journals, diaries, and notebooks. I have a desk drawer full of journals I have gotten over the years. Many of these journals are still blank and waiting to be used. Whenever I visit my local book store, I often visit the clearance and stationary sections just to see if there are any interesting journals I can buy.&lt;/p&gt;

&lt;p&gt;I may have a huge collection of journals, but one of the challenges I've had over the years is finding things to put in these journals. When I tried using a journal in the past, everything started off just fine. However, I eventually ran out of things to talk about and eventually stopped writing in hopes I'd find something interested to write about when it happened.&lt;/p&gt;

&lt;p&gt;As I struggled to find things to write about, it didn't stop me from buying journals and this led to my large collection of journals. Last year, I was cleaning my room and discovered how many journals I have collected over time. I realized then and there I needed to find a way to better use the journals I have while finding a method that made it easier to write in my journal every day.&lt;/p&gt;

&lt;h3&gt;Enter the bullet journal.&lt;/h3&gt;

&lt;p&gt;I heard about this method from the BuzzFeed article "WTF is a Bullet Journal and Why Should You Start One?" which was featured on Facebook. I was still confused by the explanation but was still curious about the method.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buzzfeed.com/rachelwmiller/how-to-start-a-bullet-journal?utm_term=.pkjZPB3Bxk#.vf08JgXgBn"&gt;==&amp;gt; Click here to read the BuzzFeed article "WTF is a Bullet Journal and Why You Should Start One?"&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I decided to try it when one of the speakers at a Skillcrush webinar talked about it during her presentation. She encouraged participants to use this method as a way of staying organized and keeping track of tasks for freelancing or tech. After her presentation, I sorted through my collection of journals for a journal to try and set up my journal using a video from the bullet journal website Skillcrush sent out.&lt;/p&gt;

&lt;p&gt;Below is the same video I used to set up my bullet journal and how it explains the method as well as how to set up your journal. My journal is very similar to the one in this video.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/fm15cmYU0IM"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;I have been using the bullet journal method for almost a year and I've gone through two journals so far.&lt;/h3&gt;

&lt;p&gt;I recently started my third bullet journal and I can admit this method is everything I was looking for. I use my notebook every day and this habit has helped me stay organized while keeping me focused on what is important. This method is still a trial by error process and I'm still changing this method to best fit my needs and lifestyle. However, the process I'm using right now is one I'm happy with and works the best for me.&lt;/p&gt;

&lt;p&gt;Today's post is all about the bullet journal method. I'll briefly explain what a bullet journal is and show you the basics of setting up your notebook. I will walk you through each of the steps from creating your key to what needs to go in each of the logs. I'm even going to offer you suggestions on other things you can put in your journal.&lt;/p&gt;

&lt;h2&gt;What is a bullet journal?&lt;/h2&gt; 

&lt;p&gt;This is often the hardest question most articles have trouble defining. This is due to the fact bullet journals can be anything you want them to be and are used differently for every person. The best definition I've seen for a bullet journal is a combination of a diary, sketchbook, and planner.&lt;/p&gt;

&lt;p&gt;This combination creates an organization system that puts your information in one place yet easy to use and understand what is being put in your journal so you can understand them. That is the beauty of the bullet journal system. This system is all about customizing your journal to what works for you.&lt;/p&gt;

&lt;p&gt;This method is great for anyone regardless of how much experience you have writing in diaries or journals. This journal is meant to grow with you and your lifestyle. Ultimately you decide what it should be like and what should be put in it.&lt;/p&gt;

&lt;p&gt;BuzzFeed Nifty just released a video last month about bullet journal which goes into more detail than the overview video on the Bullet Journal website. This video doesn't just show you how to set up your journal, but it does a better job explaining and showing the possibilities your notebook can have.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/nasMrmSumBU"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;I am not a very good artist, so I hardly use my journal as a sketchbook. I mostly use mine as a planner and occasionally a diary. The bullet journal system is really good for helping me focus on the most important tasks I want to accomplish and keeps me on track with the goals I'm working towards.&lt;/p&gt;

&lt;p&gt;It is a great place to keep all my ideas in one place that I can easily revisit again in the future. This is the place where I keep all the ideas I want to write about for this blog, ideas for my craft shop, and even projects I want to build when I have more time.&lt;/p&gt;

&lt;h2&gt;What do you need?&lt;/h2&gt; 

&lt;p&gt;This list is going to vary depending on how your journal looks. If you love to draw and doodle, you will be using a lot more than someone who just wants a simple bullet journal. Regardless of which type you are, all you really need is a journal and a pen.&lt;/p&gt;

&lt;p&gt;Many bullet journal experts and fans suggest using journals with dots or square paper since it is easier to work with and customize. However, you can use journals with lines if you like. Basically, you don't need to go crazy and buy a new notebook. Just use whatever you have.&lt;/p&gt;

&lt;p&gt;Ryder Carroll (he's the creator of the Bullet Journal according to the Bullet Journal website) does offer a few tips to help newbies find the right journal for their systems. He suggests picking a journal that will be "rugged enough to keep up with you". Therefore he encourages newbies to think about the size and the quality of whatever they want to use. In a nutshell, Carroll suggests journals that are similar to Moleskine or Leuchtturm.&lt;/p&gt;

&lt;h3&gt;I have been using lots of journals in my collection.&lt;/h3&gt;

&lt;p&gt;This gives me a chance to try out different notebooks once I use all the pages. Right now, I am using these Disney Princess notebooks I found at the Disney Store for my journals. I just started using the Belle journal this month.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SoxiihjU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://live.staticflickr.com/65535/51101550477_72e4a5e267_m.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SoxiihjU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://live.staticflickr.com/65535/51101550477_72e4a5e267_m.jpg" alt="3 Notebooks. Belle is in the back, Cinderella the middle, and an anime journal on top"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;These journals have lines that I like the best since I don't do lots of doodling and sketching in my notebooks. Instead of sketching things in my journal, the notebooks already have a little bit of decoration already in them. Every other page in these journals has a small image of the cover's Disney Princess on a page.&lt;/p&gt;

&lt;h3&gt;Today's tutorial is going to walk you through the process I use to set up my bullet journals.&lt;/h3&gt;

&lt;p&gt;For this post, I'm using a journal my friend got in his recent Loot Crate anime box. This notebook features a symbol from the anime &lt;em&gt;Attack of the Titans&lt;/em&gt;. It may be smaller than what is recommended for bullet journals, but it features square paper which is a great choice for newbies. I also use a few different color pens I got from Joann Fabrics for the key symbols.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://lootcrate.com/"&gt;==&amp;gt; Click here to learn more about Loot Crate!&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.joann.com/pigma-05-micron-set-of-6-assorted/5903455.html"&gt;==&amp;gt; Click here to buy the color pens I used for my bullet journal demo!K/a&amp;gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Feel free to use whatever you like for your own journal. This includes stickers, images you print off the internet, color pencils, and more. If you need more inspiration, BuzzFeed and Pinterest are great places to see what others have done with their bullet journals. The links section includes a list of great BuzzFeed articles that show other ways to customize your bullet journal.&lt;/p&gt;

&lt;h2&gt;It's time to set up your journal!&lt;/h2&gt; 

&lt;p&gt;Once you have all your materials gathered together, it is time to starting getting all your pages ready in your bullet journal. While bullet journals are different for every person that uses them, every bullet journal always has these pages. For today's post, I'll be showing you the following pages:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Key of Symbols&lt;/li&gt;
&lt;li&gt;Index Page(s)&lt;/li&gt;
&lt;li&gt;Future Log&lt;/li&gt;
&lt;li&gt;Monthly Log&lt;/li&gt;
&lt;li&gt;Monthly To Do List&lt;/li&gt;
&lt;li&gt;Daily Log&lt;/li&gt;
&lt;/ul&gt; 

&lt;p&gt;If any of these sections are confusing, don't forget to revisit the BuzzFeed Nifty and Bullet Journal videos. Both videos do a great job explaining and modeling all these pages. I also recommend using all the information from the Bullet Journal website. The website has lots of great tutorials, guides, and images to help newbies get their journals ready.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bulletjournal.com/pages/learn"&gt;==&amp;gt; Click here to learn more from the Bullet Journal website!&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Let's start with the key page.&lt;/h3&gt; 

&lt;p&gt;This page can be anywhere in your bullet journal, but I like to put my key as the first page of my journal. This makes it easier for me to find when I forget a specific symbol or don't remember what a specific symbol means. My bullet journal uses the common bullet journal symbols. Below is a picture of the key in my bullet journal with all the symbols and meanings.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LDPqGZMv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://live.staticflickr.com/65535/51102373018_f63aca9d91_m.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LDPqGZMv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://live.staticflickr.com/65535/51102373018_f63aca9d91_m.jpg" alt="Key page of journal with symbols and meanings on it"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You don't have to use these symbols for these different tasks. Find a system that works for you, but I suggest newbies start with this system for a few weeks to see what you like and want to change.&lt;/p&gt;

&lt;p&gt;Here's a quick review of each of the meanings for the symbols in my bullet journal.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Events mean a big event or something scheduled is happening on this date. I use these symbols often for holidays, events I'm attending, and webinars summits I plan on participating in.&lt;/li&gt;
&lt;li&gt;The X symbol means a task has been completed.&lt;/li&gt;
&lt;li&gt;The &amp;lt; symbol means an event has been scheduled and put in both the monthly and future logs.&lt;/li&gt;
&lt;li&gt;The dot lets me know I have something I need to do today while a dash is a note or reminder to myself. I use notes often to remind myself of important information.&lt;/li&gt;
&lt;li&gt;Finally, the &amp;gt; tells me a specific task needs to be migrated or done completed later down the road.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;The Index Page&lt;/h3&gt; 

&lt;p&gt;Now that key is set, we are almost ready to start. We need to set up the index page. I have a one-page index that lists all the page names and page numbers in my journal.&lt;/p&gt;

&lt;p&gt;The index can be as specific as you want it to be. I like to keep mine as simple as possible by grouping all the pages for each month under the month's name in the index. Below is how my index page looks in my journal.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mXFl1Gby--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://live.staticflickr.com/65535/51103239870_2399e792ec_m.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mXFl1Gby--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://live.staticflickr.com/65535/51103239870_2399e792ec_m.jpg" alt="Index page with page names and page numbers listed"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You won't have many pages at this point, but we'll be quickly adding pages as you move through this tutorial. As you add more pages to your journal, you will be flipping back to the index often to add each page(s).For my journal, I put the name of the page and the page number most of the time. The only pages I group together are ones for each month. This just means the month in the index tells me where I can find the monthly log, monthly to-do list, and the month's daily log.&lt;/p&gt;

&lt;h3&gt;Future Log&lt;/h3&gt; 

&lt;p&gt;The first page you can add to your index is your future log. The future log is a calendar that allows you to see all the events happening each month or over the year. I usually set up my future log for 6 months at a time. This is where I write down important events, holidays, and important deadlines I need to remember.&lt;/p&gt;

&lt;p&gt;You can use the symbols from your key in this section, but I recommend simply writing the date and the event. For example, I wanted to remember the date for Mother's Day. I wrote this in my future log as 24-Mother's Day in the May section. This means Mother's Day is May 24.&lt;?p&gt;

&lt;/p&gt;
&lt;p&gt;You can be as specific as you want in your future log. I like to add times to specific events and dates in mine. This helps me remember the important dates as I flip through my journal.&lt;/p&gt;

&lt;p&gt;I might write a dentist's appointment in my future log as 2-Dentist's Appointment 10 a.m. in May. This helps me remember I have a dentist appointment at 10 a.m. on May 2.&lt;/p&gt;

&lt;p&gt;BuzzFeed reminds readers that they don't have to fill out their future log right away. You can choose to fill out your future log as you go if you like. What is most important in this stage is setting up the two pages for the future log.&lt;/p&gt;

&lt;h3&gt;Monthly Log&lt;/h3&gt;

&lt;p&gt;One of the things that will help you fill out your future log is the monthly log. The monthly log lets you see everything that is happening in each month. On a page, you list all the dates and abbreviations for each day of the week.&lt;/p&gt;

&lt;p&gt;This might look like 1 M which means Monday, May 1 or 13 Sat for Saturday, May 13. Once the days and dates are written down, you just start writing down events, holidays, and scheduled tasks next to specific days. These can be special events, deadlines for payments you need to make, or when a paper for your class might be due.&lt;/p&gt;

&lt;p&gt;Last week, I found a time to schedule my first career consultation for the WordPress Developer blueprint I've been working on. When I was picking the right time to schedule, I used my monthly log to see what was happening that week. Once I scheduled a time and date, I added this information to my monthly log as "Skillcrush career consultation 4 p.m." by the date.&lt;/p&gt;

&lt;p&gt;If I have an event scheduled for an entire week, I will block out a bunch of days for that event. For instance, I was scheduled for jury duty at the end of April. In the April monthly log, I just wrote "jury duty" next to each day I was on call for jury duty. This let me know not to plan very many things for those days in case I got put on a jury during that week.&lt;/p&gt;

&lt;h3&gt;Monthly To-Do List&lt;/h3&gt; 

&lt;p&gt;BuzzFeed and Carroll group the monthly to-do list as part of the monthly log, but I'm keeping this separate since these tasks rarely appear on my monthly log. This page lists all the tasks and things you want to accomplish for every month. The to-do list is where you'll start using most of the symbols you created in your key earlier.&lt;/p&gt;

&lt;p&gt;Take a look at my monthly to-do list for May. This list doesn't include chores I want to accomplish or deadlines I need to meet. These items can be buying a present for a special occasion or making sure I schedule specific appointments.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ifBjiJ7e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://live.staticflickr.com/65535/51104159590_97410f78a4_m.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ifBjiJ7e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://live.staticflickr.com/65535/51104159590_97410f78a4_m.jpg" alt="May To-Do List with list items in bullet points and x's down the page"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If there are any tasks that need to be completed first, you can put a star next to these items on your to-do list like in this example. I recommend putting any starred items on your monthly log right away so you make sure you do these tasks right away. If I know I won't be completing a specific task that month, I will use the &amp;gt; next to that item so I know I can move it to the next month's to-do list.&lt;/p&gt;

&lt;h3&gt;Daily Log&lt;/h3&gt; 

&lt;p&gt;We are done with the future and monthly logs, but there is one log left to do. This log is the daily log. This is where you'll be spending the most time in your journal. The log uses rapid logging which you keep track of events, scheduled tasks, notes, and more.&lt;/p&gt;

&lt;p&gt;You don't have to put a lot of time into your bullet journal and you can do this daily log at any time you want during the day. It depends on what feels the best for you. I don't like carrying my bullet journal everywhere I go, so I save all my rapid logging for the end of the day.&lt;/p&gt;

&lt;p&gt;I mostly write down tasks I need to do and write down notes of things that might have happened during the day or important things I need to remember. I also double-check my calendar on my phone to write down any events I've scheduled in my journal and make sure I put everything in my log. This only takes me a few minutes every night, but you are welcome to spend more time if you would like.&lt;/p&gt;

&lt;p&gt;The daily log is going to take a lot of pages, but you can save space using a two-column layout just like the ones Carroll and BuzzFeed show in their examples. I normally can fit 12 days on a page since I don't write a lot of information for each day, but this might be different depending on your writing style, how detailed you want to be in your daily log, and the kind of journal you are using. I suggest taking 3-4 days of just rapid logging any way you want to see what your writing style is and what you like to write about. These first few days will give you a good sense of how many pages you'll be using and what layouts you might like to play around with.&lt;/p&gt;

&lt;h2&gt;What else can you add to your journal?&lt;/h2&gt; 

&lt;p&gt;You have the basic pages all set up in your journal, but you don't have to just keep track of dates and events in a bullet journal. This is where most of the customization comes in. You can dedicate more pages to other things happening in your life.&lt;/p&gt;

&lt;p&gt;These pages can be anything from lists of books you want to read to a shopping list. Anything you think about can be its own separate page in your notebook. The goal of these pages is to keep similar items together and organized.&lt;/p&gt;

&lt;p&gt;I mostly use my journal as a planner, but I have several pages set up in my notebook for different projects I'm working on or ideas I would like to remember. For example, there is a page in my journal just for ideas I would like to write about on my blog while another page is organized with all the craft ideas I want to feature in my craft shop. I even have a page just for programming which lists all the languages and skills I would like to learn next.&lt;/p&gt;

&lt;h2&gt;Conclusion&lt;/h2&gt; 

&lt;p&gt;Bullet journals are a great way to staying organized and focused on the most things you want to accomplish. It doesn't matter what kind of writer you are or how artistic you can be. This organization system is flexible and lets you fit the system to what works best for you.&lt;/p&gt;

&lt;p&gt;There is no right or wrong way to do a bullet journal and chances are you'll make mistakes along the way. That is ok. You will still get the benefits no matter what.&lt;/p&gt;

&lt;p&gt;If you want even more inspiration, I included lots of links to help you get ideas including the Bullet Journal website I mentioned frequently during this post. Lots of these articles come from BuzzFeed. They often feature content about bullet journals and how to customize your journal with different products and layouts.&lt;/p&gt;

&lt;p&gt;Feel free to check out these articles below. You can also find more ideas on Pinterest if you still want more ideas.&lt;/p&gt;

&lt;h3&gt;Links&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://bulletjournal.com/"&gt;bulletjournal.com website&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.thelazygeniuscollective.com/blog/how-to-bullet-journal"&gt;The Lazy Genius Collective blog post How to Bullet Journal&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.facebook.com/bulletjournal/"&gt;Bullet Journal Facebook page&lt;/a&gt;&lt;br&gt;
&lt;a href="https://lifehacker.com/the-bullet-journal-minus-the-hype-is-actually-a-reall-1786382012"&gt;Lifehacker article on Bullet Journal&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.reddit.com/r/bulletjournal/"&gt;Reddit page for Bullet Journals&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;BuzzFeed Links&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://www.buzzfeed.com/nicolenguyen/genius-ways-you-can-customize-your-bullet-journal?utm_term=.fl6gPdVdon#.hqnxewBwL6"&gt;23 Genius Ways to Customizing Your Bullet Journal&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.buzzfeed.com/gretaalvarez/bullet-journaling-2017?utm_term=.mlgzE2o2VK#.kj7XDx4xJ2"&gt;16 Tips to Make 2017 Your Best Year Ever Using Just a Pencil and a Notebook&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.buzzfeed.com/rachelwmiller/mental-health-bullet-journal?utm_term=.ik7aWJPJZ3#.rmpnrX5XNb"&gt;Here's How to Use a Bullet Journal for Better Mental Health&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.buzzfeed.com/jasminnahar/insanely-useful-bullet-journal-tips?utm_term=.kyNkOZ1ZYA#.whk1M6o6Rx"&gt;21 Tips from Normal People that Prove Bullet Journaling is for Everyone&lt;/a&gt;&lt;/p&gt;

&lt;h5&gt;Products Suggestions&lt;/h5&gt;

&lt;p&gt;&lt;a href="https://www.buzzfeed.com/rachelwmiller/products-that-will-enable-your-bullet-journaling-habit-in?utm_term=.vb2pJmOm4A#.agN5p2V2lK"&gt;17 Products to Help You Take Your Bullet Journal to the Next Level&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.buzzfeed.com/treyegreen/bullet-journal-products-supplies-best"&gt;17 Inexpensive Products That'll Make Your Journal Even More Awesome&lt;/a&gt;&lt;/p&gt;

&lt;h5&gt;Layout Ideas&lt;/h5&gt;

&lt;p&gt;&lt;a href="https://www.buzzfeed.com/kaylayandoli/bujo-pics-awww-yessssss?utm_term=.jfXGbq8qyN#.qe3ewY0Y6o"&gt;25 Satisfying Bullet Journal Layouts That'll Soothe Your Soul&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.buzzfeed.com/rachelwmiller/minimalist-bullet-journals?utm_term=.edLdyWmWQE#.obRKx0q0Z7"&gt;24 Minimalist Bullet Journal Layouts That'll Get You Hard article&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.buzzfeed.com/ailbhemalone/bullet-journal-layouts-to-try?utm_term=.haGzaoqoPL#.cbBvOZXZDg"&gt;21 Weirdly Soothing Bullet Journal Layouts to Try&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.buzzfeed.com/annaborges/bullet-journaling-for-health?utm_term=.fcKjaqYqyO#.dn828xNxP4"&gt;29 Bullet Journal Layouts for Anyone Trying to Be Healthy&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.buzzfeed.com/rachelwmiller/fun-and-festive-christmas-bullet-journal-ideas?utm_term=.sjkodmJmeM#.ulq6QG3GyV"&gt;21 Very Merry Christmas Bullet Journal Ideas&lt;/a&gt;&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>bulletjournal</category>
    </item>
    <item>
      <title>Free Programming Tutorials!</title>
      <author>CristoferK</author>
      <pubDate>Thu, 08 Apr 2021 17:01:25 +0000</pubDate>
      <link>https://dev.to/cristoferk/free-programming-tutorials-6pf</link>
      <guid>https://dev.to/cristoferk/free-programming-tutorials-6pf</guid>
      <description>&lt;p&gt;Hello!&lt;br&gt;
I have a YouTube channel where I am posting programming tutorials! If you want to support me please like, share and subscribe!&lt;br&gt;
&lt;a href="https://www.youtube.com/channel/UCFzeA3xC-_i4ZT-XwcwsJxQ/"&gt;https://www.youtube.com/channel/UCFzeA3xC-_i4ZT-XwcwsJxQ/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>How to enable Tailwind JIT compilation mode in your Angular project.</title>
      <author>Adithya Sreyaj</author>
      <pubDate>Thu, 08 Apr 2021 16:56:20 +0000</pubDate>
      <link>https://dev.to/adisreyaj/how-to-enable-tailwind-jit-compilation-mode-in-your-angular-project-27oc</link>
      <guid>https://dev.to/adisreyaj/how-to-enable-tailwind-jit-compilation-mode-in-your-angular-project-27oc</guid>
      <description>&lt;p&gt;Tailwind, for those living under a rock, is all the buzz among web devs. It is a utility first CSS framework wherein we add a bunch of classes to HTML elements and the rest is taken care of by Tailwind.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"w-full flex-none text-sm font-medium text-gray-500 mt-2"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
   Test
 &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is how your template would look like. I mean not all are a fan of this approach, but for those who like this kind of utility-class approach, Tailwind is the best out there.&lt;/p&gt;

&lt;p&gt;I personally have been using it extensively for all my projects, and I totally love it. You will be writing fewer custom styles, which is a relief. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tailwind-getting-to-know-it"&gt;
  &lt;/a&gt;
  Tailwind - Getting to know it
&lt;/h2&gt;

&lt;p&gt;Writing custom styles was totally my thing until I started using  &lt;a href="https://tailwindcss.com/"&gt;Tailwind&lt;/a&gt;. I was not a fan of bootstrap and always made sure to write plain old CSS for most of the projects. You won't be able to find the real advantage of using utility-first frameworks like these at first or in smaller applications.&lt;br&gt;
The real benefit comes when the application grows and the styles become very difficult to manage. Over time the styles bundle would grow drastically, especially if you are working in a team with a lot of other devs.&lt;/p&gt;

&lt;p&gt;If you are using Tailwind, you would be shipping fewer styles as everything which is not used will be purged, meaning only those classes that you have used will be part of the bundle. This will shave a huge chunk from the styles bundle.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#angular-and-tailwind"&gt;
  &lt;/a&gt;
  Angular and Tailwind
&lt;/h2&gt;

&lt;p&gt;People really started liking Tailwind and using it with other frameworks was so easy. But in the case of Angular, it was a different story. &lt;br&gt;
Tailwind is a  &lt;a href="https://postcss.org/"&gt;PostCSS&lt;/a&gt;  plugin, so to make it work, we need access to the PostCSS configuration where we can specify tailwind in the plugins list.&lt;br&gt;
Even though Angular uses PostCSS, it didn't expose the bundler config file making it difficult to use Tailwind in Angular.&lt;/p&gt;

&lt;p&gt;The only way is to eject the webpack config and then manually configure the bundler to utilize Tailwind. It is not something an average developer would do and is not recommended either.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#angular-tailwind-schematics"&gt;
  &lt;/a&gt;
  Angular Tailwind Schematics
&lt;/h2&gt;

&lt;p&gt;Ngneat came up with a super cool schematic for Angular ( &lt;a href="https://github.com/ngneat/tailwind"&gt;NgNeat/Tailwind&lt;/a&gt; ), which would basically do everything and configure all the stuff needed to make Tailwind work with Angular. And it is so damn straightforward.&lt;/p&gt;

&lt;p&gt;The schematics can be accessed via:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;ng add @ngneat/tailwind
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#angular-official-support-for-tailwind"&gt;
  &lt;/a&gt;
  Angular Official Support for Tailwind
&lt;/h2&gt;

&lt;p&gt;Seeing the hype and the number of user requests, the Angular team was quick to release a version of Angular (&lt;code&gt;v11.2&lt;/code&gt;) which comes with support for Tailwind. If the CLI detects a tailwind configuration in your project, PostCSS will automatically use the tailwind plugin with this config.&lt;/p&gt;

&lt;p&gt;Before Tailwind came up with the JIT compiler, the compiling takes a lot of time. If you have a lot of variants configured in the tailwind config, the styles bundle spitted out in dev mode is too big that it lags the developer console while inspecting elements. &lt;br&gt;
Purge was recommended to be enabled during production build, otherwise compiling would take even more time.&lt;/p&gt;

&lt;p&gt;Here's what you have to do:&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#prerequisite"&gt;
  &lt;/a&gt;
  Prerequisite
&lt;/h3&gt;

&lt;p&gt;Make sure the Angular CLI version is &amp;gt;= 11.2&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#setting-up-tailwind-jit"&gt;
  &lt;/a&gt;
  Setting up Tailwind JIT
&lt;/h3&gt;

&lt;p&gt;Tailwind JIT is release in &lt;code&gt;v2.1&lt;/code&gt; so make sure you are installing the latest version&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Install tailwind as a dependency
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm i tailwindcss
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Create the tailwind config file
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx tailwindcss init
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Add these base styles to &lt;code&gt;styles.scss&lt;/code&gt; file:
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight scss"&gt;&lt;code&gt;&lt;span class="k"&gt;@import&lt;/span&gt; &lt;span class="s2"&gt;"tailwindcss/base"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;@import&lt;/span&gt; &lt;span class="s2"&gt;"tailwindcss/components"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;@import&lt;/span&gt; &lt;span class="s2"&gt;"tailwindcss/utilities"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Edit the &lt;code&gt;tailwind.config.js&lt;/code&gt; file to enable &lt;code&gt;jit&lt;/code&gt; compilation.&lt;/li&gt;
&lt;li&gt;Update the purge array with the path to your components. If purge is not configured, JIT will not simple work.
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;mode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;jit&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;purge&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./src/app/**/*.{ts,html}&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="na"&gt;darkMode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// or 'media' or 'class'&lt;/span&gt;
  &lt;span class="na"&gt;theme&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{},&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;variants&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{},&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;plugins&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[],&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#running-the-project"&gt;
  &lt;/a&gt;
  Running the project
&lt;/h3&gt;

&lt;p&gt;For the Tailwind JIT compiler to detect changes to your files, you need to set the &lt;code&gt;NODE_ENV&lt;/code&gt; to &lt;code&gt;development&lt;/code&gt;. Read More Here: &lt;a href="https://tailwindcss.com/docs/just-in-time-mode#watch-mode-and-one-off-builds"&gt;https://tailwindcss.com/docs/just-in-time-mode#watch-mode-and-one-off-builds&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can do that by simply setting the env variable before your serve and build scripts.&lt;br&gt;
I am using &lt;code&gt;cross-env&lt;/code&gt; so that we avoid the platform-related shenanigans when setting environment variables.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm i &lt;span class="nt"&gt;-D&lt;/span&gt; cross-env
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Update the scripts in &lt;code&gt;package.json&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="nl"&gt;"scripts"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"start"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"cross-env NODE_ENV=development ng serve"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"build"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"cross-env NODE_ENV=production ng build"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We're done! Enjoy super-fast reload times when using Tailwind. No more laggy developer consoles, when inspecting elements on your browser.&lt;/p&gt;

&lt;p&gt;Ref: &lt;a href="https://tailwindcss.com/docs/just-in-time-mode"&gt;https://tailwindcss.com/docs/just-in-time-mode&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Feel free to ping me on Twitter If you would like to connect. Stay Safe ❤️&lt;/p&gt;

&lt;p&gt;Do add your thoughts in the comments section.&lt;/p&gt;

</description>
      <category>angular</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>tailwindcss</category>
    </item>
    <item>
      <title>Reflexive McLuhanism</title>
      <author>swyx</author>
      <pubDate>Thu, 08 Apr 2021 16:51:38 +0000</pubDate>
      <link>https://dev.to/swyx/reflexive-mcluhanism-kmn</link>
      <guid>https://dev.to/swyx/reflexive-mcluhanism-kmn</guid>
      <description>&lt;p&gt;This post is my attempt at a "red pill" for those who haven't had McLuhanite ideas applied to the world they live in.&lt;/p&gt;

&lt;p&gt;I think people don't appreciate enough how much we are a product of our environment — and how much of our environment is socially constructed. Not only that, it is constructed by a small group of builders who never really thought they'd ever get this far (such is the nature of leverage).&lt;/p&gt;

&lt;p&gt;To paraphrase Churchill: &lt;a href="https://quoteinvestigator.com/2016/06/26/shape/"&gt;First we shape X, then X shapes us&lt;/a&gt;. If a defining characteristic of humanity is making and using tools, then a defining characteristic of society is being shaped by those same tools.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#social-everything-optimization"&gt;
  &lt;/a&gt;
  Social Everything Optimization
&lt;/h2&gt;

&lt;p&gt;We are well past debating &lt;a href="https://en.wikipedia.org/wiki/Linguistic_relativity"&gt;linguistic relativity and Sapir-Whorf&lt;/a&gt;. "Language shapes thought"? That's cute. Try &lt;em&gt;everything around us&lt;/em&gt; shaping &lt;em&gt;everything we do&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://florentcrivello.com/index.php/2019/04/29/software-the-tough-tomato-principle-and-the-great-weirdening-of-the-world/"&gt;The Tough Tomato Principle&lt;/a&gt;&lt;/strong&gt; by Florent Crivello, among many things, spotted the impact of Google Maps on names of hotels ("Good Hotel San Francisco"). How long until someone is &lt;em&gt;born&lt;/em&gt; named "Best Lawyer NYC"? &lt;/p&gt;

&lt;p&gt;Once you see it, you see it everywhere. Game developers optimizing for Twitch spectator experience, Museums optimizing for Instagram, &lt;a href="https://switchedonpop.com/episodes/whosafraidoftiktok"&gt;Musicians optimizing for TikTok&lt;/a&gt; and their &lt;a href="https://www.rollingstone.com/pro/features/tik-tok-hits-changing-titles-983383/"&gt;labels too&lt;/a&gt;. We're even &lt;a href="https://www.theverge.com/2020/8/6/21355674/human-genes-rename-microsoft-excel-misreading-dates"&gt;renaming human genes because Excel&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Instagram is God's gift to colorful and niche products. Living in New York, I've personally seen the explosion of color &lt;a href="https://edition.cnn.com/travel/article/best-ice-cream-new-york/index.html"&gt;even in ice cream shops&lt;/a&gt; - I used to work in SoHo, where the Black Tap put out increasingly obnoxiously unrealistic sundaes that work great on Instagram but would be a nightmare to actually eat.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6wGbxhC0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/108opfwrujxck57njih3.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6wGbxhC0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/108opfwrujxck57njih3.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;How about clothes? &lt;a href="https://mastersofscale.com/jenn-hyman-the-secret-business-behind-the-business/"&gt;Listen to Jenn Hyman&lt;/a&gt; directly credit Instagram for women's increased desire for more variety in clothing, which helped her business, Rent the Runway.&lt;/p&gt;

&lt;p&gt;A lot of people will deny the influence of media on their own preferences. The illusion of free will and desire for self-determination is strong. &lt;/p&gt;

&lt;p&gt;But you can't deny the impact of media changing the real world/economy. And people who's job it is to reach people (marketers and politicians) are depressingly attuned to how much media shapes us. Alex Danco &lt;a href="https://alexdanco.com/2019/10/17/the-audio-revolution/"&gt;made a strong case&lt;/a&gt; that TV helped elect JFK, Radio helped  Trump. AOC isn't on Tiktok, but you can bet &lt;a href="https://twitter.com/aoc/status/1279438522102013952?lang=en"&gt;she is reaching her voters&lt;/a&gt; in that format.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#design-is-king"&gt;
  &lt;/a&gt;
  Design is King
&lt;/h2&gt;

&lt;p&gt;I used to call this "Modern McLuhanism", because it was McLuhan that asserted &lt;a href="https://www.oxfordreference.com/view/10.1093/oi/authority.20110803100145151"&gt;the non-neutrality of media&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;He observed that in the 1960s. Fast forward half a century, and we now live in a world where &lt;a href="https://twitter.com/balajis/status/1313587476015935488?lang=en"&gt;every company is a media company&lt;/a&gt; and &lt;a href="https://www.garyvaynerchuk.com/every-single-one-of-you-is-a-media-company/"&gt;every person is a media company&lt;/a&gt;. The modern affliction is not simply that the choice of medium affects us, but also that we are complicit in creating the medium in the first place. &lt;/p&gt;

&lt;p&gt;Modern McLuhanism is &lt;em&gt;reflexive&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;In such a world, design is king&lt;/strong&gt;. Thoughtful product design genuinely nudges society forward. Carelessness can tear it apart. Wilson Miner called out the implications of this for software in his classic talk, &lt;a href="https://vimeo.com/34017777"&gt;When We Build&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;I'd go so far as to make it required viewing, and this idea required digestion, for all builders. We who have this awesome power, correspondingly have an awesome responsibility.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Side note: I have previously written about the duality of &lt;a href="https://www.swyx.io/mimicry-reflexivity/"&gt;Mimicry and Reflexivity&lt;/a&gt; exploring more applications of reflexivity on its own.&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>reflections</category>
      <category>reflexivity</category>
      <category>mcluhanism</category>
    </item>
    <item>
      <title>Theming with native CSS variables</title>
      <author>Sergio Francisco Montoya Comparan</author>
      <pubDate>Thu, 08 Apr 2021 16:49:52 +0000</pubDate>
      <link>https://dev.to/sergiomontoyac/theming-with-css-variables-48pl</link>
      <guid>https://dev.to/sergiomontoyac/theming-with-css-variables-48pl</guid>
      <description>&lt;p&gt;When developing Frontend, I'm pretty sure most of us make have used something like Bootstrap or Bulma.io, they give us tools to create beautiful interfaces with just a handful of classes added into our HTML elements.&lt;/p&gt;

&lt;p&gt;Among one of the many things we can find are the Themes, that let us change the whole look of our elements with just a few lines of code or just adding a simple class. There are many ways of achieving this but in this case I want to share how I prefer to create these Themes and with the use of CSS Variables.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-css-variables"&gt;
  &lt;/a&gt;
  What are CSS variables?
&lt;/h2&gt;

&lt;p&gt;CSS variables, as its name implies, are variables that we can assign a value and then use it later, but one of the most important things is that its value can be changed and it will affect in cascade anything that is using it from the point we change the value, just as CSS is supposed to work. CSS variables are completely different from those we have on a preprocessor, so we don't need those preprocessor variables for us to create a simple theme.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lets-start-with-our-theme"&gt;
  &lt;/a&gt;
  Let's start with our Theme
&lt;/h2&gt;

&lt;p&gt;Now that we know what a CSS variables is, we can start creating our Theme, so first we are going to create some variables. CSS variables follow this syntaxis &lt;code&gt;--my-var: value&lt;/code&gt;.  To declare our variables as global variables, we have to declare them in the &lt;code&gt;:root&lt;/code&gt; so we declare them as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;:root {
  --main: #110066;
  --secondary: #90CBFB;
  --button-text: #FFF;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can declare variables inside classes, but for now, let's just have this three as global.&lt;/p&gt;

&lt;p&gt;Now that we have our variables declared, we can use them as we please, so we are going to create some buttons using those variables:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.button {
  padding: .5em 1em;
  border-radius: .5em;
  background-color: var(--main);
  color: var(--button-text);
  display:inline-block;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We have our main button and to add a secondary button we just change or &lt;code&gt;background-color&lt;/code&gt; and use the &lt;code&gt;--secondary&lt;/code&gt; variable:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.button.secondary {
  background-color: var(--secondary);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We are going to call these classes our default Theme, since they don't need anything else to be styled, just add those classes to the element, so we are going to add just two simple anchors.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div class='theme'&amp;gt;
  &amp;lt;a class='button'&amp;gt;Main Button&amp;lt;/a&amp;gt;
  &amp;lt;a class='button secondary'&amp;gt;Secondary Button&amp;lt;/a&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If everything went well, we should see something like this:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2svhLqqV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h126zvt06zju86p8thss.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2svhLqqV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h126zvt06zju86p8thss.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If we wanted, we could use those variables for anything else, like &lt;code&gt;border-color&lt;/code&gt;, but just to keep it simple we are just changing the &lt;code&gt;background-color&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Just to add more variety to our theme we are going to add a message element:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div class='theme'&amp;gt;  
  .
  .
  .
  &amp;lt;div&amp;gt;
    &amp;lt;span class='message'&amp;gt;
      This is my main Message
    &amp;lt;/span&amp;gt;
    &amp;lt;span class='message secondary'&amp;gt;
      This is my secondary Message
    &amp;lt;/span&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And its corresponding CSS using our CSS variables:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.message {
  color: var(--main);
}

.message.secondary {
  color: var(--secondary);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Ok, with our message elements added we should have something like this:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sziQOwrD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rd6uarbofg27imovh4t8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sziQOwrD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rd6uarbofg27imovh4t8.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now we are going to see the power of the CSS variables and why they are something that we should use more often.&lt;/p&gt;

&lt;p&gt;With the use of just a simple class and some variables adjustments, we are able to change the whole look of our components and we do it as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.green-theme {
  --main: #485922;
  --secondary: #798C35;  
}

.high-theme {
  --main: #00B2BF;
  --secondary: #FFC20D;  
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With just those two simple clases, we are able to just slap them into a container element and everything inside will change automatically, cascading all its values. So if we add the &lt;code&gt;.green-theme&lt;/code&gt; class to the element containing all the elements, in our case the element with class &lt;code&gt;.theme&lt;/code&gt; we should see something like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SoYVwVdo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xfg1acoyhhkxjguqhdsj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SoYVwVdo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xfg1acoyhhkxjguqhdsj.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: We actually don't need the class &lt;code&gt;.theme&lt;/code&gt; for all of this to work, we could just use the &lt;code&gt;.green-theme&lt;/code&gt; class and everything should work exactly the same&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;And if we use our &lt;code&gt;.high-theme&lt;/code&gt; class we should see something like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iKqbyMqf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hd8o4z1o3z9te5c9bwq4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iKqbyMqf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hd8o4z1o3z9te5c9bwq4.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;From this point we could continue creating more components/elements that make use of our variables, add more variables and create more stuff, and just by changing the values of our variables inside the &lt;code&gt;.green-theme&lt;/code&gt; and &lt;code&gt;.high-theme&lt;/code&gt; classes, all the values magically adapt.&lt;/p&gt;

&lt;p&gt;If we wanted to do something like this using only SCSS variables, it would be a much longer process, since our SCSS variables won't cascade the same as our native CSS variables.&lt;/p&gt;

&lt;p&gt;In this &lt;a href="https://codepen.io/chekoMC/pen/KKaveQm"&gt;pen&lt;/a&gt; you can see both options and check how the SCSS code won't work if we follow the exact same as native CSS variables.&lt;/p&gt;

&lt;p&gt;What do you think now about CSS variables? Remember that we can use both SCSS variables and native CSS variables in tandem to create amazing stuff, so if we wanted to do that we could have something like this, using both at the same time (&lt;a href="https://codepen.io/chekoMC/pen/VwPrPzZ"&gt;pen&lt;/a&gt;):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;:root {
  --main: #022859;
  --secondary: #024873;
  --button-text: #FFF;
}

$main: var(--main);
$secondary: var(--secondary);
$button-text: var(--button-text);

.green-theme {
  --main: #485922;
  --secondary: #798C35;  
}

.high-theme {
  --main: #00B2BF;
  --secondary: #FFC20D;  
}

.button {
  padding: .5em 1em;
  border-radius: .5em;
  display:inline-block;
  background-color: $main;
  color: $button-text;
  margin-bottom: .5em;
  &amp;amp;.secondary {
    background-color: $secondary;  
  }
}

.message {
  color: $main;
  &amp;amp;.secondary {
    color: $secondary;
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see and if you've been curious enough, you'll see that this is really similar and pretty much what bootstrap or other CSS frameworks do, just in a small scale.&lt;/p&gt;

&lt;p&gt;I hope you liked this small post and if you find a good use for this in your next project, that will be sweet!&lt;/p&gt;

</description>
      <category>css</category>
      <category>html</category>
      <category>beginners</category>
      <category>theme</category>
    </item>
    <item>
      <title>GitHub Actions Version Updater, Similar to GitHub's Dependabot, but for GitHub Actions</title>
      <author>Maksudul Haque</author>
      <pubDate>Thu, 08 Apr 2021 16:42:06 +0000</pubDate>
      <link>https://dev.to/saadmk11/github-actions-version-updater-similar-to-github-s-dependabot-but-for-github-actions-2g2i</link>
      <guid>https://dev.to/saadmk11/github-actions-version-updater-similar-to-github-s-dependabot-but-for-github-actions-2g2i</guid>
      <description>&lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/marketplace/actions/github-actions-version-updater"&gt;GitHub Actions Version Updater&lt;/a&gt;&lt;/strong&gt; is GitHub Action that &lt;strong&gt;Updates Other GitHub Actions&lt;/strong&gt; in a Repository and creates a &lt;strong&gt;pull request&lt;/strong&gt; with those updates. It is an automated dependency updater similar to GitHub's &lt;strong&gt;Dependabot&lt;/strong&gt;, but for GitHub Actions.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-does-it-work"&gt;
  &lt;/a&gt;
  How Does It Work:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;GitHub Actions Version Updater first goes through all the &lt;strong&gt;workflows&lt;/strong&gt;&lt;br&gt;
in a repository and &lt;strong&gt;checks for updates&lt;/strong&gt; for each of the actions used in those workflows.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If an update is found and if that action is &lt;strong&gt;not ignored&lt;/strong&gt; then the workflows are updated&lt;br&gt;
with the &lt;strong&gt;latest release&lt;/strong&gt; of the action being used.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If at least one workflow file is updated then a new branch is created with the changes and pushed to GitHub.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Finally, a pull request is created with the newly created branch.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;GitHub repository:&lt;/strong&gt;&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/saadmk11"&gt;
        saadmk11
      &lt;/a&gt; / &lt;a href="https://github.com/saadmk11/github-actions-version-updater"&gt;
        github-actions-version-updater
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      GitHub Action Version Updater is GitHub Action that is used to update other GitHub Actions in a Repository and create a pull request with the updates. It is an automated dependency updater similar to GitHub's Dependabot, but for GitHub Actions.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h2&gt;
GitHub Actions Version Updater&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/saadmk11/github-actions-version-updater/releases/latest"&gt;&lt;img src="https://camo.githubusercontent.com/d922f5f01fb7b07cde6c8b4a9f29a9584213b47415370e5a778e9bc7aecfde17/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f762f72656c656173652f736161646d6b31312f6769746875622d616374696f6e732d76657273696f6e2d757064617465723f7374796c653d666c61742d737175617265" alt="GitHub release (latest by date)"&gt;&lt;/a&gt;
&lt;a href="https://github.com/saadmk11/github-actions-version-updater/blob/main/LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/e8b87b5802c37f7d1fd5419b7772ac0ff6261eb5dcad43620d8bcde3a7c47c75/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f736161646d6b31312f6769746875622d616374696f6e732d76657273696f6e2d757064617465723f7374796c653d666c61742d737175617265" alt="GitHub"&gt;&lt;/a&gt;
&lt;a href="https://github.com/marketplace/actions/github-actions-version-updater"&gt;&lt;img src="https://camo.githubusercontent.com/f3b5955cbd869bc8f8d3781718b8b280d695eb3ac6c85fc7e3188061b092f9e9/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f47657425323049742d6f6e2532304d61726b6574706c6163652d6f72616e67653f7374796c653d666c61742d737175617265" alt="GitHub Marketplace"&gt;&lt;/a&gt;
&lt;a href="https://github.com/saadmk11/github-actions-version-updater/stargazers"&gt;&lt;img src="https://camo.githubusercontent.com/a029f8b389221a6f0cc49354dfd140a277b6842511fb46dd4f288f15b07cd43c/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f736161646d6b31312f6769746875622d616374696f6e732d76657273696f6e2d757064617465723f636f6c6f723d73756363657373267374796c653d666c61742d737175617265" alt="GitHub stars"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/6e98c0b5131551a6d047c0b7d17e572cab434fbac5c606a24e4525a488f69f0a/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f776f726b666c6f772f7374617475732f736161646d6b31312f6769746875622d616374696f6e732d76657273696f6e2d757064617465722f4368616e67656c6f6725323043493f6c6162656c3d4368616e67656c6f672532304349267374796c653d666c61742d737175617265"&gt;&lt;img src="https://camo.githubusercontent.com/6e98c0b5131551a6d047c0b7d17e572cab434fbac5c606a24e4525a488f69f0a/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f776f726b666c6f772f7374617475732f736161646d6b31312f6769746875622d616374696f6e732d76657273696f6e2d757064617465722f4368616e67656c6f6725323043493f6c6162656c3d4368616e67656c6f672532304349267374796c653d666c61742d737175617265" alt="GitHub Workflow Status"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;GitHub Actions Version Updater&lt;/strong&gt; is GitHub Action that is used to &lt;strong&gt;update other GitHub Actions&lt;/strong&gt; in a Repository
and create a &lt;strong&gt;pull request&lt;/strong&gt; with the updates. It is an automated dependency updater similar to GitHub's &lt;strong&gt;Dependabot&lt;/strong&gt;
but for GitHub Actions.&lt;/p&gt;
&lt;h3&gt;
How Does It Work:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;GitHub Actions Version Updater first goes through all the &lt;strong&gt;workflows&lt;/strong&gt;
in a repository and &lt;strong&gt;checks for updates&lt;/strong&gt; for each of the action used in those workflows.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If an update is found and if that action is &lt;strong&gt;not ignored&lt;/strong&gt; then the workflows are updated
with the &lt;strong&gt;latest release&lt;/strong&gt; of the action being used.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If at least one workflow file is updated then a new branch is created with the changes and pushed to GitHub.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Finally, a pull request is created with the newly created branch.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
Usage:&lt;/h3&gt;
&lt;p&gt;We recommend running this action on a &lt;a href="https://docs.github.com/en/actions/reference/events-that-trigger-workflows#schedule"&gt;&lt;code&gt;schedule&lt;/code&gt;&lt;/a&gt;
event or a &lt;a href="https://docs.github.com/en/actions/reference/events-that-trigger-workflows#workflow_dispatch"&gt;&lt;code&gt;workflow_dispatch&lt;/code&gt;&lt;/a&gt; event.&lt;/p&gt;
&lt;p&gt;To integrate &lt;code&gt;GitHub&lt;/code&gt;…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/saadmk11/github-actions-version-updater"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Marketplace:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/marketplace/actions/github-actions-version-updater"&gt;https://github.com/marketplace/actions/github-actions-version-updater&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#usage"&gt;
  &lt;/a&gt;
  Usage:
&lt;/h3&gt;

&lt;p&gt;We recommend running this action on a &lt;a href="https://docs.github.com/en/actions/reference/events-that-trigger-workflows#schedule"&gt;&lt;code&gt;schedule&lt;/code&gt;&lt;/a&gt; event or a &lt;a href="https://docs.github.com/en/actions/reference/events-that-trigger-workflows#workflow_dispatch"&gt;&lt;code&gt;workflow_dispatch&lt;/code&gt;&lt;/a&gt; event.&lt;/p&gt;

&lt;p&gt;To integrate &lt;code&gt;GitHub Actions Version Updater&lt;/code&gt; on your repository, create a &lt;code&gt;YAML&lt;/code&gt;  file inside &lt;code&gt;.github/workflows/&lt;/code&gt; directory (&lt;code&gt;.github/workflows/updater.yaml&lt;/code&gt;) add the following into the file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;GitHub Actions Version Updater&lt;/span&gt;

&lt;span class="c1"&gt;# Controls when the action will run. &lt;/span&gt;
&lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="c1"&gt;# can be used to run workflow manually&lt;/span&gt;
  &lt;span class="na"&gt;workflow_dispatch&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;schedule&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;# Automatically run on every Sunday&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;cron&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;  &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;0&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;0&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;*&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;*&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;0'&lt;/span&gt;

&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;build&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;

    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/checkout@v2&lt;/span&gt;
        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="c1"&gt;# Access token with `workflow` scope is required&lt;/span&gt;
          &lt;span class="na"&gt;token&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.WORKFLOW_SECRET }}&lt;/span&gt;

      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Run GitHub Actions Version Updater&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;saadmk11/github-actions-version-updater@v0.5.5&lt;/span&gt;
        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="c1"&gt;# Optional, This will be used to configure git&lt;/span&gt;
          &lt;span class="c1"&gt;# defaults to `github-actions[bot]` if not provided&lt;/span&gt;
          &lt;span class="na"&gt;committer_username&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;test'&lt;/span&gt;
          &lt;span class="na"&gt;committer_email&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;test@test.com'&lt;/span&gt;
          &lt;span class="c1"&gt;# Access token with `workflow` scope is required&lt;/span&gt;
          &lt;span class="na"&gt;token&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.WORKFLOW_SECRET }}&lt;/span&gt;
          &lt;span class="c1"&gt;# Do not update these actions (Optional)&lt;/span&gt;
          &lt;span class="c1"&gt;# You need to add JSON array inside a string&lt;/span&gt;
          &lt;span class="c1"&gt;# because GitHub Actions does not yet allow `Lists` as input&lt;/span&gt;
          &lt;span class="na"&gt;ignore&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;["actions/checkout@v2",&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;"actions/cache@v2"]'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#important-note"&gt;
  &lt;/a&gt;
  Important Note:
&lt;/h3&gt;

&lt;p&gt;GitHub does not allow updating workflow files inside a workflow run. The token generated by GitHub in every workflow (&lt;code&gt;${{secrets.GITHUB_TOKEN}}&lt;/code&gt;) does not have permission to update a workflow. That's why you need to create a &lt;a href="https://docs.github.com/en/github/authenticating-to-github/creating-a-personal-access-token"&gt;Personal Access Token&lt;/a&gt;&lt;br&gt;
with &lt;strong&gt;repo&lt;/strong&gt; and &lt;strong&gt;workflow&lt;/strong&gt; scope and pass it to the action.&lt;/p&gt;

&lt;p&gt;To know more about how to pass a secret to GitHub actions you can &lt;a href="https://docs.github.com/en/actions/reference/encrypted-secrets"&gt;Read GitHub Docs&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#github-actions-version-updater-in-action"&gt;
  &lt;/a&gt;
  GitHub Actions Version Updater in Action:
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uMq-f2fV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p4v5y5it0mf42zoihoba.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uMq-f2fV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p4v5y5it0mf42zoihoba.gif" alt="GitHub Actions Version Updater Demo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#pull-request-created-by-github-actions-version-updater"&gt;
  &lt;/a&gt;
  Pull Request Created by GitHub Actions Version Updater:
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UQkxMdpM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nfprvxbinzhy6sgzttm3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UQkxMdpM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nfprvxbinzhy6sgzttm3.png" alt="GitHub Actions Version Updater Pull Request"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#pull-request-file-changes"&gt;
  &lt;/a&gt;
  Pull Request File Changes:
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xB5M0nHR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fh7ah8lxxirj14bzqj99.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xB5M0nHR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fh7ah8lxxirj14bzqj99.png" alt="GitHub Actions Version Updater Pull Request Changes"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;I think this will be really helpful for Open Source Maintainers to manage GitHub actions dependencies. If anyone is interested please try &lt;a href="https://github.com/marketplace/actions/github-actions-version-updater"&gt;GitHub Actions Version Updater&lt;/a&gt; out and leave some feedback :)&lt;/p&gt;

&lt;p&gt;If you have any questions you can reach out to me on Twitter &lt;a href="https://twitter.com/saad_mk11"&gt;@saad_mk11&lt;/a&gt;&lt;/p&gt;

</description>
      <category>github</category>
      <category>opensource</category>
      <category>python</category>
      <category>tooling</category>
    </item>
    <item>
      <title>Simple LocalStorage Project!</title>
      <author>CristoferK</author>
      <pubDate>Thu, 08 Apr 2021 16:30:14 +0000</pubDate>
      <link>https://dev.to/cristoferk/simple-localstorage-project-4d0g</link>
      <guid>https://dev.to/cristoferk/simple-localstorage-project-4d0g</guid>
      <description>&lt;p&gt;I made a simple Simple LocalStorage Project! This is the first time when I used localStorage! I learned this from a beginner tutorial what was very easy to follow.&lt;/p&gt;

&lt;p&gt;Here is the code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;LocalStorage&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;style&amp;gt;
body {
    font-family: sans-serif;
    margin: 0;
    padding: 0;
    color: grey;
}
.container {
    position: absolute;
    top: 10%;
    right: 50%;
    transform: translate(50%, 0%);
    background: white;
    width: 400px;
    height: 500px;
    box-shadow: 0px 0px 20px blue;
    padding: 10px;
    border-radius: 20px;
}
.storage {
    border:0;
    border-bottom: 1px solid #ccc;
    width: 100%;
    margin-top: 20px;
    font-size: 20px;
    outline: none;
}
.text {
    border-radius: 10px;
    padding: 10px;
    box-shadow: 0px 0px 10px blue;
    margin-top: 20px;

}
.button {
    width: 80%;
    box-shadow: 0px 0px 20px blue;
    outline: none;
    border: none;
    background: white;
    padding: 10px;
    border-radius: 20px;
    bottom: 20px;
    position: absolute;
    left: 40px;
    cursor: pointer;
    transition: 0.4s;
}
.button:hover {
    box-shadow: 0px 0px 40px blue;
    transition: 0.4s;
}
label {
    position: absolute;
    width: 45px;
    height: 22px;
    right: 20px;
    top: 20px;
    border: 2px solid;
    border-radius: 20px;
}
label:before {
    position: absolute;
    content: "";
    width: 20px;
    height: 20px;
    left: 1px;
    top: 1px;
    border-radius: 50%;
    cursor: pointer;
    background: #000;
    transition: 0.4s;
}
label.active:before {
    left: 24px;
    background: #fff;
}
body.night {
    background: #000;
    transition: 0.5s;
}
.container.night {
    background: black;
}
&amp;lt;/style&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;label id="dark-change"&amp;gt;&amp;lt;/label&amp;gt;
&amp;lt;div class="container"&amp;gt;
    &amp;lt;input type="text" class="storage" placeholder="Write something..."&amp;gt;
    &amp;lt;p class="text"&amp;gt;Text&amp;lt;/p&amp;gt;
    &amp;lt;button class="button"&amp;gt;Save&amp;lt;/button&amp;gt;
&amp;lt;/div&amp;gt;

&amp;lt;script&amp;gt;
const storageInput = document.querySelector('.storage');
const text = document.querySelector('.text');
const button = document.querySelector('.button');
const storedInput = localStorage.getItem('textinput')

if(storageInput) {
    text.textContent = storedInput
}

storageInput.addEventListener('input', letter =&amp;gt; {
    text.textContent = letter.target.value
})

const saveToLocalStorage = () =&amp;gt; {
    localStorage.setItem('textinput', text.textContent)
}
button.addEventListener('click', saveToLocalStorage)


var content = document.getElementsByTagName('body', 'container')[0];
var darkMode = document.getElementById('dark-change');
darkMode.addEventListener('click', function() {
        darkMode.classList.toggle('active');
        content.classList.toggle('night');
})
&amp;lt;/script&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Also, don't forget to subscribe to my YouTube channel for new videos every week!&lt;br&gt;
&lt;a href="https://www.youtube.com/channel/UCFzeA3xC-_i4ZT-XwcwsJxQ/videos"&gt;https://www.youtube.com/channel/UCFzeA3xC-_i4ZT-XwcwsJxQ/videos&lt;/a&gt;&lt;/p&gt;

</description>
      <category>localstorage</category>
      <category>javascript</category>
      <category>html</category>
      <category>css</category>
    </item>
    <item>
      <title>Writing DRYer tests using Pytest parametrize</title>
      <author>Kinyanjui Wangonya</author>
      <pubDate>Thu, 08 Apr 2021 16:29:08 +0000</pubDate>
      <link>https://dev.to/wangonya/writing-dryer-tests-using-pytest-parametrize-5e7l</link>
      <guid>https://dev.to/wangonya/writing-dryer-tests-using-pytest-parametrize-5e7l</guid>
      <description>&lt;p&gt;Tests tend to not always be so DRY, which isn't necessarily a bad thing.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://stackoverflow.com/a/129722/9312256"&gt;This&lt;/a&gt; SO answer sums it up nicely:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Readability is more important for tests. If a test fails, you want the problem to be obvious. The developer shouldn't have to wade through a lot of heavily factored test code to determine exactly what failed. You don't want your test code to become so complex that you need to write unit-test-tests.&lt;/p&gt;

&lt;p&gt;However, eliminating duplication is usually a good thing, as long as it doesn't obscure anything, and eliminating the duplication in your tests may lead to a better API. Just make sure you don't go past the point of diminishing returns.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Pytest gives some ways to reduce duplication with fixtures.&lt;/p&gt;

&lt;p&gt;Say you had a couple of endpoints that return data to be used in a report.&lt;br&gt;
The report data is supposed to be displayed in an excel sheet with different sheets.&lt;/p&gt;

&lt;p&gt;Sometimes, only data for one sheet is required. Other times, data for all the sheets is fetched. So the endpoints end up being broken down like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;/report/sheet-a
/report/sheet-b
/report/sheet-c
/report/sheet-d
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's take a simple test case: checking that the endpoints return &lt;code&gt;200&lt;/code&gt; when called.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pytest&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_report_sheet_a_returns_200&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'/report/sheet-a'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_report_sheet_b_returns_200&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'/report/sheet-b'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_report_sheet_c_returns_200&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'/report/sheet-c'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_report_sheet_d_returns_200&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'/report/sheet-d'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This might not look too bad, but if we wanted to test for another operation on the endpoints - checking if the endpoints require authentication for example - you get the feeling that this can be done a little bit better.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pytest&lt;/span&gt;

&lt;span class="c1"&gt;# test GET requests
&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_report_sheet_a_returns_200&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'/report/sheet-a'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_report_sheet_b_returns_200&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'/report/sheet-b'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_report_sheet_c_returns_200&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'/report/sheet-c'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_report_sheet_d_returns_200&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'/report/sheet-d'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;

&lt;span class="c1"&gt;# test auth
&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_report_sheet_a_requires_auth&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;unauthorized_client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'/report/sheet-a'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;401&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_report_sheet_b_requires_auth&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;unauthorized_client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'/report/sheet-b'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;401&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_report_sheet_c_requires_auth&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;unauthorized_client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'/report/sheet-c'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;401&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_report_sheet_d_requires_auth&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;unauthorized_client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'/report/sheet-d'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;401&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Notice that the only thing changing in the tests is the endpoints. Everything else remains the same.&lt;/p&gt;

&lt;p&gt;Given that all the sheets belong to one report, we can refactor the tests to reduce duplication without sacrificing readability.&lt;/p&gt;

&lt;p&gt;Here's how the tests can be rewritten using &lt;a href="https://docs.pytest.org/en/stable/parametrize.html#parametrize-basics"&gt;Pytest parametrize&lt;/a&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pytest&lt;/span&gt;

&lt;span class="n"&gt;report_sheet_endpoints&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="s"&gt;'/sheet-a'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s"&gt;'/sheet-b'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s"&gt;'/sheet-c'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s"&gt;'/sheet-d'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;pytest&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mark&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parametrize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'endpoint'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;report_sheet_endpoints&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_report_sheets_return_200&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;endpoint&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;'/report&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;endpoint&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;


&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;pytest&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mark&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parametrize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'endpoint'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;report_sheet_endpoints&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_report_sheets_require_auth&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;endpoint&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;unauthorized_client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;'/report&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;endpoint&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;401&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we have two tests instead of eight. But when you run the tests, 8 tests will run, not 2. Pytest takes each value in &lt;code&gt;report_sheet_endpoints&lt;/code&gt; and feeds it into the test.&lt;br&gt;
This reduces duplication while maintaining readability.&lt;/p&gt;

&lt;p&gt;Running the tests gives this output:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;test_reports.py::test_report_sheets_return_200[sheet-a] PASSED
test_reports.py::test_report_sheets_return_200[sheet-b] PASSED
test_reports.py::test_report_sheets_return_200[sheet-c] PASSED
test_reports.py::test_report_sheets_return_200[sheet-d] PASSED

test_reports.py::test_report_sheets_require_auth[sheet-a] PASSED
test_reports.py::test_report_sheets_require_auth[sheet-b] PASSED
test_reports.py::test_report_sheets_require_auth[sheet-c] PASSED
test_reports.py::test_report_sheets_require_auth[sheet-d] PASSED
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>python</category>
      <category>pytest</category>
      <category>tdd</category>
      <category>todayilearned</category>
    </item>
    <item>
      <title>Live coding - Jekyll sites</title>
      <author>Michael</author>
      <pubDate>Thu, 08 Apr 2021 16:13:11 +0000</pubDate>
      <link>https://dev.to/michaelcurrin/live-coding-jekyll-sites-9jb</link>
      <guid>https://dev.to/michaelcurrin/live-coding-jekyll-sites-9jb</guid>
      <description>&lt;p&gt;Hi fellow developers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#live-coding"&gt;
  &lt;/a&gt;
  Live coding
&lt;/h2&gt;

&lt;p&gt;I've started giving coding sessions using YouTube live stream.&lt;/p&gt;

&lt;p&gt;This weekend I'm doing a beginner-friendly session on &lt;strong&gt;Jekyll&lt;/strong&gt; - a static site generator in the Jamstack area.&lt;/p&gt;

&lt;p&gt;See the 1-hour event on Saturday a 3pm GMT+2.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/6v5vEBUmkGs"&gt;https://youtu.be/6v5vEBUmkGs&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I'll do a screenshare and cover some topics like how to convert a plain HTML theme into a Jekyll site. &lt;/p&gt;

&lt;p&gt;Plus I'll cover questions that come up in the live chatroom. Or if you have a question you want to add to this post so I can prepare it for that session.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#samples-of-jekyll"&gt;
  &lt;/a&gt;
  Samples of Jekyll
&lt;/h2&gt;

&lt;p&gt;If you want to see what a basic Jekyll site looks like, I have samples, including links to the source code. They have has content as markdown and a configured theme.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://michaelcurrin.github.io/jekyll-blog-demo/"&gt;https://michaelcurrin.github.io/jekyll-blog-demo/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here's a GitHub portfolio site built with Jekyll:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://michaelcurrin.github.io/"&gt;https://michaelcurrin.github.io/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-do-i-stream"&gt;
  &lt;/a&gt;
  How do I stream?
&lt;/h2&gt;

&lt;p&gt;If you're interested in how to setup a live stream yourself, I wrote a short tutorial &lt;a href="https://michaelcurrin.github.io/coding-blog/2021/02/28/how-to-livestream-on-youtube.html"&gt;here&lt;/a&gt; on my blog.&lt;/p&gt;

</description>
      <category>jekyll</category>
      <category>livecoding</category>
      <category>beginners</category>
      <category>livestream</category>
    </item>
    <item>
      <title>Turn Your Figma Designs Into Animated Slides</title>
      <author>David Dal Busco</author>
      <pubDate>Thu, 08 Apr 2021 16:12:44 +0000</pubDate>
      <link>https://dev.to/daviddalbusco/turn-your-figma-designs-into-animated-slides-2h1e</link>
      <guid>https://dev.to/daviddalbusco/turn-your-figma-designs-into-animated-slides-2h1e</guid>
      <description>&lt;p&gt;I am thrilled to unveil a new way to turn your Figma designs into animated slide decks thanks to the open source plugin I recently published: &lt;a href="https://www.figma.com/community/plugin/950777256486678678/Figma-to-DeckDeckGo"&gt;Figma to DeckDeckGo&lt;/a&gt; 🥳.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/arabVqr-1Do"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#but-why"&gt;
  &lt;/a&gt;
  But... Why?
&lt;/h3&gt;

&lt;p&gt;You may ask yourself why would you export your content from &lt;a href="https://www.figma.com/"&gt;Figma&lt;/a&gt; to &lt;a href="https://deckdeckgo.com"&gt;DeckDeckGo&lt;/a&gt;? After-all it is possible to present a design without a 3rd party platform. I get that but, before making up your mind, let me list some advantages I do see in such a solution.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KZ6JuFjG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2A-rC78uti7YtY_5rnCh7D7g.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KZ6JuFjG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2A-rC78uti7YtY_5rnCh7D7g.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#animate-edit-and-share"&gt;
  &lt;/a&gt;
  Animate, edit and share
&lt;/h4&gt;

&lt;p&gt;By importing your slides in DeckDeckGo you get a comprehensive way to chain and reorder your slides. Even though we do not offer yet a zillion of different options, transitions between these are going to be animated.&lt;/p&gt;

&lt;p&gt;You can also decide if you want or not extract the text components of your frames. If you do so, these are going to remain editable, which is for example handy in case you have a last minute typo to correct or, if you would use a presentation again months after its creation and would have to modify an information which would not be up-to-date anymore.&lt;/p&gt;

&lt;p&gt;Instead of sharing a PDF, you are going to transform your presentation to a standalone Progressive Web Apps, which can be share with your attendees easily. Beside the fact that doing so your deck remains dynamic, I do see also value here as you do not have to share a file of X megabytes but, only share a link to your optimized content.&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#reuse-your-design"&gt;
  &lt;/a&gt;
  Reuse your design
&lt;/h4&gt;

&lt;p&gt;The plugin splits the text of the design. The graphic components are exported in a single layer, in &lt;code&gt;webp&lt;/code&gt; images. Again here, you can probably notice my obsession for performances. WebP images are smaller than their JPEG and PNG counterparts — usually on the magnitude of a 25–35% reduction in filesize (source &lt;a href="https://web.dev/serve-images-webp/"&gt;web.dev&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;These images, once imported in DeckDeckGo, are added to your collection of assets. This means that they can be (re)used across all your slides. You can then create and style slides with your existing images as background.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3ImY6-De--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2AOFXb-3GA8T3ZqqDZQcwIcQ.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3ImY6-De--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2AOFXb-3GA8T3ZqqDZQcwIcQ.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#add-slides-and-live-polls"&gt;
  &lt;/a&gt;
  Add slides and live polls
&lt;/h4&gt;

&lt;p&gt;Decks you are importing from Figma are not written in stones, you are able to add slides to these using the variety of templates available in DeckDeckGo.&lt;/p&gt;

&lt;p&gt;You can even engage your audience or class in real time by adding built-in live polls to your presentations. Your attendees will be able to contribute with their smartphones and, the results will be shown live.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/nx4N07_6-x4"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#remote-control"&gt;
  &lt;/a&gt;
  Remote control
&lt;/h4&gt;

&lt;p&gt;Finally, out of the box, there is a remote application, also open source, to control your presentations. Of course, it works out with the content you import from Figma too and, it does offer the exact same features (draw over your slides, display your notes, countdown, etc.).&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/tcO94-txZ2E"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#open-source"&gt;
  &lt;/a&gt;
  Open Source
&lt;/h3&gt;

&lt;p&gt;I would lie if I could say that the plugin is currently rock solid. I tested it successfully with different decks but, I expect that some improvements are going to be needed regarding the extraction of the texts.&lt;/p&gt;

&lt;p&gt;The good thing is that you are not going to be blocked in case this process would be sluggish. You can always export your frames as images only and, still enjoy almost all other features.&lt;/p&gt;

&lt;p&gt;For the rest, I count on you to help us shape and improve the plugin. Like any other parts of our platforms, it is open source! Ping me with your issues and best ideas in its related &lt;a href="https://github.com/deckgo/figma-deckdeckgo-plugin"&gt;GitHub repo&lt;/a&gt;.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#code"&gt;
  &lt;/a&gt;
  Code
&lt;/h3&gt;

&lt;p&gt;From a technical point of view, the plugin is developed with JavaScript, nothing fancy new here. Even though, it might be interesting because it is bundled with &lt;a href="https://esbuild.github.io/"&gt;esbuild&lt;/a&gt; (which is not something documented by Figma) and contains some vanilla Web Components I created for its design (button, checkbox etc.). If those particular subjects are interesting to you, let me know, I would be happy to blog about it.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--u2eOmfkY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2AQW4oGxrM0iLJjjPXoxJvAQ.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u2eOmfkY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2AQW4oGxrM0iLJjjPXoxJvAQ.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This plugin is my first ever Figma plugin and needless to say, it was super fun to develop. I am very happy to launch this new feature for our eco-system, &lt;a href="https://www.figma.com/community/plugin/950777256486678678/Figma-to-DeckDeckGo"&gt;give it a try&lt;/a&gt; 🤗.&lt;/p&gt;

&lt;p&gt;To infinity and beyond!&lt;/p&gt;

&lt;p&gt;David&lt;/p&gt;




&lt;p&gt;You can reach me on &lt;a href="https://twitter.com/daviddalbusco"&gt;Twitter&lt;/a&gt; or my &lt;a href="https://daviddalbusco.com"&gt;website&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Give a try to &lt;a href="https://deckdeckgo.com/"&gt;DeckDeckGo&lt;/a&gt; for your next slides!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://deckdeckgo.com"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q4yatxfq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://deckdeckgo.com/assets/meta/deckdeckgo-meta.png" alt="DeckDeckGo"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>showdev</category>
      <category>webdev</category>
      <category>figma</category>
      <category>javascript</category>
    </item>
  </channel>
</rss>
