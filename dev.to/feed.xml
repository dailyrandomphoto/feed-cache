<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Medipol Global Summit 2021</title>
      <author>Vusal Ismayilov</author>
      <pubDate>Sat, 24 Apr 2021 07:46:40 +0000</pubDate>
      <link>https://dev.to/woosal/medipol-global-summit-2021-140l</link>
      <guid>https://dev.to/woosal/medipol-global-summit-2021-140l</guid>
      <description>&lt;p&gt;Medipol Global Summit 2021 is an event targeted for the enthusiasts in the field of Artificial Intelligence, Machine Learning, Cyber Security, Web and Mobile development, Blockchain and so many others! &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KYp1j6Yv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/om9t9txwnrgqpnsn34ky.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KYp1j6Yv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/om9t9txwnrgqpnsn34ky.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The hosts, in other words, the presenters have 2 most important characteristics in common, which is they are all Experts in their respective fields and all are officially verified Google Developer Experts. Throughout the event while having applied and introductory projects welcome you by the GDE’s, you will have a general understanding of specific topics related to each field in your mind. If you are especially so confused about which field to choose and continue over, or already have chosen your path, however, need suggestions how to continue, this is literally a perfect opportunity for you all to ask your questions to the Experts with decades of experience.&lt;/p&gt;

&lt;p&gt;Feel free to visit the official Medipol Summit 2021 website by clicking the link below to stay more informed about the event:&lt;br&gt;
&lt;a href="https://medipolsummit.org"&gt;https://medipolsummit.org&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vCaNPMV0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x8c6r4y7ud835z2xv96h.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vCaNPMV0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x8c6r4y7ud835z2xv96h.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Down below, you can find the schedule of the event, and through the website (&lt;a href="https://medipolsummit.org"&gt;https://medipolsummit.org&lt;/a&gt;) you can register to the event for completely free while adding the special calendar made by us to your own Google calendar schedule with one click away in order to stay updated and notified to the case and not to miss any event!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Friday May 7
- Introduction to Machine Learning
- Neural Networks
- Artificial Intelligence

Saturday May 8
- Cyber Security Power between the Past and the Future
- Cyber Security
- Blockchain
- Blockchain

Sunday May 9
- Frontend Web Development
- Backend Web Development
- Flutter
- Jetpack Compose For Android
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Make sure to sign-up to the event and add to your calendar through the website &lt;a href="https://medipolsummit.org"&gt;https://medipolsummit.org&lt;/a&gt; &lt;/p&gt;

</description>
      <category>summit</category>
      <category>tech</category>
      <category>event</category>
      <category>medipol</category>
    </item>
    <item>
      <title>10-things-you-can-do-today-to-reduce-aws-costs</title>
      <author>Adit Modi</author>
      <pubDate>Sat, 24 Apr 2021 06:58:18 +0000</pubDate>
      <link>https://dev.to/aws-builders/10-things-you-can-do-today-to-reduce-aws-costs-54fk</link>
      <guid>https://dev.to/aws-builders/10-things-you-can-do-today-to-reduce-aws-costs-54fk</guid>
      <description>&lt;p&gt;Users of Amazon Web Services are likely familiar with some AWS cost optimization best practices, but probably not all of them. Consequently, I have compiled a list of the ten best practices to optimize AWS costs, and also suggest a solution that ensures the costs of using Amazon Web Services remain optimized.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0zASrpqM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/no58z5audrsr2tr768go.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0zASrpqM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/no58z5audrsr2tr768go.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;My Background: I am Cloud , DevOps &amp;amp; Big Data Enthusiast | 4x AWS Certified | 3x OCI Certified | 3x Azure Certified .&lt;/em&gt;  &lt;/p&gt;

&lt;p&gt;It’s not unusual to read headlines claiming businesses are overspending in the cloud, that a double-figure percentage of money is being wasted on unused services, or that millions of businesses provision resources with more capacity than they need. The most common “solutions” to the reported issues are rightsizing, scheduling, and purchasing Reserved Instances/Savings Plans for predictable workloads.&lt;/p&gt;

&lt;p&gt;These three “solutions” are probably the AWS cost optimization best practices most AWS users are familiar with, but they’re not necessarily the “best” best practices. Sometimes they don’t save a fraction of the cost that it's claimed they will, while plenty of other, often overlooked, AWS cost optimization best practices can save a lot more. This is an issue we aim to address below.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-10-aws-cost-optimization-best-practices"&gt;
  &lt;/a&gt;
  The 10 AWS cost optimization best practices
&lt;/h2&gt;

&lt;h4&gt;
  &lt;a href="#1-rightsizing-ec2-instances"&gt;
  &lt;/a&gt;
  1. Rightsizing EC2 Instances
&lt;/h4&gt;

&lt;p&gt;As I have already mentioned rightsizing, scheduling, and Reserved Instances/Savings Plans, let’s start with these three AWS cost optimization best practices. The purpose of rightsizing is to match instance sizes to their workloads. Unfortunately, it doesn’t quite work like that because of the way in which instances double in capacity for each increase in size.&lt;/p&gt;

&lt;p&gt;If you double the capacity when you go up one size, then you also half the capacity when you go down one size. Therefore, rightsizing is only a worthwhile best practice if there are instances whose peak utilization does not exceed ~45%. It’s still worth analyzing utilization metrics to find opportunities to move workloads to different families (other than “General Purpose”) that better suit their needs.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#2-scheduling-onoff-times"&gt;
  &lt;/a&gt;
  2. Scheduling on/off times
&lt;/h4&gt;

&lt;p&gt;It’s worth scheduling on/off times for non-production instances such as those used for developing, staging, testing, and QA, as you will save around 65% of running these instances if you apply an “on” schedule of 8.00 a.m. to 8.00 p.m. Monday to Friday. However, it’s possible to save a lot more—especially if development teams work in irregular patterns or at irregular hours. &lt;/p&gt;

&lt;p&gt;You can apply more aggressive schedules by analyzing utilization metrics to determine when the instances are most frequently used, or apply an always stopped schedule which can be interrupted when access to the instances is required. It’s worth pointing out that while instances are scheduled to be off, you’re still being charged for EBS volumes and other components attached to them.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#3-purchasing-reserved-instances-and-savings-plans"&gt;
  &lt;/a&gt;
  3. Purchasing Reserved Instances and Savings Plans
&lt;/h4&gt;

&lt;p&gt;Purchasing Reserved Instances is an easy way to reduce AWS costs. It can also be an easy way to increase AWS costs if you don’t utilize the Reserved Instance as much as you expected to, purchase the wrong type of Reserved Instance, or purchase a “standard” Reserved Instance only to find AWS prices fall over the term of your reservation by more than the reservation “saves”.&lt;/p&gt;

&lt;p&gt;Therefore, rather than suggest that purchasing Reserved Instances is one of the best practices for AWS cost optimization, we’re going to recommend the effective management of Reserved Instances as an AWS cost optimization best practice—effective management consisting of weighing up all the variables before making a purchase and then monitoring utilization throughout the reservation’s lifecycle.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#4-delete-unattached-ebs-volumes"&gt;
  &lt;/a&gt;
  4. Delete unattached EBS volumes
&lt;/h4&gt;

&lt;p&gt;Returning to Elastic Block Storage (EBS), when you launch an EC2 instance, an EBS volume is attached to the instance to act as its local block storage. When you terminate the EC2 instance, the EBS volume is only deleted if you checked the “delete on termination” box when the instance was launched. If the box wasn’t checked, the EBS volume still exists and is contributing toward the monthly AWS bill.&lt;/p&gt;

&lt;p&gt;Depending on how long your business has been operating in the cloud and the number of instances launched without the delete box being checked, there could be thousands of unattached EBS volumes in your AWS Cloud. It’s certainly one of our AWS cost optimization best practices to consider, even if your business is relatively new to the AWS Cloud.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#5-delete-obsolete-snapshots"&gt;
  &lt;/a&gt;
  5. Delete obsolete snapshots
&lt;/h4&gt;

&lt;p&gt;Snapshots are an efficient way to back up data on an EBS volume to an S3 storage bucket because they only back up data that’s changed since the last snapshot to prevent duplications in the S3 bucket. Consequently, each snapshot contains all of the information needed to restore your data (from the moment when the snapshot was taken) to a new EBS volume.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VtIoX4hT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/djyy5a038x9jkmm0zlfz.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VtIoX4hT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/djyy5a038x9jkmm0zlfz.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Usually, you’re only going to need the most recent snapshot to restore data if something goes wrong (although it’s advisable to keep snapshots for a couple of weeks depending on the frequency with which they’re taken), and although snapshots don’t cost very much individually, you could save thousands of dollars by deleting those you no longer need.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#6-release-unattached-elastic-ip-addresses"&gt;
  &lt;/a&gt;
  6. Release unattached Elastic IP addresses
&lt;/h4&gt;

&lt;p&gt;Elastic IP addresses are public IPv4 addresses from Amazon’s pool of IP addresses that are allocated to an instance so it can be reached via the Internet. Businesses are allowed a maximum of five Elastic IP addresses per account because Amazon doesn´t have an unlimited pool of IP addresses. However, they are free of change when attached to running service. &lt;/p&gt;

&lt;p&gt;Exceptions to the free of charge rule occur if you remap an IP address more than 100 times a month, or if you hang on to unattached Elastic IP address once you have terminated the instances to which they were attached. The charge for unattached Elastic IP addresses may only be $0.01 per hour, but if there are fifty AWS accounts each holding back two IP addresses, that amounts to $8,760 of waste per year.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#7-upgrade-instances-to-the-latest-generation"&gt;
  &lt;/a&gt;
  7. Upgrade instances to the latest generation
&lt;/h4&gt;

&lt;p&gt;Due to Amazon Web Services’ wide array of products and services, there are frequent announcements about how products have been upgraded or features introduced to support specific services. With regards to AWS cost optimization best practices, the announcements to look out for are those relating to latest generation instances.&lt;/p&gt;

&lt;p&gt;When Amazon Web Services releases a new generation of instances, they tend to have improved performance and functionality compared to their predecessors. This means you can either upgrade existing instances to the latest generation, or downsize existing instances with borderline utilization metrics in order to benefit from the same level of performance at lower cost.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#8-purchase-reserved-nodes-for-redshift-and-elasticache-services"&gt;
  &lt;/a&gt;
  8. Purchase reserved nodes for Redshift and ElastiCache Services
&lt;/h4&gt;

&lt;p&gt;One recent AWS announcement detailed how the discount program for Amazon Redshift and ElastiCache had changed. Previously, businesses could purchase advanced-payment “Heavy Utilization” discounts, but these have now changed to (almost) mirror Reserved Instance purchases for EC2 and RDS instances.&lt;/p&gt;

&lt;p&gt;Reserved Nodes can be purchased for Redshift, ElasticCache, Redis, and Memcached Services for 1-year or 3-year terms, with the option of paying the full amount upfront or partially upfront, or paying monthly. One important note is that in order to take advantage of reservations on the ElastiCache Service, you must first upgrade Nodes to the latest generation. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#9-terminate-zombie-assets"&gt;
  &lt;/a&gt;
  9. Terminate zombie assets
&lt;/h4&gt;

&lt;p&gt;The term “zombie assets” is most often used to describe any unused asset contributing to the cost of operating in the AWS Cloud—many typical zombie assets have already been mentioned (unattached EBS volumes, obsolete snapshots, etc.). Other assets that fall into this category include components of instances that were activated when an instance failed to launch and unused Elastic Load Balancers.&lt;/p&gt;

&lt;p&gt;A problem businesses often encounter when trying to implement AWS cost optimization best practices is that some unused assets are difficult to find. For example, unattached IP addresses are notoriously difficult to locate in AWS System Manager or AWS Console.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#10-move-infrequentlyaccessed-data-to-lower-cost-tiers"&gt;
  &lt;/a&gt;
  10. Move infrequently-accessed data to lower cost tiers
&lt;/h4&gt;

&lt;p&gt;Amazon Web Services currently offers six tiers of storage at different price points. Determining which storage tier is most suitable for data will depend on factors such as how often data is accessed (as retrieval fees apply to the lower tiers) and how quickly a business would need to retrieve data in the event of a disaster (as it may take hours to retrieve from a lower tier).&lt;/p&gt;

&lt;p&gt;The savings from storing infrequently accessed, non-critical data in a lower cost tier can be substantial. The cost per month of storing up to 50TB of data in a standard S3 storage bucket is $0.023 per GB (US East Region), whereas storing the same data in S3 Glacier Deep Archive storage is $0.00099 per GB per month. The six tiers of storage are:&lt;/p&gt;

&lt;p&gt;S3 Standard&lt;br&gt;
S3 Intelligent Tiering&lt;br&gt;
S3 Infrequent Access&lt;br&gt;
S3 Infrequent Access (Single Zone)&lt;br&gt;
S3 Glacier&lt;br&gt;
S3 Deep Archive Glacier&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#aws-cost-optimization-is-an-ongoing-process"&gt;
  &lt;/a&gt;
  AWS cost optimization is an ongoing process
&lt;/h4&gt;

&lt;p&gt;Applying AWS cost optimization best practices is an ongoing process. Your AWS Cloud needs to be monitored at all times to identify when assets are being under-utilized (or not utilized at all) and when opportunities exist to reduce costs by deleting/terminating/releasing zombie assets. It’s also important to stay on top of Reserved Instances to ensure they’re being fully utilized.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--65DZ9Hvx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ytfdy8su5nsiucxmfqdy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--65DZ9Hvx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ytfdy8su5nsiucxmfqdy.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hope this guide helps you understand the things you can do today to reduce aws costs, feel free to connect with me on &lt;a href="https://www.linkedin.com/in/adit-modi-2a4362191/"&gt;LinkedIn.&lt;/a&gt;&lt;br&gt;
You can view my badges &lt;a href="https://www.youracclaim.com/users/adit-modi/badges"&gt;here.&lt;/a&gt;&lt;br&gt;
If you are interested in learning more about AWS then follow me on &lt;a href="https://github.com/AditModi"&gt;github.&lt;/a&gt;&lt;br&gt;
If you liked this content then do clap and share it . Thank You .&lt;/p&gt;

</description>
      <category>cloud</category>
      <category>beginners</category>
      <category>aws</category>
    </item>
    <item>
      <title>Best Google Chrome Extensions for Web Designers And Developers in 2021</title>
      <author>Animesh Dhamku</author>
      <pubDate>Sat, 24 Apr 2021 06:27:59 +0000</pubDate>
      <link>https://dev.to/animeshdhamku/8-best-google-chrome-extensions-for-web-designers-and-developers-in-2021-4a02</link>
      <guid>https://dev.to/animeshdhamku/8-best-google-chrome-extensions-for-web-designers-and-developers-in-2021-4a02</guid>
      <description>&lt;p&gt;As a designer/developer we use google chrome in daily life. That's why I brought the top 10 google extensions to make your work easy, We have a modern browser that is always upgraded by developers. I have brought 10 browser extensions today that will help you in coding.&lt;/p&gt;

&lt;p&gt;Best Google Chrome Extensions for Web Designers and Developers:&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#whatfont"&gt;
  &lt;/a&gt;
  WhatFont
&lt;/h1&gt;

&lt;p&gt;The easiest thanks to identify fonts on sites&lt;/p&gt;

&lt;p&gt;What is the simplest thanks to determine the fonts utilized in a webpage? Firebug and Webkit Inspector are easy enough to use for developers. However, for others, this could not be necessary. With this extension, you'll inspect web fonts by just hovering on them. it's that straightforward and stylish .&lt;/p&gt;

&lt;p&gt;It also detects the services used for serving the online fonts. Supports Typekit and Google Font API.&lt;/p&gt;

&lt;p&gt;To embrace the new web font era, WhatFont also detects services used for serving the font. Now supports Typekit and Google Font API.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#ruul-screen-ruler"&gt;
  &lt;/a&gt;
  ruul. Screen ruler
&lt;/h1&gt;

&lt;p&gt;A fantastically simple on-screen ruler for lining up and measuring type, line height, strokes and almost anything on the online .&lt;/p&gt;

&lt;p&gt;Get pixel perfect with: horizontal and vertical draggable rulers; pixel, picas and sort measurements, line height guides and stroke widths. Move ruul with arrow keys, one pixel at a time, and use multiple ruul together. Ruul have 4 different coloured ruul, steel and wooden ruul included.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#screen-capture-by-google"&gt;
  &lt;/a&gt;
  Screen Capture By Google
&lt;/h1&gt;

&lt;p&gt;Capture visible content of a tab, a neighborhood of an internet page, or the entire page as a PNG image. Support horizontal and vertical scroll…&lt;/p&gt;

&lt;p&gt;It's easy to use this extension to capture visible content of a tab, a neighborhood of an internet page, or the entire page as a PNG image.&lt;/p&gt;

&lt;p&gt;You can also edit your captured image before saving it as a PNG image. Highlighting, redacting and adding text are supported.&lt;/p&gt;

&lt;p&gt;What set this extension apart are: Super fast when capturing page image, esp. for giant pages; Support horizontal scroll for giant pages that don't slot in one tab screen horizontally; Intelligently detect floating objects on a page and avoid repeating capture of an equivalent floating objects if whole page capture requires scrolling; Works on Windows, Linux and Mac&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#image-downloader"&gt;
  &lt;/a&gt;
  Image Downloader
&lt;/h1&gt;

&lt;p&gt;See all images shown or linked on an internet page and download them.&lt;/p&gt;

&lt;p&gt;If you would like to bulk download images from an internet page, with this extension you can: See images that the page contains and links to, Filter or sort them by URL; also supports wildcards and regular expressions, Optionally show only images from links, Select images for download by either using the checkboxes or directly clicking on the image, Dedicated buttons to download or open in new tab individual images, Customize display width, border size, style and color, Hide filters, buttons and notifications you do not need&lt;/p&gt;

&lt;p&gt;When you press the "Download" button, all selected images are saved to the default download directory of Chrome. If you do not have one, you'll need to manually choose the save location for every image.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#evernote-web-clipper"&gt;
  &lt;/a&gt;
  Evernote Web Clipper
&lt;/h1&gt;

&lt;p&gt;Save all the content you discover interesting round the web in your account.&lt;/p&gt;

&lt;p&gt;From interests to research, save anything you see online—including text, links and images—into your Evernote account with one click. With one click, clip part or all of any webpage, including text, images, and links. Collect everything that inspires you online. Have it forever, albeit the first goes away.&lt;/p&gt;

&lt;p&gt;RescueTime for Google Chrome™&lt;/p&gt;

&lt;p&gt;RescueTime may be a personal-analytics service that helps you understand how you spend some time .&lt;/p&gt;

&lt;p&gt;RescueTime may be a personal-analytics service that helps you understand how you spend time on your computer, smartphone and tablet. there's no manual data-entry required. The web-application works hand-in-hand with the installable client available for OS X, Windows, Linux, Android devices, and ChromeOS.&lt;/p&gt;

&lt;p&gt;Pinterest for Google Chrome&lt;/p&gt;

&lt;p&gt;Discover, collect, and share inspiration&lt;/p&gt;

&lt;p&gt;Pinterest may be a tool to seek out your inspiration and share it with others. Use it to gather belongings you love, organize and plan important projects, and more.&lt;/p&gt;

&lt;p&gt;The official Pinterest extension for Google Chrome adds a button to your browser that allows you to pin from any website, quickly and simply&lt;/p&gt;

&lt;p&gt;&lt;a href="https://cmsinstallation.blogspot.com/2021/04/10-best-google-chrome-extensions-for.html"&gt;Get Some From HERE&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>php</category>
      <category>programming</category>
      <category>devops</category>
    </item>
    <item>
      <title>What are your favourite learning resources?</title>
      <author>Suraj Vishwakarma</author>
      <pubDate>Sat, 24 Apr 2021 06:24:26 +0000</pubDate>
      <link>https://dev.to/basecampxd/what-are-your-favourite-learning-resources-3mgk</link>
      <guid>https://dev.to/basecampxd/what-are-your-favourite-learning-resources-3mgk</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;Every day we come across a lot of new &amp;amp; amazing things, some technical and some not. And if we find something which matches our vibe then we dive deep into it. Now here the real problem starts, if something is very popular then definitely there are a lot of resources out there to learn it but out of all those resources, which ones worth your precious time?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--11xy3zUb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2rtdj2p9yhu7gv3ujmok.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--11xy3zUb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2rtdj2p9yhu7gv3ujmok.gif" alt="2Confused"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So we created this blog post to help you share all your favourite learning resources. It could be anything, a platform, some software, an app, a website or any of your favourite creators out there.&lt;/p&gt;

&lt;p&gt;Let's get started.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#my-way"&gt;
  &lt;/a&gt;
  My Way
&lt;/h2&gt;

&lt;p&gt;This is the specific sequence, I usually like to follow to learn new stuff.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;I read blogs on the topic - An introduction, its uses, problems it overcomes, pros &amp;amp; cons. I usually do a google search to find these blogs 📝.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If the topic seems interesting, then I have a look on &lt;a href="https://www.youtube.com/channel/UC8butISFwT-Wl7EV0hUK0BQ"&gt;freeCodeCamp&lt;/a&gt;'s YouTube Channel to see if there's a course available on the topic I am interested in 👨‍💻.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If freeCodeCamp doesn't have a course on it or it seems to be outdated then I look for another good course on YouTube▶️.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.udemy.com/"&gt;Udemy&lt;/a&gt; is also a great place to find some really cool courses🏫.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;That's pretty much how I like to find learning resources for myself 📚.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#discussion"&gt;
  &lt;/a&gt;
  Discussion
&lt;/h1&gt;

&lt;p&gt;Let's start the discussion on:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;What are your favourite resources to learn something new?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;How do you utilize those resources to make the most of them?&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>watercooler</category>
      <category>discuss</category>
      <category>beginners</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Best Practices for Writing Super Readable Code</title>
      <author>Animesh Dhamku</author>
      <pubDate>Sat, 24 Apr 2021 06:19:27 +0000</pubDate>
      <link>https://dev.to/animeshdhamku/top-15-best-practices-for-writing-super-readable-code-31aa</link>
      <guid>https://dev.to/animeshdhamku/top-15-best-practices-for-writing-super-readable-code-31aa</guid>
      <description>&lt;h1&gt;
  &lt;a href="#1-commenting-amp-documentation"&gt;
  &lt;/a&gt;
  1. Commenting &amp;amp; Documentation
&lt;/h1&gt;

&lt;p&gt;IDE's (Integrated Development Environment) have come a long way in the past few years. This made commenting your code more useful than ever. Following certain standards in your comments allows IDE's and other tools to utilize them in different ways.  &lt;/p&gt;

&lt;p&gt;The comments I added at the function definition can be previewed whenever I use that function, even from other files.Here is another example where I call a function from a third party library : In these particular examples, the type of commenting (or documentation) used is based on PHPDoc, and the IDE is Aptana.&lt;/p&gt;

&lt;p&gt;2 Million+ WordPress Themes &amp;amp; Plugins, Web &amp;amp; Email Templates, UI Kits and More&lt;/p&gt;

&lt;p&gt;Download thousands of WordPress themes and plugins, web templates, UI elements, and much more with an Envato Elements membership. Get unlimited access to a growing library to millions of creative and code assets.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#2-consistent-indentation"&gt;
  &lt;/a&gt;
  2. Consistent Indentation
&lt;/h1&gt;

&lt;p&gt;I assume you already know that you should indent your code. However, it's also worth noting that it is a good idea to keep your indentation style consistent.&lt;/p&gt;

&lt;p&gt;There are more than one way of indenting code.&lt;/p&gt;

&lt;p&gt;Style 1:&lt;/p&gt;

&lt;p&gt;function foo()&lt;br&gt;
{&lt;br&gt;
    if ($maybe)&lt;br&gt;
    {&lt;br&gt;
        do_it_now();&lt;br&gt;
        again();&lt;br&gt;
    }&lt;br&gt;
    else&lt;br&gt;
    {&lt;br&gt;
        abort_mission();&lt;br&gt;
    }&lt;br&gt;
    finalize();&lt;br&gt;
}&lt;br&gt;
Style 2:&lt;/p&gt;

&lt;p&gt;function foo() {&lt;br&gt;
    if ($maybe) {&lt;br&gt;
        do_it_now();&lt;br&gt;
        again();&lt;br&gt;
    } else {&lt;br&gt;
        abort_mission();&lt;br&gt;
    }&lt;br&gt;
    finalize();&lt;br&gt;
}&lt;br&gt;
Style 3:&lt;/p&gt;

&lt;p&gt;function foo()&lt;br&gt;
{   if ($maybe)&lt;br&gt;
    {   do_it_now();&lt;br&gt;
        again();&lt;br&gt;
    }&lt;br&gt;
    else&lt;br&gt;
    {   abort_mission();&lt;br&gt;
    }&lt;br&gt;
    finalize();&lt;br&gt;
}&lt;br&gt;
I used to code in style #2 but recently switched to #1. But that is only a matter of preference. There is no "best" style that everyone should be following. Actually, the best style, is a consistent style. If you are part of a team or if you are contributing code to a project, you should follow the existing style that is being used in that project.&lt;/p&gt;

&lt;p&gt;The indentation styles are not always completely distinct from one another. Sometimes, they mix different rules. For example, in PEAR Coding Standards, the opening bracket "{" goes on the same line as control structures, but they go to the next line after function definitions.&lt;/p&gt;

&lt;p&gt;PEAR Style:&lt;/p&gt;

&lt;p&gt;function foo()&lt;br&gt;
{                     // placed on the next line&lt;br&gt;
    if ($maybe) {     // placed on the same line&lt;br&gt;
        do_it_now();&lt;br&gt;
        again();&lt;br&gt;
    } else {&lt;br&gt;
        abort_mission();&lt;br&gt;
    }&lt;br&gt;
    finalize();&lt;br&gt;
}&lt;br&gt;
Also note that they are using four spaces instead of tabs for indentations. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#3-avoid-obvious-comments"&gt;
  &lt;/a&gt;
  3. Avoid Obvious Comments
&lt;/h1&gt;

&lt;p&gt;Commenting your code is fantastic; however, it can be overdone or just be plain redundant. Take this example:&lt;/p&gt;

&lt;p&gt;// get the country code&lt;br&gt;
$country_code = get_country_code($_SERVER['REMOTE_ADDR']);&lt;/p&gt;

&lt;p&gt;// if country code is US&lt;br&gt;
if ($country_code == 'US') {&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// display the form input for state
echo form_input_state();
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;When the text is that obvious, it's really not productive to repeat it within comments.&lt;/p&gt;

&lt;p&gt;If you must comment on that code, you can simply combine it to a single line instead:&lt;/p&gt;

&lt;p&gt;// display state selection for US users&lt;br&gt;
$country_code = get_country_code($_SERVER['REMOTE_ADDR']);&lt;br&gt;
if ($country_code == 'US') {&lt;br&gt;
    echo form_input_state();&lt;br&gt;
}&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#4-code-grouping"&gt;
  &lt;/a&gt;
  4. Code Grouping
&lt;/h1&gt;

&lt;p&gt;More often than not, certain tasks require a few lines of code. It is a good idea to keep these tasks within separate blocks of code, with some spaces between them.&lt;/p&gt;

&lt;p&gt;Here is a simplified example:&lt;/p&gt;

&lt;p&gt;// get list of forums&lt;br&gt;
$forums = array();&lt;br&gt;
$r = mysql_query("SELECT id, name, description FROM forums");&lt;br&gt;
while ($d = mysql_fetch_assoc($r)) {&lt;br&gt;
    $forums []= $d;&lt;br&gt;
}&lt;/p&gt;

&lt;p&gt;// load the templates&lt;br&gt;
load_template('header');&lt;br&gt;
load_template('forum_list',$forums);&lt;br&gt;
load_template('footer');&lt;/p&gt;

&lt;p&gt;Adding a comment at the beginning of each block of code also emphasizes the visual separation.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#5-consistent-naming-scheme"&gt;
  &lt;/a&gt;
  5. Consistent Naming Scheme
&lt;/h1&gt;

&lt;p&gt;PHP itself is sometimes guilty of not following consistent naming schemes:&lt;/p&gt;

&lt;p&gt;strpos() vs. str_split()&lt;br&gt;
imagetypes() vs. image_type_to_extension()&lt;br&gt;
First of all, the names should have word boundaries. There are two popular options:&lt;br&gt;
camelCase: First letter of each word is capitalized, except the first word.&lt;br&gt;
underscores: Underscores between words, like: mysql_real_escape_string().&lt;br&gt;
Having different options creates a situation similar to the indent styles, as I mentioned earlier. If an existing project follows a certain convention, you should go with that. Also, some language platforms tend to use a certain naming scheme. For instance, in Java, most code uses camelCase names, while in PHP, the majority of uses underscores.&lt;/p&gt;

&lt;p&gt;These can also be mixed. Some developers prefer to use underscores for procedural functions, and class names, but use camelCase for class method names:&lt;/p&gt;

&lt;p&gt;class Foo_Bar {&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;public function someDummyMethod() {

}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;function procedural_function_name() {&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;So again, there is no obvious "best" style. Just being consistent.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#6-dry-principle"&gt;
  &lt;/a&gt;
  6. DRY Principle
&lt;/h1&gt;

&lt;p&gt;DRY stands for Don't Repeat Yourself. Also known as DIE: Duplication is Evil.&lt;/p&gt;

&lt;p&gt;The principle states:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;"Every piece of knowledge must have a single, unambiguous, authoritative representation within a system."
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;The purpose for most applications (or computers in general) is to automate repetitive tasks. This principle should be maintained in all code, even web applications. The same piece of code should not be repeated over and over again.&lt;/p&gt;

&lt;p&gt;For example, most web applications consist of many pages. It's highly likely that these pages will contain common elements. Headers and footers are usually best candidates for this. It's not a good idea to keep copy pasting these headers and footers into every page. Here is Jeffrey Way explaining how to create templates in CodeIgniter.&lt;/p&gt;

&lt;p&gt;$this-&amp;gt;load-&amp;gt;view('includes/header');&lt;/p&gt;

&lt;p&gt;$this-&amp;gt;load-&amp;gt;view($main_content);&lt;/p&gt;

&lt;p&gt;$this-&amp;gt;load-&amp;gt;view('includes/footer');&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#7-avoid-deep-nesting"&gt;
  &lt;/a&gt;
  7. Avoid Deep Nesting
&lt;/h1&gt;

&lt;p&gt;Too many levels of nesting can make code harder to read and follow.&lt;/p&gt;

&lt;p&gt;function do_stuff() {&lt;/p&gt;

&lt;p&gt;// ...&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;if (is_writable($folder)) {

    if ($fp = fopen($file_path,'w')) {

        if ($stuff = get_some_stuff()) {

            if (fwrite($fp,$stuff)) {

                // ...

            } else {
                return false;
            }
        } else {
            return false;
        }
    } else {
        return false;
    }
} else {
    return false;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;For the sake of readability, it is usually possible to make changes to your code to reduce the level of nesting:&lt;/p&gt;

&lt;p&gt;function do_stuff() {&lt;/p&gt;

&lt;p&gt;// ...&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;if (!is_writable($folder)) {
    return false;
}

if (!$fp = fopen($file_path,'w')) {
    return false;
}

if (!$stuff = get_some_stuff()) {
    return false;
}

if (fwrite($fp,$stuff)) {
    // ...
} else {
    return false;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#8-limit-line-length"&gt;
  &lt;/a&gt;
  8. Limit Line Length
&lt;/h1&gt;

&lt;p&gt;Our eyes are more comfortable when reading tall and narrow columns of text. This is precisely the reason why newspaper articles look like this:&lt;/p&gt;

&lt;p&gt;It is a good practice to avoid writing horizontally long lines of code.&lt;/p&gt;

&lt;p&gt;// bad&lt;br&gt;
$my_email-&amp;gt;set_from('&lt;a href="mailto:test@email.com"&gt;test@email.com&lt;/a&gt;')-&amp;gt;add_to('&lt;a href="mailto:programming@gmail.com"&gt;programming@gmail.com&lt;/a&gt;')-&amp;gt;set_subject('Methods Chained')-&amp;gt;set_body('Some long message')-&amp;gt;send();&lt;/p&gt;

&lt;p&gt;// good&lt;br&gt;
$my_email&lt;br&gt;
    -&amp;gt;set_from('&lt;a href="mailto:test@email.com"&gt;test@email.com&lt;/a&gt;')&lt;br&gt;
    -&amp;gt;add_to('&lt;a href="mailto:programming@gmail.com"&gt;programming@gmail.com&lt;/a&gt;')&lt;br&gt;
    -&amp;gt;set_subject('Methods Chained')&lt;br&gt;
    -&amp;gt;set_body('Some long message')&lt;br&gt;
    -&amp;gt;send();&lt;/p&gt;

&lt;p&gt;// bad&lt;br&gt;
$query = "SELECT id, username, first_name, last_name, status FROM users LEFT JOIN user_posts USING(users.id, user_posts.user_id) WHERE post_id = '123'";&lt;/p&gt;

&lt;p&gt;// good&lt;br&gt;
$query = "SELECT id, username, first_name, last_name, status&lt;br&gt;
    FROM users&lt;br&gt;
    LEFT JOIN user_posts USING(users.id, user_posts.user_id)&lt;br&gt;
    WHERE post_id = '123'";&lt;/p&gt;

&lt;p&gt;Also, if anyone intends to read the code from a terminal window, such as Vim users, it is a good idea to to limit the line length to around 80 characters.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;File and Folder Organization
Technically, you could write an entire application code within a single file. But that would prove to be a nightmare to read and maintain.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;During my first programming projects, I knew about the idea of creating "include files." However, I was not yet even remotely organized. I created an "inc" folder, with two files in it: db.php and functions.php. As the applications grew, the functions file also became huge and unmaintainable.&lt;/p&gt;

&lt;p&gt;One of the best approaches is to either use a framework, or imitate their folder structure. Here is what CodeIgniter looks like:&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#9-consistent-temporary-names"&gt;
  &lt;/a&gt;
  9. Consistent Temporary Names
&lt;/h1&gt;

&lt;p&gt;Normally, the variables should be descriptive and contain one or more words. But, this doesn't necessarily apply to temporary variables. They can be as short as a single character.&lt;/p&gt;

&lt;p&gt;It is a good practice to use consistent names for your temporary variables that have the same kind of role. Here are a few examples that I tend use in my code:&lt;/p&gt;

&lt;p&gt;// $i for loop counters&lt;br&gt;
for ($i = 0; $i &amp;lt; 100; $i++) {&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// $j for the nested loop counters
for ($j = 0; $j &amp;lt; 100; $j++) {

}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;// $ret for return variables&lt;br&gt;
function foo() {&lt;br&gt;
    $ret['bar'] = get_bar();&lt;br&gt;
    $ret['stuff'] = get_stuff();&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;return $ret;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;// $k and $v in foreach&lt;br&gt;
foreach ($some_array as $k =&amp;gt; $v) {&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;// $q, $r and $d for mysql&lt;br&gt;
$q = "SELECT * FROM table";&lt;br&gt;
$r = mysql_query($q);&lt;br&gt;
while ($d = mysql_fetch_assocr($r)) {&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;// $fp for file pointers&lt;br&gt;
$fp = fopen('file.txt','w');&lt;/p&gt;

&lt;p&gt;&lt;a href="https://cmsinstallation.blogspot.com/2021/04/top-15-best-practices-for-writing-super.html"&gt;Get some more from here&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>programming</category>
      <category>php</category>
      <category>design</category>
    </item>
    <item>
      <title>How to clone object except for one or some keys</title>
      <author>Heru Hartanto</author>
      <pubDate>Sat, 24 Apr 2021 06:06:55 +0000</pubDate>
      <link>https://dev.to/elukuro/how-to-clone-object-except-for-one-or-some-keys-623</link>
      <guid>https://dev.to/elukuro/how-to-clone-object-except-for-one-or-some-keys-623</guid>
      <description>&lt;p&gt;Let say you have an object that you want to use it as payload to make a request&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;payload&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;username&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Mark&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hash&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;8fafasdf8afadsf&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;redirectUrl&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;but you want to exclude &lt;code&gt;redirectUrl&lt;/code&gt; from your object before make request, and you don't want to delete this key, hmmm it is easy doesn't it, just destructuring the object and rearrange it to a new variable&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;Hash&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;newPayload&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;Hash&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;but wait, what if your object is actually updated and now look like this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;payload&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;username&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Mark&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hash&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;8fafasdf8afadsf&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;redirectUrl&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;firstname&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mark&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;lastname&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;brown&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;birthdate&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;01/12/2000&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;gender&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;MALE&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;address&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;planet earth&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;seems like destructuring and rearrange is kind of hardwork to do.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#put-rest-to-the-last-technique-to-the-rescue"&gt;
  &lt;/a&gt;
  "Put rest to the last" technique to the rescue
&lt;/h4&gt;

&lt;p&gt;simply put keys that you don't want to use and put the rest of it in the last&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;payload&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;username&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Mark&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hash&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;8fafasdf8afadsf&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;redirectUrl&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;firstname&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mark&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;lastname&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;brown&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;birthdate&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;01/12/2000&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;gender&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;MALE&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;address&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;planet earth&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;redirectUrl&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;newPayload&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;payload&lt;/span&gt;
&lt;span class="nx"&gt;newPayload&lt;/span&gt;
&lt;span class="cm"&gt;/*
    {
        'username': 'Mark',
        'Hash' :'8fafasdf8afadsf',
        'firstname':'mark',
        'lastname':'brown',
        'birthdate':'01/12/2000',
        'gender':'MALE',
        'address':'planet earth'
    }
*/&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you want to add another key to exclude just simply put keys name after &lt;code&gt;redirectUrl&lt;/code&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Laravel One to Many Eloquent Relationship Tutorial</title>
      <author>Dharmik Tank</author>
      <pubDate>Sat, 24 Apr 2021 06:03:58 +0000</pubDate>
      <link>https://dev.to/dharmik_tank/laravel-one-to-many-eloquent-relationship-tutorial-4i0j</link>
      <guid>https://dev.to/dharmik_tank/laravel-one-to-many-eloquent-relationship-tutorial-4i0j</guid>
      <description>&lt;p&gt;In this tutorial, I Will explain you how to create laravel one to Many eloquent relationship. We will create one to many relationship in laravel. We will learn how we can create migration with foreign key schema, retrieve records, insert new records, update records etc. I will show you laravel hasMany relationship example.&lt;br&gt;
more..&lt;br&gt;
&lt;a href="https://itwebtuts.blogspot.com/2021/04/laravel-one-to-many-eloquent.html"&gt;https://itwebtuts.blogspot.com/2021/04/laravel-one-to-many-eloquent.html&lt;/a&gt;&lt;/p&gt;

</description>
      <category>laravel</category>
      <category>programming</category>
      <category>tutorial</category>
      <category>php</category>
    </item>
    <item>
      <title>Free APIs That Nobody Is Talking About</title>
      <author>Animesh Dhamku</author>
      <pubDate>Sat, 24 Apr 2021 05:53:01 +0000</pubDate>
      <link>https://dev.to/animeshdhamku/free-apis-that-nobody-is-talking-about-5777</link>
      <guid>https://dev.to/animeshdhamku/free-apis-that-nobody-is-talking-about-5777</guid>
      <description>&lt;p&gt;Nothing excites me more than finding an out of the ordinary API.Many times we just want to focus on the frontend but also need interesting, dynamic data to display.This is where public APIs come into play. API is an acronym for Application Programming Interface.The core benefit of using it is that it allows one program to interact with other programs.Using public APIs allows you to focus on the frontend and things that matter without worrying so much about the database and the backend.Below are 7 less-talked about public and free APIs.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#1-evil-insult-generator"&gt;
  &lt;/a&gt;
  1. Evil Insult Generator
&lt;/h1&gt;

&lt;p&gt;How many times have you tried to insult your best friend? Now you have got a helping hand!&lt;/p&gt;

&lt;p&gt;As the API name suggests, the goal is to offer some of the evilest insults.&lt;/p&gt;

&lt;p&gt;You can create an app centered around this API or combine this API with other excellent APIs provided below like implementing the generated insults in meme templates.&lt;/p&gt;

&lt;p&gt;The API is extremely simple to use. You just need to visit a URL and you get the desired JSON output without even signing up for a key.&lt;/p&gt;

&lt;p&gt;Sample output of the API is provided below:&lt;/p&gt;

&lt;p&gt;{&lt;br&gt;
"number":"117",&lt;br&gt;
"language":"en",&lt;br&gt;
"insult":"Some cause happiness wherever they go; others, whenever they go.",&lt;br&gt;
"created":"2020-11-22 23:00:15",&lt;br&gt;
"shown":"45712",&lt;br&gt;
"createdby":"",&lt;br&gt;
"active":"1",&lt;br&gt;
"comment":"http:\/\/&lt;a href="http://www.mirror.co.uk%5C/news%5C/weird-news%5C/worlds-20-most-bizarre-insults-7171396"&gt;www.mirror.co.uk\/news\/weird-news\/worlds-20-most-bizarre-insults-7171396&lt;/a&gt;"&lt;br&gt;
}&lt;/p&gt;

&lt;p&gt;You get the other properties as well such as the time it was created, the language, any comment as well as the views. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#2-movies-and-tv-api"&gt;
  &lt;/a&gt;
  2. Movies and TV API
&lt;/h1&gt;

&lt;p&gt;TMDb is a famous API, but do you know there are other API that provides insights from specific shows and movies?&lt;/p&gt;

&lt;p&gt;Below are some of the APIs you can use to develop apps featuring your favorite show:&lt;br&gt;
Breaking Bad API&lt;br&gt;
API of Ice And Fire &lt;br&gt;
Harry Potter API&lt;br&gt;
YouTube API (for embedding YouTube functionalities)&lt;br&gt;
The Lord of the Rings API&lt;br&gt;&lt;br&gt;
Like the API above, you can get started with some of the APIs without even signing up for a key.&lt;/p&gt;

&lt;p&gt;Not only this, using non-copyright images, you can truly create a great fan app for your beloved shows.&lt;/p&gt;

&lt;p&gt;Below is a sample output from the Breaking Bad API which you can get here.&lt;/p&gt;

&lt;p&gt;It doesn’t require a key however has a rate limit of 10,000 requests per day.&lt;/p&gt;

&lt;p&gt;{&lt;br&gt;
   [&lt;br&gt;
      {&lt;br&gt;
         "quote_id":1,&lt;br&gt;
         "quote":"I am not in danger, Skyler. I am the danger!",&lt;br&gt;
         "author":"Walter White",&lt;br&gt;
         "series":"Breaking Bad"&lt;br&gt;
      },&lt;br&gt;
      {&lt;br&gt;
         "quote_id":2,&lt;br&gt;
         "quote":"Stay out of my territory.",&lt;br&gt;
         "author":"Walter White",&lt;br&gt;
         "series":"Breaking Bad"&lt;br&gt;
      },&lt;br&gt;
      {&lt;br&gt;
         "quote_id":3,&lt;br&gt;
         "quote":"IFT",&lt;br&gt;
         "author":"Skyler White",&lt;br&gt;
         "series":"Breaking Bad"&lt;br&gt;
      }&lt;br&gt;
      .....&lt;br&gt;
   ]&lt;br&gt;
}&lt;/p&gt;

&lt;p&gt;It returns a JSON containing an array of objects with quotes, the author of the quotes, and an ID.&lt;/p&gt;

&lt;p&gt;You can mix these dedicated APIs with YouTube API to create an ultimate app for the fans of these shows.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#3-mapbox"&gt;
  &lt;/a&gt;
  3. Mapbox
&lt;/h1&gt;

&lt;p&gt;Mapbox provides precise location information and fully-fledged tools to developers.&lt;/p&gt;

&lt;p&gt;You get instant access to dynamic, live-updating maps which you can even further customize!&lt;/p&gt;

&lt;p&gt;If you have a project geared towards location and maps, this is a must-know API.&lt;/p&gt;

&lt;p&gt;However, it is worth mentioning that you have to sign up for free to get a unique access token.&lt;/p&gt;

&lt;p&gt;Using this token you can use the amazing services offered by this API.&lt;/p&gt;

&lt;p&gt;Not only this, you can use Mapbox with libraries such as the Leaflet.js library and create beautiful, mobile-friendly maps.&lt;/p&gt;

&lt;p&gt;I have discussed this and much more in my recent article covering the basics of Mapbox and Leaflet.js.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#4-nasa-api"&gt;
  &lt;/a&gt;
  4. NASA API
&lt;/h1&gt;

&lt;p&gt;NASA provides a fabulous updated database of space-related information.&lt;/p&gt;

&lt;p&gt;Using this API, one can create mesmerizing and educational apps and websites.&lt;/p&gt;

&lt;p&gt;You get access to various different kinds of data from the Astronomy Picture of the Day all the way to the pictures captured by the Mars Rover.&lt;/p&gt;

&lt;p&gt;You can browse the entire list here.&lt;/p&gt;

&lt;p&gt;You can also retrieve NASA’s patents, software, and technology spinoff descriptions which you can use to build a patent portfolio.&lt;/p&gt;

&lt;p&gt;This API is really diverse and offers a wide variety of data. You can even access the NASA Image and Video library using it.&lt;/p&gt;

&lt;p&gt;Below is a sample query of the pictures captured by Curiosity on Mars.&lt;/p&gt;

&lt;p&gt;{&lt;br&gt;
   "photos":[&lt;br&gt;
      {&lt;br&gt;
         "id":102693,&lt;br&gt;
         "sol":1000,&lt;br&gt;
         "camera":{&lt;br&gt;
            "id":20,&lt;br&gt;
            "name":"FHAZ",&lt;br&gt;
            "rover_id":5,&lt;br&gt;
            "full_name":"Front Hazard Avoidance Camera"&lt;br&gt;
         },&lt;br&gt;
         "img_src":"&lt;a href="http://mars.jpl.nasa.gov/msl-raw-images/proj/msl/redops/ods/surface/sol/01000/opgs/edr/fcam/FLB_486265257EDR_F0481570FHAZ00323M_.JPG"&gt;http://mars.jpl.nasa.gov/msl-raw-images/proj/msl/redops/ods/surface/sol/01000/opgs/edr/fcam/FLB_486265257EDR_F0481570FHAZ00323M_.JPG&lt;/a&gt;",&lt;br&gt;
         "earth_date":"2015-05-30",&lt;br&gt;
         "rover":{&lt;br&gt;
            "id":5,&lt;br&gt;
            "name":"Curiosity",&lt;br&gt;
            "landing_date":"2012-08-06",&lt;br&gt;
            "launch_date":"2011-11-26",&lt;br&gt;
            "status":"active"&lt;br&gt;
         }&lt;br&gt;
      },&lt;br&gt;
     .....&lt;br&gt;
   ]&lt;br&gt;
}&lt;/p&gt;

&lt;p&gt;&lt;a href="https://cmsinstallation.blogspot.com/2021/04/7-free-apis-that-nobody-is-talking-about.html"&gt;Get some more APIs&lt;/a&gt;&lt;/p&gt;

</description>
      <category>programming</category>
      <category>webdev</category>
      <category>php</category>
      <category>design</category>
    </item>
    <item>
      <title>Signs of an Inexperienced Programmer</title>
      <author>Animesh Dhamku</author>
      <pubDate>Sat, 24 Apr 2021 05:49:17 +0000</pubDate>
      <link>https://dev.to/animeshdhamku/signs-of-an-inexperienced-programmer-55ij</link>
      <guid>https://dev.to/animeshdhamku/signs-of-an-inexperienced-programmer-55ij</guid>
      <description>&lt;p&gt;Experience in software engineering comes with the number of years you are in the profession. The statement is true to a certain extent. However, the number of years in a job does not make you gain the right experience by default.&lt;/p&gt;

&lt;p&gt;I have seen people behave amateur like, even after working in their job for a good number of years. They hardly learn the basics of software development. Their growth stagnates after an initial couple of years, but they do not understand what they are doing wrong.&lt;/p&gt;

&lt;p&gt;At the same time, I have worked with developers with just a couple of years of experience who show an incredible amount of growth potential. They possess the right attitude and know-how to avoid incompetent behavior.&lt;/p&gt;

&lt;p&gt;Based on certain traits developers exhibit, you can easily find out who is experienced and who is not. Let’s dive into seven signs of an inexperienced programmer that every software engineer should be aware of to avoid making similar mistakes that can hinder their career progression.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#1-creates-large-pull-requests"&gt;
  &lt;/a&gt;
  1. Creates large pull requests
&lt;/h1&gt;

&lt;p&gt;Have you ever got a code review request with so many changes in it that you don’t feel like reviewing it? Yes, that’s precisely what inexperienced developers do. They will bunch together a lot of changes in one single pull request. On top of that, they will expect you to prioritize their code review.&lt;/p&gt;

&lt;p&gt;I have seen this habit of creating big pull requests with many senior developers too. They will code for days without feedback. When you finally review their code, they would have already built the whole functionality around it. Thus any review comment you give necessitates significant changes.&lt;/p&gt;

&lt;p&gt;When I get such pull requests, my first reaction is to return it to the developer to break it down into smaller, logically divided PRs. I often just put comments in the first issue I find and send it back to the developer. If I feel incredibly generous, I will ask them to set up a call and review the code live.&lt;br&gt;
What you can do:&lt;br&gt;
 Create smaller pull requests. As a good practice, never leave a day's work without checking it in.&lt;br&gt;
Never check-in code that does not compile or breaks the build.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#2-writes-spaghetti-code"&gt;
  &lt;/a&gt;
  2. Writes spaghetti code
&lt;/h1&gt;

&lt;p&gt;Inexperienced developers write the exact opposite of beautiful code. Their code will be all tangled and scattered across all over the place in the codebase.&lt;/p&gt;

&lt;p&gt;If you ever try to read the spaghetti code, you will constantly get lost in it. You will forget where you started, what you are looking for, and what exactly the code is trying to do.&lt;/p&gt;

&lt;p&gt;With experience, the developer should know how to plan their coding. Unless it is a straightforward functionality, put your understanding and the flow on a paper first. Do a dry run to visualize it end to end. Once you are crystal clear about the changes, then start on the implementation part.&lt;/p&gt;

&lt;p&gt;If you do not follow the above process, you will have pain reading your own code. It will be hard for yourself and the whole team to troubleshoot or enhance the piece of the puzzle you wrote as code.&lt;br&gt;
What you can do:&lt;br&gt;
Have a clear understanding of the feature before you start to implement it. You can ask as many questions as you want to have a clear idea of the requirement.&lt;br&gt;
Keep your code simple and well structured. Your teammates should be able to read the code and understand the intended use of it.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#3-tries-to-work-on-a-lot-of-tasks-at-the-same-time"&gt;
  &lt;/a&gt;
  3. Tries to work on a lot of tasks at the same time
&lt;/h1&gt;

&lt;p&gt;Inexperienced developers do not know where to start a task, how to proceed, and when to call it done. They try to solve a lot of stuff at the same time. They have no clue how to chunk a big task into smaller logical divisions to make it easy for implementation.&lt;/p&gt;

&lt;p&gt;If you assign them a task, they will jump into coding immediately without verifying with you if they even understood the ask. Neither will they review their progress with you to make sure they are on track. They will get back to you only once they think they are done. By that time, you can only pray to have an accurate implementation for your requirement.&lt;/p&gt;

&lt;p&gt;Another sign of inexperience is that such developers put their hands in too many things simultaneously. They will pick up tasks from unrelated features, volunteer themselves to troubleshoot production issues and promise to help others in the team.&lt;/p&gt;

&lt;p&gt;In the end, these developers do not deliver any of the committed tasks in their entirety. This attitude might be well-intentioned most of the time, but the result is disastrous for the team. Ultimately the team loses a lot of time and has to complete all the tasks on a war footing.&lt;br&gt;
What you can do:&lt;br&gt;
Focus on shipping small. Break your assignments into smaller logical chunks. Get it clarified and then deliver the smallest possible block of working functionality.&lt;br&gt;
Take one task assignment at a time and complete it. Commit to a new task only when the previous task is delivered as requested.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#4-full-of-arrogance"&gt;
  &lt;/a&gt;
  4. Full of arrogance
&lt;/h1&gt;

&lt;p&gt;Arrogance is a dead giveaway of an inexperienced developer. They are so full of themselves that they do not understand what they are doing wrong. You give them feedback on their code or presentation; they will take it as a personal comment on their ability.&lt;/p&gt;

&lt;p&gt;Many freshers show off their arrogance, mostly due to their ignorance. They are fresh out of college and are yet to understand that the professional world is entirely different than what they learn in college. The smart ones actually stay quiet and show a keen interest in learning the ways of the corporate culture.&lt;/p&gt;

&lt;p&gt;It is not just the freshers — some arrogant developers already have several years behind them in the software industry. It might be due to some of their professional achievements, or maybe they have not yet worked with people smarter and talented than them.&lt;/p&gt;

&lt;p&gt;In either case, arrogant behavior shows a clear indication that such developers lack the right experience. Their ego blinds them from learning the right approach towards their career. Eventually, no one likes to work with an arrogant team member. Once the growth slows down, the arrogant developer blames others for their failure.&lt;/p&gt;

&lt;p&gt;What you can do:&lt;br&gt;
Be humble in your approach. Politeness goes a long way in building a successful career in software development.&lt;br&gt;
Treat everyone, irrespective of their designation, with respect. Refrain from getting into an argument over disagreements.&lt;/p&gt;

&lt;p&gt;Read More :: &lt;a href="https://cmsinstallation.blogspot.com/2021/04/top-7-signs-of-inexperienced-programmer.html"&gt;https://cmsinstallation.blogspot.com/2021/04/top-7-signs-of-inexperienced-programmer.html&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>programming</category>
      <category>php</category>
      <category>design</category>
    </item>
    <item>
      <title>Dissecting the PE Header [Windows PE Internals]</title>
      <author>wireless90</author>
      <pubDate>Sat, 24 Apr 2021 05:37:00 +0000</pubDate>
      <link>https://dev.to/wireless90/dissecting-the-pe-header-windows-pe-internals-5113</link>
      <guid>https://dev.to/wireless90/dissecting-the-pe-header-windows-pe-internals-5113</guid>
      <description>&lt;h1&gt;
  &lt;a href="#previous-windows-pe-internals-writeups"&gt;
  &lt;/a&gt;
  Previous Windows PE Internals Writeups
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/wireless90/creating-a-windows-project-in-visual-studio-windows-pe-internals-2p6e"&gt;Creating a Windows Project in Visual Studio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/wireless90/getmodulehandlea-windows-pe-internals-1b0l"&gt;Getting a Handle to a Dynamically Linked Library &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/wireless90/getting-the-windows-pe-internals-kka/"&gt;Validating the MZ Signature&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/wireless90/validating-the-pe-signature-my-av-flagged-me-windows-pe-internals-2m5o/"&gt;Validating the PE Signature&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#previously"&gt;
  &lt;/a&gt;
  Previously
&lt;/h1&gt;

&lt;p&gt;In the &lt;a href="https://dev.to/wireless90/validating-the-pe-signature-my-av-flagged-me-windows-pe-internals-2m5o/"&gt;previous article&lt;/a&gt;, we learnt about how do we validate the &lt;code&gt;PE Signature&lt;/code&gt;, also commonly referred to as the &lt;code&gt;File Signature&lt;/code&gt;, which tells us that the file is very likely, a &lt;code&gt;Portable Executable (PE) file.&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This signature is &lt;code&gt;PE\0\0&lt;/code&gt; (the letters "P" and "E" followed by two null bytes).&lt;/p&gt;

&lt;p&gt;We have also seen how to navigate our way from the &lt;code&gt;IMAGE_DOS_HEADER&lt;/code&gt; into the &lt;code&gt;IMAGE_NT_HEADER&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;We also saw that the &lt;code&gt;IMAGE_NT_HEADER&lt;/code&gt; comprises of 3 parts.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;PE Signature&lt;/li&gt;
&lt;li&gt;PE Header&lt;/li&gt;
&lt;li&gt;Optional Header&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We will be dissecting the &lt;code&gt;PE Header&lt;/code&gt; in this article.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#lets-begin"&gt;
  &lt;/a&gt;
  Let's Begin
&lt;/h1&gt;

&lt;p&gt;Following the PE Signature, we have the PE Header.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OYz5MmRS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/23a3ajgmhf06kfe4woca.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OYz5MmRS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/23a3ajgmhf06kfe4woca.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As the &lt;code&gt;PE Header&lt;/code&gt; is one of the subsection of the &lt;code&gt;IMAGE_NT_HEADER&lt;/code&gt;, we can easily retrieve as such.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="n"&gt;PIMAGE_FILE_HEADER&lt;/span&gt; &lt;span class="n"&gt;imageFileHeader&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;imageNtHeaders&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;FileHeader&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Taking a deeper look into the PE Header, we have the following sections.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--J9bKYfjA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/co9vygr5af9b4p3eizz4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--J9bKYfjA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/co9vygr5af9b4p3eizz4.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In visual studio, we can see the matching fields as well.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YbqvZB1M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4ynajhel0t14dpzmthmn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YbqvZB1M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4ynajhel0t14dpzmthmn.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lets-write-some-code-to-visualize-these-information"&gt;
  &lt;/a&gt;
  Let's write some code to visualize these information
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="n"&gt;wsprintfA&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;strlen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s"&gt;"Number of Symbols: %d&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;imageFileHeader&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;NumberOfSymbols&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;wsprintfA&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;strlen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s"&gt;"Pointer to Symbol Table: 0x%02X&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;imageFileHeader&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;PointerToSymbolTable&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;wsprintfA&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;strlen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s"&gt;"Number of Sections: %hd&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;imageFileHeader&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;NumberOfSections&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;wsprintfA&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;strlen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s"&gt;"TimeDateStamp: %d&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;imageFileHeader&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;TimeDateStamp&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;wsprintfA&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;strlen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s"&gt;"Size of Optional Header: %hd&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;imageFileHeader&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;SizeOfOptionalHeader&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;wsprintfA&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;strlen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s"&gt;"Machine: 0x%02X&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;imageFileHeader&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;Machine&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;wsprintfA&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;strlen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s"&gt;"Characteristix: 0x%02X&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;imageFileHeader&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;Characteristics&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="n"&gt;MessageBoxA&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"PE Header"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;MB_OK&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;MB_ICONINFORMATION&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And the result is,&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xUdYzSeh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ul9ii6f03z1cmjz1ay0b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xUdYzSeh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ul9ii6f03z1cmjz1ay0b.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#number-of-symbols"&gt;
  &lt;/a&gt;
  Number of Symbols
&lt;/h2&gt;

&lt;p&gt;This is deprecated and should contain 0.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pointer-to-symbol-table"&gt;
  &lt;/a&gt;
  Pointer to symbol table
&lt;/h2&gt;

&lt;p&gt;This is also deprecated and should contain 0.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#number-of-sections"&gt;
  &lt;/a&gt;
  Number of sections
&lt;/h2&gt;

&lt;p&gt;Sections will be covered in another article. This field basically stores the number of sections.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#timedatestamp"&gt;
  &lt;/a&gt;
  TimeDateStamp
&lt;/h2&gt;

&lt;p&gt;The number of seconds that has passed from epoch since the file creation.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#size-of-optional-headers"&gt;
  &lt;/a&gt;
  Size of Optional Headers
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;Optional Header&lt;/code&gt; comes after the &lt;code&gt;PE Header&lt;/code&gt;. We will discuss it in other articles.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#machine"&gt;
  &lt;/a&gt;
  Machine
&lt;/h2&gt;

&lt;p&gt;The number that identifies the type of target machine that this executable was compiled for.&lt;/p&gt;

&lt;p&gt;Looking into &lt;code&gt;winnt.h&lt;/code&gt;,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="cp"&gt;#define IMAGE_FILE_MACHINE_I386              0x014c  // Intel 386.
&lt;/span&gt;&lt;span class="c1"&gt;// omitted&lt;/span&gt;
&lt;span class="cp"&gt;#define IMAGE_FILE_MACHINE_AMD64             0x8664  // AMD64 (K8)
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Visual studio always runs in a 32bit emulator while debugging even though I am using a 64 bit machine. Thus it shows as &lt;code&gt;0x014c&lt;/code&gt; which is a &lt;code&gt;32 bit&lt;/code&gt; executable.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#characteristics"&gt;
  &lt;/a&gt;
  Characteristics
&lt;/h1&gt;

&lt;p&gt;We can use tools like &lt;code&gt;CFF Explorer&lt;/code&gt; to understand this.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--80KRRI1X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qeyhpoe1ehscm789gse1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--80KRRI1X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qeyhpoe1ehscm789gse1.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As expected, all of these macros can be found in &lt;code&gt;winnt.h&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="cp"&gt;#define IMAGE_FILE_RELOCS_STRIPPED           0x0001  // Relocation info stripped from file.
#define IMAGE_FILE_EXECUTABLE_IMAGE          0x0002  // File is executable  (i.e. no unresolved external references).
#define IMAGE_FILE_LINE_NUMS_STRIPPED        0x0004  // Line nunbers stripped from file.
#define IMAGE_FILE_LOCAL_SYMS_STRIPPED       0x0008  // Local symbols stripped from file.
#define IMAGE_FILE_AGGRESIVE_WS_TRIM         0x0010  // Aggressively trim working set
#define IMAGE_FILE_LARGE_ADDRESS_AWARE       0x0020  // App can handle &amp;gt;2gb addresses
#define IMAGE_FILE_BYTES_REVERSED_LO         0x0080  // Bytes of machine word are reversed.
#define IMAGE_FILE_32BIT_MACHINE             0x0100  // 32 bit word machine.
#define IMAGE_FILE_DEBUG_STRIPPED            0x0200  // Debugging info stripped from file in .DBG file
#define IMAGE_FILE_REMOVABLE_RUN_FROM_SWAP   0x0400  // If Image is on removable media, copy and run from the swap file.
#define IMAGE_FILE_NET_RUN_FROM_SWAP         0x0800  // If Image is on Net, copy and run from the swap file.
#define IMAGE_FILE_SYSTEM                    0x1000  // System File.
#define IMAGE_FILE_DLL                       0x2000  // File is a DLL.
#define IMAGE_FILE_UP_SYSTEM_ONLY            0x4000  // File should only be run on a UP machine
#define IMAGE_FILE_BYTES_REVERSED_HI         0x8000  // Bytes of machine word are reversed.
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this article, we have understood the meaning behind each field in the PE Header.&lt;/p&gt;

</description>
      <category>cybersecurity</category>
      <category>security</category>
    </item>
    <item>
      <title>A simple way to use Web Worker with React-Create-APP - No eject needed</title>
      <author>AnxinYang</author>
      <pubDate>Sat, 24 Apr 2021 05:24:54 +0000</pubDate>
      <link>https://dev.to/anxinyang/a-simple-way-to-use-web-worker-with-react-create-app-no-eject-needed-1c08</link>
      <guid>https://dev.to/anxinyang/a-simple-way-to-use-web-worker-with-react-create-app-no-eject-needed-1c08</guid>
      <description>&lt;p&gt;The problem of using Web Worker with an app that start with create-react-app is that:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;create-react-app hide its webpack config from user to modify, if not ejected.&lt;/li&gt;
&lt;li&gt;You need to modify webpack config in order to emit worker file.&lt;/li&gt;
&lt;li&gt;If ejected, the webpack.config is overwhelming and hard to modify.&lt;/li&gt;
&lt;li&gt;worker-loader is not very typescript-friendly.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#a-solution"&gt;
  &lt;/a&gt;
  A Solution
&lt;/h3&gt;

&lt;p&gt;We can generator worker.js by running another webpack thread that only take care worker files. Here are what we need to do:&lt;/p&gt;

&lt;p&gt;If you haven't install &lt;code&gt;webpack-cli&lt;/code&gt;, you need to install it.&lt;/p&gt;

&lt;p&gt;I'm using typescript, so let's install the &lt;code&gt;ts-loader&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Then, add a webpack.config.js file at project root like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;path&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;webpack&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;webpack&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;src&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./src&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;build&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./public&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// output worker.js to public folder&lt;/span&gt;


&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;tsLoader&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;loader&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ts-loader&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;options&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;compilerOptions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;module&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;esnext&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;noEmit&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;mode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;none&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;target&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;webworker&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;//Importan! Use webworker target&lt;/span&gt;
  &lt;span class="na"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./src/worker.ts&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;output&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;worker.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;build&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;modules&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;node_modules&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="na"&gt;extensions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.json&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.jsx&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.ts&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.tsx&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;

  &lt;span class="na"&gt;plugins&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;webpack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;HotModuleReplacementPlugin&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
    &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;webpack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DefinePlugin&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;process.env.NODE_ENV&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;development&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="na"&gt;module&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;rules&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;test&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;\.&lt;/span&gt;&lt;span class="sr"&gt;ts&lt;/span&gt;&lt;span class="se"&gt;?&lt;/span&gt;&lt;span class="sr"&gt;$/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;use&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;tsLoader&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;

    &lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note, we need to change the following config:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Change &lt;code&gt;output&lt;/code&gt; to &lt;code&gt;./public&lt;/code&gt; folder so react-scripts can use it.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;target&lt;/code&gt; needs to be &lt;code&gt;webworker&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;compilerOptions: {..., noEmit: false, ...}&lt;/code&gt; to &lt;code&gt;ts-loader&lt;/code&gt; options. This will overwrite the &lt;code&gt;noEmit:true&lt;/code&gt; in the &lt;code&gt;tsconfig.json&lt;/code&gt; that created by create-react-app.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;then, add a npm script to package.json and run it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="nl"&gt;"worker"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"webpack --watch"&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And, in you app:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;worker&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Worker&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;worker.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, start your react app and enjoy your worker.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#ps"&gt;
  &lt;/a&gt;
  PS:
&lt;/h4&gt;

&lt;p&gt;I know this solution is not the best one, if you have any other suggestion, please leave a comment and let me know. Thanks!&lt;/p&gt;

</description>
      <category>react</category>
      <category>worker</category>
      <category>typescript</category>
      <category>javascript</category>
    </item>
    <item>
      <title>The Ember Times - Issue No. 178</title>
      <author>The Ember Times</author>
      <pubDate>Sat, 24 Apr 2021 05:19:10 +0000</pubDate>
      <link>https://dev.to/embertimes/the-ember-times-issue-no-178-1bna</link>
      <guid>https://dev.to/embertimes/the-ember-times-issue-no-178-1bna</guid>
      <description>&lt;p&gt;👋 Emberistas! 🐹&lt;/p&gt;

&lt;p&gt;Find out about the Ember 3.26 release, updated release of Unstable Ember Language Server, and addon roundup.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#ember-326-released"&gt;
  &lt;/a&gt;
  &lt;a href="https://blog.emberjs.com/ember-3-26-released"&gt;Ember 3.26 released 🥳&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://blog.emberjs.com/ember-3-26-released"&gt;Ember 3.26 release was announced&lt;/a&gt; on April 12, 2021. The release patched a few bug fixes in &lt;code&gt;ember-source&lt;/code&gt; and &lt;code&gt;ember-cli&lt;/code&gt;. It also introduced several deprecations in &lt;code&gt;ember-source&lt;/code&gt; in preparation of the &lt;strong&gt;upcoming Ember 4.0 release&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;We encourage you to make time to address deprecated patterns in your apps and addons. The &lt;a href="https://deprecations.emberjs.com/"&gt;Deprecations Guide&lt;/a&gt; provides examples of how you might update your code.&lt;/p&gt;

&lt;p&gt;Here are 3 quick tips for what you can do for Ember 3.26:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;To make a route transition in a controller or route, inject the &lt;code&gt;router&lt;/code&gt; service and use its &lt;code&gt;transitionTo&lt;/code&gt; or &lt;code&gt;replaceWith&lt;/code&gt; method. You can check the &lt;a href="https://api.emberjs.com/ember/release/classes/RouterService"&gt;API Guides&lt;/a&gt; to learn more about the &lt;code&gt;router&lt;/code&gt; service.&lt;/p&gt;

&lt;p&gt;For new code, using the &lt;code&gt;router&lt;/code&gt; service shouldn't cause an issue. When you update existing code, however, your app may behave differently when the route transition occurs. Before any update, write tests that cover the intended behavior.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;When you invoke the &lt;code&gt;&amp;lt;LinkTo&amp;gt;&lt;/code&gt; component with angle brackets, use named arguments to improve code readability. The arguments include &lt;code&gt;@route&lt;/code&gt;, &lt;code&gt;@model&lt;/code&gt;, &lt;code&gt;@models&lt;/code&gt;, and &lt;code&gt;@query&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If you use Ember Data in a controller or route, inject the &lt;code&gt;store&lt;/code&gt; service.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Need help with upgrading your app? You can ask questions in the &lt;a href="https://discuss.emberjs.com/"&gt;Ember Discussion Form&lt;/a&gt; or the &lt;code&gt;#help&lt;/code&gt; channel on &lt;a href="https://discord.gg/emberjs"&gt;Ember Discord&lt;/a&gt;.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#updated-release-of-unstable-ember-language-server"&gt;
  &lt;/a&gt;
  &lt;a href="https://marketplace.visualstudio.com/items?itemName=lifeart.vscode-ember-unstable"&gt;Updated release of Unstable Ember Language Server ✨&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;A new version of &lt;a href="https://marketplace.visualstudio.com/items?itemName=lifeart.vscode-ember-unstable"&gt;Unstable Ember Language Server&lt;/a&gt; has been published thanks to &lt;a href="https://github.com/suchitadoshi1987"&gt;Suchita Doshi (@suchitadoshi1987)&lt;/a&gt; and &lt;a href="https://github.com/lifeart"&gt;Alex Kanunnikov (@lifeart)&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The Unstable Ember Language Server is a VSCode extension that provides VSCode users features like auto complete, goto definition and diagnostics for Ember projects. While the name contains the word “unstable,” it is very &lt;strong&gt;stable&lt;/strong&gt; and is actually a fork of the &lt;a href="https://github.com/ember-tooling/ember-language-server"&gt;original Ember Language Server project&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This recent release adds &lt;a href="https://github.com/rwjblue/ember-holy-futuristic-template-namespacing-batman"&gt;batman syntax&lt;/a&gt; support (namespaces) to &lt;a href="https://marketplace.visualstudio.com/items?itemName=lifeart.vscode-ember-unstable"&gt;Unstable Ember Language Server&lt;/a&gt; so try it out today on your VSCode!&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#addon-roundup"&gt;
  &lt;/a&gt;
  Addon roundup 🙌
&lt;/h2&gt;

&lt;p&gt;We wanted to highlight some recent happenings around the web! Check them out and give them a try! 😎&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Do you want to use OAuth in your Ember app? &lt;a href="https://github.com/sinankeskin"&gt;Sinan Keskin (@sinankeskin)&lt;/a&gt; wrote a new addon, &lt;a href="https://github.com/sinankeskin/ember-oauther"&gt;ember-oauther&lt;/a&gt;, which allows you to sign in and register a user with OAuth easily! OAuth is an open standard for &lt;strong&gt;access delegation&lt;/strong&gt;, commonly used to help a user register or log in to a web app via their login for Facebook, Google, Microsoft, etc.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/elwayman02/ember-resize-modifier"&gt;ember-resize-monitor&lt;/a&gt; provides a &lt;a href="https://ember-resize-modifier.jhawk.co/modifiers/did-resize/"&gt;did-resize&lt;/a&gt; modifier for detecting &lt;strong&gt;resize events&lt;/strong&gt; on the element or component it's attached to. These events could include window resizing CSS changes, content updates, and more. &lt;a href="https://github.com/elwayman02"&gt;Jordan Hawker (@elwayman02)&lt;/a&gt; published a v0.2.0 and gave a shoutout to &lt;a href="https://github.com/xjmdoo"&gt;Tamas Sule (@xjmdoo)&lt;/a&gt; for improving the addon's performance by 10x!&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ember-a11y/ember-a11y-testing"&gt;ember-a11y-testing&lt;/a&gt; v4.0.4 is here! ember-a11y-testing is a wrapper around Deque Labs' &lt;a href="https://github.com/dequelabs/axe-core"&gt;axe-core&lt;/a&gt; &lt;strong&gt;accessibility testing engine&lt;/strong&gt;. The addon can be integrated in your testing environment either as a one-time setup, or in individual tests using an &lt;code&gt;a11yAudit()&lt;/code&gt; test helper. Raise your Lighthouse score &lt;em&gt;and&lt;/em&gt; improve the web at the same time! Thank you to the team that made this happen, including these recent contributors: &lt;a href="https://github.com/drewlee"&gt;Andrew A Lee (@drewlee)&lt;/a&gt;, &lt;a href="https://github.com/danwenzel"&gt;Dan Wenzel (@danwenzel)&lt;/a&gt;, &lt;a href="https://github.com/MelSumner"&gt;Melanie Sumner (@MelSumner)&lt;/a&gt;, &lt;a href="https://github.com/scalvert"&gt;Steve Calvert (@scalvert)&lt;/a&gt;, &lt;a href="https://github.com/rwjblue"&gt;Robert Jackson (@rwjblue)&lt;/a&gt;, &lt;a href="https://github.com/thoov"&gt;Travis Hoover (@thoov)&lt;/a&gt;, and &lt;a href="https://github.com/zelaznik"&gt;
Steve Zelaznik (@zelaznik)&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/suchitadoshi1987/els-addon-import-specifiers"&gt;Suchita Doshi (@suchitadoshi1987)&lt;/a&gt; published a new experimental language server addon, &lt;a href="https://github.com/suchitadoshi1987/els-addon-import-specifiers"&gt;els-addon-import-specifiers&lt;/a&gt;, that jumps to &lt;strong&gt;the line&lt;/strong&gt; of an import directly, instead of the parent file. Nice!&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#contributors-corner"&gt;
  &lt;/a&gt;
  &lt;a href="https://guides.emberjs.com/release/contributing/repositories/"&gt;Contributors' corner 👏&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;This week we'd like to thank &lt;a href="https://github.com/hannakim91" rel="noopener noreferrer"&gt;Hanna (@hannakim91)&lt;/a&gt;, &lt;a href="https://github.com/btecu" rel="noopener noreferrer"&gt;Bj Tecu (@btecu)&lt;/a&gt;, &lt;a href="https://github.com/pzuraq" rel="noopener noreferrer"&gt;Chris Garrett (@pzuraq)&lt;/a&gt;, &lt;a href="https://github.com/ijlee2" rel="noopener noreferrer"&gt;Isaac Lee (@ijlee2)&lt;/a&gt;, &lt;a href="https://github.com/rinoldsimon" rel="noopener noreferrer"&gt;Rinold Simon (@rinoldsimon)&lt;/a&gt;, &lt;a href="https://github.com/brendenpalmer" rel="noopener noreferrer"&gt;Brenden Palmer (@brendenpalmer)&lt;/a&gt;, &lt;a href="https://github.com/jenweber" rel="noopener noreferrer"&gt;Jen Weber (@jenweber)&lt;/a&gt;, &lt;a href="https://github.com/igorT" rel="noopener noreferrer"&gt;Igor Terzic (@igorT)&lt;/a&gt;, &lt;a href="https://github.com/esquith" rel="noopener noreferrer"&gt;Esquith Allen (@esquith)&lt;/a&gt;, &lt;a href="https://github.com/rajasegar" rel="noopener noreferrer"&gt;Rajasegar Chandran (@rajasegar)&lt;/a&gt;, &lt;a href="https://github.com/patocallaghan" rel="noopener noreferrer"&gt;Pat O'Callaghan (@patocallaghan)&lt;/a&gt;, &lt;a href="https://github.com/locks" rel="noopener noreferrer"&gt;Ricardo Mendes (@locks)&lt;/a&gt;, &lt;a href="https://github.com/stephencweiss" rel="noopener noreferrer"&gt;Stephen Weiss (@stephencweiss)&lt;/a&gt;, &lt;a href="https://github.com/mansona" rel="noopener noreferrer"&gt;Chris Manson (@mansona)&lt;/a&gt;, &lt;a href="https://github.com/nickschot" rel="noopener noreferrer"&gt;Nick Schot (@nickschot)&lt;/a&gt;, &lt;a href="https://github.com/wagenet" rel="noopener noreferrer"&gt;Peter Wagenet (@wagenet)&lt;/a&gt;, &lt;a href="https://github.com/kategengler" rel="noopener noreferrer"&gt;Katie Gengler (@kategengler)&lt;/a&gt;, &lt;a href="https://github.com/lin-ll" rel="noopener noreferrer"&gt;Lucy Lin (@lin-ll)&lt;/a&gt;, &lt;a href="https://github.com/gilest" rel="noopener noreferrer"&gt;Giles Thompson (@gilest)&lt;/a&gt;, &lt;a href="https://github.com/jayjayjpg" rel="noopener noreferrer"&gt;Jesse Jordan (@jayjayjpg)&lt;/a&gt;, &lt;a href="https://github.com/bmish" rel="noopener noreferrer"&gt;Bryan Mishkin (@bmish)&lt;/a&gt;, &lt;a href="https://github.com/amyrlam" rel="noopener noreferrer"&gt;Amy Lam (@amyrlam)&lt;/a&gt;, &lt;a href="https://github.com/afzal273" rel="noopener noreferrer"&gt;Afzal Syed (@afzal273)&lt;/a&gt;, &lt;a href="https://github.com/davecombs" rel="noopener noreferrer"&gt;Dave Combs (@davecombs)&lt;/a&gt;, &lt;a href="https://github.com/chancancode" rel="noopener noreferrer"&gt;Godfrey Chan (@chancancode)&lt;/a&gt;, &lt;a href="https://github.com/runspired" rel="noopener noreferrer"&gt;Chris Thoburn (@runspired)&lt;/a&gt;, &lt;a href="https://github.com/josemarluedke" rel="noopener noreferrer"&gt;Josemar Luedke (@josemarluedke)&lt;/a&gt;, &lt;a href="https://github.com/tylerbecks" rel="noopener noreferrer"&gt;Tyler Becks (@tylerbecks)&lt;/a&gt;, &lt;a href="https://github.com/raido" rel="noopener noreferrer"&gt;Raido Kuli (@raido)&lt;/a&gt;, &lt;a href="https://github.com/jaredgalanis" rel="noopener noreferrer"&gt;Jared Galanis (@jaredgalanis)&lt;/a&gt;, &lt;a href="https://github.com/spham92" rel="noopener noreferrer"&gt;Steven Pham (@spham92)&lt;/a&gt;, and &lt;a href="https://github.com/broxsonl" rel="noopener noreferrer"&gt;Lee Broxson (@broxsonl)&lt;/a&gt; for their contributions to Ember and related repositories! 💖&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#connect-with-us"&gt;
  &lt;/a&gt;
  &lt;a href="https://docs.google.com/forms/d/e/1FAIpQLScqu7Lw_9cIkRtAiXKitgkAo4xX_pV1pdCfMJgIr6Py1V-9Og/viewform"&gt;Connect with us 🤓&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tBKSG3RO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tc902n4lecfay7emq8gq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tBKSG3RO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tc902n4lecfay7emq8gq.png" alt="Office hours Tomster mascot"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Wondering about something related to Ember, Ember Data, Glimmer, or addons in the Ember ecosystem, but don't know where to ask? Readers’ Questions are just for you!&lt;/p&gt;


&lt;p&gt;&lt;strong&gt;Submit your own&lt;/strong&gt; short and sweet &lt;strong&gt;question&lt;/strong&gt; under &lt;a href="https://bit.ly/ask-ember-core"&gt;bit.ly/ask-ember-core&lt;/a&gt;. And don’t worry, there are no silly questions, we appreciate them all - promise! 🤞&lt;/p&gt;


&lt;p&gt;Want to write for the Ember Times? Have a suggestion for next week's issue? Join us at &lt;a href="https://discordapp.com/channels/480462759797063690/485450546887786506"&gt;#support-ember-times&lt;/a&gt; on the &lt;a href="https://discord.gg/emberjs"&gt;Ember Community Discord&lt;/a&gt; or ping us &lt;a href="https://twitter.com/embertimes"&gt;@embertimes&lt;/a&gt; on Twitter.&lt;/p&gt;


&lt;p&gt;Keep on top of what's been going on in Emberland this week by subscribing to our &lt;a href="https://embertimes.substack.com/"&gt;e-mail newsletter&lt;/a&gt;! You can also find our posts on the &lt;a href="https://blog.emberjs.com/tag/newsletter"&gt;Ember blog&lt;/a&gt;. See you in two weeks!&lt;/p&gt;
&lt;br&gt;




&lt;p&gt;That's another wrap! ✨&lt;/p&gt;

&lt;p&gt;Be kind,&lt;/p&gt;

&lt;p&gt;Amy Lam, Isaac Lee, Chris Ng, and the Learning Team&lt;/p&gt;

</description>
      <category>ember</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
  </channel>
</rss>
