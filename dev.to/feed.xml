<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Build a LinkedIn Clone Using just HTML &amp; CSS</title>
      <author>Somanath Goudar</author>
      <pubDate>Thu, 06 May 2021 07:44:35 +0000</pubDate>
      <link>https://dev.to/somanathgoudar/build-a-linkedin-clone-using-just-html-css-3p1n</link>
      <guid>https://dev.to/somanathgoudar/build-a-linkedin-clone-using-just-html-css-3p1n</guid>
      <description>&lt;p&gt;I Built LinkedIn Clone using just HTML &amp;amp; CSS. I Just Love to build these to practice my HTML &amp;amp; CSS Skills. I made a tutorial video to help beginners to improve there html &amp;amp; css skills to build real world projects.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tutorial Video:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/RnN6r0fTbvQ"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Github:&lt;/strong&gt; &lt;a href="https://github.com/somanath-goudar/html-css-projects"&gt;https://github.com/somanath-goudar/html-css-projects&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Do you want to improve your HTML &amp;amp; CSS skills? Then Watch this video and follow along with me where we build LinkedIn Clone using just HTML &amp;amp; CSS. We will be using flexbox and Google font Icons in this project.&lt;/p&gt;

&lt;p&gt;Hope You Guys Enjoyed the Video. Like Share Comment and Subscribe to my channel for more videos like these.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Channel:&lt;/strong&gt; &lt;a href="https://www.youtube.com/channel/UC_nTrhTr5fnBGjOxnkPUmmA"&gt;https://www.youtube.com/channel/UC_nTrhTr5fnBGjOxnkPUmmA&lt;/a&gt;&lt;br&gt;
Subscribe to My YouTube Channel, Next Week I Will be building &lt;strong&gt;Tiktok Clone&lt;/strong&gt; &amp;amp; &lt;strong&gt;Instagram Reels Clone&lt;/strong&gt; with just HTML &amp;amp; CSS.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;You may also like my other posts:&lt;/strong&gt;&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/somanathgoudar" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KnNEMcDo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--15QGQnyq--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/600953/fdee0195-6d25-410d-9d97-c10ffaa4eb7d.jpeg" alt="somanathgoudar image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/somanathgoudar/build-a-youtube-clone-with-just-html-css-for-complete-beginners-4fk1" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Build a YouTube Clone with just HTML &amp;amp; CSS + Responsive - For  Beginners&lt;/h2&gt;
      &lt;h3&gt;Somanath Goudar ・ Mar 21 ・ 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;div class="ltag__link"&gt;
  &lt;a href="/somanathgoudar" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KnNEMcDo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--15QGQnyq--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/600953/fdee0195-6d25-410d-9d97-c10ffaa4eb7d.jpeg" alt="somanathgoudar image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/somanathgoudar/build-a-password-generator-with-react-js-react-toastify-beginners-tutorial-4a9n" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Build A Password Generator with React JS - react-toastify - Beginners Tutorial&lt;/h2&gt;
      &lt;h3&gt;Somanath Goudar ・ Mar 23 ・ 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#react&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


</description>
      <category>html</category>
      <category>tutorial</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Understanding the Picture-in-Picture web API with examples</title>
      <author>Tapas Adhikary</author>
      <pubDate>Thu, 06 May 2021 07:30:07 +0000</pubDate>
      <link>https://dev.to/atapas/understanding-the-picture-in-picture-web-api-with-examples-362p</link>
      <guid>https://dev.to/atapas/understanding-the-picture-in-picture-web-api-with-examples-362p</guid>
      <description>&lt;p&gt;&lt;code&gt;Picture-in-Picture&lt;/code&gt; is a feature supported by some smart televisions, devices to show the content(like videos) on a floating window(on the top of other windows) so that users can continue to see the content while interacting with the background page, other sites.&lt;/p&gt;

&lt;p&gt;Have you noticed the mini-player option when you watch a video on Youtube? You can watch the video in the Picture-in-Picture-like mode while interacting with the other part of the application.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rVCWtWkW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620116387067/kqPOw_Eh5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rVCWtWkW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620116387067/kqPOw_Eh5.png" alt="youtube_miniplayer.png"&gt;&lt;/a&gt;&lt;br&gt;
Figure 1: Example of a Youtube video playing in the mini-player&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The Google Chrome browser started supporting the &lt;code&gt;Picture-in-Picture&lt;/code&gt; mode. You can use &lt;a href="https://chrome.google.com/webstore/detail/picture-in-picture-extens/hkgfoiooedgoejojocmhlaklaeopbecg"&gt;this extension&lt;/a&gt; to enable it in the chrome browser. Once enabled, you can see it appearing beside the browser's address bar.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DgWr0zG6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620118256076/21DydHcLg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DgWr0zG6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620118256076/21DydHcLg.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
Figure 2: Picture-In-Picture extension for Chrome browser&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;For Mozilla Firefox, you may have to enable it from the &lt;code&gt;about.config&lt;/code&gt; page by setting the &lt;code&gt;media.videocontrols.picture-in-picture.enabled&lt;/code&gt; property to &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aOr-7vEN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620118477979/V2ZCA3a6u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aOr-7vEN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620118477979/V2ZCA3a6u.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
Figure 3: Enable picture-in-picture in the firefox browser.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#pictureinpicture-using-javascript"&gt;
  &lt;/a&gt;
  Picture-in-Picture using JavaScript
&lt;/h1&gt;

&lt;p&gt;JavaScript provides you the &lt;code&gt;Picture-in-Picture&lt;/code&gt; API to create and control the feature programmatically. Here goes the browser support information:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Google Chrome version &amp;gt;= 70&lt;/li&gt;
&lt;li&gt;Microsoft Edge version &amp;gt;= 79&lt;/li&gt;
&lt;li&gt;Safari version &amp;gt;= 13.1&lt;/li&gt;
&lt;li&gt;Mozilla Firefox: Partial(Conditional) Support&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can find the other browser and device support details &lt;a href="https://caniuse.com/?search=picture-in-picture"&gt;from here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The picture-in-picture API methods are available in the &lt;code&gt;HTMLVideoElement(&amp;lt;video&amp;gt;)&lt;/code&gt; and &lt;code&gt;Document&lt;/code&gt; interfaces to allow users to toggle between the standard presentation and picture-in-picture modes.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#check-browsers-support"&gt;
  &lt;/a&gt;
  Check Browser's Support
&lt;/h2&gt;

&lt;p&gt;We can check the browser's support for this API using the following code,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pictureInPictureEnabled&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// The picture-in-picture feature is supported&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Ther is no Support for the picture-in-picture feature&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#pictureinpicture-mode-enter-and-exit"&gt;
  &lt;/a&gt;
  Picture-in-Picture Mode: Enter and Exit
&lt;/h2&gt;

&lt;p&gt;To enter into the &lt;code&gt;picture-in-picture&lt;/code&gt; mode, you can call the method &lt;code&gt;requestPictureInPicture()&lt;/code&gt; on the &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; element. When you call the method &lt;code&gt;exitPictureInPicture()&lt;/code&gt; on the &lt;code&gt;document&lt;/code&gt; object, the video exits from the picture-in-picture mode and enter the standard presentation mode.&lt;/p&gt;

&lt;p&gt;Let's add a simple video element in the HTML file,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;video&lt;/span&gt; 
   &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"path_to_video_file"&lt;/span&gt; 
   &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"video"&lt;/span&gt; &lt;span class="na"&gt;muted&lt;/span&gt; &lt;span class="na"&gt;autoplay&lt;/span&gt; &lt;span class="na"&gt;loop&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/video&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, we will add a button to toggle between the modes. Then, finally, add a click handler to call the &lt;code&gt;toggle()&lt;/code&gt; function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; 
   &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"actionBtnId"&lt;/span&gt; 
   &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"action"&lt;/span&gt; 
   &lt;span class="na"&gt;onclick=&lt;/span&gt;&lt;span class="s"&gt;"toggle()"&lt;/span&gt; 
   &lt;span class="na"&gt;disabled&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
     Enter Picture-in-Picture mode
&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the JavaScript, we will define the &lt;code&gt;toggle()&lt;/code&gt; function as,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;toggle&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pictureInPictureElement&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exitPictureInPicture&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pictureInPictureEnabled&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;video&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;requestPictureInPicture&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the code above, we check if the picture-in-picture feature is enabled. If so, call the &lt;code&gt;requestPictureInPicture&lt;/code&gt; on the video element to get into the picture-in-picture mode. Once the picture-in-picture mode is enabled, the document object will have the &lt;code&gt;pictureInPictureElement&lt;/code&gt;. So, when the toggle function gets called next time, it checks the &lt;code&gt;pictureInPictureElement&lt;/code&gt;. If found, it exits from the picture-in-picture mode.&lt;/p&gt;

&lt;p&gt;Here is a &lt;code&gt;CodePen&lt;/code&gt; to see it as an example. Try clicking on the button below the video and see the video getting into the picture-in-picture mode. Click on the same button again to exit from the mode.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/atapas/embed/abpKaBV?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Please note: As explained before, to see the picture-picture feature working in the Mozilla Firefox browser, you have to enable it first. Once enabled, you can right-click on the video and select the option &lt;code&gt;Watch in Picture-in-Picture&lt;/code&gt;. &lt;br&gt;
 &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Wy9VtuB6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620127851689/kSZnTAmLW.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Wy9VtuB6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620127851689/kSZnTAmLW.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#pictureinpicture-api-events"&gt;
  &lt;/a&gt;
  Picture-in-Picture API Events
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;Picture-in-Picture&lt;/code&gt; API defines three events.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;enterpictureinpicture&lt;/code&gt;: Triggers when a video element enters the picture-in-picture mode.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;leavepictureinpicture&lt;/code&gt;: Triggers when the video element exits the picture-in-picture mode.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;resize&lt;/code&gt;: Triggers when the picture-in-picture windows resize.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These events can come in handy when you want to perform any custom actions based on a video enters or exit the picture-in-picture mode. Here is an example of changing a button text and color when a video toggles between the modes.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;video&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;enterpictureinpicture&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;actionBtnId&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;textContent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Exit Picture-in-Picture mode&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;actionBtnId&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;redBtn&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;video&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;leavepictureinpicture&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;actionBtnId&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;textContent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Enter Picture-in-Picture mode&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;actionBtnId&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;redBtn&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You must have noticed it working in the code pen example we have seen above.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pictureinpicture-api-properties"&gt;
  &lt;/a&gt;
  Picture-in-Picture API Properties
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;Picture-in-Picture&lt;/code&gt; API provides properties in multiple JavaScript interfaces like, &lt;code&gt;HTMLVideoElement(&amp;lt;video&amp;gt;)&lt;/code&gt;, &lt;code&gt;Document&lt;/code&gt;, and &lt;code&gt;ShadowRoot&lt;/code&gt;. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;pictureInPictureEnabled&lt;/code&gt;: We have seen this property already. It tells us whether or not it is possible to engage in picture-in-picture mode.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;   &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pictureInPictureEnabled&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;video&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;requestPictureInPicture&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;autoPictureInPicture&lt;/code&gt;: It is a video element property that automatically enables a video to get into the picture-in-picture mode and exits when the user switches the tab/application. For example, right-click on the video in the CodePen below and enter into the picture-in-picture mode. Then switch tabs and come back to the same pen to see it exiting automatically.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/atapas/embed/wvJwWVX?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;disablePictureInPicture&lt;/code&gt;: This video element property will disable the picture-in-picture feature. Here is a CodePen to try out this property.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/atapas/embed/wvgVmxj?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-control-styling"&gt;
  &lt;/a&gt;
  How to Control Styling?
&lt;/h2&gt;

&lt;p&gt;The CSS pseudo-class &lt;code&gt;:picture-in-picture&lt;/code&gt; allows us to adjust the size, style, or layout of content when a video switches back and forth between picture-in-picture and standard modes.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nd"&gt;:picture-in-picture&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;box-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt; &lt;span class="m"&gt;#0081ff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#565652&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#stream-webcam-capture-into-the-pictureinpicture-mode"&gt;
  &lt;/a&gt;
  Stream Webcam Capture into the Picture-in-Picture mode
&lt;/h2&gt;

&lt;p&gt;Let us do something a bit more fun now. How about capturing the video using your webcam and show it in the picture-in-picture mode.&lt;/p&gt;

&lt;p&gt;First create a video element,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;video&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"videostreamId"&lt;/span&gt; &lt;span class="na"&gt;autoplay=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt; &lt;span class="na"&gt;controls&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/video&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we can start the webcam, and once we start receiving the stream, we can pass it to the video element to play it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mediaDevices&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getUserMedia&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;video&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
 &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;stream&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;localStream&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;stream&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;video&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;srcObject&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;stream&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;video&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;play&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, we use the &lt;code&gt;Picture-in-Picture&lt;/code&gt; API method when the video is fully loaded into the video element.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt; &lt;span class="nx"&gt;video&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;loadedmetadata&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;video&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;requestPictureInPicture&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can try out the same in the CodePen below.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Please note: You may have to open the pen in a new tab and see the webcam working. Also, feel free to fork and fix a bug I left unfixed in the code 🐞.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/atapas/embed/abpeYxd?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;



&lt;br&gt;
That's all for now. If you enjoyed this article or found it helpful, let's connect. You can find me on &lt;a href="https://twitter.com/tapasadhikary"&gt;Twitter(@tapasadhikary)&lt;/a&gt; sharing thoughts, tips, and code practices.

&lt;p&gt;You may also like,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.greenroots.info/10-lesser-known-web-apis-you-may-want-to-use-ckejv75cr012y70s158n85yhn"&gt;10 lesser-known Web APIs you may want to use&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.greenroots.info/10-vs-code-emmet-tips-to-make-you-more-productive-ckknjvxal028f1qs18w20e94t"&gt;10 VS Code emmet tips to make you more productive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Picture-in-Picture_API"&gt;MDN Picture-in-Picture API&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>html</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>8 Linux Commands Everyone Should Know</title>
      <author>Boyan Iliev</author>
      <pubDate>Thu, 06 May 2021 07:25:17 +0000</pubDate>
      <link>https://dev.to/boiliev/8-linux-commands-everyone-should-know-1f2i</link>
      <guid>https://dev.to/boiliev/8-linux-commands-everyone-should-know-1f2i</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduciton"&gt;
  &lt;/a&gt;
  Introduciton
&lt;/h1&gt;

&lt;p&gt;It's a well-known fact that developers use terminals. And using a terminal is something that everybody should know. It is a good thing to know and do because it will help you in so many ways. It will help you in that job interview, or just in your everyday life. You must at least have the basic knowledge of how to use a terminal. For example how to change directories and view them and how to create a file. &lt;/p&gt;

&lt;p&gt;In this post, I am going to show you some of the basic commands and how to get around in a terminal and not be completely lost. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#1-raw-pwd-endraw-"&gt;
  &lt;/a&gt;
  1. &lt;code&gt;pwd&lt;/code&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;pwd&lt;/code&gt; means &lt;strong&gt;Print Working Directory&lt;/strong&gt;. It shows you the full path to your current directory. This is used so you don't get lost in all those directories that you have. If you don't know what a directory is, it is pretty much like a folder. It stores other folders and files in it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pwd
/Users/user1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#2-raw-ls-endraw-"&gt;
  &lt;/a&gt;
  2. &lt;code&gt;ls&lt;/code&gt;
&lt;/h1&gt;

&lt;p&gt;The &lt;code&gt;ls&lt;/code&gt; stands for &lt;strong&gt;List Files&lt;/strong&gt;. It will show you the files and directories that are in your current directory.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ls
xmen avengers justiceLeague
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#3-raw-cd-endraw-"&gt;
  &lt;/a&gt;
  3. &lt;code&gt;cd&lt;/code&gt;
&lt;/h1&gt;

&lt;p&gt;Now that you know how to list your files in your working directory and how to print the path to it, you will need to &lt;strong&gt;Change Directory&lt;/strong&gt;. This is done by typing the &lt;code&gt;cd&lt;/code&gt; command. You just have to type it and then next to it type the directory you want to visit. But this command only moves forward and backward. This means you can't just type a directory name that is deep inside your files just by typing its name. You have to type the full path to that dir.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd avengers
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you want to go in multiple dirs, you need to use &lt;code&gt;/&lt;/code&gt; after every dir, and then type the directory you want to visit inside the previous one.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd ironMan/suitMark85
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you want to go back one dir, you need to type &lt;code&gt;cd ..&lt;/code&gt;. You could mix this with other dir like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd ../../captainAmerica/steveRogers
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Or if you just type &lt;code&gt;cd&lt;/code&gt; by itself, it will send you to the home directory.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#4-raw-mkdir-endraw-"&gt;
  &lt;/a&gt;
  4. &lt;code&gt;mkdir&lt;/code&gt;
&lt;/h1&gt;

&lt;p&gt;Now that we know how to go to a directory and how to view what's inside them, we need to learn how to make one. It is done through the &lt;code&gt;mkdir&lt;/code&gt; command. You just type the command and add the new directory name next to it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;mkdir secretDir
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you want to create multiple dir at once, just type all of them next to each other.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;mkdir secretDir1 secretDir2 secretDir3
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When doing these kinds of things be sure to use the &lt;code&gt;pwd&lt;/code&gt; command so you know in which dir you are so that you don't create the new dirs in the wrong one.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#5-raw-man-endraw-"&gt;
  &lt;/a&gt;
  5. &lt;code&gt;man&lt;/code&gt;
&lt;/h1&gt;

&lt;p&gt;The &lt;code&gt;man&lt;/code&gt; command is used to check the manuals of a certain command. When you are not sure what a command does and what to have a detailed look at it, just type the &lt;code&gt;man&lt;/code&gt; command and add the other command next to it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;man ls
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When you are done viewing the manual, press &lt;code&gt;q&lt;/code&gt; so that you can leave the file.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#6-raw-touch-endraw-"&gt;
  &lt;/a&gt;
  6. &lt;code&gt;touch&lt;/code&gt;
&lt;/h1&gt;

&lt;p&gt;The &lt;code&gt;touch&lt;/code&gt; command creates a file (or multiple). It is almost the same as &lt;code&gt;mkdir&lt;/code&gt;, but it's not used for making directories but for files with an extension(.txt, .html, .css ...).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;touch index.html style.css app.js
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#7-raw-nano-endraw-"&gt;
  &lt;/a&gt;
  7. &lt;code&gt;nano&lt;/code&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;nano&lt;/code&gt; is a text editor using a command-line interface. When you create a file and want to add something small to it, just use &lt;code&gt;nano&lt;/code&gt; to add it. &lt;/p&gt;

&lt;p&gt;In order to edit a file, just type &lt;code&gt;nano&lt;/code&gt; and the file name next to it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;nano index.html
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note that if there isn't such a file in your directory, for example, the &lt;code&gt;index.html&lt;/code&gt; one, it will create a new one. So this means that you wouldn't need to use the &lt;code&gt;touch&lt;/code&gt; command. bUt it's best to create a file with &lt;code&gt;touch&lt;/code&gt; and then go to your code editor and do your coding there. &lt;code&gt;nano&lt;/code&gt; is best used for those minor changes like for example a typo.&lt;/p&gt;

&lt;p&gt;There are some shortcuts that would be nice for you to know. I would recommend checking this post out on some of those shortcuts.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://devdojo.com/bobbyiliev/11-nano-shortcuts-that-you-should-know"&gt;11 Nano shortcuts that you should know&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#8-raw-rm-endraw-"&gt;
  &lt;/a&gt;
  8. &lt;code&gt;rm&lt;/code&gt;
&lt;/h1&gt;

&lt;p&gt;Now that we know how to view dirs, create them, create files and edit them, we need to learn how to delete them. Deleting a dir or file is done with the &lt;code&gt;rm&lt;/code&gt; command. You definitely want to be careful with this, because if you delete a file or dir, you won't be able to get it back. So if you want to delete a file just type &lt;code&gt;rm&lt;/code&gt; and then the file name. Or if you want to remove multiple files, just type their names next to each other&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;rm index.html style.css app.js
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now if you want to remove a directory you can use &lt;code&gt;rmdir&lt;/code&gt;, but this will only remove a dir that is empty. In order to delete a dir that is not empty, use the &lt;code&gt;rm&lt;/code&gt; command with the flags &lt;code&gt;-rf&lt;/code&gt;. If you don't know what flags are, think of them as extra options for your command. The &lt;code&gt;ls&lt;/code&gt; command has lots of flags. I would recommend that you check the manual of the &lt;code&gt;ls&lt;/code&gt; command so that you can see all its available flags. &lt;/p&gt;

&lt;p&gt;So deleting a directory with other dirs or files inside should be done like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;rm -rf avengers
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Be very careful with these commands because if you delete a file or dir by accident, you won't be able to get them back&lt;/p&gt;

&lt;p&gt;If you want to see some examples and a more detailed explanation for some of these commands be sure to check out this video:&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/HqdFvL74wqo"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;Knowing how to use a terminal is crucial. It is. a huge bonus to know at least these commands, which will help you a lot. &lt;/p&gt;

&lt;p&gt;I hope that this post has helped you and that you will be a little bit more confident the next time you see a terminal.&lt;/p&gt;

</description>
      <category>linux</category>
      <category>terminal</category>
      <category>developer</category>
    </item>
    <item>
      <title>Top 5 Python libraries for Computer vision</title>
      <author>Stokry</author>
      <pubDate>Thu, 06 May 2021 07:03:22 +0000</pubDate>
      <link>https://dev.to/stokry/top-5-python-libraries-for-computer-vision-47ga</link>
      <guid>https://dev.to/stokry/top-5-python-libraries-for-computer-vision-47ga</guid>
      <description>&lt;p&gt;Computer vision is the field of computer science that focuses on replicating parts of the complexity of the human visual system and enabling computers to identify and process objects in images and videos in the same way that humans do.&lt;br&gt;
Today core concepts of Computer vision are already being integrated into major products that we use every day, for example:&lt;br&gt;
Self-Driving Cars, Facial Recognition, Healthcare, etc.&lt;/p&gt;

&lt;p&gt;These are the top 5 Python libraries that you can use for Computer Vision:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://opencv.org/"&gt;OpenCV&lt;/a&gt; open Source Computer Vision Library.  &lt;a href="https://opencv.org/"&gt;OpenCV&lt;/a&gt;(Open Source Computer Vision Library) is an open source computer vision and machine learning software library. OpenCV was built to provide a common infrastructure for computer vision applications and to accelerate the use of machine perception in the commercial products. Being a BSD-licensed product, OpenCV makes it easy for businesses to utilize and modify the code.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/ageitgey/face_recognition"&gt;Face Recognition&lt;/a&gt;  - Simple facial recognition library.  Recognize and manipulate faces from Python or from the command line with the world's simplest face recognition library. Built using  &lt;a href="http://dlib.net/"&gt;dlib&lt;/a&gt;'s state-of-the-art face recognition built with deep learning. The model has an accuracy of 99.38% on the  &lt;a href="http://vis-www.cs.umass.edu/lfw/"&gt;Labeled Faces in the Wild&lt;/a&gt;  benchmark.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/sightmachine/SimpleCV"&gt;SimpleCV&lt;/a&gt;  - SimpleCV is a framework for Open Source Machine Vision, using OpenCV and the Python programming language. It provides a concise, readable interface for cameras, image manipulation, feature extraction, and format conversion. Our mission is to give casual users a comprehensive interface for basic machine vision functions and an elegant programming interface for advanced users.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/kornia/kornia/"&gt;Kornia&lt;/a&gt;  - &lt;em&gt;Kornia&lt;/em&gt;  is a differentiable computer vision library for  &lt;a href="https://pytorch.org/"&gt;PyTorch&lt;/a&gt;. It consists of a set of routines and differentiable modules to solve generic computer vision problems. At its core, the package uses  &lt;em&gt;PyTorch&lt;/em&gt;  as its main backend both for efficiency and to take advantage of the reverse-mode auto-differentiation to define and compute the gradient of complex functions.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/madmaze/pytesseract"&gt;pytesseract&lt;/a&gt;  - Python-tesseract is an optical character recognition (OCR) tool for python. That is, it will recognize and "read" the text embedded in images. Python-tesseract is a wrapper for  &lt;a href="https://github.com/tesseract-ocr/tesseract"&gt;Google's Tesseract-OCR Engine&lt;/a&gt;. It is also useful as a stand-alone invocation script to tesseract, as it can read all image types supported by the Pillow and Leptonica imaging libraries, including jpeg, png, gif, bmp, tiff, and others. Additionally, if used as a script, Python-tesseract will print the recognized text instead of writing it to a file.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;These are my favorite Python libraries that I use each day for computer vision. There are many other libraries for CV, if you think I’ve left an important one, please leave one in the comments. &lt;/p&gt;

&lt;p&gt;Thank you all. &lt;/p&gt;

</description>
      <category>python</category>
      <category>productivity</category>
      <category>computervision</category>
    </item>
    <item>
      <title>Wrike vs Asana: Battle of the 2 Project Management tools</title>
      <author>Ranjali Roy</author>
      <pubDate>Thu, 06 May 2021 07:01:27 +0000</pubDate>
      <link>https://dev.to/ranjalir/wrike-vs-asana-battle-of-the-2-project-management-tools-11kg</link>
      <guid>https://dev.to/ranjalir/wrike-vs-asana-battle-of-the-2-project-management-tools-11kg</guid>
      <description>&lt;p&gt;Wrike and Asana are both solid project management tools that offer powerful functionalities and are quite similar to one another. In fact, you may notice some of their functionalities and strengths overlapping with one another. &lt;/p&gt;

&lt;p&gt;But the audience that they’re after is quite contrasting. However, that isn’t the only aspect the two apps differ in.&lt;/p&gt;

&lt;p&gt;Let us look at the comparison of Wrike vs Asana in-depth and find out which PM solution is perfect for your org. &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#quick-overview-of-wrike"&gt;
  &lt;/a&gt;
  Quick Overview of Wrike
&lt;/h2&gt;

&lt;p&gt;Founded in 2006 by Andrew Filev, Wrike has surely come a long way - from a self-funded startup to a notable &lt;a href="https://zepel.io/compare/jira-alternative/?utm_source=devto&amp;amp;utm_medium=text&amp;amp;utm_campaign=wrike-vs-asana"&gt;alternative to Jira software&lt;/a&gt; that prioritizes functionality over aesthetics. Although this app was built with agile product development companies in mind, it offers special account types for the marketing department and other creative teams.&lt;/p&gt;

&lt;p&gt;At heart, Wrike is an app for managing tasks and team collaboration. So, for each project, you can create any number of work items, assign them to multiple members, create dependencies, and add descriptions, comments, deadlines, and attachments.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e92SSI08--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ftcpsgkt0aou5lotj631.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e92SSI08--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ftcpsgkt0aou5lotj631.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Some of the qualities that make Wrike popular are its flexibility to customize workflows, easy learning curve, reporting capabilities, and intelligent functionalities such as the ability to predict when a project is at risk of not shipping within the stipulated deadline, smart replies, and document processing. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-makes-wrike-a-good-project-management-tool-for-your-team"&gt;
  &lt;/a&gt;
  What makes Wrike a good project management tool for your team?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Wrike offers a range of unique templates including a template to implement agile capabilities such as &lt;a href="https://zepel.io/agile/scrum/backlog/?utm_source=devto&amp;amp;utm_medium=text&amp;amp;utm_campaign=wrike-vs-asana"&gt;backlog&lt;/a&gt; planning, managing &lt;a href="https://zepel.io/agile/scrum/sprint/?utm_source=devto&amp;amp;utm_medium=text&amp;amp;utm_campaign=wrike-vs-asana"&gt;sprints&lt;/a&gt; using &lt;a href="https://zepel.io/features/scrum-board/?utm_source=devto&amp;amp;utm_medium=text&amp;amp;utm_campaign=wrike-vs-asana"&gt;scrum board&lt;/a&gt;, and reports for monitoring progress.&lt;/li&gt;
&lt;li&gt;Supports a File view that shows a list of all the files shared and a Stream view that summarizes all the activities on the project, apart from the standard views, namely, board, list, Gantt, and table.&lt;/li&gt;
&lt;li&gt;Also includes a centralized repository-like functionality called Spaces, a grouping type that enables you to create folders and group all info related to your squad.&lt;/li&gt;
&lt;li&gt;Apart from traditional collaboration-focussed functionalities, Wrike also has the option to manage ongoing work i.e. ongoing work items without a final deliverable or a fixed deadline. For eg: gathering customer feedback. &lt;/li&gt;
&lt;li&gt;Allows you to customize your workflow via feature add-ons and a plethora of third-party integrations.
Separate account type for marketers and other creative departments.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#reasons-why-businesses-think-wrike-isnt-worth-their-time"&gt;
  &lt;/a&gt;
  Reasons why businesses think Wrike isn't worth their time
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Wrike lacks an appealing user interface in comparison with its competitors.&lt;/li&gt;
&lt;li&gt;Very difficult to figure out which functionalities come with which account types and hence choosing the right account type is a challenge.&lt;/li&gt;
&lt;li&gt;Offers agile capabilities as a template but lacks the power and finesse of a dedicated, full-fledged &lt;a href="https://zepel.io/agile-tools/?utm_source=devto&amp;amp;utm_medium=text&amp;amp;utm_campaign=wrike-vs-asana"&gt;agile tool&lt;/a&gt; like Zepel does.&lt;/li&gt;
&lt;li&gt;Wrike can get expensive and since it is a sliding scale pricing with possible add-ons, you will need to contact the sales department to purchase.&lt;/li&gt;
&lt;li&gt;Unlike Asana, it doesn’t support an in-built messaging platform for team chats and so you will need to integrate with 3rd-party apps like Slack.&lt;/li&gt;
&lt;li&gt;Difficult to navigate if you’re unfamiliar with this app and owing to the clutter.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#what-are-users-saying"&gt;
  &lt;/a&gt;
  What are users saying:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.g2.com/products/wrike/reviews/wrike-review-4535260"&gt;Review on G2&lt;/a&gt;:
"What do you like?
-Clearly see details about certain projects, including project goals, attachments, assignees, and status&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;-Time-tracking capabilities&lt;/p&gt;

&lt;p&gt;-Using Calendars for social media and content marketing tracking&lt;/p&gt;

&lt;p&gt;What do you dislike?&lt;br&gt;
Wrike isn't intuitive. And we never had any kind of implementation process or kick-off to make sure we're all using the tool the same way.&lt;/p&gt;

&lt;p&gt;As a result, everyone is using Wrike in their own way, resulting in disorganization and confusion."&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.capterra.com/p/76113/Wrike/reviews/1606610/"&gt;Review on Capterra&lt;/a&gt;:
"Overall: Configuration support was limited unless you spend extra. Chat support is very good but limited to the art of the cure available, not the are of the possible. Getting users to use the system rather than Outlook is very difficult. Integration with Outlook requires expensive additional components. The basic business license has good functionality but lacks important elements that are only available with the enterprise license.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Pros: It is versatile and can be configured for numerous functions&lt;/p&gt;

&lt;p&gt;Cons: While good at some it is not great ant any UNLESS you spend significant money to integrate it with other software like Microsoft Outlook or conference systems like Zoom. These integrations are possible but not cheap. The system doesn't have a notion of time of day for scheduling tasks."&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#quick-overview-of-asana"&gt;
  &lt;/a&gt;
  Quick Overview of Asana
&lt;/h2&gt;

&lt;p&gt;Founded in 2008 as an internal application by former Facebook co-founder Dustin Moskovitz and ex-facebook engineer Justin Rosenstein, Asana was kept in private beta for 4 years before being launched to the public in 2012. Today, Asana is one of the moguls in the project management tools industry. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sO1efCRK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k75iztwfl29jpiuggi0i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sO1efCRK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k75iztwfl29jpiuggi0i.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Asana is a quintessential task management application where for every project you create, you can populate it with work items and subitems. You can then add assignees, descriptions, comments, and tags to each work item. &lt;/p&gt;

&lt;p&gt;Team collaboration is what makes Asana a sought-after PM solution. Here, you can hold all your squad’s convos in one place so that no info gets lost. &lt;/p&gt;

&lt;p&gt;Although Asana caters to both technical and non-technical orgs, it is preferred more by the latter than the former. And so, if you’re a software development org, you’ll find these &lt;a href="https://zepel.io/blog/asana-alternatives/?utm_source=devto&amp;amp;utm_medium=text&amp;amp;utm_campaign=wrike-vs-asana"&gt;Asana alternatives&lt;/a&gt; impressive.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-makes-asana-a-good-product-to-manage-projects"&gt;
  &lt;/a&gt;
  What makes Asana a good product to manage projects?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Intuitive user-interface makes work a fun experience&lt;/li&gt;
&lt;li&gt;Flexible and customizable to suit your needs with its custom templates, custom statuses, custom tags, and custom fields&lt;/li&gt;
&lt;li&gt;Supports multiple views such as board, list, calendar, and Gantt to help visualize your projects and a special workload view for resource management&lt;/li&gt;
&lt;li&gt;Loads of integrations with third-party apps available for streamlining your workflows&lt;/li&gt;
&lt;li&gt;Team communication and collaboration capabilities enable holding all your work items and related conversations under one roof
Offers unlimited tasks for orgs to get work done even on the free plan&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#reasons-why-some-customers-dislike-asanas-product-features"&gt;
  &lt;/a&gt;
  Reasons why some customers dislike Asana's product features
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Too many functionalities that result in a steep learning curve&lt;/li&gt;
&lt;li&gt;Doesn’t support agile capabilities other than a simple &lt;a href="https://zepel.io/agile/kanban/what-are-kanban-boards/?utm_source=devto&amp;amp;utm_medium=text&amp;amp;utm_campaign=wrike-vs-asana"&gt;kanban board&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Lacks a single nestled view for viewing work items and subitems, unlike Zepel.&lt;/li&gt;
&lt;li&gt;Doesn’t allow assigning multiple users to a single work item&lt;/li&gt;
&lt;li&gt;No &lt;code&gt;/&lt;/code&gt; commands and markdown support to get work done fast&lt;/li&gt;
&lt;li&gt;Pricing can get expensive quickly&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#top-user-reviews"&gt;
  &lt;/a&gt;
  Top user reviews
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.g2.com/products/asana/reviews/asana-review-4603588"&gt;Review on G2&lt;/a&gt;:
“What do you like best?
The interface is really clear and intuitive, it is also beautiful. It is nice to use, you can split the tasks in projects and get updated of what is going on in each product in a simple way, you also have a schedule view where you can see how the project is evolving during time.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;People used to like it, very fast learning curve to start using, create tasks and organise everything if you could build a team culture that has the habit of updating and documenting what is going on.&lt;/p&gt;

&lt;p&gt;For teams that are not so focused on productivity metrics and agile methodologies (like Marketing, Sales, Customer Success, etc.) could be a great solution.&lt;/p&gt;

&lt;p&gt;What do you dislike?&lt;br&gt;
If you compare to a more robust tool like JIRA you will miss a lot of productivity and agile metrics like velocity reports, burndown charts and etc. So if you would like to be more predictive about how much work your team can deliver in certain amount of time is not easy to get this information from using Asana. Also if you are working with software development it lacks integration with tools like Github to keep everything synced and easy to find out. If you are using a free version and your company is growing fast be aware that if you reach the limit of the free version the cost for keep using it could be much more than you expected and not fit your budget.”&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.capterra.com/p/120550/Asana/reviews/1204106/"&gt;Review on Capterra&lt;/a&gt;:
“As I have primarily only used this for software development tracking, I have found the experience frustrating with lack of good organization and other features. But for any other tasks that are not as specific as software development, it should work great.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Pros: I like the Kanban modes and its integrations with Slack. My company has used this for software development tasks though, and there it lacks in development related features. Fortunately you can get integrations to automatically sync with Jira or other task managers.&lt;/p&gt;

&lt;p&gt;Cons: Lacking in complicated workflow creation. It also is not nearly as suited for software development as a task manager such as Jira. Jira allows you to tie a task to a git branch, display commits, keep track of tasks and time tracking better, and has more project manager features.”&lt;/p&gt;

&lt;p&gt;P.S. You can find agile metrics, deep integrations with GitHub, GitLab, and Bitbucket, complicated workflow setup, and more in Zepel. &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#comparison-amp-difference-between-wrike-vs-asana-11-questions-to-ask"&gt;
  &lt;/a&gt;
  Comparison &amp;amp; difference between Wrike vs Asana - 11 questions to ask
&lt;/h2&gt;

&lt;p&gt;The following 11 questions and answers will help you compare in detail Wrike vs Asana and identify which app is ideal for your squad:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Who’s got a superior UI - Wrike or Asana?&lt;/strong&gt;&lt;br&gt;
Asana’s user-interface is far more intuitive when compared to Wrike, although the latter’s user-interface is simpler. But if you’re looking for a simple but intuitive UI, then check out Zepel.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Which software is easier to get started with?&lt;/strong&gt;&lt;br&gt;
Both the apps are difficult to navigate and get a hang of owing to the wide range of functionalities they offer. But Wrike is easier to get started with than Asana due to the simple design of the app. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Whose functionalities closely match your org’s requirements?&lt;/strong&gt;&lt;br&gt;
Both the platforms are both packed with utilities that enable customizing your workflows. However, Wrike has a comparatively rigid workflow that makes it hard to use. &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When it comes to agile, Asana lacks agile capabilities other than a basic kanban board while Wrike offers more functionalities to implement other agile frameworks such as scrum. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Who is more developer-friendly among these two apps?&lt;/strong&gt;&lt;br&gt;
Wrike is a bit more developer-friendly than Asana as it at least supports other agile frameworks such as scrum whereas Asana has only a basic kanban board. But, if developer-friendliness is what you’re after, then you can pick Zepel blindly. Because with Zepel, you get powerful agile capabilities for &lt;a href="https://zepel.io/agile/scrum-vs-kanban/?utm_source=devto&amp;amp;utm_medium=text&amp;amp;utm_campaign=wrike-vs-asana"&gt;scrum and kanban&lt;/a&gt; and deep integrations with GitHub, GitLab, and Bitbucket. Zepel also supports Markdown and &lt;code&gt;/&lt;/code&gt; commands for getting work done in seconds. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Which app helps you collaborate with your squad better?&lt;/strong&gt;&lt;br&gt;
Asana allows you to hold all your team conversations in one place, making collaboration efficient. Whereas Wrike only has a comment box that allows you to @mention members. So when it comes to communication and collaboration, Asana wins hands-down. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Which application to pick in terms of pricing?&lt;/strong&gt; &lt;br&gt;
Wrike as well as Asana offer free plans. The former’s free plan limits functionalities, views, storage, and even the number of users to 5 per organization. The latter’s free plan also limits you to add only 15 members and has restrictions in functionalities. &lt;a href="https://www.wrike.com/price/"&gt;Wrike has a variety of paid plans&lt;/a&gt; and accounts start at &lt;strong&gt;$9.80 per user per month&lt;/strong&gt;. On the other hand, &lt;a href="https://asana.com/pricing"&gt;Asana’s paid plan&lt;/a&gt; starts at &lt;strong&gt;$10.99 per member per month&lt;/strong&gt; billed annually. &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;But if bucks matter, (of course they do!), you’ll get more value from these &lt;a href="https://zepel.io/blog/free-project-management-software/?utm_source=devto&amp;amp;utm_medium=text&amp;amp;utm_campaign=wrike-vs-asana"&gt;free project management software&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Is Wrike’s customer support better or Asana’s?&lt;/strong&gt;&lt;br&gt;
Wrike and Asana’s customer support is below average. You aren’t guaranteed a response period. And so, you’re bound to get equally disappointed by both the apps.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;In terms of security, which app is your best bet?&lt;/strong&gt;&lt;br&gt;
Both the PM solutions are quite secure with file encryptions and TLS for securing files in transit. But Wrike’s security slightly outperforms that of Asana’s with its own servers for storage rather than using AWS.  &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Who wins when it comes to integrations?&lt;/strong&gt;&lt;br&gt;
Wrike has an extensive library of integrations for a wide range of use cases. Asana too is no less when it comes to this and has an impressive lineup of integrations up its sleeve. But Wrike reserves certain integrations to certain tiers and so for a greater number of integrations, you need to shell out more money. Whereas Asana is pretty reasonable and offers more integrations in its lower tiers while reserving advanced integrations for the higher tiers. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Who are the target customers that these apps are meant for?&lt;/strong&gt;&lt;br&gt;
Asana is best for non-IT departments such as marketing, sales, and the like. Meanwhile, Wrike is apt for agile product development organizations that are small in size.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Are there alternatives to Wrike and Asana that are more suitable for your company?&lt;/strong&gt;&lt;br&gt;
Yes, there certainly are more solid alternatives to these two apps that are better suited for your org.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#4-recommended-alternatives-to-wrike-and-asana-for-your-business"&gt;
  &lt;/a&gt;
  4 recommended alternatives to Wrike and Asana for your business
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#1-zepel"&gt;
  &lt;/a&gt;
  1. Zepel
&lt;/h3&gt;

&lt;p&gt;The perfect alternative (and #1 choice) to Wrike and Asana is Zepel. The user-interface is simple with an elegant and uncluttered design. But, it is also very intuitive and easy to navigate. This makes onboarding a hassle-free experience. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FrUwMiii--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fx8564ekhtvbj626f1it.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FrUwMiii--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fx8564ekhtvbj626f1it.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When it comes to functionalities, Zepel has everything your software development squad has only dreamt of - from deep integrations with dev-favourites such as &lt;a href="https://zepel.io/integrations/github/?utm_source=devto&amp;amp;utm_medium=text&amp;amp;utm_campaign=wrike-vs-asana"&gt;GitHub&lt;/a&gt;, &lt;a href="https://zepel.io/integrations/gitlab/?utm_source=devto&amp;amp;utm_medium=text&amp;amp;utm_campaign=wrike-vs-asana"&gt;GitLab&lt;/a&gt;, and &lt;a href="https://zepel.io/integrations/bitbucket/?utm_source=devto&amp;amp;utm_medium=text&amp;amp;utm_campaign=wrike-vs-asana"&gt;Bitbucket&lt;/a&gt; to automating your &lt;a href="https://zepel.io/blog/5-git-workflows-to-improve-development/?utm_source=devto&amp;amp;utm_medium=text&amp;amp;utm_campaign=wrike-vs-asana"&gt;git workflows&lt;/a&gt; so that Zepel does the boring grunt work of updating the status of your dev squad’s progress. Zepel also supports &lt;code&gt;/&lt;/code&gt; commands and markdown to speed up your work.&lt;/p&gt;

&lt;p&gt;With Zepel, you can implement more than just basic kanban. You can implement scrum and even a combination of both efficiently. And that’s why engineering squads revere Zepel as one of the most developer-friendly &lt;a href="https://zepel.io/solutions/engineering/?utm_source=devto&amp;amp;utm_medium=text&amp;amp;utm_campaign=wrike-vs-asana"&gt;engineering project management software&lt;/a&gt; today. Zepel removes all the chaos from the development process and makes building software products hassle-free.&lt;/p&gt;

&lt;p&gt;Zepel completes your development process with a functionality called &lt;a href="https://zepel.io/guide/streams/?utm_source=devto&amp;amp;utm_medium=text&amp;amp;utm_campaign=wrike-vs-asana"&gt;Streams&lt;/a&gt; that brings in &lt;a href="https://zepel.io/blog/analyze-customer-feedback-guide/?utm_source=devto&amp;amp;utm_medium=text&amp;amp;utm_campaign=wrike-vs-asana"&gt;customer feedback&lt;/a&gt; in the form of requests from various external sources such as Canny, Intercom, etc. Now, you can prioritize and build customer-focussed features for your product with more than mere issue-tracking.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pricing:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://zepel.io/pricing/?utm_source=devto&amp;amp;utm_medium=text&amp;amp;utm_campaign=wrike-vs-asana"&gt;Zepel’s pricing plan&lt;/a&gt; comes with a free plan that doesn’t charge you anything for the first 5 members forever no matter how many members you add. When you add your 6th member, the standard annual plan starts at &lt;strong&gt;$5/member/month&lt;/strong&gt; and its standard monthly plan starts at &lt;strong&gt;$7/member&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Best For:&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;Cross-functional teams of any size that desire to build software products with context the agile way. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-mondaycom"&gt;
  &lt;/a&gt;
  2. Monday.com
&lt;/h3&gt;

&lt;p&gt;Monday.com is a noteworthy competitor to both the apps as it is loaded with a ton of functionalities and multiple views, namely, calendar, gantt, forms, and so on. This app has plenty of templates for any department, can be customized, and can be automated for certain tasks. This makes building custom workflows easier on monday.com.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--x5MwkAJd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tvy378qqwhq64ujokg0x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--x5MwkAJd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tvy378qqwhq64ujokg0x.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Akin to Wrike and Asana, monday.com also supports a lot of integrations with 3rd-party apps such as Slack, OneDrive, Google Calendar, and even with other PM apps like Jira. &lt;/p&gt;

&lt;p&gt;But when it comes to agile, it lacks capabilities other than simple kanban. Another minus point is, due to too many functionalities, it is easy to get overwhelmed and the learning curve is steep.&lt;/p&gt;

&lt;p&gt;You might be interested in comparing &lt;a href="https://zepel.io/blog/asana-vs-trello-vs-monday/?utm_source=devto&amp;amp;utm_medium=text&amp;amp;utm_campaign=wrike-vs-asana"&gt;Asana vs Trello vs Monday&lt;/a&gt;. Or just &lt;a href="https://zepel.io/blog/asana-vs-monday/?utm_source=devto&amp;amp;utm_medium=text&amp;amp;utm_campaign=wrike-vs-asana"&gt;Asana vs Monday&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pricing:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://monday.com/pricing"&gt;Monday.com’s pricing plan&lt;/a&gt; is heavy on the pocket. There isn’t a free plan but instead, a 14-day trial post which you must choose a paid plan, starting at &lt;strong&gt;$10/member/month&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Best For:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Non-IT agency and departments pertaining to marketing, sales, etc.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-clickup"&gt;
  &lt;/a&gt;
  3. ClickUp
&lt;/h3&gt;

&lt;p&gt;ClickUp is also a notable alternative to the two apps. It may appear strikingly similar to Asana but has its differences when you look closer. Here’s a comparison of &lt;a href="https://zepel.io/blog/asana-vs-clickup/?utm_source=devto&amp;amp;utm_medium=text&amp;amp;utm_campaign=wrike-vs-asana"&gt;Asana vs ClickUp&lt;/a&gt; elaborating their differences. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZoHU-Ka7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4i6df7xzyjwdjj2haasm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZoHU-Ka7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4i6df7xzyjwdjj2haasm.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ClickUp aims to be an all-in-one PM platform that replaces all the tools in the market via feature add-ons. From handling tasks to resource management, you’re most likely to find functionality or an add-on for everything here.&lt;/p&gt;

&lt;p&gt;But the drawback of this app is that, similar to its peers, it also lacks the powerful agile capabilities that you’ll find in Zepel. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pricing:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://clickup.com/pricing"&gt;ClickUp’s pricing plan&lt;/a&gt; is affordable just like Zepel’s. However, it comes with functionality restrictions that you won’t find even in Zepel’s free plan. ClickUp’s free plan enables you to add unlimited users. However, if you want to access all its functionalities and add-ons, you must purchase a paid plan that starts at &lt;strong&gt;$5/user/month&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Best For:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Any business belonging to any industry but ideally non-IT companies.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-jira"&gt;
  &lt;/a&gt;
  4. Jira
&lt;/h3&gt;

&lt;p&gt;Jira is one of the pioneers in the PM sector that was initially built as an issue tracking application. But today, it has grown into a PM app that caters to agile development orgs. &lt;/p&gt;

&lt;p&gt;With Jira software, you can effortlessly customize your workflows to capture issues and bugs, assign them to members, prioritize and track them to completion. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LwXqZPaD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pam76u8b8zs0ggyy51ji.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LwXqZPaD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pam76u8b8zs0ggyy51ji.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Even though Jira has become a PM platform, it still remains an issue tracker at heart. And that’s why orgs look for &lt;a href="https://zepel.io/blog/jira-alternative/?utm_source=devto&amp;amp;utm_medium=text&amp;amp;utm_campaign=wrike-vs-asana"&gt;Jira alternatives&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pricing:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.atlassian.com/software/jira/pricing"&gt;Jira software's pricing plan&lt;/a&gt; is considerably straightforward. Jira software allows you to add up to 10 members in its free plan but with limited functionalities. The paid plans start at &lt;strong&gt;$7/user&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Best For:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Small IT organizations that are looking to build products using agile methodologies.&lt;/p&gt;

&lt;p&gt;Find out the comparative advantage of &lt;a href="https://zepel.io/blog/asana-vs-jira/?utm_source=devto&amp;amp;utm_medium=text&amp;amp;utm_campaign=wrike-vs-asana"&gt;Jira vs Asana&lt;/a&gt; here.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#5-reasons-why-zepel-is-the-ideal-project-management-software"&gt;
  &lt;/a&gt;
  5 reasons why Zepel is the ideal project management software
&lt;/h2&gt;

&lt;p&gt;Here are 5 reasons to help you see why Zepel is the perfect platform for your org:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Zepel supports collaboration with squads of any size and because of its intuitive UI and elegant design, without any clutter, onboarding is painless.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You will get the powerful agile capabilities that you've been looking for and you can implement Scrum, Kanban, or both effortlessly.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jhTn3emb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ici8lvu6jp0m0hgragdo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jhTn3emb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ici8lvu6jp0m0hgragdo.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Being one of the most developer-friendly PM apps out there having deep integrations with developer-favourite apps and workflow automation, your dev team will love Zepel.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rAkl3HcA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/an6ntvckrurdbsfdttbk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rAkl3HcA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/an6ntvckrurdbsfdttbk.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Handing over priorities from product to development team is hard and creates a disconnect. With Streams in Zepel, you can easily bring customer requests and bug reports from your product stack to handoff to developers. And build customer-focussed software painlessly. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AqrZWLu4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v23gagkqxmt5148kfqn2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AqrZWLu4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v23gagkqxmt5148kfqn2.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Zepel offers value-for-money pricing that doesn’t burn a hole in your pocket while providing you with maximum benefits.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sPEKh1ab--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v323ndlfs404no0a95td.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sPEKh1ab--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v323ndlfs404no0a95td.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Like what you see? You’ll love Zepel. But don’t take my word for it. &lt;a href="https://zepel.io/customer-reviews/?utm_source=devto&amp;amp;utm_medium=text&amp;amp;utm_campaign=wrike-vs-asana"&gt;See what 4000+ development teams like yours have to say about Zepel&lt;/a&gt;.&lt;/p&gt;




&lt;p&gt;Sign up and &lt;a href="https://zepel.io/?utm_source=devto&amp;amp;utm_medium=text&amp;amp;utm_campaign=wrike-vs-asana"&gt;try Zepel for free&lt;/a&gt;.  Or if you have questions, let’s &lt;a href="https://zepel.io/request-demo/?utm_source=devto&amp;amp;utm_medium=text&amp;amp;utm_campaign=wrike-vs-asana"&gt;get on a no strings attached demo call&lt;/a&gt;. :)&lt;/p&gt;

</description>
      <category>projectmanagement</category>
      <category>productmanagement</category>
      <category>productivity</category>
      <category>alternativetools</category>
    </item>
    <item>
      <title>JavaScript appendchild(): What it is and when to use it</title>
      <author>hrishikesh1990</author>
      <pubDate>Thu, 06 May 2021 06:08:43 +0000</pubDate>
      <link>https://dev.to/hrishikesh1990/javascript-appendchild-what-it-is-and-when-to-use-it-5eea</link>
      <guid>https://dev.to/hrishikesh1990/javascript-appendchild-what-it-is-and-when-to-use-it-5eea</guid>
      <description>&lt;p&gt;The JavaScript &lt;code&gt;appendChild()&lt;/code&gt; method is used to insert a new node or reposition an existing node as the last child of a particular parent node.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;TABLE OF CONTENTS&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="#syntax"&gt;Syntax of JavaScript appendChild&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#what"&gt;What is the JavaScript appendChild() method?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#key"&gt;Key points to note: appendChild() method&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#examples"&gt;JavaScript appendChild(): Examples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#vs"&gt;JavaScript appendChild() vs. append()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#objects"&gt;Objects that support appendChild()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#browsers"&gt;Browsers that support appendChild()&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#syntax-of-javascript-appendchild"&gt;
  &lt;/a&gt;
  Syntax of JavaScript appendChild:&lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;parentNode.appendChild(childNode);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;childNode&lt;/code&gt; is the node that we want to append to the parent node &lt;code&gt;parentNode&lt;/code&gt;. &lt;code&gt;appendChild()&lt;/code&gt; will return the appended child.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-the-javascript-appendchild-method"&gt;
  &lt;/a&gt;
  What is the JavaScript appendChild() method?&lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;The JavaScript &lt;code&gt;appendChild()&lt;/code&gt; is a method of the Node interface, used to append nodes (typically elements) at the end of a specified parent node. It can be executed on existing child nodes or by creating new elements:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#creating-elements"&gt;
  &lt;/a&gt;
  Creating elements
&lt;/h3&gt;

&lt;p&gt;To create a new element to be inserted at the end of a parent node, first use createElement to create it and then &lt;code&gt;appendChild()&lt;/code&gt; for the newly-created element.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#existing-elements"&gt;
  &lt;/a&gt;
  Existing elements
&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;appendChild()&lt;/code&gt; method also works on existing child nodes, using which you can move them to new positions within the document. In such a case, &lt;code&gt;appendChild()&lt;/code&gt; moves the particular child node from its current position to a new position at the end of the list of child nodes under the specified parent node.&lt;/p&gt;

&lt;p&gt;For appending existing child nodes to any other node, note that there is no need to remove the node from its parent node first. This is because a node can't be present in two positions within the same document simultaneously.&lt;/p&gt;

&lt;p&gt;So, when you use &lt;code&gt;appendChild()&lt;/code&gt; to append an existing child node to another node, the child node is first removed, and then appended at the new position.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#javascript-appendchild-examples"&gt;
  &lt;/a&gt;
  JavaScript appendChild(): Examples&lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#1-simple-example"&gt;
  &lt;/a&gt;
  1) Simple example
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// Create a new paragraph element, and append it to the end of the document body
let p = document.createElement("p");
document.body.appendChild(p);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#2-how-to-use-the-appendchild-method"&gt;
  &lt;/a&gt;
  2) How to use the appendChild() method
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;

&amp;lt;head&amp;gt;
    &amp;lt;meta charset="utf-8"&amp;gt;
    &amp;lt;title&amp;gt;How to use JavaScript appendChild()&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;ul id="userprofile"&amp;gt;
    &amp;lt;/ul&amp;gt;

    &amp;lt;script&amp;gt;
        function createMenuItem(name) {
            let li = document.createElement('li');
            li.textContent = name;
            return li;
        }
        // get the ul#userprofile
        const userprofile = document.querySelector('#userprofile');
        // add the user profile items
        userprofile.appendChild(createMenuItem('Profile'));
        userprofile.appendChild(createMenuItem('Settings'));
        userprofile.appendChild(createMenuItem('Log out'));
    &amp;lt;/script&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#3-how-to-move-an-existing-element-within-the-same-document-using-appendchild"&gt;
  &lt;/a&gt;
  3) How to move an existing element within the same document using appendchild()
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;ul id="list1"&amp;gt;
    &amp;lt;li&amp;gt;Chocolate&amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;Ice-cream&amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;Candy&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;

&amp;lt;ul id="list2"&amp;gt;
    &amp;lt;li&amp;gt;Chips&amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;Smoothie&amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;Soda&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;

// get list1
const firstList = document.querySelector('#list1');
// get the first child element
const chocolate = firstList.firstElementChild;
// get list2
const secondList = document.querySelector('#list2');
// append chocolate to list2
secondList.appendChild(chocolate)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#key-points-to-note-appendchild-method"&gt;
  &lt;/a&gt;
  Key points to note: appendChild() method&lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;'Appended' essentially means 'attach at the end'.&lt;/li&gt;
&lt;li&gt;You can use &lt;code&gt;cloneNode()&lt;/code&gt; to make a clone of the node before appending it under a new parent. However, remember that the copies of nodes made using cloneNode won't be updated automatically.&lt;/li&gt;
&lt;li&gt;You cannot use the &lt;code&gt;appendChild()&lt;/code&gt; method to append elements belonging to another document. For this, you'll first have to use &lt;code&gt;importNode&lt;/code&gt; or &lt;code&gt;adoptNode&lt;/code&gt; to import foreign elements, and then use &lt;code&gt;appendChild()&lt;/code&gt; to insert them into the desired position.&lt;/li&gt;
&lt;li&gt;You can use the &lt;code&gt;removeChild&lt;/code&gt; method to remove a child from an element.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#javascript-appendchild-vs-append"&gt;
  &lt;/a&gt;
  JavaScript appendChild() vs. append()&lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;append()&lt;/code&gt; is a newer API that allows you to insert a set of DOMString objects (in addition to Node objects) as equivalent text nodes at the end of the list of child nodes of a parent node.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#syntax-of-append"&gt;
  &lt;/a&gt;
  Syntax of append()
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;parentNode.append()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#difference-between-appendchild-and-append"&gt;
  &lt;/a&gt;
  Difference between appendChild() and append()
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#1-node-vs-domstring-objects"&gt;
  &lt;/a&gt;
  1. Node vs. DOMString objects
&lt;/h4&gt;

&lt;p&gt;Unlike &lt;code&gt;parentNode.appendChild()&lt;/code&gt;, which only allows you to append Node objects and return the appended Node object, &lt;code&gt;parentNode.append()&lt;/code&gt; also allows you to append DOMString objects, and it has no return value.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#2-single-vs-multiple-arguments"&gt;
  &lt;/a&gt;
  2. Single vs. Multiple arguments
&lt;/h4&gt;

&lt;p&gt;Further, &lt;code&gt;parentNode.appendchild()&lt;/code&gt; allows you to append only one node, while &lt;code&gt;parentNode.append()&lt;/code&gt; supports multiple arguments - so you can append several nodes and strings.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#objects-that-support-appendchild"&gt;
  &lt;/a&gt;
  Objects that support appendChild()&lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;The following JavaScript objects support the &lt;code&gt;appendChild()&lt;/code&gt; method:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;attributedocument&lt;/li&gt;
&lt;li&gt;DocumentFragment&lt;/li&gt;
&lt;li&gt;XMLDocument&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The following HTML elements support the &lt;code&gt;appendChild()&lt;/code&gt; method:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;a&amp;gt;, &amp;lt;b&amp;gt;, &amp;lt;big&amp;gt;, &amp;lt;blockquote&amp;gt;, &amp;lt;body&amp;gt;, &amp;lt;button&amp;gt;, &amp;lt;center&amp;gt;, &amp;lt;code&amp;gt;, &amp;lt;dir&amp;gt;, &amp;lt;div&amp;gt;, &amp;lt;dl&amp;gt;, &amp;lt;em&amp;gt;, &amp;lt;font&amp;gt;, &amp;lt;h1&amp;gt;, &amp;lt;h2&amp;gt;, &amp;lt;h3&amp;gt;, &amp;lt;h4&amp;gt;, &amp;lt;h5&amp;gt;, &amp;lt;h6&amp;gt;, &amp;lt;head&amp;gt;, &amp;lt;html&amp;gt;, &amp;lt;i&amp;gt;, &amp;lt;img&amp;gt;, &amp;lt;label&amp;gt;, &amp;lt;li&amp;gt;, &amp;lt;menu&amp;gt;, &amp;lt;object&amp;gt;, &amp;lt;ol&amp;gt;, &amp;lt;select&amp;gt;, &amp;lt;small&amp;gt;, &amp;lt;span&amp;gt;, &amp;lt;strike&amp;gt;, &amp;lt;strong&amp;gt;, &amp;lt;sub&amp;gt;, &amp;lt;sup&amp;gt;, &amp;lt;table&amp;gt;, &amp;lt;tfoot&amp;gt;, &amp;lt;th&amp;gt;, &amp;lt;thead&amp;gt;, &amp;lt;ul&amp;gt;, &amp;lt;var&amp;gt;, &amp;lt;xml&amp;gt;, &amp;lt;xmp&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And many others...&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#browsers-that-support-appendchild"&gt;
  &lt;/a&gt;
  Browsers that support appendChild()&lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;The following browsers support the appendChild() method:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Google Chrome&lt;/li&gt;
&lt;li&gt;Mozilla Firefox&lt;/li&gt;
&lt;li&gt;Safari&lt;/li&gt;
&lt;li&gt;Microsoft Edge&lt;/li&gt;
&lt;li&gt;Opera&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Read more about JavasCript appendchild on &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Node/appendChild"&gt;Mozilla's official Web Docs&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>react</category>
      <category>programming</category>
    </item>
    <item>
      <title>Django standalone script to take database backup</title>
      <author>Rugved</author>
      <pubDate>Thu, 06 May 2021 06:00:26 +0000</pubDate>
      <link>https://dev.to/rugved/django-standalone-script-to-take-database-backup-2287</link>
      <guid>https://dev.to/rugved/django-standalone-script-to-take-database-backup-2287</guid>
      <description>&lt;p&gt;In this blog we will learn to write standalone script which will be a generalized script to convert entire database to csv/xls files etc.&lt;/p&gt;

&lt;p&gt;Standalone script is basically a script where you don’t need to run server. It is “stand alone” i.e it is capable of performing tasks without any other requirement.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This blog was initially published on &lt;a href="https://www.gyaanibuddy.com/blog/django-standalone-script-to-take-database-backup/"&gt;https://www.gyaanibuddy.com/blog/django-standalone-script-to-take-database-backup/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h3&gt;

&lt;p&gt;A django project with any database along with some models whose data you wish to take backup.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#basic-template"&gt;
  &lt;/a&gt;
  Basic template
&lt;/h3&gt;

&lt;p&gt;This code is going to be the bare minimum skeleton of our script.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create a script.py file in the same directory as manage.py file.&lt;/li&gt;
&lt;li&gt;Paste the below code snippet.&lt;/li&gt;
&lt;li&gt;Rename PROJECT_NAME to your project’s name
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import os
PROJECT_NAME = 'ENTER YOUR PROJECT NAME HERE'

def main():
    # import statemts
    # from app.models import Author,Category,Book

    # code logic - anything you want


if __name__ == '__main__':
    os.environ.setdefault('DJANGO_SETTINGS_MODULE', '%s.settings' % PROJECT_NAME)
    import django
    django.setup()
    main()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Run the code by entering &lt;code&gt;python script.py&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If it ran with no errors then you are good to go. If you have any error, then depending on error you may have path error, installed app error etc.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#backup-script"&gt;
  &lt;/a&gt;
  Backup script
&lt;/h3&gt;

&lt;p&gt;If you are only interested in the script, scroll to the bottom and just paste it in script.py and run it.&lt;/p&gt;

&lt;p&gt;Lets look at some of the basic functions which will help us get the script ready.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Firstly, we need list of all the models.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;from django.apps import apps 
model_list = apps.get_models() 
model_name_list = [x.__name__ for x in model_list]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Now that we have the model, we will iterate over every single table and get its schema i.e the columns (or fields) in the table. We need the field/column names so that we can write them as column names to csv/xls file.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;for model in model_list:
    all_fields = model._meta.get_fields()
    columns = [x.name for x in all_fields]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Lets iterate over entire database and write the data to csv/xls.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;with open(f'csvs/{model.__name__}.csv', mode='w') as csv_file:
  writer = csv.writer(csv_file, delimiter=',', quotechar='"', quoting=csv.QUOTE_MINIMAL)
  # Writing column names
  writer.writerow(columns)
  objects = model.objects.all()

  for obj in objects:
    row = [str(getattr(obj, field_name,"NA")) for field_name in columns]
    writer.writerow(row)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;You will observe that a csv folder is created and inside it will contain one csv file for every table. So if you have Author, Book as tables, you will have Author.csv and Book.csv saved in the csv folder in the project root directory.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;'''
django standalone script to take backup of database in the form of csvs for each model.
- Place it in the same directory as manage.py file
- Rename PROJECT_NAME to your project's name
'''

import os

PROJECT_NAME = '--- ENTER YOUR PROJECT NAME HERE ---'

def main():
    from django.apps import apps
    import csv

    model_list = apps.get_models()
    model_name_list = [x.__name__ for x in model_list]

    for model in model_list:
        all_fields = model._meta.get_fields()
        columns = [x.name for x in all_fields]

        if not os.path.exists('csvs'):
            os.makedirs('csvs')

        with open(f'csvs/{model.__name__}.csv', mode='w') as csv_file:
            writer = csv.writer(csv_file, delimiter=',', quotechar='"', quoting=csv.QUOTE_MINIMAL)

            # Writing column names
            writer.writerow(columns)

            objects = model.objects.all()

            for obj in objects:
                row = [str(getattr(obj, field_name,"NA")) for field_name in columns]
                writer.writerow(row)

if __name__ == '__main__':
    os.environ.setdefault('DJANGO_SETTINGS_MODULE', '%s.settings' % PROJECT_NAME)
    import django
    django.setup()
    main()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Based on your preference you can store the database in any form (Eg. sqlite,xls,csv,json etc). In the above script i have created a “csv” folder and inside it contains individual csv file for each model. Each csv will contain data of one model and will have column name as field names and each row will be single entry of that specific model.&lt;/p&gt;

&lt;p&gt;Yayy! That’s all you need to do to write standalone script in django to take backup of database.&lt;/p&gt;

</description>
      <category>django</category>
      <category>databasebackup</category>
      <category>script</category>
      <category>djangostandalone</category>
    </item>
    <item>
      <title>Blockchain security analysis layer by layer</title>
      <author>Aits</author>
      <pubDate>Thu, 06 May 2021 06:00:22 +0000</pubDate>
      <link>https://dev.to/tamjid0x01/blockchain-security-analysis-layer-by-layer-4c99</link>
      <guid>https://dev.to/tamjid0x01/blockchain-security-analysis-layer-by-layer-4c99</guid>
      <description>&lt;p&gt;Hello Everyone, I'm Web application security researcher and full time BugBounty hunter. But, now I'm curious about Blockchain security. So, Now I'm starting deep understanding how DeFi, Smart Contract, Blockchain etc works. If you interested get up-to-date &lt;a href="https://portswigger.net/daily-swig/cryptocurrency"&gt;Latest cryptocurrency security news&lt;/a&gt; , worlds largest Crypto Bug Bounty platform is &lt;a href="https://immunefi.com"&gt;Immunefi&lt;/a&gt; and See there &lt;a href="https://immunefi.com/explore/"&gt;Public BugBounty program &lt;/a&gt; Bounty available more then $20M. So, let's start hacking.      &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#abstract"&gt;
  &lt;/a&gt;
  Abstract
&lt;/h3&gt;

&lt;p&gt;The current blockchain structure can be roughly divided into application layer, smart contract layer, incentive layer, consensus layer, network layer and data layer from top to bottom. The security analysis of each layer will be performed separately below. This is not technical writing. I'm covering some basic think.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#application-layer"&gt;
  &lt;/a&gt;
  Application Layer
&lt;/h3&gt;

&lt;p&gt;Application layer security mainly covers the security issues of centralized nodes such as the exchanges which involve digital currency transactions and manage large amounts of funds. These nodes are at any point of failure of the entire blockchain network, and the attack yield is high and the cost is low, which is the preferred target of the attackers .&lt;/p&gt;

&lt;p&gt;Unauthorized Access to An Exchange Server. Exchanges often deposit large amounts of money and are easily targeted. Once the exchange server authority is obtained and the key information is modified, the attacker can steal the funds key, tamper with the transaction amount or leak sensitive information, causing economic and reputational devastating blows to the exchange.&lt;/p&gt;

&lt;p&gt;For example, the Youbit (formerly Yapizon) stolen event. On April 22, 2017, 4 hot wallets of Youbit were stolen, lost 3,816 BTC, with a total value of about $5,300,000, accounting for 36% of the exchange’s funds. On December 19, 2017, Youbit announced that it was attacked again, lost approximately 17% of its assets, and at the same time announced the exchange closed and entered the bankruptcy process.&lt;/p&gt;

&lt;p&gt;Exchange DDoS. Due to the high demand for network bandwidth in the trading platform, once a DDoS attack occurs, it is very serious for the platform and the entire industry. If the trading platform is attacked by DDoS, not only will itself suffer losses, but the transaction volume of the blockchain currency will also be greatly reduced, which will indirectly affect the rise and fall of the blockchain currency .&lt;/p&gt;

&lt;p&gt;According to the report of global DDoS threat landscape Q3 2017 by Incapsula [16], although its industry scale is still relatively small, Bitcoin has become one of the top 10 industries which are most vulnerable to DDoS attacks. This reflects to a certain extent that the entire blockchain industry is facing serious DDoS security challenges. For example, from November 2017 to December 2017 Bitfinex announced that it had suffered the DDoS attack for three times, and all the services of the exchange had been shut down for a long time [17]. The attacker creates pressure on the server by creating a large number of empty accounts, causing related services and APIs to go offline for hours.&lt;/p&gt;

&lt;p&gt;Employees Host Security. On June 20, 2011, the large Bitcoin exchange Mt.Gox was attacked. Its server was not compromised, but the attacker gained access to a computer used by an auditor of Mt.Gox, and got a read-only database file, resulting in about 60000 users’ username, email address, and encrypted password [18] to be leaked. After obtaining this sensitive information, the attacker cracked the password of one of the large accounts, issued a large sales message through this account, and sold 400,000 BTC [19] under it, trying to transfer funds through the legal transaction process. Fortunately, because the exchange protection measures are effective, it limits the maximum value of $1,000 BTC per account per day, so it does not cause much damage to this account. However, a large number of BTC sale requests caused the exchange BTC price to drop to 1 cent, resulting in an impact of approximately $8,750,000 in assets.&lt;/p&gt;

&lt;p&gt;Malicious Program Infection. Once a malicious program is implanted into the exchange system, it is likely to cause a large amount of sensitive information leakage, including key and wallet files. The key is everything, and the leakage of sensitive information often means losing control of all assets. The exchange Mt.Gox was attacked in 2014. The key file of Mt.Gox was stored locally in clear text, and the key file wallet.dat leaked due to Trojan infection, resulting in a large amount of asset loss and eventually, Mt.Gox went bankruptcy [20]. It is worth noting that in this attack, the attacker used two years to gradually transfer assets in order to avoid the community recovering the loss through hard forks. The emergence of this type of APT attack means that monitoring of the threat of attack in the blockchain industry cannot rely solely on short-term anomaly transaction monitoring.&lt;/p&gt;

&lt;p&gt;Initial Coin Offering. Tampering Attack: When ICO raises funds, it usually hangs the receiving address on the project official website, and then the investor will transfer money to this address for the corresponding token. Hackers can tamper with the collection address through attacks such as domain hijacking, web vulnerabilities, or social engineering.&lt;/p&gt;

&lt;p&gt;Phishing attack: The attacker uses social engineering and other means to impersonate the official, allowing the user to transfer money to the attacker’s wallet address. For example, an attacker can use an approximate domain name and highly phishing website to defraud investors or use email to disseminate fake information, such as ICO project’s payment address change notice, etc. or disseminate phishing information on social software and media to defraud investors.&lt;/p&gt;

&lt;p&gt;Mining Machine System. The cyber security awareness of mining device manufacturers is uneven, and because of its closed source characteristics, the security of its code cannot be checked by the public. Once a cyber security issue occurs, the result is fatal. And whether the device manufacturer will intersperse the back door for remote control of the device, or steal the mining output, is still remain to be discussed.&lt;/p&gt;

&lt;p&gt;0day: Most mining system is a general-purpose system. Once a mining system is found to have a 0 day vulnerability, the security barriers of the system will be broken in an instant. The attacker can use the vulnerability to obtain the modify permission and then tamper with reward receiving address and then hijack the user’s reward.&lt;/p&gt;

&lt;p&gt;Weak password attack: At present, the mining system in the market is based on the B/S architecture. Access to the mining system is usually through the web or other means. If the weak password is used, it will be vulnerable to intrusion.&lt;/p&gt;

&lt;p&gt;Mining Pool. By June 2018, the top five Bitcoin mining pools in the world are BTC.com, AntPool, SlushPool, BTC.TOP and F2Pool. About 60% of the world’s hash power is in the hands of Chinese miners [21].&lt;/p&gt;

&lt;p&gt;Hash power forgery attack: The mining pool will test the actual hash power of the current miner through a certain proof of work test algorithm. The hacker can falsely report the hash power by finding the vulnerability of the algorithm, and then obtain the excessive reward that doesn’t match the actual contribution.&lt;/p&gt;

&lt;p&gt;Selfish mining attack: A malicious mining pool decides not to release the block it finds, and thus creates a fork. When the private fork is longer than the public chain, the malicious mining pool issues the private fork. Because the fork is the longest chain in the current network, it will be recognized as a legal chain by honest miners, so the original public chain and the honest data it contains will be discarded. The results of the study indicate that the malicious mining pools will yield more benefits normally by using selfish mining strategies. But such attacks usually require huge hash power as a support.&lt;/p&gt;

&lt;p&gt;Centralization: The existence of the mining pool violates the principle of decentralization of the blockchain. Theoretically, if it can control at least 51% of the hash power of entire network, it will be able to monopolize the mining right, billing right and distribution right, which will affect the ecological security of the blockchain, so that the credit system of the cryptocurrency will cease to exist and the cryptocurrency system will be completely destroyed.&lt;/p&gt;

&lt;p&gt;Possible Methods. It is impossible for any one party to respond to various attacks at the application layer. The application developers should ensure that the softwares don’t contain discovered vulnerabilities and are thoroughly tested. As the central node, such as a trading platform, real-time monitoring of system health and some protected methods (e.g. data encryption storage, etc.) are required to ensure that the system is not subject to internal and external attacks. All employees should be systematically trained before they are employed to avoid becoming an attack portal. As a user, you should be able to keep your own account and key properly, distinguish between true and false information and be cautious in trading to avoid phishing attacks.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#smart-contract-layer"&gt;
  &lt;/a&gt;
  Smart Contract Layer
&lt;/h3&gt;

&lt;p&gt;A smart contract is more than just a computer program that can be executed automatically. It is a system participant. It responds to the received message, it can receive and store value, and it can send out information and value [22]. For the security risks of smart contracts, the following attacks are summarized.&lt;br&gt;
Reentrancy Attack. The essence of reentrancy attack is to hijack the contract control flow and destroy the atomicity of the transaction, which can be understood as a logical race condition problem. For example, The DAO was attacked, and the attacker used the vulnerability in the contract to launch a reentrancy attack and gained 60 million dollars. In order to recover this part of the funds, the Ethereum community decided to perform a hard fork, roll back all the transaction records since the start of the attack and fix the contract vulnerabilities in the new branch. The vulnerability is described below. Here is a simplified version of The DAO contract:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;contract SimpleDAO {
mapping (address =&amp;gt; uint) public credit; 
function donate(address to){credit [to]+= msg.value;
  }
 function queryCredit(address to) returns (uint){
   return credit [];
}
function withdraw(uint amount) {
    if (credit [msg.sender]&amp;gt;= amount){
    credit[ msg.sender]-= amount ; 
   }
  }
}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Participants call the donate function to donate their own Ether to a contract address, the donation information is stored in the credit array, and the recipient contract calls The DAO’s withdraw function to receive funds. Before actually sending the transaction, The DAO checks if there is enough donation in the credit array, and after the transaction is over, the transaction amount is reduced from credit.&lt;br&gt;
The attacker first constructs a malicious contract Mallory, as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;contract Mollory {
SimpleDao Public dao = SimpleDAO(0x354);
address owner;
function Mallory(){owner = msg.sender;
 }
function getJackpot(){ owner.send(this.balance); 
 }
}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After Mallory deployed, the attacker calls The DAO’s donate function to donate a bit of Ether to the Mallory contract. After triggering Mallory’s fallback function (unnamed function), there are many trigger methods, such as transfer money to Mallory. The fallback function will call The DAO’s withdraw function and extract all the funds that belong to it. It seems to be no problem so far. However, after msg.sender.call.value(amount)() in the withdraw is executed, Mallory’s fallback function is automatically called after the transfer is completed due to the transfer operation feature, so the withdraw function is called again. Because credit is not updated at this time, so you can still withdraw money normally, then you fall into a recursive loop, and each time you can extract a part of Ether in the DAO to the Mallory contract.&lt;/p&gt;

&lt;p&gt;This loop will continue until one of three conditions occurs, gas is exhausted, the call stack is full, and The DAO balance is insufficient. An exception is thrown when one of the above conditions occurs. Due to the characteristics of the Solidity exception handling, all previous transactions are valid. Theoretically, repeating this operation can extract all the Ether of The DAO’s to Mallory.&lt;/p&gt;

&lt;p&gt;Unauthorized Access Attack. Most of this attack due to failure to make explicit function visibility, or fails to do sufficient permission checks, which can cause an attacker to access or modify a function or variable that should not be accessed.&lt;/p&gt;

&lt;p&gt;For example, a multi-signature contract vulnerability in the Parity wallet was exploited by an attacker to steal a total of 153,037 Ether in three times. Then Parity official blog and Twitter released security alert [23] and updated the new version of the library contract. The bug comes from the Multi-Sig library file enhanced-wallet.sol written by Parity’s founder Gavin Wood. The attacker exploited the bug to reset the wallet owner, took over the wallet and stolen all the funds. This is essentially a breach of authority in the contract.&lt;/p&gt;

&lt;p&gt;Solidity Development Security. Possible bugs when writing smart contracts include:&lt;/p&gt;

&lt;p&gt;Race condition: The biggest risk of calling an external function is that the calling behavior may cause the control flow to be hijacked and accidentally modify the contract data. This type of bug has many specific forms, such as reentrant and cross-function race conditions.&lt;/p&gt;

&lt;p&gt;Transaction-Ordering Dependence: A attacker can construct his own transaction based on the order information contained in the pending transactions, and try to get his transaction to be written into the block before others.&lt;/p&gt;

&lt;p&gt;Integer overflow and underflow: When programming, you should think about whether integer overflows can occur, how the state of uint variables will be transferred, and who has the authority to modify those variables.&lt;/p&gt;

&lt;p&gt;Denial of Service Attack Based on Exception Rollback: For example, a crowdfunding contract gives a refund to a participant. The contract may need to traverse an array to process a refund for a group of users. The simple idea is that every refund is successful, otherwise the program should be rolled back. The consequence of this practice is that one of the malicious users forced the refund to fail and all users were unable to receive the refund. It is recommended to use a pull payment mechanism, which separates the refund operation into an independent function, which is called by the refund recipient to pull the refund.&lt;/p&gt;

&lt;p&gt;Possible Methods. Once a smart contract is deployed in a distributed, decentralized network, it is difficult to change. It prevents data manipulation and establishes a trust mechanism based on the encryption algorithm. On the other hand, when the blockchain is facing a security attack, it lacks an effective correction mechanism and is difficult to reverse. Therefore, before the development of smart contracts, it is necessary to guard against the vulnerabilities that have already occurred. It should conduct sufficient security tests before issued. Professionals perform code optimizations in a timely manner, conduct regular code audits, and monitor abnormal behavior of deployed contracts to reduce losses. Learn more about &lt;a href="https://immunefi.com/learn/"&gt;Immunefi learn&lt;/a&gt;. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#incentive-layer"&gt;
  &lt;/a&gt;
  Incentive Layer
&lt;/h3&gt;

&lt;p&gt;The purpose of the incentive layer is to provide certain incentives to encourage nodes to participate in the security verification of the blockchain. The security of the blockchain depends on the participation of many nodes. For example, the security of the Bitcoin blockchain is based on the great hash power that many nodes participate in the proof of work which makes it impossible for an attacker to provide a higher amount of computation. The verification process of a node usually consumes computing resources and electric power. In order to encourage node participation, the blockchain usually rewards participants in the form of virtual currency. Bitcoin, Litecoin, and Ether are all products of this mechanism.&lt;/p&gt;

&lt;p&gt;Blockchain projects need to adapt to the market to automatically adjust the rewards, rather than simply reducing them. In the blockchain project reward mechanism, when the node’s working cost is close to or greater than the income, they often choose not to work for this blockchain, which can easily lead to centralization problems.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#network-layer"&gt;
  &lt;/a&gt;
  Network Layer
&lt;/h3&gt;

&lt;p&gt;The information transmission of the blockchain mainly depends on the peer-to-peer network. The P2P network relies on nearby nodes for information transmission in which it must expose each other’s IP. If there is an attacker in the network, it is very easy to bring security threats to other nodes. The node of the public blockchain network may be an ordinary home PC, a cloud server, etc., and its security must be uneven. There must be a node with poor security, and attacking it will directly threaten the other nodes. The main attacks are as follows.&lt;/p&gt;

&lt;p&gt;Eclipse attack: The node is kept in an isolated network by hoarding and occupying the victim’s slots. This type of attack is designed to block the latest blockchain information from entering the eclipse node, thereby isolating the nodes [24].&lt;/p&gt;

&lt;p&gt;BGP hijacking: At present, the security researchers have proved the conceptual feasibility of the attack. From November 5, 2015, to November 15, 2016, through the analysis and statistics of the node network, most of the bitcoin nodes are currently hosted in a few specific Internet Service Providers (ISP), while 60% of Bitcoin connections are in these ISPs. Therefore, these ISPs can see 60% of Bitcoin traffic, and can also control the traffic of the current Bitcoin network. The researchers verified that at least two attacks are conceptual feasible through the hijacking scenario, and given validation code [25].&lt;/p&gt;

&lt;p&gt;The security defense for the network layer can be mainly improved from two aspects: P2P network security and network authentication mechanism. In the transmission process of the network, a reliable encryption algorithm is used for transmission to prevent malicious attackers from stealing or hijacking the node network. Strengthen the validity, rationality and security of data transmission in network. Client nodes should do the necessary verification for important operations and information.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#data-layer"&gt;
  &lt;/a&gt;
  Data Layer
&lt;/h3&gt;

&lt;p&gt;Block Data. Malicious information attack: Write malicious information, such as virus signatures, politically sensitive topics, etc. in the blockchain. With the data undelete feature of the blockchain, information is difficult to delete after it is written in the blockchain. If malicious information appears in the blockchain, it will be subject to many problems.&lt;/p&gt;

&lt;p&gt;A team of researchers at the RWTH Aachen University and the Goethe University Frankfurt in Germany pointed out that among the 1,600 documents added to the Bitcoin blockchain, 59 files contained links to illegal children’s pictures, politically sensitive content or privacy violations [26]. Currently, only a few Bitcoin blockchain transactions contain other data. In the Bitcoin blockchain, about 1.4% of the 251 million transactions contain other data, that is, only a few of these transactions contain illegal or undesirable content [26]. Still, even such small amounts of illegal or inappropriate content can put participants at risk.&lt;/p&gt;

&lt;p&gt;Signature and Encryption Method. Cryptography is the key to ensure the security and tamper resistance of blockchain, and blockchain technology relies heavily on the research results of cryptography, which provides a key guarantee for the information integrity, authentication and non-repudiation of the blockchain.&lt;/p&gt;

&lt;p&gt;As a mainstay of the blockchain, the encryption technology is particularly important. For example, the MD5 and SHA1 hash algorithms popular in previous years but have been proved to be insufficiently secure. At present, the SHA256 algorithm is widely used in bitcoin. So far, this algorithm is still safe, but with the development of new technology and research, it may not be safe in the future. Therefore, when designing blockchain applications, it is important to carefully choose the encryption method. Current mainstream signature methods include aggregate signature, group signature, ring signature, blind signature, proxy signature, interactive incontestable signature (IIS), blinded verifiable encrypted signature (BVES), and so on.&lt;/p&gt;

&lt;p&gt;Attacks on cryptographic algorithms, especially the hash functions, include brute-force attack, collision attack, length expansion attack, back door attack and quantum attack.&lt;/p&gt;

&lt;p&gt;Thanks &lt;br&gt;
&lt;a href="https://twitter.com/tamjid0x01"&gt;Tamjidur Rohamn&lt;/a&gt;&lt;/p&gt;

</description>
      <category>blockchain</category>
      <category>security</category>
      <category>bugbounty</category>
    </item>
    <item>
      <title>Basic Hooks in React</title>
      <author>Mursal Furqan</author>
      <pubDate>Thu, 06 May 2021 05:39:03 +0000</pubDate>
      <link>https://dev.to/mursalfk/basic-hooks-in-react-4ai3</link>
      <guid>https://dev.to/mursalfk/basic-hooks-in-react-4ai3</guid>
      <description>&lt;p&gt;After an awesome response to my previous article &lt;a href="https://dev.to/mursalfk/hooks-in-react-46d1"&gt;Hooks in React&lt;/a&gt;, as promised I am back with the second article in my &lt;a href="https://dev.to/mursalfk/series/12599"&gt;React Series&lt;/a&gt; of articles. You can check it out at &lt;a href="https://dev.to/mursalfk/hooks-in-react-46d1"&gt;here&lt;/a&gt;. In the previous article, we discussed what are hooks, and how they work. Whereas, this article would focus on some live examples and discussions about some basic hooks of React.&lt;/p&gt;

&lt;p&gt;Since their introduction in React, Hooks have served some great purposes. First, let's discuss what are the advantages of hooks.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#advantages-of-hooks-in-react"&gt;
  &lt;/a&gt;
  Advantages of Hooks in React
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Easier to test and work with&lt;/li&gt;
&lt;li&gt;They avoid juggling HOCs, render props, children as functions, and classes&lt;/li&gt;
&lt;li&gt;Code is more readable with Hooks and also has Separate (and isolated) concerns&lt;/li&gt;
&lt;li&gt;Better code modification - Since Hooks are functions, the modification of code is better as modification of functions in JavaScripts is much better than classes&lt;/li&gt;
&lt;li&gt;Hooks also avoid duplicate logic between lifecycle method and components&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The above-shared advantages are just some handpicked out of countless of them. Now let's jump on the main part of this discussion, i.e. Basic Hooks in React.&lt;/p&gt;

&lt;p&gt;Generally, Hooks in React can be categorized in several built-in Hooks, including 03 Basic and 07 Additional Hooks. Here, we would be discussing the basic Hooks of React.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#basic-hooks-in-react"&gt;
  &lt;/a&gt;
  Basic Hooks in React
&lt;/h1&gt;

&lt;p&gt;There are three (03) basic Hooks to be used while working in React. They are: &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;useState&lt;/li&gt;
&lt;li&gt;useEffect&lt;/li&gt;
&lt;li&gt;useContext&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#usestate"&gt;
  &lt;/a&gt;
  useState()
&lt;/h2&gt;

&lt;p&gt;useState Hooks, or Hooks State is the new way of declaring a state in React app. Hook uses useState() functional component for setting and retrieving state. During the initial render, the returned state (state) is the same as the value passed as the first argument (initialState). It can be declared as&lt;br&gt;
&lt;code&gt;const [state, initialState] = useState(initialState);&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The setState function is used to update the state. It accepts a new state value and enqueues a re-render of the component. User/Developer can use setState function as:&lt;br&gt;
&lt;code&gt;setState(newState);&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#prerequisite"&gt;
  &lt;/a&gt;
  Prerequisite
&lt;/h3&gt;

&lt;p&gt;You MUST import useState from React before using the setState function. You can do so by:&lt;br&gt;
&lt;code&gt;import React, { useState } from 'react';&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Let's understand Hook State with the following example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import React, { useState } from 'react';  

function CountApp() {  
  // Declare a new state variable, which we'll call "count"  
  const [count, setCount] = useState(0);  

  return (  
    &amp;lt;div&amp;gt;  
      &amp;lt;p&amp;gt;You clicked {count} times&amp;lt;/p&amp;gt;  
      &amp;lt;button onClick={() =&amp;gt; setCount(count + 1)}&amp;gt;  
        Click me  
      &amp;lt;/button&amp;gt;  
    &amp;lt;/div&amp;gt;  
  );  
}  
export default CountApp;  
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6J3apo4T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/op3aeor2acbkrap7qmee.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6J3apo4T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/op3aeor2acbkrap7qmee.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
In the above example, useState is the Hook which needs to call inside a function component to add some local state to it. The useState returns a pair where the first element is the current state value/initial value, and the second one is a function that allows us to update it. Then, we will call this function from an event handler or somewhere else. The useState is similar to this.setState in class. The equivalent code without Hooks looks like as below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import React, { useState } from 'react';  

class CountApp extends React.Component {  
  constructor(props) {  
    super(props);  
    this.state = {  
      count: 0  
    };  
  }  
  render() {  
    return (  
      &amp;lt;div&amp;gt;  
        &amp;lt;p&amp;gt;&amp;lt;b&amp;gt;You clicked {this.state.count} times&amp;lt;/b&amp;gt;&amp;lt;/p&amp;gt;  
        &amp;lt;button onClick={() =&amp;gt; this.setState({ count: this.state.count + 1 })}&amp;gt;  
          Click me  
        &amp;lt;/button&amp;gt;  
      &amp;lt;/div&amp;gt;  
    );  
  }  
}  
export default CountApp;  
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#useeffect"&gt;
  &lt;/a&gt;
  useEffect()
&lt;/h2&gt;

&lt;p&gt;After State Hooks, the most basic hook in Reac is the Effect Hook. It allows us to perform side effects (in action) in the functional components. It does not use components lifecycle methods that are available in class components. Before the introduction of Hooks, it was similar to using &lt;code&gt;componentDidMount(), componentDidUpdate(), componentWillUnmount()&lt;/code&gt; lifecycle methods. useEffects() allows web developers to make their web application perform some actions, seamlessly. Such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Updating the DOM&lt;/li&gt;
&lt;li&gt;Fetching and consuming data from a server API&lt;/li&gt;
&lt;li&gt;Setting up a subscription, etc.
In other words, useEffect accepts a function that is used to cause an effect in the function.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;useEffect(
    () =&amp;gt; {
        const subscription = props.source.subscribe();
        return () =&amp;gt; {
            subscription.unsubscribe();
        };
    },
    [props.source],
);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Note: The second parameter can be passed as an empty array if you want the function to run only once&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Now, let's see an elongated and useful block of code to further understand the usage of useEffect(). But before that, just like useState, we have to import useEffect from React. For example:&lt;br&gt;
&lt;code&gt;import React, { useState, useEffect } from 'react';&lt;/code&gt;&lt;br&gt;
Now, let's understand Hook Effect with the following example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import React, { useState, useEffect } from 'react';  

function CounterExample() {  
  const [count, setCount] = useState(0);  

  // Similar to componentDidMount and componentDidUpdate:  
  useEffect(() =&amp;gt; {  
    // Update the document title using the browser API  
    document.title = `You clicked ${count} times`;  
  });  

  return (  
    &amp;lt;div&amp;gt;  
      &amp;lt;p&amp;gt;You clicked {count} times&amp;lt;/p&amp;gt;  
      &amp;lt;button onClick={() =&amp;gt; setCount(count + 1)}&amp;gt;  
        Click me  
      &amp;lt;/button&amp;gt;  
    &amp;lt;/div&amp;gt;  
  );  
}  
export default CounterExample;  
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--L73WhiRi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jcb3szdttw54tdrw3kq2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L73WhiRi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jcb3szdttw54tdrw3kq2.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
The above-coded example is carried forward version of the previous example of useState() with a new feature, which sets the document title to a custom message, including the number of clicks.&lt;br&gt;
There are two types of effect hooks in React, namely:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Effects without Cleanup&lt;/li&gt;
&lt;li&gt;Effects with Cleanup
We will discuss these in our next article.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;
  &lt;a href="#usecontext"&gt;
  &lt;/a&gt;
  useContext()
&lt;/h2&gt;

&lt;p&gt;useContext accepts a context object i.e. the value returned from React.createContext and returns the current context value for that context. A component calling useContext will always re-render when the context value changes. &lt;/p&gt;

&lt;p&gt;In other words, useContext() hook is used to create common data that can be accessed throughout the component hierarchy without passing the props down manually to each level. Context defined will be available to all the child components without involving “props”.&lt;/p&gt;

&lt;p&gt;Before jumping over the example for useContext, let's take a look at an example code, without using useContext, i.e. with the Consumer component (the hard way):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import React from "react";
import ReactDOM from "react-dom";

// Create a Context
const NumberContext = React.createContext();
// It returns an object with 2 values:
// { Provider, Consumer }

function App() {
  // Use the Provider to make a value available to all
  // children and grandchildren
  return (
    &amp;lt;NumberContext.Provider value={42}&amp;gt;
      &amp;lt;div&amp;gt;
        &amp;lt;Display /&amp;gt;
      &amp;lt;/div&amp;gt;
    &amp;lt;/NumberContext.Provider&amp;gt;
  );
}

function Display() {
  // Use the Consumer to grab the value from context
  // Notice this component didn't get any props!
  return (
    &amp;lt;NumberContext.Consumer&amp;gt;
      {value =&amp;gt; &amp;lt;div&amp;gt;The answer is {value}.&amp;lt;/div&amp;gt;}
    &amp;lt;/NumberContext.Consumer&amp;gt;
  );
}

ReactDOM.render(&amp;lt;App /&amp;gt;, document.querySelector("#root"));
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#lets-understand-what-just-happened"&gt;
  &lt;/a&gt;
  Let's understand what just happened.
&lt;/h3&gt;

&lt;p&gt;First, we create a new context, which we store in NumberContext. This is an object with 2 properties: Provider and Consumer. They’re a matched pair, and they’re born knowing how to communicate with each other (but not with other contexts).&lt;/p&gt;

&lt;p&gt;Then, we render the NumberContext.Provider with some contents, and pass a value prop to it. It will make this value available to all of its descendants, and their descendants. The whole subtree will be able to use the Consumer (or useContext) to read out the value.&lt;/p&gt;

&lt;p&gt;Finally, we read the value with the Consumer inside the Display component.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#usecontext-code-example"&gt;
  &lt;/a&gt;
  useContext() code example
&lt;/h3&gt;

&lt;p&gt;useContext() let's you "USE" context without a Consumer. Let’s rewrite the Display component with the useContext hook:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// import useContext (or we could write React.useContext)
import React, { useContext } from 'react';

// ...

function Display() {
  const value = useContext(NumberContext);
  return &amp;lt;div&amp;gt;The answer is {value}.&amp;lt;/div&amp;gt;;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Call useContext(), pass in the context object you got from React.createContext, and out pops the value. Wasn't it easy? But the only thing to watch out for is that you have to pass the whole context object to useContext – not just the Consumer! (this is why I didn’t destructure the Context object right away) The best thing about React is, it will warn you if you forget.&lt;/p&gt;

&lt;p&gt;So that was all for today's article. In my previous article, I forgot to mention my mentors, who taught me React. They are &lt;a href="https://www.linkedin.com/in/tahir-masood-50123622/"&gt;Tahir Masood&lt;/a&gt; &amp;amp; &lt;a href="https://www.linkedin.com/in/zohaad-afzal-bb7662106/"&gt;Zohaad Afzal&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In the next article, we would be covering the types of useEffect() and would try to further dive into the awesome and super cool world of React. &lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Hashnode API - How To Display Your Blog Articles On Your Portfolio Page</title>
      <author>The Code Lounge</author>
      <pubDate>Thu, 06 May 2021 05:33:22 +0000</pubDate>
      <link>https://dev.to/codeloungedev/hashnode-api-how-to-display-your-blog-articles-on-your-portfolio-page-2o6k</link>
      <guid>https://dev.to/codeloungedev/hashnode-api-how-to-display-your-blog-articles-on-your-portfolio-page-2o6k</guid>
      <description>&lt;p&gt;&lt;a href="https://codelounge.dev"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oZGLRauQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1617198357271/uoNdlXnwM.png" alt="cover (1).png"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Hashnode has an API that you can use however you please. Using the API, you can retrieve, create, edit and delete articles. Additionally, you can manipulate replies and reactions.&lt;/p&gt;

&lt;p&gt;As a result, you can use the API to display your blog articles in other places like your personal portfolio, for example.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Pre-requisites
&lt;/h1&gt;

&lt;p&gt;There is some stuff you should be familiar with before you continue. The article shows how to use the Hashnode API, but it does not teach you about the underlying technologies.&lt;/p&gt;

&lt;p&gt;To follow the tutorial and implement the application, you should have basic knowledge about:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;JavaScript&lt;/li&gt;
&lt;li&gt;GraphQL&lt;/li&gt;
&lt;li&gt;HTTP requests&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Besides that, you should have a &lt;a href="https://hashnode.com"&gt;Hashnode&lt;/a&gt; account. Without further ado, let's jump straight in!&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#get-started-with-the-hashnode-api"&gt;
  &lt;/a&gt;
  Get started with the Hashnode API
&lt;/h1&gt;

&lt;p&gt;You can visit the &lt;a href="https://api.hashnode.com/"&gt;API Playground&lt;/a&gt; and see the docs and schema available. If you are not familiar with GraphQL, the &lt;code&gt;docs&lt;/code&gt; specifies the queries and mutations you can perform on the data. On the other hand, the &lt;code&gt;schema&lt;/code&gt; is a description of the data. That is, it specifies what fields you can select, what object they return and so on.&lt;/p&gt;

&lt;p&gt;Before moving further, I advise you to give it a go and play a bit with it.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sF9Qi3mA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618393360169/K7P9DJR0k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sF9Qi3mA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618393360169/K7P9DJR0k.png" alt="Hashnode API GraphQL Playground"&gt;&lt;/a&gt;&lt;br&gt;
Figure 1&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In figure 1, above, you can see a simple query pulling all the featured stories from the first page. The query is as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
  storiesFeed(type: FEATURED, page: 0){
    title
    brief
    slug
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;However, you can pull the articles of a specific user as well. Let's take my user and blog as an example. You can fetch all my articles from the first page with the following query:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
  user(username: "catalinpit") {
    publication {
      posts(page: 0) {
        title
        brief
        slug
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Even though in both queries I selected only the &lt;code&gt;title&lt;/code&gt;, &lt;code&gt;brief&lt;/code&gt; and &lt;code&gt;slug&lt;/code&gt; you can select more fields. As mentioned previously, &lt;strong&gt;check the docs and schema&lt;/strong&gt; to see what queries/mutation you can perform and what are the available fields.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#authentication-hashnode-personal-access-token"&gt;
  &lt;/a&gt;
  Authentication - Hashnode personal access token
&lt;/h1&gt;

&lt;p&gt;Some queries and mutations require authentication, which is based on personal access tokens. You can get your PAT (personal access token) from the &lt;a href="https://hashnode.com/settings/developer"&gt;developer settings&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TcOPkcY4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618394844659/wgP4Iykp8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TcOPkcY4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618394844659/wgP4Iykp8.png" alt="Hashnode Developer Settings - Personal Access Token"&gt;&lt;/a&gt;&lt;br&gt;
Figure 2&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You can get a new PAT by clicking on the button saying &lt;code&gt;Generate New Token&lt;/code&gt;. After you get the token, you can use it with the &lt;code&gt;Authorization&lt;/code&gt; HTTP header where the token is the value.&lt;/p&gt;

&lt;p&gt;It's important to note that you can use the Hashnode API without the token. However, there are some queries and mutation where you need the token. With that being said, let's move onto the next step.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#fetch-your-articles"&gt;
  &lt;/a&gt;
  Fetch your articles
&lt;/h1&gt;

&lt;p&gt;Let's create a Vanilla JavaScript application that you will use to fetch your Hashnode articles. The first step is to create two files. Create a file called &lt;code&gt;index.html&lt;/code&gt; and another one called &lt;code&gt;app.js&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;After creating the files, open the HTML file, &lt;code&gt;index.html&lt;/code&gt;, and write the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"UTF-8"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;http-equiv=&lt;/span&gt;&lt;span class="s"&gt;"X-UA-Compatible"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"IE=edge"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width, initial-scale=1.0"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Hashnode API Example&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text/javascript"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"articles"&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"app.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The HTML file is not too complicated. You set the title of the webpage and you link the JavaScript file. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#fetch-function"&gt;
  &lt;/a&gt;
  Fetch function
&lt;/h3&gt;

&lt;p&gt;You will do all the work in the JavaScript file. Open the &lt;code&gt;app.js&lt;/code&gt; file and write the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;gql&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;variables&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://api.hashnode.com/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;method&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;POST&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Content-Type&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;application/json&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="na"&gt;body&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
            &lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nx"&gt;variables&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You use the above method - &lt;code&gt;gql&lt;/code&gt; - to fetch data from the Hashnode API. &lt;/p&gt;

&lt;p&gt;As you can see, it uses the fetch method to make POST requests to &lt;code&gt;https://api.hashnode.com/&lt;/code&gt;. In the POST requests, you also pass the query and additional variables. An example of an additional variable might be the page number.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#graphql-query"&gt;
  &lt;/a&gt;
  GraphQL query
&lt;/h3&gt;

&lt;p&gt;You can use the GraphQL queries straight in the &lt;code&gt;gql&lt;/code&gt; function from above. However, it can get messy if you write complex queries. Additionally, you cannot reuse the function if you use the queries straight in the &lt;code&gt;gql&lt;/code&gt; function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;GET_USER_ARTICLES&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`
    query GetUserArticles($page: Int!) {
        user(username: "&amp;lt;your_Hashnode_username&amp;gt;") {
            publication {
                posts(page: $page) {
                    title
                    brief
                    slug
                }
            }
        }
    }
`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Thus, you can store your GraphQL queries in a constant, as shown in the code snippet above. You store each query in its constant. Also, the query takes a &lt;code&gt;page&lt;/code&gt; variable so you can get the articles from a specific page.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#fetch-data"&gt;
  &lt;/a&gt;
  Fetch data
&lt;/h3&gt;

&lt;p&gt;In this step, you are fetching your articles from the first page. You pass two arguments when you call the &lt;code&gt;gql&lt;/code&gt; function:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;GET_USER_ARTICLES&lt;/strong&gt; =&amp;gt; This is the GraphQL you wrote previously. Its purpose is to specify what the API should return.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;{ page: 0 }&lt;/strong&gt; =&amp;gt; The page you want to fetch the articles from.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;gql&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;GET_USER_ARTICLES&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;page&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;articles&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;publication&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;posts&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;container&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;div&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="nx"&gt;articles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;article&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;h2&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerText&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;article&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

            &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;brief&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;p&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nx"&gt;brief&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerText&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;article&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;brief&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

            &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;link&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;a&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nx"&gt;link&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerText&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Read more...&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nx"&gt;link&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;href&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`https://catalins.tech/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;article&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slug&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

            &lt;span class="nx"&gt;container&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nx"&gt;container&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;brief&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nx"&gt;container&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;link&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;

        &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;.app&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;container&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What about &lt;code&gt;result.data.user.publication.posts&lt;/code&gt; from the third line? Let's look at figure 1 below.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lZTpI65Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620200087165/B-lpvyeSj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lZTpI65Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620200087165/B-lpvyeSj.png" alt="API response example"&gt;&lt;/a&gt;&lt;br&gt;
Figure 1&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you look at figure 1, you can see that the &lt;code&gt;gql&lt;/code&gt; function returns an object called "data". The "data" object returns a "user" object. The "user" returns the "publication" object. And lastly, the "publication" returns the "posts" array. &lt;strong&gt;Thus&lt;/strong&gt;, with the line &lt;code&gt;result.data.user.publication.posts&lt;/code&gt; you access only your blog articles. &lt;/p&gt;

&lt;p&gt;After that, you store the array in the constant called &lt;code&gt;articles&lt;/code&gt;. Once you have the array of posts, you use the &lt;code&gt;forEach&lt;/code&gt; method to loop over each article from the array. For each article, you create a heading, a paragraph and a link. Then you append the elements to the &lt;code&gt;div&lt;/code&gt; container.&lt;/p&gt;

&lt;p&gt;The next step is to display the data on your page.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#display-data"&gt;
  &lt;/a&gt;
  Display data
&lt;/h3&gt;

&lt;p&gt;At the bottom of the &lt;code&gt;app.js&lt;/code&gt; file, write the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;document.getElementById('articles').parentNode.innerHTML = `
&amp;lt;div class="app"&amp;gt;
    &amp;lt;h1 class="app-heading"&amp;gt;Catalin Pit's Articles&amp;lt;/h1&amp;gt;
&amp;lt;/div&amp;gt;`;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With the following code, you create a &lt;code&gt;div&lt;/code&gt; that will hold your application. Inside that div, you create a heading and you are done.&lt;/p&gt;

&lt;p&gt;If you visit your HTML page now, you should see the following:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8IVKAqqS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620201281592/I3HI7_mbg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8IVKAqqS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620201281592/I3HI7_mbg.png" alt="Hashnode API GET request to fetch your blog articles"&gt;&lt;/a&gt;&lt;br&gt;
Figure 2&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Your web page might differ because you (should have) used your username. You should have different articles and header.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;Thus, you can display the articles from your Hashnode blog by using the API. &lt;/p&gt;

&lt;p&gt;In this article, you can see a basic example of fetching your articles. However, you can do much more with the API. You can:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;create, edit and delete articles&lt;/li&gt;
&lt;li&gt;get the replies from your articles&lt;/li&gt;
&lt;li&gt;create, read, edit and delete replies&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>programming</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>How the Web Works Under the Hood</title>
      <author>Dev Mehta</author>
      <pubDate>Thu, 06 May 2021 05:16:43 +0000</pubDate>
      <link>https://dev.to/devmehta/how-the-web-works-under-the-hood-4b6k</link>
      <guid>https://dev.to/devmehta/how-the-web-works-under-the-hood-4b6k</guid>
      <description>&lt;p&gt;In this article, you will get to know about how the web works. You may be wondering about how the website gets rendered in your browser's screen as soon as you open its link.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-will-you-learn"&gt;
  &lt;/a&gt;
  What Will You Learn?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;  How the web works&lt;/li&gt;
&lt;li&gt;  What do we mean by Full-Stack Web Development&lt;/li&gt;
&lt;li&gt;  Why we choose Django for our course&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#what-happens-when-you-visit-a-website"&gt;
  &lt;/a&gt;
  What Happens When You Visit a Website?
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt; You &lt;strong&gt;start by typing the URL&lt;/strong&gt; into your browser.&lt;/li&gt;
&lt;li&gt; Your &lt;strong&gt;computer then sends this request as a packet&lt;/strong&gt;, which includes the IP address of the website you want.&lt;/li&gt;
&lt;li&gt; It sends this request through wires or a &lt;strong&gt;satellite which eventually links to wires using your ISP&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt; Your &lt;strong&gt;ISP will then re-route the request to the appropriate server location&lt;/strong&gt;, using the IP address as the guide.&lt;/li&gt;
&lt;li&gt; Once your request reaches the &lt;strong&gt;server&lt;/strong&gt;, it can &lt;strong&gt;send back the website you asked for.&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt; However a full website with content is too big to send as a single packet of data. To solve this, the &lt;strong&gt;server sends back the website split up into many packets&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt; The &lt;strong&gt;packets come with instructions on how to get back to you and reassemble once they reach you&lt;/strong&gt;.The packets don’t care how they get to you, just the final location.&lt;/li&gt;
&lt;li&gt; &lt;strong&gt;Once the packets reach you, they are reassembled to show the page&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt; All of this moves at close to the speed of light, so it happens very fast.&lt;/li&gt;
&lt;li&gt; This is a higher-level explanation, but for our purposes, it is all we need to know for now.&lt;/li&gt;
&lt;li&gt; &lt;strong&gt;Let’s continue by discussing what the term “Full-Stack” means.&lt;/strong&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#what-do-you-mean-by-fullstack-web-development"&gt;
  &lt;/a&gt;
  What Do You Mean By Full-Stack Web Development?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;There are two main components of a website&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;strong&gt;Front-End Web Development&lt;/strong&gt; - The Front-End is what you see as a user on the website.&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;Back-End Web Development&lt;/strong&gt; - The Back-End is the technology used to actually decide what to show you on the Front-End.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;The &lt;strong&gt;Front-End Development&lt;/strong&gt; revolves around three technologies&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;strong&gt;HTML&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;CSS&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;JavaScript&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;You will hear about Front-End technologies such as jQuery and Bootstrap, but those are all built using the previous three.&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-the-technologies-used-for-frontend-web-development"&gt;
  &lt;/a&gt;
  What are the Technologies Used For Front-End Web Development?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;HTML&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;strong&gt;HTML&lt;/strong&gt; stands for &lt;strong&gt;HyperText Markup Language&lt;/strong&gt;. Every website will have HTML, it defines the structure of a page.&lt;/li&gt;
&lt;li&gt;  You can view by right-clicking and selecting &lt;strong&gt;View Page Source.&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;&lt;strong&gt;CSS&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  CSS - Cascading Style Sheets&lt;/li&gt;
&lt;li&gt;  CSS is the actual styling of the website.&lt;/li&gt;
&lt;li&gt;  Colors, fonts, borders, etc are all defined by CSS.&lt;/li&gt;
&lt;li&gt;  CSS is not mandatory, but almost all sites have it.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Javascript allows you to add interactivity to the website, including programming logic.&lt;/li&gt;
&lt;li&gt;  Any site with interactivity uses Javascript in some way, otherwise, the site is “static”.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#what-are-the-technologies-used-for-backend-web-development"&gt;
  &lt;/a&gt;
  What are the Technologies used for Back-End Web Development?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;### The Back-End Web Development of a site has three components&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;strong&gt;The Language&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;The Framework&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;The Database&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Technologies such as Php, Node.js, Ruby/Rails, Java, Python, etc. are all viable options for a website.&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You will use the following for your backend&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Python as the Language - Python is a great language to learn, it’s simple, powerful, and has many libraries.&lt;/li&gt;
&lt;li&gt;  Django as the Framework - Django is the most popular framework for Python, it’s fast, secure, and scalable.&lt;/li&gt;
&lt;li&gt;  SQLite as the Database - SQLite comes with Django and Python making it an easy choice.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#full-stack-web-development"&gt;
  &lt;/a&gt;
  Full Stack Web Development
&lt;/h2&gt;

&lt;p&gt;By now you know about front-end web developer and back-end web developer, a &lt;strong&gt;Full-stack Web Developer is a developer which handles the tasks of both front-end and back-end web developers&lt;/strong&gt;. They have &lt;strong&gt;knowledge of both front-end and back-end web technologies&lt;/strong&gt; and hence are considered &lt;strong&gt;the most skilled web developers&lt;/strong&gt; in the industry.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;This post was originally published at &lt;a href="https://simplifiedweb.netlify.app/how-the-web-works-under-the-hood"&gt;https://simplifiedweb.netlify.app/how-the-web-works-under-the-hood&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>web</category>
      <category>fullstack</category>
      <category>developer</category>
    </item>
    <item>
      <title>Python - List Vs Tuple Memory Management</title>
      <author>Siddharth Chandra</author>
      <pubDate>Thu, 06 May 2021 05:10:24 +0000</pubDate>
      <link>https://dev.to/siddharth2016/python-list-vs-tuple-memory-management-4056</link>
      <guid>https://dev.to/siddharth2016/python-list-vs-tuple-memory-management-4056</guid>
      <description>&lt;p&gt;This article is going to be a short read, we will focus on how memory is managed in Python for objects like &lt;code&gt;list&lt;/code&gt; and &lt;code&gt;tuple&lt;/code&gt; and what can be the key takeaways.&lt;/p&gt;

&lt;p&gt;Let's get started!&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#list"&gt;
  &lt;/a&gt;
  List
&lt;/h3&gt;

&lt;p&gt;Python list as we all know is a mutable dynamic array that behaves like a linked list as well. Let's look at some code for creating and updating a list:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# ./list_1.py
&lt;/span&gt;
&lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;     &lt;span class="c1"&gt;# A new list gets created
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Initial List'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;     &lt;span class="c1"&gt;# Updating list using in-built append method
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Append 4, List updated to'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;         &lt;span class="c1"&gt;# Pop last item
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Pop, List updated to'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;     &lt;span class="c1"&gt;# Updating list by adding a new list to given list
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Add new list, List updated to'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Following will be the output:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;Initial List &lt;span class="o"&gt;[&lt;/span&gt;1, 2, 3]
Append 4, List updated to &lt;span class="o"&gt;[&lt;/span&gt;1, 2, 3, 4]
Pop, List updated to &lt;span class="o"&gt;[&lt;/span&gt;1, 2, 3]
Add new list, List updated to &lt;span class="o"&gt;[&lt;/span&gt;1, 2, 3, 5, 6]
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let's see what happens in memory when we run the above script, here we will be using &lt;code&gt;sys&lt;/code&gt; to help us out on viewing system-related information:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# ./list_2.py
&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;     &lt;span class="c1"&gt;# A new list gets created
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Initial List'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Initial List Address'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Initial List Memory'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getsizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;     &lt;span class="c1"&gt;# Updating list using in-built append method
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Append 4, List updated to'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Append 4, List Address'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Append 4, List Memory'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getsizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;         &lt;span class="c1"&gt;# Pop last item
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Pop, List updated to'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Pop, List Address'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Pop, List Memory'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getsizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;     &lt;span class="c1"&gt;# Updating list by adding a new list to given list
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Add new list, List updated to'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Add new list, List Address'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Add new list, List Memory'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getsizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's look at the output first:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;Initial List &lt;span class="o"&gt;[&lt;/span&gt;1, 2, 3]
Initial List Address 139688582615624
Initial List Memory 88
Append 4, List updated to &lt;span class="o"&gt;[&lt;/span&gt;1, 2, 3, 4]
Append 4, List Address 139688582615624
Append 4, List Memory 120
Pop, List updated to &lt;span class="o"&gt;[&lt;/span&gt;1, 2, 3]
Pop, List Address 139688582615624
Pop, List Memory 120
Add new list, List updated to &lt;span class="o"&gt;[&lt;/span&gt;1, 2, 3, 5, 6]
Add new list, List Address 139688582615624
Add new list, List Memory 120
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Following points we can find out after looking at the output:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Initially, when the list got created, it had a memory of &lt;code&gt;88&lt;/code&gt; bytes, with 3 elements.&lt;/li&gt;
&lt;li&gt;Later on, after appending an element &lt;code&gt;4&lt;/code&gt; to the list, the memory changes to &lt;code&gt;120&lt;/code&gt; bytes, meaning more memory blocks got linked to list &lt;code&gt;l&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Even after popping out the last element the created blocks memory remains the same and still attached to list &lt;code&gt;l&lt;/code&gt;. And when we add another list with 2 more elements to the given list &lt;code&gt;l&lt;/code&gt;, we see that occupied memory is still the same &lt;code&gt;120&lt;/code&gt; bytes. Hence, we can conclude that it is behaving more like a dynamic array, which updates the size of the list to contain more elements at once to avoid repetitive callbacks (to create and attach new memory address) at every insertion of the new element.&lt;/li&gt;
&lt;li&gt;We also notice that the list address remains the same, even if we do append, pop or add a new list to it (as long as we don't assign it to a new variable). This advocates the nature of the mutability of python lists (it means, more or less, that at the same address we are able to update values or extend it further).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now, let's look at the tuples.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tuple"&gt;
  &lt;/a&gt;
  Tuple
&lt;/h3&gt;

&lt;p&gt;Python tuple as we all know are immutable and do not extend in the memory further after the initial declaration. Now, let's look at the above same scenario but for tuples:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# ./tuple_1.py
&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;     &lt;span class="c1"&gt;# A new tuple gets created
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Initial Tuple'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Initial Tuple Address'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Initial Tuple Memory'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getsizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,)&lt;/span&gt;     &lt;span class="c1"&gt;# Updating tuple by adding a new tuple to given tuple
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Add new tuple, Tuple updated to'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Add new tuple, Tuple Address'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Add new tuple, Tuple Memory'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getsizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;Initial Tuple &lt;span class="o"&gt;(&lt;/span&gt;1, 2, 3&lt;span class="o"&gt;)&lt;/span&gt;
Initial Tuple Address 140452527817280
Initial Tuple Memory 72
Add new tuple, Tuple updated to &lt;span class="o"&gt;(&lt;/span&gt;1, 2, 3, 5, 6&lt;span class="o"&gt;)&lt;/span&gt;
Add new tuple, Tuple Address 140452528572728
Add new tuple, Tuple Memory 88
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Following points we notice after looking at the output:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Since, tuples are immutable, once created cannot be updated unless a new tuple gets added to the previous one, resulting in the creation of a new tuple.&lt;/li&gt;
&lt;li&gt;Once a tuple gets created, its allocated memory will not be changed.&lt;/li&gt;
&lt;li&gt;Updating a tuple after adding another tuple to it, updates the address of the resulting tuple, this advocated its immutability property.&lt;/li&gt;
&lt;li&gt;We can see it allocates &lt;code&gt;72&lt;/code&gt; bytes for 3 values and &lt;code&gt;88&lt;/code&gt; for 6 values, it does not allocate the unnecessary amount of memory, only what is required is allocated.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let's look at some miscellaneous points.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#misc"&gt;
  &lt;/a&gt;
  MISC
&lt;/h3&gt;

&lt;p&gt;What happens when we create an empty list and empty tuple?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# ./misc.py
&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;

&lt;span class="n"&gt;t1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;t2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;l1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="n"&gt;l2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'List l1 address'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'List l2 address'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'List l1 memory'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getsizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'List l2 memory'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getsizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'List t1 address'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'List t2 address'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'List t1 memory'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getsizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'List t2 memory'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getsizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What did we get?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;List l1 address 139766851756616
List l2 address 139766851761800
List l1 memory 64
List l2 memory 64
List t1 address 139766871547976
List t2 address 139766871547976
List t1 memory 48
List t2 memory 48
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What did we find?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Creating 2 empty lists have the same amount of memory allocated, whereas the address of both lists is different. It makes sense because, list address will have to act as mutable and cannot be the same at a given time, which means 2 different lists will be different unless they are the same (not in value but in reference point of view).&lt;/li&gt;
&lt;li&gt;Creating 2 empty tuples have the same amount of memory allocated and will point to the same address initially. It makes sense because of its immutability property. Consider integer &lt;code&gt;1&lt;/code&gt; value in python that is immutable and always point to the same address unless changed to some other integer. Similarly, the initial empty tuple will always point to the same address unless changed to some other tuple.&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;Well, that's it from me.&lt;/p&gt;

&lt;p&gt;We explored quite a few points on how memory is allocated and how it could be managed in Python.&lt;/p&gt;

&lt;p&gt;To know more about memory management, I encourage you to explore their code available on python's &lt;a href="https://github.com/python/cpython"&gt;repo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Feeling it's difficult to go through the source code of python? Don't worry, we can always use available &lt;code&gt;sys&lt;/code&gt; module methods and other functions like &lt;code&gt;id&lt;/code&gt; to develop an understanding of what could be happening behind the scenes.&lt;/p&gt;




&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Just starting your Open Source Journey? Don't forget to check &lt;a href="https://github.com/siddharth2016/hello-open-source"&gt;Hello Open Source&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Want to showcase your Python project or just out there to explore? Check &lt;a href="https://github.com/siddharth2016/awesome-python-repos"&gt;Awesome Python Repos&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Want to make a simple and awesome game from scratch? Check out &lt;a href="https://github.com/siddharth2016/PongPong"&gt;PongPong&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Want to &lt;code&gt;++&lt;/code&gt; your GitHub Profile README? Check out &lt;a href="https://github.com/marketplace/actions/quote-readme"&gt;Quote - README&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Till next time!&lt;/p&gt;

&lt;p&gt;Namaste 🙏&lt;/p&gt;

</description>
      <category>python</category>
      <category>programming</category>
      <category>beginners</category>
      <category>computerscience</category>
    </item>
  </channel>
</rss>
