<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Python deprecation</title>
      <author>hckjck</author>
      <pubDate>Mon, 20 Sep 2021 14:07:46 +0000</pubDate>
      <link>https://dev.to/hckjck/python-deprecation-2mof</link>
      <guid>https://dev.to/hckjck/python-deprecation-2mof</guid>
      <description>&lt;p&gt;As soon as you are developing a library, SDK or any other piece of code, which is intended to be used by several people or software, you should think about &lt;em&gt;deprecation&lt;/em&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;How to introduce changes gracefully to your code over time?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The following shows, how to use deprecation in Python for different parts of your code using Python standard library.&lt;/p&gt;

&lt;p&gt;How to test deprecations in order to ensure warnings will be raised when you expect them to raise. &lt;/p&gt;

&lt;p&gt;Finally, a message format for deprecation messages is suggested, providing meta information for better maintenance.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;The corresponding source code and full examples to this article, can be found &lt;a href="https://github.com/hckjck/python-deprecation"&gt;here&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#throwing-deprecation-warnings"&gt;
  &lt;/a&gt;
  Throwing deprecation warnings
&lt;/h2&gt;

&lt;p&gt;The following section shows, how to use deprecation warnings in different parts of your code.&lt;/p&gt;

&lt;p&gt;In order to throw warnings, you want to use Python's built in &lt;a href="https://docs.python.org/3/library/warnings.html"&gt;warning control&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
`python
from warnings import warn

warn('This is deprecated', DeprecationWarning, stacklevel=2)
`

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To warn about deprecation, you need to set Python's builtin &lt;code&gt;DeprecationWarning&lt;/code&gt; as category. To let the warning refer to the caller, so you know exactly where you use deprecated code, you have to set &lt;code&gt;stacklevel=2&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#function-deprecation"&gt;
  &lt;/a&gt;
  Function deprecation
&lt;/h3&gt;

&lt;p&gt;Deprecating a function is pretty easy just by using &lt;code&gt;warn&lt;/code&gt; within a function like this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;warnings&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;warn&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;a_deprecated_function&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;warn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'This method is deprecated.'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;DeprecationWarning&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stacklevel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#deprecating-function-arguments"&gt;
  &lt;/a&gt;
  Deprecating function arguments
&lt;/h4&gt;

&lt;p&gt;Deprecation on function arguments, requires you to check for your desired changes and throw &lt;code&gt;DeprecationWarning&lt;/code&gt;'s withing the method.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;warnings&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;warn&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;a_function_with_deprecated_arguments&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arg1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;kwarg1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="c1"&gt;# Positional argument `arg1` is going to change its type from (int, str) to (None, str)
&lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arg1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;warn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'arg1 of type int is going to be deprecated'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;DeprecationWarning&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stacklevel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# Keyword argument `kwarg2` is going to be dropped completely.
&lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="s"&gt;'kwarg2'&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
        &lt;span class="n"&gt;warn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'kwarg2 will be deprecated'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;DeprecationWarning&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stacklevel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#class-deprecation"&gt;
  &lt;/a&gt;
  Class deprecation
&lt;/h3&gt;

&lt;p&gt;When deprecating classes you have to consider two separate use cases. Instantiating an object of a deprecated class can throw a deprecation warning by overriding the &lt;code&gt;__init__&lt;/code&gt; method. In order to throw a warning on subclassing from a deprecated method, you have to override the &lt;code&gt;__init_sublcall__&lt;/code&gt; method instead.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;warnings&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;warn&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ADeprecatedClass&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init_subclass__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cls&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="s"&gt;"""This throws a deprecation warning on subclassing."""&lt;/span&gt;
        &lt;span class="n"&gt;warn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;cls&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__name__&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt; will be deprecated.'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;DeprecationWarning&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stacklevel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;__init_subclass__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="s"&gt;"""This throws a deprecation warning on initialization."""&lt;/span&gt;
        &lt;span class="n"&gt;warn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__class__&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__name__&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt; will be deprecated.'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;DeprecationWarning&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stacklevel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#deprecating-a-class-method"&gt;
  &lt;/a&gt;
  Deprecating a class method
&lt;/h4&gt;

&lt;p&gt;Class method deprecation basically follows the same rules as &lt;a href="#function-deprecation"&gt;function deprecation&lt;/a&gt;.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#deprecating-class-variables"&gt;
  &lt;/a&gt;
  Deprecating class variables
&lt;/h4&gt;

&lt;p&gt;In order to deprecate class variables, you need to hook into &lt;code&gt;__getattribute__&lt;/code&gt; method of objects metaclass.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;warnings&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;warn&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;DeprecatedMetaclass&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__getattribute__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="s"&gt;'a_deprecated_class_variable'&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;warn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt; class variable is deprecated'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;DeprecationWarning&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stacklevel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__getattribute__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;AClass&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;metaclass&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;DeprecatedMetaclass&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;a_class_variable&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'foo'&lt;/span&gt;
    &lt;span class="n"&gt;a_deprecated_class_variable&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;  &lt;span class="c1"&gt;# deprecated
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#deprecating-enum-values"&gt;
  &lt;/a&gt;
  Deprecating enum values
&lt;/h4&gt;

&lt;p&gt;Due to the fact that enum values will be class variables of a subclass of Enum, the deprecation follows the same approach as &lt;a href="#deprecating-class-variables"&gt;deprecating class variables&lt;/a&gt; does. In contrast, you have to return the &lt;code&gt;EnumMeta.__getattribute__&lt;/code&gt; as a super call instead, as you are subclassing from &lt;code&gt;EnumMeta&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;enum&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;EnumMeta&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Enum&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;warnings&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;warn&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ADeprecatedEnumMeta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;EnumMeta&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__getattribute__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;'BAR'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;warn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'BAR is going to be deprecated'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;DeprecationWarning&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stacklevel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;EnumMeta&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__getattribute__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ADeprecatedEnum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Enum&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;metaclass&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;ADeprecatedEnumMeta&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;FOO&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'foo'&lt;/span&gt;
    &lt;span class="n"&gt;BAR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'bar'&lt;/span&gt;  &lt;span class="c1"&gt;# deprecated
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#module-deprecation"&gt;
  &lt;/a&gt;
  Module deprecation
&lt;/h3&gt;

&lt;p&gt;In order to deprecate an entire module just place a deprecation warning at the top level of that module.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# lib.py
&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;warnings&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;warn&lt;/span&gt;

&lt;span class="n"&gt;warn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;'The module &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;__name__&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt; is deprecated.'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;DeprecationWarning&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stacklevel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#package-deprecation"&gt;
  &lt;/a&gt;
  Package deprecation
&lt;/h3&gt;

&lt;p&gt;Package deprecation works the same way as &lt;a href="#module-deprecation"&gt;module deprecation&lt;/a&gt;, where the top level will be your &lt;code&gt;__init__.py&lt;/code&gt; of the package to be deprecated.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#testing-deprecations"&gt;
  &lt;/a&gt;
  Testing deprecations
&lt;/h2&gt;

&lt;p&gt;Python's &lt;a href="https://docs.python.org/3/library/warnings.html"&gt;warning control&lt;/a&gt; provides a method called &lt;a href="https://docs.python.org/3/library/warnings.html#warnings.catch_warnings"&gt;catch_warnings&lt;/a&gt; to collect warnings within a &lt;code&gt;with&lt;/code&gt; block. Setting &lt;code&gt;record=True&lt;/code&gt; enables you to record the warnings which were emitted during execution of your code and check if the desired warnings where raised as expected. We won't evaluate this in depth, due to it is well documented in Python documentation &lt;a href="https://docs.python.org/3/library/warnings.html#testing-warnings"&gt;here&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;warnings&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;catch_warnings&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_a_deprecated_enum_value&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;catch_warnings&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;record&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="c1"&gt;# ADeprecatedEnum.FOO is not deprecated and should not throw any warning
&lt;/span&gt;        &lt;span class="n"&gt;ADeprecatedEnum&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FOO&lt;/span&gt;
        &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;

        &lt;span class="c1"&gt;# ADeprecatedEnum.BAR is deprecated and we expect to have a warning raised.
&lt;/span&gt;        &lt;span class="n"&gt;ADeprecatedEnum&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BAR&lt;/span&gt;
        &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="nb"&gt;issubclass&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;category&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;DeprecationWarning&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;'BAR is deprecated'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#versioning-deprecations"&gt;
  &lt;/a&gt;
  Versioning deprecations
&lt;/h2&gt;

&lt;p&gt;Deprecation messages make most sense, when they also provide information, when a particular deprecation is intended to become active. Depending on your deprecation policy and your release cycles you can have deprecation tied to a version or a particular point in time.&lt;/p&gt;

&lt;p&gt;Decide on a message format, for example &lt;code&gt;message; key=value&lt;/code&gt;. This way, adding meta information is straight forward and can be parsed by other tools easily as well.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;warnings&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;warn&lt;/span&gt;

&lt;span class="n"&gt;warn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"This is deprecated; version=1.0.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;DeprecationWarning&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stacklevel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Use common keywords like &lt;code&gt;version&lt;/code&gt; or &lt;code&gt;date&lt;/code&gt; for indicating changes in a particular point in time.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;warnings&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;warn&lt;/span&gt;

&lt;span class="n"&gt;warn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"This is deprecated; date=2022-01-01"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;DeprecationWarning&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stacklevel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;Deprecation warnings are a good tool to keep track of changes within your API's. Python standard library provides your with the tools you need to deprecate any part of your code. Nevertheless, there is a lack of proper documentation and best practices around deprecation in general.&lt;/p&gt;

&lt;p&gt;For a small project deprecation may be a no-brainier. When it comes to larger projects, with a certain level of agility it quickly can become an annoying chore and could turn into potential source of error. Adding version information to deprecation messages, makes it easy to keep track of announcements and deadlines. Still there is room for convention and automation to make deprecation useful, easy and common for daily use.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#reference"&gt;
  &lt;/a&gt;
  Reference
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://code-examples.net/en/q/926881"&gt;deprecation - Python warnings.warn() vs. logging.warning()&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://docs.python.org/3/library/warnings.html"&gt;Python warning control&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.python.org/dev/peps/pep-0565/"&gt;PEP 565 -- Show DeprecationWarning in  __main__&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://docs.python.org/library/logging.html#logging.captureWarnings"&gt;logging.captureWarnings&lt;/a&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>deprecation</category>
      <category>testing</category>
      <category>api</category>
    </item>
    <item>
      <title>4 reasons to write your resume in Markdown</title>
      <author>Sagar Chakravarthy</author>
      <pubDate>Mon, 20 Sep 2021 14:01:13 +0000</pubDate>
      <link>https://dev.to/bpsagar/4-reasons-to-write-your-resume-in-markdown-24ip</link>
      <guid>https://dev.to/bpsagar/4-reasons-to-write-your-resume-in-markdown-24ip</guid>
      <description>&lt;p&gt;As Software Developers, we often use Markdown to write readme files, take notes or write a blog post like this one 😛. Its simple syntax helps format content easily.  Apart from quick formatting there are several reasons why I would recommend writing resume in Markdown&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#increased-focus-on-your-content"&gt;
  &lt;/a&gt;
  🎯 Increased focus on your content
&lt;/h2&gt;

&lt;p&gt;Content is the heart of your resume. But quite often we spend more time on its design and aesthetics. With Markdown’s syntax, you can write neatly formatted content first and then apply various themes or designs tailored to your needs.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#easier-to-keep-it-updated"&gt;
  &lt;/a&gt;
  📄 Easier to keep it updated
&lt;/h2&gt;

&lt;p&gt;It is recommended to revisit your resume at least twice a year to keep it updated with your latest achievements, responsibilities and skills. With file formats like DOC, PDF, Tex or JPG it is extremely difficult (sometimes impossible) to edit without using any additional tools. In contrast, Markdown is just a text file which can be easily edited. Moving your sections around is as simple as cutting and pasting text. You can even store this file in a git repository to keep track of the changes made over time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#flexibility-to-switch-design"&gt;
  &lt;/a&gt;
  🎨 Flexibility to switch design
&lt;/h2&gt;

&lt;p&gt;Markdown is rendered as HTML. And with a sprinkle of CSS you can create a beautiful, crisp and unique design for your resume. You can even change this design at any point of time without making any changes to your core content. A bunch of CSS themes for Markdown are available online.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#better-readability"&gt;
  &lt;/a&gt;
  👀 Better readability
&lt;/h2&gt;

&lt;p&gt;Markdown provides structure for your content in a relatively simple way because of its simple plain-text-formatting syntax.&lt;/p&gt;

&lt;p&gt;Markdown is a great tool for formatting your resume with advantages like maintainability, readability and flexibility. When I was looking for a job, I created a bunch of designs for my resumes. I have now converted it into a web application where you can write your resume in Markdown, try out these designs and download as PDF. Check it out at &lt;a href="https://resumey.pro"&gt;Resumey.Pro&lt;/a&gt; and let me know what you think in the comments below 👇&lt;/p&gt;

</description>
      <category>resume</category>
      <category>markdown</category>
      <category>css</category>
      <category>html</category>
    </item>
    <item>
      <title>5 Amazing Mind Mapping Application</title>
      <author>Nikhil Bobade </author>
      <pubDate>Mon, 20 Sep 2021 13:53:48 +0000</pubDate>
      <link>https://dev.to/nikhil27b/5-amazing-mind-mapping-application-22h</link>
      <guid>https://dev.to/nikhil27b/5-amazing-mind-mapping-application-22h</guid>
      <description>&lt;p&gt;Hello,&lt;/p&gt;

&lt;p&gt;How are you all Today this post about the 5 Amazing Mind Mapping Websites every developer know a mind mapping website is very useful with this you can create a prototype or your website flow. I hope you like this also comments about your thoughts. also For more content follow me on Instagram  &lt;a href="https://www.instagram.com/developer_nikhil27/"&gt;@developer_nikhil27&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;1.Coggle - Best website for flow or Mind Mapping&lt;/p&gt;

&lt;p&gt;&lt;a href="https://coggle.it/"&gt;Coggle&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Op_RGK9c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ulg3nz5hz0ze3bjjvbbj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Op_RGK9c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ulg3nz5hz0ze3bjjvbbj.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2.Mind Meister - For Professional &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.mindmeister.com/"&gt;Mind Meister&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--E221276B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lphqc68wicy06ho21chc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E221276B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lphqc68wicy06ho21chc.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;3.X Wind&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.xmind.net/"&gt;X Wind&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Mxul76SC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/93yyi22r2ewodoxpkze2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Mxul76SC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/93yyi22r2ewodoxpkze2.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;4.Mindomo - For more features &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.mindomo.com/"&gt;Mindomo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HGfQZ6R1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0vkbdxxf206v858tdlnw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HGfQZ6R1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0vkbdxxf206v858tdlnw.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;5.Gliffy - Easy to use with more features &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.gliffy.com/"&gt;Gliffy&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zZKVmSQ3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1nsxcc3di1pom6r6k1rm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zZKVmSQ3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1nsxcc3di1pom6r6k1rm.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thank you 🙂!&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>webdev</category>
      <category>codenewbie</category>
      <category>beginners</category>
    </item>
    <item>
      <title>What Are The Effective Techstack that Could Be Used To Develop Uber Clone App?</title>
      <author>Charles ken</author>
      <pubDate>Mon, 20 Sep 2021 13:16:45 +0000</pubDate>
      <link>https://dev.to/charles84609022/what-are-the-effective-techstack-that-could-be-used-to-develop-uber-clone-app-54ed</link>
      <guid>https://dev.to/charles84609022/what-are-the-effective-techstack-that-could-be-used-to-develop-uber-clone-app-54ed</guid>
      <description>&lt;p&gt;Uber clone app is now a better choice for many entrepreneurs to launch their new taxi app online. Because of its high convenience with its total development advantages and functionality, it is now the start among on-demand taxi business startups. Focusing on, developers at present are smartly initiating projects on the Uber clone app script development.&lt;/p&gt;

&lt;p&gt;While it comes to the development segment, some of the major tech-stacks are used by successful developers in the development field. Regarding, we are going to discuss those immersive tech components for your effective ready-to-go taxi app creation in the contemporary marketplace. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-scopeful-is-uber-clone-app-development-for-contemporary-market-requirements"&gt;
  &lt;/a&gt;
  How Scopeful is Uber Clone App Development for Contemporary Market Requirements?
&lt;/h2&gt;

&lt;p&gt;As the market value reported in Businesswire, the market value of global on-demand taxi business online is expected to reach USD. 41.22 billion by 2025. Such an achievable marketplace captivates entrepreneurs vast around the world.&lt;/p&gt;

&lt;p&gt;In this taxi app business startup online, investing in unique app development is more while comparing to the readymade one. Also, the clients need to wait for unpredictable time periods to get their fully built taxi app for launching after several tests on in-built characteristics.&lt;/p&gt;

&lt;p&gt;It not only delays the development process but also extends the app launching plan schedule as per the client’s actual business implementation ideas. But in the readymade app source case, it is fully avoided by the Uber clone app’s already tested features and options.&lt;/p&gt;

&lt;p&gt;Adobe all, with its affordability, the ready-to-go app script is now most wanted by existing business people in the on-demand online market area. Following, Uber clone app development would reach its peak as it is famed among taxi business service providers this day. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#effective-techstack-could-be-used-to-build-progressive-uber-clone-app"&gt;
  &lt;/a&gt;
  Effective Techstack Could Be Used To Build Progressive Uber Clone App
&lt;/h2&gt;

&lt;p&gt;Building mobile apps for business can be completed through several tech stacks that are available in the digitized market era. In which, selecting the most advanced solutions stack is important ever for an effective app present in the existing market scenario. In that, the following technology infrastructures would be a better choice for creating your Uber clone app for taxi business online.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Android SDK&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;As clone app development needs an SDK toolbox, it brings several benefits to the development end. Right from the fast app development completion to the improved user experience provision, everything makes it simple for notable business achievement. So adding Android SDK to your development would be a fine progression. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Swift&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Swift, the programming language, has many advantages in the Uber clone app development. For example, uninitialized variable prevention, automated memory management, and overflow checking are highlighted including. Its syntax-promote swift development along with high readability and maintainability, your complete app creation would remain quick.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Go/GoLang&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Based on its great performance, the statically combined programming language is now vastly used by clone app developers in the industry. So it is compiled to the native code, it assists you to take your development task too faster than usual. The developers claim that Golang is naturally faster than Python and as speedy as C++.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-best-backend-programs-for-better-realtime-app-operational-functionality"&gt;
  &lt;/a&gt;
  The Best Backend Programs for Better Real-time App Operational Functionality
&lt;/h2&gt;

&lt;p&gt;After completing the entire front-end design as per the modern on-demand taxi business requirements and client-centric, concentrating on the backend is the core thing for the Uber clone app’s smooth business operations in real-time. Taking that into account, the below-mentioned backend stack usage makes your new app too smart in the entire functionality online.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Laravel&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Laravel in your app development in fact makes your coding easier. The open-source platform also possessed some immersive backend development solutions such as MVC Architecture, Modular approach, object-oriented library, and so on. With these, your complete new readymade app development is talented.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Php&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The server-side Php scripting language helps you to build your new app with robust backend functionality security. The simplest and best framework has its own core security option and the Create, Retrieve, Update, and Delete (CRUD) feature for securing the app users’ submission operation in less time.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;MongoDB&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;MongoDB, the document-oriented store allows you to write codes without requiring a defined schema. It speeds up the data fetching. And, you can smartly duplicate the data under a single index instead of having the usual data in different tables. Above all, it has some significant characteristics such as powerful querying and analytics, simple horizontal scale-out, etc.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Firebase&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The finest Google-backed platform for your Uber clone mobile/web app development assists you to start your development process with powerful advantages such as an extensive and reliable database, multi-platform authentication,  testing service for your improved app quality achievement, etc. It makes your complete flow too easy and effective ever in the business.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#proven-technology-solutions-must-be-added-to-your-uber-clone-for-business"&gt;
  &lt;/a&gt;
  Proven Technology Solutions Must Be Added to Your Uber Clone for Business
&lt;/h2&gt;

&lt;p&gt;Apt to the existing online taxi business demands and needed technology features, developing your app is a must for increased productivity. Accordingly, the following proven technology feature solutions are the most required for your new Uber clone app development which must be concentrated by you at the time for app creation to launch. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Simple-to-use Design&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Though the contemporary taxi app users’ most demanded stuff is friendly for usage, focusing on it will make your business ever successful with the Uber clone script. As well, the entrepreneurs seem satisfied with apps that are being user-friendly for their launching. The winning app personality is also considered as a proven strategy for increased user value online.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Geo-Location Information&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Enabling the geolocation tracking facility with your readymade clone app is very crucial for the taxi business online. A clean optimized route mapping option assists the drivers to smartly track routes on trippings. Also, the customers and the admin could use the technology for their appropriate verifications.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Multi-channel Notifications&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Push notification functionality would be fastened while you use a robust interlinking framework between apps. So that relevant players in the taxi business could receive push notifications rapidly in the service. It leads the customers to get instant responses from the drivers’ side. Also, SMS and e-mail sending technology offer clients a multi-channel notification option.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Fare Estimation&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The auto fare estimation technology must be built-in to your new Uber clone app. The automated technology projects taxi fare details to the customers on the basis of their selective vehicle type and distance coverage. Having your new taxi app inbuilt with such technology is necessary for the on-demand taxi service app in real-time.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Multi-payment Gateway&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Mostly after the pandemic outbreak situation happens around the world, the taxi app customers choose only online transactions. Regarding, enabling the multi-payment option lets them pay the taxi fares at their convenience. Also, making the multi-currency support apt to the current update in the market fulfills the requirements of clients as expected.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dedicated Admin Reporting&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Considering the importance of the overall business management solution, in the real-time taxi business online, creating your Uber clone app’s admin panel accordingly adds extra powerful benefits to the full app development. The key source becomes the most advantage for your client-side of total business control with dedicated dashboard, analytics, and reporting.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#in-conclusion"&gt;
  &lt;/a&gt;
  In Conclusion
&lt;/h2&gt;

&lt;p&gt;As developing the &lt;a href="https://www.spotnrides.com/"&gt;Uber clone&lt;/a&gt; app is now highly available on search among entrepreneurs, building it effectively makes the source stay away from others. Selecting the upgraded as well as powerful tech stack for your app development as discussed would be beneficial for both you and your clients.&lt;/p&gt;

</description>
      <category>appdevelopment</category>
      <category>android</category>
      <category>laravel</category>
      <category>mongodb</category>
    </item>
    <item>
      <title>Novus - A blazingly fast and futuristic package manager for windows.

</title>
      <author>Pranav Doshi</author>
      <pubDate>Mon, 20 Sep 2021 13:16:39 +0000</pubDate>
      <link>https://dev.to/zaphodelevated/novus-a-blazingly-fast-and-futuristic-package-manager-for-windows-4m0k</link>
      <guid>https://dev.to/zaphodelevated/novus-a-blazingly-fast-and-futuristic-package-manager-for-windows-4m0k</guid>
      <description>&lt;p&gt;I am the founder of &lt;a href="http://novuspkg.com"&gt;Novus Package Manager&lt;/a&gt;, and I am excited to share my product with you!&lt;/p&gt;

&lt;p&gt;Installing applications can always be a pain. Downloads take forever to complete and we have to go through all the tedious steps of installing them.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#what-is-novus"&gt;
  &lt;/a&gt;
  💡 What is Novus?
&lt;/h4&gt;

&lt;p&gt;Novus is a package manager designed to make your lives easier and easily install applications silently with just a single command.&lt;/p&gt;

&lt;p&gt;Make sure to check out the website &lt;a href="http://novuspkg.com"&gt;here&lt;/a&gt;.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#why-novus"&gt;
  &lt;/a&gt;
  🤔 Why Novus?
&lt;/h4&gt;

&lt;p&gt;A lot of people have this question of why should I use Novus when there are other package managers out there like Chocolatey and Scoop? Well, there are many key differentiators between Novus and other package managers which make it significantly better.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Speed&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Speed is an important aspect in any package manager.&lt;/p&gt;

&lt;p&gt;Novus can use multithreaded downloads and download packages up to 8 times faster than normal downloads.&lt;/p&gt;

&lt;p&gt;Many people have concerns about the security risks with using multithreaded downloads. However, most packages nowadays support concurrent connections. There are a few sites which do not allow multiple connections. Novus uses single threads to download such packages. If you still have a problem with this feature, please note that multithreaded downloads is an &lt;strong&gt;optional&lt;/strong&gt; feature and &lt;strong&gt;disabled by default&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Novus downloads a package using multithreads passing the &lt;code&gt;-m&lt;/code&gt; is passed. To always download packages using multiple threads, you can change the config globally with the command, &lt;code&gt;novus config multithreaded true&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The image below shows the speed difference Novus and other popular package managers for Windows.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TVcUA7q3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/au327eu4la74pznv8owj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TVcUA7q3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/au327eu4la74pznv8owj.png" alt="Novus Installation Times"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Silent Installations&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Most installers require you to keep accepting prompts in order to install a certain application. This can be frustrating at times especially if you want them to be autonomous. Novus installs apps silently, in a manner such that users don't need to accept any prompts during the installation. &lt;/p&gt;

&lt;p&gt;This allows installations to be &lt;strong&gt;non-intrusive&lt;/strong&gt; and &lt;strong&gt;faster&lt;/strong&gt;.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Non-admin Installations&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Most package managers like Chocolatey require you to install apps using an admin terminal. One of the most requested features is to be able to install apps in a regular terminal without having to open one as administrator each time.&lt;/p&gt;

&lt;p&gt;Novus fixes this problem by automatically elevating to a admin terminal. Some people have expressed a certain security risk to this feature. However, Novus does not bypass the UAC (User Account Control). The batch file is used for activating the UAC and thereby if the user clicks on cancel, the installation will be aborted.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Portable Installations&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Some people prefer to install portable packages as they can be moved between devices and drives.&lt;/p&gt;

&lt;p&gt;Novus supports portable installations for certain apps by passing in the &lt;code&gt;-p&lt;/code&gt; flag. To avoid using this flag, you can use the &lt;code&gt;novus config portable true&lt;/code&gt; command to always install the portable version of a specific package. However, this is not highly recommended as most packages do not support portable installations.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Auto Updates&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A key problem in package managers is the ability to keep all the packages up to date. It would be tedious to manually check each an every package, especially when there are plenty of them.&lt;/p&gt;

&lt;p&gt;Novus uses an auto updating script to keep the packages up to date. This script automatically searches for newer versions of each package and updates the manifest.&lt;/p&gt;

&lt;p&gt;In order to find the latest version, I used regex to match the version from the homepage of the application website.&lt;/p&gt;

&lt;p&gt;This script runs every day and updates package which have newer releases.&lt;/p&gt;

&lt;p&gt;If you are interested on how this was coded take a look at the &lt;a href="https://github.com/novus-package-manager/novus-packages"&gt;GitHub repository&lt;/a&gt;.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Open Source&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Lastly, Novus is &lt;a href="https://github.com/novus-package-manager/novus"&gt;open-source&lt;/a&gt;. This makes it easier to contribute and add packages to the manifest. &lt;/p&gt;

&lt;p&gt;You can find the GitHub at this link&lt;br&gt;
      -&amp;gt; &lt;a href="https://github.com/novus-package-manager"&gt;https://github.com/novus-package-manager&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We are still in alpha release and hoping to add a lot more cool features in the future. &lt;/p&gt;

&lt;p&gt;If you would like to support the development of Novus or find the project interesting, a ⭐ would be hugely appreciated! &lt;/p&gt;

&lt;p&gt;Make sure to check out the product if you're interested and I would love to know your thoughts and feedback on this project!&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;🔗Links&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Website: &lt;a href="http://novuspkg.com"&gt;http://novuspkg.com&lt;/a&gt;&lt;br&gt;
GitHub: &lt;a href="https://github.com/novus-package-manager"&gt;https://github.com/novus-package-manager&lt;/a&gt;&lt;br&gt;
Discord: &lt;a href="https://discord.gg/pb3VqXsgnY"&gt;https://discord.gg/pb3VqXsgnY&lt;/a&gt;&lt;/p&gt;

</description>
      <category>software</category>
      <category>windows</category>
      <category>packagemanager</category>
      <category>cli</category>
    </item>
    <item>
      <title>Monitor Tomcat Java application with OpenTelemetry and SigNoz</title>
      <author>Ankit Anand ✨</author>
      <pubDate>Mon, 20 Sep 2021 13:14:33 +0000</pubDate>
      <link>https://dev.to/signoz/monitor-tomcat-java-application-with-opentelemetry-and-signoz-3c7j</link>
      <guid>https://dev.to/signoz/monitor-tomcat-java-application-with-opentelemetry-and-signoz-3c7j</guid>
      <description>&lt;p&gt;OpenTelemetry is a vendor-agnostic instrumentation library. In this article, let's explore how to auto-instrument a Tomcat Java application using OpenTelemetry Java JAR agent.&lt;/p&gt;

&lt;p&gt;After capturing telemetry data with OpenTelemetry, we will use SigNoz, an open-source full-stack observability tool, to visualize the data.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bit.ly/2WkkmL4"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--od2lB_mG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8yroh39ngk6sz6tv3z9y.png" alt="SigNoz GitHub repo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Steps to get started with OpenTelemetry for Tomcat Java application:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Installing SigNoz&lt;/li&gt;
&lt;li&gt;Installing sample Tomcat Java application&lt;/li&gt;
&lt;li&gt;Auto Instrumentation with OpenTelemetry Java agent&lt;/li&gt;
&lt;li&gt;Getting metrics and traces for Tomcat application in SigNoz&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#installing-signoz"&gt;
  &lt;/a&gt;
  Installing SigNoz
&lt;/h2&gt;

&lt;p&gt;You can get started with SigNoz using just three commands at your terminal if you have Docker installed. You can read about other deployment options from &lt;a href="https://signoz.io/docs/deployment/requirement/"&gt;SigNoz documentation&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git clone https://github.com/SigNoz/signoz.git
cd signoz/deploy/
./install.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You will have an option to choose between ClickHouse or Kafka + Druid as a storage option. Trying out SigNoz with ClickHouse database takes less than 1.5GB of memory, and for this tutorial, we will use that option.&lt;/p&gt;

&lt;p&gt;We have installed SigNoz on a Ubuntu VM in Azure cloud. You can access SigNoz UI at &lt;code&gt;http://IP_of_SigNoz:3000&lt;/code&gt;. You can access SigNoz UI at port: 3000 of any host that you choose. In case of local host just use: &lt;code&gt;http://localhost:3000&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The application list shown in the dashboard is from a sample app called HOT R.O.D that comes bundled with the SigNoz installation package.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pSFK6a8v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/df7gclrc9c5dvsm9lgsh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pSFK6a8v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/df7gclrc9c5dvsm9lgsh.png" alt="SigNoz dashboard showing application list"&gt;&lt;/a&gt;SigNoz Dashboard&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#installing-sample-tomcat-java-application"&gt;
  &lt;/a&gt;
  Installing sample Tomcat Java application
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Prerequisites:&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
Make sure you have Tomcat installed on your system. If not, then you can download it from &lt;a href="https://tomcat.apache.org/index.html" rel="noopener noreferrer nofollow"&gt;Apache Tomcat website&lt;/a&gt;. For this tutorial I have used Tomcat 10.0.8.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#steps-to-install-sample-tomcat-java-application"&gt;
  &lt;/a&gt;
  Steps to install sample Tomcat Java application:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Download an example app packaged as a war file provided at Apache Tomcat official website - &lt;a href="https://tomcat.apache.org/tomcat-7.0-doc/appdev/sample/" rel="noopener noreferrer nofollow"&gt;Sample Tomcat app&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7ZTZmIDY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/brrw3xoml3gn6urri0rl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7ZTZmIDY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/brrw3xoml3gn6urri0rl.png" alt="Sample applicationlink"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The easiest way to run the sample app is to move it to webapps folder inside the Tomcat directory.&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  cd Tomcat/webapps
  cp ~/Downloads/sample.war .
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Once you have copied the file in the webapps folder, get back to the Tomcat folder and run the app using the following command.
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  cd ..
  bin/startup.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Check if the sample app is running at: &lt;a href="http://localhost:8080/sample/"&gt;http://localhost:8080/sample/&lt;/a&gt; . The sample should open up like below.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZxVVcjGF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/asxnkp8d284l08kopt2m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZxVVcjGF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/asxnkp8d284l08kopt2m.png" alt="Sample app running"&gt;&lt;/a&gt;Sample Tomcat app&lt;/p&gt;

&lt;p&gt;By clicking on the links shown on the page, you can see that it makes dummy calls to a page as part of the Hello World application.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#auto-instrumentation-with-opentelemetry-java-agent"&gt;
  &lt;/a&gt;
  Auto Instrumentation with OpenTelemetry Java agent
&lt;/h2&gt;

&lt;p&gt;OpenTelemetry has a very handy Java JAR agent that can be attached to any Java 8+ application for instrumenting Java applications.. The JAR agent can detect a number of popular libraries and frameworks and instrument it right out of the box. You don't need to add any code for that.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Download the &lt;a href="https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/latest/download/opentelemetry-javaagent-all.jar"&gt;latest Java JAR agent&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;For the Tomcat application, you need to setup a few environment variables. You need to create and add a new file &lt;code&gt;setenv.sh&lt;/code&gt; in your Tomcat bin folder. The &lt;code&gt;./startup.sh&lt;/code&gt; command which is used to run the Java app will check for &lt;code&gt;setenv.sh&lt;/code&gt; file and run the commands accordingly.&lt;/li&gt;
&lt;li&gt;In &lt;code&gt;setenv.sh&lt;/code&gt; file, paste the following environment variables using a code editor:
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;   export CATALINA_OPTS="$CATALINA_OPTS -javaagent:/path/to/opentelemetry-javaagent-all.jar"
   export OTEL_METRICS_EXPORTER=none
   export OTEL_EXPORTER_OTLP_ENDPOINT=&amp;lt;IP of SigNoz Backend&amp;gt;:4317
   export OTEL_RESOURCE_ATTRIBUTES=service.name=&amp;lt;app_name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;In the &lt;code&gt;CATALINA_OPTS&lt;/code&gt; environment variable, you need to replace &lt;code&gt;path&lt;/code&gt; with the path of the folder location where you have saved the OpenTelemetry Java agent downloaded in step 1.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;OTEL_EXPORTER_OTLP_ENDPOINT&lt;/code&gt; specifies the endpoint for SigNoz's backend. In place of IP of SigNoz backend, you need to put the IP of host machine where SigNoz is installed. Also, remember to allow incoming requests to port 4317 of the machine where SigNoz backend is hosted.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;OTEL_RESOURCE_ATTRIBUTES&lt;/code&gt; is used to specify the service name of the service being monitored. So the final environment variables will look like below. Note that:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;   export CATALINA_OPTS="$CATALINA_OPTS -javaagent:/Users/cruxaki/Downloads/opentelemetry-javaagent-all.jar"
   export OTEL_METRICS_EXPORTER=none
   export OTEL_EXPORTER_OTLP_ENDPOINT=http://40.76.59.122:4317
   export OTEL_RESOURCE_ATTRIBUTES=service.name=Tomcat-SigNoz
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Make sure that you have saved this file as &lt;code&gt;setenv.sh&lt;/code&gt; and in your Tomcat bin folder, because when starting up, Catalina checks this file for environment variables.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Now we need to restart our Tomcat Java app with the OpenTelemetry Java agent attached to it. Make sure you're at your Tomcat home folder and then restart the Tomcat server using following commands:
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;   bin/shutdown.sh
   bin/startup.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Check out the sample Tomcat app again at  &lt;a href="http://localhost:8080/sample/"&gt;http://localhost:8080/sample/&lt;/a&gt; and play around with it to generate some load. It might take 1-2 minutes before it starts showing up in the SigNoz dashboard.&lt;/p&gt;

&lt;p&gt;Below you can find your &lt;code&gt;Tomcat-SigNoz&lt;/code&gt; app in the list of applications being monitored.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Dyx45Lq6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m3rqjgill13ijql6gtlp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Dyx45Lq6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m3rqjgill13ijql6gtlp.png" alt="Tomcat shows up in the list of applications monitored by SigNoz"&gt;&lt;/a&gt;Tomcat-SigNoz shows up in the list of applications monitored by SigNoz&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#metrics-and-traces-of-the-tomcat-java-application"&gt;
  &lt;/a&gt;
  Metrics and Traces of the Tomcat Java Application
&lt;/h2&gt;

&lt;p&gt;SigNoz makes it easy to visualize metrics and traces captured through OpenTelemetry instrumentation.&lt;/p&gt;

&lt;p&gt;SigNoz comes with out of box RED metrics charts and visualization. RED metrics stands for:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Rate of requests&lt;/li&gt;
&lt;li&gt;Error rate of requests&lt;/li&gt;
&lt;li&gt;Duration taken by requests&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ryIbIwoj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9m75541cp8pg1lfgq7ph.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ryIbIwoj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9m75541cp8pg1lfgq7ph.png" alt="SigNoz UI showing charts"&gt;&lt;/a&gt;SigNoz UI showing popular RED metrics of application performance&lt;/p&gt;

&lt;p&gt;You can then choose a particular timestamp where latency is high to drill down to traces around that timestamp.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xtbyqJxs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/twho6nxaun1ucll8xacb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xtbyqJxs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/twho6nxaun1ucll8xacb.png" alt="View of traces at a particular timestamp"&gt;&lt;/a&gt;View of traces at a particular timestamp&lt;/p&gt;

&lt;p&gt;You can use flamegraphs to identify the issue causing the latency.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sElY40sx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sjs5gg9v6pvovuh97b0g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sElY40sx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sjs5gg9v6pvovuh97b0g.png" alt="Flamegraphs"&gt;&lt;/a&gt;Flamegraphs used for distributed tracing in SigNoz dashboard&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;OpenTelemetry makes it very convenient to instrument your Spring Boot application. You can then use an open-source APM tool like SigNoz to analyze the performance of your app. As SigNoz offers a full-stack observability tool, you don't have to use multiple tools for your monitoring needs.&lt;/p&gt;

&lt;p&gt;You can try out SigNoz by visiting its GitHub repo 👇&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bit.ly/2WkkmL4"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--od2lB_mG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8yroh39ngk6sz6tv3z9y.png" alt="SigNoz GitHub repo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you are someone who understands more from video, then you can watch the tutorial on how to monitor your Tomcat Java Application with OpenTelemetry and SigNoz below👇&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/4obQilMqU4E"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;If you face any issues while trying out SigNoz, feel free to write to us at: &lt;a href="mailto:support@signoz.io"&gt;support@signoz.io&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;If you want to read more about SigNoz 👇&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://signoz.io/blog/monitoring-your-go-application-with-signoz/"&gt;Golang Application Performance Monitoring with SigNoz&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://signoz.io/blog/opentelemetry-spring-boot/"&gt;Monitor your Spring Boot application with OpenTelemetry and SigNoz&lt;/a&gt;&lt;/p&gt;

</description>
      <category>java</category>
      <category>monitoring</category>
      <category>devops</category>
      <category>opentelemetry</category>
    </item>
    <item>
      <title>Must know platforms for networking as a computer science geek</title>
      <author>Patrick</author>
      <pubDate>Mon, 20 Sep 2021 13:12:28 +0000</pubDate>
      <link>https://dev.to/patik123/must-know-platforms-for-networking-as-a-computer-science-geek-4037</link>
      <guid>https://dev.to/patik123/must-know-platforms-for-networking-as-a-computer-science-geek-4037</guid>
      <description>&lt;p&gt;For some time now, I have been a user of two interesting networking platforms, especially for people in the world of computing.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#polywork"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.polywork.com/"&gt;PolyWork&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Each of us is many things at once, a friend, a programmer, a tech writer, a speaker, a podcast maker ... and we want to show this work in some way. This is made possible by PolyWork. A platform that is a mix between LinkedIn and Twitter.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3Y2jTxtU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wc6879ozr1efyg8v5f1z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3Y2jTxtU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wc6879ozr1efyg8v5f1z.png" alt="My personal PolyWork site"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If LinkedIn focuses only on our work title and education, we have as much freedom with PolyWork as we have on Twitter. We can write our entire resume. We can show all our presentations, blog posts, podcast episodes …&lt;/p&gt;

&lt;p&gt;The best thing about PolyWork for me are the badges that have many features. They allow us to showcase our work, connect with people with the same badge. Within each badge, however, there are different tags that allow you to display activities within the badge. In case you can't find a suitable badge, you have the option to create your own.&lt;/p&gt;

&lt;p&gt;PolyWork is divided into two parts. Multiverse where the most popular people, other users activities and the most popular badges are displayed, and much more.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uy7RB5yH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6v4o591v4jnbh0loyfeg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uy7RB5yH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6v4o591v4jnbh0loyfeg.png" alt="PolyWork's Multiverse"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The second part is Space Station, but, allows us to find people open to any activity. For example, if you are looking for someone to test your application, you will be able to find someone in the People available for beta testing products category. Of course, we have the opportunity to contact and connect with each user.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2p6q9s4E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/68mlkus95sn2zo8kia0b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2p6q9s4E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/68mlkus95sn2zo8kia0b.png" alt="PolyWork's Space Station"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;One of the best features is that we can have our PolyWork site on our own domain.&lt;/p&gt;

&lt;p&gt;You see for yourself what PolyWork has to offer.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.polywork.com/patik123"&gt;My PolyWork site&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#showcase"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.showwcase.com/"&gt;ShowCase&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;ShowCase is a platform designed for programmers. After all, we can show our programming skills and connect with other programmers.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6Zs5rshr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x0z2ijem00zbbuiw83dn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6Zs5rshr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x0z2ijem00zbbuiw83dn.png" alt="My ShowCase profile"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We can show our tech stack (what tools, programming languages and databases we know how to use), current and previous jobs, various certificates and we can show the best projects from our GitHub.&lt;/p&gt;

&lt;p&gt;But that's not all.&lt;/p&gt;

&lt;p&gt;There are also communities where users can share their experiences, knowledge ... There is a community for everyone to take part in.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lkSIugCI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/65hlcv418frcyucb940a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lkSIugCI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/65hlcv418frcyucb940a.png" alt="ShowCase communities"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ShowCase also has the ability to write short posts like Twitter.&lt;/p&gt;

&lt;p&gt;It also has the ability to write longer posts called Shows in which we can show our work.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--etHJhjCz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tp9yscohiwxws68d2m38.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--etHJhjCz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tp9yscohiwxws68d2m38.png" alt="Blank Show page"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I find the app very elegant and useful.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.showwcase.com/patik123"&gt;My ShowCase profile&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Currently, these two platforms do not allow immediate registration. To gain access, you have two options to wait or get an access code.&lt;/p&gt;

&lt;p&gt;In case you like the post, you can follow me on my &lt;a href="https://twitter.com/Patik123_"&gt;Twitter account&lt;/a&gt; for even more content.&lt;/p&gt;

&lt;p&gt;I don’t advertise on any platforms but present them.&lt;/p&gt;




&lt;p&gt;Tip: I have some codes for PolyWork, if you want you can write to me in DM on my &lt;a href="https://twitter.com/Patik123_"&gt;Twitter account&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>blogging</category>
      <category>networking</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Built a Twitter Blockchain News Channel in JavaScript</title>
      <author>Srajan Gupta</author>
      <pubDate>Mon, 20 Sep 2021 13:11:32 +0000</pubDate>
      <link>https://dev.to/srajangupta__/built-a-twitter-blockchain-news-channel-in-javascript-4gc2</link>
      <guid>https://dev.to/srajangupta__/built-a-twitter-blockchain-news-channel-in-javascript-4gc2</guid>
      <description>&lt;p&gt;Hi 👋 I'm a #Bitcoin News Channel 🤖&lt;/p&gt;

&lt;p&gt;Yes, I am Open Source&lt;/p&gt;

&lt;p&gt;Meet me here: &lt;a href="https://twitter.com/BitcoinInOut"&gt;https://twitter.com/BitcoinInOut&lt;/a&gt;&lt;/p&gt;

</description>
      <category>blockchain</category>
      <category>bitcoin</category>
      <category>javascript</category>
    </item>
    <item>
      <title>I regret using PHP</title>
      <author>Jorge Castro</author>
      <pubDate>Mon, 20 Sep 2021 13:10:01 +0000</pubDate>
      <link>https://dev.to/jorgecc/i-regret-using-php-4b5a</link>
      <guid>https://dev.to/jorgecc/i-regret-using-php-4b5a</guid>
      <description>&lt;p&gt;I regret using PHP.&lt;/p&gt;

&lt;p&gt;Right now, I finished a titanic project (around 3 year in the making) and the project is working as expected. However, it feels so fragile and I think I loss a lot of time in some other tasks rather than the own code (including testing/benchmarking libraries, creating our own libraries).&lt;/p&gt;

&lt;p&gt;One of the key part of the project is the access to the database, so for this, I use an "orm".   For PHP, you can use any ORM in PHP to do the job, however, this project is not easy and it requires some tricks.&lt;/p&gt;

&lt;p&gt;First, I tried Laravel and the performance of Laravel (because I want to use its ORM) could be resumed in a single word: SLOW.  So I rejected it completely.  I tested other ORM and they are also really slow, so I created one from scratch with two goals:&lt;/p&gt;

&lt;p&gt;a) simple&lt;br&gt;
b) fast.&lt;/p&gt;

&lt;p&gt;And here is the project&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/eftec/pdoone"&gt;https://github.com/eftec/pdoone&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And it works (more or less). &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#why-do-i-need-an-orm"&gt;
  &lt;/a&gt;
  Why do I need an ORM?
&lt;/h3&gt;

&lt;p&gt;Because it is not possible to create a project using the primitive functionalities of PHP (PDO in this case), example:&lt;/p&gt;

&lt;p&gt;Using PDO&lt;br&gt;
(it is prone to mistakes)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nv"&gt;$stmt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$pdo&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;prepare&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"SELECT * FROM myTable WHERE name = ?"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$stmt&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;bindParam&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$_POST&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="no"&gt;PDO&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;PARAM_STR&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$stmt&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nv"&gt;$result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$stmt&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get_result&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nv"&gt;$products&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[];&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$row&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$result&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;fetch_assoc&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nv"&gt;$product&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$row&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nv"&gt;$stmt&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;close&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Using my library&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nv"&gt;$products&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$pdoOne&lt;/span&gt;
    &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;select&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"*"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;from&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"myTable"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;where&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"name = ?"&lt;/span&gt;&lt;span class="p"&gt;,[&lt;/span&gt;&lt;span class="nv"&gt;$_POST&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;]])&lt;/span&gt; 
    &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;toList&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Using my library (ORM)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nc"&gt;ProductRepo&lt;/span&gt; &lt;span class="c1"&gt;// this class was generated with echo $pdoOne()-&amp;gt;generateCodeClass(['Product']);&lt;/span&gt;
    &lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;where&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"name = ?"&lt;/span&gt;&lt;span class="p"&gt;,[&lt;/span&gt;&lt;span class="nv"&gt;$_POST&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;]])&lt;/span&gt;
    &lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;toList&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, I found the main problem of PHP: "dynamic typing".  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dynamic-typing"&gt;
  &lt;/a&gt;
  dynamic typing
&lt;/h2&gt;

&lt;p&gt;Let's say we have a function that returns a list of products.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="nv"&gt;$products&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nc"&gt;ProductRepo&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;listall&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;However, PHP does not know if we are returning a list of products.  We could add type hinting, but (as its name says), it is just a type hinting/validation and nothing more.   Type hinting is a cheap solution and it is not foolproof at all.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;   &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;listall&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;&lt;span class="kt"&gt;array&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// code goes here&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But, there is another problem. PHP doesn't have the concept of array-of-a-specific-type.&lt;/p&gt;

&lt;p&gt;It is Java:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;  &lt;span class="n"&gt;products&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;ArrayList&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Product&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It is c#&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;  &lt;span class="n"&gt;products&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Product&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And it is PHP&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;  &lt;span class="nv"&gt;$products&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// or simply [], so we could store an object, a number or whatever value here.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#objects-versus-array"&gt;
  &lt;/a&gt;
  objects versus array
&lt;/h2&gt;

&lt;p&gt;Let's say we have a model of an invoice.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;InvoiceDetails&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nv"&gt;$idInvoiceDetail&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nv"&gt;$idInvoice&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nv"&gt;$product&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nv"&gt;$quantity&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Invoice&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nv"&gt;$idInvoice&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nv"&gt;$customer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nv"&gt;$date&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nv"&gt;$invoiceDetails&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  &lt;span class="c1"&gt;// a list of invoicedetails&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What if we want to serialize:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;   &lt;span class="nv"&gt;$invoice&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Invoice&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// $invoice is an instance of Invoice&lt;/span&gt;
   &lt;span class="nv"&gt;$json&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;json_encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$invoice&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// $json is the class serialized&lt;/span&gt;
   &lt;span class="nv"&gt;$invoiceback&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;json_decode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$json&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// now $invoice is an instance of stdclass.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We could convert it manually but it takes so much resources to have a correct serialization.&lt;/p&gt;

&lt;p&gt;So, the best solution is to use an associative array. Why?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;   &lt;span class="nv"&gt;$invoice&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'idinvoice'&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="mf"&gt;1...&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt; &lt;span class="c1"&gt;// $invoice is an array&lt;/span&gt;
   &lt;span class="nv"&gt;$json&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;json_encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$invoice&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// $json is the array serialized&lt;/span&gt;
   &lt;span class="nv"&gt;$invoiceback&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;json_decode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$json&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// now $invoice is an array.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In PHP, we don't need to use models at all.  We could use a bit of them to get some type hinting but again, it is not a perfect solution, neither it is foolproof or help in a big project.  It also kills the performance considerably (mainly if you want to serialize/de-serialize).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#are-libraries-the-solution"&gt;
  &lt;/a&gt;
  Are libraries the solution?
&lt;/h2&gt;

&lt;p&gt;There are some libraries to help solving those problems. However, they bring new problems: performance.   Many PHP libraries use a lot of "hack" solutions to solve the problems of PHP such as serialization, for example using reflections and such. &lt;strong&gt;&lt;em&gt;However, they are a minefield and some of them don't care about the performance at all.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#but-why-i-regret-php"&gt;
  &lt;/a&gt;
  But why I regret PHP?
&lt;/h2&gt;

&lt;p&gt;Let's say our initial problem, a function that returns a list of products.&lt;/p&gt;

&lt;p&gt;It is PHP&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;   &lt;span class="nv"&gt;$products&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nc"&gt;ProductRepo&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;listAll&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
   &lt;span class="c1"&gt;// show the first product if any&lt;/span&gt;
   &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$products&lt;/span&gt;&lt;span class="o"&gt;!==&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$products&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$products&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// or $products[0]['name'] if array&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There is not warranty that this code will work because the PHP language does not really know that &lt;strong&gt;$products&lt;/strong&gt; has a list of products.&lt;/p&gt;

&lt;p&gt;It is c#&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;   &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Product&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;products&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;ProductoRepo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;listAll&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
   &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;products&lt;/span&gt;&lt;span class="p"&gt;!=&lt;/span&gt;&lt;span class="k"&gt;null&lt;/span&gt; &lt;span class="p"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;products&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Count&lt;/span&gt;&lt;span class="p"&gt;()&amp;gt;&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;products&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It will always works because c# knows that the variable &lt;strong&gt;products&lt;/strong&gt; is a list of products (or null) and there is not other alternative.&lt;/p&gt;

&lt;p&gt;And it is the implementation of the function in c#&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="n"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;listAll&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Product&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;();&lt;/span&gt;
    &lt;span class="k"&gt;using&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;dbase&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;BaseExample&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="n"&gt;dbase&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Products&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;toList&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;    
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It simple and it works. There is not minefield here.&lt;/p&gt;

&lt;p&gt;It uses Entity Framework and it reads from the database, converts the value and returns a list of products. The performance hit is minimum (I tested). Why? First, the system does not need to guess the field (the field exists or it raises an error), it does not need to do type juggling and because C# is a compiled language.&lt;/p&gt;

&lt;p&gt;And it is the serialization/de-serialization&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;JsonSerializer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Serialize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;products&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;productsdes&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;JsonSerializer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Deserialize&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Product&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;gt;(&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And again simple and it works or it raises an error (there is not middle ground here). &lt;/p&gt;

</description>
    </item>
    <item>
      <title>Hacktoberfest 2021 is coming !</title>
      <author>Thomas Bnt</author>
      <pubDate>Mon, 20 Sep 2021 13:00:54 +0000</pubDate>
      <link>https://dev.to/thomasbnt/hacktoberfest-2021-is-coming-20f0</link>
      <guid>https://dev.to/thomasbnt/hacktoberfest-2021-is-coming-20f0</guid>
      <description>&lt;p&gt;This year again, &lt;strong&gt;Hacktoberfest&lt;/strong&gt; is here ! &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-date-"&gt;
  &lt;/a&gt;
  The date ?
&lt;/h2&gt;

&lt;p&gt;From October 1st to October 31st.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#who-can-join-this-event-"&gt;
  &lt;/a&gt;
  Who can join this event ?
&lt;/h2&gt;

&lt;p&gt;Contributors, maintainers, companies and event organizers !&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-i-can-participate-"&gt;
  &lt;/a&gt;
  How I can participate ?
&lt;/h2&gt;

&lt;p&gt;From October 1st to October 31st, you will have &lt;strong&gt;to contribute to the Open Source by making 4 Pull requests&lt;/strong&gt;, which will be validated by the tags &lt;code&gt;hacktoberfest-accepted&lt;/code&gt;. You will be able to follow your progress on the dashboard, which will be available on the &lt;a href="https://hacktoberfest.digitalocean.com/"&gt;Hacktoberfest website&lt;/a&gt;. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#good-posts"&gt;
  &lt;/a&gt;
  Good posts
&lt;/h2&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/navendu" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eIsX_npb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--jFIVmKdj--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/443466/d03d7c40-98b3-4ecf-8358-c29a9906e366.png" alt="navendu"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/navendu/how-to-make-non-code-contributions-to-open-source-projects-35nj" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;How to Make Non-Code Contributions to Open-Source Projects&lt;/h2&gt;
      &lt;h3&gt;Navendu Pottekkat ・ Sep 19 ・ 6 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#opensource&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#codenewbie&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#hacktoberfest&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;div class="ltag__link"&gt;
  &lt;a href="/shahednasser" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y-odgQ4n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--t1wCpb78--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/507096/fe1c31aa-a974-42d3-a189-df8fe702cd3a.jpeg" alt="shahednasser"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/shahednasser/how-to-participate-in-hacktoberfest-2021-4k9o" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;How to Participate in Hacktoberfest 2021&lt;/h2&gt;
      &lt;h3&gt;Shahed Nasser ・ Sep 16 ・ 9 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#hacktoberfest&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#opensource&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#devjournal&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;div class="ltag__link"&gt;
  &lt;a href="/navendu" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eIsX_npb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--jFIVmKdj--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/443466/d03d7c40-98b3-4ecf-8358-c29a9906e366.png" alt="navendu"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/navendu/pull-requests-like-a-pro-tips-to-make-high-quality-pull-requests-2hfk" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Pull Requests Like a PRO: Tips to Make High-Quality Pull Requests&lt;/h2&gt;
      &lt;h3&gt;Navendu Pottekkat ・ Sep 15 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#opensource&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#codenewbie&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#hacktoberfest&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;For more posts, see the tag Hacktoberfest&lt;/p&gt;


&lt;div class="ltag__tag ltag__tag__id__4074"&gt;
  
    .ltag__tag__id__4074 .follow-action-button{
      background-color: #29161f !important;
      color: #ffa368 !important;
      border-color: #29161f !important;
    }
  
    &lt;div class="ltag__tag__content"&gt;
      &lt;h2&gt;#&lt;a href="https://dev.to/t/hacktoberfest" class="ltag__tag__link"&gt;hacktoberfest&lt;/a&gt; Follow
&lt;/h2&gt;
      &lt;div class="ltag__tag__summary"&gt;
        This tag is for content related to Hacktoberfest 2020. Open source maintainers can use this tag on posts about their project seeking contributions (we recommend adding #contributorswanted also). Contributors can tag posts documenting their Hacktoberfest journey and progress. NOTE: please read the rules section for necessary details and updates on participating this year.
      &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;





&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--A29wkWrk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ky4udtnwlpp6x837gb92.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--A29wkWrk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ky4udtnwlpp6x837gb92.png" alt="Flowers"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>hacktoberfest</category>
      <category>opensource</category>
    </item>
    <item>
      <title>OpenTelemetry vs Prometheus - differences, use-cases and alternatives </title>
      <author>Ankit Anand ✨</author>
      <pubDate>Mon, 20 Sep 2021 13:00:05 +0000</pubDate>
      <link>https://dev.to/signoz/opentelemetry-vs-prometheus-differences-use-cases-and-alternatives-5ebd</link>
      <guid>https://dev.to/signoz/opentelemetry-vs-prometheus-differences-use-cases-and-alternatives-5ebd</guid>
      <description>&lt;p&gt;OpenTelemetry and Prometheus are both open-source projects under Cloud Native Computing Foundation. In this article, let us understand the key differences between the two projects and explore their advantages and shortcomings.&lt;/p&gt;




&lt;p&gt;OpenTelemetry is a vendor-agnostic instrumentation library. It provides a set of tools, APIs, and SDKs to create and manage telemetry data(logs, metrics, and traces).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bit.ly/2WkkmL4"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--od2lB_mG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8yroh39ngk6sz6tv3z9y.png" alt="SigNoz GitHub repo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Prometheus is a time-series metrics monitoring tool. Prometheus enables you to capture time-series data as metrics. These metrics can be aggregated to give insights into the behavior of your systems.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-opentelemetry"&gt;
  &lt;/a&gt;
  What is OpenTelemetry?
&lt;/h2&gt;

&lt;p&gt;OpenTelemetry is a set of API, SDKs, libraries, and integrations that is aiming to standardize the generation, collection, and management of telemetry data(logs, metrics, and traces). OpenTelemetry is a Cloud Native Computing Foundation project created after the merger of OpenCensus(from Google) and OpenTracing(from Uber).&lt;/p&gt;

&lt;p&gt;The data you collect with OpenTelemetry is vendor-agnostic and can be exported in many formats. Telemetry data has become critical to observe the state of distributed systems. With microservices and polyglot architectures, there was a need to have a global standard. OpenTelemetry aims to fill that space and is doing a great job at it thus far.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5VoP5KQk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pd9g24jdq62tqr7grvmm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5VoP5KQk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pd9g24jdq62tqr7grvmm.png" alt="OpenTelemetry Architecture"&gt;&lt;/a&gt;OpenTelemetry architecture - client libraries instrument application code to send telemetry data to a collector agent which then exports the data to a backend analysis tool.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#advantages-of-opentelemetry"&gt;
  &lt;/a&gt;
  Advantages of OpenTelemetry
&lt;/h3&gt;

&lt;p&gt;OpenTelemetry is quietly becoming the world-standard for generating telemetry data. Observability has become a critical component to gauge the health of distributed systems. And telemetry data powers observability. OpenTelemetry removes the need to depend on multiple vendors for generating telemetry data.&lt;/p&gt;

&lt;p&gt;Some of the key advantages of using OpenTelemetry are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Reduces performance overhead on your application to generate and manage telemetry data&lt;/li&gt;
&lt;li&gt;Supports multiple popular programming languages like Java, Javascript, C++, Go, Python, etc.&lt;/li&gt;
&lt;li&gt;Provides libraries and agents to auto-instrument popular libraries and frameworks requiring minimal changes to your codebase&lt;/li&gt;
&lt;li&gt;Provides OpenTelemetry Collector, which can receive, process, and export data in multiple formats&lt;/li&gt;
&lt;li&gt;Backed by technology giants like Google, Microsoft, and other big cloud vendors.&lt;/li&gt;
&lt;li&gt;Freedom to switch to new backend analysis tools by using relevant exporters&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#disadvantages-of-opentelemetry"&gt;
  &lt;/a&gt;
  Disadvantages of OpenTelemetry
&lt;/h3&gt;

&lt;p&gt;Some of the key disadvantages of using OpenTelemetry are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Project is not mature in some languages&lt;/li&gt;
&lt;li&gt;It does not provide backend storage and a visualization layer&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;But OpenTelemetry project is intentional about not providing a backend analysis tool as it aims to be vendor-neutral. You can use a tool like &lt;a href="https://signoz.io/"&gt;SigNoz&lt;/a&gt; to send your telemetry data. &lt;a href="https://signoz.io/"&gt;SigNoz&lt;/a&gt; is a full-stack open-source application monitoring and observability platform which comes with a great out of box visualization layer. It is also an open-source project.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bit.ly/2WkkmL4"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--od2lB_mG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8yroh39ngk6sz6tv3z9y.png" alt="SigNoz GitHub repo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-prometheus"&gt;
  &lt;/a&gt;
  What is Prometheus?
&lt;/h2&gt;

&lt;p&gt;Prometheus is used as a metrics monitoring tool. It was initially developed at SoundCloud in 2012 before being released as an open-source project. It got accepted into the CloudNative Computing Foundation in 2016 and was the second project to graduate from the foundation, following Kubernetes.&lt;/p&gt;

&lt;p&gt;Prometheus is a good tool for monitoring any kind of time-series data. By time-series data, we mean metrics that change over time. For example, requests per second on an endpoint.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#key-features-of-prometheus"&gt;
  &lt;/a&gt;
  Key features of Prometheus
&lt;/h3&gt;

&lt;p&gt;Some of the key features of Prometheus are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;multi-dimensional data model&lt;/li&gt;
&lt;li&gt;a query language called PromQL to query the metrics data collected&lt;/li&gt;
&lt;li&gt;pull model data collection over HTTP&lt;/li&gt;
&lt;li&gt;an alert manager to handle alerts&lt;/li&gt;
&lt;li&gt;Basic visualization layer but can be combined with Grafana to create rich visualizations&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lJwqu0E8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yvul1mok0dgc8wvakdsi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lJwqu0E8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yvul1mok0dgc8wvakdsi.png" alt="Prometheus Architecture"&gt;&lt;/a&gt;Architecture of Prometheus (Source: Prometheus website)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#disadvantages-of-prometheus"&gt;
  &lt;/a&gt;
  Disadvantages of Prometheus
&lt;/h3&gt;

&lt;p&gt;Prometheus is a great metrics monitoring tool, but that's it. It is not a full-stack application monitoring tool like &lt;a href="https://signoz.io/"&gt;SigNoz&lt;/a&gt;. Some of the disadvantages of using Prometheus are listed down below:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Prometheus only captures metrics. For creating a robust monitoring framework, you will need to track metrics, logs, and traces. For example, a tool like SigNoz captures both metrics and traces(log management in product roadmap).&lt;/li&gt;
&lt;li&gt;Prometheus is designed for a single machine. It cannot be scaled horizontally.&lt;/li&gt;
&lt;li&gt;It takes time and effort to set up Prometheus for a great visualization. It involves setting up exporters and Grafana panels.&lt;/li&gt;
&lt;li&gt;Prometheus does not support root cause analysis as it does not support traces.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#key-differences-between-opentelemetry-and-prometheus"&gt;
  &lt;/a&gt;
  Key differences between OpenTelemetry and Prometheus
&lt;/h2&gt;

&lt;p&gt;From the above description, you might have a good idea about the differences between OpenTelemetry and Prometheus. Let us summarize the key differences between OpenTelemetry and Prometheus below:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;OpenTelemetry helps you to instrument code to generate telemetry data. In comparison, Prometheus is a metrics monitoring tool. Both Prometheus and OpenTelemetry provide client libraries to instrument your code, but OpenTelemetry client libraries provide a one-stop solution to generate logs, metrics, and traces. Prometheus can only generate metrics.&lt;/li&gt;
&lt;li&gt;Prometheus comes with a visualization layer, although basic. OpenTelemetry does not aim to provide a visualization layer, and the data collected with OpenTelemetry can be sent to any backend analysis tool like SigNoz.&lt;/li&gt;
&lt;li&gt;OpenTelemetry provides the fundamental layer to build your observability practices, which is now critical for microservices-based architecture. If you use Prometheus in your observability stack, you will have to select other tools for traces and logs.&lt;/li&gt;
&lt;li&gt;Prometheus provides short-term storage, and users can use solutions like Cortex or Thanos for long-term data storage. OpenTelemetry does not provide any storage solution. It provides exporters who can be configured to send data to the backend analysis tool of your choice.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#opentelemetry-and-signoz-the-combo-fit-to-replace-prometheus"&gt;
  &lt;/a&gt;
  OpenTelemetry and SigNoz - the combo fit to replace Prometheus
&lt;/h2&gt;

&lt;p&gt;With Prometheus, you can monitor metrics. But your engineering teams will never be able to identify the root cause of issues in your application using just metrics. For that, you need distributed tracing.&lt;/p&gt;

&lt;p&gt;OpenTelemetry is becoming the world standard for instrumenting application code due to its multi-language support and ease of use. But OpenTelemetry helps only to generate and collect telemetry data. You need to export the telemetry data to a backend analysis tool so that your teams can store, query, and visualize the collected data.&lt;/p&gt;

&lt;p&gt;And that's where &lt;a href="https://signoz.io/"&gt;SigNoz&lt;/a&gt; comes into the picture. SigNoz uses OpenTelemetry natively to instrument application codes. OpenTelemetry collector then sends the data to the SigNoz backend, where users have the option to choose between ClickHouse or Kafka+Druid as a storage option.&lt;/p&gt;

&lt;p&gt;SigNoz comes with out of box visualization of things like RED metrics. There is a unified UI of metrics and traces, unlike Prometheus, so that you can easily identify the root cause of issues causing things like latency in your apps.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8fEE-jnY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/azk0yga369uv5nl8aw1c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8fEE-jnY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/azk0yga369uv5nl8aw1c.png" alt="SigNoz dashboard showing the popular RED metrics for application performance monitoring."&gt;&lt;/a&gt;Measure things like application latency, requests per sec, error percentage and see your top endpoints&lt;/p&gt;

&lt;p&gt;You can check out SigNoz's GitHub repo here 👇&lt;br&gt;
&lt;a href="https://bit.ly/2WkkmL4"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--od2lB_mG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8yroh39ngk6sz6tv3z9y.png" alt="SigNoz GitHub repo"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Implementing a Math Interpreter using C#: #Part1</title>
      <author>John Nyingi</author>
      <pubDate>Mon, 20 Sep 2021 12:49:11 +0000</pubDate>
      <link>https://dev.to/j0nimost/implementing-a-math-interpreter-using-c-part1-2mf</link>
      <guid>https://dev.to/j0nimost/implementing-a-math-interpreter-using-c-part1-2mf</guid>
      <description>&lt;h2&gt;
  &lt;a href="#definition"&gt;
  &lt;/a&gt;
  Definition
&lt;/h2&gt;

&lt;p&gt;Let's start by breaking down some few phrases and terms used&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Interpreter: An interpreter is a program that interprets code to machine code. Basically, in our case the interpreter will take math expressions and convert them to C# code then to Machine code.&lt;/li&gt;
&lt;li&gt;&lt;p&gt;AST: An &lt;strong&gt;Abstract Syntax Tree&lt;/strong&gt; is a graph representation of statements or expressions. &lt;br&gt;
In our case, a simple math expression &lt;code&gt;2+5*4&lt;/code&gt; can be represented in the below AST graph&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DfjRMccw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e8986cg077v4t91ygnxd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DfjRMccw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e8986cg077v4t91ygnxd.png" alt="AST TREE"&gt;&lt;/a&gt;&lt;br&gt;
The expression &lt;code&gt;5*4&lt;/code&gt; is processed first then the result is added to &lt;code&gt;2&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Tokens: These are objects used to represent each element in a program. Given our expression &lt;code&gt;2+5*4&lt;/code&gt;, the tokens are &lt;code&gt;NUMBER ADD NUMBER MULTIPLY NUMBER&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Lexer: This is a function that converts the expression into Tokens&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Parser: This is a function that converts the Lexer'ed tokens into AST. This function sets up the hiereachy of execution.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Expression, Factor and Terms are as shown below;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HRaF2xl5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ekc1yc39cpmbhkp62u7a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HRaF2xl5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ekc1yc39cpmbhkp62u7a.png" alt="Expression"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#what-will-i-be-using"&gt;
  &lt;/a&gt;
  What will I be using?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Visual Studio&lt;/li&gt;
&lt;li&gt;Dotnet Runtime &lt;code&gt;3.1&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Git and Github&lt;/li&gt;
&lt;li&gt;Travis-CI&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#the-setup"&gt;
  &lt;/a&gt;
  The Setup
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Open visual studio and create a console application
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7mC-ZYJ4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sz62e7gl9uov2x3dwj4u.png" alt="image"&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Give it a name&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ciY7rnwq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pqjvbsek8xntunkyxz5o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ciY7rnwq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pqjvbsek8xntunkyxz5o.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Select a .Net core version. I'll be using &lt;code&gt;3.1&lt;/code&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--O1qiFVB---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e7xcxvzig6x3kd9zghor.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--O1qiFVB---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e7xcxvzig6x3kd9zghor.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#init"&gt;
  &lt;/a&gt;
  Init
&lt;/h2&gt;

&lt;p&gt;So lets give our console application a REPL like interface. To achieve this we will capture user inputs and output the same. So in the &lt;code&gt;Program.cs&lt;/code&gt; change the main method to the below code&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;Main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Welcome to Calcy, a nifty and easy to use math interpreter."&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"&amp;gt;&amp;gt; "&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;input&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ReadLine&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
                &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"&amp;gt;&amp;gt; {0}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So we add the above code to achieve this, it gets a user input and outputs the same.&lt;br&gt;
It would be nice if we could allow users to exit the console using the &lt;code&gt;exit()&lt;/code&gt;phrase.We can do this by adding the below code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Welcome to Calcy, a nifty and easy to use math interpreter."&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"&amp;gt;&amp;gt; "&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;input&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ReadLine&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

                &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;input&lt;/span&gt; &lt;span class="p"&gt;==&lt;/span&gt; &lt;span class="s"&gt;"exit()"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"&amp;gt;&amp;gt; {0}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So now we have fully functional REPL interface.&lt;br&gt;
In the next chapter we are going to&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Add Tokens&lt;/li&gt;
&lt;li&gt;Add a Lexer&lt;/li&gt;
&lt;li&gt;Add Unit Tests&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>algorithms</category>
      <category>csharp</category>
    </item>
  </channel>
</rss>
