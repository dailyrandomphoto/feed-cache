<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Web Designer Roadmap</title>
      <author>ADMIN</author>
      <pubDate>Thu, 02 Sep 2021 08:20:17 +0000</pubDate>
      <link>https://dev.to/csshackingg/web-designer-roadmap-5hem</link>
      <guid>https://dev.to/csshackingg/web-designer-roadmap-5hem</guid>
      <description>&lt;h2 id="what-is-a-web-designer"&gt;What is a Web Designer?&lt;/h2&gt;
&lt;p&gt;Are you both creative and technically inclined? You may want to consider a career as a web designer!&lt;/p&gt;
&lt;p&gt;Web designers build or redesign websites. They understand what it takes to make a website functional and easy to use, but also understand what is needed to make it aesthetically appealing to the user.&lt;/p&gt;
&lt;p&gt;Web design is a rapidly growing industry, as digital media has become part of everyone's lives and people rely on the web for their communications, information, shopping, social life, and more.&lt;/p&gt;
&lt;p&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/web-designers-roadmap-2021/&amp;amp;ved=2ahUKEwjqlebL7qryAhUF7HMBHVCiCxQQFnoECBoQAQ&amp;amp;usg=AOvVaw2Oo-ikwNXhEKOFAMaulAH4"&gt;Web Designer Roadmap&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;









</description>
    </item>
    <item>
      <title>Top 20 JavaScript tips and tricks for Every Front-end Developer</title>
      <author>ADMIN</author>
      <pubDate>Thu, 02 Sep 2021 08:19:45 +0000</pubDate>
      <link>https://dev.to/csshackingg/top-20-javascript-tips-and-tricks-for-every-front-end-developer-3kbk</link>
      <guid>https://dev.to/csshackingg/top-20-javascript-tips-and-tricks-for-every-front-end-developer-3kbk</guid>
      <description>&lt;h3&gt;Convenient and useful techniques to reduce the lines of code and pace up your Dev Work!&lt;/h3&gt;
&lt;p&gt;In our daily tasks, we get to write functions such as sorting, searching, finding unique values, passing parameters, swapping values etc, so here I present my list of shorthand techniques to write all of them as a Pro!‚úåüèª&lt;/p&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WgxQe1g9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vh2m04o3fgw3a6i8bzha.jpg"&gt;&lt;img alt="Increase Your Performance" src="https://res.cloudinary.com/practicaldev/image/fetch/s--ftNfvGUp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--WgxQe1g9--/c_limit%252Cf_auto%252Cfl_progressive%252Cq_auto%252Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vh2m04o3fgw3a6i8bzha.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;JavaScript is truly an awesome languageüíõ to learn and work with. And there can be more than one approach to reach to the same solution for given problem. In this article, we will discuss only the quickest ones.üöÄ&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;These approaches will definitely help you in:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Reducing the number of LOC(lines of code),&lt;/li&gt;
&lt;li&gt;Coding Competitions,&lt;/li&gt;
&lt;li&gt;Hackathons or&lt;/li&gt;
&lt;li&gt;Other time bound tasks.‚è±&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Most of these JavaScript Hacks uses techniques from ECMAScript6(ES2015) onwards, though the latest version is ECMAScript11(ES2020).&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note: All below tricks have been tested on the Console of Google Chrome.&lt;/em&gt;&lt;/p&gt;
&lt;br&gt;Read More: &lt;span&gt;&lt;b&gt;&lt;a href="https://www.codelivly.com/top-20-javascript-tips-and-tricks/"&gt;Top 20 JavaScript tips and tricks to increase your Speed and Efficiency&lt;/a&gt;&lt;/b&gt;&lt;/span&gt;

</description>
    </item>
    <item>
      <title>Top 7 JavaScript Array sort() Method Use Cases</title>
      <author>Palash Mondal</author>
      <pubDate>Thu, 02 Sep 2021 08:10:27 +0000</pubDate>
      <link>https://dev.to/palashmon/top-7-javascript-array-sort-method-use-cases-fp9</link>
      <guid>https://dev.to/palashmon/top-7-javascript-array-sort-method-use-cases-fp9</guid>
      <description>&lt;p&gt;Hi Everyone üëã&lt;/p&gt;

&lt;p&gt;Today I wanted to share some of the most common use cases for Array &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort"&gt;&lt;code&gt;sort()&lt;/code&gt;&lt;/a&gt; method in JavaScript. The &lt;code&gt;sort()&lt;/code&gt; method sorts the elements of an array and returns the sorted array, and no copy is made. The default sort order is ascending. In this article, we will see how we can utilise its power to the fullest. üöÄ&lt;/p&gt;

&lt;p&gt;Let's start!&lt;br&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table of Contents &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#chapter-1"&gt;Sort an Array of Strings&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#chapter-2"&gt;Case-insensitive Sort an Array of Strings&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#chapter-3"&gt;Sort an Array of Numbers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#chapter-4"&gt;Sort an Array of Date Strings&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#chapter-5"&gt;Sort an Array except for one Element&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#chapter-6"&gt;Sort Array of Objects by Property Value&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#chapter-7"&gt;Sort Array of Objects by Multiple Property values&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;



&lt;h3&gt;
  &lt;a href="#1-sort-an-array-of-strings"&gt;
  &lt;/a&gt;
  1. Sort an Array of Strings &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;
&lt;h4&gt;
  &lt;a href="#ascending-a-to-z"&gt;
  &lt;/a&gt;
  Ascending (A to Z):
&lt;/h4&gt;

&lt;p&gt;We can sort a simple array of strings using a functionless array &lt;code&gt;sort()&lt;/code&gt; method like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;fruits&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Apples&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Watermelon&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Bananas&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Cherries&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="nx"&gt;fruits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;    &lt;span class="c1"&gt;// üëà default sort&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;fruits&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// ["Apples", "Bananas", "Cherries", "Watermelon"]&lt;/span&gt;
&lt;span class="c1"&gt;// A ‚Üí B ‚Üí C ‚Üí W&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#descending-z-to-a"&gt;
  &lt;/a&gt;
  Descending (Z to A):
&lt;/h4&gt;

&lt;p&gt;To sort the array of strings in descending order we can use String &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/localeCompare"&gt;&lt;code&gt;localeCompare()&lt;/code&gt;&lt;/a&gt; method like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;fruits&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Apples&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Watermelon&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Bananas&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Cherries&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="nx"&gt;fruits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;localeCompare&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;fruits&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// ["Watermelon", "Cherries", "Bananas", "Apples"]&lt;/span&gt;
&lt;span class="c1"&gt;// W ‚Üí C ‚Üí B ‚Üí A&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;‚Üë &lt;a href="#go-to-top"&gt;Back to top&lt;/a&gt;&lt;/p&gt;



&lt;h3&gt;
  &lt;a href="#2-caseinsensitive-sort-an-array-of-strings"&gt;
  &lt;/a&gt;
  2. Case-insensitive Sort an Array of Strings &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;
&lt;h4&gt;
  &lt;a href="#issue"&gt;
  &lt;/a&gt;
  Issue:
&lt;/h4&gt;

&lt;p&gt;Let us first see what happens when we do a default sort for an array containing both lowercase and uppercase string elements.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;fruits&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Apples&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Watermelon&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Bananas&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;cherries&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="nx"&gt;fruits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; 

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;fruits&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// ["Apples", "Bananas", "Watermelon", "cherries"]&lt;/span&gt;
&lt;span class="c1"&gt;// A ‚Üí B ‚Üí W ‚Üí c&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see above output, with default sorting word &lt;code&gt;Watermelon&lt;/code&gt; starting with a uppercase &lt;code&gt;W&lt;/code&gt; is coming before &lt;code&gt;cherries&lt;/code&gt; starting with a lowercase &lt;code&gt;c&lt;/code&gt;. This happens because strings are sorted according to each character's Unicode code point value. Using string &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/charCodeAt"&gt;&lt;code&gt;charCodeAt()&lt;/code&gt;&lt;/a&gt; we can get the UTF-16 code unit for each character and then see that:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;C&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;charCodeAt&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;   &lt;span class="c1"&gt;// 67&lt;/span&gt;
&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;W&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;charCodeAt&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;   &lt;span class="c1"&gt;// 87&lt;/span&gt;
&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;c&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;charCodeAt&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;   &lt;span class="c1"&gt;// 99&lt;/span&gt;

&lt;span class="c1"&gt;// 67 &amp;lt; 87 &amp;lt; 99&lt;/span&gt;
&lt;span class="c1"&gt;// C ‚Üí W ‚Üí c&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#ascending-aa-to-zz"&gt;
  &lt;/a&gt;
  Ascending (aA to zZ):
&lt;/h4&gt;

&lt;p&gt;Using case-insensitive sorting we can make sure that we get a properly sorted array, no matter what the casing for each string element in the array is:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;fruits&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Apples&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Watermelon&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Bananas&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;cherries&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="nx"&gt;fruits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toLowerCase&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;localeCompare&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toLowerCase&lt;/span&gt;&lt;span class="p"&gt;()));&lt;/span&gt; 

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;fruits&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// ["Apples", "Bananas", "cherries", "Watermelon"]&lt;/span&gt;
&lt;span class="c1"&gt;// A ‚Üí B ‚Üí c ‚Üí W &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Or,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;fruits&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Apples&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Watermelon&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Bananas&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;cherries&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="nx"&gt;fruits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;localeCompare&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;en&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;sensitivity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;base&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}));&lt;/span&gt; 

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;fruits&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// ["Apples", "Bananas", "cherries", "Watermelon"]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#descending-zz-to-aa"&gt;
  &lt;/a&gt;
  Descending (zZ to aA):
&lt;/h4&gt;

&lt;p&gt;For case-insensitive sorting of array of strings in descending order we can simply interchange &lt;code&gt;a&lt;/code&gt; &amp;amp; &lt;code&gt;b&lt;/code&gt; element in the sorting compare function like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;fruits&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Apples&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Watermelon&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Bananas&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;cherries&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="nx"&gt;fruits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toLowerCase&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;localeCompare&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toLowerCase&lt;/span&gt;&lt;span class="p"&gt;()));&lt;/span&gt; 

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;fruits&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// ["Watermelon", "cherries", "Bananas", "Apples"]&lt;/span&gt;
&lt;span class="c1"&gt;// W ‚Üí c ‚Üí B ‚Üí A &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Or,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;fruits&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Apples&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Watermelon&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Bananas&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;cherries&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="nx"&gt;fruits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;localeCompare&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;en&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;sensitivity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;base&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}));&lt;/span&gt; 

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;fruits&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// ¬†["Apples", "Bananas", "cherries", "Watermelon"]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;‚Üë &lt;a href="#go-to-top"&gt;Back to top&lt;/a&gt;&lt;/p&gt;



&lt;h3&gt;
  &lt;a href="#3-sort-an-array-of-numbers"&gt;
  &lt;/a&gt;
  3. Sort an Array of Numbers &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;
&lt;h4&gt;
  &lt;a href="#issue"&gt;
  &lt;/a&gt;
  Issue:
&lt;/h4&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;numbers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="nx"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;    &lt;span class="c1"&gt;// üëà default sort&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;numbers&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// ¬†[1, 10, 2, 3, 4, 5]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;In the above example, we can see that if we use a default sort on the &lt;code&gt;numbers&lt;/code&gt; array we are getting an incorrect output as &lt;code&gt;10&lt;/code&gt; is coming before &lt;code&gt;2&lt;/code&gt; when it should be at the last position. This happens because array elements are sorted by &lt;strong&gt;converting them to strings&lt;/strong&gt; and comparing strings in UTF-16 code units order. Thus in a numeric sort, 2 should come before 10, but because numbers are converted to strings, &lt;code&gt;"10"&lt;/code&gt; comes before &lt;code&gt;"2"&lt;/code&gt; in the Unicode order.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#ascending"&gt;
  &lt;/a&gt;
  Ascending:
&lt;/h4&gt;

&lt;p&gt;We can sort an array of numbers in ascending order using a simple compare function like this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;numbers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="nx"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   &lt;span class="c1"&gt;// üëà compare function, simply return a - b&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;numbers&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// [1, 2, 3, 4, 5, 10]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#descending"&gt;
  &lt;/a&gt;
  Descending:
&lt;/h4&gt;

&lt;p&gt;To sort an array of numbers in descending order we can simply interchange &lt;code&gt;a&lt;/code&gt; &amp;amp; &lt;code&gt;b&lt;/code&gt; elements in the sorting compare function like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;numbers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="nx"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   &lt;span class="c1"&gt;// üëà interchange `a` &amp;amp; `b` and return b - a&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;numbers&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// [10, 5, 4, 3, 2, 1]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;‚Üë &lt;a href="#go-to-top"&gt;Back to top&lt;/a&gt;&lt;/p&gt;



&lt;h3&gt;
  &lt;a href="#4-sort-an-array-of-date-strings"&gt;
  &lt;/a&gt;
  4. Sort an Array of Date Strings &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;
&lt;h4&gt;
  &lt;a href="#issue"&gt;
  &lt;/a&gt;
  Issue:
&lt;/h4&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Date string in YYYY-MM-D format&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;dates&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;2021-08-1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;2021-08-4&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;2021-08-10&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;2021-08-2&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="nx"&gt;dates&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;    &lt;span class="c1"&gt;// üëà default sort&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;dates&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// ["2021-08-1", "2021-08-10", "2021-08-2", "2021-08-4"]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;In the above example, we can see that the date string &lt;code&gt;"2021-08-10"&lt;/code&gt; is coming before &lt;code&gt;"2021-08-2"&lt;/code&gt; which is not the expected output. It happens because of the same reason when sorting number array, where we found that &lt;code&gt;10&lt;/code&gt; was coming before &lt;code&gt;2&lt;/code&gt; when using default sorting.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#ascending"&gt;
  &lt;/a&gt;
  Ascending:
&lt;/h4&gt;

&lt;p&gt;To properly sort an array of date strings we can create a &lt;code&gt;Date&lt;/code&gt; object by passing the date string to a &lt;code&gt;new Date()&lt;/code&gt; inside the compare function like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;dates&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;2021-08-1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;2021-08-4&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;2021-08-10&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;2021-08-2&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="nx"&gt;dates&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;  &lt;span class="c1"&gt;// üëà using `Date` constructor here&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;dates&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// ["2021-08-1", "2021-08-2", "2021-08-4", "2021-08-10"]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#descending"&gt;
  &lt;/a&gt;
  Descending:
&lt;/h4&gt;

&lt;p&gt;For descending order we can simply interchange &lt;code&gt;a&lt;/code&gt; &amp;amp; &lt;code&gt;b&lt;/code&gt; elements in the sorting compare function like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;dates&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;2021-08-1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;2021-08-4&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;2021-08-10&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;2021-08-2&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="nx"&gt;dates&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;  &lt;span class="c1"&gt;// üëà  here&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;dates&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// ["2021-08-10", "2021-08-4", "2021-08-2", "2021-08-1"]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;‚Üë &lt;a href="#go-to-top"&gt;Back to top&lt;/a&gt;&lt;/p&gt;



&lt;h3&gt;
  &lt;a href="#5-sort-an-array-except-for-one-element"&gt;
  &lt;/a&gt;
  5. Sort an Array except for one Element &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Let say we have a simple array like this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;fruits&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Select&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Apples&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Watermelon&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Bananas&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Cherries&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and we want to sort all elements in this array, except &lt;code&gt;"Select"&lt;/code&gt;. So, no matter if we are sorting the array in ascending/descending order we should always have &lt;code&gt;"Select"&lt;/code&gt; at the first position. For this simple demo, we are assuming there are no duplicates in this array and each element starts with an uppercase and the rest of the letters are in lowercase. So we are not doing any case-insensitive sorting just to keep things simple.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#ascending"&gt;
  &lt;/a&gt;
  Ascending:
&lt;/h4&gt;

&lt;p&gt;We can do this in ascending order by adding a little bit of extra logic to the sort compare function like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;fruits&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Select&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Apples&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Watermelon&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Bananas&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Cherries&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="nx"&gt;fruits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="c1"&gt;// If the first element value is "Select",&lt;/span&gt;
  &lt;span class="c1"&gt;// then keep it before second element. a &amp;lt; b&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Select&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;// If second element value is "Select",&lt;/span&gt;
  &lt;span class="c1"&gt;// then keep it before first element. a &amp;gt; b&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Select&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;// Else default sorting of string&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;localeCompare&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;fruits&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// ["Select", "Apples", "Bananas", "Cherries", "Watermelon"]&lt;/span&gt;
&lt;span class="c1"&gt;// ‚Üë "Select" is at the first position and rest of the element is sorted&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#descending"&gt;
  &lt;/a&gt;
  Descending:
&lt;/h4&gt;

&lt;p&gt;For descending order logic we just need to interchange &lt;code&gt;a&lt;/code&gt; &amp;amp; &lt;code&gt;b&lt;/code&gt; for the &lt;code&gt;localeCompare&lt;/code&gt; logic and we get the desired output.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;fruits&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Select&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Apples&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Watermelon&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Bananas&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Cherries&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="nx"&gt;fruits&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Select&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Select&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;localeCompare&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="c1"&gt;// üëà interchange `a` &amp;amp; `b` here&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;fruits&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// ["Select", "Watermelon", "Cherries", "Bananas", "Apples"]&lt;/span&gt;
&lt;span class="c1"&gt;// ‚Üë "Select" is still at the first position and rest of the element is sorted&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;‚Üë &lt;a href="#go-to-top"&gt;Back to top&lt;/a&gt;&lt;/p&gt;



&lt;h3&gt;
  &lt;a href="#6-sort-array-of-objects-by-property-value"&gt;
  &lt;/a&gt;
  6. Sort Array of Objects by Property Value &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;
&lt;h4&gt;
  &lt;a href="#ascending"&gt;
  &lt;/a&gt;
  Ascending:
&lt;/h4&gt;

&lt;p&gt;We can sort an array of objects by a property value like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;inventory&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Bananas&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;quantity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Apples&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="na"&gt;quantity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Grapes&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="na"&gt;quantity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="c1"&gt;// Sort by the "quantity" property value&lt;/span&gt;
&lt;span class="nx"&gt;inventory&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;quantity&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;quantity&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="c1"&gt;// üëà here&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;inventory&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// Output&lt;/span&gt;
&lt;span class="cm"&gt;/*
[
  { "name": "Grapes",  "quantity": 2 },
  { "name": "Bananas", "quantity": 5 },
  { "name": "Apples",  "quantity": 10 }
]
*/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we can see that in the above array after sorting in ascending order, the object with &lt;code&gt;name&lt;/code&gt; property value &lt;code&gt;"Grapes"&lt;/code&gt; is coming first as its &lt;code&gt;quantity&lt;/code&gt; value is lowest &lt;code&gt;2&lt;/code&gt;, then we have an object with &lt;code&gt;quantity&lt;/code&gt; value &lt;code&gt;5&lt;/code&gt; and then &lt;code&gt;10&lt;/code&gt;.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#descending"&gt;
  &lt;/a&gt;
  Descending:
&lt;/h4&gt;

&lt;p&gt;For descending order logic we just need to interchange &lt;code&gt;a&lt;/code&gt; &amp;amp; &lt;code&gt;b&lt;/code&gt; in the sort compare function like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;inventory&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Bananas&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;quantity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Apples&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="na"&gt;quantity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Grapes&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="na"&gt;quantity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="c1"&gt;// Sort by the "quantity" property value&lt;/span&gt;
&lt;span class="nx"&gt;inventory&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;quantity&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;quantity&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="c1"&gt;// üëà interchange `a` &amp;amp; `b` here&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;inventory&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// Output&lt;/span&gt;
&lt;span class="cm"&gt;/*
[
  { "name": "Apples",  "quantity": 10 },
  { "name": "Bananas", "quantity": 5 },
  { "name": "Grapes",  "quantity": 2 }
]
*/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;‚Üë &lt;a href="#go-to-top"&gt;Back to top&lt;/a&gt;&lt;/p&gt;



&lt;h3&gt;
  &lt;a href="#7-sort-array-of-objects-by-multiple-property-values"&gt;
  &lt;/a&gt;
  7. Sort Array of Objects by Multiple Property values &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;
&lt;h4&gt;
  &lt;a href="#ascending"&gt;
  &lt;/a&gt;
  Ascending:
&lt;/h4&gt;

&lt;p&gt;Let say we have an array like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;inventory&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Bananas&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Yellow&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;quantity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Apples&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Red&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;quantity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Apples&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Green&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;quantity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Grapes&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Green&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;quantity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Apples&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Yellow&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;quantity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Our requirement is:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;First, we need to sort the &lt;code&gt;name&lt;/code&gt; property values in ascending order.&lt;/li&gt;
&lt;li&gt;Then, we need to sort the &lt;code&gt;quantity&lt;/code&gt; property values in ascending order.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;So, we are looking for output like:&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;name&lt;/th&gt;
&lt;th&gt;quantity&lt;/th&gt;
&lt;th&gt;color&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Apples&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;Red&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Apples&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;Yellow&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Apples&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;Green&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Bananas&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;Yellow&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Grapes&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;Green&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;So, you can see &lt;code&gt;name&lt;/code&gt; column is sorted first alphabetically. Then for each having the same &lt;code&gt;name&lt;/code&gt; value we sort them by &lt;code&gt;quantity&lt;/code&gt; column.&lt;/p&gt;

&lt;p&gt;Thus we have&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// First&lt;/span&gt;
&lt;span class="nx"&gt;Apples&lt;/span&gt; &lt;span class="err"&gt;‚Üí&lt;/span&gt; &lt;span class="nx"&gt;Bananas&lt;/span&gt; &lt;span class="err"&gt;‚Üí&lt;/span&gt; &lt;span class="nx"&gt;Grapes&lt;/span&gt; 
&lt;span class="nx"&gt;A&lt;/span&gt; &lt;span class="err"&gt;‚Üí&lt;/span&gt; &lt;span class="nx"&gt;B&lt;/span&gt; &lt;span class="err"&gt;‚Üí&lt;/span&gt; &lt;span class="nx"&gt;G&lt;/span&gt;

&lt;span class="c1"&gt;// Then by quantity &lt;/span&gt;
&lt;span class="nx"&gt;For&lt;/span&gt; &lt;span class="nx"&gt;Apples&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="err"&gt;‚Üí&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="err"&gt;‚Üí&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
&lt;span class="nx"&gt;For&lt;/span&gt; &lt;span class="nx"&gt;Bananas&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;
&lt;span class="nx"&gt;For&lt;/span&gt; &lt;span class="nx"&gt;Grapes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;

&lt;span class="c1"&gt;// Final output for quantity column&lt;/span&gt;
&lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="err"&gt;‚Üí&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="err"&gt;‚Üí&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="err"&gt;‚Üí&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="err"&gt;‚Üí&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Though this logic seems super complex, but its solution is super easy:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;inventory&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Bananas&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Yellow&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;quantity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Apples&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Red&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;quantity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Apples&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Green&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;quantity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Grapes&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Green&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;quantity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Apples&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Yellow&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;quantity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="c1"&gt;// Sort by the "name" property value, then by "quantity"&lt;/span&gt;
&lt;span class="nx"&gt;inventory&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;compareNames&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;localeCompare&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;compareQuantity&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;quantity&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;quantity&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;// First compare using names&lt;/span&gt;
  &lt;span class="c1"&gt;// If values for "name" porperty for both a &amp;amp; b is same,&lt;/span&gt;
  &lt;span class="c1"&gt;// then compare by "quantity" property value&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;compareNames&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;compareQuantity&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="c1"&gt;// Output is the same as shown in the above table&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Or, we can also write this in a one-line like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;inventory&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;localeCompare&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;quantity&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;quantity&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and we still get the same output.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#descending"&gt;
  &lt;/a&gt;
  Descending:
&lt;/h4&gt;

&lt;p&gt;Let say our requirement is now something like:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;First, we need to sort the &lt;code&gt;name&lt;/code&gt; property values in ascending order.&lt;/li&gt;
&lt;li&gt;Then, we need to sort the &lt;code&gt;quantity&lt;/code&gt; property values in descending order.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For this we just need to interchange &lt;code&gt;a&lt;/code&gt; &amp;amp; &lt;code&gt;b&lt;/code&gt; in the sort compare function for just &lt;code&gt;quantity&lt;/code&gt; property only like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Sort by the "name" property value, then by "quantity" descending order&lt;/span&gt;
&lt;span class="nx"&gt;inventory&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;compareNames&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;localeCompare&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;compareQuantity&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;quantity&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;quantity&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  &lt;span class="c1"&gt;// üëà interchange `a` &amp;amp; `b` here&lt;/span&gt;

  &lt;span class="c1"&gt;// First compare using names&lt;/span&gt;
  &lt;span class="c1"&gt;// If values for "name" porperty for both a &amp;amp; b is same,&lt;/span&gt;
  &lt;span class="c1"&gt;// then compare by "quantity" property value&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;compareNames&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;compareQuantity&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Or, just in one-line like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;inventory&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;localeCompare&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;quantity&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;quantity&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And we get output like:&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;name&lt;/th&gt;
&lt;th&gt;quantity&lt;/th&gt;
&lt;th&gt;color&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Apples&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;Green&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Apples&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;Yellow&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Apples&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;Red&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Bananas&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;Yellow&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Grapes&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;Green&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;‚Üë &lt;a href="#go-to-top"&gt;Back to top&lt;/a&gt;&lt;/p&gt;



&lt;h3&gt;
  &lt;a href="#wrap-up"&gt;
  &lt;/a&gt;
  Wrap Up
&lt;/h3&gt;

&lt;p&gt;I hope you will find this post useful and learn something new in the process. If you have any comments, additions or questions please let me know in the comment section.&lt;/p&gt;

&lt;p&gt;Feedback, suggestions, and recommendations are highly welcome. This will really help me a lot and motivate me to share more content like this in future also. üòÄ&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#happy-coding"&gt;
  &lt;/a&gt;
  Happy Coding!
&lt;/h4&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>webdev</category>
      <category>productivity</category>
    </item>
    <item>
      <title>All CSS Properties You Need to Know to Build a Website</title>
      <author>ADMIN</author>
      <pubDate>Thu, 02 Sep 2021 07:48:02 +0000</pubDate>
      <link>https://dev.to/csshackingg/all-css-properties-you-need-to-know-to-build-a-website-3k5g</link>
      <guid>https://dev.to/csshackingg/all-css-properties-you-need-to-know-to-build-a-website-3k5g</guid>
      <description>&lt;p&gt;Whether you're at the beginning of your CSS journey or somewhere else, you got to admit‚Ää-‚Ääa number of CSS properties is massive.&lt;/p&gt;
&lt;p&gt;And it's easy to confuse yourself in that vast sea.¬†&lt;/p&gt;
&lt;p&gt;You're copying code from StackOverflow until you find a solution that fits. But how will that scale? Why does it even work?&lt;/p&gt;
&lt;p&gt;Most of the time, you don't care about the answer. You just focus on the result.&lt;/p&gt;
&lt;p&gt;When building a website, some of the CSS properties are must-haves; yet, it's hard to recognize them.¬†&lt;/p&gt;
&lt;p&gt;This article exists to help you solve the most common CSS problems while building a website.&lt;/p&gt;
&lt;p&gt;Let's dive into properties you cannot avoid.¬†&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Read More&lt;/b&gt;: &lt;b&gt;&lt;a href="https://www.google.co.in/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/all-css-properties-you-need-to-know-to-build-a-website/&amp;amp;ved=2ahUKEwj6pf2G5t_yAhXJyjgGHRJoC1sQFnoECAMQAQ&amp;amp;usg=AOvVaw2_ALco9oEYEYfcDMBxpqL0website/&amp;amp;ved=2ahUKEwia6eSP5t_yAhWrzDgGHYvHCfgQFnoECAQQAQ&amp;amp;usg=AOvVaw2_ALco9oEYEYfcDMBxpqL0"&gt;All CSS Properties You Need to Know to Build a Website&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Best CSS SHORTHAND Properties</title>
      <author>ADMIN</author>
      <pubDate>Thu, 02 Sep 2021 07:44:09 +0000</pubDate>
      <link>https://dev.to/csshackingg/best-css-shorthand-properties-26l</link>
      <guid>https://dev.to/csshackingg/best-css-shorthand-properties-26l</guid>
      <description>&lt;h1&gt;Shorthand properties&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Shorthand properties&lt;/em&gt;&lt;/strong&gt;¬†are CSS properties that let you set the values of multiple other CSS properties simultaneously. Using a shorthand property, you can write more concise (and often more readable) style sheets, saving time and energy.&lt;/p&gt;
&lt;p&gt;The CSS specification defines shorthand properties to group the definition of common properties acting on the same theme. For instance, the CSS¬†&lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/background"&gt;&lt;code&gt;background&lt;/code&gt;&lt;/a&gt;¬†property is a shorthand property that's able to define the values of¬†&lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/background-color"&gt;&lt;code&gt;background-color&lt;/code&gt;&lt;/a&gt;,¬†&lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/background-image"&gt;&lt;code&gt;background-image&lt;/code&gt;&lt;/a&gt;,¬†&lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/background-repeat"&gt;&lt;code&gt;background-repeat&lt;/code&gt;&lt;/a&gt;, and¬†&lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/background-position"&gt;&lt;code&gt;background-position&lt;/code&gt;&lt;/a&gt;. Similarly, the most common font-related properties can be defined using the shorthand¬†&lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/font"&gt;&lt;code&gt;font&lt;/code&gt;&lt;/a&gt;, and the different margins around a box can be defined using¬†&lt;span&gt;¬†the&lt;/span&gt;&lt;span&gt;¬†&lt;/span&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/margin"&gt;&lt;code&gt;margin&lt;/code&gt;&lt;/a&gt;&lt;span&gt;¬†&lt;/span&gt;&lt;span&gt;shorthand.¬†¬†&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/best-css-shorthand-properties/&amp;amp;ved=2ahUKEwjIoPCc99DyAhU7-nMBHUxQDrYQFnoECEAQAQ&amp;amp;usg=AOvVaw23jKjWtvmnvAtDmQi7vhZp&amp;amp;cshid=1630058051965"&gt;CSS Shorthand properties for Web Developer&lt;/a&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Circular Queue using python..!</title>
      <author>rohit-br-k</author>
      <pubDate>Thu, 02 Sep 2021 07:35:42 +0000</pubDate>
      <link>https://dev.to/rohitbrk/circular-queue-using-python-141i</link>
      <guid>https://dev.to/rohitbrk/circular-queue-using-python-141i</guid>
      <description>&lt;p&gt;Queue is similar to stack but it follows F.I.F.O method.&lt;/p&gt;

&lt;p&gt;Queue can developed by using normal python list and also with linked-list.Here,Queue with linked-list is preferred because time-complexity and space-complexity is good compared to Queue with normal python list.&lt;/p&gt;

&lt;p&gt;In Queue with python list, the enqueue and dequeue will end in worst case with increase in inputs.So,the better version of this is circular queue.&lt;/p&gt;

&lt;p&gt;Circular Queue is used in Traffic System,Memory Management,CPU Scheduling But here with increase in data's the time-complexity will become worst but space complexity can be reduced with fixed size.So it's always good to implement Queue using linked list if time-complexity is preferred.&lt;/p&gt;

&lt;p&gt;We can look into the implementation of Circular Queue in python:&lt;br&gt;
Here we go,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;#we need Queue class to initialize fixed empty list with start and top
class CircularQ:
    def __init__(self,maxSize):
        self.data = maxSize *[None]
        self.maxSize = maxSize
        self.start = -1
        self.top = -1
    def __str__(self):
        return str(self.data)

    def isEmpty(self,value):
        if self.top and self.star == -1:
            return True
        else:
            return False

    def isFull(self):
        if self.top+1 == self.maxSize and self.start == 0:
            return True
        elif self.start+1 == self.top:
            return True
        else:
            return False

    def insert(self,value):
        self.top+=1
        self.data[self.top] = value
        self.start=0

    def delete(self):
        first = self.data[self.start]
        start = self.start

        if self.start == self.top:
            self.start =-1
            self.top=-1

        elif self.start+1 == self.maxSize:
            self.start = 0

        else:
            self.start+=1
        self.data[start] = None
        return first



circular = CircularQ(5)
circular.insert(1)
circular.insert(2)
circular.insert(3)
circular.insert(4)
circular.insert(5)
circular.delete()
circular.delete()
print(circular)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>python</category>
      <category>algorithms</category>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Tending Javascript Projects on GitHub</title>
      <author>ADMIN</author>
      <pubDate>Thu, 02 Sep 2021 07:34:22 +0000</pubDate>
      <link>https://dev.to/csshackingg/tending-javascript-projects-on-github-2g8a</link>
      <guid>https://dev.to/csshackingg/tending-javascript-projects-on-github-2g8a</guid>
      <description>&lt;p&gt;The best way to learn a new programming language is to build projects.&lt;/p&gt;
&lt;p&gt;I have created a list of 40 beginner friendly project tutorials in Vanilla JavaScript, React, and TypeScript.&lt;/p&gt;
&lt;p&gt;My advice for tutorials would be to watch the video, build the project, break it apart and rebuild it your own way. Experiment with adding new features or using different methods.&lt;/p&gt;
&lt;p&gt;That will test if you have really learned the concepts or not.&lt;/p&gt;
&lt;p&gt;You can click on any of the projects listed below to jump to that section of the article.&lt;/p&gt;
&lt;br&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/the-best-beginner-javascript-projects-for-2021/&amp;amp;ved=2ahUKEwjx8-Pl09LyAhWkxjgGHUMUDw4QtwJ6BAgsEAE&amp;amp;usg=AOvVaw16eIeKYPB8xzH6B1hMi2E6"&gt;Trending Javascript Projects for Frontend Developer¬†on GitHub&lt;/a&gt;&lt;/b&gt;

</description>
    </item>
    <item>
      <title>Web Developer Roadmap</title>
      <author>ADMIN</author>
      <pubDate>Thu, 02 Sep 2021 07:33:30 +0000</pubDate>
      <link>https://dev.to/csshackingg/web-developer-roadmap-1co7</link>
      <guid>https://dev.to/csshackingg/web-developer-roadmap-1co7</guid>
      <description>&lt;p&gt;&lt;br&gt;A web developer looking at some code on his computer screenHow to Become a Web Developer in 2Technology plays a huge role in our daily lives, from the simplest of apps to the most groundbreaking inventions. Every website or piece of software that we encounter has been built by a web developer‚Äîbut what exactly is web development, and what do they do‚Äîall of this will be answered in this guide to how to become a web developer.&lt;br&gt;To the outside eye, it can seem like a complicated, confusing and somewhat inaccessible field. So, to shed some light on this fascinating industry, we‚Äôve put together the ultimate introduction to web development and what it takes to become a fully-fledged web developer.&lt;br&gt;In this guide, we‚Äôll go through the basics of web development in detail, and show you the essential skills and tools you‚Äôll need to break into the industry. If you decide web development is for you, the next step is to start learning those essential skills, which you can do in this free, online short course designed for beginners.&lt;br&gt;&lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/backend-web-developer-roadmap/&amp;amp;ved=2ahUKEwjOmpvK2NLyAhVJ7HMBHdogAs0QFnoECAwQAQ&amp;amp;usg=AOvVaw0wwwwOEMbJgRlh0aWNwnCj"&gt;Backend Developer Roadmap¬†&lt;/a&gt;&lt;/b&gt;&lt;br&gt;&lt;b&gt;&lt;a href="https://www.codelivly.com/frontend-web-developer-roadmap/"&gt;Frontend Developer Roadmap¬†&lt;/a&gt;¬†&lt;/b&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;b&gt;&lt;a href="https://www.codelivly.com/web-developer-roadmap-2021/"&gt;Web Developer Roadmap 2021&lt;/a&gt;¬†&lt;/b&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;b&gt;&lt;a href="https://www.codelivly.com/web-designers-roadmap-2021/"&gt;Web Designer Roadmap 2021&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Next Level JavaScript</title>
      <author>AOSXAP</author>
      <pubDate>Thu, 02 Sep 2021 07:21:37 +0000</pubDate>
      <link>https://dev.to/aosxap/next-level-javascript-programming-357l</link>
      <guid>https://dev.to/aosxap/next-level-javascript-programming-357l</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WrqcJKb9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.pexels.com/photos/1261427/pexels-photo-1261427.jpeg%3Fcs%3Dsrgb%26dl%3Dpexels-hitesh-choudhary-1261427.jpg%26fm%3Djpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WrqcJKb9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.pexels.com/photos/1261427/pexels-photo-1261427.jpeg%3Fcs%3Dsrgb%26dl%3Dpexels-hitesh-choudhary-1261427.jpg%26fm%3Djpg" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#a-lot-of-people-have-worked-with-javascript-but-we-still-tend-to-overlook-and-underestimate-how-powerful-js-really-became-with-time"&gt;
  &lt;/a&gt;
  A lot of people have worked with JavaScript, but we still tend to overlook and underestimate how powerful JS really became with time.
&lt;/h3&gt;

&lt;p&gt;The language came to life in 1995 and for a long time it was wildly used solely for web development.&lt;/p&gt;

&lt;p&gt;Though, when Nodejs came to town EVERYTHING changed and it rapidly became the most used languace thanks to it's incredible features.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#now-how-can-we-take-advantage-of-all-the-goodness-nodejs-has-to-offer"&gt;
  &lt;/a&gt;
  Now how can we take advantage of all the goodness nodejs has to offer??
&lt;/h3&gt;

&lt;p&gt;Me and a friend tried our best to showcase it in a library we created : &lt;a href="https://github.com/reqorg/reqless"&gt;https://github.com/reqorg/reqless&lt;/a&gt; . It is called reqless and was created via low level networking in c++ and was binded to js using &lt;a href="https://nodejs.org/api/n-api.html"&gt;Napi&lt;/a&gt; , this will enable us to create advanced features in c++ and use them in JS and also increase their speed.&lt;/p&gt;

&lt;p&gt;If you like Rust, you can use &lt;a href="https://rustwasm.github.io/docs/wasm-bindgen/introduction.html"&gt;wasm-bindgen&lt;/a&gt; .&lt;/p&gt;

&lt;p&gt;This is only one breeze of what nodejs is capable , you should also check out the incredible &lt;a href="https://nodejs.org/api/child_process.html"&gt;nodejs child processes&lt;/a&gt; , which helped in a lot of projects (even building a discord bot capable of running cpp code in a sanboxed environment) . And if you are doing more backend and power hungry stuff you should also check out multithreading in js !&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#i-really-like-to-keep-it-simple-and-not-waste-too-much-of-your-time-so-for-now-thanks-for-your-time-"&gt;
  &lt;/a&gt;
  I really like to keep it simple and not waste too much of your time , so for now, Thanks for your time :)
&lt;/h5&gt;

</description>
      <category>node</category>
      <category>javascript</category>
      <category>cpp</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Clean architecture of Flutter application. Part 1 - Theory</title>
      <author>gandronchik</author>
      <pubDate>Thu, 02 Sep 2021 07:14:37 +0000</pubDate>
      <link>https://dev.to/george_andronchik/clean-architecture-of-flutter-application-part-1-theory-3b6p</link>
      <guid>https://dev.to/george_andronchik/clean-architecture-of-flutter-application-part-1-theory-3b6p</guid>
      <description>&lt;p&gt;Flutter is a rapidly developing cross-platform framework. It is really perspective technology, the state of the art of cross-platform tech. So, let's figure out how to build a good supportable architecture of Flutter application.&lt;/p&gt;

&lt;p&gt;This is the first part of a two-part article dedicated to flutter clean architecture. Today I would like to tell you CA theory. This knowledge will help you to deeply understand the second part, where you will implement a CA example.&lt;/p&gt;

&lt;p&gt;Clean architecture is the concept by Robert Martin whose main idea is to separate architecture into loosely coupled layers. Thereby we have a good supportable, readable, and testable project.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Usually 3 layers are defined:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Data Layer: Includes logic of communication with the - database, network apis, etc.&lt;/li&gt;
&lt;li&gt;Domain Layer: business logic layer.&lt;/li&gt;
&lt;li&gt;Presentation Layer: UI.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Data Layer&lt;/strong&gt; &lt;code&gt;includes Repositories and Data Sources.&lt;/code&gt; Data sources implement logic of data access from different sources (such as network, database, disk etc). Repositories contain queries and mutations for a specific data model and can decide from which data source gets data (request it from network or get from cache for example).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Domain Layer&lt;/strong&gt; &lt;code&gt;contains Models and Use Cases.&lt;/code&gt; Models declare data format. Use cases combine data from one or multiple repositories. The Use case is a class where you extract the business logic out of your Presenter/ViewModel. This makes the Presenter/ViewModel simpler because it only coordinates the view and calls Use case. This approach helps to write testable, supportable code.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Presentation Layer&lt;/strong&gt; &lt;code&gt;contains Views and Presenters / ViewModels&lt;/code&gt; (sometimes routers. It depends on the presentation layer architecture you choose). View is what users interact with and coordinated by Presenter / ViewModel which executes one or more Use Cases.&lt;/p&gt;

&lt;p&gt;The Presentation Layer always depends on the Domain Layer. Data and Domain can depend on each other and it depends on the variant of implementation.&lt;/p&gt;

&lt;p&gt;There are two variants of implementation - &lt;strong&gt;Data Flow&lt;/strong&gt; and &lt;strong&gt;Dependency Rule&lt;/strong&gt;. The main difference between them - &lt;code&gt;data flow‚Äôs domain layer depends on data layer while dependency rule‚Äôs data layer depends on domain.&lt;/code&gt; I prefer Dependency Rule and have a couple of reasons for it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wd11pAQf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9rmi33eu68mia9phvswj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wd11pAQf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9rmi33eu68mia9phvswj.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The first reason is that it works with &lt;a href="https://en.wikipedia.org/wiki/Event_storming"&gt;Event Storming&lt;/a&gt; and &lt;a href="https://en.wikipedia.org/wiki/Domain-driven_design"&gt;DDD&lt;/a&gt; (Domain Driven Design) principles. I mean it is easier to design software driving by domain. Because domain defines business processes and is the most important part of the software.&lt;/p&gt;

&lt;p&gt;The second reason is that flutter is cross-platform technology and it is very important to keep the freedom to use different storages (not only presentations) for different platforms (such as mobile and frontend and desktop in the near future). It is important for any long-term projects, not only cross-platform. But for cross-platform, it is required.&lt;/p&gt;

&lt;p&gt;If we designed everything correctly, Domain doesn‚Äôt have any dependency on any other layer. Also, a good practice is not to use any external dependencies and frameworks. Try to use clean Dart.&lt;/p&gt;

&lt;p&gt;To keep the domain independent from data, there is some approach for that. Domain Layer includes protocols of repositories, so data layer only implements it. And we just inject it by DI.&lt;/p&gt;

&lt;p&gt;That's it. I hope you like this article. If this part looks difficult, don‚Äôt worry, you will understand these conceptions when you see how it to realize. In the second part, we will implement everything you have just read. See you there.&lt;/p&gt;

</description>
      <category>flutter</category>
      <category>architecture</category>
      <category>dart</category>
    </item>
    <item>
      <title>How to Internationalize a React App</title>
      <author>Shahed Nasser</author>
      <pubDate>Thu, 02 Sep 2021 07:12:51 +0000</pubDate>
      <link>https://dev.to/shahednasser/how-to-internationalize-a-react-app-28ca</link>
      <guid>https://dev.to/shahednasser/how-to-internationalize-a-react-app-28ca</guid>
      <description>&lt;p&gt;&lt;em&gt;This article was originally published on &lt;a href="https://blog.shahednasser.com/how-to-internationalize-a-react-app/"&gt;my personal blog&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Internationalization, or i18n, is supporting different languages in your website or app. It allows you to gain users from different parts of the world, which leads to growing your website's traffic.&lt;/p&gt;

&lt;p&gt;In this tutorial, we'll learn how to internationalize a React website including translating content and changing the layout's direction based on the language chosen.&lt;/p&gt;

&lt;p&gt;You can find the full code for this tutorial in &lt;a href="https://github.com/shahednasser/react-i18n-tutorial"&gt;this GitHub repository&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setup-website"&gt;
  &lt;/a&gt;
  Setup Website
&lt;/h2&gt;

&lt;p&gt;First, we'll set up the React website with &lt;a href="https://create-react-app.dev"&gt;Create React App (CRA)&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Run the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npx create-react-app react-i18n-tutorial
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once that is done, change the directory to the project:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd react-i18n-tutorial
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can then start the server:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm start
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#install-dependencies"&gt;
  &lt;/a&gt;
  Install Dependencies
&lt;/h2&gt;

&lt;p&gt;The easiest way to internationalize a React app is to use the library &lt;a href="https://www.i18next.com"&gt;i18next&lt;/a&gt;. i18next is an internationalization framework written in Javascript that can be used with many languages and frameworks, but most importantly with &lt;a href="https://react.i18next.com"&gt;React&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Run the following command to install i18next:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install react-i18next i18next --save
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In addition, we need to install &lt;a href="https://github.com/i18next/i18next-http-backend"&gt;i18next-http-backend&lt;/a&gt; which allows us to fetch translations from a directory, and &lt;a href="https://github.com/i18next/i18next-browser-languageDetector"&gt;i18next-browser-languagedetector&lt;/a&gt; which allows us to detect the user's language:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm i i18next-http-backend i18next-browser-languagedetector
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Last, we'll install &lt;a href="https://react-bootstrap.github.io"&gt;React Bootstrap&lt;/a&gt; for simple styling:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install react-bootstrap@next bootstrap@5.1.0
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#create-the-main-page"&gt;
  &lt;/a&gt;
  Create the Main Page
&lt;/h2&gt;

&lt;p&gt;We'll create the main page of the website before working on the internationalization.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#navigation-bar"&gt;
  &lt;/a&gt;
  Navigation Bar
&lt;/h3&gt;

&lt;p&gt;We first need the Navigation component. Create &lt;code&gt;src/components/Navigation.js&lt;/code&gt; with the following content:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { Container, Nav, Navbar, NavDropdown } from "react-bootstrap";

function Navigation () {

  return (
    &amp;lt;Navbar bg="light" expand="lg"&amp;gt;
      &amp;lt;Container&amp;gt;
        &amp;lt;Navbar.Brand href="#"&amp;gt;React i18n&amp;lt;/Navbar.Brand&amp;gt;
        &amp;lt;Navbar.Toggle aria-controls="basic-navbar-nav" /&amp;gt;
        &amp;lt;Navbar.Collapse id="basic-navbar-nav"&amp;gt;
          &amp;lt;Nav className="me-auto"&amp;gt;
            &amp;lt;NavDropdown title="Language" id="basic-nav-dropdown"&amp;gt;
              &amp;lt;NavDropdown.Item href="#"&amp;gt;English&amp;lt;/NavDropdown.Item&amp;gt;
              &amp;lt;NavDropdown.Item href="#"&amp;gt;ÿßŸÑÿπÿ±ÿ®Ÿäÿ©&amp;lt;/NavDropdown.Item&amp;gt;
            &amp;lt;/NavDropdown&amp;gt;
          &amp;lt;/Nav&amp;gt;
        &amp;lt;/Navbar.Collapse&amp;gt;
      &amp;lt;/Container&amp;gt;
    &amp;lt;/Navbar&amp;gt;
  );
}

export default Navigation;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#heading"&gt;
  &lt;/a&gt;
  Heading
&lt;/h3&gt;

&lt;p&gt;Then, we'll create &lt;code&gt;src/components/Greeting.js&lt;/code&gt; with the following content:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function Greeting () {

  return (
    &amp;lt;h1&amp;gt;Hello&amp;lt;/h1&amp;gt;
  );
}

export default Greeting;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#text"&gt;
  &lt;/a&gt;
  Text
&lt;/h3&gt;

&lt;p&gt;Next, we'll create &lt;code&gt;src/components/Text.js&lt;/code&gt; with the following content:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function Text () {

  return (
    &amp;lt;p&amp;gt;Thank you for visiting our website.&amp;lt;/p&amp;gt;
  )
}

export default Text;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally, we need to show these components on the website. Change the content of &lt;code&gt;src/App.js&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import React from 'react';
import { Container } from 'react-bootstrap';
import 'bootstrap/dist/css/bootstrap.min.css';
import Greeting from './components/Greeting';
import Loading from './components/Loading';
import Navigation from './components/Navigation';
import Text from './components/Text';

function App() {

  return (
    &amp;lt;&amp;gt;
      &amp;lt;Navigation /&amp;gt;
      &amp;lt;Container&amp;gt;
        &amp;lt;Greeting /&amp;gt;
        &amp;lt;Text /&amp;gt;
      &amp;lt;/Container&amp;gt;
    &amp;lt;/&amp;gt;
  );
}

export default App;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Run the server now, if it isn't running already. You'll see a simple website with a navigation bar and some text.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LiblpzPK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://backend.shahednasser.com/content/images/2021/08/Screen-Shot-2021-08-31-at-1.22.22-PM.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LiblpzPK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://backend.shahednasser.com/content/images/2021/08/Screen-Shot-2021-08-31-at-1.22.22-PM.png" alt="How to Internationalize a React App"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#configuring-i18next"&gt;
  &lt;/a&gt;
  Configuring i18next
&lt;/h3&gt;

&lt;p&gt;The first step of internationalizing React with i18next is to configure and initialize it.&lt;/p&gt;

&lt;p&gt;Create &lt;code&gt;src/i18n.js&lt;/code&gt; with the following content:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import i18n from "i18next";
import { initReactI18next } from "react-i18next";
import Backend from 'i18next-http-backend';
import I18nextBrowserLanguageDetector from "i18next-browser-languagedetector";

i18n
  .use(Backend)
  .use(I18nextBrowserLanguageDetector)
  .use(initReactI18next) // passes i18n down to react-i18next
  .init({
    fallbackLng: 'en',
    debug: true,

    interpolation: {
      escapeValue: false // react already safes from xss
    }
  });

  export default i18n;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We're first importing &lt;code&gt;i18n&lt;/code&gt; from &lt;code&gt;i18next&lt;/code&gt;. Then, we're adding &lt;code&gt;i18next-http-backend&lt;/code&gt; and &lt;code&gt;i18next-browser-languagedetector&lt;/code&gt; as plugins to &lt;code&gt;i18n&lt;/code&gt;. We're also adding &lt;code&gt;initReactI18next&lt;/code&gt; as a plugin to ensure that &lt;code&gt;i18next&lt;/code&gt; works with React.&lt;/p&gt;

&lt;p&gt;Next, we're initializing &lt;code&gt;i18n&lt;/code&gt; by passing it an object of options. There are &lt;a href="https://www.i18next.com/overview/configuration-options"&gt;many options&lt;/a&gt; you can pass to the initializer, but we're passing 3 only.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;fallbackLng&lt;/code&gt; acts as the default language in i18n if no language is detected. Language is detected either from the user's preferred language, or a language they previously chose when using the website.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;debug&lt;/code&gt; enables debug messages in the console. This should not be used in production.&lt;/p&gt;

&lt;p&gt;As for &lt;code&gt;escapeValue&lt;/code&gt; in &lt;code&gt;interpolation&lt;/code&gt;, we're setting it to false since React already escapes all strings and is safe from &lt;a href="https://www.google.com/url?sa=t&amp;amp;rct=j&amp;amp;q=&amp;amp;esrc=s&amp;amp;source=web&amp;amp;cd=&amp;amp;cad=rja&amp;amp;uact=8&amp;amp;ved=2ahUKEwi3o9eav9vyAhXHX8AKHe31CgAQFnoECAMQAQ&amp;amp;url=https%3A%2F%2Fowasp.org%2Fwww-community%2Fattacks%2Fxss%2F&amp;amp;usg=AOvVaw38Aj4XcszVjxrjA0YToyVk"&gt;Cross-Site Scripting (XSS)&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#adding-the-translation-files"&gt;
  &lt;/a&gt;
  Adding the Translation Files
&lt;/h2&gt;

&lt;p&gt;By default, &lt;code&gt;i18next-http-backend&lt;/code&gt; looks for translation files in &lt;code&gt;public/locales/{language}/translation.json&lt;/code&gt;, where &lt;code&gt;{language}&lt;/code&gt; would be the code of the language chosen. For example, en for English.&lt;/p&gt;

&lt;p&gt;In this tutorial, we'll have 2 languages on our website, English and Arabic. So, we'll create the directory &lt;code&gt;locales&lt;/code&gt; and inside we'll create 2 directories &lt;code&gt;en&lt;/code&gt; and &lt;code&gt;ar&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Then, create the file &lt;code&gt;translation.json&lt;/code&gt; inside &lt;code&gt;en&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
  "greeting": "Hello",
  "text": "Thank you for visiting our website.",
  "language": "Language"
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will create 3 translation keys. When these keys are used, the string value that the key corresponds to will be outputted based on the chosen language. So, each language file should have the same keys but with the values translated to that language.&lt;/p&gt;

&lt;p&gt;Next, we'll create the file &lt;code&gt;translation.json&lt;/code&gt; inside &lt;code&gt;ar&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
  "greeting": "ŸÖÿ±ÿ≠ÿ®ÿß",
  "text": "ÿ¥ŸÉÿ±ÿß ŸÑÿ≤Ÿäÿßÿ±ÿ© ŸÖŸàŸÇÿπŸÜÿß",
  "language": " ÿßŸÑŸÑÿ∫ÿ©"
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#using-the-i18n-instance"&gt;
  &lt;/a&gt;
  Using the i18n Instance
&lt;/h2&gt;

&lt;p&gt;The next step is importing the file with the settings we just created in &lt;code&gt;App.js&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import i18n from './i18n';
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, to make sure that the components are rendered once i18next and the translation files have been loaded, we need to surround our components with &lt;a href="https://reactjs.org/docs/concurrent-mode-suspense.html#what-is-suspense-exactly"&gt;Suspense from React&lt;/a&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;Suspense fallback={&amp;lt;Loading /&amp;gt;}&amp;gt;
    &amp;lt;Navigation /&amp;gt;
    &amp;lt;Container&amp;gt;
        &amp;lt;Greeting /&amp;gt;
        &amp;lt;Text /&amp;gt;
    &amp;lt;/Container&amp;gt;
&amp;lt;/Suspense&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see, we're passing a new component &lt;code&gt;Loading&lt;/code&gt; as a fallback while i18next loads with the translation files. So, we need to create &lt;code&gt;src/components/Loading.js&lt;/code&gt; with the following content:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { Spinner } from "react-bootstrap";

function Loading () {
  return (
    &amp;lt;Spinner animation="border" role="status"&amp;gt;
      &amp;lt;span className="visually-hidden"&amp;gt;Loading...&amp;lt;/span&amp;gt;
    &amp;lt;/Spinner&amp;gt;
  )
}

export default Loading;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, we're able to translate strings in the &lt;code&gt;App&lt;/code&gt; components and its sub-components.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#translating-strings-with-usetranslation"&gt;
  &lt;/a&gt;
  Translating Strings with useTranslation
&lt;/h2&gt;

&lt;p&gt;There are different ways you can translate strings in i18next, and one of them is using &lt;code&gt;useTranslation&lt;/code&gt; hook. With this hook, you'll get the translation function which you can use to translate strings.&lt;/p&gt;

&lt;p&gt;We'll start by translating the &lt;code&gt;Greeting&lt;/code&gt; component. Add the following at the beginning of the component:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function Greeting () {
  const { t } = useTranslation();
    ...
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, inside the returned JSX, instead of just placing the text "Hello", we'll replace it with the translation function &lt;code&gt;t&lt;/code&gt; that we received from &lt;code&gt;useTranslation&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;return (
    &amp;lt;h1&amp;gt;{t('greeting')}&amp;lt;/h1&amp;gt;
  );
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note how we're passing the translation function a key that we added in the &lt;code&gt;translation.json&lt;/code&gt; files for each of the languages. i18next will fetch the value based on the current language.&lt;/p&gt;

&lt;p&gt;We'll do the same thing for the &lt;code&gt;Text&lt;/code&gt; component:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { useTranslation } from "react-i18next";

function Text () {
  const { t } = useTranslation();

  return (
    &amp;lt;p&amp;gt;{t('text')}&amp;lt;/p&amp;gt;
  )
}

export default Text;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally, we'll translate the text "Language" inside the &lt;code&gt;Navigation&lt;/code&gt; component:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;NavDropdown title={t('language')} id="basic-nav-dropdown"&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you open the website now, you'll see that nothing has changed. The text is still in English.&lt;/p&gt;

&lt;p&gt;Although technically nothing has changed, considering we are using the translation function passing it the keys instead of the actual strings and it's outputting the correct strings, that means that i18next is loading the translations and is displaying the correct language.&lt;/p&gt;

&lt;p&gt;If we try to change the language using the dropdown in the navigation bar, nothing will happen. We need to change the language based on the language clicked.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#changing-the-language-of-the-website"&gt;
  &lt;/a&gt;
  Changing the Language of the Website
&lt;/h2&gt;

&lt;p&gt;The user should be able to change the language of a website. To manage and change the current language of the website, we need to create a context that's accessible by all the parts of the app.&lt;/p&gt;

&lt;p&gt;Creating a context eliminates the need to pass a state through different components and levels.&lt;/p&gt;

&lt;p&gt;Create the file &lt;code&gt;src/LocaleContext.js&lt;/code&gt; with the following content:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import React from "react";

const defaultValue = {
  locale: 'en',
  setLocale: () =&amp;gt; {} 
}

export default React.createContext(defaultValue);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, create the state &lt;code&gt;locale&lt;/code&gt; inside &lt;code&gt;src/App.js&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function App() {
  const [locale, setLocale] = useState(i18n.language);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see, we're passing &lt;code&gt;i18n.language&lt;/code&gt; as an initial value. The &lt;code&gt;language&lt;/code&gt; property represents the current language chosen.&lt;/p&gt;

&lt;p&gt;However, as it takes time for i18n to load with the translations, the initial value will be &lt;code&gt;undefined&lt;/code&gt;. So, we need to listen to the &lt;code&gt;languageChanged&lt;/code&gt; event that &lt;code&gt;i18n&lt;/code&gt; triggers when the language is first loaded and when it changes:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;i18n.on('languageChanged', (lng) =&amp;gt; setLocale(i18n.language));
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally, we need to surround the returned JSX with the provider of the context:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;LocaleContext.Provider value={{locale, setLocale}}&amp;gt;
      &amp;lt;Suspense fallback={&amp;lt;Loading /&amp;gt;}&amp;gt;
        &amp;lt;Navigation /&amp;gt;
          &amp;lt;Container&amp;gt;
            &amp;lt;Greeting /&amp;gt;
            &amp;lt;Text /&amp;gt;
          &amp;lt;/Container&amp;gt;
    &amp;lt;/Suspense&amp;gt;
&amp;lt;/LocaleContext.Provider&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, we can access the locale and its setter from any of the subcomponents.&lt;/p&gt;

&lt;p&gt;To change the language, we need to have a listener function for the click events on the dropdown links.&lt;/p&gt;

&lt;p&gt;In &lt;code&gt;src/components/Navigation.js&lt;/code&gt; get the locale state from the context at the beginning of the function:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const { locale } = useContext(LocaleContext);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, add a listener component that will change the language in &lt;code&gt;i18n&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  function changeLocale (l) {
    if (locale !== l) {
      i18n.changeLanguage(l);
    }
  }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally, we'll bind the listener to the click event for both of the dropdown links:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;NavDropdown.Item href="#" onClick={() =&amp;gt; changeLocale('en')}&amp;gt;English&amp;lt;/NavDropdown.Item&amp;gt;
              &amp;lt;NavDropdown.Item href="#" onClick={() =&amp;gt; changeLocale('ar')}&amp;gt;ÿßŸÑÿπÿ±ÿ®Ÿäÿ©&amp;lt;/NavDropdown.Item&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you go on the website and try to change the language, you'll see that the language changes successfully based on what you choose. Also, if you try changing the language then refreshing the page, you'll see that the chosen language will persist.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rTWY3yGI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://backend.shahednasser.com/content/images/2021/08/Screen-Shot-2021-08-31-at-1.22.32-PM.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rTWY3yGI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://backend.shahednasser.com/content/images/2021/08/Screen-Shot-2021-08-31-at-1.22.32-PM.png" alt="How to Internationalize a React App"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#changing-the-location-of-the-translation-files"&gt;
  &lt;/a&gt;
  Changing the Location of the Translation Files
&lt;/h2&gt;

&lt;p&gt;As mentioned earlier, the default location of the translation files is in &lt;code&gt;public/locales/{language}/translation.json&lt;/code&gt;. However, this can be changed.&lt;/p&gt;

&lt;p&gt;To change the default location, change this line in &lt;code&gt;src/i18n.js&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.use(Backend)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.use(new Backend(null, {
    loadPath: '/translations/{{lng}}/{{ns}}.json'
  }))
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Where the &lt;code&gt;loadPath&lt;/code&gt; is relative to &lt;code&gt;public&lt;/code&gt;. So, if you use the above path it means the translation files should be in a directory called &lt;code&gt;translations&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;{{lng}}&lt;/code&gt; refers to the language, for example, &lt;code&gt;en&lt;/code&gt;. &lt;code&gt;{{ns}}&lt;/code&gt; refers to the namespace, which by default is &lt;code&gt;translation&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;You can also provide a function as a value of &lt;code&gt;loadPath&lt;/code&gt; which takes the language as the first parameter and the namespace as the second parameter.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#changing-document-direction"&gt;
  &lt;/a&gt;
  Changing Document Direction
&lt;/h2&gt;

&lt;p&gt;The next essential part of internationalization and localization is supporting different directions based on the languages you support.&lt;/p&gt;

&lt;p&gt;If you have Right-to-Left (RTL) languages, you should be able to change the direction of the document when the RTL language is chosen.&lt;/p&gt;

&lt;p&gt;If you use our website as an example, you'll see that although the text is translated when the Arabic language is chosen, the direction is still Left-to-Right (LTR).&lt;/p&gt;

&lt;p&gt;This is not related to i18next as this is done through CSS. In this tutorial, we'll see how we can use &lt;a href="https://getbootstrap.com/docs/5.1/getting-started/rtl/"&gt;RTL&lt;/a&gt; in Bootstrap 5 to support RTL languages.&lt;/p&gt;

&lt;p&gt;The first thing we need to do is adding the &lt;code&gt;dir&lt;/code&gt; and &lt;code&gt;lang&lt;/code&gt; attributes to the &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; tag of the document. To do that, we need to install &lt;a href="https://www.npmjs.com/package/react-helmet"&gt;React Helmet&lt;/a&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm i react-helmet
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, inside &lt;code&gt;Suspense&lt;/code&gt; in the returned JSX of the &lt;code&gt;App&lt;/code&gt; component add the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;Helmet htmlAttributes={{
          lang: locale,
          dir: locale === 'en' ? 'ltr' : 'rtl'
        }} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will change the &lt;code&gt;lang&lt;/code&gt; and &lt;code&gt;dir&lt;/code&gt; attributes of &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; based on the value of the locale.&lt;/p&gt;

&lt;p&gt;The next thing we need to do is surround the Bootstrap components with &lt;code&gt;ThemeProvider&lt;/code&gt; which is a component from &lt;code&gt;react-bootstrap&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;ThemeProvider dir={locale === 'en' ? 'ltr' : 'rtl'}&amp;gt;
    &amp;lt;Navigation /&amp;gt;
    &amp;lt;Container&amp;gt;
        &amp;lt;Greeting /&amp;gt;
        &amp;lt;Text /&amp;gt;
    &amp;lt;/Container&amp;gt;
&amp;lt;/ThemeProvider&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see we're passing it the &lt;code&gt;dir&lt;/code&gt; prop with the direction based on the locale. This is necessary as &lt;code&gt;react-bootstrap&lt;/code&gt; will load the necessary stylesheet based on whether the current direction is &lt;code&gt;rtl&lt;/code&gt; or &lt;code&gt;ltr&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Finally, we need to change the class name of &lt;code&gt;Nav&lt;/code&gt; in the &lt;code&gt;Navigation&lt;/code&gt; component:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;Nav className={locale === 'en' ? 'ms-auto' : 'me-auto'}&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is only necessary since there seems to be a problem in the support for &lt;code&gt;ms-auto&lt;/code&gt; when switching to RTL.&lt;/p&gt;

&lt;p&gt;If you try opening the website now and changing the language to Arabic, you'll see that the direction of the document is changed as well.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NYkl8zIC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://backend.shahednasser.com/content/images/2021/08/Screen-Shot-2021-08-31-at-6.50.37-PM.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NYkl8zIC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://backend.shahednasser.com/content/images/2021/08/Screen-Shot-2021-08-31-at-6.50.37-PM.png" alt="How to Internationalize a React App"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;i18next facilitates internationalizing your React app, as well as other frameworks and languages. By internationalizing your app or website, you are inviting more users from around the world to use it.&lt;/p&gt;

&lt;p&gt;The main parts of internationalization are translating the content, supporting the direction of the chosen language in your website's stylesheets, and remembering the user's choice. Using i18next you're able to easily translate the content as well as remembering the user's choice.&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>css</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Heroku pour d√©ployer votre application Python/Flask dans le cloud</title>
      <author>Pierre Gradot</author>
      <pubDate>Thu, 02 Sep 2021 07:12:26 +0000</pubDate>
      <link>https://dev.to/younup/heroku-pour-deployer-votre-application-python-flask-dans-le-cloud-4b6o</link>
      <guid>https://dev.to/younup/heroku-pour-deployer-votre-application-python-flask-dans-le-cloud-4b6o</guid>
      <description>&lt;p&gt;Vous avez d√©velopp√© une application Python √† l'aide du [framework Flask](&lt;a href="https://en.wikipedia.org/wiki/Flask_(web_framework)"&gt;https://en.wikipedia.org/wiki/Flask_(web_framework)&lt;/a&gt;. Tout se passe bien sur votre poste et maintenant, vous vous demandez comment rendre √ßa accessible au monde entier ? Avec &lt;a href="https://www.heroku.com/"&gt;Heroku&lt;/a&gt;, c'est trivial, et c'est ce qu'on va voir dans cet article !&lt;/p&gt;

&lt;p&gt;Heroku est une &lt;em&gt;Platform as a Service (PaaS)&lt;/em&gt; dont le but est justement de d√©ployer des applications le plus facilement possible dans le cloud. Ici, on ne configurera aucun serveur, on n'installera pas un environnement complet. On va juste √©crire notre application avec Python et Flask, puis on va la pousser sur Heroku. On va l'accompagner de quelques petits fichiers de configuration pour expliquer √† Heroku comment la lancer. Et c'est tout !&lt;/p&gt;

&lt;p&gt;Le but de cet article n'est pas de faire un tutoriel complet sur Flask et Heroku. On va donc faire une application tr√®s simple, avec une seule route, juste pour afficher "hello, world". On va la tester en local sur notre PC avant de la d√©ployer sur Heroku avec une configuration basique mais fonctionnelle.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cr%C3%A9er-son-application-flask"&gt;
  &lt;/a&gt;
  Cr√©er son application Flask
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h3&gt;

&lt;p&gt;La premi√®re √©tape est d'installer Flask. Le plus simple est de faire :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;pip &lt;span class="nb"&gt;install &lt;/span&gt;flask
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Si vous voulez plus de finesse dans votre installation, comme par exemple utiliser un &lt;em&gt;virtual environment&lt;/em&gt;, je vous laisse consulter la section &lt;a href="https://flask.palletsprojects.com/en/1.1.x/installation/"&gt;&lt;em&gt;Installation&lt;/em&gt;&lt;/a&gt; de la documentation officielle.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#code"&gt;
  &lt;/a&gt;
  Code
&lt;/h3&gt;

&lt;p&gt;En s'inspirant du &lt;a href="https://flask.palletsprojects.com/en/1.1.x/quickstart/"&gt;&lt;em&gt;quickstart guide&lt;/em&gt;&lt;/a&gt; officiel, on √©crit notre &lt;code&gt;main.py&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;flask&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;index&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;'hello, world'&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Je suis sous Windows, j'utilise dans un &lt;em&gt;virtual environment&lt;/em&gt;, je me suis donc cr√©√© un petit script &lt;code&gt;run.bat&lt;/code&gt; pour lancer facilement mon application :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight batchfile"&gt;&lt;code&gt;&lt;span class="kd"&gt;set&lt;/span&gt; &lt;span class="kd"&gt;FLASK_APP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kd"&gt;main&lt;/span&gt;.py
.\venv\Scripts\flask &lt;span class="nb"&gt;run&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;C'est un peu surprenant quand on est habitu√© au d√©veloppement en Python : on n'ex√©cute pas directement notre script avec &lt;code&gt;python&lt;/code&gt; mais on dit √† &lt;code&gt;flask&lt;/code&gt; quel fichier d√©crit notre application gr√¢ce √† une variable d'environnement.&lt;/p&gt;

&lt;p&gt;Quand on ex√©cute &lt;code&gt;flask&lt;/code&gt;, il d√©marre un serveur local, par d√©faut sur le port 5000, pour servir notre application :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;C:&lt;span class="se"&gt;\p&lt;/span&gt;ython_flask_heroku&amp;gt;.&lt;span class="se"&gt;\v&lt;/span&gt;&lt;span class="nb"&gt;env&lt;/span&gt;&lt;span class="se"&gt;\b&lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="se"&gt;\f&lt;/span&gt;lask run
 &lt;span class="k"&gt;*&lt;/span&gt; Serving Flask app &lt;span class="s2"&gt;"main.py"&lt;/span&gt;
   WARNING: This is a development server. Do not use it &lt;span class="k"&gt;in &lt;/span&gt;a production deployment.
   Use a production WSGI server instead.
 &lt;span class="k"&gt;*&lt;/span&gt; Debug mode: off
 &lt;span class="k"&gt;*&lt;/span&gt; Running on http://127.0.0.1:5000/ &lt;span class="o"&gt;(&lt;/span&gt;Press CTRL+C to quit&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Notez le &lt;em&gt;warning&lt;/em&gt; au lancement : par d√©faut, Flask utilise un serveur fait pour le d√©veloppement mais &lt;a href="https://stackoverflow.com/questions/51025893/flask-at-first-run-do-not-use-the-development-server-in-a-production-environmen"&gt;d√©conseill√©&lt;/a&gt; pour la &lt;a href="https://flask.palletsprojects.com/en/1.1.x/deploying/"&gt;production&lt;/a&gt;. On verra dans la suite que √ßa impactera notre d√©ploiement sur Heroku, puisqu'on voudra utiliser un serveur d'application plus adapt√©.&lt;/p&gt;

&lt;p&gt;Pour v√©rifier que notre application fonctionne, il suffit d'ouvrir le lien donn√© dans les logs avec Firefox :&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CXSYFrTL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oz4vugwy2e31si74axgu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CXSYFrTL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oz4vugwy2e31si74axgu.png" alt="flask en local sous firefox"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Simple, efficace, fonctionnel.&lt;/p&gt;

&lt;p&gt;Dans ma console, je vois les logs des requ√™tes faites au serveur :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;127.0.0.1 - - &lt;span class="o"&gt;[&lt;/span&gt;22/Apr/2021 11:56:20] &lt;span class="s2"&gt;"GET / HTTP/1.1"&lt;/span&gt; 200 -
127.0.0.1 - - &lt;span class="o"&gt;[&lt;/span&gt;22/Apr/2021 11:58:30] &lt;span class="s2"&gt;"GET / HTTP/1.1"&lt;/span&gt; 200 -
127.0.0.1 - - &lt;span class="o"&gt;[&lt;/span&gt;22/Apr/2021 11:58:38] &lt;span class="s2"&gt;"GET /try HTTP/1.1"&lt;/span&gt; 404 -
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Ici, il y a eu 2 acc√®s sur la racine &lt;code&gt;/&lt;/code&gt; du serveur qui ont fonctionn√© avec le code 200, ainsi qu'un acc√®s √† &lt;code&gt;/try&lt;/code&gt; qui a √©chou√© avec le code 404. En effet, mon application d√©finit bien une route vers &lt;code&gt;/&lt;/code&gt;, mais pas vers &lt;code&gt;/try&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Mon application est pr√™te, il ne reste plus qu'√† la rendre accessible sur l'internet mondial gr√¢ce √† Heroku.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#d%C3%A9ploiement-sur-heroku"&gt;
  &lt;/a&gt;
  D√©ploiement sur Heroku
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#inscription-et-installation"&gt;
  &lt;/a&gt;
  Inscription et installation
&lt;/h3&gt;

&lt;p&gt;Pour commencer, il faut &lt;a href="https://signup.heroku.com/"&gt;cr√©er un compte&lt;/a&gt; et &lt;a href="https://devcenter.heroku.com/categories/command-line"&gt;installer l'interface en ligne de commande&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;La commande &lt;code&gt;heroku&lt;/code&gt; est d√©sormais disponible depuis le terminal et nous pouvons nous connecter √† notre compte avec &lt;code&gt;heroku login&lt;/code&gt;. Une page internet s'ouvre dans notre navigateur par d√©faut pour entrer nos identifiants.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cr%C3%A9er-son-application"&gt;
  &lt;/a&gt;
  Cr√©er son application
&lt;/h3&gt;

&lt;p&gt;Le concept est totalement g√©nial : le d√©ploiement consiste juste √† faire un &lt;code&gt;git push&lt;/code&gt; vers un d√©p√¥t distant qui est sur Heroku. Ce Git contient le code ainsi que des fichiers de configuration pour expliquer √† Heroku comment lancer tout √ßa.&lt;/p&gt;

&lt;p&gt;On a d√©j√† une application fonctionnelle en local, on va donc cr√©er un d√©p√¥t Git avec &lt;code&gt;git init&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;On cr√©e ensuite l'&lt;a href="https://devcenter.heroku.com/articles/creating-apps"&gt;application Heroku&lt;/a&gt;, en lui donnant ou pas un nom. Dans mon cas, j'ai choisi de la nommer :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;heroku apps
You have no apps.

&lt;span class="nv"&gt;$ &lt;/span&gt;heroku apps:create younup-flask
Creating ‚¨¢ younup-flask... &lt;span class="k"&gt;done
&lt;/span&gt;https://younup-flask.herokuapp.com/ | https://git.heroku.com/younup-flask.git

&lt;span class="nv"&gt;$ &lt;/span&gt;heroku apps
&lt;span class="o"&gt;===&lt;/span&gt; p.gradot@younup.fr Apps
younup-flask
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Comme le d√©p√¥t existe d√©j√† en local, les &lt;em&gt;remotes&lt;/em&gt; sont ajout√©es automatiquement :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git remote &lt;span class="nt"&gt;-v&lt;/span&gt;
heroku  https://git.heroku.com/younup-flask.git &lt;span class="o"&gt;(&lt;/span&gt;fetch&lt;span class="o"&gt;)&lt;/span&gt;
heroku  https://git.heroku.com/younup-flask.git &lt;span class="o"&gt;(&lt;/span&gt;push&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;L'adresse de mon application est d√©j√† accessible, mais il n'y a pas grand chose d'int√©ressant...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oT3WZ1h0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6im3q6kp020fpzbqpwfc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oT3WZ1h0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6im3q6kp020fpzbqpwfc.png" alt="app cr√©√©e mais non deploy√©e"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;D'ailleurs, elle est normalement toujours &lt;a href="https://younup-flask.herokuapp.com/"&gt;accessible&lt;/a&gt; (mais peut-√™tre qu'un jour je la d√©sactiverai....).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#configuration"&gt;
  &lt;/a&gt;
  Configuration
&lt;/h3&gt;

&lt;p&gt;Sur notre PC, l'interpr√©teur Python est install√© ainsi que les paquets n√©cessaires. Par d√©faut, Heroku ne sait pas ce dont notre application a besoin, il faut donc lui pr√©ciser tout √ßa. Pour √ßa, il faut cr√©er deux fichiers qu'on ajoute au d√©p√¥t Git.&lt;/p&gt;

&lt;p&gt;Le premier est &lt;code&gt;runtime.txt&lt;/code&gt; dans lequel on indique la version de Python qu'on souhaite utiliser. Il y a une seule ligne dans ce fichier :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;python-3.9.2
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Le second est &lt;code&gt;requirements.txt&lt;/code&gt;, qui sert √† &lt;code&gt;pip&lt;/code&gt; pour connaitre &lt;a href="https://pip.pypa.io/en/stable/user_guide/#requirements-files"&gt;les paquets √† installer&lt;/a&gt; :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;flask
gunicorn
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;flask&lt;/code&gt;, OK. Mais pourquoi &lt;code&gt;gunicorn&lt;/code&gt; ? Souvenez-vous plus haut d'un &lt;em&gt;warning&lt;/em&gt; lors du lancement de Flask, nous conseillant de "&lt;em&gt;Use a production WSGI server instead"&lt;/em&gt;. Et bien &lt;a href="https://gunicorn.org/"&gt;c'est exactement ce qu'est &lt;code&gt;gunicorn&lt;/code&gt;&lt;/a&gt; :&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Gunicorn 'Green Unicorn' is a Python WSGI HTTP Server for UNIX. It's a pre-fork worker model. The Gunicorn server is broadly compatible with various web frameworks, simply implemented, light on server resources, and fairly speedy.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Pour expliquer √† Heroku qu'il faut utiliser &lt;code&gt;gunicorn&lt;/code&gt; pour servir notre application Flask, on va utiliser &lt;a href="https://devcenter.heroku.com/articles/procfile"&gt;le fichier &lt;code&gt;Procfile&lt;/code&gt;&lt;/a&gt; :&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Heroku apps include a Procfile that specifies the commands that are executed by the app on startup. You can use a Procfile to declare a variety of process types, including your app‚Äôs web server".&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Une ligne suffit pour notre &lt;code&gt;Procfile&lt;/code&gt; :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;web: gunicorn main:app
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#test-en-local"&gt;
  &lt;/a&gt;
  Test en local
&lt;/h3&gt;

&lt;p&gt;Heroku nous permet de tester en local avec la commande &lt;code&gt;heroku local&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Malheureusement, ce n'est pas possible dans mon cas car je suis sous Windows et &lt;a href="https://stackoverflow.com/questions/11087682/does-gunicorn-run-on-windows"&gt;gunicorn ne fonctionne pas Windows&lt;/a&gt;. Si vous √™tes sous Linux ou macOS, vous pouvez ex√©cuter cette commande pour v√©rifier que tout est OK avant de passer au d√©ploiement.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#d%C3%A9ploiment-sur-linternet-mondial"&gt;
  &lt;/a&gt;
  D√©ploiment sur l'internet mondial
&lt;/h3&gt;

&lt;p&gt;Tout est OK ? Il suffit de faire &lt;code&gt;git commit&lt;/code&gt; et &lt;code&gt;git push&lt;/code&gt; :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git push &lt;span class="nt"&gt;--set-upstream&lt;/span&gt; heroku master
√ânum√©ration des objets: 6, fait.
D√©compte des objets: 100% &lt;span class="o"&gt;(&lt;/span&gt;6/6&lt;span class="o"&gt;)&lt;/span&gt;, fait.
Compression par delta en utilisant jusqu&lt;span class="s1"&gt;'√† 4 fils d'&lt;/span&gt;ex√©cution
Compression des objets: 100% &lt;span class="o"&gt;(&lt;/span&gt;3/3&lt;span class="o"&gt;)&lt;/span&gt;, fait.
√âcriture des objets: 100% &lt;span class="o"&gt;(&lt;/span&gt;6/6&lt;span class="o"&gt;)&lt;/span&gt;, 1.18 Kio | 1.18 Mio/s, fait.
Total 6 &lt;span class="o"&gt;(&lt;/span&gt;delta 0&lt;span class="o"&gt;)&lt;/span&gt;, r√©utilis√©s 0 &lt;span class="o"&gt;(&lt;/span&gt;delta 0&lt;span class="o"&gt;)&lt;/span&gt;, r√©utilis√©s &lt;span class="nb"&gt;du &lt;/span&gt;pack 0
remote: Compressing &lt;span class="nb"&gt;source &lt;/span&gt;files... &lt;span class="k"&gt;done&lt;/span&gt;&lt;span class="nb"&gt;.&lt;/span&gt;
remote: Building &lt;span class="nb"&gt;source&lt;/span&gt;:
remote: 
remote: &lt;span class="nt"&gt;-----&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; Building on the Heroku-20 stack
remote: &lt;span class="nt"&gt;-----&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; Determining which buildpack to use &lt;span class="k"&gt;for &lt;/span&gt;this app
remote: &lt;span class="nt"&gt;-----&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; Python app detected
remote:  &lt;span class="o"&gt;!&lt;/span&gt;     Python has released a security update! Please consider upgrading to python-3.9.4
remote:        Learn More: https://devcenter.heroku.com/articles/python-runtimes
remote: &lt;span class="nt"&gt;-----&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; Installing python-3.9.2
remote: &lt;span class="nt"&gt;-----&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; Installing pip 20.2.4, setuptools 47.1.1 and wheel 0.36.2
remote: &lt;span class="nt"&gt;-----&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; Installing SQLite3
remote: &lt;span class="nt"&gt;-----&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; Installing requirements with pip
remote:        Collecting flask
remote:          Downloading Flask-1.1.2-py2.py3-none-any.whl &lt;span class="o"&gt;(&lt;/span&gt;94 kB&lt;span class="o"&gt;)&lt;/span&gt;
remote:        Collecting gunicorn
remote:          Downloading gunicorn-20.1.0.tar.gz &lt;span class="o"&gt;(&lt;/span&gt;370 kB&lt;span class="o"&gt;)&lt;/span&gt;
remote:        Collecting itsdangerous&amp;gt;&lt;span class="o"&gt;=&lt;/span&gt;0.24
remote:          Downloading itsdangerous-1.1.0-py2.py3-none-any.whl &lt;span class="o"&gt;(&lt;/span&gt;16 kB&lt;span class="o"&gt;)&lt;/span&gt;
remote:        Collecting Werkzeug&amp;gt;&lt;span class="o"&gt;=&lt;/span&gt;0.15
remote:          Downloading Werkzeug-1.0.1-py2.py3-none-any.whl &lt;span class="o"&gt;(&lt;/span&gt;298 kB&lt;span class="o"&gt;)&lt;/span&gt;
remote:        Collecting click&amp;gt;&lt;span class="o"&gt;=&lt;/span&gt;5.1
remote:          Downloading click-7.1.2-py2.py3-none-any.whl &lt;span class="o"&gt;(&lt;/span&gt;82 kB&lt;span class="o"&gt;)&lt;/span&gt;
remote:        Collecting Jinja2&amp;gt;&lt;span class="o"&gt;=&lt;/span&gt;2.10.1
remote:          Downloading Jinja2-2.11.3-py2.py3-none-any.whl &lt;span class="o"&gt;(&lt;/span&gt;125 kB&lt;span class="o"&gt;)&lt;/span&gt;
remote:        Collecting MarkupSafe&amp;gt;&lt;span class="o"&gt;=&lt;/span&gt;0.23
remote:          Downloading MarkupSafe-1.1.1-cp39-cp39-manylinux2010_x86_64.whl &lt;span class="o"&gt;(&lt;/span&gt;32 kB&lt;span class="o"&gt;)&lt;/span&gt;
remote:        Building wheels &lt;span class="k"&gt;for &lt;/span&gt;collected packages: gunicorn
remote:          Building wheel &lt;span class="k"&gt;for &lt;/span&gt;gunicorn &lt;span class="o"&gt;(&lt;/span&gt;setup.py&lt;span class="o"&gt;)&lt;/span&gt;: started
remote:          Building wheel &lt;span class="k"&gt;for &lt;/span&gt;gunicorn &lt;span class="o"&gt;(&lt;/span&gt;setup.py&lt;span class="o"&gt;)&lt;/span&gt;: finished with status &lt;span class="s1"&gt;'done'&lt;/span&gt;
remote:          Created wheel &lt;span class="k"&gt;for &lt;/span&gt;gunicorn: &lt;span class="nv"&gt;filename&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;gunicorn-20.1.0-py3-none-any.whl &lt;span class="nv"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;78917 &lt;span class="nv"&gt;sha256&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;389135bf7e57c6bee7f1675ce59482c4d7ab3500ab4debf1c633e23986c5326c
remote:          Stored &lt;span class="k"&gt;in &lt;/span&gt;directory: /tmp/pip-ephem-wheel-cache-c0xwgcsz/wheels/ee/ca/72/3e9be4033d3993d4d78e2f4accdfcfff6c690921fef5ea0d57
remote:        Successfully built gunicorn
remote:        Installing collected packages: colorama, itsdangerous, Werkzeug, click, MarkupSafe, Jinja2, flask, gunicorn
remote:        Successfully installed Jinja2-2.11.3 MarkupSafe-1.1.1 Werkzeug-1.0.1 click-7.1.2 colorama-0.4.4 flask-1.1.2 gunicorn-20.1.0 itsdangerous-1.1.0
remote: &lt;span class="nt"&gt;-----&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; Discovering process types
remote:        Procfile declares types -&amp;gt; web
remote: 
remote: &lt;span class="nt"&gt;-----&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; Compressing...
remote:        Done: 52.6M
remote: &lt;span class="nt"&gt;-----&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; Launching...
remote:        Released v3
remote:        https://younup-flask.herokuapp.com/ deployed to Heroku
remote: 
remote: Verifying deploy... &lt;span class="k"&gt;done&lt;/span&gt;&lt;span class="nb"&gt;.&lt;/span&gt;
To https://git.heroku.com/younup-flask.git
 &lt;span class="k"&gt;*&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;new branch]      master -&amp;gt; master
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;C'est magnifique. Heroku nous installe l'interpr√©teur Python et les paquets indiqu√©s avec &lt;code&gt;pip&lt;/code&gt;, puis il red√©marre notre application, qui est maintenant disponible :&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Mbtuynz3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t0wc6e2drbjlkzptba7y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Mbtuynz3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t0wc6e2drbjlkzptba7y.png" alt="app cr√©ee et deploy√©e"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#publier-une-mise-%C3%A0-jour"&gt;
  &lt;/a&gt;
  Publier une mise √† jour
&lt;/h3&gt;

&lt;p&gt;En fait, notre premier &lt;em&gt;push&lt;/em&gt; √©tait d√©j√† une mise √† jour. Les mises √† jour suivantes se font de la m√™me fa√ßon. Imaginons qu'on souhaite mettre √† jour notre version de Python, pour suivre la recommandation donn√©e dans les logs d'installation : "&lt;em&gt;Python has released a security update! Please consider upgrading to python-3.9.4&lt;/em&gt;". On modifie le fichier &lt;code&gt;runtime.txt&lt;/code&gt;, on &lt;em&gt;commit&lt;/em&gt;, on &lt;em&gt;push&lt;/em&gt;, et le processus d'installation et de d√©ploiement recommence. Cette fois, par contre, on lira :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;remote: &lt;span class="nt"&gt;-----&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; Python app detected
remote: &lt;span class="nt"&gt;-----&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; Found python-3.9.2, removing
remote: &lt;span class="nt"&gt;-----&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; No change &lt;span class="k"&gt;in &lt;/span&gt;requirements detected, installing from cache
remote: &lt;span class="nt"&gt;-----&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; Installing python-3.9.4
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Nous avons vu comment d√©ployer tr√®s simplement notre application Flask sur Heroku et ainsi la rendre accessible au monde entier. Nous avons utilis√© un compte gratuit, suffisant pour des tests, des hobbyists, des petites applications. Si vous avez des besoins plus importants, il existe &lt;a href="https://www.heroku.com/pricing"&gt;des versions payantes&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Heroku supporte plusieurs &lt;a href="https://www.heroku.com/languages"&gt;autres langages&lt;/a&gt; &lt;em&gt;out-of-the-box&lt;/em&gt; et fournit des &lt;a href="https://devcenter.heroku.com/start"&gt;&lt;em&gt;getting started guides&lt;/em&gt;&lt;/a&gt; pour chacun d'eux. Il y a des astuces pour utiliser d'autres langages. Certains se servent de Docker (par exemple pour faire du &lt;a href="https://dev.to/alrobilliard/deploying-net-core-to-heroku-1lfe"&gt;C#&lt;/a&gt;) ; d'autres utilisent le &lt;a href="https://devcenter.heroku.com/articles/buildpack-api"&gt;syst√®me de &lt;em&gt;buildpacks&lt;/em&gt;&lt;/a&gt; (par exemple pour faire du &lt;a href="https://github.com/heroku/heroku-buildpack-c"&gt;C&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;D√©sormais, vous ne pourrez plus dire "je ne sais pas comment mettre mon application dans le cloud" !&lt;/p&gt;




&lt;p&gt;Merci d'avoir lu cet article ! Il a √©t√© post√© initialement sur le &lt;a href="https://www.younup.fr/blog/heroku-pour-deployer-votre-application-python-flask-dans-le-cloud"&gt;blog de Younup&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>python</category>
      <category>cloud</category>
      <category>heroku</category>
      <category>programming</category>
    </item>
  </channel>
</rss>
