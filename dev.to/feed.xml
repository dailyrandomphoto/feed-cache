<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>5 Minutes Introduction to Pointers in C++</title>
      <author>chesterchong</author>
      <pubDate>Fri, 22 Oct 2021 01:30:49 +0000</pubDate>
      <link>https://dev.to/chesterchong/5-minutes-introduction-to-pointers-in-c-1mld</link>
      <guid>https://dev.to/chesterchong/5-minutes-introduction-to-pointers-in-c-1mld</guid>
      <description>&lt;p&gt;&lt;em&gt;Note: This article assumes that you have basic knowledge of programming.&lt;/em&gt;&lt;br&gt;
&lt;em&gt;Note 2: Pointer is a very crucial part of data structures and algorithms.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introduction-to-pointer"&gt;
  &lt;/a&gt;
  Introduction to Pointer
&lt;/h2&gt;

&lt;p&gt;Every variable is allocated a section of memory big enough to hold a value of the variable's data type. Since every byte of memory has a unique address, a variable's address is then determined by the first byte allocated to that variable. This is where the pointer is introduced to store the memory address of other object or variable.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A pointer is a specialised variable to store the memory address of other variable or object of the same data type, except void pointer.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#address-of-operator-amp"&gt;
  &lt;/a&gt;
  Address of Operator (&amp;amp;)
&lt;/h3&gt;

&lt;p&gt;We can place address operator (&amp;amp;), or ampersand in front of a variable name, or identifier to return the address of the variable.&lt;br&gt;
&lt;code&gt;int variable = 88;&lt;/code&gt;&lt;br&gt;
&lt;code&gt;&amp;amp;variable&lt;/code&gt;&lt;br&gt;
Then, assign it to a pointer after pointer declaration.&lt;br&gt;
&lt;code&gt;int *ptr;&lt;/code&gt;&lt;br&gt;
&lt;code&gt;ptr = &amp;amp;variable;&lt;/code&gt;&lt;br&gt;
Afterwards, you can print the memory address of variable to the console.&lt;br&gt;
&lt;code&gt;std::cout &amp;lt;&amp;lt; ptr &amp;lt;&amp;lt; std::endl;&lt;/code&gt;&lt;br&gt;
Finally, the memory address is displayed in the form of hexadecimal numbers.&lt;br&gt;
&lt;code&gt;0x1eed300&lt;/code&gt;&lt;br&gt;
You can also print out the address of that pointer.&lt;br&gt;
&lt;code&gt;std::cout &amp;lt;&amp;lt; &amp;amp;ptr &amp;lt;&amp;lt; std::endl;&lt;/code&gt;&lt;br&gt;
The output will be something similar to this.&lt;br&gt;
&lt;code&gt;0x7ffc426d3ec8&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Address operator is meant to help you to store and retrieve memory address of a variable.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#dereference-operator-"&gt;
  &lt;/a&gt;
  Dereference Operator (*)
&lt;/h3&gt;

&lt;p&gt;Aside from handling memory address, we can retrieve and modify the data using the pointer that we have declared just now. Simply place an asterisk in front of a pointer to return the value contained in that memory location.&lt;br&gt;
&lt;code&gt;std::cout &amp;lt;&amp;lt; *ptr &amp;lt;&amp;lt; std::endl;&lt;/code&gt;&lt;br&gt;
The output will be the value of which variable was assigned.&lt;br&gt;
&lt;code&gt;88&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Dereference operator is used to access and modify data contained in a memory location pointed to by a pointer.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#pointer-to-pointer"&gt;
  &lt;/a&gt;
  Pointer to Pointer
&lt;/h3&gt;

&lt;p&gt;What's more fun is you can create multi level pointers. The idea is that we create new pointers to store memory address of existing pointers. For instance, you create level 2 pointer.&lt;br&gt;
&lt;code&gt;int **ptr2;&lt;/code&gt;&lt;br&gt;
Moving next, you assign it with the memory address of level 1 pointer.&lt;br&gt;
&lt;code&gt;ptr2 = &amp;amp;ptr1;&lt;/code&gt;&lt;br&gt;
Lastly, you can choose to print the memory address or the value contained of that variable.&lt;br&gt;
&lt;code&gt;std::cout &amp;lt;&amp;lt; *ptr2 &amp;lt;&amp;lt; std::endl;&lt;/code&gt;&lt;br&gt;
&lt;code&gt;std::cout &amp;lt;&amp;lt; **ptr2 &amp;lt;&amp;lt; std::endl;&lt;/code&gt;&lt;br&gt;
The output:&lt;br&gt;
&lt;code&gt;0x1eed300&lt;/code&gt;&lt;br&gt;
&lt;code&gt;88&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#pointer-size"&gt;
  &lt;/a&gt;
  Pointer Size
&lt;/h3&gt;

&lt;p&gt;The size of a pointer in C++ depends on the word size of processor on most occasions. For instance, pointer size is 4 bytes for a 32 bit computer and 8 bytes for a 64 bit computer, regardless of data types.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#void-pointer"&gt;
  &lt;/a&gt;
  Void Pointer
&lt;/h3&gt;

&lt;p&gt;Void pointer is a pointer with no associated data type. It can hold address of any data type and can be typecasted to any data type. For the moment, we ain't going to talk about the implementation of void pointer.&lt;/p&gt;

</description>
      <category>cpp</category>
      <category>beginners</category>
    </item>
    <item>
      <title>CONVERT BYTE SLICE TO AND FROM OTHER TYPES</title>
      <author>birowo</author>
      <pubDate>Fri, 22 Oct 2021 01:09:39 +0000</pubDate>
      <link>https://dev.to/birowo/convert-byte-slice-to-and-from-other-types-4jkd</link>
      <guid>https://dev.to/birowo/convert-byte-slice-to-and-from-other-types-4jkd</guid>
      <description>&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;package main

import (
    "fmt"
    "reflect"
    "unsafe"
)

//byte slice pointer to string pointer convertion
func bsPtrToStrPtr(bsPtr *[]byte) (strPtr *string) {
    return (*string)(unsafe.Pointer(bsPtr))
}

//string pointer to byte slice pointer convertion
func strPtrToBsPtr(strPtr *string) (bsPtr *[]byte) {
    bsPtr = (*[]byte)(unsafe.Pointer(strPtr))
    //the capacity of *bsPtr still not set
    //so it must be set with the length of *strPtr
    //setting its capacity must be done via reflection to reach their header
    (*reflect.SliceHeader)(unsafe.Pointer(bsPtr)).Cap = (*reflect.SliceHeader)(unsafe.Pointer(strPtr)).Len
    return
}

//byte slice pointer to int64 pointer convertion
func bsPtrToInt64Ptr(bsPtr *[]byte) (int64Ptr *int64) {
    return (*int64)(unsafe.Pointer((*reflect.SliceHeader)(unsafe.Pointer(bsPtr)).Data))
}

//int64 pointer to byte slice pointer convertion
func int64PtrToBsPtr(int64Ptr *int64, bsPtr *[]byte) {
    //int64 does not have header like string, so we can not do like this :
    //bsPtr = (*[]byte)(unsafe.Pointer(int64Ptr)
    //like on string convertion above
    //if we do that, the SliceHeader.Data of *bsPtr will contain
    //value (*int64Ptr), not pointer (int64Ptr) as it should be

    slcHdr := (*reflect.SliceHeader)(unsafe.Pointer(bsPtr))
    slcHdr.Data = uintptr(unsafe.Pointer(int64Ptr))
    slcHdr.Len = 8 //we know that the size of int64 is 8 byte
    slcHdr.Cap = 8
}

//reverse byte slice
func reverse(bs []byte) {
    for i, j := 0, len(bs)-1; i &amp;lt; j; i, j = i+1, j-1 {
        bs[i], bs[j] = bs[j], bs[i]
    }
}

func main() {
    bs := []byte("test 123")
    strPtr := bsPtrToStrPtr(&amp;amp;bs)
    fmt.Printf("byte slice: %s, type: %T; string: %s, type: %T\n", bs, bs, *strPtr, *strPtr)

    //be noticed that if we change bs value(must have same length with original value),
    //then the value of *strPtr also changed
    bs = []byte("123 test")
    fmt.Printf("byte slice: %s, type: %T; string: %s, type: %T\n", bs, bs, *strPtr, *strPtr)
    //and vice versa
    *strPtr = "wertyuio"
    fmt.Printf("byte slice: %s, type: %T; string: %s, type: %T\n", bs, bs, *strPtr, *strPtr)
    fmt.Println("byte slice, length:", len(bs), "&amp;amp; capacity:", cap(bs), ";string length:", len(*strPtr))
    fmt.Println()

    str := "asdfghjkl"
    bsPtr := strPtrToBsPtr(&amp;amp;str)
    fmt.Printf("byte slice: %s, type: %T; string: %s, type: %T\n", *bsPtr, *bsPtr, str, str)

    //be noticed that if we change str value(must have same length with original value),
    //then the value of *bsPtr also changed
    str = "lkjhgfdsa"
    fmt.Printf("byte slice: %s, type: %T; string: %s, type: %T\n", *bsPtr, *bsPtr, str, str)
    //and vice versa
    *bsPtr = []byte("1234S6789")
    fmt.Printf("byte slice: %s, type: %T; string: %s, type: %T\n", *bsPtr, *bsPtr, str, str)
    fmt.Println("byte slice, length:", len(*bsPtr), "&amp;amp; capacity:", cap(*bsPtr), ";string length:", len(str))
    fmt.Println()

    //in slice, int64 allocation size is 8 bytes, index-0 hold LSB, index-7 hold MSB
    //LSB: least significant byte mean if we change that byte will only change little amount of the value
    //MSB: most significant byte mean the opposite of that I mentioned above
    bs = []byte{0x15, 0x81, 0xe9, 0x7d, 0xf4, 0x10, 0x22, 0x11}
    int64Ptr := bsPtrToInt64Ptr(&amp;amp;bs)
    //if we print byte slice, it will be displayed as how we write it on code
    //from index-0 will be displayed on leftmost, to last index will be displayed on rightmost
    fmt.Printf("byte slice: %x, type: %T\n", bs, bs)
    //however as int64 value, it will print MSB on leftmost and LSB on rightmost
    fmt.Printf("int64(hex): %x, type: %T\n", *int64Ptr, *int64Ptr)
    //bs = []byte{0xb1, 0x1c, 0x6c, 0xb1, 0xf4, 0x10, 0x22, 0x11}
    *int64Ptr = 1234567890987654321
    //if we change the int64 value, the byte slice value will also change
    fmt.Printf("byte slice: %x, type: %T\n", bs, bs)
    fmt.Printf("int64(hex): %x, type: %T\n", *int64Ptr, *int64Ptr)
    fmt.Println()

    _int64 := int64(1234543210987656789)
    int64PtrToBsPtr(&amp;amp;_int64, &amp;amp;bs)
    fmt.Printf("byte slice: %x, type: %T\n", bs, bs)
    fmt.Printf("int64(hex): %x, type: %T\n", _int64, _int64)
    _int64 = int64(1231231230321321321)
    //bs = []byte{0x69, 0x65, 0xab, 0xd7, 0x47, 0x36, 0x16, 0x11}
    fmt.Printf("byte slice: %x, type: %T\n", bs, bs)
    fmt.Printf("int64(hex): %x, type: %T\n", _int64, _int64)
    fmt.Println()

    //other thing that also we must pay attention is about endianness (big endian &amp;amp; little endian)
    //i found this article that might be worth it to read :
    //https://www.freecodecamp.org/news/what-is-endianness-big-endian-vs-little-endian/
    //to correct the endianness maybe we need byte slice reversal function :
    bs = []byte{0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f}
    fmt.Printf("before reverse process: %x\n", bs)
    reverse(bs)
    fmt.Printf("after reverse process: %x\n", bs)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;build output :&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ws6huNrt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/21541959/138377141-84d7baeb-6637-4434-917d-aebc2443905a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ws6huNrt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/21541959/138377141-84d7baeb-6637-4434-917d-aebc2443905a.png" alt="bytesliceconversion_go"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;playground : &lt;a href="https://play.golang.org/p/TCvWw1mf4kG"&gt;https://play.golang.org/p/TCvWw1mf4kG&lt;/a&gt;&lt;/p&gt;

</description>
      <category>go</category>
      <category>conversion</category>
      <category>byteslice</category>
      <category>reflect</category>
    </item>
    <item>
      <title>Desenvolvimento talvez não seja pra você</title>
      <author>Tulio Calil</author>
      <pubDate>Fri, 22 Oct 2021 01:04:04 +0000</pubDate>
      <link>https://dev.to/tuliocalil/desenvolvimento-talvez-nao-seja-pra-voce-5dnk</link>
      <guid>https://dev.to/tuliocalil/desenvolvimento-talvez-nao-seja-pra-voce-5dnk</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VY9MGXg1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6dq931n014310xj8x9sf.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VY9MGXg1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6dq931n014310xj8x9sf.jpg" alt="Capa"&gt;&lt;/a&gt;&lt;br&gt;
Sim, talvez não seja e não tem nenhum problema nisso.&lt;/p&gt;

&lt;p&gt;Talvez os altos salários e toda a bolha de desenvolvedores que você tem contato tenham te seduzido. Talvez todas aquelas empresas hype, macbooks, leds rgb, monitores ultrawide e várias outras coisas brilhantes podem ter te convencido que essa área é para você. Você se esforça, se lamenta por não estar se identificando com aquilo e por mais um tempo tenta gostar da área. Mas até quando você deve insistir nisso? Quanto tempo você deveria gastar tentando gostar de algo que talvez não seja sua afinidade? Talvez devêssemos tentar primeiro nos entender para depois responder essa pergunta e eu vou tentar te ajudar com alguns exemplos que vivenciei.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#por-que-eu-quero-ser-dev-"&gt;
  &lt;/a&gt;
  Por que eu quero ser dev ?
&lt;/h2&gt;

&lt;p&gt;Talvez um amigo tenha te chamado e vendido pra você essa experiência que ele teve, com muita animação e brilho nos olhos, além de vários gadgets que ele aponta como fruto do seu trabalho;&lt;/p&gt;

&lt;p&gt;Pode ser também que você faça uma faculdade de TI que tem o foco em desenvolvimento. Dessa forma, você se sente coagido a fazer apenas isso, afinal, as provas e trabalhos vão te cobrar esse conhecimento e é isso que importa pra uma faculdade.&lt;/p&gt;

&lt;p&gt;E por que não um/uma marido/esposa que te influenciou para que vocês trabalhassem juntos e compartilhassem das mesmas experiências de trabalho?&lt;/p&gt;

&lt;p&gt;Você participou de um Hackathon e se encantou por tudo aquilo que viu: criar algo do zero, fazer funcionar, desenhar telas e ver alguém testando.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#como-eu-me-sinto-sobre-isso-"&gt;
  &lt;/a&gt;
  Como eu me sinto sobre isso ?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Preciso de dinheiro de forma fácil e rápida e, pelo que vejo as pessoas falando, essa parece uma profissão para isso;&lt;/li&gt;
&lt;li&gt;Um colega tem me pressionado e me dado muita força para que eu estude e entre na área, mas eu não acho que faz muito sentido pra mim;&lt;/li&gt;
&lt;li&gt;Eu vejo o mercado de trabalho super aquecido e quero fazer parte disso, mas não estou achando tão fácil quanto parece;&lt;/li&gt;
&lt;li&gt;Minha família deposita muita expectativa em mim e espera que eu entre na área depois de me formar;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Se você se identifica com algo dessa lista, você tem grandes chances de não ter o perfil para desenvolvedor, porém, não fique bravo comigo, pois não estou dizendo que você não seja capaz, mas apenas querendo que você veja a área de TI de uma maneira mais ampla. Agora veja se essas situações aqui fazem sentido pra você também:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Eu gosto muito de estar em um time criando sites, apps e outros produtos digitais e acho super legal como temos liberdade criativa para realizar algo do zero;&lt;/li&gt;
&lt;li&gt;A sensação de estar com meus amigos trabalhando no mesmo projeto e podendo acrescentar de maneira positiva e super legal;&lt;/li&gt;
&lt;li&gt;Eu amo fazer interfaces, imagens, animações e adoro vê-las implementadas em algum sistema real;&lt;/li&gt;
&lt;li&gt;Eu fico fascinado com esse ecossistema de tecnologia e com todas as coisas conectadas, além dos horários flexíveis com mentalidades modernas;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Se alguma dessas situações fez sentido pra você, não não necessariamente desenvolvimento seja sua área, porém, muito provavelmente, TI seja! 🥳&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ti-n%C3%A3o-se-resume-em-desenvolvimento"&gt;
  &lt;/a&gt;
  TI não se resume em desenvolvimento
&lt;/h2&gt;

&lt;p&gt;Isso é tão óbvio que, muitas vezes, é esquecido.&lt;br&gt;
Você pode estar apaixonado pela área de TI e não pela área de desenvolvimento e você pode entrar nesse ecossistema com diversas outras profissões, que talvez façam mais sentido para você.&lt;/p&gt;

&lt;p&gt;Mas quais outras profissões existem próximas ao desenvolvimento ?&lt;br&gt;
Eu não vou conseguir listar todas, mas vou tentar ajudar o máximo possível. Se você, leitor, lembra de outras áreas não citadas, por favor comente !&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#al%C3%A9m-do-desenvolvimento"&gt;
  &lt;/a&gt;
  Além do desenvolvimento
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.linkedin.com/jobs/search/?keywords=ui%20ux%20designer"&gt;Ui/Ux Designer&lt;/a&gt; - Para você que super curte toda parte estética de criação de interfaces mas não suporta CSS e afins.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.linkedin.com/jobs/search/?geoId=106057199&amp;amp;keywords=devops&amp;amp;location=Brasil"&gt;Devops&lt;/a&gt; - Se você é aquela pessoa que super curte o mundo linux, sistemas operacionais, redes e é curioso sobre nuvem, essa é a sua cara.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.linkedin.com/jobs/search/?geoId=106057199&amp;amp;keywords=scrum%20master&amp;amp;location=Brasil"&gt;Scrum master&lt;/a&gt; - Se você tem mais um perfil de gerenciar, que tal gerenciar um time inteiro ?&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.linkedin.com/jobs/search/?geoId=106057199&amp;amp;keywords=QA&amp;amp;location=Brasil"&gt;Quality Analyst&lt;/a&gt; - Você curte futucar aplicações procurando erros e sair clicando em tudo até a aplicação travar ? parabéns, você é o famoso QA.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.linkedin.com/jobs/search/?geoId=106057199&amp;amp;keywords=product%20owner&amp;amp;location=Brasil"&gt;Product Owner&lt;/a&gt; - Você tem mais um perfil de dono do projeto ? Defende como a aplicação deve ser desenvolvida e tem um bom senso de prioridade ?&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#conclus%C3%A3o"&gt;
  &lt;/a&gt;
  Conclusão
&lt;/h2&gt;

&lt;p&gt;Resumidamente, faça o que você gosta, dê o seu melhor.Entendo que isso não é possível para todos, mas se for o seu caso, tente.&lt;br&gt;
Eu espero que essa postagem tenha te ajudado de alguma forma, sinta-se a vontade para comentar.&lt;br&gt;
Meus posts costumam ser técnicos, mas escrevi esse pensando em algumas pessoas e espero que as ajudem.&lt;/p&gt;

&lt;p&gt;Obrigado ao André por ter revisado o texto para mim!&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>programming</category>
      <category>career</category>
      <category>discuss</category>
    </item>
    <item>
      <title>Create S3 Lifecycle Rules with Tag Filters Using Python AWS CDK</title>
      <author>chrishart0</author>
      <pubDate>Thu, 21 Oct 2021 23:55:21 +0000</pubDate>
      <link>https://dev.to/signet-seal/create-s3-lifecycle-rules-with-tag-filters-using-python-aws-cdk-4d2o</link>
      <guid>https://dev.to/signet-seal/create-s3-lifecycle-rules-with-tag-filters-using-python-aws-cdk-4d2o</guid>
      <description>&lt;h2&gt;
  &lt;a href="#get-right-to-it-here-is-the-code"&gt;
  &lt;/a&gt;
  Get right to it, here is the code
&lt;/h2&gt;

&lt;p&gt;Python CDK code for creating an S3 bucket with a lifecycle rule which uses a tag filter.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;bucket = s3.Bucket(self, "myBucket",
    lifecycle_rules = [
        s3.LifecycleRule(
            id="example-rule-made-with-python-cdk",
            expiration=core.Duration.days(1),
            tag_filters={ 
                'Key': 'delete_in_1_day', 
                'Value': 'true'
            }
        )
    ]
)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Relevant CDK docs:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.aws.amazon.com/cdk/api/latest/python/aws_cdk.aws_s3/Bucket.html"&gt;https://docs.aws.amazon.com/cdk/api/latest/python/aws_cdk.aws_s3/Bucket.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.aws.amazon.com/cdk/api/latest/python/aws_cdk.aws_s3/LifecycleRule.html#aws_cdk.aws_s3.LifecycleRule"&gt;https://docs.aws.amazon.com/cdk/api/latest/python/aws_cdk.aws_s3/LifecycleRule.html#aws_cdk.aws_s3.LifecycleRule&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; AWS Lifecycle rules do not get more precise than 24 hours[&lt;a href="https://aws.amazon.com/premiumsupport/knowledge-center/s3-lifecycle-rule-delay/"&gt;docs&lt;/a&gt;]. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#more-cdk-or-aws-serverless-questions"&gt;
  &lt;/a&gt;
  More CDK or AWS Serverless Questions?
&lt;/h2&gt;

&lt;p&gt;Feel free to leave a comment here or hit us up on &lt;a href="https://www.linkedin.com/company/signet-seal"&gt;LinkedIn&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Want to learn more about how SignetSeal can help make your chats more secure? Read more about us on our website &lt;a href="https://signetseal.com/"&gt;SignetSeal.com&lt;/a&gt;&lt;/p&gt;

</description>
      <category>aws</category>
      <category>cloudnative</category>
      <category>cdk</category>
      <category>s3</category>
    </item>
    <item>
      <title>Product developers’ guide to cross joins</title>
      <author>Mage</author>
      <pubDate>Thu, 21 Oct 2021 23:53:57 +0000</pubDate>
      <link>https://dev.to/mage_ai/product-developers-guide-to-cross-joins-3obn</link>
      <guid>https://dev.to/mage_ai/product-developers-guide-to-cross-joins-3obn</guid>
      <description>&lt;h2&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  TLDR
&lt;/h2&gt;

&lt;p&gt;Learn how to use AI to select your next outfit that matches the occasion. Featuring Pandas and the merge function to find all combinations.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;We’ve all been there staring into our closet, admiring all the clothes but not quite realizing all the different combinations of clothes. In this follow up guide, I’ll go over how we can use AI to make our selection more transparent by understanding all the combinations we can use and when we should wear them. Let’s get started by looking at our wardrobe!&lt;/p&gt;


&lt;center&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zNBI-fG4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dms0vhx0eam74dm62562.jpg" alt="Image description"&gt;&lt;em&gt;What’s in your wardrobe? (Source: &lt;a href="https://www.inprnt.com/gallery/annamu/"&gt;Anna Mu&lt;/a&gt;)&lt;/em&gt;
&lt;/center&gt;
&lt;h2&gt;
  &lt;a href="#before-we-begin"&gt;
  &lt;/a&gt;
  Before we begin
&lt;/h2&gt;

&lt;p&gt;First, please make sure you know the basics of sorting and filtering in Pandas, as we’ll be using it frequently. For a quick refresher, read our &lt;a href="https://www.mage.ai/blog/product-developers-guide-to-getting-started-with-ai-pt-1-intro-dataframes"&gt;introductory guide&lt;/a&gt; for information on importing, exporting, and processing all our data, and our guide to &lt;a href="https://www.mage.ai/blog/product-developers-guide-to-customize-data-ai-pt2-join-merge-dataframes"&gt;merge&lt;/a&gt;. With that out of the way, let’s start by downloading the &lt;a href="https://app.box.com/s/tcloz4exgtckf4ed5yx1ykcv9tio3su0/file/875323384078"&gt;wardrobe&lt;/a&gt; dataset and importing it on Google Collab.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uwRwMAva--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/37u27fkxajn1m3q3yusk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uwRwMAva--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/37u27fkxajn1m3q3yusk.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#my-closet"&gt;
  &lt;/a&gt;
  My closet
&lt;/h2&gt;

&lt;p&gt;The wardrobe dataset contains information on 5 different shirts, and 5 different pants, along with labels for whether they are casual wear. We’ll break down this dataset into 2 portions, 1 for shirts and another for pants.&lt;/p&gt;


&lt;center&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BEpw_Yq---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qyy0dqlyjpjbb7irlb7q.jpg" alt="Image description"&gt;&lt;em&gt;Shirts: &lt;a href="https://www.google.com/imgres?imgurl=https%3A%2F%2Frfis.freetls.fastly.net%2Fpublic%2Fcontent%2F4845243%3Far%3D3%3A4%26w%3D412&amp;amp;imgrefurl=https%3A%2F%2Fwww.stylepit.com%2Fname-it-neon-yellow-nkmterl-ss-top-356984-592&amp;amp;tbnid=sLwJXNUB0Uq8qM&amp;amp;vet=12ahUKEwiyveXR-NvzAhXqADQIHRumC9QQMygGegUIARD5Ag..i&amp;amp;docid=X1cfD5hlKU_wcM&amp;amp;w=412&amp;amp;h=549&amp;amp;q=t-shirt%20neon%20yellow&amp;amp;hl=en&amp;amp;client=safari&amp;amp;ved=2ahUKEwiyveXR-NvzAhXqADQIHRumC9QQMygGegUIARD5Ag"&gt;T-Shirt&lt;/a&gt;, &lt;a href="https://m.media-amazon.com/images/I/91lHoiqDkYL._AC_UL1500_.jpg"&gt;Sweatshirt&lt;/a&gt;, &lt;a href="https://b-edge.friartux.com/f00000000189637/www.friartux.com/pub/media/catalog/product/cache/a761eb790ae5e77b4635e4d17debaad9/a/p/apple-red-vest-102ap.jpg"&gt;Vest&lt;/a&gt;, &lt;a href="https://www.google.com/imgres?imgurl=https%3A%2F%2Fwww.lelo.com%2Fsites%2Fdefault%2Ffiles%2FLELO_Accessories_TUX_product_2x_0.jpg&amp;amp;imgrefurl=https%3A%2F%2Fwww.lelo.com%2Ftux&amp;amp;tbnid=gbvGsB8w3BaFLM&amp;amp;vet=12ahUKEwjq0PP--NvzAhVfATQIHUJxCQMQMygFegUIARCVAw..i&amp;amp;docid=K1r3uXvNZQvDJM&amp;amp;w=1000&amp;amp;h=1000&amp;amp;q=tux&amp;amp;hl=en&amp;amp;client=safari&amp;amp;ved=2ahUKEwjq0PP--NvzAhVfATQIHUJxCQMQMygFegUIARCVAw"&gt;Tuxedo&lt;/a&gt;, and &lt;a href="https://i.insider.com/549af980ecad042d5d8b456a?width=1300&amp;amp;format=jpeg&amp;amp;auto=webp"&gt;Suit&lt;/a&gt;&lt;/em&gt;
&lt;/center&gt;


&lt;center&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mJb8Jd5l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3w0id6sdxluq7hcorw0f.jpg" alt="Image description"&gt;&lt;em&gt;Pants: &lt;a href="https://images.thdstatic.com/productImages/67e1a55e-e291-4662-9119-109faeb50bb0/svn/charcoal-red-kap-work-pants-pt38ch-34-32-64_100.jpg"&gt;Slacks&lt;/a&gt;, &lt;a href="https://cdni.llbean.net/is/image/wim/250265_1145_41?hei=1092&amp;amp;wid=950&amp;amp;resMode=sharp2&amp;amp;defaultImage=llbprod/A0211793_2"&gt;Jeans&lt;/a&gt;, &lt;a href="https://cdn.shopify.com/s/files/1/0077/0432/products/Khakinators_4_34-_1_1024x1024.jpg?v=1628772654"&gt;Shorts&lt;/a&gt;, &lt;a href="https://cdni.llbean.net/is/image/wim/503739_129_41?hei=1092&amp;amp;wid=950&amp;amp;resMode=sharp2&amp;amp;defaultImage=llbprod/A0211793_2"&gt;Cargo pants&lt;/a&gt;, and &lt;a href="https://cdn.shopify.com/s/files/1/0207/7214/products/18430---Men_s-Insulated-Overall---019-Black---Front---Noble_620x.jpg?v=1608770176"&gt;overalls&lt;/a&gt;&lt;/em&gt;
&lt;/center&gt;


&lt;center&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2OLZ5uvn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4y6ze0c5a37bks7jzo4b.png" alt="Image description"&gt;&lt;em&gt;So many options&lt;/em&gt;
&lt;/center&gt;
&lt;h2&gt;
  &lt;a href="#cartesian-product"&gt;
  &lt;/a&gt;
  Cartesian Product
&lt;/h2&gt;

&lt;p&gt;Using our datasets, we’re going to begin creating a combination calculated by the &lt;a href="https://en.wikipedia.org/wiki/Cartesian_product"&gt;cartesian product&lt;/a&gt;. This is an operation where every object is paired with another object. In other words, a shirt for each pair of pants to calculate all possible combinations. This is a many to many relationship, where many objects connect with many other objects.&lt;/p&gt;


&lt;center&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9tywz3I7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pfq2d9lg6g3c3rrhetfh.png" alt="Image description"&gt;&lt;em&gt;Source: &lt;a href="https://www.mathstopia.net/wp-content/uploads/2021/01/cartesian-products.jpg"&gt;Mathstopia&lt;/a&gt;&lt;/em&gt;
&lt;/center&gt;
&lt;h2&gt;
  &lt;a href="#cross-join"&gt;
  &lt;/a&gt;
  Cross Join
&lt;/h2&gt;

&lt;p&gt;Another term for the cartesian product is a cross join, which is a join that follows the operation of a cartesian product, by crossing each object with each other. A many to many relationship can be specified in Pandas using on and matching values. In this case, we want everything to match with everything, so we add a new column called ‘keys’ and store in both the same value.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ipmz7vOY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qk75y60xslcdy19wwo59.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ipmz7vOY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qk75y60xslcdy19wwo59.png" alt="Image description"&gt;&lt;/a&gt;&lt;br&gt;
Once the key is created, we call &lt;strong&gt;merge&lt;/strong&gt; on the keys to perform the Cartesian Product.&lt;/p&gt;


&lt;center&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FyQHaEjK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f0q3ta9ugch6a6cjtih4.png" alt="Image description"&gt;&lt;em&gt;Result of the cross join&lt;/em&gt;
&lt;/center&gt;

&lt;p&gt;Our result shows that we have 25 different outfits, and will use this finalized data to answer questions about the wardrobe and pick the right outfit for each special occasion, whether it’s a date, casual hangout, trips and more. Let’s start by looking at common scenarios.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#scenarios"&gt;
  &lt;/a&gt;
  Scenarios
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;What could be worn to a date?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You’ve got to dress to impress by picking formal clothing.&lt;/p&gt;


&lt;center&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xeIYmZJe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cjfj2mcm80imr5b40dzf.png" alt="Image description"&gt;&lt;em&gt;Slacks with a vest, tux, or suit. (Source: Date Night)&lt;/em&gt;
&lt;/center&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fK7Q7U2S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pq6h4a56vpkm184taxxc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fK7Q7U2S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pq6h4a56vpkm184taxxc.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How about playing at an Amusement Park?&lt;/strong&gt;&lt;br&gt;
Casual clothing for fun and games!&lt;/p&gt;


&lt;center&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bF1q1kCz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/er97u5ijmc5zh997x1vl.png" alt="Image description"&gt;&lt;em&gt;You’ve got a lot of outfits to choose from.&lt;/em&gt;
&lt;/center&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aR0i7Z10--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mvcvfrpxxco86oethkhp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aR0i7Z10--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mvcvfrpxxco86oethkhp.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What about going to class?&lt;/strong&gt;&lt;br&gt;
Wear clothes that match. The last thing you want is to be bullied because of the way you dress. There are 11 different combinations of matching clothes that are both casual or not.&lt;/p&gt;


&lt;center&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6jo3XE36--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wdm63zotk9dd9vdyesgx.gif" alt="Image description"&gt;&lt;em&gt;Outfits that match (Source: &lt;a href="https://media.giphy.com/media/KiXl0vfc9XIIM/giphy.gif"&gt;Tumblr&lt;/a&gt;)&lt;/em&gt;
&lt;/center&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jNgox26e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u41joka1rw0rlhyplnpe.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jNgox26e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u41joka1rw0rlhyplnpe.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Anything special we could wear for hiking?&lt;/strong&gt;&lt;br&gt;
When hiking you want to be prepared, so wear cargo shorts with lots of pockets, along with any casual shirt.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hxHpTTQF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e4jm511kr6fgjtkgqc8u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hxHpTTQF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e4jm511kr6fgjtkgqc8u.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;center&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rF-WdOIC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/homrxxbv341wmzstumy2.png" alt="Image description"&gt;&lt;em&gt;A happy camper wears cargo pants and a t-shirt or a sweatshirt. (Source: &lt;a href="https://www.nationalgeographic.com/travel/national-parks/article/yosemite-national-park"&gt;National Geographic&lt;/a&gt;)&lt;/em&gt;
&lt;/center&gt;

&lt;p&gt;&lt;strong&gt;Finally, what about a leisure-filled vacation?&lt;/strong&gt;&lt;br&gt;
You may wear whatever outfit you wish. You’re on vacation and it doesn’t need to match. You have 25 different combinations to choose from.&lt;/p&gt;


&lt;center&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mG0jNCW6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2mbx1uyc8j11ygq5xe0p.png" alt="Image description"&gt;&lt;em&gt;A vacation to the Caribbean (Source: &lt;a href="https://www.jetsetter.com//uploads/sites/7/2018/04/ovlZ8yxN-1380x1035.jpeg"&gt;Jade Mountain&lt;/a&gt;)&lt;/em&gt;
&lt;/center&gt;
&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Outside of saving time and wearing the right attire for the occasion, cross joins are an efficient way to get all combinations. Combined with filters, this can greatly reduce the cost and increase the speed of data preprocessing. Speaking of which, our outfit isn’t complete yet. It’s become customary to wear a mask out in public. Cross join your new combination with another dataset of masks to complete the outfit.&lt;/p&gt;



&lt;center&gt;
&lt;br&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TbHjt5f0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uypzcu6jhjzufp8cm893.png" alt="Image description"&gt;&lt;em&gt;Just in time for Halloween! (Source: &lt;a href="https://i.insider.com/5eaae05f3dac9a601e74b9b6?width=1136&amp;amp;format=jpeg"&gt;Disney&lt;/a&gt;)&lt;/em&gt;&lt;br&gt;
&lt;/center&gt;

</description>
      <category>machinelearning</category>
      <category>pandas</category>
      <category>crossjoin</category>
      <category>mage</category>
    </item>
    <item>
      <title>Create CloudWatch Alarms with Python AWS CDK </title>
      <author>chrishart0</author>
      <pubDate>Thu, 21 Oct 2021 23:24:14 +0000</pubDate>
      <link>https://dev.to/signet-seal/create-cloudwatch-alarms-with-python-aws-cdk-1e53</link>
      <guid>https://dev.to/signet-seal/create-cloudwatch-alarms-with-python-aws-cdk-1e53</guid>
      <description>&lt;h2&gt;
  &lt;a href="#create-the-alarm"&gt;
  &lt;/a&gt;
  Create the alarm
&lt;/h2&gt;

&lt;p&gt;Put this into your Python AWS CDK stack to create an alarm on a bucket asigned to a varibale named &lt;code&gt;bucket&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;bucket = s3.Bucket...

s3_size_alarm = cloudwatch.Alarm(self, 'bucket_overloaded_alarm',
    metric= cloudwatch.Metric(
        namespace = "AWS/S3", 
        metric_name = "BucketSizeBytes",
        dimensions={
            "BucketName": bucket.bucket_name,
            "StorageType": "StandardStorage",
        },
        period = core.Duration.days(1),
        statistic="Maximum",
    ), 
    evaluation_periods=1, 
    threshold=1000000000 #1 GB
)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will create a CloudWatch alarm which:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Alarm if the size of the bucket goes over 1GB&lt;/li&gt;
&lt;li&gt;Only monitors objects with the &lt;code&gt;StandardStorage&lt;/code&gt; type&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Relevant CDK docs:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.aws.amazon.com/cdk/api/latest/python/aws_cdk.aws_cloudwatch/Alarm.html"&gt;https://docs.aws.amazon.com/cdk/api/latest/python/aws_cdk.aws_cloudwatch/Alarm.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.aws.amazon.com/cdk/api/latest/python/aws_cdk.aws_cloudwatch/Metric.html"&gt;https://docs.aws.amazon.com/cdk/api/latest/python/aws_cdk.aws_cloudwatch/Metric.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Warning:&lt;/strong&gt; Don't rely on an alarm watching the &lt;code&gt;BucketSizeBytes&lt;/code&gt; metric to make sure your bucket doesn't grow too large. This metric is &lt;a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/cloudwatch-monitoring.html"&gt;only collected once a day&lt;/a&gt;. Consider opting in to &lt;a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/metrics-dimensions.html"&gt;S3 request metrics&lt;/a&gt; for more in-depth S3 monitoring&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-alarm-action"&gt;
  &lt;/a&gt;
  Create alarm action
&lt;/h2&gt;

&lt;p&gt;Alarms aren't very useful if they don't do anything. Setup some actions:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;topic = sns.Topic.from_topic_arn(self,'snstopic',"arn:aws:sns:us-east-1:123456789012:alarm-go-ahhhhhhhhhhhh")

s3_size_alarm.add_alarm_action(
    cloudwatch_actions.SnsAction(
        topic = topic
    )
)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Relevant CDK docs:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.aws.amazon.com/cdk/api/latest/python/aws_cdk.aws_sns/Topic.html#aws_cdk.aws_sns.Topic.from_topic_arn"&gt;https://docs.aws.amazon.com/cdk/api/latest/python/aws_cdk.aws_sns/Topic.html#aws_cdk.aws_sns.Topic.from_topic_arn&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#more-cdk-or-aws-serverless-questions"&gt;
  &lt;/a&gt;
  More CDK or AWS Serverless Questions?
&lt;/h2&gt;

&lt;p&gt;Feel free to leave a comment here or hit us up on &lt;a href="https://www.linkedin.com/company/signet-seal"&gt;LinkedIn&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Want to learn more about how SignetSeal can help make your chats more secure? Read more about us on our &lt;a href="https://signetseal.com/"&gt;website&lt;/a&gt;&lt;/p&gt;

</description>
      <category>aws</category>
      <category>cdk</category>
      <category>iac</category>
      <category>cloudnative</category>
    </item>
    <item>
      <title>Build a REST API with Node.js, Express, TypeScript, MongoDB &amp; Zod - Full course</title>
      <author>Tom Nagle</author>
      <pubDate>Thu, 21 Oct 2021 22:22:49 +0000</pubDate>
      <link>https://dev.to/tomdoestech/build-a-rest-api-with-nodejs-express-typescript-mongodb-zod-full-course-3i0c</link>
      <guid>https://dev.to/tomdoestech/build-a-rest-api-with-nodejs-express-typescript-mongodb-zod-full-course-3i0c</guid>
      <description>&lt;p&gt;In this series of videos you will build a REST API with Node.js, Express, TypeScript, MongoDB and Zod. You will learn how to build out the REST API, how to test it and how to build a simple user interface with React that includes authentication.&lt;/p&gt;

&lt;p&gt;By following all the videos, you will learn:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;REST API concepts&lt;/li&gt;
&lt;li&gt;Testing REST APIs&lt;/li&gt;
&lt;li&gt;TypeScript&lt;/li&gt;
&lt;li&gt;JWT access &amp;amp; refresh tokens&lt;/li&gt;
&lt;li&gt;React with Nextjs&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In the first video we build out the REST API with a simple authentication system.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/BWUi6BS9T5Y"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;In this next video we fix an issue with Mongoose having no export for DocumentDefinition and you will learn a better way to type the service inputs.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/5-1KuU-21uI"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;In this video you will learn how to test the REST API and some testing best-practices.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/r5L1XRZaCR0"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;In this video you will build out a user interface for your REST API with React &amp;amp; Next.js. You will learn how the access &amp;amp; refresh tokens are implemented on the client-side.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/oSz23pPBpFY"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Still to come:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Google OAuth&lt;/li&gt;
&lt;li&gt;Deployment with Docker &amp;amp; Caddy&lt;/li&gt;
&lt;li&gt;Metrics with Prometheus&lt;/li&gt;
&lt;/ul&gt;

</description>
    </item>
    <item>
      <title>What is CI/CD in DevOps?</title>
      <author>Erin Schaffer</author>
      <pubDate>Thu, 21 Oct 2021 22:09:43 +0000</pubDate>
      <link>https://dev.to/educative/what-is-cicd-in-devops-3lg4</link>
      <guid>https://dev.to/educative/what-is-cicd-in-devops-3lg4</guid>
      <description>&lt;p&gt;We’re only a couple of months away from the new year, which means it’s time to start looking ahead to the tech trends that will dominate the software industry in 2022. As the new year approaches, we want to help you get familiar with upcoming trends so you can be prepared and start taking your skills to the next level. Today, we’ll discuss &lt;strong&gt;&lt;em&gt;CI/CD&lt;/em&gt;&lt;/strong&gt;. CI/CD is a DevOps practice that enables software development teams to automate their software development lifecycle. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;We’ll cover&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#whatiscicd"&gt;What is CI/CD?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#continuousintegration"&gt;What is continuous integration?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#continuousdelivery"&gt;What is continuous delivery?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#continuousdeployment"&gt;What is continuous deployment?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#cicdtools"&gt;CI/CD tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#nextsteps"&gt;Wrapping up and next steps&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-cicd"&gt;
  &lt;/a&gt;
  What is CI/CD?
&lt;/h2&gt;

&lt;p&gt;CI/CD is an important &lt;strong&gt;DevOps practice&lt;/strong&gt; and an &lt;strong&gt;Agile methodology best practice&lt;/strong&gt;. This practice allows development teams to frequently deliver and deploy applications and accelerate the application development process. Introducing a CI/CD pipeline into our software development lifecycle allows us to efficiently &lt;strong&gt;implement automation&lt;/strong&gt; and monitor code changes, new features, potential bug fixes, and more.&lt;/p&gt;

&lt;p&gt;CI/CD typically refers to continuous integration and continuous delivery, but the “CD” can also stand for continuous deployment. Continuous delivery and continuous deployment both refer to automating stages of the CI/CD pipeline, but continuous deployment goes a step further. The purpose of continuous delivery is to make it easy to deploy new code. The purpose of continuous deployment is to allow teams to be &lt;strong&gt;“hands-off”&lt;/strong&gt; in the process by automating the deployment stage.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Cloud-native CI/CD&lt;/strong&gt;: A cloud-native CI/CD pipeline allows us to take full advantage of cloud computing services and features, such as containerization, going serverless, and implementing a multi-cloud infrastructure. A cloud-native app is built to run in the cloud. The cloud-native CI/CD process supports cloud services throughout the software development lifecycle.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#benefits-of-cicd"&gt;
  &lt;/a&gt;
  Benefits of CI/CD
&lt;/h3&gt;

&lt;p&gt;There are many benefits of implementing CI/CD into your software development lifecycle. Let’s take a look at some of them:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Increased speed&lt;/strong&gt;: With an automated CI/CD pipeline, teams can ship changes every hour, day, week, month, etc., and we can optimize each stage of the process. New changes and features can be launched quickly, which allows you to respond to new trends and address any issues that come up.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Easy maintenance&lt;/strong&gt;: When it’s time to perform routine maintenance, you don’t want all of the system to shut down at once. To address this problem, you can create microservices in the architecture of your code so that individual areas of the system are taken down for maintenance instead of the entire system.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Improved collaboration and visibility&lt;/strong&gt;: A CI/CD pipeline allows many people to get involved in the process, which promotes visibility and collaboration across different teams and orgs.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Real-time feedback&lt;/strong&gt;: Shipping regular updates allows you to receive more immediate feedback from users. It also allows you to experiment with different features and fixes, and then hear about their performance shortly after deployment.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Continuous reliability and continuous testing&lt;/strong&gt;: &lt;em&gt;Continuous reliability&lt;/em&gt;, or test reliability, improves in a CI/CD pipeline. This is because incremental changes are implemented one at a time, which allows for more precise and accurate tests to be conducted continuously.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;High-quality code&lt;/strong&gt;: With CI/CD, your code is tested regularly. This means that you’ll discover bugs sooner and fix them more quickly. &lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-continuous-integration"&gt;
  &lt;/a&gt;
  What is continuous integration?
&lt;/h2&gt;

&lt;p&gt;Continuous integration refers to the build / integration stage of the software release process. It’s a stage where developers &lt;strong&gt;consistently merge their changes into the main repository&lt;/strong&gt; of a version control system (like Git). After these changes are merged into the main repository, automated builds and tests are run. Before code changes are committed, you can run unit tests to verify the code before integrating it into the main repository. If you don’t run the tests yourself, the CI service performs automated tests and builds on any new code changes. &lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-continuous-delivery"&gt;
  &lt;/a&gt;
  What is continuous delivery?
&lt;/h2&gt;

&lt;p&gt;Continuous delivery expands upon continuous integration. It is a delivery process that allows us to &lt;strong&gt;automatically test and upload code changes to a repository&lt;/strong&gt; (like GitHub), and then deploy all code changes to a testing environment or a production environment. With a continuous delivery pipeline, we can further &lt;strong&gt;automate testing&lt;/strong&gt; beyond just unit tests and perform UI tests, integration tests, load tests, and more. When we thoroughly test the codebase, we can verify that the application is error-free and ready for deployment. With continuous delivery, the operations team triggers the deployment instead of it happening automatically (this is where continuous deployment comes in).&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-continuous-deployment"&gt;
  &lt;/a&gt;
  What is continuous deployment?
&lt;/h2&gt;

&lt;p&gt;It’s common to mistake continuous deployment for continuous delivery. Continuous deployment goes a step beyond continuous delivery. It’s a software release process that refers to the &lt;strong&gt;automatic deployment of applications&lt;/strong&gt; into production. Continuous deployment releases the application from the repository to production, which eliminates the need for human interference. Since tests are still implemented throughout the process, problematic code will not be deployed to production. Development teams are notified when tests fail so they can take the necessary steps to fix the problem before deployment.&lt;/p&gt;

&lt;p&gt;Continuous deployment is beneficial because it &lt;strong&gt;speeds up the delivery&lt;/strong&gt; of the application and the feedback loop with users. It allows teams to increase productivity and efficiency and rapidly push their software to the market. Verified and tested applications can be instantaneously deployed, which allows developers to focus on other tasks, including new features, updates, bug fixes, and more. While there are many advantages to implementing continuous deployment, the initial implementation itself can be expensive. The continuous deployment pipeline may require ongoing maintenance and updates to ensure it runs as smoothly as possible.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cicd-tools"&gt;
  &lt;/a&gt;
  CI/CD tools
&lt;/h2&gt;

&lt;p&gt;A good CI/CD tool can help you create a strong CI/CD pipeline. Popular CI/CD tools include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Jenkins&lt;/strong&gt;: Jenkins is an open-source, Java-based automation server that supports building, deploying, and automating software development processes.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;CircleCI&lt;/strong&gt;: CircleCI supports software development and publishing. It allows you to automate the entire pipeline, and integrate with services like GitHub, GitHub Enterprise, and Bitbucket to perform builds when code is committed. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;GitLab&lt;/strong&gt;: GitLab provides a suite of tools for managing the software development lifecycle. You can perform builds, run tests, and deploy code. It also allows you to build jobs in a VM, Docker container, or a different server.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Major cloud providers, such as Microsoft, Amazon, and Google, also offer CI/CD process tools:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Azure DevOps&lt;/strong&gt;: Azure DevOps provides a variety of CI/CD tools, like Git repo management, testing, reporting, and more. It provides support for Azure, Kubernetes, and VM-based resources.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;AWS CodePipeline&lt;/strong&gt;: AWS CodePipeline is a continuous delivery service that allows you to automate release pipelines. It easily integrates with third-party services like GitHub.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Cloud Build from Google Cloud Platform (GCP)&lt;/strong&gt;: Cloud Build from GCP is a serverless CI/CD platform that allows you to build software across all languages, such as Java and Go, deploy across multiple environments, and access cloud-hosted CI/CD workflows within your own private network.

&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wrapping-up-and-next-steps"&gt;
  &lt;/a&gt;
  Wrapping up and next steps
&lt;/h2&gt;

&lt;p&gt;Congrats on taking your first step with CI/CD! It’s an important DevOps practice that enforces automation in the building, testing, and deployment of applications. CI/CD is just one part of DevOps. There’s still so much more to learn about DevOps, such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Split API pods&lt;/li&gt;
&lt;li&gt;Collecting and querying metrics&lt;/li&gt;
&lt;li&gt;Creating a remote development environment&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To get started learning these concepts and more, check out Educative’s learning path &lt;a href="https://www.educative.io/path/devops-for-developers"&gt;&lt;strong&gt;DevOps for Developers&lt;/strong&gt;&lt;/a&gt;. In this hands-on learning path, you’ll work with popular DevOps tools like Docker and Kubernetes. You’ll learn how to work with Docker containers, the fundamentals of Kubernetes, and more about CI/CD. By the end, you’ll have the skills to excel in any DevOps role.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Happy learning!&lt;/em&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#continue-learning-about-devops"&gt;
  &lt;/a&gt;
  Continue learning about DevOps
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.educative.io/blog/ansible-for-beginners"&gt;Ansible for beginners: Get started with IT automation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.educative.io/blog/chaos-engineering-process-principles"&gt;Chaos engineering 101: Principles, process, and examples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.educative.io/blog/yaml-tutorial"&gt;YAML tutorial: Get started in 5 minutes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>devops</category>
      <category>git</category>
      <category>github</category>
      <category>testing</category>
    </item>
    <item>
      <title>What would you like to know about A/B Testing? Answer to be featured on our podcast 🎧  </title>
      <author>Gracie Gregory (she/her)</author>
      <pubDate>Thu, 21 Oct 2021 21:13:06 +0000</pubDate>
      <link>https://dev.to/devteam/what-would-you-like-to-know-about-ab-testing-answer-to-be-featured-on-our-podcast-56ci</link>
      <guid>https://dev.to/devteam/what-would-you-like-to-know-about-ab-testing-answer-to-be-featured-on-our-podcast-56ci</guid>
      <description>&lt;p&gt;The &lt;a href="//dev.to/devdiscuss"&gt;DevDiscuss Podcast&lt;/a&gt; begins with an interview and ends with commentary from listeners — and we like to feature the &lt;em&gt;actual&lt;/em&gt; voices from our community!&lt;/p&gt;

&lt;p&gt;To inform an upcoming episode of the show, we'd like to know...&lt;/p&gt;

&lt;blockquote&gt;
&lt;h3&gt;
  &lt;a href="#what-would-you-like-to-know-about-ab-testing"&gt;
  &lt;/a&gt;
  &lt;strong&gt;What would you like to know about A/B Testing?&lt;/strong&gt;
&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;p&gt;For your chance to hear your actual comments on an upcoming episode, answer the question above by:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Calling our Google Voice at +1 (929)500-1513 and leave a message 📞&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Sending a voice memo to &lt;a href="mailto:pod@dev.to"&gt;pod@dev.to&lt;/a&gt; 🎙&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;OR, leaving a comment here (we'll read your response aloud for you) 🗣&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Please send in your recordings by Wednesday, October 27th at 9 AM, ET (1 PM UTC, 6 AM PT)&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#voice-recordings-will-be-given-priority-placement"&gt;
  &lt;/a&gt;
  Voice recordings will be given priority placement 😉
&lt;/h4&gt;

&lt;p&gt;Catch up on recent episodes of the show &lt;a href="https://dev.to/devdiscuss"&gt;here&lt;/a&gt; 👀  &lt;/p&gt;

</description>
      <category>podcast</category>
      <category>discuss</category>
    </item>
    <item>
      <title>Android's Locker Screen Using Shared Preferences &amp; Material UI</title>
      <author>Siddharth Singh</author>
      <pubDate>Thu, 21 Oct 2021 20:30:09 +0000</pubDate>
      <link>https://dev.to/siddharthsing/androids-in-app-lock-screen-using-shared-preferences-material-ui-103</link>
      <guid>https://dev.to/siddharthsing/androids-in-app-lock-screen-using-shared-preferences-material-ui-103</guid>
      <description>&lt;h2&gt;
  &lt;a href="#apps-overview"&gt;
  &lt;/a&gt;
  App's Overview
&lt;/h2&gt;


&lt;p&gt;&lt;br&gt;
In this article, I am going to create a multi-screen yet simple application that will be demonstrating the best way to create lock screens for the apps using shared preferences and some material UI components.&lt;br&gt;&lt;br&gt;
&lt;/p&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QewXW1IA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9rl99od84mlvrxn5xj8i.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QewXW1IA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9rl99od84mlvrxn5xj8i.gif" alt="Lock Screen Demo App"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#steps-to-proceed"&gt;
  &lt;/a&gt;
  Steps to proceed
&lt;/h2&gt;


&lt;p&gt;&lt;br&gt;
We will be proceeding in a very beginner-friendly way. All the steps are mentioned below.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#setup"&gt;Project Setup &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#UI"&gt;Building the app's UI &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#back"&gt;Creating the Backend of the app&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#GitHub"&gt;GitHub Repo &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#support"&gt;Writer's Support ❤️&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;






&lt;h2&gt;
  &lt;a href="#setup"&gt;
  &lt;/a&gt;
  Setup
&lt;/h2&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;First of all, create a brand new project in your android studio. Assuming that it will be an easy part, so not explaining all. 
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UWzWmNFg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iu4ykvvoqn5g1prrfvrp.jpg" alt="Image description"&gt;
&lt;/li&gt;
&lt;li&gt;Then set up your emulator properly to check the application.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now we are good to go for next step.&lt;br&gt;
&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#building-the-apps-ui"&gt;
  &lt;/a&gt;
  Building the app's UI
&lt;/h2&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;br&gt;
  App's UI will be built in 4 steps :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#mainA"&gt;Main Activity UI (activity_main.xml)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#setA"&gt;Set Password Screen UI (activity_set_password.xml)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#passA"&gt;PIN Entering screen UI (activity_password_type.xml)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#welA"&gt;Screen open upon correct PIN UI (activity_welcome.xml)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;App's UI is built with some of the &lt;code&gt;material UI&lt;/code&gt; component for giving it a better look.&lt;/p&gt;

&lt;p&gt;Simply copy each and every &lt;code&gt;.xml&lt;/code&gt; file below and create the same into your project.&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;activity_main.xml&lt;br&gt;
&lt;/p&gt;


&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;?xml version="1.0" encoding="utf-8"?&amp;gt;

&amp;lt;RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="@drawable/backgroud"
    android:theme="@style/Theme.MaterialComponents.DayNight.NoActionBar"
    &amp;gt;

    &amp;lt;LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:gravity="center_horizontal"
        android:orientation="vertical"
        android:layout_centerInParent="true"
        tools:context=".MainActivity"&amp;gt;

        &amp;lt;ImageView
            android:layout_width="100dp"
            android:layout_height="100dp"
            android:src="@drawable/ic_baseline_android_24"
            android:layout_marginBottom="4dp"
            /&amp;gt;
        &amp;lt;TextView
            android:id="@+id/tv_app_name"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Lock Up !"
            android:gravity="center"
            android:textSize="25sp"
            android:textStyle="bold"
            android:textColor="@color/gradientEnd"
            android:layout_marginBottom="26dp"
            android:letterSpacing="0.3"/&amp;gt;

        &amp;lt;androidx.cardview.widget.CardView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginStart="20dp"
            android:layout_marginEnd="20dp"
            android:background="@color/white"
            app:cardCornerRadius="8dp"
            app:cardElevation="5dp"
            &amp;gt;
            &amp;lt;LinearLayout
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:orientation="vertical"
                android:padding="16dp"&amp;gt;

                &amp;lt;TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:text="Welcome"
                    android:gravity="center"
                    android:textSize="30sp"
                    android:textColor="#0091EA"
                    android:textStyle="bold"/&amp;gt;
                &amp;lt;TextView
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:text="Please set the lock screen pin"
                    android:gravity="center"
                    android:textSize="16sp"
                    android:textColor="#7A8089"
                    android:textStyle="bold"/&amp;gt;
                &amp;lt;LinearLayout
                    android:id="@+id/llLaunchScreen"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:orientation="vertical"
                    tools:visibility="visible"
                    android:padding="8dp"
                    android:layout_centerInParent="true"
                    &amp;gt;

                    &amp;lt;androidx.cardview.widget.CardView
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content"
                        app:cardCornerRadius="50dp"

                        &amp;gt;
                        &amp;lt;LinearLayout
                            android:layout_width="match_parent"
                            android:layout_height="wrap_content"
                            android:orientation="vertical"
                            &amp;gt;
                        &amp;lt;Button
                            android:id="@+id/buttonSetPin"
                            android:layout_width="match_parent"
                            android:layout_height="wrap_content"
                            android:backgroundTint="@color/gradientStart"
                            android:text="Set/Change PIN"
                            android:padding="16dp"
                            android:textColor="#FFFFFF"
                            android:textStyle="bold"
                            /&amp;gt;
                        &amp;lt;Button
                            android:id="@+id/buttonTypePin"
                            android:layout_width="match_parent"
                            android:layout_height="wrap_content"
                            android:backgroundTint="@color/gradientStart"
                            android:text="Type Pin To get in"
                            android:padding="16dp"
                            android:textColor="#FFFFFF"
                            android:textStyle="bold"
                            /&amp;gt;
                        &amp;lt;/LinearLayout&amp;gt;
                    &amp;lt;/androidx.cardview.widget.CardView&amp;gt;
                &amp;lt;/LinearLayout&amp;gt;

            &amp;lt;/LinearLayout&amp;gt;

        &amp;lt;/androidx.cardview.widget.CardView&amp;gt;

    &amp;lt;/LinearLayout&amp;gt;
&amp;lt;/RelativeLayout&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;activity_set_password.xml&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
&amp;lt;?xml version="1.0" encoding="utf-8"?&amp;gt;
&amp;lt;RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:background="@drawable/backgroud"
    android:orientation="vertical"

    &amp;gt;

    &amp;lt;ImageView
        android:id="@+id/imgAnd"
        android:layout_width="170dp"
        android:layout_height="170dp"
        android:layout_marginTop="5dp"
        android:src="@drawable/ic_baseline_android_24"
        android:layout_centerHorizontal="true"
        /&amp;gt;
    &amp;lt;com.google.android.material.textfield.TextInputLayout
        android:id="@+id/mtxtName"
        android:padding="18dp"
        style="@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_below="@+id/imgAnd"
        &amp;gt;

        &amp;lt;androidx.appcompat.widget.AppCompatEditText
            android:id="@+id/edtName"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:hint="Enter your Name"
            android:padding="18dp"
            android:textColorHint="@color/white"
            android:inputType="text"
            android:textSize="16sp"

            /&amp;gt;
    &amp;lt;/com.google.android.material.textfield.TextInputLayout&amp;gt;

    &amp;lt;com.google.android.material.textfield.TextInputLayout
        android:id="@+id/mtxtPass"
        android:padding="18dp"
        style="@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_below="@+id/mtxtName"

        &amp;gt;

        &amp;lt;androidx.appcompat.widget.AppCompatEditText
            android:id="@+id/edtPass"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:hint="Enter your password"
            android:padding="18dp"
            android:textColorHint="@color/white"
            android:inputType="numberPassword"
            android:textSize="16sp"

            /&amp;gt;
    &amp;lt;/com.google.android.material.textfield.TextInputLayout&amp;gt;

    &amp;lt;Button
        android:id="@+id/btnSave"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:backgroundTint="@color/gradientEnd"
        android:text="Save Pin"
        android:padding="16dp"
        android:layout_margin="25dp"
        android:textColor="#FFFFFF"
        android:textStyle="bold"
        android:layout_below="@+id/mtxtPass"
        /&amp;gt;

&amp;lt;/RelativeLayout&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;activity_password_type.xml&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
&amp;lt;?xml version="1.0" encoding="utf-8"?&amp;gt;
&amp;lt;RelativeLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="@drawable/backgroud"
    android:orientation="vertical"
    &amp;gt;

    &amp;lt;ImageView
        android:id="@+id/imgAnd"
        android:layout_width="170dp"
        android:layout_height="170dp"
        android:layout_marginTop="5dp"
        android:src="@drawable/ic_baseline_android_24"
        android:layout_centerHorizontal="true"
        /&amp;gt;
    &amp;lt;com.google.android.material.textfield.TextInputLayout
        android:id="@+id/mtxtName"
        android:padding="18dp"
        style="@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_below="@+id/imgAnd"
        &amp;gt;
    &amp;lt;/com.google.android.material.textfield.TextInputLayout&amp;gt;

    &amp;lt;TextView
        android:id="@+id/txtPass"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_centerInParent="true"
        android:layout_marginTop="215dp"
        android:textColor="#EDE8E8"
        android:textStyle="bold"
        android:letterSpacing="1.5"
        android:textSize="22dp"
        android:maxLength="4"
        android:inputType="numberPassword"
        android:text="1234" /&amp;gt;

    &amp;lt;LinearLayout
        android:id="@+id/keyBoard"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:orientation="vertical"
        android:layout_alignParentBottom="true"
        &amp;gt;

        &amp;lt;LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:orientation="horizontal"
            &amp;gt;

            &amp;lt;Button
                android:id="@+id/btn1"
                style="@style/Widget.MaterialComponents.Button.TextButton"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:padding="15dp"
                android:text="1"
                android:textColor="@color/white"
                android:textSize="18dp"
                android:textStyle="bold" /&amp;gt;

            &amp;lt;Button
                android:id="@+id/btn2"
                style="@style/Widget.MaterialComponents.Button.TextButton"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:padding="15dp"
                android:text="2"
                android:textColor="@color/white"
                android:textSize="18dp"
                android:textStyle="bold" /&amp;gt;

            &amp;lt;Button
                android:id="@+id/btn3"
                style="@style/Widget.MaterialComponents.Button.TextButton"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:padding="15dp"
                android:text="3"
                android:textColor="@color/white"
                android:textSize="18dp"
                android:textStyle="bold" /&amp;gt;
        &amp;lt;/LinearLayout&amp;gt;

        &amp;lt;LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:orientation="horizontal"&amp;gt;

            &amp;lt;Button
                android:id="@+id/btn4"
                style="@style/Widget.MaterialComponents.Button.TextButton"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:padding="15dp"
                android:text="4"
                android:textColor="@color/white"
                android:textSize="18dp"
                android:textStyle="bold" /&amp;gt;

            &amp;lt;Button
                android:id="@+id/btn5"
                style="@style/Widget.MaterialComponents.Button.TextButton"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:padding="15dp"
                android:text="5"
                android:textColor="@color/white"
                android:textSize="18dp"
                android:textStyle="bold" /&amp;gt;

            &amp;lt;Button
                android:id="@+id/btn6"
                style="@style/Widget.MaterialComponents.Button.TextButton"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:padding="15dp"
                android:text="6"
                android:textColor="@color/white"
                android:textSize="18dp"
                android:textStyle="bold" /&amp;gt;
        &amp;lt;/LinearLayout&amp;gt;

        &amp;lt;LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:orientation="horizontal"&amp;gt;

            &amp;lt;Button
                android:id="@+id/btn7"
                style="@style/Widget.MaterialComponents.Button.TextButton"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:padding="15dp"
                android:text="7"
                android:textColor="@color/white"
                android:textSize="18dp"
                android:textStyle="bold" /&amp;gt;

            &amp;lt;Button
                android:id="@+id/btn8"
                style="@style/Widget.MaterialComponents.Button.TextButton"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:padding="15dp"
                android:text="8"
                android:textColor="@color/white"
                android:textSize="18dp"
                android:textStyle="bold" /&amp;gt;

            &amp;lt;Button
                android:id="@+id/btn9"
                style="@style/Widget.MaterialComponents.Button.TextButton"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:padding="15dp"
                android:text="9"
                android:textColor="@color/white"
                android:textSize="18dp"
                android:textStyle="bold" /&amp;gt;
        &amp;lt;/LinearLayout&amp;gt;

        &amp;lt;LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:orientation="horizontal"&amp;gt;

            &amp;lt;ImageButton
                android:id="@+id/btnErase"
                style="@style/Widget.MaterialComponents.Button.TextButton"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:padding="22dp"
                android:src="@drawable/ic_baseline_arrow_back_ios_24"
                android:textColor="@color/white"
                android:textSize="18dp"
                android:textStyle="bold" /&amp;gt;

            &amp;lt;Button
                android:id="@+id/btn0"
                style="@style/Widget.MaterialComponents.Button.TextButton"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:padding="15dp"
                android:text="0"
                android:textColor="@color/white"
                android:textSize="18dp"
                android:textStyle="bold" /&amp;gt;

            &amp;lt;ImageButton
                android:id="@+id/btnCheck"
                style="@style/Widget.MaterialComponents.Button.TextButton"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:padding="22dp"
                android:src="@drawable/ic_baseline_check_24"
                android:textColor="@color/white"
                android:textSize="18dp"
                android:textStyle="bold" /&amp;gt;
        &amp;lt;/LinearLayout&amp;gt;


    &amp;lt;/LinearLayout&amp;gt;

&amp;lt;/RelativeLayout&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;activity_welcome.xml&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
&amp;lt;?xml version="1.0" encoding="utf-8"?&amp;gt;
&amp;lt;RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".WelcomeActivity"
    android:background="@drawable/backgroud"&amp;gt;


    &amp;lt;TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="WELCOME !"
        android:textColor="@color/white"
        android:textSize="56sp"
        android:layout_centerInParent="true"
        android:layout_centerHorizontal="true"
        android:textStyle="bold"
        android:letterSpacing="0.1"
        /&amp;gt;

&amp;lt;/RelativeLayout&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#apps-backend"&gt;
  &lt;/a&gt;
  App's Backend
&lt;/h2&gt;

&lt;p&gt;Similar to the UI, the app's backend is also divided into four parts namely :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#mainB"&gt;MainActivity.kt &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#setB"&gt;SetPasswordActivity.kt &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#passB"&gt;PasswordTypeActivity.kt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#welB"&gt;WelcomeActivity.kt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;MainActivity.kt&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
package com.siddharthsinghbaghel.sharedpreferences

import android.content.Intent
import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.widget.Button

class MainActivity : AppCompatActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        val buttonTypePin: Button = findViewById(R.id.buttonTypePin)
        val buttonSetPin: Button = findViewById(R.id.buttonSetPin)

        /* buttonSetPin will open the SetPasswordActivity.kt.
        *
        *  In other words the activity opened will
        *  overwrite the default shared preferences or set new values if not present.
        *
        *  You can further create it for reseting passwords or forgotten
        *  password option in your app
        * */

        buttonSetPin.setOnClickListener{
            val intent = Intent(this,SetPasswordActivity::class.java)
            startActivity(intent)
        }


        /*
        *  buttonTypePin will open the PasswordTypeActivit.kt
        *
        * If the user has already set the pin he/she
        * can just enter the pin correctly and can enter the
        * next screen.
        * */

        buttonTypePin.setOnClickListener{
            val intent = Intent(this,PasswordTypeActivity::class.java)
            startActivity(intent)

        }

    }
}


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;SetPasswordActivity.kt&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
package com.siddharthsinghbaghel.sharedpreferences

import android.content.Intent
import android.os.Bundle
import android.widget.*
import androidx.appcompat.app.AppCompatActivity

class SetPasswordActivity : AppCompatActivity() {

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_set_password)


        val edtName: EditText = findViewById(R.id.edtName)
        val edtPass: EditText = findViewById(R.id.edtPass)
        val btnSave: Button = findViewById(R.id.btnSave)



        /* Creating the shared preference to store (name, password)
        *  as a key value pair.
        * */

        val sharedPref = getSharedPreferences("passPref", MODE_PRIVATE)
        val editor = sharedPref.edit()


        /*
        * onClick of btnSave the data present in edit texts
        * name and pass in .xml file will be  stored in our
        * shared preference (sharedpref)
        * */

        btnSave.setOnClickListener{

            val name: String = edtName.text.toString()
            val password: String = edtPass.text.toString()

            editor.apply {

                putString("name", name)
                putString("password", password)
                apply() /* can also use commit() here but apply() is the best practice according to google */
            }


            Toast.makeText(this, "PIN successfully set ", Toast.LENGTH_SHORT).show()

            /* On successfully creating the PIN user will
            *  will be directed to the PasswordTypeActivity screen
            *  where user have to enter the correct PIN to enter the WelcomeActivity.kt
            * */

            val intent = Intent(this,PasswordTypeActivity::class.java)
            startActivity(intent)
            finish()

        }
    }
}


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;PasswordTypeActivity.kt&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
package com.siddharthsinghbaghel.sharedpreferences

import android.content.Context
import android.content.Intent
import android.os.Bundle
import android.preference.PreferenceManager
import android.view.View
import android.widget.Button
import android.widget.ImageButton
import android.widget.TextView
import android.widget.Toast
import androidx.appcompat.app.AppCompatActivity


class PasswordTypeActivity : AppCompatActivity(), View.OnClickListener {

    /* codeString is the string in which the PIN entered by user is stored.*/
    private var codeString: String = ""

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_password_type)


        /* Since we have to check the whether the entered
        *  password by user is correct or not, we need
        *  shared preference where we stored that.
        *  To retrieve data from shared preference the below code
        *  is executed.
        * */
        val sharedPref = getSharedPreferences("passPref", MODE_PRIVATE)
        val password = sharedPref.getString("password", "1234")


        val txtPass: TextView = findViewById(R.id.txtPass)

        txtPass.text = "" /*Emptied the textview to show the simultaneous
                            entering effect of all 4 digits of PIN */

        val btn0: Button = findViewById(R.id.btn0)
        val btn1:Button = findViewById(R.id.btn1)
        val btn2:Button = findViewById(R.id.btn2)
        val btn3:Button = findViewById(R.id.btn3)
        val btn4:Button = findViewById(R.id.btn4)
        val btn5:Button = findViewById(R.id.btn5)
        val btn6:Button = findViewById(R.id.btn6)
        val btn7:Button = findViewById(R.id.btn7)
        val btn8:Button = findViewById(R.id.btn8)
        val btn9:Button = findViewById(R.id.btn9)
        val btnErase: ImageButton = findViewById(R.id.btnErase)
        val btnCheck: ImageButton = findViewById(R.id.btnCheck)


        btn0.setOnClickListener(this)
        btn1.setOnClickListener(this)
        btn2.setOnClickListener(this)
        btn3.setOnClickListener(this)
        btn4.setOnClickListener(this)
        btn5.setOnClickListener(this)
        btn6.setOnClickListener(this)
        btn7.setOnClickListener(this)
        btn8.setOnClickListener(this)
        btn9.setOnClickListener(this)
        btnErase.setOnClickListener(this)



        btnCheck.setOnClickListener{

            /* btnCheck is called means iuser enter the desired PIN
             * now it's our turn to check it.
            * */

            codeString = txtPass.text.toString()

            if(codeString == password)
            {
                Toast.makeText(this, "Correct PIN Welcome!", Toast.LENGTH_SHORT).show()
                val intent = Intent(this,WelcomeActivity::class.java)
                startActivity(intent)
                finish()
            }else{

                Toast.makeText(this, "Wrong PIN please try again", Toast.LENGTH_SHORT).show()
                txtPass.text = ""
                codeString = txtPass.text.toString()
            }


        }


    }

    private fun setDotView() {

        /* this function will simply set the values
        *  which user is entering one by one as PIN in
        *  textView (txtPass) to give a PIN entering
        *  view.
        * */

        val txtPass: TextView = findViewById(R.id.txtPass)
        txtPass.text = codeString
    }

    override fun onClick(v: View?) {
        when (v!!.id) {
            R.id.btn0 -&amp;gt; codeString += "0"
            R.id.btn1 -&amp;gt; codeString += "1"
            R.id.btn2 -&amp;gt; codeString += "2"
            R.id.btn3 -&amp;gt; codeString += "3"
            R.id.btn4 -&amp;gt; codeString += "4"
            R.id.btn5 -&amp;gt; codeString += "5"
            R.id.btn6 -&amp;gt; codeString += "6"
            R.id.btn7 -&amp;gt; codeString += "7"
            R.id.btn8 -&amp;gt; codeString += "8"
            R.id.btn9 -&amp;gt; codeString += "9"
            R.id.btnErase -&amp;gt; {
                codeString = removeLastChar(codeString).toString()
            }
            else -&amp;gt; {
            }
        }
        setDotView()
    }


    private fun removeLastChar(s: String?): String? {

        /* the erase button will erase the
        *  the last entered value from the keyboard.
        *  The Erase button's working is followed in this function.
        * */
        return if (s == null || s.length == 0) {
            s
        } else s.substring(0, s.length - 1)
    }


}


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;WelcomeActivity.kt&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
package com.siddharthsinghbaghel.sharedpreferences

import android.content.Intent
import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.widget.Toast

class WelcomeActivity : AppCompatActivity() {

   /* Here we used onRestart() callback
   *  because if user pushes the home button
   *  or opened any other application or just closed the app and 
   *  restart it again, the first session will expire and the app
   *  will be locked up again. Thus user have to enter the password 
   *  always when he/she stops and restart the app.
   * */

    override fun onRestart() {
        super.onRestart()
        val intent = Intent(this,PasswordTypeActivity::class.java)
        startActivity(intent)
    }

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_welcome)
    }
}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;a&gt;&lt;/a&gt; &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#github-repository"&gt;
  &lt;/a&gt;
  GitHub Repository
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Fork the repository for better and easy understanding and for quick learning.&lt;/li&gt;
&lt;/ul&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/Siddharth-sing"&gt;
        Siddharth-sing
      &lt;/a&gt; / &lt;a href="https://github.com/Siddharth-sing/Material-UI-LockPIN-Demo"&gt;
        Material-UI-LockPIN-Demo
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;a&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#writers-support"&gt;
  &lt;/a&gt;
  Writer's Support
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;If you find the article useful show some ❤️ by staring some of my repositories and following me on dev.to and github.

&lt;p&gt;
&lt;a href="https://www.linkedin.com/in/siddharth-singh-baghel-912866190/"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--imBRhTaX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/LinkedIn-0077B5%3Fstyle%3Dfor-the-badge%26logo%3Dlinkedin%26logoColor%3Dwhite"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/Siddharth-sing"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4pQJI-Km--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/GitHub-100000%3Fstyle%3Dfor-the-badge%26logo%3Dgithub%26logoColor%3Dwhite"&gt;
&lt;/a&gt;
&lt;a href="https://dev.to/siddharthsing"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6XzdLtQp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/dev.to-0A0A0A%3Fstyle%3Dfor-the-badge%26logo%3Ddev.to%26logoColor%3Dwhite"&gt;
&lt;/a&gt;

&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>android</category>
      <category>kotlin</category>
      <category>beginners</category>
      <category>opensource</category>
    </item>
    <item>
      <title>Too many commits, squash'em!!</title>
      <author>Tanishq Singla</author>
      <pubDate>Thu, 21 Oct 2021 20:24:40 +0000</pubDate>
      <link>https://dev.to/tanishqsingla/too-many-commits-squashem-k0o</link>
      <guid>https://dev.to/tanishqsingla/too-many-commits-squashem-k0o</guid>
      <description>&lt;p&gt;If you're someone like me who likes to commit every small change and end up having too many commits for a single feature and think "Wouldn't it be nice if you can merge some of those meaningless commits?"&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#squash-to-the-rescue"&gt;
  &lt;/a&gt;
  Squash to the rescue
&lt;/h2&gt;

&lt;p&gt;Turns out you can do just that in OG git. Let us look how to use &lt;code&gt;squash&lt;/code&gt;, for following the tutorial I've created a github repo, you can open the repo by clicking &lt;a href="https://github.com/TanishqSingla/squash-example"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#fixing-those-commits"&gt;
  &lt;/a&gt;
  Fixing those commits
&lt;/h2&gt;

&lt;p&gt;Take a min and look at the commit section in the repo and check the content of those commits.&lt;br&gt;
If you're also weirded out by those awful commits then don't worry, we'll fix them together.&lt;/p&gt;

&lt;p&gt;First let's find the commits that are meaningless.&lt;br&gt;
The first one that I feel is meaningless is the 3rd commit form the start of branch, here we only change the title of the this can easily be merged with the boilerplate commit.&lt;/p&gt;

&lt;p&gt;In a terminal do &lt;code&gt;git rebase -i HEAD~5&lt;/code&gt;. This command will open the rebase command in interactive mode with the last 5 commits you've from the current commit.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pick b1b37b5 Added boiler plate code
pick 125e103 Changing title
pick c6c03ac Adding navbar list
pick 3816fa0 Adding Downloads in navbar list
pick 10534c0 Added Pricing section

...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You should see something like this in your text editor which you've chosen as default in git. You can do a bunch of stuff in here, commands for which will be available in the same.&lt;br&gt;
Now, what we do is change that &lt;code&gt;pick&lt;/code&gt; in our commit where we change our title to &lt;code&gt;squash&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The end result should look like this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pick b1b37b5 Added boiler plate code
squash 125e103 Changing title
pick c6c03ac Adding navbar list
pick 3816fa0 Adding Downloads in navbar list
pick 10534c0 Added Pricing section
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Changing the &lt;code&gt;pick&lt;/code&gt; to &lt;code&gt;squash&lt;/code&gt; will basically merge the &lt;code&gt;Changing title&lt;/code&gt; commit with the &lt;code&gt;Added boiler plate code&lt;/code&gt; commit.&lt;/p&gt;

&lt;p&gt;Save the file and close it. &lt;/p&gt;

&lt;p&gt;Now you should see this message popping up in a file&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# This is a combination of 2 commits.
# This is the 1st commit message:

Added boiler plate code

# This is the commit message #2:

Changing title

# Please enter the commit message for your changes. Lines starting
# with '#' will be ignored, and an empty message aborts the commit.
#
# Date:      Fri Oct 22 01:02:46 2021 +0530
#
# interactive rebase in progress; onto 2814ed0
# Last commands done (2 commands done):
#    pick b1b37b5 Added boiler plate code
#    squash 125e103 Changing title
# Next commands to do (3 remaining commands):
#    pick c6c03ac Adding navbar list
#    pick 3816fa0 Adding Downloads in navbar list
# You are currently rebasing branch 'master' on '2814ed0'.
#
# Changes to be committed:
#   modified:   index.html
#
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this file you can change the commit message for your final commit i.e commit formed after merging. As mentioned in the instructions, lines starting with &lt;code&gt;#&lt;/code&gt; are going to get ignored, so I am going to comment the &lt;code&gt;Changing title&lt;/code&gt; message and change the &lt;code&gt;Added boiler plate code&lt;/code&gt; to `Added boilerplate and changed title.&lt;/p&gt;

&lt;p&gt;Save and close the file and now do &lt;code&gt;git log&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tada!&lt;/strong&gt; our commits are merged into one and our changes look more meaningful.&lt;/p&gt;

&lt;p&gt;Now try doing the same for &lt;code&gt;Added downloads section&lt;/code&gt; and &lt;code&gt;Added Pricing section&lt;/code&gt; commits.&lt;/p&gt;

</description>
      <category>git</category>
      <category>tutorial</category>
      <category>programming</category>
    </item>
    <item>
      <title>Some Node/JS package best practices</title>
      <author>Anvil Engineering</author>
      <pubDate>Thu, 21 Oct 2021 20:20:33 +0000</pubDate>
      <link>https://dev.to/useanvil/some-nodejs-package-best-practices-1o59</link>
      <guid>https://dev.to/useanvil/some-nodejs-package-best-practices-1o59</guid>
      <description>&lt;p&gt;The Node/JS ecosystem is large (over 1.7mm packages on &lt;a href="https://www.npmjs.com/"&gt;npm&lt;/a&gt;) and evolving, and at Anvil, we work with Node.js quite a bit. We also like to create and contribute to open source Node/JS projects as well&lt;sup id="fnref1"&gt;&lt;a href="#fn1"&gt;1&lt;/a&gt;&lt;/sup&gt;. As a result, we've seen some good, bad, and ugly stuff out there. In this post (and its supporting &lt;a href="https://github.com/anvilco/best-practices-node"&gt;Github repo&lt;/a&gt;) I'm going to share with you some of the best practices we've learned along the way while building a very simple web server.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#nvm-node-version-manager"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/nvm-sh/nvm#intro"&gt;NVM&lt;/a&gt; (Node Version Manager)
&lt;/h3&gt;

&lt;p&gt;Even if you're developing JS for the browser, a streamlined development process will probably involve using Node to do some tasks for you. Different projects may require different Node runtimes/versions to be built, and developers are probably working on several different projects on their local machines at a time that may require incompatible Node versions. What do you do if your system's Node version is incompatible with the requirements of the project you're working on? Enter: &lt;a href="https://github.com/nvm-sh/nvm#intro"&gt;NVM&lt;/a&gt;. NVM allows you to have different versions of Node on your machine, and to easily switch between versions as necessary. Additionally, by setting up &lt;a href="https://github.com/nvm-sh/nvm#deeper-shell-integration"&gt;shell integration&lt;/a&gt; and adding a &lt;a href="https://github.com/nvm-sh/nvm#nvmrc"&gt;&lt;code&gt;.nvmrc&lt;/code&gt;&lt;/a&gt; file to your project, your shell will automatically change to the Node version required by your project when you &lt;code&gt;cd&lt;/code&gt; into it. This is a must for any Node/JS developer's setup and projects. Note that the &lt;code&gt;.nvmrc&lt;/code&gt; file only specifies the Node version required to &lt;strong&gt;&lt;em&gt;develop&lt;/em&gt;&lt;/strong&gt; the project, but not necessarily to &lt;strong&gt;&lt;em&gt;use&lt;/em&gt;&lt;/strong&gt; the resulting package (more on that later).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-raw-packagejson-endraw-file"&gt;
  &lt;/a&gt;
  The &lt;code&gt;package.json&lt;/code&gt; file
&lt;/h3&gt;

&lt;p&gt;Every Node/JS package starts with a &lt;code&gt;package.json&lt;/code&gt; file. I'm not going to cover all the ins and outs of that file (you can do that &lt;a href="https://docs.npmjs.com/cli/v7/configuring-npm/package-json"&gt;here&lt;/a&gt;), but I'd like to touch on a few important items that may not be intuitive at first, or that can have a big impact on your development:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://docs.npmjs.com/cli/v7/configuring-npm/package-json#main"&gt;&lt;code&gt;main&lt;/code&gt;&lt;/a&gt;: specifies the path to module in your package whose exports will be used when your package is &lt;code&gt;require&lt;/code&gt;d.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://docs.npmjs.com/cli/v7/configuring-npm/package-json#engines"&gt;&lt;code&gt;engines&lt;/code&gt;&lt;/a&gt;: allows you to specify the version(s) of Node that your package will work on.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://docs.npmjs.com/cli/v7/configuring-npm/package-json#config"&gt;&lt;code&gt;config&lt;/code&gt;&lt;/a&gt;: an object you can place arbitrary key/value data into and use elsewhere in your project. More on that later.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://docs.npmjs.com/cli/v7/configuring-npm/package-json#scripts"&gt;&lt;code&gt;scripts&lt;/code&gt;&lt;/a&gt;: an object where you can specify named commands to run via &lt;code&gt;yarn my-command&lt;/code&gt;. Keep in mind that some names are special and correspond to "lifecycle" events. Read &lt;a href="https://docs.npmjs.com/cli/v7/configuring-npm/package-json"&gt;the docs&lt;/a&gt; to learn more.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The &lt;code&gt;package.json&lt;/code&gt; can also support some more arbitrary entries that other tools you may use are expecting—we'll touch on that a bit more later.&lt;/p&gt;

&lt;p&gt;One final thing about &lt;code&gt;package.json&lt;/code&gt;: when adding a dependency, it's important to consciously decide whether it should be added to the &lt;code&gt;dependencies&lt;/code&gt; or the &lt;code&gt;devDependencies&lt;/code&gt; area (and use the appropriate installation command). Packages that are needed for development purposes only, and are not needed by the code that will be run when the package is installed and consumed, should go into &lt;code&gt;devDependencies&lt;/code&gt; (rather than &lt;code&gt;dependencies&lt;/code&gt;). This way they won't be unnecessarily installed on the user's system when they install your package. You may have noticed that this project has several &lt;code&gt;devDependencies&lt;/code&gt;, but zero &lt;code&gt;dependencies&lt;/code&gt; as it uses nothing but core Node modules at runtime. Nice!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#environment-based-configuration-and-the-raw-env-endraw-file"&gt;
  &lt;/a&gt;
  Environment based configuration and the &lt;code&gt;.env&lt;/code&gt; file
&lt;/h3&gt;

&lt;p&gt;In keeping with the &lt;a href="https://www.useanvil.com/blog/engineering/introduction-twelve-factor-app"&gt;12 Factor App methodology&lt;/a&gt;, it's best that your app gets any configuration information it may need from the environment (e.g. &lt;code&gt;production&lt;/code&gt; vs &lt;code&gt;staging&lt;/code&gt;). Things that vary depending on the environment as well as sensitive things like API keys and DB credentials are great candidates for being provided via the environment. In Node, environment variables can be accessed via &lt;code&gt;process.env.&amp;lt;ENV_VAR_NAME_HERE&amp;gt;&lt;/code&gt;. This application has a &lt;code&gt;config.js&lt;/code&gt; file that centralizes and simplifies the resolution of these environment variables into more developer-friendly names and then exports them for consumption by the rest of the app. In production environments, there are myriad ways to populate the environment variables, so I will not go into them. However, for local development the usage of a &lt;code&gt;.env&lt;/code&gt; file along with the &lt;a href="https://www.npmjs.com/package/dotenv"&gt;&lt;code&gt;dotenv&lt;/code&gt;&lt;/a&gt; package is very common and easy for developers. This &lt;code&gt;.env&lt;/code&gt; file should &lt;strong&gt;&lt;em&gt;NOT&lt;/em&gt;&lt;/strong&gt; be checked into source control (more on this later), but a &lt;code&gt;.env-example&lt;/code&gt; file that contains fake values is a nice thing to provide to developers so they know where to get started. Because it does not contain any sensitive information, the &lt;code&gt;.env-example&lt;/code&gt; can be checked into source control.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#keeping-your-code-pretty-and-clean"&gt;
  &lt;/a&gt;
  Keeping your code pretty and clean
&lt;/h3&gt;

&lt;p&gt;All developers are different, and not all teams will use the same coding styles. In addition, sometimes code can have serious problems (such as syntax errors), minor problems (such as unused variables or unreachable paths) or nits (tabs instead of spaces—oh no, I didn't!) that you don't want getting commited. Keeping code clean and uniform—especially when working with a team—can be difficult, but fortunately tools like &lt;a href="https://prettier.io/docs/en/index.html"&gt;Prettier&lt;/a&gt; and &lt;a href="https://eslint.org/"&gt;ESLint&lt;/a&gt; can help with all of that. Generally speaking, Prettier is concerned with formatting issues, while ESLint is concerned with errors, inefficiencies, and waste. ESLint is not only quite configurable, but also quite extensible: you can turn rules on or off, write your own rules, include someone else's shared set of rules, and more. Our very simple ESLint configuration is specified in the &lt;code&gt;.eslintrc.js&lt;/code&gt; file. Most IDEs will integrate with these tools and provide feedback to the developers, allowing them to correct the problems immediately. They also can fix many problems they encounter automatically, which is great.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#precommit-hooks"&gt;
  &lt;/a&gt;
  Pre-commit hooks
&lt;/h3&gt;

&lt;p&gt;Sometimes you'll want to run some commands before a developer can commit to your repository. Having Prettier and ESLint adjust and fix all JS files that have been staged for commit is a great example. This way, developers don't even have to remember to run the commands to fix and adjust things—it will happen automatically when they try to commit, and git will complain if something goes wrong. A popular way to set this up is by using &lt;a href="https://www.npmjs.com/package/lint-staged"&gt;&lt;code&gt;lint-staged&lt;/code&gt;&lt;/a&gt;. Once installed, I modified the &lt;code&gt;lint-staged&lt;/code&gt; entry in &lt;code&gt;package.json&lt;/code&gt; to run Prettier, followed by ESLint (we've found that Prettier sometimes undoes some of the things that ESLint does that we want, so it's important that we run them in that order).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#babel"&gt;
  &lt;/a&gt;
  &lt;a href="https://babeljs.io/docs/en/"&gt;Babel&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;As I mentioned in the beginning, Node/JS has been evolving rapidly. This quick pace of evolution means there are many Node (and browser) versions still in use that do not support the latest 🔥 hotness🔥 or even some features that have been around for a while. In order to take advantage of the latest language features while ensuring that your code will run on a reasonable amount of versions, you'll need to transpile it using &lt;a href="https://babeljs.io/docs/en/"&gt;Babel&lt;/a&gt;. Basically, Babel can rewrite parts of your code so that older runtimes can use them.&lt;/p&gt;

&lt;p&gt;How do you know which language features are not supported by the runtimes you want to support? Using the &lt;a href="https://babeljs.io/docs/en/babel-preset-env"&gt;&lt;code&gt;@babel/preset-env&lt;/code&gt;&lt;/a&gt; plugin, you just need to tell Babel what "target" runtimes you want to support and it will figure out which parts of your code to rewrite and which to leave alone! 😌   In this example project, I've specified supported node &lt;code&gt;engines&lt;/code&gt; as &lt;code&gt;&amp;gt;=12&lt;/code&gt; in the &lt;code&gt;package.json&lt;/code&gt;, so I've put the Babel target of &lt;code&gt;12&lt;/code&gt; in the &lt;code&gt;config&lt;/code&gt; area of &lt;code&gt;package.json&lt;/code&gt; to keep things near each other and hopefully in sync. I've added a &lt;code&gt;babel.config.js&lt;/code&gt; file that will tell Babel to use the &lt;code&gt;preset-env&lt;/code&gt; plugin, and will grab the "target" from the config area of the &lt;code&gt;package.json&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Perhaps by now you've noticed that all the code for this package is in the &lt;code&gt;src/&lt;/code&gt; directory. We'll keep all the source code there, and we'll use a directory called &lt;code&gt;dist/&lt;/code&gt; for the output of Babel's transpilation. To tie that all together, I've added a few entries to the &lt;code&gt;scripts&lt;/code&gt; area of &lt;code&gt;package.json&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;clean&lt;/code&gt;: will delete the &lt;code&gt;dist/&lt;/code&gt; directory&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;build&lt;/code&gt;: will have Babel transpile everything in the &lt;code&gt;src/&lt;/code&gt; directory to the &lt;code&gt;dist/&lt;/code&gt; directory&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;clean:build&lt;/code&gt;: will run the &lt;code&gt;clean&lt;/code&gt; and then the &lt;code&gt;build&lt;/code&gt; commands&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;prepare&lt;/code&gt;: this is one of the special "lifecycle" event scripts that will be automatically run before your code is published, and it simply calls the &lt;code&gt;clean:build&lt;/code&gt; script&lt;sup id="fnref2"&gt;&lt;a href="#fn2"&gt;2&lt;/a&gt;&lt;/sup&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now that we're able to code using proposed, non-finalized ECMA standards, ESLint will get confused about some of the syntax it may see you developing in, so I've added &lt;a href="https://www.npmjs.com/package/@babel/eslint-parser"&gt;&lt;code&gt;@babel/eslint-parser&lt;/code&gt;&lt;/a&gt; to our &lt;code&gt;devDependencies&lt;/code&gt; and referenced it as the parser for ESLint to use in the &lt;code&gt;.eslintrc.js&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;One last thing about Babel I'd like to discuss is &lt;a href="https://babeljs.io/docs/en/babel-node"&gt;&lt;code&gt;@babel/node&lt;/code&gt;&lt;/a&gt;. This package installs a &lt;code&gt;babel-node&lt;/code&gt; command that will transpile the scripts you want to execute on the fly! It's a great tool for executing one-off scripts that you'd like to write using language features that are not compatible with your development environment, but that you don't want transpiled into the &lt;code&gt;dist/&lt;/code&gt; folder with the rest of your package's code. I've created an example script in &lt;code&gt;scripts/my-script.js&lt;/code&gt; that can be executed using &lt;code&gt;yarn my-script&lt;/code&gt;, but would error if you tried to run it directly in Node. While &lt;code&gt;babel-node&lt;/code&gt; is great for these one-off scenarios, running your code on production using &lt;code&gt;babel-node&lt;/code&gt; is &lt;a href="https://babeljs.io/docs/en/babel-node#not-meant-for-production-use"&gt;not recommended&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#nodemon"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/remy/nodemon"&gt;Nodemon&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;While developing your code, you'll want to verify the changes that you're making and make sure they're working properly. Shutting down and restarting this project's web server each time you make changes would be very time consuming, but fortunately there's &lt;a href="https://github.com/remy/nodemon"&gt;Nodemon&lt;/a&gt;. Nodemon allows you to execute a command (like starting your app), but when it detects changes to files or directories you specify, it will restart that command. This way the effect of your changes can quickly and easily be verified. I've added a script entry in &lt;code&gt;package.json&lt;/code&gt; called &lt;code&gt;develop&lt;/code&gt; that will (1) transpile the source code (2) start the server and (3) watch for changes to code that could impact the application. When any such changes occur, those steps will be repeated automatically. Sweet! Additionally, Nodemon is configurable so be sure to check out the documentation.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#testing"&gt;
  &lt;/a&gt;
  Testing
&lt;/h3&gt;

&lt;p&gt;Unless your project is doing something extremely trivial and straightforward, you'll probably want to develop a suite of tests to make sure that your code is working as expected, and that it stays that way. I'm not going to get into test frameworks, philosophies, or specifics (perhaps another blog post would be good for that!), but I do have one big tip:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;While you're writing tests, fixing tests, or fixing code that breaks tests, it's great to leverage Nodemon to re-run your tests (or just the specific tests you're working on) with every code change. I've added a &lt;code&gt;test:watch&lt;/code&gt; script to &lt;code&gt;package.json&lt;/code&gt; for this purpose.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#the-raw-gitignore-endraw-file"&gt;
  &lt;/a&gt;
  The &lt;a href="https://git-scm.com/docs/gitignore"&gt;&lt;code&gt;.gitignore&lt;/code&gt;&lt;/a&gt; file
&lt;/h3&gt;

&lt;p&gt;Not all the code and files that will end up in your local project directory should be committed to source control. For example, the &lt;code&gt;node_modules&lt;/code&gt; directory should not be committed since that's something that will be built by &lt;code&gt;yarn&lt;/code&gt;/&lt;code&gt;npm&lt;/code&gt; using the &lt;code&gt;package.json&lt;/code&gt; and lockfiles. Also, in our specific case, the &lt;code&gt;dist/&lt;/code&gt; folder should not be committed, since it's a byproduct/derivative of transpiling the &lt;code&gt;src/&lt;/code&gt; directory, where the actual code changes are taking place. Also, the &lt;code&gt;.env&lt;/code&gt; file is very likely to have sensitive stuff and we all know that you should never check-in sensitive information to source control, right? 😉 Patterns of things to be ignored by git can be specified in the &lt;a href="https://git-scm.com/docs/gitignore"&gt;&lt;code&gt;.gitignore&lt;/code&gt;&lt;/a&gt; file. In general, it's also good practice to review the files that will be added by your commits and give a quick thought as to whether they should be ignored or not.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-raw-npmignore-endraw-file"&gt;
  &lt;/a&gt;
  The &lt;a href="https://docs.npmjs.com/cli/v7/using-npm/developers#keeping-files-out-of-your-package"&gt;&lt;code&gt;.npmignore&lt;/code&gt;&lt;/a&gt; file
&lt;/h3&gt;

&lt;p&gt;Similar to &lt;code&gt;.gitignore&lt;/code&gt;, if you're publishing your package to NPM you can leverage a &lt;a href="https://docs.npmjs.com/cli/v7/using-npm/developers#keeping-files-out-of-your-package"&gt;&lt;code&gt;.npmignore&lt;/code&gt;&lt;/a&gt; file to control which files will be included in the tarball that users will download from NPM when using your package. If you don't add a &lt;code&gt;.npmignore&lt;/code&gt; file, the &lt;code&gt;.gitignore&lt;/code&gt; file will be used. This is bad for a few reasons:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;We've told git to ignore the &lt;code&gt;dist/&lt;/code&gt; directory, which actually has the code we want users to run!&lt;/li&gt;
&lt;li&gt;A bunch of files that are irrelevant to the usage of our package will be included: the &lt;code&gt;src/&lt;/code&gt; directory, the &lt;code&gt;scripts/&lt;/code&gt; directory, the &lt;code&gt;test/&lt;/code&gt; directory, various development configuration files etc.
For these reasons, I've found it beneficial to create a &lt;code&gt;.npmignore&lt;/code&gt; file that explicitly ignores everything, but then adds exceptions for the &lt;code&gt;dist/&lt;/code&gt; directory and a few other files that I actually want to end up on end-users' installations. While several necessary files (like &lt;code&gt;package.json&lt;/code&gt;) are included no matter what you put in your &lt;code&gt;.npmignore&lt;/code&gt;, you should still be careful with how you use it.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h3&gt;

&lt;p&gt;This project now has some great attributes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;developers should not have Node compatibility issues&lt;/li&gt;
&lt;li&gt;a clean &lt;code&gt;package.json&lt;/code&gt;, with as few &lt;code&gt;dependencies&lt;/code&gt; as possible and some helpful script entries&lt;/li&gt;
&lt;li&gt;a pattern where configuration is loaded from the Environment at runtime in a straightforward manner&lt;/li&gt;
&lt;li&gt;code that will remain consistently formatted and free of lint&lt;/li&gt;
&lt;li&gt;development can be done using advanced language features, but boiled down to support older runtimes&lt;/li&gt;
&lt;li&gt;the ability to rapidly view or test changes to code while developing&lt;/li&gt;
&lt;li&gt;a clean git repository that does not contain unnecessary or sensitive files&lt;/li&gt;
&lt;li&gt;a clean, minimal package when uploading to NPM&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are certainly more things that could be done (or done differently), but this will hopefully be great food for thought as a starting point for those looking to create (or refactor) their Node/JS projects. Happy coding!&lt;/p&gt;




&lt;ol&gt;

&lt;li id="fn1"&gt;
&lt;p&gt;For example: &lt;a href="https://github.com/anvilco/spectaql"&gt;SpectaQL&lt;/a&gt;, &lt;a href="https://github.com/anvilco/node-anvil"&gt;Node Anvil&lt;/a&gt;, and &lt;a href="https://github.com/anvilco/python-anvil"&gt;Python Anvil&lt;/a&gt;. Check out more at our &lt;a href="https://github.com/anvilco/"&gt;Github page&lt;/a&gt;. &lt;a href="#fnref1"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;li id="fn2"&gt;
&lt;p&gt;It will also call &lt;code&gt;husky install&lt;/code&gt;, which is part of the pre-commit hooks stuff. &lt;a href="#fnref2"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;

&lt;/ol&gt;

</description>
      <category>node</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
  </channel>
</rss>
