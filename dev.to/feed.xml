<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>CSS ::placeholder and :placeholder-shown</title>
      <author>Suprabha</author>
      <pubDate>Tue, 25 May 2021 07:16:30 +0000</pubDate>
      <link>https://dev.to/suprabhasupi/css-placeholder-and-placeholder-shown-2cpk</link>
      <guid>https://dev.to/suprabhasupi/css-placeholder-and-placeholder-shown-2cpk</guid>
      <description>&lt;p&gt;&lt;span&gt;T&lt;/span&gt;he `:placeholder-shown` CSS pseudo-class represents any `` or `` element that is currently displaying placeholder text.&lt;/p&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"some text"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="nd"&gt;:placeholder-shown&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;"Baloo 2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;cursive&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bold&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;pink&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  Output:
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yaWxGFIi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.imgur.com/EHH1pYC.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yaWxGFIi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.imgur.com/EHH1pYC.gif" alt="placeholder shown"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In above snippet, &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;If user has not typed anything then placeholder shown background color will be pink&lt;/li&gt;
&lt;li&gt;When user has typed something then there will be no placeholder shown and the background color will be transparent&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;üìù NOTE: &lt;code&gt;:placeholder-shown&lt;/code&gt; won't work if there will be no placeholder text&lt;/p&gt;

&lt;p&gt;üóì &lt;b&gt;Example:&lt;/b&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="nd"&gt;:placeholder-shown&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;pink&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;‚ùå The above snippet doesn't work&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#placeholdershown-vs-placeholder"&gt;
  &lt;/a&gt;
  :placeholder-shown vs ::placeholder üî•
&lt;/h3&gt;

&lt;p&gt;We can use &lt;code&gt;:placeholder-shown&lt;/code&gt; to style the input element.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="nd"&gt;:placeholder-shown&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="no"&gt;pink&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;yellow&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;blue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, we set &lt;code&gt;color: blue&lt;/code&gt;, but it didn't work. That's because &lt;code&gt;:placeholder-shown&lt;/code&gt; will only target the input itself. But for the actual placeholder text, you have to use the pseudo-element &lt;code&gt;::placeholder&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;::placeholder&lt;/code&gt; pseudo-element can be used to style the placeholder text in &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt; element.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="nd"&gt;::placeholder&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;blue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  Output:
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f-ClNjBN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/lga0bsF.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f-ClNjBN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/lga0bsF.png" alt="placeholder"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you wanted to add styles for empty placeholder, we can pass empty string &lt;code&gt;" "&lt;/code&gt; as placeholder.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;" "&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  Output:
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vdNhg4WW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/BE4piBr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vdNhg4WW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/BE4piBr.png" alt="placeholder shown"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, why don't we combine two selector &lt;code&gt;:not&lt;/code&gt; and &lt;code&gt;:placeholder-shown&lt;/code&gt;.&lt;br&gt;
So we can target if the input is not empty then we can apply css.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"some text"&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"Check with empty!"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="nd"&gt;:not&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nd"&gt;:placeholder-shown&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;pink&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  Output:
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4AB_VoiZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.imgur.com/ybliArD.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4AB_VoiZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.imgur.com/ybliArD.gif" alt="placeholder not shown"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In above snippet, &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;If the input has value then the &lt;code&gt;background-color&lt;/code&gt; will get applied&lt;/li&gt;
&lt;li&gt;If the input is empty then &lt;code&gt;background-color&lt;/code&gt; not applies&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;üìù NOTE: &lt;code&gt;::placeholder&lt;/code&gt; does not work with &lt;code&gt;:not&lt;/code&gt; selector.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#reference"&gt;
  &lt;/a&gt;
  Reference üßê
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/::placeholder"&gt;MDN Doc Placeholder&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/:placeholder-shown"&gt;MDN Doc placeholder-shown&lt;/a&gt;&lt;a&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://caniuse.com/css-placeholder-shown"&gt;caniuse - placeholder-shown&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;
        üåü &lt;a href="https://twitter.com/suprabhasupi"&gt; Twitter&lt;/a&gt;
      &lt;/td&gt;
      &lt;td&gt;
        üë©üèª‚Äçüíª &lt;a href="https://www.suprabha.me/"&gt; suprabha.me&lt;/a&gt;
      &lt;/td&gt;
&lt;td&gt;
        üåü &lt;a href="https://www.instagram.com/suprabhasupi/"&gt; Instagram&lt;/a&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

</description>
      <category>css</category>
      <category>codenewbie</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Build a COVID-19 Tracker Application using HTML,CSS and JavaScript [interesting features included]</title>
      <author>The Nerdy Dev</author>
      <pubDate>Tue, 25 May 2021 07:07:43 +0000</pubDate>
      <link>https://dev.to/thenerdydev/build-a-covid-19-tracker-application-using-html-css-and-javascript-interesting-features-included-23ld</link>
      <guid>https://dev.to/thenerdydev/build-a-covid-19-tracker-application-using-html-css-and-javascript-interesting-features-included-23ld</guid>
      <description>&lt;p&gt;Hey everyone üëãüèª,&lt;/p&gt;

&lt;p&gt;In this article, I will show you how you can make a &lt;strong&gt;COVID-19&lt;/strong&gt; Tracker Application with interesting features. To learn how you can create one, check the video provided down below. You can also have a look at the live link of the project that we make in this video.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#images"&gt;
  &lt;/a&gt;
  Images
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D3amNX_U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/dk34v9h3zudzo554vv11.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D3amNX_U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/dk34v9h3zudzo554vv11.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ezipn3kX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/lxp4ldumdhnc8qpmn1dq.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ezipn3kX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/lxp4ldumdhnc8qpmn1dq.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#features"&gt;
  &lt;/a&gt;
  Features
&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Clustering of points based on the countries and each cluster will represent a set of locations within it that are prone to COVID19. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Reverse Geocoding using Latitude and Longitude to get the place name and getting the number of deaths and number of confirmed cases for each location that is present within the country. &lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Live Link&lt;/strong&gt;: &lt;a href="https://covid2019-tracker.netlify.com/"&gt;https://covid2019-tracker.netlify.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Learn how to make one with same features in this video: &lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/lX0vHaqtk6M"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;üëâüèª &lt;strong&gt;PS&lt;/strong&gt; : I am working on a &lt;strong&gt;BRAND&lt;/strong&gt; new &lt;strong&gt;FREE&lt;/strong&gt;- &lt;strong&gt;Web Developer Full Course&lt;/strong&gt; on YouTube , check the below article to know more about the topics that we cover in this course:&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/thenerdydev" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dvgjnxQX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--j2i8W0Wf--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/297820/e861379b-e75a-48e5-bc39-44b3e940c086.png" alt="thenerdydev image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/thenerdydev/2021-web-developer-full-course-html-css-javascript-node-js-and-mongodb-27pb" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;(2021) - Web Developer Full Course : HTML, CSS, JavaScript, Node.js and MongoDB&lt;/h2&gt;
      &lt;h3&gt;The Nerdy Dev „Éª Apr 28 „Éª 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#node&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;üëâüèª Follow me on Twitter : &lt;a href="https://twitter.com/The_Nerdy_Dev"&gt;https://twitter.com/The_Nerdy_Dev&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Follow me on:&lt;br&gt;
üëâ Twitter: &lt;a href="https://twitter.com/thenerdydev"&gt;https://twitter.com/thenerdydev&lt;/a&gt;&lt;br&gt;
üëâ YouTube: &lt;a href="https://youtube.com/thenerdydev"&gt;https://youtube.com/thenerdydev&lt;/a&gt;&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Understanding Promise.all, Promise.race and Promise.allSettled </title>
      <author>The Nerdy Dev</author>
      <pubDate>Tue, 25 May 2021 07:01:41 +0000</pubDate>
      <link>https://dev.to/thenerdydev/understanding-promise-all-promise-race-and-promise-allsettled-2g1g</link>
      <guid>https://dev.to/thenerdydev/understanding-promise-all-promise-race-and-promise-allsettled-2g1g</guid>
      <description>&lt;p&gt;Hey everyone üëãüèª,&lt;/p&gt;

&lt;p&gt;In this article, let us discuss some very important methods that we have in the Promise API - &lt;strong&gt;Promise.all&lt;/strong&gt;,&lt;strong&gt;Promise.allSettled&lt;/strong&gt;, &lt;strong&gt;Promise.race&lt;/strong&gt;. &lt;br&gt;
So let's start with &lt;strong&gt;Promise.all&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#promiseall"&gt;
  &lt;/a&gt;
  Promise.all
&lt;/h2&gt;

&lt;p&gt;The &lt;strong&gt;Promise.all()&lt;/strong&gt; method takes an &lt;em&gt;iterable of promises&lt;/em&gt; as an input, and returns a single Promise that resolves to an array of the results of the input promises. This returned promise will resolve when all of the input's promises have resolved, or if the input iterable contains no promises. It rejects immediately upon any of the input promises rejecting or non-promises throwing an error, and will reject with this first rejection message / error.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZKxWhrzi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s0iwykriw2238hzwsoqp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZKxWhrzi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s0iwykriw2238hzwsoqp.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe src="https://codesandbox.io/embed/8urrd"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#promiseallsettled"&gt;
  &lt;/a&gt;
  Promise.allSettled
&lt;/h2&gt;

&lt;p&gt;The &lt;strong&gt;Promise.allSettled()&lt;/strong&gt; method returns a promise that resolves after all of the given promises have either fulfilled or rejected, with an array of objects that each describes the outcome of each promise.&lt;/p&gt;

&lt;p&gt;It is typically used when you have multiple asynchronous tasks that are not dependent on one another to complete successfully, or you'd always like to know the result of each promise.&lt;/p&gt;

&lt;p&gt;In comparison, the Promise returned by Promise.all() may be more appropriate if the tasks are dependent on each other / if you'd like to immediately reject upon any of them rejecting.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uqx6jyo_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jqszxmvdljcz817uhorj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uqx6jyo_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jqszxmvdljcz817uhorj.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe src="https://codesandbox.io/embed/6svwn"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#promiserace"&gt;
  &lt;/a&gt;
  Promise.race
&lt;/h2&gt;

&lt;p&gt;The &lt;strong&gt;Promise.race()&lt;/strong&gt; method returns a promise that fulfills or rejects as soon as one of the promises in an iterable fulfills or rejects, with the value or reason from that promise.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--s30sCUZS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/abqfz4jai1fiqqobk206.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s30sCUZS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/abqfz4jai1fiqqobk206.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe src="https://codesandbox.io/embed/zol1c"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;So this is it for this article, I do have a video that covers the same with a lot of interesting examples, so feel free to check that : &lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/yVwukhqoThg"&gt;
&lt;/iframe&gt;
 &lt;/p&gt;

&lt;p&gt;If you are looking to learn Web Development, I have curated a &lt;strong&gt;FREE&lt;/strong&gt; course for you on my YouTube Channel, check the below article :&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/thenerdydev" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dvgjnxQX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--j2i8W0Wf--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/297820/e861379b-e75a-48e5-bc39-44b3e940c086.png" alt="thenerdydev image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/thenerdydev/2021-web-developer-full-course-html-css-javascript-node-js-and-mongodb-27pb" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;(2021) - Web Developer Full Course : HTML, CSS, JavaScript, Node.js and MongoDB&lt;/h2&gt;
      &lt;h3&gt;The Nerdy Dev „Éª Apr 28 „Éª 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#node&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;If you have spare 2 hours, then utilize them by creating these &lt;strong&gt;10 JavaScript Projects in under 2 Hours&lt;/strong&gt; &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/thenerdydev" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dvgjnxQX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--j2i8W0Wf--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/297820/e861379b-e75a-48e5-bc39-44b3e940c086.png" alt="thenerdydev image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/thenerdydev/10-javascript-projects-in-2-hours-3p1c" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;10 JavaScript Projects in 2 Hours&lt;/h2&gt;
      &lt;h3&gt;The Nerdy Dev „Éª Oct 26 '20 „Éª 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;üëâüèª Follow me on Twitter : &lt;a href="https://twitter.com/The_Nerdy_Dev"&gt;https://twitter.com/The_Nerdy_Dev&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;üëâüèª Check out my YouTube Channel : &lt;a href="https://youtube.com/thenerdydev"&gt;https://youtube.com/thenerdydev&lt;/a&gt; &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>100daysofcode</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>6 Dark Mode color palettes with examples , CSS and the Figma file. </title>
      <author>michael-andreuzza</author>
      <pubDate>Tue, 25 May 2021 06:38:10 +0000</pubDate>
      <link>https://dev.to/michaelandreuzza/6-dark-mode-color-palettes-with-examples-css-and-the-figma-file-27he</link>
      <guid>https://dev.to/michaelandreuzza/6-dark-mode-color-palettes-with-examples-css-and-the-figma-file-27he</guid>
      <description>&lt;h3&gt;
  &lt;a href="#hello-everyone"&gt;
  &lt;/a&gt;
  Hello everyone
&lt;/h3&gt;

&lt;p&gt;Well, I am a huge fan of Darkmode and I build &lt;a href="https://michaelandreuzza.com/"&gt;my sites&lt;/a&gt; as much as it goes using a dark color scheme.&lt;/p&gt;

&lt;p&gt;Taking this into acccount, I also enjoy a nice bright color palette, in fact some of pthe rojects I made I just redesigned them with a bright color palette.&lt;/p&gt;

&lt;p&gt;It's important to know &lt;strong&gt;when&lt;/strong&gt;, &lt;strong&gt;where&lt;/strong&gt; and &lt;strong&gt;how&lt;/strong&gt; to use a dark color scheme, is not just because you want to use it, but &lt;strong&gt;who&lt;/strong&gt; and &lt;strong&gt;how&lt;/strong&gt; is going to use it. Also, is it even neeeded? Maybe not...&lt;/p&gt;

&lt;p&gt;Well let's have a look to some color palettes and how they have been used.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#this-is-the-figma-file"&gt;
  &lt;/a&gt;
  This is the &lt;a href="https://www.figma.com/community/file/978907813966987941"&gt;Figma file&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;BTW, if you want some color inspiration, I am still working on &lt;a href="https://www.colorsandfonts.com/"&gt;colorsandfonts&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If there is anything you wonder, please let me know here or on &lt;a href="https://twitter.com/Mike_Andreuzza"&gt;Twitter&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#big-mail"&gt;
  &lt;/a&gt;
  &lt;a href="https://getbigmail.com/"&gt;Big Mail&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XgeGJpsS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5bpp2uu980ve5z41oiim.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XgeGJpsS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5bpp2uu980ve5z41oiim.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;/* CSS HEX */&lt;br&gt;
--eerie-black: #141414ff;&lt;br&gt;
--jet: #373737ff;&lt;br&gt;
--white: #ffffffff;&lt;br&gt;
--rajah: #faa549ff;&lt;br&gt;
--tart-orange: #f2564fff;&lt;br&gt;
--light-steel-blue: #b7d0f1ff;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#hourly-app"&gt;
  &lt;/a&gt;
  &lt;a href="http://hourly-app.com/"&gt;Hourly App&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---K0NBi-y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s9jdleoii7pia53opdap.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---K0NBi-y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s9jdleoii7pia53opdap.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;/* CSS HEX */&lt;br&gt;
--rich-black-fogra-39: #0a0a0aff;&lt;br&gt;
--eerie-black: #1a181aff;&lt;br&gt;
--davys-grey: #505050ff;&lt;br&gt;
--persian-red: #d1342fff;&lt;br&gt;
--black-olive: #434038ff;&lt;br&gt;
--dutch-white: #eee3c1ff;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#vercel"&gt;
  &lt;/a&gt;
  &lt;a href="https://vercel.com/"&gt;Vercel&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0fHGM1pT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u8xv4d5y4t7pxz8i6t0z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0fHGM1pT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u8xv4d5y4t7pxz8i6t0z.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;/* CSS HEX */&lt;br&gt;
--black: #000000ff;&lt;br&gt;
--rich-black-fogra-39: #111111ff;&lt;br&gt;
--jet: #333333ff;&lt;br&gt;
--white: #ffffffff;&lt;br&gt;
--flickr-blue: #0761d1ff;&lt;br&gt;
--french-rose: #ea558dff;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#wickedtemplates"&gt;
  &lt;/a&gt;
  &lt;a href="https://wickedtemplates.com/"&gt;wickedtemplates&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zpzyycjv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hz49oog6y67r6gr0km0k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zpzyycjv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hz49oog6y67r6gr0km0k.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;/* CSS HEX */&lt;br&gt;
--rich-black-fogra-39: #111213ff;&lt;br&gt;
--eerie-black: #212224ff;&lt;br&gt;
--quick-silver: #a1a1a1ff;&lt;br&gt;
--white: #ffffffff;&lt;br&gt;
--blue-crayola: #2f71e8ff;&lt;br&gt;
--cyan-process: #29b9f0ff;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#laws-of-ux"&gt;
  &lt;/a&gt;
  &lt;a href="https://lawsofux.com/"&gt;Laws Of UX&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e1pGAoHE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/89xf8czzhofnve73tgg9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e1pGAoHE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/89xf8czzhofnve73tgg9.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;/* CSS HEX */&lt;br&gt;
--rich-black-fogra-39: #0c0c0fff;&lt;br&gt;
--rich-black-fogra-39-2: #101014ff;&lt;br&gt;
--white: #ffffffff;&lt;br&gt;
--independence: #475977ff;&lt;br&gt;
--magenta-haze: #963d72ff;&lt;br&gt;
--sap-green: #537a34ff;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#remotecamp"&gt;
  &lt;/a&gt;
  &lt;a href="https://remotecamp.io/"&gt;RemoteCamp&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2eO6Vi9S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2hbu6iewval47kl236c4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2eO6Vi9S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2hbu6iewval47kl236c4.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;/* CSS HEX */&lt;br&gt;
--oxford-blue: #080c24ff;&lt;br&gt;
--oxford-blue-2: #151e34ff;&lt;br&gt;
--blue-crayola: #3071e8ff;&lt;br&gt;
--white: #ffffffff;&lt;br&gt;
--maximum-blue-purple: #a6b2ebff;&lt;br&gt;
--celadon-blue: #1f7ea7ff;&lt;/p&gt;

&lt;p&gt;Well, this is the end...&lt;/p&gt;

&lt;p&gt;Hope you guys like it.&lt;/p&gt;

</description>
      <category>uiweekly</category>
      <category>ux</category>
      <category>css</category>
      <category>productivity</category>
    </item>
    <item>
      <title>UI Dev Newsletter #58</title>
      <author>Silvestar Bistroviƒá</author>
      <pubDate>Tue, 25 May 2021 06:33:35 +0000</pubDate>
      <link>https://dev.to/starbist/ui-dev-newsletter-58-2lo0</link>
      <guid>https://dev.to/starbist/ui-dev-newsletter-58-2lo0</guid>
      <description>&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://bit.ly/3yzSrp6"&gt;Learn CSS&lt;/a&gt;&lt;br&gt;
Google's evergreen CSS course and reference to level up your web styling expertise.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://bit.ly/3fDdG0D"&gt;Microsoft is finally retiring Internet Explorer in 2022&lt;/a&gt;&lt;br&gt;
Internet Explorer will no longer be supported in June 2022.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://bit.ly/2SkhbkA"&gt;Fun Animated Button Hover Effect In CSS&lt;/a&gt;&lt;br&gt;
Aphinya Dechalert explains how to create --fun-- hover effect using transitions and pseudo elements.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://bit.ly/2QNM94s"&gt;Add scroll margin to all elements which can be targeted&lt;/a&gt;&lt;br&gt;
Andy Bell shows how to add an extra bit of space to targeted elements using 'scroll-margin-top' property.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://bit.ly/3c5G6Qf"&gt;136 facts every web dev should know before they burn out and turn to landscape painting or nude modelling&lt;/a&gt;&lt;br&gt;
Baldur Bjarnason shares a list of everything he learned about web development in the almost twenty-five years of practise.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://bit.ly/3yvriUv"&gt;Advanced CSS Animation Using cubic-bezier()&lt;/a&gt;&lt;br&gt;
Temani Afif explains how to use custom timing functions and a bit of math to do fancy animations without the complex keyframes we generally reach for.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://bit.ly/3yvTw1i"&gt;A Love Letter to HTML &amp;amp; CSS&lt;/a&gt;&lt;br&gt;
Ashley Kolodziej writes a letter of appreciation for HTML and CSS, the two most neglected, yet integral heros of modern web technology.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://bit.ly/2RHvMqv"&gt;To those who struggle to get perfect score in Page Speed Insights. YNWA.&lt;/a&gt;&lt;br&gt;
Google homepage score is far from perfect.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Happy coding!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bit.ly/34155z3"&gt;Subscribe to the newsletter here!&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
    </item>
    <item>
      <title>One of my JavaScript videos crossed 40k views on YouTube...</title>
      <author>The Nerdy Dev</author>
      <pubDate>Tue, 25 May 2021 06:33:17 +0000</pubDate>
      <link>https://dev.to/thenerdydev/one-of-my-javascript-videos-crossed-40k-views-on-youtube-373</link>
      <guid>https://dev.to/thenerdydev/one-of-my-javascript-videos-crossed-40k-views-on-youtube-373</guid>
      <description>&lt;p&gt;Hey guys, &lt;/p&gt;

&lt;p&gt;As the title of this article says, I felt so good to see that one of my videos was able to cross &lt;strong&gt;40k&lt;/strong&gt; views on YouTube and of course it is a video on Web Development. &lt;/p&gt;

&lt;p&gt;As you all know by now, I create content on programming and web technologies like JavaScript, Vue, React, Python, Machine Learning and more...&lt;/p&gt;

&lt;p&gt;So, let me reveal the video that got me these many views &lt;br&gt;
.&lt;br&gt;
.&lt;br&gt;
.&lt;br&gt;
.&lt;br&gt;
.&lt;br&gt;
.&lt;br&gt;
.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#10-javascript-projects-in-2-hours"&gt;
  &lt;/a&gt;
  10 JavaScript Projects in 2 Hours
&lt;/h2&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/KTGfHmyje5A"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;üëâüèª &lt;strong&gt;PS&lt;/strong&gt; : I am working on a &lt;strong&gt;BRAND&lt;/strong&gt; new &lt;strong&gt;FREE&lt;/strong&gt;- &lt;strong&gt;Web Developer Full Course&lt;/strong&gt; on YouTube , check the below article to know more about the topics that we cover in this course:&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/thenerdydev" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dvgjnxQX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--j2i8W0Wf--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/297820/e861379b-e75a-48e5-bc39-44b3e940c086.png" alt="thenerdydev image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/thenerdydev/2021-web-developer-full-course-html-css-javascript-node-js-and-mongodb-27pb" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;(2021) - Web Developer Full Course : HTML, CSS, JavaScript, Node.js and MongoDB&lt;/h2&gt;
      &lt;h3&gt;The Nerdy Dev „Éª Apr 28 „Éª 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#node&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;üëâüèª Follow me on Twitter : &lt;a href="https://twitter.com/The_Nerdy_Dev"&gt;https://twitter.com/The_Nerdy_Dev&lt;/a&gt; &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>100daysofcode</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>How To Make Your First Contribution As a Beginner In Open Source</title>
      <author>Shatakshi Gupta</author>
      <pubDate>Tue, 25 May 2021 06:09:00 +0000</pubDate>
      <link>https://dev.to/shatakshiigupta/how-to-make-your-first-contribution-as-a-beginner-in-open-source-5hkf</link>
      <guid>https://dev.to/shatakshiigupta/how-to-make-your-first-contribution-as-a-beginner-in-open-source-5hkf</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PWLIdPxt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b6qu52mg7gteock8at73.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PWLIdPxt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b6qu52mg7gteock8at73.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Open Source is very powerful that is encouraging and empowering, but students today are not really aware of what power the Open Source world really holds, how motivating the community is, and what opportunities it brings as most of the students do not know much about Open Source and how engaging the community is.&lt;br&gt;
If you are here then Kudos to you for making your first step into the amazing Open Source world.üëè&lt;/p&gt;

&lt;p&gt;Now with no more delays let's get right into what Open Source really is, how inspiring the community is, what all opportunities it brings to students and how you also can make a little change to the community and empower others too.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-open-source"&gt;
  &lt;/a&gt;
  What is Open Source?
&lt;/h2&gt;

&lt;p&gt;Open Source, when you think of this term what might come to your mind is anything that is freely available, well that's what it exactly is. &lt;br&gt;
Open Source can be explained as source code of any software that you might be currently using or will be using in the near future as the Open Source thing is only going to grow more and more and which is made available to everyone so that every single one of us can have a look, help making it better if we think that particular software is missing this feature and if we add that feature to it then the software would become much more better than before.&lt;br&gt;
So, I hope you got a little idea of how things work in Open Source world.&lt;br&gt;
Some of the most commonly used open source softwares are Mozilla Firefox, VLC Media player, Image editing tool Gimp and the list is simply endless. &lt;br&gt;
As now we have known so much about open source let's get right into how you can help make a change and make your first contribution.&lt;/p&gt;

&lt;p&gt;If you know about Open Source I believe that you might be aware of GitHub to, but if do not let's know a bit about Git and GitHub to.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#what-is-git"&gt;
  &lt;/a&gt;
  What is Git?
&lt;/h3&gt;

&lt;p&gt;Git is a version control system that lets you manage and keep track of your source code history.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-github"&gt;
  &lt;/a&gt;
  What is GitHub?
&lt;/h3&gt;

&lt;p&gt;GitHub is a web-based Git version control &lt;a href="https://www.javatpoint.com/git-repository"&gt;repository&lt;/a&gt; hosting service. GitHub provides all the functionalities of Git along with some of its own features as well.&lt;/p&gt;

&lt;p&gt;Now we will be covering some steps so that you can download Git on your system and get started to contributing to your first repository.&lt;/p&gt;

&lt;p&gt;We will be downloading Git bash, through Git bash you will be able to type Git commands that make source code management easier through versioning and commit history.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-1"&gt;
  &lt;/a&gt;
  Step 1
&lt;/h3&gt;

&lt;p&gt;Download Git on your system from &lt;a href="https://git-scm.com/downloads"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-2"&gt;
  &lt;/a&gt;
  Step 2
&lt;/h3&gt;

&lt;p&gt;After downloading, you need install it on your system. So for installation click on run then click on next, after that do not change the Destination location and simply click on next, after that while selecting components check the boxes with 'In the Quick Launch' and 'On the desktop'. After that keep on clicking next.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-3"&gt;
  &lt;/a&gt;
  Step 3
&lt;/h3&gt;

&lt;p&gt;After installation, uncheck the box with 'View release notes' and check the one with 'Launch Git bash'&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting started
&lt;/h3&gt;

&lt;p&gt;To get involved with Open source projects you need to have a basic understanding of how git commands work and how one has to use those commands to make a valuable contribution.&lt;/p&gt;

&lt;p&gt;Reference for git commands:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.hostinger.in/tutorials/basic-git-commands"&gt;git commands for beginners&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.simplilearn.com/tutorials/git-tutorial/git-commands"&gt;Quick reference for git command lines by Simplilearn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://confluence.atlassian.com/bitbucketserver/basic-git-commands-776639767.html"&gt;Basic git commands&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#contributing"&gt;
  &lt;/a&gt;
  Contributing
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#1-choose-a-project-that-interests-you"&gt;
  &lt;/a&gt;
  1. Choose a project that interests you
&lt;/h4&gt;

&lt;p&gt;This is the most crucial and salient part of your contribution. You need to find a project that interests you and that matches your skillset. And this need not to be a very large contribution. For someone who is just starting with open source it is highly recommended to start with Fixing typos, modifying documentation files in large and even small projects. Well as of now if you are reading this you might be looking to contribute as a beginner. &lt;a href="https://github.com/firstcontributions/first-contributions"&gt;first-contributions&lt;/a&gt; can prove to be a really good start for you. &lt;a href="https://github.com/EddieHubCommunity/hacktoberfest-practice"&gt;Hacktoberfest-practice&lt;/a&gt; and &lt;a href="https://github.com/MunGell/awesome-for-beginners"&gt;awesome-for-beginners&lt;/a&gt; can really help you as well.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#finding-a-project"&gt;
  &lt;/a&gt;
  Finding a project
&lt;/h4&gt;

&lt;p&gt;You can filter the issues tab according to your skillset let's suppose you have basic knowledge of Java and you want to contribute to projects written in Java language then you can search good first issues by going to the issues tab and searching the issues with labels like 'label:"good first issue" ' and 'language:Java'&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9cztD_bY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g4bvr6rrvi2emymm3e7r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9cztD_bY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g4bvr6rrvi2emymm3e7r.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In a similar manner you can filter issues by replacing 'good first issues' with 'first-timers-only', 'beginner', 'good-first-bug' and 'easy'.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#2-forking-the-project"&gt;
  &lt;/a&gt;
  2. Forking the project
&lt;/h4&gt;

&lt;p&gt;Fork will create a copy of the repository in your GitHub account so that you can make changes to the project.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AGj4drYO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/34gyvlrsneal8hk0xehh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AGj4drYO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/34gyvlrsneal8hk0xehh.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#3-cloning-the-project"&gt;
  &lt;/a&gt;
  3. Cloning the project
&lt;/h4&gt;

&lt;p&gt;Go to your own GitHub account and there you will see a forked version of that project under your account. Now click into this repository that is forked and and we will make a copy of it on your machine by hitting the code button.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HY8U5U0L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nm534wc53idklbpu0yo0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HY8U5U0L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nm534wc53idklbpu0yo0.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Copy the &lt;strong&gt;HTTPS URL&lt;/strong&gt;.&lt;br&gt;
Open your terminal or git bash window.&lt;/p&gt;

&lt;p&gt;Move to the location on your computer where you want to create a copy of this project.&lt;/p&gt;

&lt;p&gt;Run the following command:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git clone https://github.com/userid/first-contributions.git&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Substitute your GitHub username for userid.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You now have a local copy on your computer.&lt;/p&gt;

&lt;p&gt;The folder on your computer will have the same name as the remote repository on Github.&lt;/p&gt;

&lt;p&gt;Create a new branch named by running the following command:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git checkout -b add-your-name&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;cd into &lt;strong&gt;first-contributions&lt;/strong&gt;.&lt;br&gt;
Then cd into &lt;strong&gt;Contributors&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Now open the Contributors file in your Text editor. &lt;/p&gt;

&lt;p&gt;Add your name alphabetically into the file along with your GitHub profile URL.&lt;/p&gt;

&lt;p&gt;Now run &lt;code&gt;git status&lt;/code&gt; in the terminal&lt;/p&gt;

&lt;p&gt;You should see this: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3w8JvLcv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ngiw6l8din8nvc9jafp2.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3w8JvLcv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ngiw6l8din8nvc9jafp2.JPG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Changes that you made need to be staged and committed. &lt;br&gt;
So to add your changes run the following:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git add .&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now your changes have been added and you are needed to commit your changes and push it to your remote repository that is on your GitHub account. &lt;/p&gt;

&lt;p&gt;To commit your changes run the following:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git commit -m "add-your-name-to-contributors-list&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;It is always important to write a good commit message while working in large codebase projects. So there you have to take care of writing an explainable and not too long message that describes what your contribution fixes and which can be easily understood by the maintainers of the project.&lt;/p&gt;

&lt;p&gt;Now you have to push your changes to your remote repository so run the following command:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git push origin branch-name&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;When you will head over to your GitHub account you will be able to see a message with &lt;strong&gt;compare and pull request&lt;/strong&gt; button. &lt;br&gt;
Click on the button and now you will be creating a pull request that will be visible to maintainers of the project. &lt;/p&gt;

&lt;p&gt;After that click on &lt;code&gt;create pull request&lt;/code&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aU8f3Wsc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4qi0796np3vla1adypk5.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aU8f3Wsc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4qi0796np3vla1adypk5.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Yay!!!üéâ You just created your first pull request.&lt;br&gt;
Thanks for following along. You are awesome and I am so proud of you!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; While contributing to any large codebase project or even smaller you can always ask your doubts in Slack channels, mailing lists that are there to help you.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---PxxlRxb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ct12v1zdski2apxad8o8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---PxxlRxb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ct12v1zdski2apxad8o8.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Open Source community is really encouraging and inspiring and inclusive so if you ever feel overwhelmed about such large projects that you want to contribute to you can always ask your doubts and queries in mailing lists and slack channels. &lt;br&gt;
Remember do not give up ever, people in different groups are more than happy to help solve your queries and all you got to  do is  reach out to them and explain your query.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you have followed along then Congratulations üéâ on starting your Open Source journey because that is really awesome and I really appreciate your efforts.&lt;/p&gt;

&lt;p&gt;Also mentioning some other resources that will help you in your Open Source, programming journey and the amazing Computer Science Field :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/channel/UCfv8cds8AfIM3UZtAWOz6Gg"&gt;Code for Cause&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/user/mycodeschool"&gt;My Code School&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/channel/UCJskGeByzRRSvmOyZOz61ig"&gt;take U forward&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/channel/UCQHLxxBFrbfdrk1jF0moTpw"&gt;Love Babbar&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Hope you found this helpful. If you did then do share this with people who are beginners like you and want to make their first contribution in Open source.&lt;/p&gt;

&lt;p&gt;Thanks for reading and hope you have a great day!!üòÉ&lt;/p&gt;

&lt;p&gt;Say Hello! &lt;a href="https://twitter.com/shatakshiigupta"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>beginners</category>
      <category>community</category>
    </item>
    <item>
      <title>Why is a Financial Plan Template Important?</title>
      <author>Lellith Garcia</author>
      <pubDate>Tue, 25 May 2021 05:15:54 +0000</pubDate>
      <link>https://dev.to/lellithg/why-is-a-financial-plan-template-important-132b</link>
      <guid>https://dev.to/lellithg/why-is-a-financial-plan-template-important-132b</guid>
      <description>&lt;p&gt;&lt;a href="https://www.efinancialmodels.com/downloads/tag/financial-planning/"&gt;A financial plan is a financial tool&lt;/a&gt; you can utilize both for business and personal use. It helps set priorities towards financial freedom and growing a business. Companies which want to achieve specific financial goals utilize financial plan before making business decisions. &lt;br&gt;
Preparing a financial plan serves as a guide for the company‚Äôs management and employees. It makes the company‚Äôs financial objective more tangible and encourages employees to achieve those goals. &lt;/p&gt;

&lt;p&gt;5 Major Aspects of a Financial Plan Template&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Sales Forecast&lt;br&gt;
Forecasting sales targets company earnings and work hard to achieve those targets. It helps align the company‚Äôs action toward achieving the set goals. To project sales, you need to identify your market demand, capacity to produce and sell prices. Setting short-term and long-term sales forecasts will help you reach the target faster. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Estimating Expenses&lt;br&gt;
Preparing proper estimates of your expenses to help measure your capacity to finance the business. It can also aid you in finding backup funding sources in times of significant cash outflows. Projecting expenses can get you out of trouble when unusual expenses happen.  &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Personnel Plan&lt;br&gt;
When you are starting, there might not be a need to hire workers. However, as the company grows, you need more people to attend to your business and additional customers or clients. To ensure that you can hire the best-fitting personnel, you need to provide competitive salaries and benefits to your employees. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Financial Statements&lt;br&gt;
Financial statements are composed of the income statement, balance sheet, and cash statement. The income statement projects revenues and expenses and shows accounting profitability. The balance sheet constitutes assets, liabilities, and owner‚Äôs equity. The cash flow statement presents all the cash transactions and assesses the company‚Äôs capacity to meet day-to-day financial transactions.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Financial Analysis&lt;br&gt;
Financial analysis is a helpful tool to understand better the figure in the financial statements. Financial ratios such as profitability ratios, liquidity ratios, growth ratios, and leverage ratios utilize different aspects of the income statement, cash flow, and balance sheet to make an in-depth analysis of financial transactions and projections.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://www.efinancialmodels.com/downloads/tag/financial-planning/"&gt;Preparing a financial plan&lt;/a&gt; provides a significant impact on your company‚Äôs goal setting and achieving those goals. It makes your plans more concrete and achievable. There are available financial plan templates online fitted to your business that you can utilize. These financial plan templates help you save time and resources compared to preparing from scratch.&lt;/p&gt;

</description>
      <category>financialmodeltemplatesexcel</category>
      <category>financialplantemplates</category>
      <category>financialmodeltemplates</category>
      <category>financialmodelexceltemplates</category>
    </item>
    <item>
      <title>A Guide to Handling Date and Time for Full Stack JavaScript Developers</title>
      <author>Dmytro Danylov</author>
      <pubDate>Tue, 25 May 2021 05:13:42 +0000</pubDate>
      <link>https://dev.to/ddmytro/a-guide-to-handling-date-and-time-for-full-stack-javascript-developers-17i2</link>
      <guid>https://dev.to/ddmytro/a-guide-to-handling-date-and-time-for-full-stack-javascript-developers-17i2</guid>
      <description>&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table of contents
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="#introduction"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#date-formats"&gt;Date formats&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#time-zones"&gt;Time zones&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#unix-timestamp"&gt;Unix timestamp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-date-object"&gt;The Date object&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#calculating-the-difference-between-dates"&gt;Calculating the difference between dates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#formatting-the-date"&gt;Formatting the date&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#time-zone-on-the-back-end"&gt;Time zone on the back end&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#storing-dates-in-the-database"&gt;Storing dates in the database&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#conclusion"&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#useful-resources"&gt;Useful resources&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;Time plays an essential role in our lives. Therefore, as developers we get to work with date and time quite frequently. Computer software is used by people from anywhere in the world and the time in one region can differ from the time in another region. And, generally in the software we build we capture and process the date and time of various data records and events. Therefore, it's important to understand various nuances around working with date and time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#date-formats"&gt;
  &lt;/a&gt;
  Date formats
&lt;/h2&gt;

&lt;p&gt;Date and time can be represented in many different formats. In Ukraine, the date is usually written in the format "DD-MM-YYYY" (the day is first), while in the United States the common format is "MM-DD-YYYY" (the month is first).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#time-zones"&gt;
  &lt;/a&gt;
  Time zones
&lt;/h2&gt;

&lt;p&gt;Depending on the geographical area or a political unit (e.g., a country), the time zone can differ. For example, in the summer, while in Kyiv the time is 21:00, in New York the time is 14:00 (minus seven hours). Also, it's important to mention that the time zone choice/definition in a particular country/region may be affected by a political decision. A country can choose a UTC offset that differs from that country's actual georgraphical location's UTC offset.&lt;/p&gt;

&lt;p&gt;All time zones are defined as offsets to Coordinated Universal Time (UTC), ranging from UTC-12:00 to UTC+14:00. The geographical reference point for UTC is the prime meridian (longitude = 0¬∞), that runs through the Royal Observatory in Greenwich, London, United Kingdom.&lt;/p&gt;

&lt;p&gt;Additionally, in various regions of the world people practice Daylight Saving Time (DST) or in other words - summer time. This is the practice of turning the clock forward one hour from standard time during the warmer months in order to get more daylight during the hours we're usually awake. For example, in Ukraine we turn the clock forward one hour on the last Sunday of March at 03:00 and we return back to the standard time (turning the clock backward one hour) in the last Sunday of October at 04:00. The date and time DST starts and ends depends on a country or a political unit (e.g., European Union.)&lt;/p&gt;

&lt;p&gt;Also, a political region's time zone offset and/or the date and time when the DST starts and ends could have been changed at some point in history. Therefore, there is a number of databases where the information about the time zone changes is tracked. The most popular one is &lt;a href="https://www.iana.org/time-zones"&gt;IANA - Time Zone Database&lt;/a&gt;, also known as &lt;em&gt;tz&lt;/em&gt; or &lt;em&gt;zoneinfo&lt;/em&gt;. Operating systems and other computer software use these databases for time zone processing and conversions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#unix-timestamp"&gt;
  &lt;/a&gt;
  Unix timestamp
&lt;/h2&gt;

&lt;p&gt;A common format to represent date and time values in computer programming is the Unix timestamp, which is a number of seconds between the Unix epoch (1 January 1970 00:00:00 UTC) and another date (e.g., 1620758838). Positive integers represent the dates after the Unix epoch, while negative integers represent the dates before the Unix epoch.&lt;/p&gt;

&lt;p&gt;The Unix timestamp is one of the common formats for storing date and time in operating systems and databases.&lt;/p&gt;

&lt;p&gt;Learn more about the Unix timestamp on Wikipedia: &lt;a href="https://en.wikipedia.org/wiki/Unix_time"&gt;Unix time&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-date-object"&gt;
  &lt;/a&gt;
  The Date object
&lt;/h2&gt;

&lt;p&gt;Fundamentally, a JavaScript date is specified as the number of milliseconds from the 1 January 1970 00:00:00 UTC. This number looks similar to the Unix timestamp. The difference is that the Unix timestamp is the number of seconds since the Unix epoch while in JavaScript it is the number of milliseconds.&lt;/p&gt;

&lt;p&gt;In JavaScript we use the Date object to work with date and time:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The Date object holds the current date and time in UTC internally. However, by default, when we output the date and time, the Date object converts the output to the local time zone, the time zone of the environment where the JavaScript code is running (e.g., a browser, Node.js, etc.)&lt;/p&gt;

&lt;p&gt;When instantiated without parameters, the date object holds the current date and time (&lt;code&gt;new Date()&lt;/code&gt; holds the current date).&lt;/p&gt;

&lt;p&gt;We can set the date and time in the Date's constructor or after the instantiation:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;currentDate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;someDate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;December 12, 2020 18:30:01&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;someDate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;2021-12-12T18:30:01&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;someDate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2021&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Month's index is zero-based&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;someDate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1639326601000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Number of milliseconds from Jan 1, 1970 00:00:00 UTC&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When we instantiate the Date class, the specified date is converted to and tracked in UTC internally. However, when we access the date using the basic methods (e.g., &lt;code&gt;toString&lt;/code&gt;, &lt;code&gt;toLocaleString&lt;/code&gt;, &lt;code&gt;getHours&lt;/code&gt;, etc) the date is returned in the local time zone:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;myDate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;11 May 2021 18:30:01 UTC&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;myDate&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// Tue May 11 2021 21:30:01 GMT+0300 (Eastern European Summer Time)&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;myDate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getHours&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;span class="c1"&gt;// 21, not 18 as you might have expected&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we instantiate the Date class specifying the date in UTC, but when we print the instantiated date object, we get the date in the local time zone, which for me is UTC+03:00 (Eastern European Summer Time). So, the date is stored in UTC internally, but when we access the date using the basic methods, it's converted to the local time zone.&lt;/p&gt;

&lt;p&gt;The most popular methods of the Date object are:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;now&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="c1"&gt;// number of milliseconds since the Unix Epoch&lt;/span&gt;

&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;getTime&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="c1"&gt;// same&lt;/span&gt;

&lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;UTC&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2021&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// number of milliseconds since the Unix epoch until the specified date&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;dateBasedOnUTC&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;UTC&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2021&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="c1"&gt;// Access and modify the date based on local time zone:&lt;/span&gt;
&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getFullYear&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// for example, 2021&lt;/span&gt;
&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setFullYear&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2021&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getMonth&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// zero-based month index (0 - 11)&lt;/span&gt;
&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setMonth&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getDate&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// day of the month (1 - 31)&lt;/span&gt;
&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setDate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;28&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getHours&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// 0 - 23&lt;/span&gt;
&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setHours&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getMinutes&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// 0 - 59&lt;/span&gt;
&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setMinutes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getSeconds&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// 0 - 59&lt;/span&gt;
&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setSeconds&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;59&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Access and modify the date based on UTC:&lt;/span&gt;
&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getUTCFullYear&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setUTCFullYear&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2021&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getUTCMonth&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setUTCMonth&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getUTCDate&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setUTCDate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getUTCHours&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setUTCHours&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getUTCMinutes&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setUTCMinutes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getUTCSeconds&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setUTCSeconds&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Other useful methods:&lt;/span&gt;
&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toISOString&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="c1"&gt;// Get the date string in simplified extended ISO format (ISO 8601)&lt;/span&gt;

&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toLocaleString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;uk&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;timeZone&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;UTC&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="c1"&gt;// Get the date string in the format according to a given locale and various options&lt;/span&gt;

&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toLocaleString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;en&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;month&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;long&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="c1"&gt;// Get the name of the month in a given locale (e.g., June, July, etc)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Learn more about the Date object on MDN Web Docs: &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date"&gt;Date&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#calculating-the-difference-between-dates"&gt;
  &lt;/a&gt;
  Calculating the difference between dates
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;date1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;UTC&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2021&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;date2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;UTC&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2021&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;diffInMilliseconds&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;date2&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;date1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;diffInHours&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;diffInMilliseconds&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;diffInHours&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 24&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, we create two date objects, 11 May 2021 and 12 May 2021. Then, we subtract 11 May 2021 (&lt;code&gt;date1&lt;/code&gt;) from 12 May 2021 (&lt;code&gt;date2&lt;/code&gt;) and get 24 hours of difference.&lt;/p&gt;

&lt;p&gt;When you work with date objects, take into account the time zones these date objects were instantiated with. Check another example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;date1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;2021-05-12T00:00:00.000Z&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// ISO 8601 string&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;date2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;12 May 2021 01:00:00 UTC+3&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;diffInMilliseconds&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;date2&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;date1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;diffInHours&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;diffInMilliseconds&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;diffInHours&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 1 or -2?&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, the answer is -2, because the time zone of &lt;code&gt;date1&lt;/code&gt; is UTC while the time zone of &lt;code&gt;date2&lt;/code&gt; is UTC+3. Let's see what happens in more detail:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;We set &lt;code&gt;date1&lt;/code&gt; to 12 May 2021 00:00:00 UTC using the ISO 8601 format. We specify the UTC time zone using the character Z. We could specify the time zone using an offset as well, like this: 2021-05-12T00:00:00.000+00:00 (+00:00 is UTC).&lt;/li&gt;
&lt;li&gt;We set &lt;code&gt;date2&lt;/code&gt; to 12 May 2021 01:00:00 using another date and time format with the time zone offset UTC+3 (or UTC+03:00).&lt;/li&gt;
&lt;li&gt;Then we subtract date1 from date2 (&lt;code&gt;date2 - date1&lt;/code&gt;). When we use a mathematical operation on an object, JavaScript converts the object to a number using the object's &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf"&gt;valueOf()&lt;/a&gt; method if it's present. In the case of the Date object, the &lt;code&gt;valueOf&lt;/code&gt; method returns the date and time as the number of milliseconds since the Unix epoch, which is a UTC-based date and time representation. So, &lt;code&gt;date1&lt;/code&gt; has been set in UTC, while &lt;code&gt;date2&lt;/code&gt; has been converted to UTC from UTC+3. So, actually, we subtract 12 May 2021 01:00:00 UTC (&lt;code&gt;date1&lt;/code&gt;) from 11 May 2021 22:00:00 UTC (&lt;code&gt;date2&lt;/code&gt;) and that's how we get -2 for the result.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#formatting-the-date"&gt;
  &lt;/a&gt;
  Formatting the date
&lt;/h2&gt;

&lt;p&gt;One way to format a date is to use the getter functions like getFullYear, getMonth, getDate, etc. For example, to create the date and time string in local time in the format 'YYYY-MM-DD hh:mm:ss' we can do the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;year&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getFullYear&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;month&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getMonth&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// getMonth returns a zero-based index of the month: 0-11&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;day&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getDate&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// 0 - 31&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;hours&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getHours&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// 0 - 23&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;minutes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getMinutes&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// 0 - 59&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;seconds&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getSeconds&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// 0 - 59&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;addZero&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;padStart&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;0&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;formatted&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
  &lt;span class="nx"&gt;year&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;-&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
  &lt;span class="nx"&gt;addZero&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;month&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;-&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
  &lt;span class="nx"&gt;addZero&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;day&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt; &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
  &lt;span class="nx"&gt;addZero&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;hours&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
  &lt;span class="nx"&gt;addZero&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;minutes&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
  &lt;span class="nx"&gt;addZero&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;seconds&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In order to get the date and time values according to UTC, we can use the UTC-based getter functions like getUTCFullYear, getUTCMonth, getUTCDate, etc.&lt;/p&gt;

&lt;p&gt;Furthermore, we can get the date and time string from the Date object formatted according to a given locale and various options using the Date's &lt;code&gt;toLocaleString&lt;/code&gt; method:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;2021-05-16&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toLocaleString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;uk&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// 16.05.2021, 03:00:00&lt;/span&gt;

&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;2021-05-16&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toLocaleString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;en&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;month&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;long&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="c1"&gt;// May&lt;/span&gt;

&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;2021-05-16&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toLocaleString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;en&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;month&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;long&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;day&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;numeric&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;year&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;numeric&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="c1"&gt;// May 16, 2021&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Please note that if you don't specify the time zone in the options, &lt;code&gt;toLocaleString&lt;/code&gt; will output the date in the local time zone:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;2021-05-16 00:00:00&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toLocaleString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;en&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;timeZoneName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;short&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// include the time zone name&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="c1"&gt;// "5/16/2021, 12:00:00 AM GMT+3" (GMT+3 is my local time zone)&lt;/span&gt;

&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;2021-05-16 00:00:00&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toLocaleString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;en&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;timeZoneName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;short&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;timeZone&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Europe/Amsterdam&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="c1"&gt;// 5/15/2021, 11:00:00 PM GMT+2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;First, we instantiate the Date object with the local time zone and get the localized date and time string. When the Date is instatiated the date and time value is converted internally from the specified time zone (or the local time zone if the time zone is not specified) to UTC.&lt;/p&gt;

&lt;p&gt;Then, we instantiate another Date object with the local time zone. This time we set the &lt;code&gt;timeZone&lt;/code&gt; option to "Europe/Amsterdam" (according to IANA Time Zone Database). Therefore, we get the localized date and time string based on the "Europe/Amsterdam" time zone. In more detail: my current time zone is UTC+3, so the Date object is instantiated with the date and time 2021-05-16 00:00:00 UTC+3 which is converted to UTC internally and becomes 2021-05-15 21:00:00. Then, the &lt;code&gt;toLocaleString&lt;/code&gt; method converts this date from UTC to "Europe/Amsterdam" and the result is 5/15/2021, 11:00:00 PM GMT+2. The resulting offset is +2, because it's the Daylight Saving Time offset of the "Europe/Amsterdam" time zone.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#time-zone-on-the-back-end"&gt;
  &lt;/a&gt;
  Time zone on the back end
&lt;/h2&gt;

&lt;p&gt;Usually, computer software (e.g., Node.js, databases, etc) by default uses the system date and time configuration. Therefore, make sure that all the servers that belong to your app use the same time zone. UTC is commonly used.&lt;/p&gt;

&lt;p&gt;In Linux you can check the time zone using one of the following commands:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;date
date&lt;/span&gt; +&lt;span class="s2"&gt;"%Z %z"&lt;/span&gt;
timedatectl
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To change the system time zone you can use the following commands:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Check available time zone names&lt;/span&gt;
timedatectl list-timezones

&lt;span class="c"&gt;# Set the time zone&lt;/span&gt;
timedatectl set-timezone Europe/Amsterdam
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To check the time zone of the Node.js process:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;node &lt;span class="nt"&gt;-e&lt;/span&gt; &lt;span class="s2"&gt;"console.log(Intl.DateTimeFormat().resolvedOptions().timeZone)"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In Node.js you can set the time zone using the &lt;code&gt;TZ&lt;/code&gt; environment variable:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;TZ&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;UTC node &lt;span class="nt"&gt;-e&lt;/span&gt; &lt;span class="s2"&gt;"console.log(Intl.DateTimeFormat().resolvedOptions().timeZone)"&lt;/span&gt;
&lt;span class="c"&gt;# UTC&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If the &lt;code&gt;TZ&lt;/code&gt; variable is not set, Node.js will attempt to use the operating system's time zone.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#storing-dates-in-the-database"&gt;
  &lt;/a&gt;
  Storing dates in the database
&lt;/h2&gt;

&lt;p&gt;Usually, web applications are available from anywhere around the world. This means, that if we store dates in the database, we need to make sure that we store all dates in a single (consistent) time zone or at least track the time zone of the dates we store. Various databases have their specifics as to how they treat date and time values. So, in this section I'd like to briefly explain how to store the date and time values in different databases and mention some of those specifics.&lt;/p&gt;

&lt;p&gt;Usually, software (especially web apps) serves users from all over the world. Each user's local time depends on their location. For example, for the user from Kyiv the local time in the summer is 17:00 and at the same time for the user in Amsterdam the local time is 16:00.&lt;/p&gt;

&lt;p&gt;Basically, we should convert and store the dates in a unified time zone; usually developers store the dates in UTC. So, before storing a date we should convert it from local time to UTC. For example, a user from Amsterdam creates a reminder in a calendar app. The user selects the date and time of the reminder in local time ("Europe/Amsterdam" time zone - UTC+01:00 standard time and UTC+02:00 DST). Let's say the user sets the reminder date to 12 May 2021 17:00 using a calendar widget. Now, before we store this date in the database, we should convert it to UTC, and the date becomes: 12 May 2021 15:00 in UTC, because Daylight Saving Time in Amsterdam (UTC+02:00) became active on 28 March 2021 at 02:00:00. Luckily, we usually don't have to deal with the time zone conversion logic, because it's usually built into the programming language and software (e.g., a database) we use. For example, in JavaScript we can get the current date and time in UTC using the Date object:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;getTime&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="c1"&gt;// number of milliseconds from Unix epoch&lt;/span&gt;

&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;toISOString&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="c1"&gt;// ISO 8601 date string in UTC&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#mysql"&gt;
  &lt;/a&gt;
  MySQL
&lt;/h3&gt;

&lt;p&gt;In MySQL the dates are usually stored using the &lt;code&gt;DATETIME&lt;/code&gt; and &lt;code&gt;TIMESTAMP&lt;/code&gt; column types.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;MySQL TIMESTAMP&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;MySQL converts &lt;code&gt;TIMESTAMP&lt;/code&gt; values from the current time zone (e.g., the global time zone or the client session time zone) to UTC for storage, and back from UTC to the current time zone for retrieval. MySQL doesn't do this with the other column types, like &lt;code&gt;DATETIME&lt;/code&gt;. So, &lt;code&gt;TIMESTAMP&lt;/code&gt; values are converted to UTC for storage, but when they are retrieved, they are converted to the current time zone (&lt;code&gt;SELECT @@SESSION.time_zone;&lt;/code&gt;). Please check this example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="n"&gt;timestamp_test&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="nb"&gt;INT&lt;/span&gt; &lt;span class="k"&gt;NOT&lt;/span&gt; &lt;span class="k"&gt;NULL&lt;/span&gt; &lt;span class="k"&gt;PRIMARY&lt;/span&gt; &lt;span class="k"&gt;KEY&lt;/span&gt; &lt;span class="n"&gt;AUTO_INCREMENT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="n"&gt;created_at&lt;/span&gt; &lt;span class="nb"&gt;TIMESTAMP&lt;/span&gt; &lt;span class="k"&gt;NOT&lt;/span&gt; &lt;span class="k"&gt;NULL&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;-- Set the current time zone to UTC+3&lt;/span&gt;
&lt;span class="k"&gt;SET&lt;/span&gt; &lt;span class="n"&gt;time_zone&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'+03:00'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;@@&lt;/span&gt;&lt;span class="k"&gt;SESSION&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;time_zone&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;-- +03:00&lt;/span&gt;

&lt;span class="k"&gt;INSERT&lt;/span&gt; &lt;span class="k"&gt;INTO&lt;/span&gt; &lt;span class="n"&gt;timestamp_test&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;created_at&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;VALUES&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'2021-05-12 21:00:00'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;timestamp_test&lt;/span&gt; &lt;span class="k"&gt;ORDER&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="k"&gt;ASC&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+---------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;created_at&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+---------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;  &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2021&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;05&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt; &lt;span class="mi"&gt;21&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+---------------------+&lt;/span&gt;

&lt;span class="c1"&gt;-- Set the current time zone to UTC+4&lt;/span&gt;
&lt;span class="k"&gt;SET&lt;/span&gt; &lt;span class="n"&gt;time_zone&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'+04:00'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;timestamp_test&lt;/span&gt; &lt;span class="k"&gt;ORDER&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="k"&gt;ASC&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+---------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;created_at&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+---------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;  &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2021&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;05&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+---------------------+&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As of MySQL 8.0.19 we can add the time zone offset when inserting &lt;code&gt;TIMESTAMP&lt;/code&gt; and &lt;code&gt;DATETIME&lt;/code&gt; values into a table:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="c1"&gt;-- 1.&lt;/span&gt;
&lt;span class="k"&gt;SET&lt;/span&gt; &lt;span class="n"&gt;time_zone&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'+02:00'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;-- 2.&lt;/span&gt;
&lt;span class="k"&gt;INSERT&lt;/span&gt; &lt;span class="k"&gt;INTO&lt;/span&gt; &lt;span class="n"&gt;timestamp_test&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;created_at&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;VALUES&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'2021-05-12 21:00:00-01:00'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;-- 3.&lt;/span&gt;
&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;timestamp_test&lt;/span&gt; &lt;span class="k"&gt;ORDER&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="k"&gt;ASC&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+---------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;created_at&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+---------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;  &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2021&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;05&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;  &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2021&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;05&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+---------------------+&lt;/span&gt;

&lt;span class="c1"&gt;-- 4.&lt;/span&gt;
&lt;span class="k"&gt;SET&lt;/span&gt; &lt;span class="n"&gt;time_zone&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'+03:00'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;timestamp_test&lt;/span&gt; &lt;span class="k"&gt;ORDER&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="k"&gt;ASC&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+---------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;created_at&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+---------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;  &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2021&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;05&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt; &lt;span class="mi"&gt;21&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;  &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2021&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;05&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt; &lt;span class="mi"&gt;01&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+---------------------+&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's see what happens in this example:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;We set the current time zone to UTC+2&lt;/li&gt;
&lt;li&gt;We insert a date value with time zone offset UTC-1: 2021-05-12 21:00:00-01:00. MySQL converts this date and time value from UTC-1 to UTC for storage: 2021-05-12 22:00:00.&lt;/li&gt;
&lt;li&gt;We select the rows from our table and MySQL converts the &lt;code&gt;TIMESTAMP&lt;/code&gt; values from UTC to the current time zone (UTC+2) upon retrieval: 2021-05-13 00:00:00&lt;/li&gt;
&lt;li&gt;Then, we set the time zone to UTC+3 and select the rows again, and because MySQL converts the &lt;code&gt;TIMESTAMP&lt;/code&gt; values from UTC to the current time zone upon retrieval, we get the date we've inserted earlier in UTC+3 this time: 2021-05-13 01:00:00&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The &lt;code&gt;TIMESTAMP&lt;/code&gt; type has a range of 1970-01-01 00:00:01 UTC to 2038-01-19 03:14:07 UTC.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;MySQL DATETIME&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;MySQL &lt;code&gt;DATETIME&lt;/code&gt; is stored and retrieved as is:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="n"&gt;datetime_test&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="nb"&gt;INT&lt;/span&gt; &lt;span class="k"&gt;NOT&lt;/span&gt; &lt;span class="k"&gt;NULL&lt;/span&gt; &lt;span class="k"&gt;PRIMARY&lt;/span&gt; &lt;span class="k"&gt;KEY&lt;/span&gt; &lt;span class="n"&gt;AUTO_INCREMENT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="n"&gt;created_at&lt;/span&gt; &lt;span class="nb"&gt;DATETIME&lt;/span&gt; &lt;span class="k"&gt;NOT&lt;/span&gt; &lt;span class="k"&gt;NULL&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;-- Set the current time zone to UTC+3&lt;/span&gt;
&lt;span class="k"&gt;SET&lt;/span&gt; &lt;span class="n"&gt;time_zone&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'+03:00'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;INSERT&lt;/span&gt; &lt;span class="k"&gt;INTO&lt;/span&gt; &lt;span class="n"&gt;datetime_test&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;created_at&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;VALUES&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'2021-05-12 21:00:00'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;datetime_test&lt;/span&gt; &lt;span class="k"&gt;ORDER&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="k"&gt;ASC&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+---------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;created_at&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+---------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;  &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2021&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;05&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt; &lt;span class="mi"&gt;21&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+---------------------+&lt;/span&gt;

&lt;span class="c1"&gt;-- Set the current time zone to UTC+4&lt;/span&gt;
&lt;span class="k"&gt;SET&lt;/span&gt; &lt;span class="n"&gt;time_zone&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'+04:00'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;datetime_test&lt;/span&gt; &lt;span class="k"&gt;ORDER&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="k"&gt;ASC&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+---------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;created_at&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+---------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;  &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2021&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;05&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt; &lt;span class="mi"&gt;21&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+---------------------+&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;MySQL does not convert &lt;code&gt;DATETIME&lt;/code&gt; values from the current time zone to UTC and vice versa.&lt;/p&gt;

&lt;p&gt;However, something interesting happens when we insert a &lt;code&gt;DATETIME&lt;/code&gt; value with a time zone offset:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="c1"&gt;-- Set the current time zone to UTC+3&lt;/span&gt;
&lt;span class="k"&gt;SET&lt;/span&gt; &lt;span class="n"&gt;time_zone&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'+03:00'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;-- Insert a date with the time zone offset UTC+0&lt;/span&gt;
&lt;span class="k"&gt;INSERT&lt;/span&gt; &lt;span class="k"&gt;INTO&lt;/span&gt; &lt;span class="n"&gt;datetime_test&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;created_at&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;VALUES&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'2021-05-12 21:00:00+00:00'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;datetime_test&lt;/span&gt; &lt;span class="k"&gt;ORDER&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="k"&gt;ASC&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+---------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;created_at&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+---------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;  &lt;span class="p"&gt;...&lt;/span&gt;                     &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;  &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2021&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;05&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+---------------------+&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the example above we can see that when we insert a &lt;code&gt;DATETIME&lt;/code&gt; value with a time zone offset, MySQL converts this date value to the current time zone for storage: 2021-05-12 21:00:00+00:00 + current time zone offset (+03:00) = 2021-05-13 00:00:00&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;DATETIME&lt;/code&gt; type has a range of 1000-01-01 00:00:00 to 9999-12-31 23:59:59.&lt;/p&gt;

&lt;p&gt;To store a date and time value I'd convert the local date and time value to UTC in the application code and store this value in the DATETIME column. Basically, I'd handle the time zone conversion on the application side and store all dates in UTC. I'd use DATETIME instead of TIMESTAMP, because TIMESTAMP is actually a 32 bit integer and doesn't allow to store dates beyond 2038-01-19 03:14:07 UTC, while DATETIME allows us to store dates up to 9999-12-31 23:59:59.999999.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#postgresql"&gt;
  &lt;/a&gt;
  PostgreSQL
&lt;/h3&gt;

&lt;p&gt;In PostgreSQL we usually store date and time values using the column types &lt;code&gt;timestamp without time zone&lt;/code&gt; (or simply &lt;code&gt;timestamp&lt;/code&gt;) or &lt;code&gt;timestamp with time zone&lt;/code&gt; (or simply &lt;code&gt;timestamptz&lt;/code&gt;). Both types have a range of 4713 BC to 294276 AD.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PostgreSQL timestamp without time zone&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;timestamp without time zone&lt;/code&gt; values are stored and retrieved as is:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="n"&gt;without_time_zone&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="nb"&gt;SERIAL&lt;/span&gt; &lt;span class="k"&gt;PRIMARY&lt;/span&gt; &lt;span class="k"&gt;KEY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="n"&gt;created_at&lt;/span&gt; &lt;span class="nb"&gt;TIMESTAMP&lt;/span&gt; &lt;span class="k"&gt;NOT&lt;/span&gt; &lt;span class="k"&gt;NULL&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;INSERT&lt;/span&gt; &lt;span class="k"&gt;INTO&lt;/span&gt; &lt;span class="n"&gt;without_time_zone&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;created_at&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;VALUES&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'2021-05-12 09:00:00'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;without_time_zone&lt;/span&gt; &lt;span class="k"&gt;ORDER&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="k"&gt;ASC&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;-- 1    "2021-05-12 09:00:00"&lt;/span&gt;

&lt;span class="k"&gt;INSERT&lt;/span&gt; &lt;span class="k"&gt;INTO&lt;/span&gt; &lt;span class="n"&gt;without_time_zone&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;created_at&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;VALUES&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'2021-05-12 09:00:00 +01:00'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;without_time_zone&lt;/span&gt; &lt;span class="k"&gt;ORDER&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="k"&gt;ASC&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;-- 1    "2021-05-12 09:00:00"&lt;/span&gt;
&lt;span class="c1"&gt;-- 2    "2021-05-12 09:00:00"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this example, we create a &lt;code&gt;timestamp without time zone&lt;/code&gt; column called created_at. And, we can clearly see that the date and time value is stored and retrieved from this column as is. If we specify the time zone, the time zone is ignored.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PostgreSQL timestamp with time zone&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;timestamp with time zone&lt;/code&gt; (&lt;code&gt;timestamptz&lt;/code&gt;) values are converted from the specified time zone to UTC. If you don't specify the time zone when inserting a &lt;code&gt;timestamptz&lt;/code&gt; value, PostgreSQL will assume that this date value is based on the current time zone (&lt;code&gt;SHOW time zone;&lt;/code&gt;).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="c1"&gt;-- 1.&lt;/span&gt;
&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="n"&gt;with_time_zone&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="nb"&gt;SERIAL&lt;/span&gt; &lt;span class="k"&gt;PRIMARY&lt;/span&gt; &lt;span class="k"&gt;KEY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="n"&gt;created_at&lt;/span&gt; &lt;span class="nb"&gt;TIMESTAMP&lt;/span&gt; &lt;span class="k"&gt;WITH&lt;/span&gt; &lt;span class="nb"&gt;TIME&lt;/span&gt; &lt;span class="k"&gt;ZONE&lt;/span&gt; &lt;span class="k"&gt;NOT&lt;/span&gt; &lt;span class="k"&gt;NULL&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;-- 2.&lt;/span&gt;
&lt;span class="c1"&gt;-- Set current time zone for the session to UTC+3&lt;/span&gt;
&lt;span class="k"&gt;SET&lt;/span&gt; &lt;span class="nb"&gt;time&lt;/span&gt; &lt;span class="k"&gt;zone&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;-- 3.&lt;/span&gt;
&lt;span class="k"&gt;SHOW&lt;/span&gt; &lt;span class="nb"&gt;time&lt;/span&gt; &lt;span class="k"&gt;zone&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;-- &amp;lt;+03&amp;gt;-03&lt;/span&gt;

&lt;span class="c1"&gt;-- 4.&lt;/span&gt;
&lt;span class="k"&gt;INSERT&lt;/span&gt; &lt;span class="k"&gt;INTO&lt;/span&gt; &lt;span class="n"&gt;with_time_zone&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;created_at&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;VALUES&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'2021-05-12 09:00:00 +01:00'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;-- 5.&lt;/span&gt;
&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;with_time_zone&lt;/span&gt; &lt;span class="k"&gt;ORDER&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="k"&gt;ASC&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;-- 1    "2021-05-12 11:00:00+03"&lt;/span&gt;

&lt;span class="c1"&gt;-- 6.&lt;/span&gt;
&lt;span class="k"&gt;INSERT&lt;/span&gt; &lt;span class="k"&gt;INTO&lt;/span&gt; &lt;span class="n"&gt;with_time_zone&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;created_at&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;VALUES&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'2021-05-12 09:00:00'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;-- 7.&lt;/span&gt;
&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;with_time_zone&lt;/span&gt; &lt;span class="k"&gt;ORDER&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="k"&gt;ASC&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;-- 1    "2021-05-12 11:00:00+03"&lt;/span&gt;
&lt;span class="c1"&gt;-- 2    "2021-05-12 09:00:00+03"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What happens in this example is the following:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;We create a table with a column called created_at which has type &lt;code&gt;timestamp with time zone&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;We set the current time zone for the session to UTC+3. Please note, that in PostgreSQL we can specify the current time zone using an integer offset or the time zone name (e.g., America/New_York). To get a list of supported time zone names query the pg_timezone_names table: &lt;code&gt;SELECT * FROM pg_timezone_names&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;We ensure that the time zone offset has been set properly.&lt;/li&gt;
&lt;li&gt;We insert a row with the created_at value of 2021-05-12 09:00:00 +01:00 into the new table. Because created_at column has type &lt;code&gt;timestamp with time zone&lt;/code&gt;, PostgreSQL converts the date value from the specified time zone (+01:00 in our case) to UTC for storage. So, the value that has been actually stored is "2021-05-12 08:00:00".&lt;/li&gt;
&lt;li&gt;We select the inserted row from the table and the date value is converted from UTC to the current time zone offset, which is UTC+3.&lt;/li&gt;
&lt;li&gt;We insert another row into the table, but this time without specifying the time zone offset. If we don't include a time zone offset, PostgreSQL assumes that the date value we provide is based on the current time zone, which in our case is UTC+3. So, before storing this date value PostgreSQL will convert it from the current time zone (UTC+3 in our case) to UTC, and the following date value will be stored: 2021-05-12 06:00:00 UTC&lt;/li&gt;
&lt;li&gt;Finally we select all rows from our table again and see that the date value we've just inserted is displayed in the current time zone: 2021-05-12 09:00:00+03&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;To store a date and time value in PostgreSQL I'd use the &lt;code&gt;timestamp with time zone (timestamptz)&lt;/code&gt; type. Basically, I'd choose timestamptz instead of timestamp, because of the reasons mentioned in the following article from the PostgreSQL Wiki: &lt;a href="https://wiki.postgresql.org/wiki/Don't_Do_This#Date.2FTime_storage"&gt;Don't Do This - Date/Time storage&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dynamodb"&gt;
  &lt;/a&gt;
  DynamoDB
&lt;/h3&gt;

&lt;p&gt;You can use the string and number data types to store dates and timestamps. We can use the string data type to store date and time values in ISO 8601 format (e.g., 2021-05-12, 2021-05-12T21:00:59.123Z). And we can use the number data type to store date and time values as UNIX timestamps (Epoch time) - a number of seconds since 1 January 1970 00:00:00 UTC. This will allow us to sort and query items by date and time.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#mongodb"&gt;
  &lt;/a&gt;
  MongoDB
&lt;/h3&gt;

&lt;p&gt;In MongoDB, internally, dates are stored as 64-bit signed integers representing a number of milliseconds since the Unix epoch (1 January 1970 00:00:00 UTC). Negative values represent the dates before the Unix epoch.&lt;/p&gt;

&lt;p&gt;To insert a date in the Mongo shell, we can use the Date object:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Specifying the current date and time value when inserting an item:&lt;/span&gt;
&lt;span class="nx"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;books&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;insertOne&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Book 1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;createdAt&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="nx"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;books&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="cm"&gt;/*
{
  "_id" : ObjectId("60a5481cdff09849800652de"),
  "title" : "Book 1",
  "createdAt" : ISODate("2021-05-19T17:17:16.634Z")
}
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can pass an ISO 8601 string or a number of milliseconds since the Unix epoch into the Date constructor:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;2021-05-19&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;2021-05-19T00:00:00Z&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1621382400000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you specify a time zone offset, the date will be converted to UTC:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;2021-05-19T00:00:00+02:00&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// becomes 2021-05-18T22:00:00Z&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Take care when working with date and time. Always check if the dates you store and work with are based on the time zone you expect. Ensure that the environments you use for running different parts of your app (e.g., a web server, a database, etc.) have the correct and consistent time zone configuration.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#useful-resources"&gt;
  &lt;/a&gt;
  Useful Resources
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Time_zone"&gt;Time zone - Wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date"&gt;Date - MDN Web Docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.mysql.com/doc/refman/8.0/en/datetime.html"&gt;The DATE, DATETIME, and TIMESTAMP Types - MySQL Manual&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.mysql.com/doc/refman/8.0/en/time-zone-support.html"&gt;MySQL Server Time Zone Support - MySQL Manual&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.postgresql.org/docs/9.1/datatype-datetime.html"&gt;Date/Time Types - PostgreSQL Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.postgresql.org/wiki/Don't_Do_This#Date.2FTime_storage"&gt;Don't Do This - Date/Time storage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.NamingRulesDataTypes.html#HowItWorks.DataTypes"&gt;Data Types - Amazon DynamoDB Developer Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.mongodb.com/manual/core/shell-types/"&gt;Data Types in the mongo Shell - MongoDB Manual&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.mongodb.com/manual/reference/bson-types/#std-label-document-bson-type-date"&gt;BSON Types - Date - MongoDB Manual&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/List_of_UTC_time_offsets"&gt;List of UTC time offsets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Daylight_saving_time_by_country"&gt;Daylight saving time by country&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Tz_database"&gt;tz database - Wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>How to make passive income as a web developer in 2021?üí∏</title>
      <author>themeselection</author>
      <pubDate>Tue, 25 May 2021 05:02:11 +0000</pubDate>
      <link>https://dev.to/theme_selection/how-to-make-passive-income-as-a-web-developer-in-2021-5gjl</link>
      <guid>https://dev.to/theme_selection/how-to-make-passive-income-as-a-web-developer-in-2021-5gjl</guid>
      <description>&lt;p&gt;Want to know how to make passive income as a web developer? Then this article is for you. Here you'll get to know which are the best ways to earn well. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--q9lUQ6VR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r8a5bsb0qgjtl4sbismi.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q9lUQ6VR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r8a5bsb0qgjtl4sbismi.jpg" alt="Passive income quotes"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Well, passive income is one of the strongest income sources someone can have. First of all, in order to make the passive income, you‚Äôll have to put in initial work to set up the streams of passive income, but unlike your 9‚Äì5 job you don‚Äôt really need to be working every second actively for income. &lt;br&gt;
Passive income is something all want to have. Who doesn't like more money, eh..!!?üòÇ In the web development world, there are some great sources and ways that can help you to earn passive income along with your regular work. So, we have listed down some of the best ways for passive income that you can try.&lt;/p&gt;

&lt;p&gt;As we are in the web development field, it will be great to have a resource list as well. You can bookmark the list of The &lt;a href="https://dev.to/theme_selection/best-free-color-palette-generator-ready-to-use-or-generate-your-own-3hoo"&gt;Best free color palette generator Ready to use or generate your own!&lt;/a&gt;, and &lt;a href="https://dev.to/theme_selection/what-is-the-best-ide-for-javascript-development-in-2021-1pmn"&gt;Which is the best IDE for JavaScript development in 2021?&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Now, let's start the article...!!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bbHH8aQ7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m97kqiwdi75qlzbb4e6b.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bbHH8aQ7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m97kqiwdi75qlzbb4e6b.gif" alt="Let's start"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-developing-amp-selling-a-saas"&gt;
  &lt;/a&gt;
  1.  Developing &amp;amp; Selling a SAAS
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jNrC8wdt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/84411t5uoyhcrwrolvas.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jNrC8wdt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/84411t5uoyhcrwrolvas.png" alt="Saas"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next up we have the first one on the list is SAAS development and selling. Now, what is a SAAS? Well, It stands for software as a service, some famous examples of a SAAS are: &lt;a href="https://www.office.com/"&gt;Microsoft Office&lt;/a&gt; (Excel, Word), &lt;a href="https://aws.amazon.com/"&gt;AWS&lt;/a&gt;, &lt;a href="https://www.dropbox.com/"&gt;Dropbox&lt;/a&gt;, etc. Although developing a SAAS is not an easy thing at all, you are gonna need tons of research and development needs to be put in to even have a profitable SAAS, but if you‚Äôre able to deliver a product to the world you can make an impressive passive income. &lt;/p&gt;

&lt;p&gt;Here is a basic layout of how a SAAS is created: software is created &amp;gt; website/storefront is created &amp;gt; user buys/uses SAAS from website &amp;gt; SAAS owner is paid. You really only need to create the SAAS and the website, after that the sales are pretty much passive but time must be spent on managing and updating the SAAS.&lt;/p&gt;

&lt;p&gt;You can check &lt;a href="https://pixinvent.com/demo/vuexy-html-bootstrap-admin-template/landing/"&gt;Vuexy Vuejs Admin Template&lt;/a&gt; for example. Vuexy Vuejs admin template is one of the most developer-friendly admin templates. It is multipurpose, highly customizable, and responsive.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wKaNybTw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cnukshwi8a0xij920b0a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wKaNybTw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cnukshwi8a0xij920b0a.png" alt="Vuexy vuejs admin template"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can use Vuexy - Vuejs, React, Angular, HTML &amp;amp; Laravel Admin Template for any kind of web applications such as eCommerce, educational, fitness, etc.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-mobile-app-game-development"&gt;
  &lt;/a&gt;
  2.  Mobile App / Game Development
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--re43CMe3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nnpxcrayt3p7qip9dus5.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--re43CMe3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nnpxcrayt3p7qip9dus5.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This next one is a very popular option for a lot of people. Mobile app/game development is an ever-growing industry. Similar to a SAAS, you‚Äôll have to put in the work to develop the app/game but all of the income is essentially passive. &lt;/p&gt;

&lt;p&gt;Some of these passive income ideas from an app or game could be mobile ads, game sales, in-game / app sales, etc. There are endless possibilities in this sector, if you have some knowledge of mobile game/app development you can make some very powerful passive income streams.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-create-a-video-course-becoming-a-coach"&gt;
  &lt;/a&gt;
  3.  Create a Video Course (Becoming a Coach)
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rj85Yd06--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o16gh39x86h2q01ocaez.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rj85Yd06--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o16gh39x86h2q01ocaez.jpg" alt="Video tutorial"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Well, video tutorials are always in demand if you are good at explaining things in detail then this option is worth trying. Now, at this point in time, there are actually more positions for skillful programmers than there are people to fill those positions. With that in mind, it is easy to conclude that programming is in incredibly high demand right now, and will be for years to come. With that much demand, not only can you make money through programming but also you can make money teaching programming.&lt;/p&gt;

&lt;p&gt;There are literally hundreds of thousands of people in the world who want to learn what you already know. And if you are a talented teacher, this could be an excellent side income for you. You can literally teach programming to anyone in the world. It‚Äôs is a HUGE market.&lt;/p&gt;

&lt;p&gt;Platforms like  &lt;a href="https://www.udemy.com/"&gt;Udemy&lt;/a&gt;  make it super easy to create your courses and make money from them. All you need to do is create a high-quality course. They will take care of the marketing and everything else.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-creating-articles-courses"&gt;
  &lt;/a&gt;
  4.  Creating Articles / Courses
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BMGk15p2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rzn2przl6bhlopqpqfyq.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BMGk15p2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rzn2przl6bhlopqpqfyq.jpg" alt="Articles"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is one of the best ways to make passive income as a programmer right now. You can spend some time developing an article, post it and forget about it, the article will then continue to garner revenue forever (as long as it gets views/reads) without spending much time on it anymore. &lt;/p&gt;

&lt;p&gt;Courses are another great way to develop income, I would definitely say a course takes more effort to develop but I have heard courses are very lucrative as well. From all of the passive income sources, this one is probably the best way.&lt;/p&gt;

&lt;p&gt;You can start as a writer on platforms like medium, dev.to, etc. Building an audience will eventually help you.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-web-hosting"&gt;
  &lt;/a&gt;
  5.  Web Hosting
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mQrjlgMX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kghx1jak1v42hc84aioy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mQrjlgMX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kghx1jak1v42hc84aioy.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next up we have web hosting, this is a bit different than website development. Web hosting is essentially storing a website on a server, thus the website is able to be accessed anywhere online, these websites will be renting server space from you. Some very popular web hosting websites are &lt;a href="https://www.hostgator.com/web-hosting/"&gt;Hostgator&lt;/a&gt;, &lt;a href="https://www.siteground.com/"&gt;Siteground&lt;/a&gt;, and &lt;a href="https://www.bluehost.in/"&gt;Bluehost&lt;/a&gt;, you would essentially be creating your own web hosting service.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-buying-a-profitable-website"&gt;
  &lt;/a&gt;
  6.  Buying a Profitable Website
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--33iWcVkh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/42hcgeeuooy81l6wu4ai.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--33iWcVkh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/42hcgeeuooy81l6wu4ai.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This one is one of the best ways to have a passive income. This is more of an investment that can lead to passive income. You have to choose a website that allows you to sell and buy websites/applications, you'll be also able to get income reports from the websites as well. &lt;/p&gt;

&lt;p&gt;Let‚Äôs say you didn‚Äôt want to develop an application right now, well you could just buy an existing application and profit off of that specific investment. This one doesn‚Äôt really require massive amounts of programming knowledge, but if you plan on updating the websites/applications it could totally help by understanding the programming languages around those products.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#7-finding-bugs"&gt;
  &lt;/a&gt;
  7.  Finding Bugs
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--StSR4d6S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xsi8nxibfpmj4zcgsaij.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--StSR4d6S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xsi8nxibfpmj4zcgsaij.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It is a well-known fact in the web development world, that Software failures are a genuine problem for  &lt;a href="https://softwaretesting.news/what-is-the-real-impact-of-software-bugs/"&gt;companies‚Äô economies&lt;/a&gt;. They affect their overall income and the experience for their users. And in today‚Äôs world, all businesses know that their product must be reliable to be considered acceptable.&lt;/p&gt;

&lt;p&gt;That‚Äôs my so many firms out there have created something called bounty programs. These initiatives focus on paying developers to look for and fix vulnerabilities in their apps.&lt;/p&gt;

&lt;p&gt;You can go on one of the following websites:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://hackerone.com/hacktivity?"&gt;HackerOne&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.bugcrowd.com/bug-bounty-list/"&gt;Bugcrowd&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.vulnerability-lab.com/list-of-bug-bounty-programs.php"&gt;Vulnerability Lab&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://firebounty.com/"&gt;Fire Bounty&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And check with your eyes the real possibilities of making money with these programs. Some vulnerabilities fix are being paid actually more than 2000$.&lt;/p&gt;

&lt;p&gt;So why not making yourself a name out there as the new Mr. Wolf of company bugs while earning a lot of cash?&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion:
&lt;/h2&gt;

&lt;p&gt;So what is the solution? Where do you start to see your coding skills make you some good money at the end of the month? Which one should you pick from the one listed above?&lt;/p&gt;

&lt;p&gt;The answer is:  &lt;strong&gt;all of them&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Yes. All..!! You may have read many books about personal finance, and all of them agree on one thing: you need to diversify your income streams. Having multiple income sources is always a good choice.&lt;/p&gt;

&lt;p&gt;So that‚Äôs what we suggest to you. You don't have to pick more than one way at once. You can start with one method, and then ampliate yourself to work with other cash flow ideas.&lt;/p&gt;

&lt;p&gt;For example, Start writing on platforms like &lt;a href="https://dev.to/"&gt;Dev.To&lt;/a&gt;. Learn what good writing is and what developers want to read about. Build your writing portfolio. Use it to promote yourself to tech companies to write paid content for them.&lt;/p&gt;

&lt;p&gt;Try to build your authority with the content you write or create and then use that to become a coach on a platform like Codementor. If you have many people who follow your teachings, you can start thinking about creating your first ebook or video course.&lt;/p&gt;

&lt;p&gt;Let Us know what your favorite passive income ideas are!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>programming</category>
      <category>productivity</category>
      <category>career</category>
    </item>
    <item>
      <title>My First PR in GIT-HUB</title>
      <author>| pro._.gramer |</author>
      <pubDate>Tue, 25 May 2021 03:52:20 +0000</pubDate>
      <link>https://dev.to/anushree71199/my-first-pr-in-git-hub-3lja</link>
      <guid>https://dev.to/anushree71199/my-first-pr-in-git-hub-3lja</guid>
      <description>&lt;p&gt;As a beginner every coder wonders " How should I start with Open Source? " and not a while ago I started learning about Open Source Fundamentals, guess what in these last few weeks I have more than 10 PRs merged in a JavaScript Project. I know it's not much right now but in my opinion Learning and Exploring are two things that are never going to be enough for a Passionate Coders. Wait till the end and find out how a noob coder made it to the world of contributions&lt;/p&gt;

&lt;p&gt;Reading this title you must be wondering what is this post about? So let me tell you I am going to talk about how to use GitHub effectively.&lt;/p&gt;

&lt;p&gt;Wait, what is GitHub? Aren't we suppose to cover that part first. So let me break it to you as simple as possible GitHub is like a place where you can help the coding community by contributing your valuable knowledge about specific skills. Technically speaking GitHub is a code hosting platform for version control and you can also collaborate on other projects by making valuable points about your changes, it lets you and others work together on projects from anywhere. &lt;/p&gt;

&lt;p&gt;If you are still looking for a simpler explanation check out my other post on &lt;a href="https://dev.to/anushree71199/explaining-git-to-a-10-years-old-5839"&gt;Explaining git to a 10 years old&lt;/a&gt;. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#if-you-dont-have-a-github-account-make-one-asap"&gt;
  &lt;/a&gt;
  If you don't have a GitHub account make one ASAP.
&lt;/h3&gt;

&lt;p&gt;As I said earlier GitHub is a code hosting platform so it needs some line of commands for you to learn and you should know how to use terminal(for linux), git-bash(for windows) to host your code on GitHub. If you need a post on that I can make you guys a cheat sheet for all the git commands that are used way too much along-with some solved errors.&lt;/p&gt;

&lt;p&gt;While using GitHub on your level and making it as effective as possible, I honestly came through many hurdles. But I tackled them by figuring them out on my own. Let's talk about when you open any other person's repository(just like there are files and folders in windows, repositories are files and folders for GitHub) what are your thoughts about that repository? If you think that you can make that repository look more better and it will help someone learn something new then you are at the right path. &lt;/p&gt;

&lt;p&gt;Firstly you should open up an Issue and tell the maintainer of that repository about the changes you are about to make so that if he finds it good enough you'll become an assignee, once you get that assignee label you can simply follow these steps and make your first PR:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Fork that repository make it your own git-hub's profile repository then save it on your local host using: 
&lt;code&gt;git clone your_own_link_of_the_repository&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Work on that first locally i.e on your local system by creating your own branch for that repository using:
&lt;code&gt;git checkout -b branch_name&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Make your changes then add them locally using:
&lt;code&gt;git add .&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Commit to all the changes by using:
`git commit -m "relevant message"
Here relevant message means:&lt;/li&gt;
&lt;li&gt;feat- added a new feature &lt;/li&gt;
&lt;li&gt;fix- fixed a bug &lt;/li&gt;
&lt;li&gt;test- everything related to testing &lt;/li&gt;
&lt;li&gt;refactor- change of code not any bug fixes or adding a new feat&lt;/li&gt;
&lt;li&gt;docs- updation in docs&lt;/li&gt;
&lt;li&gt;style- related to styling, designing &lt;/li&gt;
&lt;li&gt;chore- updating in build tasks, package manager, configurations related.&lt;/li&gt;
&lt;li&gt;After doing all these steps push your specific branch remotely i.e push it on your GitHub repository of the project using: 
&lt;code&gt;git push origin branch_name&lt;/code&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;After pushing the branch make your first PR by clicking on the button "compare and create pull request". Well this is a tough part but I got you, here is a template you can use to describe the things&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
### Related Issue
  - Name of the issue for which you created this project

Closes: #[Issue Number]

### Describe the changes you've made
A brief description of all the changes that you made keep it short and brief but interesting.

### Describe if there is any unusual behaviour of your code(Write `NA` if there isn't)
If your projects has some sort of malfunctioning then mention them here. For example if your project as a web page is not responsive then describe that here.

### Checklist:

Example how to mark a checkbox:-
[x] My code follows the code style of this project.

- [ ] My code follows the style guidelines of this project.
- [ ] I have performed a self-review of my own code.
- [ ] I have commented my code, particularly in hard-to-understand areas.
- [ ] I have made corresponding changes to the documentation.
- [ ] New and existing unit tests pass locally with my changes.

### Screenshots
Put any screenshot(s) of the project here.

Showing your project's snap will make it more obvious that you performed all this on your own and its your idea to improvise that specific repository
&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;Now the last tip from my side is when it's your first time here you are not recognised basically cause you don't have a network yet and no-one is willing to even see your projects, that's heart breaking but don't worry I'll tell you what participate in competitions like Hacktober fest, GirlScript Summer of Code, Cross Winter of Code. I've done all my contributions because of the help these platforms provided to noob coders like us. I've participated in these competitions and hopefully I did well. &lt;/p&gt;

&lt;p&gt;So let's not loose hope and try doing contributions as long as you can then someday you'll fall in love with Open Source Contributions. I would love to read your story someday :)&lt;/p&gt;

&lt;p&gt;Keep coding and Stay safe üíú&lt;/p&gt;

</description>
      <category>github</category>
      <category>bash</category>
      <category>programming</category>
      <category>computerscience</category>
    </item>
    <item>
      <title>Daniel Vs. Goliath(Node.js/Express.js vs Ruby on Rails)</title>
      <author>Curtis Laurence Chadwell</author>
      <pubDate>Tue, 25 May 2021 03:27:08 +0000</pubDate>
      <link>https://dev.to/curchadw/daniel-vs-goliath-node-js-express-js-vs-ruby-on-rails-4o57</link>
      <guid>https://dev.to/curchadw/daniel-vs-goliath-node-js-express-js-vs-ruby-on-rails-4o57</guid>
      <description>&lt;p&gt;This particular post is more of an opinion piece just an fyi, and didn't feel like coding tonight. Over the weekend I had the chance to finally work with Node.js and Express.js...because I found it necessary for me to gain exposure ,and to be able have my own opinion of the two. As a developer its good to have these perspective to know how to integrate these backend frameworks with your frontend frameworks like React, and Vuejs. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CTg3aEKX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e52i6f63qo8czd9wf5ub.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CTg3aEKX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e52i6f63qo8czd9wf5ub.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What do Node.js/Express.js and Rails have in common? They are both Model, View, Controller(MVC) frameworks that make it easy to develop a organized backend for a full-scale web application. I will not go into breaking down the two in depth, otherwise you all would be reading a dissertation. Express.js uses JavaScript ,and Rails uses Ruby(Wooohooo). You can integrate any database you want with these(..but never use SQLite for a production application).&lt;/p&gt;

&lt;p&gt;Now what is the difference between the two? &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Rails&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
Rails is a very heavy framework given the amount of files it produces, but is a lot of fun to work with in my opinion when you are learning the MVC concept. Though slow at times, it comes with a lot for you to work with without needing to customize your eco-system too much. This is part of the reason you'll see a lot of startups using Ruby on Rails. Plus if Ruby is your first language outside of JavaScript, its probably very easy to understand syntax-wise with it being a high-level language(Very human readable). But the main thing to take away for this is Rails is fun and but, heavy&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Node.js/Express.js&lt;/em&gt;&lt;/strong&gt;&lt;br&gt;
Express.js on the other hand is the the skinny boy out of the two frameworks. Minimal amount of files....but robust by design. Its very fast to start up, but you will need to be more creative, because you can end up writing more lines of code versus how much you would with Rails, hence why Express.js is way more flexible in how you want to customize it. You'll see bigger companies using Express.Js/Node.Js, because they need something designed for literally everything which is fine. &lt;/p&gt;

&lt;p&gt;I will not provide an opinion on what type of project you should use these for because they can both be used as a reliable backend framework and it comes down to preference. Whenever you are exploring the two for a upcoming big project, just just keep the brief points I mentioned in mind.&lt;/p&gt;

</description>
      <category>rails</category>
      <category>node</category>
      <category>ruby</category>
      <category>javascript</category>
    </item>
  </channel>
</rss>
