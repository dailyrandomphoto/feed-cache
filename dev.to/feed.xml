<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>EuroPython 2021 Financial Aid </title>
      <author>whykay üë©üèª‚Äçüíªüêàüè≥Ô∏è‚Äçüåà (she/her)</author>
      <pubDate>Wed, 21 Apr 2021 13:48:16 +0000</pubDate>
      <link>https://dev.to/europython/europython-2021-financial-aid-2fh3</link>
      <guid>https://dev.to/europython/europython-2021-financial-aid-2fh3</guid>
      <description>&lt;h6&gt;
  &lt;a href="#original-post-httpsep2021europythoneuregistrationfinancialaid"&gt;
  &lt;/a&gt;
  (Original post: &lt;a href="https://ep2021.europython.eu/registration/financial-aid/"&gt;https://ep2021.europython.eu/registration/financial-aid/&lt;/a&gt;)
&lt;/h6&gt;

&lt;p&gt;As part of our commitment to the Python community, we are pleased to announce that we offer special grants for people in need of financial aid to attend EuroPython. Please follow the instructions below to apply for a grant.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--laVUiHIm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c203638nfm6taa1pykmm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--laVUiHIm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c203638nfm6taa1pykmm.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
EuroPython Society are sponsoring financial aid with ‚Ç¨10,000 this year.&lt;/p&gt;

&lt;p&gt;We offer financial aid conference grants in these 2 categories:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Discount ticket&lt;/strong&gt;. Get a standard ticket for the conference with an affodable price (including access to conference days (Wed-Fri), sponsored workshops, Beginners‚Äô Day workshop and sprints). 

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Note: Training passes are NOT included in the free conference ticket.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Free ticket&lt;/strong&gt;. Get a standard ticket for the conference for free (including access to conference days (Wed-Fri), sponsored workshops, Beginners‚Äô Day workshop and sprints). 

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Note: Training passes are NOT included in the free conference ticket.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h1&gt;
  &lt;a href="#grant-eligibility"&gt;
  &lt;/a&gt;
  Grant Eligibility
&lt;/h1&gt;

&lt;p&gt;EuroPython is the a wonderful place to meet and share your experience for Python developers from Europe and all around the world. Our goal is to support people who want to make the Python community better: conference speakers and tutorial presenters, active people from small Python communities and open source contributors.&lt;/p&gt;

&lt;p&gt;Our grants are open to all people in need of financial aid. We will specifically take into account the following criteria in the selection process:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Contributors:&lt;/strong&gt; potential speakers/trainers of EuroPython (people who submitted a proposal), volunters and all who contribute to EuroPython and/or Python community projects.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Economic factors:&lt;/strong&gt; we want everybody to have a chance to come to EuroPython, regardless of economic situation or income level.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Country based:&lt;/strong&gt; as EuroPython 2021 will be distributed and there may be participants joining outside of Europe, we understand not all countries are having the same income levels and cost of living.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Diversity:&lt;/strong&gt; we aim to be the most diverse and inclusive event possible.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#how-to-apply"&gt;
  &lt;/a&gt;
  How to apply
&lt;/h1&gt;

&lt;p&gt;Simply use the application form: &lt;a href="https://forms.gle/4FePrmsbsJTxeNdG7"&gt;https://forms.gle/4FePrmsbsJTxeNdG7&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#timeline"&gt;
  &lt;/a&gt;
  Timeline
&lt;/h1&gt;

&lt;p&gt;The timeline will be published soon at &lt;a href="https://ep2021.europython.eu/registration/financial-aid/"&gt;this original post&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-you-can-expect"&gt;
  &lt;/a&gt;
  What you can expect
&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Free/ discount ticket:&lt;/strong&gt; Individual coupons will be generated for a free/ discount ticket.&lt;/p&gt;

&lt;p&gt;Please note:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Please only apply if you will attend the conference. &lt;/li&gt;
&lt;li&gt;Transfers to other people are not possible.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you find that you cannot attend the conference for some reason, please send an email to &lt;a href="mailto:finaid@europython.eu"&gt;finaid@europython.eu&lt;/a&gt; informing us, so that we can allocate the funds to someone else.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#privacy-policy"&gt;
  &lt;/a&gt;
  Privacy Policy
&lt;/h1&gt;

&lt;p&gt;The data we collect on this form will exclusively be used by our financial aid work group for the selection of grant recipients and the processing of financial aid refunds. No data is passed on to third parties, except to our accountants and the bank in order to process the refunds. We use Google Forms for the processing and Google Drive for storing the relevant information. For more details on our privacy policies, please see our &lt;a href="https://ep2021.europython.eu/privacy/"&gt;privacy policy&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#become-a-financial-aid-sponsor"&gt;
  &lt;/a&gt;
  üåà Become a Financial Aid sponsor!
&lt;/h1&gt;

&lt;p&gt;You or your company can support our diversity initiative by becoming a EuroPython Financial Aid sponsor. We have a special &lt;a href="https://ep2021.europython.eu/sponsor/packages/#special"&gt;Financial Aid package&lt;/a&gt; that can be booked separately or on top of a &lt;a href="https://ep2021.europython.eu/sponsor/packages/#main"&gt;main sponsor package&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For more sponsorship information, feel free to contact us at &lt;a href="mailto:finaid@europython.eu"&gt;finaid@europython.eu&lt;/a&gt; or the Sponsor Workgroup directly at &lt;a href="mailto:sponsoring@europython.eu"&gt;sponsoring@europython.eu&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;üíñ Thank you for supporting diversity at EuroPython 2021!&lt;/p&gt;

</description>
      <category>europython</category>
      <category>conference</category>
      <category>financialaid</category>
      <category>diversity</category>
    </item>
    <item>
      <title>JWT-authentication</title>
      <author>satish-rajnale</author>
      <pubDate>Wed, 21 Apr 2021 13:36:51 +0000</pubDate>
      <link>https://dev.to/satishrajnale/jwt-authentication-3kgj</link>
      <guid>https://dev.to/satishrajnale/jwt-authentication-3kgj</guid>
      <description>&lt;p&gt;This project describes the steps involed in a authentication process between client &amp;amp; server using JWT tokens.&lt;br&gt;
Find it on my Github repo : &lt;br&gt;
&lt;a href="https://github.com/satish-rajnale/JwtwebToken"&gt;Satish-Rajnale&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#first-you-need-to-generate-some-tokens"&gt;
  &lt;/a&gt;
  First you need to generate some tokens
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;It's very easy just enter &lt;strong&gt;node&lt;/strong&gt; and then the code in below image.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VSk5C0Ac--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/76589507/113830479-4865e480-97a4-11eb-8c28-64451f35146e.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VSk5C0Ac--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/76589507/113830479-4865e480-97a4-11eb-8c28-64451f35146e.PNG" alt="generateTokens"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Then add these tokens in your .env file as ACCESS_TOKEN_PATH &amp;amp; REFRESH_TOKEN_PATH.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WtwXmwqN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/76589507/113831448-40f30b00-97a5-11eb-800a-45dc8f1aa073.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WtwXmwqN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/76589507/113831448-40f30b00-97a5-11eb-800a-45dc8f1aa073.PNG" alt="dotenv"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;h3&gt;
  &lt;a href="#now-create-the-authuserjs-file-as-shown-below"&gt;
  &lt;/a&gt;
  Now Create the authUser.js file as shown below.
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1QvQkPxh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/76589507/113831623-70a21300-97a5-11eb-80e5-cd50fbd93f68.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1QvQkPxh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/76589507/113831623-70a21300-97a5-11eb-80e5-cd50fbd93f68.PNG" alt="AuthUserjs"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;
  &lt;a href="#now-create-the-inedxjs-file-as-shown-below"&gt;
  &lt;/a&gt;
  Now Create the inedx.js file as shown below.
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AvIjBkBp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/76589507/113831847-ab0bb000-97a5-11eb-9f75-113b9504c43d.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AvIjBkBp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/76589507/113831847-ab0bb000-97a5-11eb-9f75-113b9504c43d.PNG" alt="Indexjs"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#onto-the-requests-part-create-a-requestsrest-file-as-shown-below"&gt;
  &lt;/a&gt;
  Onto the Requests part create a Requests.rest file as shown below.
&lt;/h3&gt;

&lt;p&gt;You can use the extension &lt;code&gt;Rest Client&lt;/code&gt; in VsCode or you can also use &lt;code&gt;Postman&lt;/code&gt;, both are great but in this project I am using the entension.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--n3GRhBQ6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/76589507/113832525-5288e280-97a6-11eb-9109-14458854f6db.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n3GRhBQ6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/76589507/113832525-5288e280-97a6-11eb-9109-14458854f6db.PNG" alt="RequsetsRest"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;First make a request of &lt;code&gt;POST&lt;/code&gt; for login on port:4000&lt;/li&gt;
&lt;li&gt;&lt;p&gt;On successfully making the request you will get the following response with tokens.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8oaP8IgK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/76589507/113832996-c75c1c80-97a6-11eb-907b-6ab3b290bb5f.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8oaP8IgK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/76589507/113832996-c75c1c80-97a6-11eb-907b-6ab3b290bb5f.PNG" alt="logintoken"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Copy the accessToken and paste it in your &lt;code&gt;GET&lt;/code&gt; request's Auhtorization value. PORT:8080&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cI5Y3u0L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/76589507/113833458-4f422680-97a7-11eb-98f0-7d8d9a6e4137.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cI5Y3u0L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/76589507/113833458-4f422680-97a7-11eb-98f0-7d8d9a6e4137.PNG" alt="getUser"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Copy the refreshToken and paste it in your &lt;code&gt;Post&lt;/code&gt; request for token.PORT:4000&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yKpVLF4W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/76589507/113833515-65e87d80-97a7-11eb-8e76-ad3bb49915de.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yKpVLF4W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/76589507/113833515-65e87d80-97a7-11eb-8e76-ad3bb49915de.PNG" alt="PostRefresh"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;When sent a request from &lt;code&gt;GET&lt;/code&gt; method you will get the following response.
###NOTE:
There is a TimeLimit added and within that time limit you have to make the get request.
For your convenience you can extend the time limit through your authuser.js code.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YE5E9v1Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/76589507/113834011-f1620e80-97a7-11eb-82d2-bd4783220aaa.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YE5E9v1Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/76589507/113834011-f1620e80-97a7-11eb-82d2-bd4783220aaa.PNG" alt="Response"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;When you send the &lt;code&gt;POST&lt;/code&gt; request for token it generates the following access token which you can copy and paste in the &lt;code&gt;GET&lt;/code&gt; request. This will extend the user access/auth time. Basically you get access again.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ce8RsYx0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/76589507/113834313-51f14b80-97a8-11eb-89bc-12372ae35445.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ce8RsYx0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/76589507/113834313-51f14b80-97a8-11eb-89bc-12372ae35445.PNG" alt="PostRefreshToken"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Now to delete the generated JWT token and logout the user use the &lt;code&gt;DELETE&lt;/code&gt; request.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y-u8qCY9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/76589507/113834785-d9d75580-97a8-11eb-9db2-1c54abd8d7e5.PNG" alt="Delete"&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c-dyiif6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/76589507/113834891-f5426080-97a8-11eb-8650-b600bfaf8bba.PNG" alt="TokenDeleted"&gt;
&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>node</category>
      <category>jwt</category>
      <category>express</category>
      <category>restapi</category>
    </item>
    <item>
      <title>Make your npm package work on both Node.js and browser</title>
      <author>Nir Hadassi</author>
      <pubDate>Wed, 21 Apr 2021 13:34:44 +0000</pubDate>
      <link>https://dev.to/aspecto/make-your-npm-package-work-on-both-node-js-and-browser-30n7</link>
      <guid>https://dev.to/aspecto/make-your-npm-package-work-on-both-node-js-and-browser-30n7</guid>
      <description>&lt;p&gt;I recently worked on an npm package that is supposed to be consumed on both Node.js environment and the browser (using React/Angular/etc..).&lt;/p&gt;

&lt;p&gt;Things started getting complicated when the node branch of the code needed to require native Node.js packages ‚Äî like &lt;code&gt;fs&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Consider the following (simplified) code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// node-handler.js
const fs = require('fs');

export const handle = () =&amp;gt; { 
  fs.readFileSync(‚Ä¶);
  ‚Ä¶
};

// browser-handler.js
export const handle = () =&amp;gt; { ‚Ä¶ };

// index.js
const nodeHandler = require('./node-handler').handle;
const browserHandle = require('./browser-handler').handle;
const isNode = require('./config').isNode;

const handle = isNode ? nodeHandler : browserHandle;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When testing the module on my React + Webpack app, the app crashed:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xKbVjFBW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wq7fou7mjg5rbejt1sqm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xKbVjFBW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wq7fou7mjg5rbejt1sqm.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This happened even though the &lt;code&gt;node-handler&lt;/code&gt; file wasn‚Äôt executed, this is due to Webpack nature of creating a bundle containing all the code.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-1-postpone-your-requires"&gt;
  &lt;/a&gt;
  Step 1: Postpone your requires
&lt;/h2&gt;

&lt;p&gt;Instead of requiring &lt;code&gt;fs&lt;/code&gt; in the global scope, we can require it only where we actually need it, that way we don‚Äôt require it when running in the browser:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// node-handler.js
export const handle = () =&amp;gt; { 
  require('fs').readFileSync(‚Ä¶);
  ‚Ä¶
};

// browser-handler.js
export const handle = () =&amp;gt; { ‚Ä¶ };

// index.js
const nodeHandler = require('./node-handler').handle;
const browserHandle = require('./browser-handler').handle;
const isNode = require('./config').isNode;

const handle = isNode ? nodeHandler : browserHandle;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Cool! Our React app is not crashing anymore! But we do get an annoying compilation warning right now:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4ttwWDeT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9ptgfju0o8i9ut8o8dhp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4ttwWDeT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9ptgfju0o8i9ut8o8dhp.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;While we can live with a warning ‚ö†Ô∏è , our end-users will probably not like this too much and will end up not installing our package.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#step-2-eval-your-require"&gt;
  &lt;/a&gt;
  Step 2: eval your require
&lt;/h2&gt;

&lt;p&gt;This is not the most elegant solution (to say the least..), but it‚Äôs keeping Webpack quiet and your end-users happy. Instead of using &lt;code&gt;require('fs')&lt;/code&gt;, we‚Äôre gonna use &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval"&gt;eval&lt;/a&gt;&lt;code&gt;('require')('fs')&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// node-handler.js
export const handle = () =&amp;gt; { 
  eval('require')('fs').readFileSync(‚Ä¶);
  ‚Ä¶
};

// browser-handler.js
export const handle = () =&amp;gt; { ‚Ä¶ };

// index.js
const nodeHandler = require('./node-handler').handle;
const browserHandle = require('./browser-handler').handle;
const isNode = require('./config').isNode;

const handle = isNode ? nodeHandler : browserHandle;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And that‚Äôs it! Just two simple steps to make your npm package work on both Node.js and browser.&lt;/p&gt;

&lt;p&gt;Good luck and may you be blessed with tons of stars üåü&lt;/p&gt;

</description>
      <category>npm</category>
      <category>node</category>
      <category>tutorial</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Introducing Sound Null Safety Support for Appwrite Flutter and Dart SDKs</title>
      <author>Damodar Lohani</author>
      <pubDate>Wed, 21 Apr 2021 13:06:00 +0000</pubDate>
      <link>https://dev.to/appwrite/introducing-sound-null-safety-support-for-appwrite-flutter-and-dart-sdks-2mhc</link>
      <guid>https://dev.to/appwrite/introducing-sound-null-safety-support-for-appwrite-flutter-and-dart-sdks-2mhc</guid>
      <description>&lt;p&gt;Flutter has always been one of the highly active &lt;a href="https://appwrite.io"&gt;Appwrite&lt;/a&gt; platforms with lots of developers already using Appwrite to power their Flutter Apps. That is why today we are especially excited to announce that our &lt;a href="https://pub.dev/packages/appwrite/versions/0.5.0-dev.1"&gt;Flutter Client SDK&lt;/a&gt; and the &lt;a href="https://pub.dev/packages/dart_appwrite/versions/0.5.0-dev.1"&gt;Dart Server SDK&lt;/a&gt; have both received an upgrade to support null safety, and we have a pre-release version of both SDKs (Flutter v0.5.0-dev.1 &amp;amp; Dart v0.5.0-dev.1) in &lt;a href="https://pub.dev"&gt;pub&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#get-the-null-safe-sdk"&gt;
  &lt;/a&gt;
  Get the Null Safe SDK
&lt;/h2&gt;

&lt;p&gt;To use the Null Safe SDK in your project, you can use the following as a dependency in your &lt;code&gt;pubspec.yaml&lt;/code&gt; file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="nl"&gt;dependencies:&lt;/span&gt;
  &lt;span class="nl"&gt;appwrite:&lt;/span&gt; &lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
  &lt;span class="nl"&gt;dart_appwrite:&lt;/span&gt; &lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#what-is-null-safety"&gt;
  &lt;/a&gt;
  What is null safety?
&lt;/h2&gt;

&lt;p&gt;Sound null safety allows developers to specify which variables can contain null values. This has the potential to eradicate dreaded null reference exceptions, offering guarantees in development and at runtime that types can only contain null values if the developer expressly chooses.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#theres-more"&gt;
  &lt;/a&gt;
  There's more
&lt;/h2&gt;

&lt;p&gt;To properly support access to private files in the Appwrite Storage, we have updated the methods that access the file-related Storage endpoints along with the Avatars endpoint.&lt;br&gt;
Now, all of the Avatars service methods return &lt;code&gt;Future&amp;lt;Response&amp;gt;&lt;/code&gt; instead of the previous &lt;code&gt;String&lt;/code&gt;. Also the Storage methods &lt;code&gt;getFilePreview&lt;/code&gt;, &lt;code&gt;getFileView&lt;/code&gt; and &lt;code&gt;getFileDownload&lt;/code&gt; as well return &lt;code&gt;Future&amp;lt;Response&amp;gt;&lt;/code&gt; instead of previous &lt;code&gt;String&lt;/code&gt;. With the new method signatures you can now easily integrate any Appwrite hosted images in your Flutter app with the &lt;code&gt;Image.memory&lt;/code&gt; widget. Below is an example of how you can load and display image preview in your Flutter Application&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="n"&gt;FutureBuilder&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
  &lt;span class="nl"&gt;future:&lt;/span&gt; &lt;span class="n"&gt;widget&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;storage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getFileView&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;fileId:&lt;/span&gt; &lt;span class="s"&gt;"&amp;lt;YOUR_FILE_ID&amp;gt;"&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
  &lt;span class="nl"&gt;builder:&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;snapshot&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;snapshot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;hasData&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;memory&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;snapshot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;snapshot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;hasError&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;snapshot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;error&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;AppwriteException&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="o"&gt;((&lt;/span&gt;&lt;span class="n"&gt;snapshot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;error&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;AppwriteException&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
      &lt;span class="o"&gt;}&lt;/span&gt;
      &lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;snapshot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;error&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;CircularProgressIndicator&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
  &lt;span class="o"&gt;},&lt;/span&gt;
&lt;span class="o"&gt;),&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We would love your help in testing the dev releases of both SDKs and provide us with feedback on how we can improve it further. We are excited to see what you build with Flutter 2.0 &amp;amp; Appwrite.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#learn-more"&gt;
  &lt;/a&gt;
  Learn More
&lt;/h2&gt;

&lt;p&gt;Appwrite has many services and tools to allow you to build applications in a much more productive and secure way. You can use the following resources to learn more about Appwrite and how to leverage it in building your next Appwrite + Flutter project:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;üöÄ &lt;a href="https://appwrite.io/docs/getting-started-for-flutter"&gt;Getting Started Tutorial&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;üìú &lt;a href="https://appwrite.io/docs"&gt;Appwrite Docs&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;üí¨ &lt;a href="https://appwrite.io/discord"&gt;Discord Community&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;üöÇ &lt;a href="https://github.com/appwrite/playground-for-flutter"&gt;Appwrite Flutter Playground&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;‚ùì&lt;a href="https://github.com/appwrite/quiz-with-flutter"&gt;Demo - Quiz With Flutter&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Don't forget to join the &lt;a href="https://appwrite.io/discord"&gt;Appwrite Discord community&lt;/a&gt;, where you can learn more about Appwrite, get the latest updates, and get light-speed help with any question you might have.&lt;/p&gt;

</description>
      <category>appwrite</category>
      <category>dart</category>
      <category>flutter</category>
      <category>nullsafety</category>
    </item>
    <item>
      <title>Cypress Commands (Get, Click, Find)</title>
      <author>Automation Bro</author>
      <pubDate>Wed, 21 Apr 2021 12:18:54 +0000</pubDate>
      <link>https://dev.to/automationbro/cypress-commands-get-click-find-51ig</link>
      <guid>https://dev.to/automationbro/cypress-commands-get-click-find-51ig</guid>
      <description>&lt;p&gt;In this tutorial, we will cover some commonly used Cypress Commands such as Get, Click and Find. We will also take a look at how to find the text of a particular element.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cypress-get-amp-click-command"&gt;
  &lt;/a&gt;
  Cypress Get &amp;amp; Click Command
&lt;/h3&gt;

&lt;p&gt;One of the most commands that you will use in Cypress is the ‚ÄòGet‚Äô command. The ‚Äòget‚Äô command is used to access one or more DOM elements by a selector.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Usage:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8m-olCam--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3xekt9mgrb63g3b5dxxg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8m-olCam--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3xekt9mgrb63g3b5dxxg.png" alt="commands-get"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#cypress-get-text-of-an-element"&gt;
  &lt;/a&gt;
  Cypress Get Text of an Element
&lt;/h3&gt;

&lt;p&gt;There are multiple ways to get the text of an element in Cypress.&lt;/p&gt;

&lt;p&gt;1 ‚Äì Easiest option is via the assertion method:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wEfdUyXw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1uwut5ejkqxkv675lvor.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wEfdUyXw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1uwut5ejkqxkv675lvor.png" alt="commands-text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2 ‚Äì This option you can use if you need to manipulate the text first:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pOFa9Ve8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c3mujly4gsldaheyfvmy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pOFa9Ve8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c3mujly4gsldaheyfvmy.png" alt="carbon-gettext"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#cypress-find-command"&gt;
  &lt;/a&gt;
  Cypress Find Command
&lt;/h3&gt;

&lt;p&gt;The ‚Äòfind‚Äô command is used to get the descendant of a particular selector. For example, in the below code we are first accessing the nav menu by the id selector and then finding all the list items within the nav using the ‚Äòfind‚Äô command.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4gchKxj---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ohlogw38izyib0gct7r8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4gchKxj---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ohlogw38izyib0gct7r8.png" alt="find-command"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;h4&gt;
  &lt;a href="#check-out-the-video-below-to-see-learn-more-about-the-get-click-and-the-find-commands-"&gt;
  &lt;/a&gt;
  Check out the video below to see learn more about the Get, Click, and the Find commands ‚Äì
&lt;/h4&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/jyDr97ubWMQ"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;üìß Subscribe to my &lt;a href="https://automationbro.com/mailing-list"&gt;mailing list&lt;/a&gt; to get access to more content like this &lt;/p&gt;

&lt;p&gt;üëç Follow &lt;a href="https://twitter.com/automationbro"&gt;automationbro&lt;/a&gt; on Twitter for the latest updates&lt;/p&gt;

&lt;p&gt;...&lt;/p&gt;

&lt;p&gt;I love coffees! And, if this post helped you out and you would like to support my work, you can do that by clicking on the button below and buying me a cup of coffee -&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/automationbro"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lUHFj71T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/4aw2ub3f4qkyjk0ivwt4.png" alt="Buy me a coffee"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can also support me by liking and sharing this content.&lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;

</description>
      <category>testing</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>‚ú® 3D Card Hover Effect With Modern CSS Properties üòç</title>
      <author>Satish Naikawadi</author>
      <pubDate>Wed, 21 Apr 2021 12:17:56 +0000</pubDate>
      <link>https://dev.to/satishnaikawadi2001/3d-card-hover-effect-with-modern-css-properties-24fk</link>
      <guid>https://dev.to/satishnaikawadi2001/3d-card-hover-effect-with-modern-css-properties-24fk</guid>
      <description>&lt;p&gt;In this post , we are going to create very üíñ beautiful and unique 3D card hover effect with HTML and CSS. We will use some modern properties in CSS to achieve this effect. Below is the demo of what we will create in this post -&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--M0giFgkl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/dh1srz69c/image/upload/v1615993587/3d_card_gif_310405a9bf.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--M0giFgkl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://res.cloudinary.com/dh1srz69c/image/upload/v1615993587/3d_card_gif_310405a9bf.gif" alt="3d-card-gif.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We will proceed as below:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Creating a HTML Markup.&lt;/li&gt;
&lt;li&gt;Adding Basic Styling For All Elements.&lt;/li&gt;
&lt;li&gt;Creating Actual Hover Effect.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;So lets first add all the HTML code to build required structure.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#creating-html-markup"&gt;
  &lt;/a&gt;
  üöß Creating HTML Markup
&lt;/h1&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;h1&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"heading"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;3D Card Hover Effect&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"item"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"card"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"card__img"&lt;/span&gt;
                        &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://images.unsplash.com/photo-1588392382834-a891154bca4d?ixid=MXwxMjA3fDB8MHxzZWFyY2h8NXx8bmF0dXJlfGVufDB8fDB8&amp;amp;ixlib=rb-1.2.1&amp;amp;auto=format&amp;amp;fit=crop&amp;amp;w=500&amp;amp;q=60"&lt;/span&gt;
                        &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"Green Forests"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"card__content"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;h1&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"card__header"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Green Forests&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"card__text"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi id sem sit
                            amet massa aliquet aliquet. Phasellus at ipsum
                            congue urna commodo gravidas&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"card__btn"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Explore
                            &lt;span class="nt"&gt;&amp;lt;span&amp;gt;&lt;/span&gt;&lt;span class="ni"&gt;&amp;amp;rarr;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"item"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"card"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"card__img"&lt;/span&gt;
                        &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://images.unsplash.com/photo-1505245208761-ba872912fac0?ixid=MXwxMjA3fDB8MHxzZWFyY2h8Mzd8fG5hdHVyZXxlbnwwfHwwfA%3D%3D&amp;amp;ixlib=rb-1.2.1&amp;amp;auto=format&amp;amp;fit=crop&amp;amp;w=500&amp;amp;q=60"&lt;/span&gt;
                        &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"Beutiful Oceans"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"card__content"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;h1&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"card__header"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Beautiful Oceans&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"card__text"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi id sem sit
                            amet massa aliquet aliquet. Phasellus at ipsum
                            congue urna commodo gravida&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"card__btn"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Explore
                            &lt;span class="nt"&gt;&amp;lt;span&amp;gt;&lt;/span&gt;&lt;span class="ni"&gt;&amp;amp;rarr;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"item"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"card"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"card__img"&lt;/span&gt;
                        &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://images.unsplash.com/photo-1431512284068-4c4002298068?ixid=MXwxMjA3fDB8MHxzZWFyY2h8OTB8fG5hdHVyZXxlbnwwfHwwfA%3D%3D&amp;amp;ixlib=rb-1.2.1&amp;amp;auto=format&amp;amp;fit=crop&amp;amp;w=500&amp;amp;q=60s"&lt;/span&gt;
                        &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"Snowy Mountains"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"card__content"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;h1&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"card__header"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Snowy Mountains&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
                        &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"card__text"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi id sem sit
                            amet massa aliquet aliquet. Phasellus at ipsum
                            congue urna commodo gravida&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"card__btn"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Explore
                            &lt;span class="nt"&gt;&amp;lt;span&amp;gt;&lt;/span&gt;&lt;span class="ni"&gt;&amp;amp;rarr;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
                    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Here we have &lt;code&gt;div&lt;/code&gt; with &lt;code&gt;class&lt;/code&gt; 'container'  which will be the parent of all the three cards. Then we are having each 'card' inside &lt;code&gt;div&lt;/code&gt; with &lt;code&gt;class&lt;/code&gt;&lt;br&gt;
'item'. Each 'card' &lt;code&gt;div&lt;/code&gt; has its image,its header and some text related to it. It also has one &lt;code&gt;button&lt;/code&gt; inside it.&lt;br&gt;
So that's the basic HTML markup of the webpage we are going to build.&lt;br&gt;
Now lets see add some styling for all the elements like 'card',&lt;code&gt;img&lt;/code&gt;,text inside card, button and also some styling for layouting of card.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#basic-styling-for-all-elements"&gt;
  &lt;/a&gt;
  ü¶ãBasic Styling For All Elements
&lt;/h1&gt;

&lt;p&gt;Below is the CSS code for styling of these elemets -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;*,&lt;/span&gt;
&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nd"&gt;::before&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nd"&gt;::after&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;box-sizing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;inherit&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;html&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;box-sizing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;border-box&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;62.5%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;6rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#15202b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;"Inter"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.heading&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;4rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin-bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;3rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;text-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;3px&lt;/span&gt; &lt;span class="m"&gt;4px&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt; &lt;span class="no"&gt;pink&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.container&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;space-around&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;flex-wrap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;wrap&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.item&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#192734&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.4rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;overflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;30%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;.5s&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt; &lt;span class="n"&gt;ease&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;box-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0px&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt; &lt;span class="m"&gt;50px&lt;/span&gt; &lt;span class="m"&gt;#555&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.card__img&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;18rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;object-fit&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;cover&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.card__content&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;3rem&lt;/span&gt; &lt;span class="m"&gt;3rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.card__header&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;3rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;500&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin-bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.5rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.card__text&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.5rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;letter-spacing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.1rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;line-height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.7&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#8899a6&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin-bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2.5rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.card__btn&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.5rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#3363ff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#e6ecff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.4rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.2s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.card__btn&lt;/span&gt; &lt;span class="nt"&gt;span&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;margin-left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.2s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.card__btn&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="nc"&gt;.card__btn&lt;/span&gt;&lt;span class="nd"&gt;:active&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#dce4ff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.card__btn&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt; &lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="nc"&gt;.card__btn&lt;/span&gt;&lt;span class="nd"&gt;:active&lt;/span&gt; &lt;span class="nt"&gt;span&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;margin-left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.5rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;@media&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;992px&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nc"&gt;.item&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;45%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;@media&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;768px&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nc"&gt;.item&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;80%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So this is the all basic styling needed to style our webpage. After this we will now see how we can create the actual &lt;strong&gt;3D Card Hover Effect&lt;/strong&gt;&lt;br&gt;
with some interesting CSS properties.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#creating-actual-3d-hover-effect"&gt;
  &lt;/a&gt;
  üòâ Creating Actual 3D Hover Effect
&lt;/h1&gt;

&lt;p&gt;Firstly , for giving starting position to our cards , we will add &lt;code&gt;transform&lt;/code&gt; property to it which will have value as &lt;code&gt;rotateX(45deg) scale(0.7)&lt;/code&gt;. Now here&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;rotateX()&lt;/code&gt; - The &lt;code&gt;rotateX()&lt;/code&gt; method rotates an element around its X-axis at a given degree in 3 dimensions.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;scale()&lt;/code&gt; -  The &lt;code&gt;scale()&lt;/code&gt; method increases or decreases the size of an element (according to the parameters given for the width and height).
these methods will make our item to be rotated along X-axis with 45 degrees with its size decreased to 0.7 of its original size.
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;transform&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;rotateX&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;45&lt;/span&gt;&lt;span class="nt"&gt;deg&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nt"&gt;scale&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="err"&gt;7&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Now by adding this line we won't get our initial positions of our card , instead we will get it as below - &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xDkQHyIT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/dh1srz69c/image/upload/v1616006321/unwanted_ad9baa21cc.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xDkQHyIT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/dh1srz69c/image/upload/v1616006321/unwanted_ad9baa21cc.jpg" alt="unwanted.jpg"&gt;&lt;/a&gt;&lt;br&gt;
 from which it looks like item is scaled down to 0.7 of its original size but it doesn't look like it has rotated through 45 degrees around X-axis. But it did. It doesn't look like rotated because while doing 3D transformation we have tell browser that how far is that item from the user's eyes. And to do that we can use &lt;code&gt;perspective&lt;/code&gt; property in CSS.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#perspective-in-css"&gt;
  &lt;/a&gt;
  üßêPerspective In CSS
&lt;/h3&gt;

&lt;p&gt;1.The &lt;code&gt;perspective&lt;/code&gt; property is used to give a 3D-positioned element some perspective.&lt;br&gt;
2.The &lt;code&gt;perspective&lt;/code&gt; property defines how far the object is away from the user. So, a lower value will result in a more intensive 3D effect than a higher value.&lt;br&gt;
3.When defining the &lt;code&gt;perspective&lt;/code&gt; property for an element, it is the CHILD elements that get the perspective view, NOT the element itself.&lt;br&gt;
To learn more about &lt;code&gt;perspective&lt;/code&gt; in CSS and other properties related to it like &lt;code&gt;perspective-origin&lt;/code&gt; &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/perspective"&gt;Click Here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So now to get desired positioning of our items , we will add &lt;code&gt;perspective&lt;/code&gt; property to container which is a parent of item components and set its value to &lt;code&gt;900px&lt;/code&gt;(While using perspective you should try and test values to get desired look).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.container&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;perspective&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;900px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So now we will get correct initial look for our cards which is as below - &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Yg4OBl3w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/dh1srz69c/image/upload/v1616008197/desired_cc8e8c1d77.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Yg4OBl3w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/dh1srz69c/image/upload/v1616008197/desired_cc8e8c1d77.jpg" alt="desired.jpg"&gt;&lt;/a&gt;&lt;br&gt;
So that's hard part done. Now we only have to add hover state to our item which will be its normal position for which we will set &lt;code&gt;transform&lt;/code&gt; property as &lt;code&gt;rotate(0deg) scale(1)&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.item&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0deg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;scale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;.5s&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt; &lt;span class="n"&gt;ease&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;z-index&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;400&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;box-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;2px&lt;/span&gt; &lt;span class="m"&gt;2px&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.16&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And with that we have completed our beautiful and awesome &lt;strong&gt;3D Hover Effect&lt;/strong&gt;. I know &lt;code&gt;perspective&lt;/code&gt; property is little difficult to understand. But with practicing more examples and reading docs you will get comfortable with it.&lt;br&gt;
For more articles related to programming do visit my&lt;br&gt;
&lt;a href="https://satishnaikawadi.me/posts"&gt;Personal Blog&lt;/a&gt;. &lt;br&gt;
I Hope this will help you guys. Thanks üòá for reading as always.  &lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Broaden the view</title>
      <author>Hendrik</author>
      <pubDate>Wed, 21 Apr 2021 12:14:54 +0000</pubDate>
      <link>https://dev.to/hendr_ik/broaden-the-view-21h7</link>
      <guid>https://dev.to/hendr_ik/broaden-the-view-21h7</guid>
      <description>&lt;p&gt;We develop &lt;a href="https://www.offen.dev/?utm_source=forum"&gt;Offen&lt;/a&gt;, a fair and self hosted web analytics software that treats operators and users as equal parties. Here's what's been happening over the past eight weeks. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Widescreen&lt;/strong&gt;&lt;br&gt;
We have further optimized our display features. The Auditorium for operators now makes better use of screen real estate on desktop devices. Also, we have optimized the display of bar charts in mobile view.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Offen is now available in German, English and recently also in French.&lt;/strong&gt;&lt;br&gt;
Our consent banner and the Auditorium for operators and users are available in the respective language. If you would like to support our fair approach to web analytics by contributing Spanish, Portuguese or other language versions, please do not hesitate to &lt;a href="https://www.offen.dev/?utm_source=forum"&gt;request an invite.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;More secure&lt;/strong&gt;&lt;br&gt;
Our Docker image of the application are so far running as &lt;code&gt;root.&lt;/code&gt; This would theoretically give the possibility to inject malicious code into Offen.&lt;br&gt;
&lt;em&gt;This did not happen in any Offen version.&lt;/em&gt; But to fix this possible vulnerability, all images published from now on will run the application as a non-privileged &lt;code&gt;offen&lt;/code&gt; user.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Coming up&lt;/strong&gt;&lt;br&gt;
We want to present Offen and the idea of fair data transfer behind it to a professional audienc. Recommendations for relevant talks and conferences worldwide are very welcome. Got something in mind that we should apply for?¬†&lt;a href="https://www.offen.dev/?utm_source=forum"&gt;Let us know.&lt;/a&gt;&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>webdev</category>
      <category>opensource</category>
      <category>privacy</category>
    </item>
    <item>
      <title>13 VSCode Extensions That Every Web Developer Should Use</title>
      <author>Programming Facts</author>
      <pubDate>Wed, 21 Apr 2021 12:08:37 +0000</pubDate>
      <link>https://dev.to/programmingfac1/13-vscode-extensions-that-every-web-developer-should-use-474k</link>
      <guid>https://dev.to/programmingfac1/13-vscode-extensions-that-every-web-developer-should-use-474k</guid>
      <description>&lt;p&gt;Almost every Web-Developer knows what VSCode is and why is it so important to use its extensions, they help us to debug our code, make it more readable and prettier, and just add more useful features to our workspace&lt;br&gt;
Of course, there‚Äôs not every useful extension, however, I have added 13 extensions without which I just can‚Äôt live.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Auto Close Tag
It‚Äôs one of the most important extensions, As you may have noticed from the title, it automatically adds a close tag that you wanted to write. You don‚Äôt need any command to activate this extension&lt;/li&gt;
&lt;li&gt;Auto Rename tag
When you want to change your  tag to &lt;a&gt; you just will need to change the first(opening) tag and the second will change automatically&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Beautify
The function of it is straightforward‚Äî when you have an ugly file without any ‚Äúspaces‚Äù and ‚Äútabs‚Äù, where every tag goes right after earlier, beautify will really help you&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Read More :: &lt;a href="https://cmsinstallation.blogspot.com/2021/03/13-vscode-extensions-that-every-web.html"&gt;https://cmsinstallation.blogspot.com/2021/03/13-vscode-extensions-that-every-web.html&lt;/a&gt;&lt;/p&gt;

</description>
      <category>programming</category>
      <category>webdev</category>
      <category>php</category>
      <category>design</category>
    </item>
    <item>
      <title>E-commerce modules worth extracting in the code</title>
      <author>Andrzej Krzywda</author>
      <pubDate>Wed, 21 Apr 2021 11:58:36 +0000</pubDate>
      <link>https://dev.to/andrzejkrzywda/e-commerce-modules-worth-extracting-in-the-code-1a57</link>
      <guid>https://dev.to/andrzejkrzywda/e-commerce-modules-worth-extracting-in-the-code-1a57</guid>
      <description>&lt;p&gt;When you work on a non-trivial e-commerce application the complexity is usually, well non-trivial too.&lt;/p&gt;

&lt;p&gt;E-commerce is one of this kind of apps, where just following a CRUD approach may not be enough.&lt;/p&gt;

&lt;p&gt;Here is a list of modules (definitely not a full list) that might be worth having as separate, in order to avoid coupling.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ordering"&gt;
  &lt;/a&gt;
  Ordering
&lt;/h2&gt;

&lt;p&gt;This is a classic one. If you have no modules in your e-commerce code then you can call it Ordering anyway, because that's the most important. &lt;br&gt;
Some possible operations (commands) here:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;initiate an order (usually with some items from the cart)&lt;/li&gt;
&lt;li&gt;confirm the order (so that other modules are aware)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#ecommerce"&gt;
  &lt;/a&gt;
  Ecommerce
&lt;/h2&gt;

&lt;p&gt;I recently like to call this Ecommerce - a module which contains the logic around the cart concept.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#catalog"&gt;
  &lt;/a&gt;
  Catalog
&lt;/h2&gt;

&lt;p&gt;This module allows adding products to the offer visible to the clients.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#inventory"&gt;
  &lt;/a&gt;
  Inventory
&lt;/h2&gt;

&lt;p&gt;Keep track of how many items are left. Sometimes booking too.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pricing"&gt;
  &lt;/a&gt;
  Pricing
&lt;/h2&gt;

&lt;p&gt;Pricing is usually not as trivial as just assigning a price to one product. USually we have a whole range of pricing strategies that change over time. It's nice to encapsulate them and keep it separate from other modules.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#payments"&gt;
  &lt;/a&gt;
  Payments
&lt;/h2&gt;

&lt;p&gt;Keep track of what was paid for. Sometimes your order will be paid in multiple payments, sometimes it's not fully paid. Sometimes you pay for multiple orders with one payment - hadle this logic here.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#sample-application-with-ecommerce-modules"&gt;
  &lt;/a&gt;
  Sample application with ecommerce modules
&lt;/h1&gt;

&lt;p&gt;I'm working on sample application which shows some of those concepts. It started as a ordering system, but now it's in a process of becoming an e-commerce app too.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/RailsEventStore/cqrs-es-sample-with-res"&gt;https://github.com/RailsEventStore/cqrs-es-sample-with-res&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Are there any other modules that you like to extract in ecommerce apps? Share them in the comments :)&lt;/p&gt;

</description>
      <category>programming</category>
      <category>watercooler</category>
    </item>
    <item>
      <title>Building TikTok's record button using Framer Motion &amp; React</title>
      <author>Sam Piggott</author>
      <pubDate>Wed, 21 Apr 2021 11:51:44 +0000</pubDate>
      <link>https://dev.to/sam_piggott/building-tiktok-s-record-button-using-framer-motion-react-5e4p</link>
      <guid>https://dev.to/sam_piggott/building-tiktok-s-record-button-using-framer-motion-react-5e4p</guid>
      <description>&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/UnTBtDDyN2M"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;The TikTok record button is a deceivingly complicated UI element with some interesting moving parts, so I thought it would be perfect for a tutorial. In the guide above, we'll build a fully animated record button using nothing but React, Framer Motion (a fantastic animation library), and TypeScript.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#project-files"&gt;
  &lt;/a&gt;
  Project Files
&lt;/h2&gt;

&lt;p&gt;All the project files are available to download and use yourself over on my website, &lt;a href="https://codesnap.io/course/react-bites/tiktok-record-button"&gt;CodeSnap.io.&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#demo"&gt;
  &lt;/a&gt;
  Demo
&lt;/h2&gt;

&lt;p&gt;&lt;iframe src="https://codesandbox.io/embed/agitated-shockley-cdzuy"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#thanks"&gt;
  &lt;/a&gt;
  Thanks!
&lt;/h2&gt;

&lt;p&gt;Thanks for watching - any and all feedback is greatly appreciated, and please share it around if you think it'll be useful to anybody else. If you're interested in learning more, I've got loads more video and written content over on my website, &lt;a href="https://codesnap.io"&gt;CodeSnap.io.&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>15 Project Ideas for Web Developers üí°</title>
      <author>1nj3ct0r</author>
      <pubDate>Wed, 21 Apr 2021 11:27:18 +0000</pubDate>
      <link>https://dev.to/1nj3ct0r/15-project-ideas-for-web-developers-a96</link>
      <guid>https://dev.to/1nj3ct0r/15-project-ideas-for-web-developers-a96</guid>
      <description>&lt;p&gt;Most people think they don't know enough to start building a project ü•¥ so they decide to spend months watching or reading tutorials üòÅ However üòâ building projects improves one's programming skills because learning by building things is more efficient üòÑ&lt;/p&gt;

&lt;p&gt;To help you overcome tutorial hell üôÇüôÉ I've curated 15 programming project ideas for web developers üë®‚Äçüíª This article includes project ideas for frontend / backend and full-stack web developers üòé&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#frontend"&gt;
  &lt;/a&gt;
  Frontend üé®
&lt;/h2&gt;

&lt;p&gt;Here are some project ideas if you want to improve  your skills in front-end technologies üëá&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#color-guesser-game"&gt;
  &lt;/a&gt;
  Color Guesser Game üéÆ
&lt;/h3&gt;

&lt;p&gt;The &lt;strong&gt;Color Guesser Game&lt;/strong&gt; is a simple game where players have to guess the background color of a box on the page üñåÔ∏è&lt;br&gt;
The app starts by creating a series of boxes with different colors based on user input üòÅ Once the game begins üòÑ the color boxes re flipped over and their colors are hidden üë•&lt;br&gt;
In each round üòÑ the game shuffles the positions of the color boxes üôÇüôÉ After shuffling one of the colors is displayed on the screen and the player has to guess in which of the color boxes the color is displayed by clicking on it ü§î&lt;br&gt;
The player wins the game if he can guess the colors correctly üèÜ Below is a sample mockup of the app üëá&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Y2CmCC1H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/z8sTjoYUQIKz9kNomA4fXO5Aqyj_1Ei3M4H8R-e4Q4iKES0qYy-P29vxRyWJOgbihCcuISmEH1mQIogzJkzyx5RJ16BR80c2QK0XxX2L8d8LW3Mpe4AMSkOnoC4JxPTjxJer92DP" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y2CmCC1H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/z8sTjoYUQIKz9kNomA4fXO5Aqyj_1Ei3M4H8R-e4Q4iKES0qYy-P29vxRyWJOgbihCcuISmEH1mQIogzJkzyx5RJ16BR80c2QK0XxX2L8d8LW3Mpe4AMSkOnoC4JxPTjxJer92DP" alt="Color Guesser Game"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Working on this game will improve your knowledge of DOM (Document Object Model) and functions in JavaScript üòä&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#music-playlist-app"&gt;
  &lt;/a&gt;
  Music Playlist App üé∂
&lt;/h3&gt;

&lt;p&gt;If you've ever thought of creating a combined playlist of songs that you and your friends think are cool ü§© then this might be an interesting project idea for you üòâ&lt;br&gt;
In this project you can build a simple interface that allows you and anyone else to add a song to your playlist üëç  Working on this project will deepen your understanding of DOM event handlers in JavaScript and in the framework you are learning (React) üòú&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#number-guessing-game-app"&gt;
  &lt;/a&gt;
  Number Guessing Game App üî¢
&lt;/h3&gt;

&lt;p&gt;The numbers guessing game app is another interesting idea for those who want to expand their front-end development skills üë®‚Äçüíª&lt;/p&gt;

&lt;p&gt;The app will provide a number between a certain minimum number and a certain maximum number ü§î For example üëâ the random number between 1 and 10 is 6 üòÅ&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/3o6Mbb2RepU5Pn54fC/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/3o6Mbb2RepU5Pn54fC/giphy.gif" alt="Number Guessing Game"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The user is then supposed to guess this number within a certain number of tries üòé The player loses the game if he is not correct after the given number of tries üí™&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#character-count-app"&gt;
  &lt;/a&gt;
  Character Count App
&lt;/h3&gt;

&lt;p&gt;If you've used Twitter before you will know that Twitter has a maximum number of characters for each tweet üëç For this project idea you will build something similar ü§î&lt;br&gt;
For this app idea you will provide a text box where a user can type something ‚å®Ô∏è As the user types üëâ the number of characters typed so far will be displayed on the screen üñ•Ô∏è But much more than that ‚¨ÜÔ∏è the background color of the app changes based on the number of characters below üëá&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;0 - 10: black
11 - 20: red
21 - 30: yellow
Above 31: green
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This project idea deepens your knowledge of events in JavaScript üë©‚Äçüíª build your algorithms and helps expand your knowledge of CSS üé®&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#image-slider-app"&gt;
  &lt;/a&gt;
  Image Slider App üñºÔ∏è
&lt;/h3&gt;

&lt;p&gt;This project idea is about building an image slider app ü§î kind of like the image sliders on Instagram üòÅ The app will have a list of images that change after a number of seconds with a sliding transition üëç something similar to a carousel&lt;/p&gt;

&lt;p&gt;For those interested in making this more complex üëâ you can implement directional arrows buttons to allow the user to move forward or backward instead of following the default transition ü§©&lt;/p&gt;

&lt;p&gt;This is a fascinating project idea because you will learn a lot about asynchronous operations in JavaScript like setInterval while also strengthening your CSS skills through the implemented transitions üôÇüôÉ&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#backend"&gt;
  &lt;/a&gt;
  Back-end üîô
&lt;/h2&gt;

&lt;p&gt;For those who are more interested in project ideas that leverage back-end technologies üëâ here are a couple&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#simple-web-crawler"&gt;
  &lt;/a&gt;
  Simple Web Crawler üåê
&lt;/h3&gt;

&lt;p&gt;A web crawler is an application that indexed the content of page üòÅ This project idea is about creating a simple web crawler service that takes a page URL and returns the HTML markup of that page&lt;/p&gt;

&lt;p&gt;This project is not language specific and can be implemented in any language from Node.JS to Python ü§î Working on this project will help you deepen your knowledge of building APIs and services ü§©&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#anagram-generator-api"&gt;
  &lt;/a&gt;
  Anagram Generator API üòÅ
&lt;/h3&gt;

&lt;p&gt;An anagram is a word or phrase formed by rearranging the letters of another word ü§î For example üëâ priest and stripes are anagrams because each word is formed by rearranging the letters of the other&lt;/p&gt;

&lt;p&gt;The Anagram Generator API takes a source word such as priest and returns all the anagrams for that word&lt;/p&gt;

&lt;p&gt;Working on this project deepens your knowledge of creating services and strengthens your knowledge of algorithms üôÇüôÉ&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#covid-stats-api"&gt;
  &lt;/a&gt;
  Covid stats API üò∑
&lt;/h3&gt;

&lt;p&gt;This project is about using existing data about the COVID-19 and creating a Restful endpoint to serve that data &lt;/p&gt;

&lt;p&gt;Working on this project will reinforce your knowledge of what makes a good API while also teaching you how to define the structure of an API response üòÅ&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#random-name-generator-api"&gt;
  &lt;/a&gt;
  Random Name Generator API üòé
&lt;/h3&gt;

&lt;p&gt;A simple API to generate a random name each time the API is called üòÅ This service can be useful for people who want to name their newborn children&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#browser-version-api"&gt;
  &lt;/a&gt;
  Browser Version API üåê
&lt;/h3&gt;

&lt;p&gt;This project idea is about building a back-end service that provides detailed browser information about the browser that initiated the request üòÉ&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#fullstack"&gt;
  &lt;/a&gt;
  Full-Stack üè¢
&lt;/h2&gt;

&lt;p&gt;Sometimes you don't want to limit your learning to just front-end or just the back-end üëâ If you want to expand your skills in both the front-end and the back-end ü§î below are a number of interesting project ideas üëá&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#simple-chat-messaging-app"&gt;
  &lt;/a&gt;
  Simple Chat Messaging App üí¨
&lt;/h3&gt;

&lt;p&gt;An interesting project you can work on to improve your front-end and back-end skills is a chat messaging app üòÅ&lt;/p&gt;

&lt;p&gt;It doesn't have to have sophisticated features like image sharing but it should provide the ability for one user to message another user üëç&lt;/p&gt;

&lt;p&gt;The ability to implement this offers many learning opportunities in a variety of technologies üë©‚Äçüíª including WebSockets&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#travel-app-bucket-list"&gt;
  &lt;/a&gt;
  Travel app Bucket List üßæ
&lt;/h3&gt;

&lt;p&gt;If you have a list of places you'd like to travel to ü§î it might be a good idea to work on this project which is basically an app that allows you to add a new place of interest to your bucket list&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#motivational-quotes-app"&gt;
  &lt;/a&gt;
  Motivational Quotes app üí¨
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/OZbGrdp7FiDiE/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/OZbGrdp7FiDiE/giphy.gif" alt="Quote"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We all need some motivation in our lives üòÅ So building an app that send you and your friends random motivational quotes is golden üò≤ You should definitely try to build this&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#twitter-clone"&gt;
  &lt;/a&gt;
  Twitter clone üïäÔ∏è
&lt;/h3&gt;

&lt;p&gt;I bet you already know Twitter üòé Building a Twitter clone is a great way to improve your front-end and back-end skills&lt;/p&gt;

&lt;p&gt;You don't have to include all the features of Twitter in this clone üòÅ Just the basic functionalities of Twitter is a perfect way to improve your web development skills&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#project-management-dashboard"&gt;
  &lt;/a&gt;
  Project Management Dashboard üôÇüôÉ
&lt;/h3&gt;

&lt;p&gt;The idea here is to build a tool that helps you manage projects üòé I think this is an interesting idea because you can benefit from using it to manage your projects as well&lt;/p&gt;

&lt;p&gt;Working on this project will help you understand how to implement CRUD and also improve your CSS skills since you will have to create a dashboard&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;I hope you found an interesting project idea in this article üòÅ&lt;/p&gt;

&lt;p&gt;&lt;a href="https://hashnode.com/post/15-project-ideas-for-web-developers-ckmg1p6vc00ialds1cmtl870c"&gt;&lt;em&gt;Also Published on HashNode üîó&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>idea</category>
      <category>web</category>
      <category>programming</category>
      <category>project</category>
    </item>
    <item>
      <title>Basic concepts of Android-Part 1</title>
      <author>Chetan</author>
      <pubDate>Wed, 21 Apr 2021 11:23:40 +0000</pubDate>
      <link>https://dev.to/csj5483/basic-concepts-of-android-part-1-1eb7</link>
      <guid>https://dev.to/csj5483/basic-concepts-of-android-part-1-1eb7</guid>
      <description>&lt;p&gt;In this article, we are going to discuss some concepts of Android that you might face in your interview or during the project.&lt;/p&gt;

&lt;h2&gt;Package Name:&lt;/h2&gt;

&lt;p&gt;The package name is used for unique identification for your application.&lt;br&gt;
Android uses the package name to determine if the application has been installed or not. Generally, the package name of an app is in the format&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;domian.company.appname
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here domain portion is the domain extension like¬†.com,¬†.org, or¬†.eu. The company portion is generally the name of the developer's company and appname describe the app itself. Appname could be of a single word or multiple words separated by a dot. For example&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;com.google.android.apps.photos
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above code snippet:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;com is the domain&lt;/li&gt;
&lt;li&gt;google is the developer's company name&lt;/li&gt;
&lt;li&gt;android.app.photos is the app name&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Minimum SDK:&lt;/h2&gt;

&lt;p&gt;It is an integer that defines the minimum API level(version of the Android operating system) required to run your application. If the system's API Level is lower than the value specified in this attribute, then the Android system will prevent the user from installing the application.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gmLZYfY---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/in0mcpfl9ijq8cqgk85u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gmLZYfY---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/in0mcpfl9ijq8cqgk85u.png" alt="image"&gt;&lt;/a&gt; &lt;br&gt;
In the above image, we had selected the Minimum SDK as 27 and Android Studio shows us that it will run on 53.5% of devices.&lt;/p&gt;

&lt;h2&gt;Activity:&lt;/h2&gt;

&lt;p&gt;Activity class is one of the most important parts of Android. No matter how small an app is, it will have at least an Activity. An Android activity is one screen of the Android app's user interface. An app can have multiple activities means multiple screens. Android activity is the subclass of ContextThemeWrapper class.¬†&lt;br&gt;
Every activity contains a layout, which has a user interface to interact with the user. In this layout, we define what a user will see when (s)he open this activity and in Java/Kotlin we define the functionality of the activity.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BJUFCnM9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/obip7fdtkg1vsahgf8lj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BJUFCnM9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/obip7fdtkg1vsahgf8lj.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the above image, we had setContentView method and in this, we had set R.layout.activity_main as the layout for this activity.&lt;/p&gt;

&lt;h5&gt;Activity Life¬†Cycle:&lt;/h5&gt;

&lt;p&gt;Unlike other programming languages where &lt;strong&gt;main()&lt;/strong&gt; method is the entry point of the program, the android operating system initiates the code in an Activity instance by invoking specific callback methods that correspond to specific stages of its lifecycle. In the below diagram we can see the life cycle of an Activity.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LH321E-1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n6rcpidtoq70hlawcodk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LH321E-1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n6rcpidtoq70hlawcodk.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;b&gt;onCreate()-&lt;/b&gt; This is the first callback and called when the activity is first created.&lt;/li&gt;
&lt;li&gt;
&lt;b&gt;onStart()-&lt;/b&gt; This is called when the activity becomes visible to the user.&lt;/li&gt;
&lt;li&gt;
&lt;b&gt;onResume()-&lt;/b&gt; This is called when the user starts interacting with the application.&lt;/li&gt;
&lt;li&gt;
&lt;b&gt;onPause()-&lt;/b&gt; The paused activity does not receive user input and cannot execute any code and called when the current activity is being paused and the previous activity is being resumed.&lt;/li&gt;
&lt;li&gt;
&lt;b&gt;onStop()-&lt;/b&gt; This callback is called when the activity is no longer visible.&lt;/li&gt;
&lt;li&gt;
&lt;b&gt;onDestroy()-&lt;/b&gt; This callback is called before the activity is destroyed by the system.&lt;/li&gt;
&lt;li&gt;
&lt;b&gt;onRestart()-&lt;/b&gt; This callback is called when the activity restarts after stopping it.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Service:&lt;/h2&gt;

&lt;p&gt;A service is a component that runs in the background to perform long-running operations such as playing music, handle network transactions, interacting with content providers without needing to interact with the user and it works even if the application is destroyed. It doesn't have any UI (user interface). The android.app.Service is a subclass of ContextWrapper class.&lt;/p&gt;

&lt;p&gt;A service can essentially take two states:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;b&gt;Started:&lt;/b&gt; A service is started when a component (like activity) calls the startService() method, now it runs in the background indefinitely. It is stopped by the stopService() method. The service can stop itself by calling the stopSelf() method.&lt;/li&gt;

&lt;li&gt;
&lt;b&gt;Bound:&lt;/b&gt; A service is bound when another component (e.g. client) calls the bindService() method. A bound service offers a client-server interface that allows components to interact with the service, send requests, get results, and even do so across processes with interprocess communication (IPC). The client can unbind the service by calling the unbindService() method.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CAK2IBGD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jbkl0kf57nzq3i23077s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CAK2IBGD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jbkl0kf57nzq3i23077s.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
 While creating a service following are the most important callback methods that you should override:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;b&gt;onStartCommand()-&lt;/b&gt; The system calls this method when another component, such as an activity, requests that the service be started, by invoking startService(). When this method executes, the service is started and can run in the background indefinitely. If you implement make sure to stop the service when its work is done, by calling stopSelf() or stopService() methods.&lt;/li&gt;
&lt;li&gt;
&lt;b&gt;onBind()-&lt;/b&gt; The system calls this method when another component wants to bind with the service by calling bindService(). If you implement this method, you must provide an interface that clients use to communicate with the service, by returning an IBinder object. You must always implement this method, but if you don't want to allow binding, then you should return null.
&lt;/li&gt;
&lt;li&gt;
&lt;b&gt;onUnbind()-&lt;/b&gt; The system calls this method when all clients have disconnected from a particular interface published by the service.&lt;/li&gt;
&lt;li&gt;
&lt;b&gt;onRebind()-&lt;/b&gt; The system calls this method when new clients have connected to the service after it had previously been notified that all had disconnected in its onUnbind(Intent).&lt;/li&gt;
&lt;li&gt;
&lt;b&gt;onCreate()-&lt;/b&gt; The system calls this method when the service is first created using onStartCommand() or onBind(). This call is required to perform a one-time set-up.&lt;/li&gt;
&lt;li&gt;
&lt;b&gt;onDestroy()-&lt;/b&gt; The system calls this method when the service is no longer used and is being destroyed. Your service should implement this to clean up any resources such as threads, registered listeners, receivers, etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We will continue this in the next article.&lt;br&gt;
Happy Learning!&lt;/p&gt;

</description>
      <category>android</category>
      <category>computerscience</category>
      <category>programming</category>
      <category>devops</category>
    </item>
  </channel>
</rss>
