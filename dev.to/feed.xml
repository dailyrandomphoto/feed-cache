<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Dynamic Classes and Styles</title>
      <author>Lakshya Singh</author>
      <pubDate>Wed, 23 Jun 2021 08:31:45 +0000</pubDate>
      <link>https://dev.to/king11/dynamic-classes-and-styles-3lff</link>
      <guid>https://dev.to/king11/dynamic-classes-and-styles-3lff</guid>
      <description>&lt;p&gt;In this article, I aim to provide a not so new but also not so known way of adding &lt;strong&gt;dynamic features&lt;/strong&gt; into your application, ensuring that you can achieve what you wish to simply &lt;strong&gt;without&lt;/strong&gt; writing &lt;em&gt;boilerplate code&lt;/em&gt; and meddling with &lt;em&gt;string concatenation&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;When writing Dynamic UI Components that respond to user actions and events, we require methods to respond to these events by translating them into our DOM. Change in DOM is usually achieved by changing &lt;em&gt;styles&lt;/em&gt; and &lt;em&gt;classes&lt;/em&gt; based on certain &lt;strong&gt;reactive data&lt;/strong&gt; that we have in our javascript. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5mW_2s21--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yydg0rqygblvb6ptde80.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5mW_2s21--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yydg0rqygblvb6ptde80.png" alt="old methods work but we can do better"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;While we can certainly do string concatenation, calculate a string and then bind a string to class or style... this method is error-prone and cumbersome at times to deal with. That's where Vue.js's clean suite of enhancements come into vue &lt;em&gt;( french for 'view' )&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#quick-recap-data-binding"&gt;
  &lt;/a&gt;
  Quick Recap Data Binding
&lt;/h2&gt;

&lt;p&gt;If you aren't familiar with what data binding is....it's essentially binding any attribute of an element in your &lt;code&gt;template&lt;/code&gt; to the data available in your &lt;code&gt;script&lt;/code&gt; tag, which can be props,  data or computed properties.&lt;/p&gt;

&lt;p&gt;Data binding is one of the most elegant features of Vue.js because it provides reactive data binding with a straightforward syntax using &lt;code&gt;v-bind&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; 
  &lt;span class="na"&gt;v-bind:class=&lt;/span&gt;&lt;span class="s"&gt;"dynamicClass"&lt;/span&gt;
&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Hello World!
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A shorthand for data binding is but just using &lt;code&gt;:&lt;/code&gt; and then the attribute name, which I guess anyone would prefer using more.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; 
  &lt;span class="na"&gt;:class=&lt;/span&gt;&lt;span class="s"&gt;"dynamicClass"&lt;/span&gt;
&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Hello World!
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's suppose that the above class is not &lt;em&gt;a once initialized and stays the same&lt;/em&gt; kind of class it changes based on user input, so we have to use a &lt;code&gt;computed&lt;/code&gt; property or &lt;code&gt;watch&lt;/code&gt; to make changes to our &lt;code&gt;dynamicClass&lt;/code&gt; variable. So things will start to look like this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;changingBoolean&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;computed&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;dynamicClass&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="na"&gt;changingBoolean&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;text-center text-lg&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;text-justify text-xl&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Looking at the code above we can see that for a simple switch in classes based on a variable we had to write so much code. So simply creating a dynamic class won't work.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VUIPGl8t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uhrk2i5plh0gmifib1bi.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VUIPGl8t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uhrk2i5plh0gmifib1bi.gif" alt="we don't do simple data binding"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#array-syntax-for-classes"&gt;
  &lt;/a&gt;
  Array Syntax for Classes
&lt;/h2&gt;

&lt;p&gt;Enter array syntax which makes the previous task less cumbersome and also keeps it DRY at times when needed.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;article&lt;/span&gt; 
  &lt;span class="na"&gt;:class=&lt;/span&gt;&lt;span class="s"&gt;"[changingBoolean : ? 'text-center' : 'text-justify']"&lt;/span&gt;
&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    Hello World!
&lt;span class="nt"&gt;&amp;lt;/aside&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This looks so much cleaner than the previous method right ≧◠‿◠≦✌. But it's an array so we can add multiple values into it too :). Now we can toggle the text alignment class while flex and width will always be present.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;article&lt;/span&gt; 
  &lt;span class="na"&gt;:class=&lt;/span&gt;&lt;span class="s"&gt;"[changingBoolean : ? 'text-center' : 'text-justify', 'flex w-2']"&lt;/span&gt;
&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    Hello World!
&lt;span class="nt"&gt;&amp;lt;/aside&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#object-syntax-for-classes"&gt;
  &lt;/a&gt;
  Object Syntax for Classes
&lt;/h2&gt;

&lt;p&gt;Sometimes we just want to add toggle a single class on/off when a boolean is &lt;code&gt;true&lt;/code&gt; and nothing when it's &lt;code&gt;false&lt;/code&gt;. Using ternary operator it will look as below&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;changingBoolean&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;text-center&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt; &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;flex w-2&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can do better, enter &lt;strong&gt;object syntax&lt;/strong&gt; because eventually, everything is an object in javascript so why not.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/gkEwPJyg6CxtVQ5rzK/giphy-downsized.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/gkEwPJyg6CxtVQ5rzK/giphy-downsized.gif" alt="I object as in javascript everything is an object"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;text-center&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;changingBoolean&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;flex w-2&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can also bind an object directly to &lt;em&gt;class&lt;/em&gt; instead of keeping it inside an array and it also supports multiple togglable classes just like an array.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;article&lt;/span&gt;
  &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"absolute"&lt;/span&gt;
  &lt;span class="na"&gt;:class=&lt;/span&gt;&lt;span class="s"&gt;"{ active: isActive, 'text-xl': largeText }"&lt;/span&gt;
&lt;span class="nt"&gt;&amp;gt;&amp;lt;/article&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;active&lt;/code&gt; is a simple string variable for class whereas &lt;code&gt;isActive&lt;/code&gt; and &lt;code&gt;largeText&lt;/code&gt; are boolean variables. Also if you noticed &lt;em&gt;class&lt;/em&gt; and &lt;em&gt;&lt;code&gt;:class&lt;/code&gt;&lt;/em&gt; can simultaneously exist on a single element ツ&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#passing-in-objects"&gt;
  &lt;/a&gt;
  Passing in Objects
&lt;/h3&gt;

&lt;p&gt;We can also pass in reactive &lt;code&gt;array/object&lt;/code&gt; stored in our &lt;code&gt;data&lt;/code&gt; or &lt;code&gt;computed&lt;/code&gt; to classes. This can be a more powerful pattern at times when you have to do multiple checks and toggling which when accommodated into HTML won't look good and readable.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;nav&lt;/span&gt; &lt;span class="na"&gt;:class=&lt;/span&gt;&lt;span class="s"&gt;"classObject"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/nav&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#modifying-child-classes"&gt;
  &lt;/a&gt;
  Modifying Child Classes
&lt;/h2&gt;

&lt;p&gt;Suppose we have a nice and shiny icon element we have specified several classes to it which works for most cases so we didn't bother making it a prop. But a time came when we had to change its colour in that case we want to pass down a new class to our child.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;my-icon&lt;/span&gt;
  &lt;span class="na"&gt;:class=&lt;/span&gt;&lt;span class="s"&gt;"text-blue-600"&lt;/span&gt;
&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now the &lt;code&gt;:class&lt;/code&gt; will be appended at the end of the class inside of our component's parent. We can obviously also send in a simple &lt;code&gt;_class_&lt;/code&gt; too.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#array-and-object-syntax-for-styles"&gt;
  &lt;/a&gt;
  Array and Object Syntax for Styles
&lt;/h2&gt;

&lt;p&gt;The array and object syntax for classes and style looks exactly identical except for a very minor change. It's not about the truthiness of variables anymore it's about assigning them to the right CSS property.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;nav&lt;/span&gt; 
&lt;span class="na"&gt;:style=&lt;/span&gt;&lt;span class="s"&gt;"{ marginTop: marginTop + 'px', backgroundColor: infoColor }"&lt;/span&gt;
&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Doge Coin
&lt;span class="nt"&gt;&amp;lt;/nav&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above example, we are assigning the &lt;code&gt;color&lt;/code&gt; property a dynamic value and a similar operation for &lt;code&gt;fontSize&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;We can write properties as kebab case too just ensure to wrap them in quotes&lt;/li&gt;
&lt;li&gt;It can be more powerful to directly pass in an object to &lt;code&gt;style&lt;/code&gt; which is a more readable and cleaner method.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The purpose for array syntax in style reduces to allowing us to pass in multiple objects &lt;em&gt;( Duhhh that's what arrays do right :P )&lt;/em&gt; for style as passing a string to style works won't make much sense in the special syntax.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;nav&lt;/span&gt; 
&lt;span class="na"&gt;:style=&lt;/span&gt;&lt;span class="s"&gt;"[marginObject, backgroundObject]"&lt;/span&gt;
&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Doge Coin
&lt;span class="nt"&gt;&amp;lt;/nav&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#bonus-treats"&gt;
  &lt;/a&gt;
  Bonus Treats
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/ZAXpoT2WEYO3u/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/ZAXpoT2WEYO3u/giphy.gif" alt="Bonus treats extra vue knowledge"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Some CSS properties require us to use vendor prefixes. Vue will apply them for us implicitly but if you want to be explicit you can pass in multiple values for a single property through object syntax and providing an array of values. Vue will only render the last value in the array which the browser supports.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;ul&lt;/span&gt; &lt;span class="na"&gt;:style=&lt;/span&gt;&lt;span class="s"&gt;"{ display: ['-webkit-box', '-ms-flexbox', 'flex'] }"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Thanks for reading! :). Please share your thoughts about the array and object syntax would you prefer them over strings?&lt;/p&gt;

&lt;p&gt;Reach out to me on &lt;a href="https://twitter.com/1108King"&gt;Twitter&lt;/a&gt; to share your feedback or for any queries. I'd be more than happy to help!&lt;/p&gt;

</description>
      <category>vue</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>css</category>
    </item>
    <item>
      <title>Damn Vulnerable GraphQL Application</title>
      <author>Tomek Poniatowicz</author>
      <pubDate>Wed, 23 Jun 2021 08:24:42 +0000</pubDate>
      <link>https://dev.to/graphqleditor/damn-vulnerable-graphql-application-1jf5</link>
      <guid>https://dev.to/graphqleditor/damn-vulnerable-graphql-application-1jf5</guid>
      <description>&lt;p&gt;Usually in these when I write about some library or app I try to highlight its strengths. Well this time I’m going to do the complete opposite and talk about weaknesses. Rest assured it won't be some scorching review, because we’re looking at &lt;a href="https://github.com/dolevf/Damn-Vulnerable-GraphQL-Application"&gt;Damn Vulnerable GraphQL Application&lt;/a&gt; where weaknesses are completely intentional and exploiting them is the whole point.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-why-and-the-how"&gt;
  &lt;/a&gt;
  The Why and the How
&lt;/h2&gt;

&lt;p&gt;As for why it's fairly obvious, as GraphQL continues to grow and become more popular so too do the concerns about its vulnerabilities. After all, if you want to use it for your app you probably want it to be secure. So yes Damn Vulnerable GraphQL Application is full of weaknesses by design, it's meant to test GraphQL’s safety against various attacks. Let’s look at these types of attacks (or scenarios) you can try out:&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#denial-of-service"&gt;
  &lt;/a&gt;
  Denial of Service
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Batch Query Attack&lt;/li&gt;
&lt;li&gt;Deep Recursion Query Attack&lt;/li&gt;
&lt;li&gt;Resource Intensive Query Attack&lt;/li&gt;
&lt;li&gt;Field Duplication Attack&lt;/li&gt;
&lt;li&gt;Aliases based Attack&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#information-disclosure"&gt;
  &lt;/a&gt;
  Information Disclosure
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;GraphQL Field Suggestions&lt;/li&gt;
&lt;li&gt;GraphQL Introspection&lt;/li&gt;
&lt;li&gt;GraphiQL Interface&lt;/li&gt;
&lt;li&gt;GraphQL Field Suggestions&lt;/li&gt;
&lt;li&gt;Server Side Request Forgery&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#code-execution"&gt;
  &lt;/a&gt;
  Code Execution
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;OS Command Injection #1&lt;/li&gt;
&lt;li&gt;OS Command Injection #2&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#injection"&gt;
  &lt;/a&gt;
  Injection
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Stored Cross-Site Scripting&lt;/li&gt;
&lt;li&gt;Log spoofing / Log injection&lt;/li&gt;
&lt;li&gt;HTML Injection&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#authorization-bypass"&gt;
  &lt;/a&gt;
  Authorization Bypass
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;GraphQL Interface Protection Bypass&lt;/li&gt;
&lt;li&gt;GraphQL Query Deny List Bypass&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#other"&gt;
  &lt;/a&gt;
  Other
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;GraphQL Query Weak Password Protection&lt;/li&gt;
&lt;li&gt;Arbitrary File Write / Path Traversal&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qYLd8joe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p5g3wyrp4y058wxh44ly.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qYLd8joe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p5g3wyrp4y058wxh44ly.png" alt="Damn Vulnerable GraphQL Application"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#source-githubcomdolevfdamnvulnerablegraphqlapplication"&gt;
  &lt;/a&gt;
  Source: &lt;a href="https://github.com/dolevf/Damn-Vulnerable-GraphQL-Application"&gt;github.com/dolevf/Damn-Vulnerable-GraphQL-Application&lt;/a&gt;
&lt;/h5&gt;

&lt;h2&gt;
  &lt;a href="#safe-and-sound"&gt;
  &lt;/a&gt;
  Safe and sound
&lt;/h2&gt;

&lt;p&gt;So as you can see it provides you with a bunch of attacks you can try out against GraphQL using some pretty well known methods from DoS to directory traversal attack. It's safe because by default the application is listening on 127.0.0.1 (ie. localhost) so you don't have to be afraid someone can actually attack your app. You can change that, but because of its vulnerabilities opening it up to the internet is not advisable. On the technical side DVGA also has two operation modes, Beginner and Expert, which change the exploitation difficulty. As far as requirements go you will need some Python3 libraries for it to actually work: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Python3, &lt;/li&gt;
&lt;li&gt;Flask, &lt;/li&gt;
&lt;li&gt;Flask-SQLAlchemy,&lt;/li&gt;
&lt;li&gt;Graphene and Graphene-SQLAlchemy.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#and-also-fun"&gt;
  &lt;/a&gt;
  ...and also fun!
&lt;/h2&gt;

&lt;p&gt;At first glance it might look like something for security experts, but it's actually pretty fun to just try and poke around looking for holes. There’s no risk involved so you can actually just have some fun while learning a thing or two about the various types of vulnerabilities and attacks. So if you’re interested in app security in general or just always wanted to play hacker for a bit definitely give DVGA a spin.&lt;/p&gt;




&lt;p&gt;&lt;em&gt;A guest blog post for &lt;a href="https://blog.graphqleditor.com/"&gt;GraphQL Editor blog&lt;/a&gt; by Michał Tyszkiewicz&lt;/em&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#speed-up-your-graphql-api-development"&gt;
  &lt;/a&gt;
  Speed up your GraphQL API development
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;GraphQL Editor&lt;/strong&gt; is a supportive tool for both advanced GraphQL users as well as those taking their first steps with GraphQL APIs. Our all-in-one development environment for GraphQL will help you build, manage &amp;amp; deploy your GraphQL API much faster. &lt;strong&gt;&lt;a href="https://graphqleditor.com"&gt;Try GraphQL Editor for free!&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Xh8ZaRkh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/hz2iv2u1073dy9orexxf.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Xh8ZaRkh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/hz2iv2u1073dy9orexxf.gif" alt="New features of GraphQL Editor gif"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>graphql</category>
      <category>security</category>
      <category>webdev</category>
      <category>testing</category>
    </item>
    <item>
      <title>Top 7 Popular Npm Packages</title>
      <author>Innocent Coder</author>
      <pubDate>Wed, 23 Jun 2021 08:22:00 +0000</pubDate>
      <link>https://dev.to/innocentcoder/top-7-popular-npm-packages-45n7</link>
      <guid>https://dev.to/innocentcoder/top-7-popular-npm-packages-45n7</guid>
      <description>&lt;p&gt;Node.Js Applications Benefit From More Than A Million Open-Source Packages Available In The NPM Package Registry.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#dotenv"&gt;
  &lt;/a&gt;
  Dotenv
&lt;/h1&gt;

&lt;p&gt;.env file into process.env. storing configuration in the environment eparate from code is based on the twelve-factor app methodology.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JAzPmEY---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3gc6am7dhot6s10f1zny.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JAzPmEY---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3gc6am7dhot6s10f1zny.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#bcrypt"&gt;
  &lt;/a&gt;
  Bcrypt
&lt;/h1&gt;

&lt;p&gt;bcrypt is a library that help youeasily hash password and compare&lt;br&gt;
the in node.js&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ClnGcBcE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1kxbvin838mt0dxt2qku.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ClnGcBcE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1kxbvin838mt0dxt2qku.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#uuid"&gt;
  &lt;/a&gt;
  Uuid
&lt;/h1&gt;

&lt;p&gt;uuid is a unique random ids values generator. it generates strong random values &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--l8dO02Lw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fzd0ufidy7k2naafek8q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--l8dO02Lw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fzd0ufidy7k2naafek8q.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#axios"&gt;
  &lt;/a&gt;
  Axios
&lt;/h1&gt;

&lt;p&gt;axios is a popular promise based http client for the browser and&lt;br&gt;
node.js&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---pzZN7fj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xvecwxm963k15muecayl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---pzZN7fj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xvecwxm963k15muecayl.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#socketio"&gt;
  &lt;/a&gt;
  Socket.Io
&lt;/h1&gt;

&lt;p&gt;socket.io enables realtime bi-directional communication between web clients and servers &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IpjSfXg5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gdhf1t8v2eqxqjrmuo9b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IpjSfXg5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gdhf1t8v2eqxqjrmuo9b.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#moment"&gt;
  &lt;/a&gt;
  Moment
&lt;/h1&gt;

&lt;p&gt;moment.js is a data library for parsing, validating, manipulating&lt;br&gt;
and formatting dates &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rnb2oRPu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n8mnellhezhj5leld3md.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rnb2oRPu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n8mnellhezhj5leld3md.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#lodash"&gt;
  &lt;/a&gt;
  Lodash
&lt;/h1&gt;

&lt;p&gt;loadsh is very useful, when working with numbers, array, objects,&lt;br&gt;
strings, etc. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---sSJwhxN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5u137dz6bpqcr1s6vdd0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---sSJwhxN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5u137dz6bpqcr1s6vdd0.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Follow on instagram for more content like this&lt;/strong&gt;:- &lt;a href="https://instagram.com/innocentcoderr/"&gt;https://instagram.com/innocentcoderr/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:-&lt;/strong&gt; visit my youtube channel for frontend tutorials&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;subscribe to my youtube channel :-&lt;/strong&gt; &lt;a href="https://www.youtube.com/channel/UCR64vQptythbJ1SmI-ub0Rg"&gt;https://www.youtube.com/channel/UCR64vQptythbJ1SmI-ub0Rg&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Resent post :-&lt;/strong&gt; &lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/innocentcoder" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RGJ5NE5F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--ICZsIDfS--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/620705/764eb964-ecd2-4875-90c2-142dfc2f639c.jpg" alt="innocentcoder"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/innocentcoder/my-secret-design-resources-27f4" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;My Secret Design Resources&lt;/h2&gt;
      &lt;h3&gt;Innocent Coder ・ Jun 11 ・ 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#design&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#discuss&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


</description>
      <category>npm</category>
      <category>node</category>
      <category>javascript</category>
      <category>programming</category>
    </item>
    <item>
      <title>4 no code code tools I actually use and love as a developer</title>
      <author>Budibase</author>
      <pubDate>Wed, 23 Jun 2021 08:20:14 +0000</pubDate>
      <link>https://dev.to/budibase/4-no-code-code-tools-i-actually-use-and-love-as-a-developer-4lk4</link>
      <guid>https://dev.to/budibase/4-no-code-code-tools-i-actually-use-and-love-as-a-developer-4lk4</guid>
      <description>&lt;p&gt;No code and low code platforms will not replace developers. And I vehemently disagree with the following article/statement:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;'80% of tech could be built outside IT by 2024, thanks to low-code tools' &lt;br&gt;
&lt;a href="https://venturebeat.com/2021/06/14/80-of-tech-could-be-built-outside-it-by-2024-thanks-to-low-code-tools/"&gt;Venture Beat&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The tools that promote this balderdash are misdirected, and generally out-of-touch with the development ecosystem.&lt;/p&gt;

&lt;p&gt;On the other hand, the following 4 no code and low code tools are major productivity boosts and help me, as a developer, produce more in less amount of time. In some cases, the quality of my output has increased too. These tools, from using their products, reading their materials and engaging with their communities, are developer-led with an ambition of facilitating, accelerating and improving the developer experience. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;It's not about replacing the dev experience, it's about augmenting it.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Moving on, let me present to you the 4 no-code / low-code tools I actually use and love as a developer:&lt;/p&gt;







&lt;h2&gt;
  &lt;a href="#budibase"&gt;
  &lt;/a&gt;
  Budibase
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OV9XGWz7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d9fziylxhh2y7kmms81o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OV9XGWz7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d9fziylxhh2y7kmms81o.png" alt="Budibase"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Budibase is an open source low code platform for building internal tools / CRUD apps in minutes. Since its release into beta ~6 months ago, it's amassed 3.8k Github stars, and 50,000 downloads.&lt;/p&gt;

&lt;p&gt;Budibase differs from other low code platforms in a number of ways:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It has a built-in database&lt;/li&gt;
&lt;li&gt;It offers a simple, streamlined SQL experience &lt;/li&gt;
&lt;li&gt;Users can create apps with multiple screens&lt;/li&gt;
&lt;li&gt;It has an automations section allowing users to automate tedious, manual tasks&lt;/li&gt;
&lt;li&gt;Components are accessible&lt;/li&gt;
&lt;li&gt;It outputs real SPAs and the apps are 10x more performant than other platforms&lt;/li&gt;
&lt;li&gt;It outputs responsive apps&lt;/li&gt;
&lt;li&gt;It's open source and free&lt;/li&gt;
&lt;li&gt;The UI is slick and comes with dark mode 🌚&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#check-out-the-budibase"&gt;
  &lt;/a&gt;
  Check out the &lt;a href="https://github.com/Budibase/budibase"&gt;Budibase&lt;/a&gt;
&lt;/h3&gt;







&lt;h2&gt;
  &lt;a href="#n8n"&gt;
  &lt;/a&gt;
  n8n
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jkZ-yHpK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2cq17bncc004rpi98r6i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jkZ-yHpK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2cq17bncc004rpi98r6i.png" alt="n8n"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;My life would reach max CPU levels if weren't for n8n. From Discord notifications to weather updates, n8n keeps me informed and automates a plethora of manual tasks. &lt;/p&gt;

&lt;p&gt;It's license fair code and pretty straight forward to get started with. Previous to n8n, I used Integromat which is also a wonderful tool. I made the move to n8n because I found the community more helpful and the product more extensible. The user experience is very developer focused, and in my opinion, n8n is very much in the low-code category rather than no-code.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#check-out-n8n"&gt;
  &lt;/a&gt;
  Check out &lt;a href="https://github.com/n8n-io/n8n"&gt;n8n&lt;/a&gt;
&lt;/h3&gt;







&lt;h2&gt;
  &lt;a href="#voiceflow"&gt;
  &lt;/a&gt;
  Voiceflow
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4A80u_yC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/09wxidjk0cyh0tbezhf8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4A80u_yC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/09wxidjk0cyh0tbezhf8.png" alt="Voiceflow"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I love Voiceflow. As a smart speaker fanatic, I love creating games, quizzes, and other voice apps. Voiceflow is my tool of choice and allows me to design, prototype, and build all my voice apps without messing about with code.&lt;/p&gt;

&lt;p&gt;Voiceflow has a very generous free plan, which includes unlimited projects, all the core features, and community support. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#check-out-voiceflow"&gt;
  &lt;/a&gt;
  Check out &lt;a href="https://www.voiceflow.com/"&gt;Voiceflow&lt;/a&gt;
&lt;/h3&gt;







&lt;h2&gt;
  &lt;a href="#stripe-payment-links"&gt;
  &lt;/a&gt;
  Stripe payment links
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fXTALaSA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lzrxx50r48olwyjtq9hz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fXTALaSA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lzrxx50r48olwyjtq9hz.png" alt="Stripe"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I have created many, many side projects over the years as a developer. I loved building side projects, I didn't mind marketing them, but I downright detested creating contracts and payment workflows. &lt;/p&gt;

&lt;p&gt;But, thankfully, the other week, this changed. My girlfriend's sister sells these &lt;a href="https://www.etsy.com/uk/shop/jennieandcompany"&gt;cool teddy bears online&lt;/a&gt;, and asked me to setup a quick way to accept payments outside of Etsy (I'm the "IT person" in my family). I was a little lacklustre about the whole affair, until I experienced Stripe Payment Links. Wow. It is  incredible! The whole end to end project took a few mins and the UX was, as expected, seamless. If you need to sell something online, in a rush, Stripe payment links is perfecto!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#check-out-stripe-payment-links"&gt;
  &lt;/a&gt;
  Check out &lt;a href="https://stripe.com/en-gb/payments/payment-links"&gt;Stripe Payment links&lt;/a&gt;
&lt;/h3&gt;







&lt;p&gt;I hope you find this post, and the above tools helpful. I wish you the best of luck on your development journey.&lt;/p&gt;

&lt;p&gt;Thank-you ❤️&lt;/p&gt;

</description>
      <category>lowcode</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>nocode</category>
    </item>
    <item>
      <title>How did I processed half a million transactions in AWS Lambda within minutes?</title>
      <author>Mohamed Latfalla</author>
      <pubDate>Wed, 23 Jun 2021 06:45:50 +0000</pubDate>
      <link>https://dev.to/aws-builders/how-did-i-processed-half-a-million-transactions-in-aws-lambda-within-minutes-ch2</link>
      <guid>https://dev.to/aws-builders/how-did-i-processed-half-a-million-transactions-in-aws-lambda-within-minutes-ch2</guid>
      <description>&lt;p&gt;Processing data could be an intensive task, especially on the computing units as the read and write operations takes a lot of resources. Luckily, if you have the right tools, you can achieve it easily. But, is it worthy? Let’s find out.&lt;/p&gt;

&lt;p&gt;In this article I will share my experience with you on how did I achieved that. It is really simple and complicated at the same time. Why? Because of how Lambda works and what you have to think of when you “Code” because that really makes a difference.&lt;/p&gt;

&lt;p&gt;Why did I thought about it?&lt;/p&gt;

&lt;p&gt;Few years ago, my manager told me to think about a processing architecture to process BIG volumes of records but not that heavy operations. Like 800k rows of data, with 16 columns, that the amount of work needs to be done over each row isn’t complicated. So, Event-Driven Architecture!!&lt;/p&gt;

&lt;p&gt;I went through a lot of issues on how to deal with the limited resources in Lambda and how to deal with my records dropping because of timing out and OS errors. S3 was another story also to learn how to tune it for my use-case. A dear friend who works as senior consultant in AWS Bahrain helped me getting some tools in place to achieve this promising idea. It was one of the best experiences I ever got dealing with AWS resources.&lt;/p&gt;

&lt;p&gt;Enough talking lets get some diagram in place..&lt;/p&gt;

&lt;p&gt;Solution Digram:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vs20iKcX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/up13okhe5haad4opreit.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vs20iKcX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/up13okhe5haad4opreit.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Diagram looks scary? Trust me, it isn’t.&lt;/p&gt;

&lt;p&gt;Let me break it down for you in some steps:&lt;/p&gt;

&lt;p&gt;1- Initiate the process:&lt;/p&gt;

&lt;p&gt;Because I’m adopting Serverless architecture, it means Event-Driven events that if something happened, things will act based on it and the results will trigger another actions, till the end of the process.&lt;/p&gt;

&lt;p&gt;So, in our case is S3 Put request. When we upload the file into S3, it will put the file inside a bucket and when the file fully uploaded into it, Lambda will get triggered with S3 payload. Our first step just got finished. Whats next?&lt;/p&gt;

&lt;p&gt;2- Clean data:&lt;/p&gt;

&lt;p&gt;Because we got a csv file, some columns and rows could contain spaces, some special characters that MIGHT break your code. So, clean it up.&lt;/p&gt;

&lt;p&gt;Cleaning these records will prepare it to be ready for insertion. But, since we have a lot of records and the function might fail, how to track what was added and what left over?&lt;/p&gt;

&lt;p&gt;3- Add clean data into a queue:&lt;/p&gt;

&lt;p&gt;We will add the cleaned records into a queue. The reason is to track what has been added and what did not got added. Basically, SQS will act as an organizer. It will send small batches into Lambda, Lambda will add it into DynamoDB, then it will return success message to SQS to remove it from the queue.&lt;/p&gt;

&lt;p&gt;What will happen in case of failed record is SQS will retry 3 times, as per my configuration, to try insert operation. If these 3 tries failed, then it will move it into Dead Letter Queue (DLQ) which is another SQS queue that have the failed records. Then, you can debug why these records never make it into DynamoDB and can be processed again or even reject it.&lt;/p&gt;

&lt;p&gt;4- DynamoDB:&lt;/p&gt;

&lt;p&gt;Because we are trying to process massive chunks of data, we need some sort of Database that can handle the extreme load or records. DynamoDB solves this issue. There were a lot of experiments on how to handle the number of records and how to behave with the limited read/write throughput as write can handle 1kb data per unit. So, DynamoDB on-demand solve the issue.&lt;/p&gt;

&lt;p&gt;As per AWS documentation, using on-demand DynamoDB throughput is the option when you cannot predict your workload. Because it will prepare the max throughput just in case its needed.&lt;/p&gt;

&lt;p&gt;We moved the records from csv to DynamoDB, then what?&lt;/p&gt;

&lt;p&gt;5- Stream records to SQS:&lt;/p&gt;

&lt;p&gt;DynamoDB is really good event executer for Lambda. When you enable Stream, you can specify a Lambda function that react to your passed payloads from it. The good thing is you need to act based on type of record. We are dealing now with the newly added records. So, when we verify the tag, we add the record into another SQS.&lt;/p&gt;

&lt;p&gt;The reason for this queue is the consistency of records delivery. You are adding the record once, capture it and add it into the queue so you can deal with it. If not, then you have to scan the table to get unprocessed records and process them. Why the hassle? Let the queue deal with it.&lt;/p&gt;

&lt;p&gt;6- Process data:&lt;/p&gt;

&lt;p&gt;We reached the latest stages of record lifecycle in this architecture. When it reaches the Process Queue, it pass the records in batches, process them, and then pass them to another queue. As I clarified earlier, for consistency purposes.&lt;/p&gt;

&lt;p&gt;7- Update the processed record:&lt;/p&gt;

&lt;p&gt;Finally, the record will be grabbed from the Finished queue and passed into the Lambda function that will update the record with the processed information. If records failed to be passed, DLQ will gather them for your further debugging and actions.&lt;/p&gt;

&lt;p&gt;challenges:&lt;/p&gt;

&lt;p&gt;These points seems to be a straight-forward scenario, BUT, its not. Let me walk you through some problems and how it got solved.&lt;/p&gt;

&lt;p&gt;1- Lambda Lambda Lambda:&lt;/p&gt;

&lt;p&gt;Lambda is the key player here, we have limited time to execute the logic in your code. How can you insure the records were red from the file, cleaned, and added into the queue? Its hard but what you will need is speed. I code in Python and I used Multiprocessing library to speed things up. I used Multiprocessing Process function to use every single possible processing unit in Lambda. This action made my process to clean (in some tests) 558k transaction in 1:30 min! It was really fast. Again, it is not straight-forward scenario. Lambda can handle around 500 process when you allocate the max memory. Any other process will raise “OS Error 38: too many files open”. Why did I faced this issue? Because I joined all running processes and it was not closing finished processes. So, I run half the batch and loop over the running processes. If it finished, I force it to close. Problem solved…&lt;/p&gt;

&lt;p&gt;2- Keep an eye on CloudWatch:&lt;/p&gt;

&lt;p&gt;I made a big mistake by passing event variable into CloudWatch even when I was running the big batches. This resulted to write 6.6TB of data because of my many tests. The price of CloudWatch put log action is expensive so use it wisely.I made a big mistake by passing event variable into CloudWatch even when I was running the big batches. This resulted to write 6.6TB of data because of my many tests. The price of CloudWatch put log action is expensive so use it wisely.&lt;/p&gt;

&lt;p&gt;3- DynamoDB on-demand is the keyword:&lt;/p&gt;

&lt;p&gt;I started my configuration with making my DynamoDB provisioned, which is something for predicted workload. I made it 5 read and write throughput and that was an issue. I faced the issue that out of 558k records, only 1k was inserted into my table. I raised it into 100 throughput and still at least 60% out of the file get lost and not added! Then I reread the documentation and noticed my issue, DynamoDB on-demand is the solution for unpredicted load. I added all the 558k+ records within 5 min! Pretty FAST!&lt;/p&gt;

&lt;p&gt;4- SQS can be tricky:&lt;/p&gt;

&lt;p&gt;SQS is a great service and has a lot options and opportunities. But, you need to know what is the size of the batch you’re passing every time and what is the predicted time for your batch to finish. The reason for that is when you tell SQS to wait x seconds before making this batch available again, it might get processed multiple times. Know your code and your data, test test test and then configure it for heavy workload.&lt;/p&gt;

&lt;p&gt;These points were my top concerns, S3 was interesting but not that complicated as I expected. But the main question, does it worth it?&lt;/p&gt;

&lt;p&gt;Everything in this life depends on conditions, if you don’t want to manage instances or you want it with the minimal effort then yes, this scenario is valid for you. Keep in mind that debugging these use-cases can be tense because of how connected and how one mistake in one step can affect the coming steps.&lt;/p&gt;

&lt;p&gt;Stay Safe.&lt;/p&gt;

</description>
      <category>cloud</category>
      <category>aws</category>
      <category>eventdriven</category>
    </item>
    <item>
      <title>Weekly web development resources #79</title>
      <author>Vincent Will</author>
      <pubDate>Wed, 23 Jun 2021 06:00:12 +0000</pubDate>
      <link>https://dev.to/vincenius/weekly-web-development-resources-79-1og7</link>
      <guid>https://dev.to/vincenius/weekly-web-development-resources-79-1og7</guid>
      <description>

&lt;h2&gt;
  &lt;a href="#nushell"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/nushell/nushell"&gt;nushell&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/nushell/nushell"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GndyRsOb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/79/nushell.jpg" alt="nushell"&gt;&lt;/a&gt;&lt;br&gt;
A cross-platform, extendable shell to control your system with powerful pipelines.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#utopia"&gt;
  &lt;/a&gt;
  &lt;a href="https://utopia.app/"&gt;Utopia&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://utopia.app/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ric0lIdQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/79/utopia.jpg" alt="Utopia"&gt;&lt;/a&gt;&lt;br&gt;
A design and coding environment for React projects and components.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#super-agent"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.super-agent.com/"&gt;Super Agent&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.super-agent.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Iqxri11F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/79/super-agent.jpg" alt="Super Agent"&gt;&lt;/a&gt;&lt;br&gt;
A browser extension and web service that will auto-accept cookies for you.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#rescript"&gt;
  &lt;/a&gt;
  &lt;a href="https://rescript-lang.org/"&gt;ReScript&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://rescript-lang.org/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ntNbhWJI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/79/rescript.jpg" alt="ReScript"&gt;&lt;/a&gt;&lt;br&gt;
A language that compiles into JavaScript.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#denodb"&gt;
  &lt;/a&gt;
  &lt;a href="https://deno.land/x/denodb"&gt;DenoDB&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://deno.land/x/denodb"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3YwUHxUi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/79/denodb.jpg" alt="DenoDB"&gt;&lt;/a&gt;&lt;br&gt;
A new library for using databases with Deno.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#vektors"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.vektors.pro/"&gt;Vektors&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.vektors.pro/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Dd1PFaxN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/79/vektors.jpg" alt="Vektors"&gt;&lt;/a&gt;&lt;br&gt;
Illustrations, that are free for personal and commercial use.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#free-dev-stuff"&gt;
  &lt;/a&gt;
  &lt;a href="https://freestuff.dev/"&gt;Free Dev Stuff&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://freestuff.dev/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6ueEfqRN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/79/freedevstuff.jpg" alt="Free Dev Stuff"&gt;&lt;/a&gt;&lt;br&gt;
A list of free stuff or services for developer by developer to use&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#snk"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/Platane/snk"&gt;snk&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/Platane/snk"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZAiu0oz3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/79/snk.jpg" alt="snk"&gt;&lt;/a&gt;&lt;br&gt;
Generate a snake game from a github user contributions graph.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#mega-creator"&gt;
  &lt;/a&gt;
  &lt;a href="https://icons8.com/mega-creator"&gt;Mega creator&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://icons8.com/mega-creator"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vzunkxds--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/79/mega-creator.jpg" alt="Mega creator"&gt;&lt;/a&gt;&lt;br&gt;
An online creator for graphic design for social media graphic design.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#aspect-ratio-in-css"&gt;
  &lt;/a&gt;
  &lt;a href="https://ishadeed.com/article/css-aspect-ratio/"&gt;Aspect Ratio In CSS&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://ishadeed.com/article/css-aspect-ratio/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j6ZdWyLx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/79/aspect-ratio.jpg" alt="Aspect Ratio In CSS"&gt;&lt;/a&gt;&lt;br&gt;
An article on how to use the native aspect ratio in CSS.&lt;/p&gt;




&lt;p&gt;To see all the weeklies check: &lt;a href="https://wweb.dev/weekly"&gt;wweb.dev/weekly&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>weekly</category>
    </item>
    <item>
      <title>Top 5 Password managers for Mac</title>
      <author>Chris Bongers</author>
      <pubDate>Wed, 23 Jun 2021 05:56:59 +0000</pubDate>
      <link>https://dev.to/dailydevtips1/top-5-password-managers-for-mac-3dmc</link>
      <guid>https://dev.to/dailydevtips1/top-5-password-managers-for-mac-3dmc</guid>
      <description>&lt;p&gt;The first thing I install is a password manager on every new device. I have so many accounts I want to keep safe and secure. The only way to do this is a good password manager.&lt;/p&gt;

&lt;p&gt;Today's article will walk you through my top 5 password managers for Mac.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;TL;DR: I'm currently using &lt;a href="https://1password.com/"&gt;1Password&lt;/a&gt; as my password manager. It has an excellent user experience.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#why-a-password-manager"&gt;
  &lt;/a&gt;
  Why a password manager?
&lt;/h2&gt;

&lt;p&gt;You might wonder why you should use a password manager, and I've written down some advantages that are trademarks of every password manager.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Safely store passwords and notes in a vault&lt;/li&gt;
&lt;li&gt;Generate safe passwords on the fly&lt;/li&gt;
&lt;li&gt;Watch passwords, keep track of leaked passwords&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#1-1password"&gt;
  &lt;/a&gt;
  1 1Password
&lt;/h2&gt;

&lt;p&gt;I'm currently using 1Password as my password manager for Mac and iPhone. To me, it has a lot of awesome features like:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--g1lijzbb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624082068832/lEJiQ7TsD.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g1lijzbb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624082068832/lEJiQ7TsD.png" alt="1Password for Mac"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Family account and vault&lt;/li&gt;
&lt;li&gt;Travel mode (remove accounts for x time)&lt;/li&gt;
&lt;li&gt;Two-factor for certain websites&lt;/li&gt;
&lt;li&gt;Apps for all browsers and devices&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;1Password is a paid application and starts at \$2.99 per month.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://1password.com/"&gt;Check out 1Password&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-lastpass"&gt;
  &lt;/a&gt;
  2 LastPass
&lt;/h2&gt;

&lt;p&gt;At the company, we are using LastPass, and it's a good second choice for me personally as well.&lt;br&gt;
It's less focused on UX to me, as it can be annoying to find a password on the fly.&lt;br&gt;
But some really good features are:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tjoTTODw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624082362284/hk05bEwiR.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tjoTTODw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624082362284/hk05bEwiR.png" alt="LastPass for Mac"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Local Encryption&lt;/li&gt;
&lt;li&gt;Great team management&lt;/li&gt;
&lt;li&gt;Emergency backup&lt;/li&gt;
&lt;li&gt;Apps for all browsers and devices&lt;/li&gt;
&lt;li&gt;Dark web monitoring&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;LastPass has a free mode, so great option to start with.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.lastpass.com/"&gt;View LastPass for Mac&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-dashlane"&gt;
  &lt;/a&gt;
  3 Dashlane
&lt;/h2&gt;

&lt;p&gt;Dashlane is a super popular free-tiered option as your new password manager.&lt;br&gt;
The app is very good at analyzing current password strengths and advice on upgrades. You can even set up a VPN to keep your online activities safe.&lt;br&gt;
It also has the following features:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YVPwm-Aa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624082656875/TMgtbPiqB.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YVPwm-Aa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624082656875/TMgtbPiqB.jpeg" alt="Dashlane for Mac"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Auto logins&lt;/li&gt;
&lt;li&gt;Alert for account breaches&lt;/li&gt;
&lt;li&gt;Emergency contact mode&lt;/li&gt;
&lt;li&gt;VPN wifi protection&lt;/li&gt;
&lt;li&gt;U2F authentication&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://www.dashlane.com/"&gt;Get Dashlane for Mac&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-bitwarden"&gt;
  &lt;/a&gt;
  4 Bitwarden
&lt;/h2&gt;

&lt;p&gt;This free option has unlimited storage, which is unheard of for these kinds of systems.&lt;br&gt;
Premium will come with even more advantages like:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ow1UdMtT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624082876409/nLgLyZXNl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ow1UdMtT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624082876409/nLgLyZXNl.png" alt="Bitwarden for Mac"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Family plan&lt;/li&gt;
&lt;li&gt;Password analysis&lt;/li&gt;
&lt;li&gt;Secure file sharing&lt;/li&gt;
&lt;li&gt;Open-source&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://bitwarden.com/"&gt;Get bitwarden now&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-keeper"&gt;
  &lt;/a&gt;
  5 Keeper
&lt;/h2&gt;

&lt;p&gt;And the last option is keeper, which comes as a fair prices option.&lt;br&gt;
Very focusses on breach detection so you won't get held with ransomware attacks.&lt;br&gt;
It comes with a lot of cool features that include:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rCp1-V4s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624083138465/_J5RrVM7_.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rCp1-V4s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624083138465/_J5RrVM7_.png" alt="Keeper for Mac"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;BreachWatch, alert for breaches&lt;/li&gt;
&lt;li&gt;Encrypted private messenger&lt;/li&gt;
&lt;li&gt;Import existing passwords&lt;/li&gt;
&lt;li&gt;Password sharing&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://www.keepersecurity.com/"&gt;Try out Keeper&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thank-you-for-reading-and-lets-connect"&gt;
  &lt;/a&gt;
  Thank you for reading, and let's connect!
&lt;/h3&gt;

&lt;p&gt;Thank you for reading my blog. Feel free to subscribe to my email newsletter and connect on &lt;a href="https://www.facebook.com/DailyDevTipsBlog"&gt;Facebook&lt;/a&gt; or &lt;a href="https://twitter.com/DailyDevTips1"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>security</category>
      <category>mac</category>
      <category>password</category>
      <category>tooling</category>
    </item>
    <item>
      <title>Design a BMI Calculator using JavaScript</title>
      <author>Ahtsham Ajus</author>
      <pubDate>Wed, 23 Jun 2021 05:45:51 +0000</pubDate>
      <link>https://dev.to/ahtshamajus/design-a-bmi-calculator-using-javascript-5fbd</link>
      <guid>https://dev.to/ahtshamajus/design-a-bmi-calculator-using-javascript-5fbd</guid>
      <description>&lt;p&gt;The Body Mass Index (BMI) Calculator can be used to calculate BMI values based on their height and weight. BMI is a fairly reliable indicator of body fatness for most people.&lt;/p&gt;

&lt;p&gt;Formula:&lt;/p&gt;

&lt;p&gt;BMI = (weight) / (height * height)&lt;/p&gt;

&lt;p&gt;Here's JavaScript code&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;BMI&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;weight&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;weight&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;

 &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;bmiResult&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;BMI&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;57&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;173.736&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
 &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;bmiResult&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yQxwxd5i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b9p7te1392t8e8fjjt1v.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yQxwxd5i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b9p7te1392t8e8fjjt1v.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Complete Application Deployment using Kubernetes</title>
      <author>Ishant Gaurav</author>
      <pubDate>Wed, 23 Jun 2021 05:11:24 +0000</pubDate>
      <link>https://dev.to/ishant14/complete-application-deployment-using-kubernetes-1b4b</link>
      <guid>https://dev.to/ishant14/complete-application-deployment-using-kubernetes-1b4b</guid>
      <description>&lt;p&gt;In this post, we will be deploying a complete end to end application using &lt;strong&gt;Kubernetes&lt;/strong&gt;. We will see and discuss how the different components of Kubernetes compliment each other and make the application deployment process smooth.&lt;/p&gt;

&lt;p&gt;We will be using minikube to deploy our application on our local system. You can refer this link to read more about minikube : &lt;a href="https://minikube.sigs.k8s.io/docs/start/"&gt;https://minikube.sigs.k8s.io/docs/start/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once you are done with this post, you would be familiar with the below concepts in Kubernetes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Creating Deployment using YAML file.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;What is Pod and How to define the pod in YAML config file.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;How to to create internal service and make the pod accessible to other component in the cluster.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;How to create external service and make the pod accessible outside the cluster.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sample application which we will be deploying on the Kubernetes cluster will be as below. We will deploy &lt;strong&gt;mongodb&lt;/strong&gt; and &lt;strong&gt;mongo-express&lt;/strong&gt; docker image and will access the mongo-express from the browser.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bQqSMjNC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ilz5fnax8spwf8qnkhvf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bQqSMjNC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ilz5fnax8spwf8qnkhvf.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To deploy the above application on Kubernetes we will be following the below steps:&lt;/p&gt;

&lt;p&gt;1.First we will create &lt;code&gt;mongodb secret&lt;/code&gt; which will contain the sensitive information such as the &lt;code&gt;mongodb username&lt;/code&gt; and &lt;code&gt;password&lt;/code&gt; in encrypted format.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Then create &lt;code&gt;mongodb deployment and service&lt;/code&gt; which will be responsible to create the mongdb pod and exposing the mongodb to the other internal components.&lt;/li&gt;
&lt;li&gt;Now we will create &lt;code&gt;mongodb configmap&lt;/code&gt; to save the &lt;code&gt;mongodb url&lt;/code&gt; and other configuration.&lt;/li&gt;
&lt;li&gt;Once config map is created and deployed we will create the &lt;code&gt;mongo-express deployment&lt;/code&gt; file to create the mongo-express pod.&lt;/li&gt;
&lt;li&gt;Accessing the application from the browser.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Before implementing the above steps to deploy the mongodb application on Kubernetes, lets revise the few Kubernetes components which will be used in deploying the application in brief.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pods&lt;/strong&gt;: Pods are the &lt;code&gt;smallest, most basic deployable&lt;/code&gt; objects in Kubernetes. A Pod represents a single instance of a running process in your cluster. Pods contain &lt;code&gt;one or more containers&lt;/code&gt;, such as Docker containers.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Secrets&lt;/strong&gt;: Secrets let you store and manage &lt;code&gt;sensitive information&lt;/code&gt;, such as passwords, OAuth tokens, and ssh keys. Storing confidential information in a Secret is safer and more flexible than putting it verbatim in a Pod definition or in a container image&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ConfigMap&lt;/strong&gt;: A ConfigMap is an API object used to store &lt;code&gt;non-confidential data in key-value pairs&lt;/code&gt;. Pods can consume ConfigMaps as environment variables, command-line arguments, or as configuration files in a volume.A &lt;strong&gt;ConfigMap&lt;/strong&gt; allows you to decouple environment-specific configuration from your container images, so that your applications are easily portable.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Deployment&lt;/strong&gt;: Deployment is a resource object in Kubernetes that provides &lt;code&gt;declarative updates&lt;/code&gt; to applications. A deployment allows you to describe an application’s life cycle, such as which images to use for the app, the number of pods there should be, and the way in which they should be updated.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Services&lt;/strong&gt; : Service is a &lt;code&gt;logical abstraction&lt;/code&gt; for a deployed group of pods in a cluster (which all perform the same function). Since pods are ephemeral, a service enables a group of pods, which provide specific functions (web services, image processing, etc.) to be assigned a name and unique IP address (clusterIP).&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; ConfigMap does not provide secrecy or encryption. If the data you want to store are confidential, use a Secret rather than a ConfigMap, or use additional (third party) tools to keep your data private.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now let’s deploy the complete mongodb application by following the steps discussed above. Architecture of our application with different components will be as below :&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PFZskzZ9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oiaegytz7mmzbbf6lyj8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PFZskzZ9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oiaegytz7mmzbbf6lyj8.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-1-create-secrets-to-save-mongodb-username-and-password-"&gt;
  &lt;/a&gt;
  Step 1: Create Secrets to Save Mongodb username and password .
&lt;/h2&gt;

&lt;p&gt;As our &lt;strong&gt;mongodb&lt;/strong&gt; application require username and password to access, as username and password are confidential information, so will be creating the secrets to save them. We have username as “username” and password as “password“. We are saving them by encoding in &lt;strong&gt;base64&lt;/strong&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#mongosecretyaml"&gt;
  &lt;/a&gt;
  mongo-secret.yaml
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;apiVersion&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;v1&lt;/span&gt;
&lt;span class="na"&gt;kind&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Secret&lt;/span&gt;
&lt;span class="na"&gt;metadata&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;mongodb-secret&lt;/span&gt;
&lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Opaque&lt;/span&gt;
&lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;mongo-root-username&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;dXNlcm5hbWU=&lt;/span&gt;
    &lt;span class="na"&gt;mongo-root-password&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;cGFzc3dvcmQ=&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;apiVersion&lt;/strong&gt; : this is the version of the API used by the cluster.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;kind&lt;/strong&gt;: kind define whether it’s a deployment, secret or configMap.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;metadata&lt;/strong&gt;: here we can define data about the object we are about to create. In this example, we only provide the name of the pod. But you can provide other details like the namespace.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;type&lt;/strong&gt;:  type Opaque means that from kubernetes’s point of view the contents of this Secret is unstructured, it can contain arbitrary key-value pairs.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;data&lt;/strong&gt; : data contains the data, you want to save as secrets.&lt;/p&gt;

&lt;p&gt;Deploy the secret config file via &lt;code&gt;kubectl apply -f mongo-secret.yaml&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jaZtQMsQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ax6x13wo51vcz4rbw54d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jaZtQMsQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ax6x13wo51vcz4rbw54d.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--elSFtGLt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1148j3sbqs8ruek7ca7y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--elSFtGLt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1148j3sbqs8ruek7ca7y.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-2-create-the-mongo-deployment-and-service-to-create-the-mongo-pod"&gt;
  &lt;/a&gt;
  Step 2 : Create the mongo deployment and Service to create the mongo pod.
&lt;/h2&gt;

&lt;p&gt;Now we will create the mongo deployment to create the mongodb pod, mongo db deployment will be fetching the mongodb username and password from the mongo secrets created in Step1.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#mongoyaml"&gt;
  &lt;/a&gt;
  mongo.yaml
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;apiVersion&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;apps/v1&lt;/span&gt;
&lt;span class="na"&gt;kind&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Deployment&lt;/span&gt;
&lt;span class="na"&gt;metadata&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;mongodb-deployment&lt;/span&gt;
  &lt;span class="na"&gt;labels&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;app&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;mongodb&lt;/span&gt;
&lt;span class="na"&gt;spec&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;replicas&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
  &lt;span class="na"&gt;selector&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;matchLabels&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;app&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;mongodb&lt;/span&gt;
  &lt;span class="na"&gt;template&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;metadata&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;labels&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;app&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;mongodb&lt;/span&gt;
    &lt;span class="na"&gt;spec&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;containers&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;mongodb&lt;/span&gt;
        &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;mongo&lt;/span&gt;
        &lt;span class="na"&gt;ports&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;containerPort&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;27017&lt;/span&gt;
        &lt;span class="na"&gt;env&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;MONGO_INITDB_ROOT_USERNAME&lt;/span&gt;
          &lt;span class="na"&gt;valueFrom&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="na"&gt;secretKeyRef&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
              &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;mongodb-secret&lt;/span&gt;
              &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;mongo-root-username&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;MONGO_INITDB_ROOT_PASSWORD&lt;/span&gt;
          &lt;span class="na"&gt;valueFrom&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="na"&gt;secretKeyRef&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
              &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;mongodb-secret&lt;/span&gt;
              &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;mongo-root-password&lt;/span&gt;
&lt;span class="nn"&gt;---&lt;/span&gt;
&lt;span class="na"&gt;apiVersion&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;v1&lt;/span&gt;
&lt;span class="na"&gt;kind&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Service&lt;/span&gt;
&lt;span class="na"&gt;metadata&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;mongodb-service&lt;/span&gt;
&lt;span class="na"&gt;spec&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;selector&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;app&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;mongodb&lt;/span&gt;
  &lt;span class="na"&gt;ports&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;protocol&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;TCP&lt;/span&gt;
      &lt;span class="na"&gt;port&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;27017&lt;/span&gt;
      &lt;span class="na"&gt;targetPort&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;27017&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above yaml file we have defined two things :&lt;/p&gt;

&lt;p&gt;1.&lt;strong&gt;Deployment&lt;/strong&gt; – responsible to create the pod and replicaset of the pod.(here we are creating only one replica).&lt;br&gt;
2.&lt;strong&gt;Service&lt;/strong&gt; – to expose the pod to the internal component.&lt;/p&gt;

&lt;p&gt;Now Let’s see the each field in deployment in the more details:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;apiVersion&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;apps/v1&lt;/span&gt;
&lt;span class="na"&gt;kind&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Deployment&lt;/span&gt;
&lt;span class="na"&gt;metadata&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;mongodb-deployment&lt;/span&gt;
  &lt;span class="na"&gt;labels&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;app&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;mongodb&lt;/span&gt;
&lt;span class="na"&gt;spec&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;replicas&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
  &lt;span class="na"&gt;selector&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;matchLabels&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;app&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;mongodb&lt;/span&gt;
  &lt;span class="na"&gt;template&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;metadata&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;labels&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;app&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;mongodb&lt;/span&gt;
    &lt;span class="na"&gt;spec&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;containers&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;mongodb&lt;/span&gt;
        &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;mongo&lt;/span&gt;
        &lt;span class="na"&gt;ports&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;containerPort&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;27017&lt;/span&gt;
        &lt;span class="na"&gt;env&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;MONGO_INITDB_ROOT_USERNAME&lt;/span&gt;
          &lt;span class="na"&gt;valueFrom&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="na"&gt;secretKeyRef&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
              &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;mongodb-secret&lt;/span&gt;
              &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;mongo-root-username&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;MONGO_INITDB_ROOT_PASSWORD&lt;/span&gt;
          &lt;span class="na"&gt;valueFrom&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="na"&gt;secretKeyRef&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
              &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;mongodb-secret&lt;/span&gt;
              &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;mongo-root-password&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;apiVersion&lt;/strong&gt; : this is the version of the API used by the cluster.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;kind&lt;/strong&gt;: kind define whether it’s a deployment, secret or configMap.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;metadata&lt;/strong&gt;: here we can define data about the object we are about to create. In this example, we only provide the name of the pod. But you can provide other details like the namespace.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;spec&lt;/strong&gt;: in the deployment kind file, we have spectification which is responsible for defining the replica, selector and container template.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;replicas&lt;/strong&gt; : define the number of pod to be created for this container.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;selector&lt;/strong&gt;: inside selector we define the matching Label.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;template&lt;/strong&gt;: template is the actual blue print of the container and pod that will be created.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;template.metadata&lt;/strong&gt; : contains the information about pod like label etc.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;template.spec&lt;/strong&gt;: blueprint for the container that needs to be created.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;containers&lt;/strong&gt; : define the different pod to be created.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;name&lt;/strong&gt;: name of container.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;image&lt;/strong&gt;: docker image that will be pulled from docker hub.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ports&lt;/strong&gt;: on which this container will be accessible.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;env&lt;/strong&gt; : container the environment variables like mongodb username and password in our case.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: Secrets needs to be created first before the applying the deployment as they are being used in the deployment as environment variable.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Let’s see the service in more detail now:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;apiVersion&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;v1&lt;/span&gt;
&lt;span class="na"&gt;kind&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Service&lt;/span&gt;
&lt;span class="na"&gt;metadata&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;mongodb-service&lt;/span&gt;
&lt;span class="na"&gt;spec&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;selector&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;app&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;mongodb&lt;/span&gt;
  &lt;span class="na"&gt;ports&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;protocol&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;TCP&lt;/span&gt;
      &lt;span class="na"&gt;port&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;27017&lt;/span&gt;
      &lt;span class="na"&gt;targetPort&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;27017&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Service yaml has the similar fields as in the deployment, only targetPort field is different, &lt;code&gt;targetPort&lt;/code&gt; is the port on which other component can access this pod.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fvnRuJCs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hidxavbw03ndbvmfwhns.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fvnRuJCs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hidxavbw03ndbvmfwhns.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-3-create-secrets-to-save-mongodb-username-and-password"&gt;
  &lt;/a&gt;
  Step 3: Create Secrets to Save Mongodb username and password
&lt;/h2&gt;

&lt;p&gt;Now we will create the configMap which will contain the mongodb url.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#mongoconfigmapyaml"&gt;
  &lt;/a&gt;
  mongo-configmap.yaml
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;apiVersion&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;v1&lt;/span&gt;
&lt;span class="na"&gt;kind&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ConfigMap&lt;/span&gt;
&lt;span class="na"&gt;metadata&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;mongodb-configmap&lt;/span&gt;
&lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;database_url&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;mongodb-service&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;ConfigMap file is almost similar to the other yaml file.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4q_kFMX1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9sdudz7h8nbl9onv09m1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4q_kFMX1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9sdudz7h8nbl9onv09m1.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-4-create-the-mongoexpress-deployment-and-external-service-to-create-the-mongoexpress-pod-and-expose-it-to-the-outside-of-cluster"&gt;
  &lt;/a&gt;
  Step 4: Create the mongo-express deployment and external service to create the mongo-express pod and expose it to the outside of cluster.
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#mongoexpressyaml"&gt;
  &lt;/a&gt;
  mongo-express.yaml
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;apiVersion&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;apps/v1&lt;/span&gt;
&lt;span class="na"&gt;kind&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Deployment&lt;/span&gt;
&lt;span class="na"&gt;metadata&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;mongo-express&lt;/span&gt;
  &lt;span class="na"&gt;labels&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;app&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;mongo-express&lt;/span&gt;
&lt;span class="na"&gt;spec&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;replicas&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
  &lt;span class="na"&gt;selector&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;matchLabels&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;app&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;mongo-express&lt;/span&gt;
  &lt;span class="na"&gt;template&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;metadata&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;labels&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;app&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;mongo-express&lt;/span&gt;
    &lt;span class="na"&gt;spec&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;containers&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;mongo-express&lt;/span&gt;
        &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;mongo-express&lt;/span&gt;
        &lt;span class="na"&gt;ports&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;containerPort&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;8081&lt;/span&gt;
        &lt;span class="na"&gt;env&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ME_CONFIG_MONGODB_ADMINUSERNAME&lt;/span&gt;
          &lt;span class="na"&gt;valueFrom&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="na"&gt;secretKeyRef&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
              &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;mongodb-secret&lt;/span&gt;
              &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;mongo-root-username&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ME_CONFIG_MONGODB_ADMINPASSWORD&lt;/span&gt;
          &lt;span class="na"&gt;valueFrom&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="na"&gt;secretKeyRef&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
              &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;mongodb-secret&lt;/span&gt;
              &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;mongo-root-password&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ME_CONFIG_MONGODB_SERVER&lt;/span&gt;
          &lt;span class="na"&gt;valueFrom&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="na"&gt;configMapKeyRef&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
              &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;mongodb-configmap&lt;/span&gt;
              &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;database_url&lt;/span&gt;
&lt;span class="nn"&gt;---&lt;/span&gt;
&lt;span class="na"&gt;apiVersion&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;v1&lt;/span&gt;
&lt;span class="na"&gt;kind&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Service&lt;/span&gt;
&lt;span class="na"&gt;metadata&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;mongo-express-service&lt;/span&gt;
&lt;span class="na"&gt;spec&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;selector&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;app&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;mongo-express&lt;/span&gt;
  &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;LoadBalancer&lt;/span&gt;  
  &lt;span class="na"&gt;ports&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;protocol&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;TCP&lt;/span&gt;
      &lt;span class="na"&gt;port&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;8081&lt;/span&gt;
      &lt;span class="na"&gt;targetPort&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;8081&lt;/span&gt;
      &lt;span class="na"&gt;nodePort&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;30000&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;mongo-express&lt;/strong&gt; deployment config is similar to the &lt;strong&gt;mongodb&lt;/strong&gt; deployment config so we will not discuss that here.&lt;/p&gt;

&lt;p&gt;We will discuss few of the extra field that we have in the mongo-express external service below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;apiVersion&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;v1&lt;/span&gt;
&lt;span class="na"&gt;kind&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Service&lt;/span&gt;
&lt;span class="na"&gt;metadata&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;mongo-express-service&lt;/span&gt;
&lt;span class="na"&gt;spec&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;selector&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;app&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;mongo-express&lt;/span&gt;
  &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;LoadBalancer&lt;/span&gt;  
  &lt;span class="na"&gt;ports&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;protocol&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;TCP&lt;/span&gt;
      &lt;span class="na"&gt;port&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;8081&lt;/span&gt;
      &lt;span class="na"&gt;targetPort&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;8081&lt;/span&gt;
      &lt;span class="na"&gt;nodePort&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;30000&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This service file contains 2 fields extra (type, nodePort )as compared to the service file of mongodb.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;type: LoadBalancer&lt;/strong&gt; : makes the service external by assigning the service external ip address.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;nodePort&lt;/strong&gt;: port on which this pod can be accessed outside the cluster.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--F1dHB2Q7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7660tyecihagmfnbp7wo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--F1dHB2Q7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7660tyecihagmfnbp7wo.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-5-access-the-mongoexpress-from-the-browser"&gt;
  &lt;/a&gt;
  Step 5: Access the Mongo-Express from the browser.
&lt;/h2&gt;

&lt;p&gt;To access the mongo-express from the browser, we would need to find the IP ADDRESS of the service assigned by the kubernetes.&lt;/p&gt;

&lt;p&gt;We will first verify if the service is created and will fetch the service name by the following command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;kubectl get service
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jY8bd6EL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uzfkkgcg0k24sa3l7i0u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jY8bd6EL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uzfkkgcg0k24sa3l7i0u.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As we can see our external service with the name mongo-express-service and internal service mongodb-service both have been created.&lt;/p&gt;

&lt;p&gt;Now we will run our external service to get the url created for the service to be accessible by using below command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;minikube service mongo-express-service
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cSm-k2YP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x98k4pbrny2bmssqerzp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cSm-k2YP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x98k4pbrny2bmssqerzp.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now copy paste the url in browser and check whether application is accessible.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EqdsNznS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fjao7xkdg10igt9y49jb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EqdsNznS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fjao7xkdg10igt9y49jb.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We can see that we are able to access the application in our browser on port 30000 as given in the external service yaml file.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;So in this way we deployed a complete end to end mongo db application on kubernetes and access it through our browser. We created a mongodb pod and made it accessible to the other component by internal service. We also created one pod for mongo-express to make changes to mongodb and created an external service to make it accessible outside the cluster or external source.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;This is all from this Post, if you have any question or find anything wrong, then please comment below.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This post was first published on my personal blog. If you find this blog content relevant, you can visit my blog for similar kind of content: &lt;a href="https://ishantgaurav.in/"&gt;https://ishantgaurav.in/&lt;/a&gt; &lt;/p&gt;

</description>
      <category>kubernetes</category>
      <category>devops</category>
      <category>tutorial</category>
      <category>microservices</category>
    </item>
    <item>
      <title>eval() and Function() in JavaScript</title>
      <author>Josias Aurel</author>
      <pubDate>Wed, 23 Jun 2021 04:58:11 +0000</pubDate>
      <link>https://dev.to/josiasaurel/eval-and-function-in-javascript-606</link>
      <guid>https://dev.to/josiasaurel/eval-and-function-in-javascript-606</guid>
      <description>&lt;p&gt;Hey, in today's blog, we are going to briefly discuss &lt;code&gt;eval()&lt;/code&gt; and &lt;code&gt;Function()&lt;/code&gt; in JavaScript.&lt;/p&gt;

&lt;p&gt;Let us begin.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#brief"&gt;
  &lt;/a&gt;
  Brief
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;eval()&lt;/code&gt; and &lt;code&gt;Function()&lt;/code&gt; are two powerful tools in JavaScript that both allow you to evaluate any JavaScript expression passed to either of them as a string. They are both used for the same thing, though they differ in how they handle your expression.&lt;/p&gt;

&lt;p&gt;Let us begin with &lt;code&gt;eval()&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#eval"&gt;
  &lt;/a&gt;
  eval()
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;eval()&lt;/code&gt; is a global function which takes a JavaScript expression as a string and executes it. It does not return anything except &lt;code&gt;undefined&lt;/code&gt;. If you write some script into your HTML and use &lt;code&gt;eval()&lt;/code&gt;, you will notice the output gets printed to the console while in an environment like node, you will want to use &lt;code&gt;console.log()&lt;/code&gt;. This is because it tend to pipe the result of an expression for example to standard output or an equivalent.&lt;/p&gt;

&lt;p&gt;Let us have an example. Say you write an app where a user inputs some value and your app has to output the result to the console. Tricky right? &lt;code&gt;eval()&lt;/code&gt; saves you time. Just pass what the user inputs to eval and let the magic.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;userInput&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;2+4&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nb"&gt;eval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;userInput&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// output : 6&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#function"&gt;
  &lt;/a&gt;
  Function()
&lt;/h2&gt;

&lt;p&gt;An alternative to eval is &lt;code&gt;Function()&lt;/code&gt;. Just like eval(), it takes some expression as a string for execution &lt;em&gt;except&lt;/em&gt; rather than outputing the result directly, it returns to you an anonymous function which you can call. It is a faster and more secure alternative to eval(). Let us try the same example as above but with &lt;code&gt;Function()&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;userInput&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;2+4&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;userInput&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you try to log the result of above, you will get&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;anonymous&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Why so ? This is because &lt;code&gt;Function()&lt;/code&gt; returns to us an anonymous function. Looking more, we can see that the expression we passed in the string is found in the function body. &lt;br&gt;
What if we add a return statement in our string ?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;userInput&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;2+4&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;return &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;userInput&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// which is same as "return 2+4"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Try logging result once more. We get this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;anonymous&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We notice we are now returning the result of our arithmetic operation. But now we want the actual value. We can get this by executing the function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;userInput&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;2+4&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;return &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;userInput&lt;/span&gt;&lt;span class="p"&gt;)();&lt;/span&gt; &lt;span class="c1"&gt;// which is same as "return 2+4"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now if you log result and look up the console, you will notice we get 6, which is the result we expect.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#note"&gt;
  &lt;/a&gt;
  Note
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;With great power comes great responsibility&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;eval()&lt;/code&gt; and &lt;code&gt;Function()&lt;/code&gt; are really powerful tools we have at hand in JavaScript. But that power comes at a price. Arbitrary code can be executed by a technical enough user or malicious individual.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;eval()&lt;/code&gt; is particularly dangerous. This is because it allows one to execute code with the same privileges as the caller of &lt;code&gt;eval()&lt;/code&gt;. Say you create an app that evalues some code and stores the result on the user's machine using the FileApi in the browser. The user can use &lt;code&gt;eval()&lt;/code&gt; against your app and get access to FileAPI too to carry out malicious tasks.&lt;br&gt;
Again, &lt;code&gt;eval()&lt;/code&gt; is much slower than &lt;code&gt;Function()&lt;/code&gt;.&lt;br&gt;
Quote here&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;eval() is also slower than the alternatives, since it has to invoke the JavaScript interpreter, while many other constructs are optimized by modern JS engines.&lt;/p&gt;

&lt;p&gt;Additionally, modern javascript interpreters convert javascript to machine code. This means that any concept of variable naming gets obliterated. Thus, any use of eval() will force the browser to do long expensive variable name lookups to figure out where the variable exists in the machine code and set its value. Additionally, new things can be introduced to that variable through eval() such as changing the type of that variable, forcing the browser to re-evaluate all of the generated machine code to compensate.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Learn more about &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval"&gt;eval&lt;/a&gt; and &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function"&gt;Function&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Prefer Video ?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/rocketstellar"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Vdb9LxU3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.buymeacoffee.com/button-api/%3Ftext%3DBuy%2520me%2520a%2520coffee%26emoji%3D%26slug%3Drocketstellar%26button_colour%3D5F7FFF%26font_colour%3Dffffff%26font_family%3DComic%26outline_colour%3D000000%26coffee_colour%3DFFDD00"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>8 Best and FREE Ebooks For Beginners to learn MachineLearning and Data Science </title>
      <author>Manitej ⚡</author>
      <pubDate>Wed, 23 Jun 2021 04:46:05 +0000</pubDate>
      <link>https://dev.to/manitej/8-best-and-free-ebooks-for-beginners-to-learn-machinelearning-and-data-science-2c9o</link>
      <guid>https://dev.to/manitej/8-best-and-free-ebooks-for-beginners-to-learn-machinelearning-and-data-science-2c9o</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;this article is generated using (give a ⭐) &lt;br&gt;
 &lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/Manitej66"&gt;
        Manitej66
      &lt;/a&gt; / &lt;a href="https://github.com/Manitej66/twlog"&gt;
        twlog
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      This is a web app that converts Twitter threads into blogs in a single click 🔥
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
twlog&lt;/h1&gt;
&lt;p&gt;This is a webapp which convert twitter threads into dev.to blogs in a single click&lt;/p&gt;
&lt;h2&gt;
Acknowledgements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/FeedHive/twitter-api-client"&gt;twitter api client&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/Manitej66/twlog"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
 &lt;br&gt;
 &lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--MZVMuY8h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1407359325576699905/4gCUkcTx_normal.jpg" alt="Mayank Joshi profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Mayank Joshi
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @dermayank
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      8 Best and FREE Ebooks For Beginners to learn &lt;a href="https://twitter.com/hashtag/MachineLearning"&gt;#MachineLearning&lt;/a&gt; and Data Science and find a Job&lt;br&gt;&lt;br&gt;A Thread 🧵
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      04:21 AM - 23 Jun 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1407554471467503617" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1407554471467503617" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1407554471467503617" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;



&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--MZVMuY8h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1407359325576699905/4gCUkcTx_normal.jpg" alt="Mayank Joshi profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Mayank Joshi
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @dermayank
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      1) The Art of Data Science&lt;br&gt;&lt;br&gt;Focusing on analysis and distillation of data, the book by Roger D Peng and Elizabeth Matsui offers a bird’s eye view for practitioners as well as managers in data science.&lt;br&gt;&lt;br&gt;Link - &lt;a href="https://t.co/bxc3WvW8iJ"&gt;leanpub.com/artofdatascien…&lt;/a&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      04:21 AM - 23 Jun 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1407554473182982151" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1407554473182982151" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1407554473182982151" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;



&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T539SQu7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/E4ih2IoVkAQhIKQ.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--MZVMuY8h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1407359325576699905/4gCUkcTx_normal.jpg" alt="Mayank Joshi profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Mayank Joshi
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @dermayank
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      2) Understanding Machine Learning: From Theory to Algorithms&lt;br&gt;&lt;br&gt;This book by Shai Shalev-Shwartz and Shai Ben-David, introduces machine learning and the algorithmic paradigms it offers, in a principled manner.&lt;br&gt;&lt;br&gt;Link - &lt;a href="https://t.co/Qse6ZWCt4t"&gt;cs.huji.ac.il/~shais/Underst…&lt;/a&gt; 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      04:21 AM - 23 Jun 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1407554478165807108" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1407554478165807108" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1407554478165807108" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;



&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5Hh7NZiZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/E4ijNFUUYAEEE6R.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--MZVMuY8h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1407359325576699905/4gCUkcTx_normal.jpg" alt="Mayank Joshi profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Mayank Joshi
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @dermayank
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      3) Think Stats — Probability and Statistics for Programmers&lt;br&gt;&lt;br&gt;This book written by Allen B Downey and published by O’Reilly Media, is an introduction to Probability and Statistics for Python programmers.&lt;br&gt;&lt;br&gt;Link - &lt;a href="https://t.co/6NGsHsE4Vl"&gt;greenteapress.com/thinkstats/&lt;/a&gt; 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      04:21 AM - 23 Jun 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1407554483773603848" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1407554483773603848" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1407554483773603848" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;



&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--MZVMuY8h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1407359325576699905/4gCUkcTx_normal.jpg" alt="Mayank Joshi profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Mayank Joshi
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @dermayank
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      4) The Data Science Handbook&lt;br&gt;&lt;br&gt;This book is a compilation of interviews with 25 data scientists, where they share their insights and advice. The personal stories of noted personalities guide the reader to figuring out their own plan of action.&lt;br&gt;&lt;br&gt;Link - &lt;a href="https://t.co/SO9IJUupGL"&gt;thedatasciencehandbook.com&lt;/a&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      04:21 AM - 23 Jun 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1407554485996593154" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1407554485996593154" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1407554485996593154" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;



&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--MZVMuY8h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1407359325576699905/4gCUkcTx_normal.jpg" alt="Mayank Joshi profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Mayank Joshi
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @dermayank
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      5) Machine Learning Yearning&lt;br&gt;&lt;br&gt;Author Andrew Ng states that the book’s objective is to “teach one how to make the numerous decisions needed with organising a machine learning project.”&lt;br&gt;&lt;br&gt;Link - &lt;a href="https://t.co/MKTAcP7H9F"&gt;mlyearning.org&lt;/a&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      04:21 AM - 23 Jun 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1407554488211181569" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1407554488211181569" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1407554488211181569" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;



&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_8d_7wLg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/E4iiwroVIAEHDUt.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--MZVMuY8h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1407359325576699905/4gCUkcTx_normal.jpg" alt="Mayank Joshi profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Mayank Joshi
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @dermayank
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      6) Mining Of Massive Data&lt;br&gt;&lt;br&gt;The book is based on a Stanford Computer Science course and is designed for Data Analysis enthusiasts, who may not hold a formal qualification in the subject.&lt;br&gt;&lt;br&gt;&lt;a href="https://t.co/E1jmUGh1CV"&gt;mmds.org&lt;/a&gt; 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      04:21 AM - 23 Jun 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1407554493626011651" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1407554493626011651" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1407554493626011651" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;br&gt;
&lt;/blockquote&gt;

</description>
      <category>machinelearning</category>
      <category>books</category>
      <category>beginners</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>20 Free EBooks to Learn JavaScript In-Depth</title>
      <author>Kingsley Ubah</author>
      <pubDate>Wed, 23 Jun 2021 04:33:18 +0000</pubDate>
      <link>https://dev.to/ubahthebuilder/20-free-ebooks-to-learn-javascript-in-depth-53g2</link>
      <guid>https://dev.to/ubahthebuilder/20-free-ebooks-to-learn-javascript-in-depth-53g2</guid>
      <description>&lt;p&gt;As I have always said, your level of comprehension on any topic is intrinsically linked to the quality of learning resources you have consumed  for that topic.&lt;/p&gt;

&lt;p&gt;JavaScript is a programming language with a large pool of available resources– both for free and in paid form.&lt;/p&gt;

&lt;p&gt;In this post, I will list 20 free ebooks for learning JavaScript in a deep way. A description of each book along with active links to download the books will also be included.&lt;/p&gt;

&lt;p&gt;Enjoy.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#modern-javascript-a-curated-collection"&gt;
  &lt;/a&gt;
  Modern JavaScript: A curated collection
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Author: Contributor&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In this free ebook, you’ll learn about the new concepts introduced in modern . It lists and tackles each concepts in a very simple and understandable way lots of code and tutorials.&lt;br&gt;
&lt;a href="https://www.oreilly.com/web-platform/free/files/modern-javascript.pdf"&gt;Get book&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#javascript-notes-for-professionals"&gt;
  &lt;/a&gt;
  JavaScript notes for professionals
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Author: StackOverflow Community&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Comprises of very helpful notes on JavaScript written and compiled by a team from Stack Overflow &lt;/p&gt;

&lt;p&gt;&lt;a href="https://drive.google.com/file/d/1OonOQwMOTMKLTjTViqIt14Pi1l5rOBoM/view?usp=sharing"&gt;Get this book&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#nodebots-javascript-and-robotics-in-real-life"&gt;
  &lt;/a&gt;
  Nodebots- JavaScript and robotics in real life
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Author: Will Mendes&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Robotics is another field you can use JavaScript in, which is an interesting fact in iteslef. This book takes a deep dive into the world of JavaScript and Robotics.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://drive.google.com/file/d/1NU8xbM2d-p3ihxPga1wtH114ieDdme1-/view?usp=sharing"&gt;Get this book&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#javascript-the-good-parts"&gt;
  &lt;/a&gt;
  JavaScript: The Good Parts
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Author: StackOverflow Community&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Every programming language has its good parts and it’s bad parts. This book accentuates the good parts of JavaScript and reinforces the benefits of using JavaScript.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/dwyl/Javascript-the-Good-Parts-notes"&gt;Get this book&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#javascript-the-right-way"&gt;
  &lt;/a&gt;
  JavaScript: The right way
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Author: William Olivera&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;As it’s name suggests, this book reinforces the pricnciple of writing JavaScript according to best practices and coding standards. It shows you the “dos” and “donts” in the language. Write JavaScript the right way.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://jstherightway.org/"&gt;Get this book&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#exploring-es6"&gt;
  &lt;/a&gt;
  Exploring ES6
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Author: Axel Rauschmayer&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;ES6 is a modern JavaScript spec which comes with a boatload of new features and syntax. This book explores those additions in a way that doesn’t make you feel overwhelmed. A great resource for those looking to stay updated.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://exploringjs.com/es6/"&gt;Get this book&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#javascript-enlightenment"&gt;
  &lt;/a&gt;
  JavaScript Enlightenment
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Author: Cody Lindley&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This book is targeted at advanced-level to beginner-level JavaScript developers. If you have basic knowledge of JavaScript, this book will help consolidate your knowledge by introducing a whole new way of doing things.&lt;br&gt;
A  lot of advanced topics are covered in great detail.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://frontendmasters.com/books/javascript-enlightenment/"&gt;Get this book&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#learn-javascript"&gt;
  &lt;/a&gt;
  Learn JavaScript
&lt;/h3&gt;

&lt;p&gt;This free ebook is targeted at absolute beginners in JavaScript. You get to learn beginner level concepts like Closures, The DOM, basic syntax and loops. It has lots of exercises and everything is explained in a plain, simple way.&lt;br&gt;
A great resource for those just starting out.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://gitbookio.gitbooks.io/javascript/content/"&gt;Get this book&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#javascript-succinctly"&gt;
  &lt;/a&gt;
  JavaScript succinctly
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Author: Cody Lindley&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Understanding the concepts like Classes, Object and prototype mechanism is sometimes difficult and that is exactiy what this book is all about. It concisely explore the world of classes and objects in a way that leaves you enlightened on the topic after ypu’re done.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.syncfusion.com/ebooks/javascript/javascript-objects"&gt;Get this book&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#javascript-for-the-impatient-programmer"&gt;
  &lt;/a&gt;
  JavaScript for the impatient programmer
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Author: Axel Rauschmayer&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It is popularly said that shortcuts are bad in life. This book provides you with a shortcut to learning JavaScript by making everything short, concise and modern.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://exploringjs.com/impatient-js/toc.html"&gt;Get this book&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#human-javascript"&gt;
  &lt;/a&gt;
  Human JavaScript
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Author: Henrik joreteg&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is identifies that since code is written by human beings and not machines, it should be written that makes it readable, easy to maintain and flexible. It emphases best practices, testing, routing and other important concepts.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://read.humanjavascript.com/ch00-foreword.html"&gt;Get this book&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#javascript-challenges"&gt;
  &lt;/a&gt;
  JavaScript Challenges
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Author: Tomas Corral Casas&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This books challenges you get better at JavaScript with trick questions, coding challenges and more.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://tcorral.github.io/javascript-challenges-book/"&gt;Get this book&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#neural-networks-with-javascript-succintly"&gt;
  &lt;/a&gt;
  Neural networks with JavaScript Succintly
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Author: James McCaffrey&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Did you know you can make Neural networks with JavaScript? Now you do!&lt;br&gt;
This book leads you into the world of JavaScript and Neural networks. It tackles concepts like it’s output, it input-output flow, tahn and back-propagation,  normalization etc.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.syncfusion.com/ebooks/neural-networks-with-javascript-succinctly/getting-started"&gt;Get this book&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#javascript-design-patterns"&gt;
  &lt;/a&gt;
  JavaScript Design Patterns
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Author: Addy Osmani&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you are a professional JavaScript developer looking to solidify and get acquinted with some advanced topics inherent in JavaScript and write quality and optimized code, this book is perfect for you. Some advanced topics like advanced closure and prototypes are tackled in detail.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://addyosmani.com/resources/essentialjsdesignpatterns/book/"&gt;Get this book&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#eloquent-javascript"&gt;
  &lt;/a&gt;
  Eloquent JavaScript
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Author: Marijn Haribeke&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Probably one of the most popular and acclaimed JavaScript book of all time. Eloquent JavaScript “eloquently” dissects JavaScript in a very simple way for absolute beginners and intermediate-level readers to easily follow and understand.&lt;br&gt;
It’s a great resources for every JavaScript developer to check out t some point.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://eloquentjavascript.net/2nd_edition/Eloquent_JavaScript_small.pdf"&gt;Get this book&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#practical-es6"&gt;
  &lt;/a&gt;
  Practical ES6
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Author: Nicolas Begacqua&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Learning about ES6 is one thing, practicing it is another thing. This book is pleasantly filled with helpful tutorials and practices to help you quickly grasp ES6 and write modern JavaScript programs. You get to see the usage of all ES6 code in practose. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://ponyfoo.com/books/practical-modern-javascript"&gt;Get this book&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#speaking-javascript"&gt;
  &lt;/a&gt;
  Speaking JavaScript
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Author:  Axel Rauschmayer&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you already know about JavaScript and are to simply get better then this book is a great resource for that.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://speakingjs.com/es5/index.html"&gt;Get this book&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#cleancode-javascript"&gt;
  &lt;/a&gt;
  Cleancode JavaScript
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Author: Ryan McDermott&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Learning to write clean code is an absolutely huge investment you should make for yourelf as a developer. Thankfully, this guides you on how to do just that!&lt;br&gt;
Cleancode javascript is arguably one of the most popular JavaScript resources out there.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/ryanmcdermott/clean-code-javascript"&gt;Get this book&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#javascript-for-cats"&gt;
  &lt;/a&gt;
  JavaScript for Cats
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Author: Noblemule&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A beginner-friendly introduction for absolute beginners (or cats). It teaches basics concepts like the browser console, the Dom and other simple stuff&lt;/p&gt;

&lt;p&gt;&lt;a href="https://noblemule.gitbooks.io/javascript-for-cats/content/"&gt;Get this book&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#developing-backbone-applications"&gt;
  &lt;/a&gt;
  Developing Backbone Applications
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Author: Addy Osmani&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A fantastic guide for creating MVC applications with Backbobe.js framework. Structured in such a way that makes it suitable for beginners, intrmediate-level and even advanced-level developers.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/addyosmani/backbone-fundamentals/raw/gh-pages/backbone-fundamentals.pdf"&gt;Get this book&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#special-mention"&gt;
  &lt;/a&gt;
  SPECIAL MENTION
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#html-to-react"&gt;
  &lt;/a&gt;
  HTML To React
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Author: Sleepless Yogi&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Unlike others in this list, this book is not free. As its name implies, HTML To React teaches you all about web development while assuming you have knowledge of nothing but HTML. The book is highly acclaimed to be a great and incredibly deep resource for learning JavaScript and even React!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://gumroad.com/a/834147443"&gt;Get this book&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;I hope you get something value from this list. If you come across any issues with the links, you can reach me on  &lt;a href="https://twitter.com/ubahthebuilder"&gt;Twitter&lt;/a&gt;  &lt;/p&gt;

&lt;p&gt;If you benefitted from this and would like to support my work, you can buy me my favourite fruit:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/ubahthebuilder"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kc5Aqnyc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.buymeacoffee.com/button-api/%3Ftext%3DBuy%2520me%2520a%2520pineapple%26emoji%3D%25F0%259F%258D%258D%26slug%3Dubahthebuilder%26button_colour%3De0b51a%26font_colour%3D000000%26font_family%3DCookie%26outline_colour%3D000000%26coffee_colour%3DFFDD00"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks for reading and see you soon.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
  </channel>
</rss>
