<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>8 Projects Beginners can build to learn React.js in 2022</title>
      <author>javinpaul</author>
      <pubDate>Wed, 29 Dec 2021 05:56:07 +0000</pubDate>
      <link>https://dev.to/javinpaul/8-projects-beginners-can-build-to-learn-reactjs-in-2022-1e3i</link>
      <guid>https://dev.to/javinpaul/8-projects-beginners-can-build-to-learn-reactjs-in-2022-1e3i</guid>
      <description>&lt;p&gt;&lt;em&gt;Disclosure: This post includes affiliate links; I may receive compensation if you purchase products or services from the different links provided in this article.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.educative.io/courses/a-deep-dive-into-react-hooks?affiliate_id=5073518643380224"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NKzZ5feM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.educative.io/v2api/editorpage/5024256839647232/image/4718983717584896" alt="Node.js vs React.js: which to choose for your web app project" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hello Devs, if you are self-learning React.js in 2022 and looking for React.js project ideas to learn React better and further improve your React skills then you have come to the right place. &lt;/p&gt;

&lt;p&gt;Earlier, I have shared the best &lt;a href="https://javarevisited.blogspot.com/2020/10/top-5-websites-to-learn-react-for-free.html"&gt;&lt;strong&gt;react.js websites&lt;/strong&gt;&lt;/a&gt;, &lt;a href="https://javarevisited.blogspot.com/2018/08/top-5-react-js-and-redux-courses-to-learn-online.html#axzz5r06B3egD"&gt;&lt;strong&gt;courses&lt;/strong&gt;&lt;/a&gt;, &lt;a href="https://javarevisited.blogspot.com/2018/10/the-2018-react-developer-roadmap.html"&gt;&lt;strong&gt;roadmap&lt;/strong&gt;&lt;/a&gt;, and &lt;a href="https://www.java67.com/2020/03/top-5-books-to-learn-reactjs-for-beginners.html"&gt;&lt;strong&gt;books&lt;/strong&gt; &lt;/a&gt; to learn Reactjs, and today, I am going to share the best React.js projects you can build to learn both React.js and React Native and if you already know React then you can also improve your React skills. &lt;/p&gt;

&lt;p&gt;These projects are mainly for beginners who are learning React.js but even intermediate developers can use these project ideas to create some fun projects.  &lt;/p&gt;

&lt;p&gt;Learning web development and new technologies is not easy and ReactJS is one of them. Just completing an online course about react doesn't make you a professional web developer until you test your knowledge by creating multiple projects so you take advantage of its features for learning purposes.&lt;/p&gt;

&lt;p&gt;If you are learning React.js, one of the most &lt;a href="https://www.java67.com/2019/01/top-10-javascript-frameworks-and-libraries-for-web-developers.html"&gt;popular JavaScript libraries&lt;/a&gt; for frontend development and you want to enhance your skills you should start building a project right now. &lt;/p&gt;

&lt;p&gt;One of the key advantages of building projects rather than doing exercises is that you get exposure to many related technologies which is key to build a real-life application.&lt;/p&gt;

&lt;p&gt;You also get to build something which people want to use and something which you can add to your resume or your GitHub portfolio and something which can proudly share with your friends, family, and prospective employers. Doing projects has many benefits.&lt;/p&gt;

&lt;p&gt;In this article, you will see many projects that you can do to learn more and master this react library, and build a good portfolio that can attract employees to hire you or showcase to your peers and maybe start your own business as a freelancer.&lt;/p&gt;

&lt;p&gt;By the way, if you are a complete beginner in React.js then I would suggest you first go through a comprehensive React course like &lt;strong&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Freact-the-complete-guide-incl-redux%2F"&gt;React - The Complete Guide (incl Hooks, React Router, Redux)&lt;/a&gt;&lt;/strong&gt;  to learn React.js in a structured way instead of jumping into projects. Once you know React Fundamentals and different React concepts you can start with these projects.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Freact-the-complete-guide-incl-redux%2F"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8uiEYWx8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.filepicker.io/api/file/7BVwsHlgQzC4Fq1fLVq8" alt="React - The Complete Guide (incl Hooks, React Router, Redux) | Academi" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#8-best-reactjs-projects-for-beginners"&gt;
  &lt;/a&gt;
  8 Best React.js Projects for Beginners
&lt;/h2&gt;

&lt;p&gt;Without wasting any more of your time, here is a list of Reactjs project ideas for beginners. You can build these projects in any order but going from top to bottom is the recommended one as you will start with games, learn building logic, and then finally build a complete website using the React.js library.&lt;/p&gt;

&lt;p&gt;It's very common to get stuck while building projects so don't get disappointed or give up when you stuck. I have also mentioned resources and online courses where you can check how to build a particular project if you stuck.&lt;/p&gt;

&lt;p&gt;My online advice is don't copy-paste, instead if you stuck go through the resource and learn and then come back and do it yourself.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-build-an-expense-tracker"&gt;
  &lt;/a&gt;
  1. Build an Expense Tracker
&lt;/h3&gt;

&lt;p&gt;This is an interesting app idea to learn REact.js where you will build a complete Expense Tracker using React Hooks &amp;amp; Context API. At bare minimum your app should allows user to add expenses, categories them and show some insights like how much expenses went towards food, education, entertainment, bills, and travel etc. &lt;/p&gt;

&lt;p&gt;If you need a resource, here is a Youtube video from Brad Traversy of TraversyMedia which will show you step by step how to build this project. &lt;/p&gt;

&lt;p&gt;In this project you  will take a vanilla JS expense tracker app and turn it into a React app using hooks (useState, useContext, useReducer) and the context API.&lt;/p&gt;

&lt;p&gt;And, if you like Brad's teaching style you can also consider joining his &lt;a href="https://click.linksynergy.com/deeplink?id=CuIbQrBnhiw&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Freact-front-to-back-2022%2F"&gt;React Front to Back 2022&lt;/a&gt; courses where he has shown another three interesting projects, a feedback app, a Github finder, and a House marketplace beginners can build to learn React.js. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=CuIbQrBnhiw&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Freact-front-to-back-2022%2F"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Equ1jvHy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ytimg.com/vi/XuFDcZABiDQ/maxresdefault.jpg" alt="React project for beginners Build an Expense Tracker | React Hooks &amp;amp;amp; Context API - YouTube" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;By the way you should try to build the project yourself before jumping into this resource that's a better way to learn, only see the course after you built the project or when you get stuck. &lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#2-build-movie-search-engine"&gt;
  &lt;/a&gt;
  2. Build Movie Search Engine
&lt;/h3&gt;

&lt;p&gt;This is another awesome project idea for building a complete web application using React.js. You can build a Netflix style movie clone using ReactJS. &lt;/p&gt;

&lt;p&gt;At bare minimum this project will show the top 10 movies for the week and also allows you to search movie from backend database. &lt;/p&gt;

&lt;p&gt;If you need a resource, this &lt;a href="https://click.linksynergy.com/deeplink?id=CuIbQrBnhiw&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Freact-movie-search-engine%2F"&gt;Build Movie Search Engine Using ReactJS&lt;/a&gt; Udemy course will teach you how to build a movie search engine using React.js&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=CuIbQrBnhiw&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Freact-movie-search-engine%2F"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--INXm52ys--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-media-1.freecodecamp.org/images/kbYsxsxb2D7mBhdlEmUrpMhRmOcQoR79vtT1" alt="How to build a movie search app using React Hooks" width="800" height="473"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#3-instagram-clone-using-reactjs"&gt;
  &lt;/a&gt;
  3. Instagram clone using React.js
&lt;/h3&gt;

&lt;p&gt;A lot of us use social media and we are very familiar with web apps like Twitter, TikTok, Instagram and Facebook and one way you can leverage that knowledge and passion is to build their clone using React.js in 2022 to learn React better. &lt;/p&gt;

&lt;p&gt;In particular, you can build Instagram clone in React which allows user to upload photos and video's, follow other user, allow them to tag photo and video and then show them in newsfeed. You can add as many feature you want but at bare minimum you should have these features. &lt;/p&gt;

&lt;p&gt;If you need a course to guide you then &lt;a href="https://click.linksynergy.com/deeplink?id=CuIbQrBnhiw&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fcss-grid-with-react%2F"&gt;React Instagram Clone - CSS Grid Mastery&lt;/a&gt; course on Udemy is a great resource. This course will teach you how to build an Image Gallery app like Instagram with React, React Router and styled-components, mastering CSS Grid with over 100 examples! &lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=CuIbQrBnhiw&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fcss-grid-with-react%2F"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4fL6L1Rx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9ohl7culypmfnexyc8aj.png" alt="how to create Instagram clone using React.js " width="880" height="495"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;If you need another resource, freeCodecamp also have a free course on Youtube to show you how to build an Instagram app, you can watch it here&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/mDgEqoQUBgk"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#4-building-tic-tac-toe-in-react"&gt;
  &lt;/a&gt;
  4. Building Tic Tac Toe in React
&lt;/h3&gt;

&lt;p&gt;In this project, you will build a Tic Tac Toe game with three rows and columns as usually with two players start making X and O and the first who complete a line vertically or horizontally wins and they need to prevent each other from doing that otherwise one of them will win the game.&lt;/p&gt;

&lt;p&gt;This project actually exists as a Free course on udemy called &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Freact-clarified-building-a-game-in-react%2F"&gt;&lt;strong&gt;Building a Game in React&lt;/strong&gt;&lt;/a&gt; showing you step by step how to implement this using react and with some basic HTML/CSS JavaScript code, so if you found it a little bit hard so and check that course for more info.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Freact-clarified-building-a-game-in-react%2F"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_wwayj4y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://1.bp.blogspot.com/-3Uq_AgFTzdI/YHKBRu7jbPI/AAAAAAAAnD8/vHnHaqmIH_o7JEnZZk5wpbuFtsJ4Cv39ACLcBGAsYHQ/w412-h232/Tic%252BTac%252BToe%252Bin%252BReact%252B-%252BFree%252BUdemy%252BCourse%252Band%252BProjects.png" alt="how to build Tic Tac Toe in React - Free Projects" width="412" height="232"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#5-build-react-js-based-web-application"&gt;
  &lt;/a&gt;
  5. Build React JS based Web Application
&lt;/h3&gt;

&lt;p&gt;You will have to create a react js single web application with a front that seems like a blog website and should be also mobile-friendly and adding some features like a mobile menu and the main thing here is the ability to navigate through pages without refreshing the browser.&lt;/p&gt;

&lt;p&gt;This Free course on udemy is based project known as &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fbuild-your-first-react-js-application%2F"&gt;&lt;strong&gt;Build your first React JS Application&lt;/strong&gt;&lt;/a&gt; where shows you how to create your own react js web application and is well mobile-friendly with features like the navigation menu and more so you can take it as a reference if you get stuck with that project.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fbuild-your-first-react-js-application%2F"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c0drpqLZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://1.bp.blogspot.com/-AUGzHyqK63I/YHKBysQEU6I/AAAAAAAAnEM/NWvIahXllnYgNUC5V3bYVGfUPYkdtJZ0wCLcBGAsYHQ/w373-h210/first%252BReact%252Bweb%252Bapplication%252Bfor%252Bbeginners%252B-%252Budemy%252Bfree%252Bcourse.png" alt="" width="373" height="210"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#6-build-a-crypto-currency-tracker-app-using-react-native"&gt;
  &lt;/a&gt;
  6. Build a Crypto Currency Tracker App using React Native
&lt;/h3&gt;

&lt;p&gt;In this project, you will create a cryptocurrency tracker app e that runs on your phone with some features like how much is the price of a particular cryptocurrency in real-time.&lt;/p&gt;

&lt;p&gt;The idea is great and you can actually put this app into App Store or Google PlayStore as React Native allows you to create cross-platform apps. You can use React.js, React Native, and Firebase to build the course, where Firebase can be used to build the backend.&lt;/p&gt;

&lt;p&gt;If you get stuck then you can &lt;strong&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fultimate-react-native-with-firebase%2F"&gt;watch this free Udemy course&lt;/a&gt;&lt;/strong&gt; to get some idea about how to build a Crypto Currency Tracker app using React and React Native.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fultimate-react-native-with-firebase%2F"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--F2KTSxiI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/-kAd2mt86xe4/YHKdyWDvq2I/AAAAAAAAnEw/cn7DBJJDsbkLyajfWpndqPQfWFbK4DMUQCLcBGAsYHQ/w416-h250/image.png" alt="" width="416" height="249"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#7-building-a-react-form"&gt;
  &lt;/a&gt;
  7. Building a React Form
&lt;/h3&gt;

&lt;p&gt;In this project, you have to create a simple sign up form utilizing react and should be containing fields like the username email password with some features like when the user enters different things in the email field it tells him an invalid email or the password doesn't match it will tell him that.&lt;/p&gt;

&lt;p&gt;The project is aimed to be for beginners who start learning the react library but if you found some troubles completing this project then feel free to refer to this course called &lt;strong&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Freact-forms-crash-course%2F"&gt;React Forms&lt;/a&gt;&lt;/strong&gt; on udemy to get some help.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Freact-forms-crash-course%2F"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DyqPwf9Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/-QBXh0wT9i48/X4vLGSumJ3I/AAAAAAAAj3I/ePcIpcOgmHkB2rHm7VGTwEZ0qx1Ro5mpwCLcBGAsYHQ/w400-h225/image.png" alt="best reactjs projects for beginners" width="400" height="225"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#8-build-a-website-using-reactjs-and-hooks"&gt;
  &lt;/a&gt;
  8. Build a Website using React.js and Hooks
&lt;/h3&gt;

&lt;p&gt;The last project is to create a simple website which the react library is aimed to do but you need to add some HTML/CSS JavaScript code into your web pages and adding some components with pictures and make it a little bit modern and have a nice interface.&lt;/p&gt;

&lt;p&gt;As usual, every project that I suggest does have an online course that already has the solution for your problem and this guided project on Coursera called &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=40328&amp;amp;murl=https%3A%2F%2Fwww.coursera.org%2Fprojects%2Fbuild-first-react-website"&gt;&lt;strong&gt;Build Your First React Website&lt;/strong&gt;&lt;/a&gt; has the solution for your project if you get stuck at some point while creating it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=40328&amp;amp;murl=https%3A%2F%2Fwww.coursera.org%2Fprojects%2Fbuild-first-react-website"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--atbeMRdA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/--092bRmYIho/YHKchJRvUuI/AAAAAAAAnEg/qWI_Hp6lHbs2CJm0r4NoSrU-w9Z4IbGJwCLcBGAsYHQ/w388-h204/image.png" alt="" width="388" height="203"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That's all about the &lt;strong&gt;best Reactjs projects for beginners&lt;/strong&gt;. The resources provided in this article will differently make you a react developer and will get you some experience that you can rely on it if you want to apply for a job or start your own business as a freelance developer.&lt;/p&gt;

&lt;p&gt;And, if you have fun creating projects and you want more for purposes like rich your portfolio with projects as an experience to get hired or anything checks out this course on Udemy &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fcomplete-react-js-course%2F"&gt;&lt;strong&gt;Complete React JS web developer&lt;/strong&gt;&lt;/a&gt; that will help you building 10 real-world projects and some of them are:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; Blog application&lt;/li&gt;
&lt;li&gt; Course sales application&lt;/li&gt;
&lt;li&gt; Reddit API&lt;/li&gt;
&lt;li&gt; Timer application&lt;/li&gt;
&lt;li&gt; React application&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This course is not free but it's completely worth your money. It's also very affordable and you can buy in just $10 on Udemy sales which happen every now and then.&lt;/p&gt;

&lt;p&gt;Other *&lt;em&gt;React.js and Web development articles *&lt;/em&gt; you may like&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2018/02/top-5-online-courses-to-learn-web-development.html"&gt;Top 5 Courses to learn Web Development in 2021&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2020/08/top-10-pluralsight-courses-to-learn-React.js.html"&gt;Top 10 React Courses from Pluralsight&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/javarevisited/top-10-free-courses-to-learn-react-js-c14edbd3b35f"&gt;10 Free React.js courses to learn Hooks and Context API&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2020/09/top-5-online-courses-to-learn-gatsby-in.html"&gt;Top 5 Gatsby Courses for React Developers&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2019/04/10-free-angular-and-react-courses-for.html"&gt;10 Free Angular and React Courses for Developers &lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/javarevisited/12-free-courses-to-learn-javascript-and-es6-for-beginners-and-experienced-developers-aa35874c9a32"&gt;12 Free JavaScript Courses for Web developers&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2019/02/the-2019-web-developer-roadmap.html"&gt;The 2022 Web Developer RoadMap&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="http://javarevisited.blogspot.sg/2018/02/5-react-native-courses-to-learn-mobile-development-using-JavaScript.html"&gt;5 Courses to Learn React Native in 2022&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/better-programming/my-5-favorite-courses-to-learn-web-development-in-2019-a5e74167f8b2"&gt;My favorite course to learn Web Development&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2020/05/top-3-courses-to-learn-sveltejs-in-2020.html"&gt;3 Best Svelete.js Courses for Beginners in 2022&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="http://www.java67.com/2019/01/top-10-javascript-frameworks-and-libraries-for-web-developers.html"&gt;10 JavaScript Framework Fullstack Developer should know&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/javarevisited/top-10-free-courses-to-learn-angular-framework-in-2020-bb62148c73d3"&gt;10 Free Angular Courses for Beginners to learn in 2022&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/javarevisited/top-10-courses-to-learn-python-for-web-development-in-2020-best-of-lot-efe11fb6d212"&gt;Top 10 Courses to learn Python for Web Development&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/javarevisited/10-best-online-courses-to-learn-javascript-in-2020-af5ed0801645"&gt;10 best Courses to learn JavaScript in depth&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/javarevisited/7-best-courses-to-learn-typescript-in-depth-58439e1ce729"&gt;7 Best Courses to learn TypeScript for Beginners&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thanks for reading this article so far. If you like these &lt;em&gt;best Reacjts projects for beginners&lt;/em&gt; then please share them with your friends and colleagues. If you have any questions or feedback, please drop a note.&lt;/p&gt;

&lt;p&gt;All the best.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;P. S. -&lt;/strong&gt; If you just want to do one thing at this moment to kickstart your React.js  journey, just go and join &lt;strong&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Freact-redux%2F"&gt;The Modern React with Redux [2021 Update]&lt;/a&gt;&lt;/strong&gt; course by Stephen Grider on Udemy. You will learn React.js quickly and never regret your decision.&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>coding</category>
    </item>
    <item>
      <title>How to use Node.js to backup your personal files (and learn some webdev skills along the way)</title>
      <author>Alex Eagleson</author>
      <pubDate>Wed, 29 Dec 2021 04:44:16 +0000</pubDate>
      <link>https://dev.to/alexeagleson/how-to-use-nodejs-to-backup-your-personal-files-and-learn-some-webdev-skills-along-the-way-541a</link>
      <guid>https://dev.to/alexeagleson/how-to-use-nodejs-to-backup-your-personal-files-and-learn-some-webdev-skills-along-the-way-541a</guid>
      <description>&lt;p&gt;All code from this tutorial as a complete package is available in &lt;a href="https://github.com/alexeagleson/template-node-backup-directory"&gt;this repository&lt;/a&gt;.  If you find this tutorial helpful, please share it with your friends and colleagues!&lt;/p&gt;

&lt;p&gt;For more tutorials like this, follow me &lt;a href="https://twitter.com/eagleson_alex?ref_src=twsrc%5Etfw"&gt;@eagleson_alex&lt;/a&gt; on Twitter&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;Like many other people out there, I have quite a few digital documents and pictures that are important to me. &lt;/p&gt;

&lt;p&gt;Although I know I have at least one copy of these locally, and I do use Dropbox as cloud storage; I'll freely admit I don't meet the coveted &lt;a href="https://www.backblaze.com/blog/the-3-2-1-backup-strategy/"&gt;3-2-1 backup strategy&lt;/a&gt; standards 😳.&lt;/p&gt;

&lt;p&gt;Over the holidays I received a new 4TB hard drive and with it, a renewed interest in backing up my data (at least the important stuff like pictures of my kids, and financial records.  I &lt;em&gt;guess&lt;/em&gt; in the worst case scenario, I could probably replace my Star Trek TNG blu-ray rips; so I'll keep those separate for now).&lt;/p&gt;

&lt;p&gt;With that in mind, I decided to combine it with an exercise that dives a bit further than I usually go into the Node.js ecosystem.&lt;/p&gt;

&lt;p&gt;This tutorial is the result of that exploration, and the result is a little tool for synchronizing backup copies of any directory on your machine. As a bonus we're going to configure it to support Linux, Mac and Windows.&lt;/p&gt;

&lt;p&gt;This is one of those posts where the biggest beneficiary in many ways is &lt;em&gt;myself&lt;/em&gt;.  I wanted to try something new and simply documented my experience with learning.  It follows &lt;a class="mentioned-user" href="https://dev.to/swyx"&gt;@swyx&lt;/a&gt;'s philosophy of &lt;a href="https://www.swyx.io/learn-in-public/"&gt;learn in public&lt;/a&gt; and share what you've learned with the wider community so hopefully everyone can benefit.&lt;/p&gt;

&lt;p&gt;That said, I should be very clear that this is primarily meant as a learning experience and is &lt;strong&gt;&lt;em&gt;absolutely not meant to be the best backup solution&lt;/em&gt;&lt;/strong&gt;.  &lt;/p&gt;

&lt;p&gt;If you're serious about remote storage then something like &lt;a href="https://www.google.com/intl/en_ca/drive/"&gt;Google Drive&lt;/a&gt; will get the job done for you. For local backups setting up a &lt;a href="https://en.wikipedia.org/wiki/RAID"&gt;RAID drive&lt;/a&gt; will cover your ass better than this little backup app will.&lt;/p&gt;

&lt;p&gt;That said, those options are a lot less &lt;strong&gt;&lt;em&gt;fun&lt;/em&gt;&lt;/strong&gt; so if you're willing to use this as a learning opportunity to practice your Node.js skills, and get some bonus scheduled backups out of it, I think you'll find this to be a really interesting tutorial.  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table of Contents
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="#what-you-will-learn"&gt;What You Will Learn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#try-it-out-optional"&gt;Try it Out (Optional)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#configuring-your-machine-optional"&gt;Configuring Your Machine (Optional)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#creating-the-project"&gt;Creating the Project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#cross-platform-support"&gt;Cross Platform Support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#running-as-a-background-process"&gt;Running as a Background Process&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#adding-a-discord-webhook-bonus"&gt;Adding a Discord Webhook (Bonus)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#wrapping-up"&gt;Wrapping Up&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#what-you-will-learn"&gt;
  &lt;/a&gt;
  What You Will Learn
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Common Linux tools like &lt;code&gt;rsync&lt;/code&gt; (copying files locally and over SSH), &lt;code&gt;cron&lt;/code&gt; (scheduling tasks on a specific interval) and &lt;code&gt;nohup&lt;/code&gt; (run something as a background process that doesn't stop when the terminal session is ended)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Running Node (Javascript) apps as background processes, including automatic reboot on crash using &lt;code&gt;pm2&lt;/code&gt;, a production viable tool for Node.js servers.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;More about the different values available on the &lt;code&gt;process&lt;/code&gt; object in Node.js including &lt;code&gt;title&lt;/code&gt; and &lt;code&gt;platform&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create an app that behaves differently depending on which OS it's running on and works on both Bash (Mac/Linux) and Microsoft PowerShell (Windows)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Send messages to a webhook with HTTP POST requests, in our example that webhook will be a Discord bot&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#try-it-out-optional"&gt;
  &lt;/a&gt;
  Try it Out (Optional)
&lt;/h2&gt;

&lt;p&gt;If you want to try it out first, then follow the instructions below. If you want to jump into creating your own version, then skip this section.&lt;/p&gt;

&lt;p&gt;This app will work on both Mac/Linux (Bash) and Windows (PowerShell).  &lt;/p&gt;

&lt;p&gt;All you need installed are &lt;code&gt;git&lt;/code&gt; and &lt;code&gt;nodejs&lt;/code&gt;.  &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Clone the project from  &lt;a href="https://github.com/alexeagleson/template-node-backup-directory"&gt;this repository&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;npm install&lt;/code&gt; from the project directory&lt;/li&gt;
&lt;li&gt;Create a &lt;code&gt;.env&lt;/code&gt; file in the root with the following structure:
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;SOURCE_DIR="example-source/"
DESTINATION_DIR="example-destination/"
CRON_STRING="* * * * * *"
WEBHOOK_ID="DISCORD_WEBHOOK_ID"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Update &lt;code&gt;SOURCE_DIR&lt;/code&gt; to be the directory you want to copy, and &lt;code&gt;DESTINATION_DIR&lt;/code&gt; where you want to synchronize.  &lt;/p&gt;

&lt;p&gt;Edit &lt;code&gt;CRON_STRING&lt;/code&gt; to determine the schedule the copying occurs on.  If you are not familiar with cron strings use &lt;a href="https://crontab.guru/"&gt;this tool&lt;/a&gt; to help you create one.  &lt;/p&gt;

&lt;p&gt;The &lt;code&gt;DISCORD_WEBHOOK_ID&lt;/code&gt; is optional.  If you don't use it it will not impact the app.  If you do use it you remove the &lt;code&gt;https://discord.com/api/webhooks/&lt;/code&gt; portion of the webhook URLm the remainder is the &lt;code&gt;DISCORD_WEBHOOK_ID&lt;/code&gt;.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Run the app with &lt;code&gt;node backup.js&lt;/code&gt;.
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you plan to run it as a long-term background process you can use PM2 which is described in the &lt;a href="#running-as-a-background-process"&gt;Running as a Background Process&lt;/a&gt; section.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#configuring-your-machine-optional"&gt;
  &lt;/a&gt;
  Configuring Your Machine (Optional)
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;(Note: if you already have a machine and folders that you want to use for your backups setup, then you can skip this step entirely.  All we are going to cover in this section is setting up Ubuntu Linux on an old laptop, configuring it to run 24/7, and using SSH so that we can access and manage it remotely from other machines on our home network)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I'll be using this little blue Dell Inspiron with a whopping 2GB of RAM sitting around collecting dust.  &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hR2vbNHK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/dqse2txyi/image/upload/r_20/v1640738978/blogs/node-backup/dell-blue_si4qwq.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hR2vbNHK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/dqse2txyi/image/upload/r_20/v1640738978/blogs/node-backup/dell-blue_si4qwq.jpg" alt="Dell Inspiron" width="730" height="383"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Honestly it's a great machine with an SSD inside of it, unfortunately it's just too bottlenecked by its 2GB of RAM, and there is no way to upgrade it (I've tried).  &lt;/p&gt;

&lt;p&gt;So for that reason I haven't been able to get much use out of it, but that changes now.  &lt;/p&gt;

&lt;p&gt;I began by following &lt;a href="https://ubuntu.com/tutorials/create-a-usb-stick-on-ubuntu#1-overview"&gt;this tutorial for installing Ubuntu with a USB stick&lt;/a&gt; and got the little laptop up and running with the latest Ubuntu.&lt;/p&gt;

&lt;p&gt;Next I needed to make sure I could access the laptop from the terminal on my main machine.  That will be done over SSH so I followed &lt;a href="https://linuxize.com/post/how-to-enable-ssh-on-ubuntu-20-04/"&gt;this tutorial on enabling SSH on Ubuntu&lt;/a&gt;.  Afterwards I confirmed I could successfully SSH into the laptop from my machine.&lt;/p&gt;

&lt;p&gt;Next I need to make sure that both &lt;code&gt;git&lt;/code&gt; and &lt;code&gt;node&lt;/code&gt; are installed on the machine, so that I can clone my project and run it.  Fortunately &lt;code&gt;git&lt;/code&gt; comes by default with Ubuntu and I can installed &lt;code&gt;node&lt;/code&gt; with:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;apt update
&lt;span class="nb"&gt;sudo &lt;/span&gt;apt &lt;span class="nb"&gt;install &lt;/span&gt;nodejs
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If this gives you any trouble just &lt;a href="https://www.digitalocean.com/community/tutorials/how-to-install-node-js-on-ubuntu-20-04"&gt;follow this tutorial&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Next I plug in my external hard drives that I am going to be using as backups.  When I create my app I'll be pointing from one directory on one hard drive to another directory on the other hard drive to sync each week.&lt;/p&gt;

&lt;p&gt;Lastly I need to do a bit of housekeeping for the laptop to make sure it stays running and knows what to do when the lid is closed.  &lt;/p&gt;

&lt;p&gt;To keep it from sleeping it's as simple as &lt;code&gt;Settings -&amp;gt; Power&lt;/code&gt; and turn off &lt;code&gt;Automatic Suspend&lt;/code&gt;.  Basically disable anything that reads as if it will put your machine to sleep.&lt;/p&gt;

&lt;p&gt;Next I need to deal with what happens when I close the lid.  Unfortunately I don't see anything about that in Power settings so I need to edit the config file directly:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;gedit /etc/systemd/logind.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And change the following value from the default to &lt;code&gt;ignore&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;HandleLidSwitch=ignore
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If it is commented out (prefixed with &lt;code&gt;#&lt;/code&gt;) then remove the &lt;code&gt;#&lt;/code&gt; and save.  &lt;/p&gt;

&lt;p&gt;That's it!  I can now take the machine, close the lid and set it up in a nice cool area with the external drives attached ready to run all the time.  Ideally you should plug it into your router directly with ethernet to minimize wifi issues, however the laptop I have unfortunately has no ethernet, so I'll need to settle for wifi.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-the-project"&gt;
  &lt;/a&gt;
  Creating the Project
&lt;/h2&gt;

&lt;p&gt;Let's create a directory and initialize our Javascript project inside of it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm init &lt;span class="nt"&gt;-y&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next we install the three dependency libraries for the project:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install &lt;/span&gt;cron rsync dotenv
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here's what each one is used for:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;cron&lt;/strong&gt;: Will allow us to schedule the backup at specific intervals. This package uses a Javascript implementation of the &lt;em&gt;cron&lt;/em&gt; syntax and not the actual &lt;em&gt;cron&lt;/em&gt; daemon meaning we don't need to worry about OS compatibility issues with this package.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;rsync&lt;/strong&gt;: This will handle the copying and syncing of files for us. This package &lt;em&gt;does&lt;/em&gt; use the actual &lt;code&gt;rsync&lt;/code&gt; program installed on the user's machine so we will have to manage compatibility within our Node.js app for this one.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;dotenv&lt;/strong&gt;: Allows us to read &lt;code&gt;.env&lt;/code&gt; files from our project directory. This will let us include our personal directory paths and also our private Discord webhook without sharing that data in the git repo. Users who clone the project can provide their own values.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We'll create a Javascript file called &lt;code&gt;backup.js&lt;/code&gt; and get the absolute basics working:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;backup.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;CronJob&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;cron&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;CronJob&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Rsync&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;rsync&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Equivalent to writing `rsync -a example-source/ example-destination/` on terminal&lt;/span&gt;
&lt;span class="nx"&gt;rsync&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Rsync&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="c1"&gt;// The -a flag means "archive" to say we are copying the full directory not just a file&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;a&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;source&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;example-source/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;destination&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;example-destination/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;job&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;CronJob&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="c1"&gt;// Run this function once every minute&lt;/span&gt;
  &lt;span class="c1"&gt;// To learn more about this cron string visit the below link&lt;/span&gt;
  &lt;span class="c1"&gt;// https://crontab.guru/#*_*_*_*_*&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;* * * * *&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;rsync&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;code&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;cmd&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// List of rsync status codes&lt;/span&gt;
      &lt;span class="c1"&gt;// https://stackoverflow.com/a/20738063&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;backup completed with status code: &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;code&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="c1"&gt;// Replace with your time zone&lt;/span&gt;
  &lt;span class="c1"&gt;// https://gist.github.com/diogocapela/12c6617fc87607d11fd62d2a4f42b02a&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;America/Toronto&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Begin the cronjob&lt;/span&gt;
&lt;span class="nx"&gt;job&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;start&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Also create directories called &lt;code&gt;example-source&lt;/code&gt; and &lt;code&gt;example-destination&lt;/code&gt;.  Inside &lt;code&gt;example-source&lt;/code&gt; create a TXT file inside called &lt;code&gt;sample-file.txt&lt;/code&gt; with any content inside that file you like.  Doesn't matter what it is, it's just used to confirm our backup is working.&lt;/p&gt;

&lt;p&gt;Here's what things look like before the script has been run (note the empty &lt;code&gt;example-destination&lt;/code&gt; directory):&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sfWcFIkn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/dqse2txyi/image/upload/r_20%2Cbo_2px_solid_darkgrey/v1640672226/blogs/node-backup/backup-before_q0ndw5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sfWcFIkn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/dqse2txyi/image/upload/r_20%2Cbo_2px_solid_darkgrey/v1640672226/blogs/node-backup/backup-before_q0ndw5.png" alt="Backup Before" width="880" height="405"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After the script has run once:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2ZW3hZQu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/dqse2txyi/image/upload/r_20%2Cbo_2px_solid_darkgrey/v1640672226/blogs/node-backup/backup-after_licaio.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2ZW3hZQu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/dqse2txyi/image/upload/r_20%2Cbo_2px_solid_darkgrey/v1640672226/blogs/node-backup/backup-after_licaio.png" alt="Backup After" width="880" height="358"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Things are looking good, we have a once-every-minute interval backup of our &lt;code&gt;example-source&lt;/code&gt; directory to our &lt;code&gt;example-destination&lt;/code&gt; directory. &lt;/p&gt;

&lt;p&gt;At this point you could replace those directory strings with whatever folders you like and create a regular directory backup system on your machine.&lt;/p&gt;

&lt;p&gt;Let's make it easier to customize for those who are downloading and using our tool by adding &lt;code&gt;dotenv&lt;/code&gt; package to read &lt;code&gt;.env&lt;/code&gt; files as part of the configuration.&lt;/p&gt;

&lt;p&gt;If you've already followed the tutorial you have the &lt;code&gt;dotenv&lt;/code&gt; package installed with NPM so it's just a matter of importing it. Before we do let's create the &lt;code&gt;.env&lt;/code&gt; file. Make sure to note that is &lt;code&gt;.env&lt;/code&gt; with a starting &lt;code&gt;.&lt;/code&gt; (to indicate hidden files):&lt;/p&gt;

&lt;p&gt;&lt;code&gt;.env&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;SOURCE_DIR="example-source/"
DESTINATION_DIR="example-destination/"
CRON_STRING="* * * * *"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we can update our code to read from that file. We just have to &lt;code&gt;require&lt;/code&gt; the &lt;code&gt;dotenv&lt;/code&gt; package at the top of our code:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;backup.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dotenv&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;CronJob&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;cron&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;CronJob&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Rsync&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;rsync&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Equivalent to writing `rsync -a example-source/ example-destination/` on terminal&lt;/span&gt;
&lt;span class="nx"&gt;rsync&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Rsync&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="c1"&gt;// The -a flag means "archive" to say we are copying the full directory not just a file&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;a&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="c1"&gt;// Reads from the `.env` file in the project directory&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;source&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;SOURCE_DIR&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;destination&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DESTINATION_DIR&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;job&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;CronJob&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="c1"&gt;// Run this function once every minute&lt;/span&gt;
  &lt;span class="c1"&gt;// To learn more about this cron string visit the below link&lt;/span&gt;
  &lt;span class="c1"&gt;// https://crontab.guru/#*_*_*_*_*&lt;/span&gt;
  &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;CRON_STRING&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;rsync&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;code&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;cmd&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// List of rsync status codes&lt;/span&gt;
      &lt;span class="c1"&gt;// https://stackoverflow.com/a/20738063&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;backup completed with status code: &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;code&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="c1"&gt;// Replace with your time zone&lt;/span&gt;
  &lt;span class="c1"&gt;// https://gist.github.com/diogocapela/12c6617fc87607d11fd62d2a4f42b02a&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;America/Toronto&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Begin the cronjob&lt;/span&gt;
&lt;span class="nx"&gt;job&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;start&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When we run &lt;code&gt;node backup.js&lt;/code&gt; again we get the same result, but this time our source and destination directories are being read from the &lt;code&gt;.env&lt;/code&gt; file. This will make it easier for users to add their own source/destination directories and cron string when they download the tool.&lt;/p&gt;

&lt;p&gt;It also improves privacy as we will be adding &lt;code&gt;.env&lt;/code&gt; to our &lt;code&gt;.gitignore&lt;/code&gt; file so the directories that I choose to copy on my machine will not be included in the git repository for this project.&lt;/p&gt;

&lt;p&gt;In fact, let's do that now. If you're creating this project for yourself you'll want to be able to commit it to your remote git host, so run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git init
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then create a &lt;code&gt;.gitignore&lt;/code&gt; file in the root directory with:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;.gitignore&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;node_modules
.env
nohup.out
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We exclude &lt;code&gt;.env&lt;/code&gt; for reasons mentioned above, and &lt;code&gt;node_modules&lt;/code&gt; since it will be re-created by running &lt;code&gt;npm install&lt;/code&gt; for anyone who uses our project.  The last one &lt;code&gt;nohup.out&lt;/code&gt; will contain some logs later in the tutorial that we don't need to share with others, so we're just adding it now in advance.&lt;/p&gt;

&lt;p&gt;Excellent! You now have a great little tool that works on Linux and Mac... but what about Windows?&lt;/p&gt;

&lt;p&gt;The truth is, basically all the development work I do is in a Linux environment. &lt;/p&gt;

&lt;p&gt;Even though I do all my daily development on Windows 11 with &lt;a href="https://docs.microsoft.com/en-us/windows/wsl/compare-versions"&gt;WSL2&lt;/a&gt; I'm still doing everything inside a native installing of Ubuntu despite logging into Windows each day.&lt;/p&gt;

&lt;p&gt;I honestly don't even know how to use Windows &lt;code&gt;cmd&lt;/code&gt; or PowerShell beyond the DOS commands I still remember from when I was a kid (dir?)... but if the majority of my personal stuff (photos and documents) are stored on Windows, maybe this is a good opportunity for me to learn?&lt;/p&gt;

&lt;p&gt;I like learning new things! I challenge myself: what do I need to do to get this working on Windows?&lt;/p&gt;

&lt;p&gt;Turns out it was surprisingly easy.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cross-platform-support"&gt;
  &lt;/a&gt;
  Cross Platform Support
&lt;/h2&gt;

&lt;p&gt;Most of our app will work fine on Windows as-is, the big challenge here is &lt;a href="https://en.wikipedia.org/wiki/Rsync"&gt;rsync&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;As you can see from that link, &lt;code&gt;rsync&lt;/code&gt; is a Unix copying tool that will be natively available on most Linux and mac environments; but not Windows.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;rsync&lt;/code&gt; package on NPM is simply a wrapper around the tool installed on your OS, so running our &lt;code&gt;backup.js&lt;/code&gt; in PowerShell gives us an error. The error is that the &lt;code&gt;rsync&lt;/code&gt; program does not exist.&lt;/p&gt;

&lt;p&gt;Here's the really cool thing though: not only does Windows have a very &lt;em&gt;similar&lt;/em&gt; tool with a similar API called &lt;a href="https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/robocopy"&gt;robocopy&lt;/a&gt;, the &lt;code&gt;rsync&lt;/code&gt; NPM package allows us to chain a method called &lt;code&gt;executable()&lt;/code&gt; that takes a string.&lt;/p&gt;

&lt;p&gt;That string is the name of the copying tool we want to use.&lt;/p&gt;

&lt;p&gt;It defaults to &lt;code&gt;rsync&lt;/code&gt;, but we can provide it with any name we want.&lt;/p&gt;

&lt;p&gt;We can check what OS the program is running on with &lt;code&gt;process.platform&lt;/code&gt; which will return &lt;code&gt;win32&lt;/code&gt; as a string when running on Windows.&lt;/p&gt;

&lt;p&gt;Let's update &lt;code&gt;backup.js&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;backup.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dotenv&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;CronJob&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;cron&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;CronJob&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Rsync&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;rsync&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// The value of process.platform will be:&lt;/span&gt;
&lt;span class="c1"&gt;// Windows: win32&lt;/span&gt;
&lt;span class="c1"&gt;// Mac: darwin&lt;/span&gt;
&lt;span class="c1"&gt;// Ubuntu: linux&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;syncProgram&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;platform&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;win32&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;robocopy&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;rsync&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// Equivalent to writing `rsync -a example-source/ example-destination/` on terminal&lt;/span&gt;
&lt;span class="nx"&gt;rsync&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Rsync&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;executable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;syncProgram&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="c1"&gt;// The -a flag means "archive" to say we are copying the full directory not just a file&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;a&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="c1"&gt;// Reads from the `.env` file in the project directory&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;source&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;SOURCE_DIR&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;destination&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DESTINATION_DIR&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;job&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;CronJob&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="c1"&gt;// Run this function once every minute&lt;/span&gt;
  &lt;span class="c1"&gt;// To learn more about this cron string visit the below link&lt;/span&gt;
  &lt;span class="c1"&gt;// https://crontab.guru/#*_*_*_*_*&lt;/span&gt;
  &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;CRON_STRING&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;rsync&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;code&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;cmd&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// List of rsync status codes&lt;/span&gt;
        &lt;span class="c1"&gt;// https://stackoverflow.com/a/20738063&lt;/span&gt;
        &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`Code &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;code&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Backup complete&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;

      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;currentDate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;toISOString&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
      &lt;span class="c1"&gt;// Write log to the console, or will be redirected to a&lt;/span&gt;
      &lt;span class="c1"&gt;// nohup.out file if using nohup&lt;/span&gt;
      &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stdout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;currentDate&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;\n`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="c1"&gt;// Replace with your time zone&lt;/span&gt;
  &lt;span class="c1"&gt;// https://gist.github.com/diogocapela/12c6617fc87607d11fd62d2a4f42b02a&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;America/Toronto&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Begin the cronjob&lt;/span&gt;
&lt;span class="nx"&gt;job&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;start&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Notice the changes above. I did a check against &lt;code&gt;process.platform&lt;/code&gt; and if it returns &lt;code&gt;win32&lt;/code&gt; we set the executable copy program to &lt;code&gt;robocopy&lt;/code&gt; instead of &lt;code&gt;rsync&lt;/code&gt; which will allow it to run on Windows.&lt;/p&gt;

&lt;p&gt;Lucky for us the syntax for &lt;code&gt;robocopy&lt;/code&gt; is exactly the same as &lt;code&gt;rsync&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;robocopy &amp;lt;&lt;span class="nb"&gt;source&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &amp;lt;destination&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This means we don't have to change anything else about the way our program already works, the &lt;code&gt;rsync&lt;/code&gt; package will call &lt;code&gt;robocopy&lt;/code&gt; exactly the same way when we're on Windows.&lt;/p&gt;

&lt;p&gt;We're ready to try it out. In order to get the project files on Windows, I'm going to push them to Github and then clone them on by Windows filesystem.&lt;/p&gt;

&lt;p&gt;So here's what I do: &lt;a href="https://github.com/alexeagleson/template-node-backup-directory"&gt;I push this project to Github&lt;/a&gt;. Then I open PowerShell.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;(I am a PowerShell noob, but I'm doing my best.)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Turns out I don't even have &lt;code&gt;git&lt;/code&gt; or &lt;code&gt;node&lt;/code&gt; installed on Windows so I'm not going to get very far here. &lt;/p&gt;

&lt;p&gt;First I need to &lt;a href="https://git-scm.com/download/win"&gt;download git&lt;/a&gt; so I can clone the project, then I need to &lt;a href="https://nodejs.org/en/download/"&gt;download node&lt;/a&gt; so I can run it.&lt;/p&gt;

&lt;p&gt;Once downloaded and installed I can run both these commands in PowerShell and get valid output:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;PS C:\Users\ME&amp;gt; git --version
git version 2.34.1.windows.1

PS C:\Users\ME&amp;gt; node --version
v16.13.1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now that everything is set I can &lt;code&gt;git clone MY_PROJECT_URL&lt;/code&gt; and then &lt;code&gt;cd&lt;/code&gt; into that directory and run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Before I can run the project though I need to create the &lt;code&gt;.env&lt;/code&gt; file since I did not include it in the repo for privacy reasons:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;.env&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;SOURCE_DIR="example-source/"
DESTINATION_DIR="example-destination/"
CRON_STRING="* * * * *"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally now in PowerShell in the project directory i run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;node backup.js
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And my result:&lt;/p&gt;

&lt;p&gt;Before the script has been run on Windows (note the empty &lt;code&gt;example-destination&lt;/code&gt; directory)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6YMJWFLj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/dqse2txyi/image/upload/r_20%2Cbo_2px_solid_darkgrey/v1640676104/blogs/node-backup/windows-backup-before_poxfzp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6YMJWFLj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/dqse2txyi/image/upload/r_20%2Cbo_2px_solid_darkgrey/v1640676104/blogs/node-backup/windows-backup-before_poxfzp.png" alt="Backup Before" width="880" height="308"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After the script has run once on Windows:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---ZEcvFs0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/dqse2txyi/image/upload/r_20%2Cbo_2px_solid_darkgrey/v1640676104/blogs/node-backup/windows-backup-after_ziq2ck.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---ZEcvFs0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/dqse2txyi/image/upload/r_20%2Cbo_2px_solid_darkgrey/v1640676104/blogs/node-backup/windows-backup-after_ziq2ck.png" alt="Backup After" width="880" height="325"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Note the status code doesn't necessarily match up with the &lt;code&gt;rsync&lt;/code&gt; status codes, but the result is correct: the copying process was successful.&lt;/p&gt;

&lt;p&gt;So that's really cool. You now have a tool that will copy the contents of one directory to another on an interval of your choice. Right now we have it setup to run every minute which is pretty overkill, but thanks to tools like &lt;a href="https://crontab.guru/"&gt;crontab guru&lt;/a&gt; it's easy to create exactly the interval you want.&lt;/p&gt;

&lt;p&gt;For example I only need to backup my directory once a week, so I'm going to set it to run &lt;a href="https://crontab.guru/#0_3_*_*_0"&gt;at 3am every Sunday&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We now have a backup process that runs on a schedule and works on Linux, Mac and Windows!&lt;/p&gt;

&lt;p&gt;But... how are we going to keep this running all the time?&lt;/p&gt;

&lt;p&gt;If we simply use &lt;code&gt;node backup.js&lt;/code&gt; the process is going to stop as soon as we close our terminal. We need this process to be running in the background, ideally 24/7.&lt;/p&gt;

&lt;p&gt;We are going to need a better solution. Enter &lt;code&gt;pm2&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#running-as-a-background-process"&gt;
  &lt;/a&gt;
  Running as a Background Process
&lt;/h2&gt;

&lt;p&gt;Before we get into our final solution using &lt;a href="https://pm2.keymetrics.io/"&gt;pm2&lt;/a&gt;, I'd like to quickly show Mac/Linux users how you can get this to work &lt;em&gt;without&lt;/em&gt; installing any addition tools at all using &lt;a href="https://en.wikipedia.org/wiki/Nohup"&gt;nohup&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can skip this section on &lt;code&gt;nohup&lt;/code&gt; if you like and go right to the final solution using PM2 if you like, it's just here to give you a bit of a deeper insight on how to create background processes using native Unix tools.  &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#using-nohup-optional-mac-and-linux-only"&gt;
  &lt;/a&gt;
  Using nohup (Optional - Mac and Linux Only)
&lt;/h3&gt;

&lt;p&gt;You can find out if you system supports &lt;code&gt;nohup&lt;/code&gt; with:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;nohup&lt;/span&gt; &lt;span class="nt"&gt;--version&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ nohup --version
nohup (GNU coreutils) 8.30
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you get a version number successfully, then this next step should work for you.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;nohup &lt;/span&gt;node backup.js &amp;amp;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The leading &lt;code&gt;nohup&lt;/code&gt; will tell your system that even when your session ends you don't want the process to stop, and the final trailing &lt;code&gt;&amp;amp;&lt;/code&gt; symbol means to run it as a background &lt;a href="https://en.wikipedia.org/wiki/Daemon_(computing)"&gt;daemon&lt;/a&gt; process.&lt;/p&gt;

&lt;p&gt;You will likely get an output that looks like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[1] 7604
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After running the command. This is the &lt;code&gt;process ID&lt;/code&gt; of your node program. If for any reason you lose track of it you can find it again with this command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;pstree &lt;span class="nt"&gt;-p&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You'll get output showing all the processes running on your system with their IDs. If you notice in the &lt;code&gt;backup.js&lt;/code&gt; code example above we used &lt;code&gt;process.title&lt;/code&gt; and gave it a string value of &lt;code&gt;node-backup-script&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This helps find and identify the process ID when we use the &lt;code&gt;pstree -p&lt;/code&gt; command:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--a7vgMN0N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/dqse2txyi/image/upload/bo_2px_solid_darkgrey/v1640679514/blogs/node-backup/pstree_clntnk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a7vgMN0N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/dqse2txyi/image/upload/bo_2px_solid_darkgrey/v1640679514/blogs/node-backup/pstree_clntnk.png" alt="Pstree Output" width="691" height="188"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Notice the &lt;code&gt;node-backup-sc(7604)&lt;/code&gt; in there showing the same PID that we were given when the script started, and also the &lt;code&gt;title&lt;/code&gt; value we set with &lt;code&gt;process.title&lt;/code&gt; to make it easier to find and identify.&lt;/p&gt;

&lt;p&gt;Since we can no longer simply &lt;code&gt;ctrl+C&lt;/code&gt; to cancel the node script execution, we have to do something different. We have to kill the process by referencing the PID directly.&lt;/p&gt;

&lt;p&gt;To do that you can run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;kill&lt;/span&gt; &lt;span class="nt"&gt;-9&lt;/span&gt; YOUR_PID
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Where &lt;code&gt;YOUR_PID&lt;/code&gt; is the ID that is given on your machine. In my example above it's 7604. The &lt;code&gt;-9&lt;/code&gt; tells it to override anything that might stop or intercept a system kill signal, you want to end the program no matter what.&lt;/p&gt;

&lt;p&gt;So the &lt;code&gt;nohup&lt;/code&gt; option will work will for Unix systems that support it as long as they are running 24/7, the process will keep running. There are a couple of issues with it though:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;If your program crashes, &lt;code&gt;nohup&lt;/code&gt; will not reboot it&lt;/li&gt;
&lt;li&gt;This solution is Unix specific and will not work on Windows&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So how do we create a solution that will run 24/7, will reboot on crash, and supports cross-platform? &lt;/p&gt;

&lt;p&gt;That's what &lt;a href="https://pm2.keymetrics.io/"&gt;pm2&lt;/a&gt; is for.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#using-pm2-all-platforms"&gt;
  &lt;/a&gt;
  Using PM2 (All Platforms)
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-g&lt;/span&gt; pm2
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This command will work on any OS that has NPM installed (Linux, Mac or Windows). After installing you'll be able to verify it is available with:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;pm2 &lt;span class="nt"&gt;--version&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To begin the process just run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;pm2 start backup.js
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IDj6HlTe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/dqse2txyi/image/upload/bo_2px_solid_darkgrey/v1640680969/blogs/node-backup/pm2_thc0br.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IDj6HlTe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/dqse2txyi/image/upload/bo_2px_solid_darkgrey/v1640680969/blogs/node-backup/pm2_thc0br.png" alt="PM2 Start" width="880" height="70"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So now the process is running in the background and will keep running even if you close your terminal, and will reboot on crash.&lt;/p&gt;

&lt;p&gt;You can view the running process anytime with &lt;code&gt;pm2 list&lt;/code&gt; and you can stop it with &lt;code&gt;pm2 stop backup&lt;/code&gt; where "backup" is the name of the process.&lt;/p&gt;

&lt;p&gt;You can also view the logs of your app by running  &lt;code&gt;pm2 logs backup&lt;/code&gt;.  You'll get an output that looks like:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zSMDaM6B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/dqse2txyi/image/upload/bo_2px_solid_darkgrey/v1640739353/blogs/node-backup/pm2-logs_wrzsld.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zSMDaM6B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/dqse2txyi/image/upload/bo_2px_solid_darkgrey/v1640739353/blogs/node-backup/pm2-logs_wrzsld.png" alt="PM2 Logs" width="669" height="195"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Unfortunately this will not survive a full system reboot. Configuring &lt;code&gt;pm2&lt;/code&gt; to start with your app automatically on reboot is beyond the scope of this tutorial, but there are very good instructions on how to handle it if you would like to do.&lt;/p&gt;

&lt;p&gt;Here's for &lt;a href="https://pm2.keymetrics.io/docs/usage/startup/"&gt;Unix based systems&lt;/a&gt; and &lt;a href="https://github.com/jessety/pm2-installer"&gt;Windows&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can now keep this running on an old laptop, or on your own cloud server like a $5 monthly &lt;a href="https://www.digitalocean.com/products/droplets/"&gt;Digital Ocean Droplet&lt;/a&gt; for example.&lt;/p&gt;

&lt;p&gt;Just be careful when looking at Node app hosting solutions, there are a lot of options out there, but the majority of free ones (Heroku for example) will put your app to "sleep" sometimes, which isn't a viable option as it must be awake when the scheduled backup triggers in order to work properly.&lt;/p&gt;

&lt;p&gt;Lastly we'll add a little bonus tutorial showing how to use webhooks to send the status output of our backups to a Discord bot so that we can keep track of it easily.  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#adding-a-discord-webhook-bonus"&gt;
  &lt;/a&gt;
  Adding a Discord Webhook (Bonus)
&lt;/h2&gt;

&lt;p&gt;Start by creating your webhook bot on your server.  Follow &lt;a href="https://support.discord.com/hc/en-us/articles/228383668-Intro-to-Webhooks"&gt;this tutorial&lt;/a&gt; up to the end of the section called &lt;strong&gt;Making a Webhook&lt;/strong&gt;.  Stop when you get to &lt;strong&gt;Quick Example: GitHub Webhook Integration&lt;/strong&gt;.  &lt;/p&gt;

&lt;p&gt;All you need is to get to the point where you can click the button that says "Copy Webhook URL".  It will look like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;https://discord.com/api/webhooks/YOUR_WEBHOOK_ID
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Where YOUR_WEBHOOK_ID is a long string of characters which may include additional slashes.  Basically everything after the &lt;code&gt;https://discord.com/api/webhooks/&lt;/code&gt; you want to copy and paste into the &lt;code&gt;WEBHOOK_ID&lt;/code&gt; key in your &lt;code&gt;.env&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;.env&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;SOURCE_DIR="example-source/"
DESTINATION_DIR="example-destination/"
CRON_STRING="* * * * * *"
WEBHOOK_ID="YOUR_WEBHOOK_ID"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next we'll update &lt;code&gt;backup.js&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;backup.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dotenv&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;CronJob&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;cron&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;CronJob&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Rsync&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;rsync&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;https&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;node-backup-script&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// Will be true if there is a Discord WEBHOOK_ID set in the `.env` file&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;useDiscord&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;!!&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;WEBHOOK_ID&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;options&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;hostname&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;discord.com&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`/api/webhooks/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;WEBHOOK_ID&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;method&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;POST&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Content-Type&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;application/json&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="c1"&gt;// process.platform will be:&lt;/span&gt;
&lt;span class="c1"&gt;// Windows: win32&lt;/span&gt;
&lt;span class="c1"&gt;// Mac: darwin&lt;/span&gt;
&lt;span class="c1"&gt;// Ubuntu: linux&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;syncProgram&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;platform&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;win32&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;robocopy&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;rsync&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// Equivalent to writing `rsync -a example-source/ example-destination/` on terminal&lt;/span&gt;
&lt;span class="nx"&gt;rsync&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Rsync&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;executable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;syncProgram&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="c1"&gt;// The -a flag means "archive" to say we are copying the full directory not just a file&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;flags&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;a&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="c1"&gt;// Reads from the `.env` file in the project directory&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;source&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;SOURCE_DIR&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;destination&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;DESTINATION_DIR&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;job&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;CronJob&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="c1"&gt;// Run this function once every minute&lt;/span&gt;
  &lt;span class="c1"&gt;// To learn more about this cron string visit the below link&lt;/span&gt;
  &lt;span class="c1"&gt;// https://crontab.guru/#*_*_*_*_*&lt;/span&gt;
  &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;CRON_STRING&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;rsync&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;code&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;cmd&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// List of rsync status codes&lt;/span&gt;
        &lt;span class="c1"&gt;// https://stackoverflow.com/a/20738063&lt;/span&gt;
        &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`Code &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;code&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Backup complete&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;

      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;currentDate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;toISOString&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
      &lt;span class="c1"&gt;// Write log to the console, or will be redirected to a&lt;/span&gt;
      &lt;span class="c1"&gt;// nohup.out file if using nohup&lt;/span&gt;
      &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stdout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;currentDate&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;\n`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

      &lt;span class="c1"&gt;// Only sends the request if WEBHOOK_ID is defined&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;useDiscord&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Send the request to Discord with the configured options&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;https&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="c1"&gt;// do nothing with Discord response&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;

        &lt;span class="c1"&gt;// Discord requires a { content: string } shape for posting messages&lt;/span&gt;
        &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
            &lt;span class="na"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;end&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="c1"&gt;// Replace with your time zone&lt;/span&gt;
  &lt;span class="c1"&gt;// https://gist.github.com/diogocapela/12c6617fc87607d11fd62d2a4f42b02a&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;America/Toronto&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Begin the cronjob&lt;/span&gt;
&lt;span class="nx"&gt;job&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;start&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Presuming you set up your webhook bot correctly, you will see it post a message on your Discord channel with the status of the backup every time the cron job fires.  &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bdLSQpRn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/dqse2txyi/image/upload/bo_2px_solid_darkgrey/v1640678608/blogs/node-backup/discord-bot_ebyx5w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bdLSQpRn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/dqse2txyi/image/upload/bo_2px_solid_darkgrey/v1640678608/blogs/node-backup/discord-bot_ebyx5w.png" alt="Discord Bot" width="287" height="61"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can use this as a convenient way to see the log output without having to log into your server and check manually.  If there is an error, the Discord bot will print the error message.  For example if I change the source to a folder that does not exist:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Iql892e_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/dqse2txyi/image/upload/bo_2px_solid_darkgrey/v1640738833/blogs/node-backup/discord-bot-error_newy9m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Iql892e_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/dqse2txyi/image/upload/bo_2px_solid_darkgrey/v1640738833/blogs/node-backup/discord-bot-error_newy9m.png" alt="Discord Bot Error" width="322" height="70"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I can lookup the &lt;a href="https://stackoverflow.com/a/20738063"&gt;status code&lt;/a&gt; to get more information about the problem.&lt;/p&gt;

&lt;p&gt;So we've now handled all of the major features required for this project!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Creating a backup of one directory to another&lt;/li&gt;
&lt;li&gt;Support for scheduled times of backups&lt;/li&gt;
&lt;li&gt;Cross platform support&lt;/li&gt;
&lt;li&gt;Communication of success/error (either through PM2 logs or Discord)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  Wrapping Up
&lt;/h2&gt;

&lt;p&gt;I hope you learned something new from this tutorial, I know it was kind of a hodge-podge of different concepts, but that was a big part of the idea.  One of my favourite ways of learning new things is to connect existing skills and tools in interesting ways.  &lt;/p&gt;

&lt;p&gt;Please check some of my other learning tutorials.  Feel free to leave a comment or question and share with others if you find any of them helpful:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/alexeagleson/docker-for-javascript-developers-41me"&gt;Introduction to Docker for Javascript Developers&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/alexeagleson/learnings-from-react-conf-2021-17lg"&gt;Learnings from React Conf 2021&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/alexeagleson/how-to-create-a-dark-mode-component-in-react-3ibg"&gt;How to Create a Dark Mode Component in React&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/alexeagleson/how-to-analyze-and-improve-your-create-react-app-production-build-4f34"&gt;How to Analyze and Improve your 'Create React App' Production Build &lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/alexeagleson/how-to-create-and-publish-a-react-component-library-2oe"&gt;How to Create and Publish a React Component Library&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/alexeagleson/how-to-use-indexeddb-to-store-data-for-your-web-application-in-the-browser-1o90"&gt;How to use IndexedDB to Store Local Data for your Web App &lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/alexeagleson/understanding-the-modern-web-stack-running-a-local-web-server-4d8g"&gt;Running a Local Web Server&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/alexeagleson/understanding-the-modern-web-stack-linters-eslint-59pm"&gt;ESLint&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/alexeagleson/understanding-the-modern-web-stack-prettier-214j"&gt;Prettier&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/alexeagleson/building-a-modern-web-stack-babel-3hfp"&gt;Babel&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/alexeagleson/understanding-the-modern-web-stack-react-with-and-without-jsx-31c7"&gt;React &amp;amp; JSX&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/alexeagleson/understanding-the-modern-web-stack-webpack-part-1-2mn1"&gt;Webpack: The Basics&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/alexeagleson/understanding-the-modern-web-stack-webpack-part-2-49bj"&gt;Webpack: Loaders, Optimizations &amp;amp; Bundle Analysis&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;For more tutorials like this, follow me &lt;a href="https://twitter.com/eagleson_alex?ref_src=twsrc%5Etfw"&gt;@eagleson_alex&lt;/a&gt; on Twitter.&lt;/p&gt;

</description>
      <category>node</category>
      <category>javascript</category>
      <category>linux</category>
      <category>webdev</category>
    </item>
    <item>
      <title>😳 Generating over 1,240,000 Profile Pictures at Runtime</title>
      <author>William McGonagle</author>
      <pubDate>Wed, 29 Dec 2021 04:40:02 +0000</pubDate>
      <link>https://dev.to/williammcgonagle/generating-over-1240000-profile-pictures-at-runtime-4lpm</link>
      <guid>https://dev.to/williammcgonagle/generating-over-1240000-profile-pictures-at-runtime-4lpm</guid>
      <description>&lt;p&gt;So here’s a problem- you’re building a social media website, but you know that there will be minors (people under 18 years old) actively using the site. And on top of this, you’re too cheap to pay for image hosting for thousands of files. So what do you do?!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fRB8ExlJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://fairfield-programming.herokuapp.com/duck/10001000007000053/30" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fRB8ExlJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://fairfield-programming.herokuapp.com/duck/10001000007000053/30" alt="Cool Duck" width="140" height="140"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You generate the images at runtime, or at least that’s what we did. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KNyK42TI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://fairfield-programming.herokuapp.com/duck/10102000005000045/30" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KNyK42TI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://fairfield-programming.herokuapp.com/duck/10102000005000045/30" alt="Red Duck" width="140" height="140"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To do this, we started with a template. Our template was the body of a rubber duck and we made it a set size- 200x200.&lt;/p&gt;

&lt;p&gt;From there, we started adding layers onto the duck: hats, beaks, wings, etc. These layers would be interchangeable by the computer.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CnVVP6WW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://fairfield-programming.herokuapp.com/duck/10603000000000004/30" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CnVVP6WW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://fairfield-programming.herokuapp.com/duck/10603000000000004/30" alt="Blue Duck" width="140" height="140"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And then finally, we set up a simple endpoint that could mix and match these different layers together. If you want to see the API in action, you can check out the &lt;a href="https://fairfieldprogramming.org"&gt;website here&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;If you want to check out the code for the project, it’s all publicly &lt;a href="https://github.com/fairfield-programming/backend-server/"&gt;available here&lt;/a&gt;. Make sure to star the repository! &lt;/p&gt;

</description>
      <category>webdev</category>
      <category>opensource</category>
      <category>showdev</category>
      <category>devjournal</category>
    </item>
    <item>
      <title>Difference between a developer, programmer, and software engineer</title>
      <author>Manthan Bhatt</author>
      <pubDate>Wed, 29 Dec 2021 04:14:46 +0000</pubDate>
      <link>https://dev.to/manthanbhatt/difference-between-a-developer-programmer-and-software-engineer-260a</link>
      <guid>https://dev.to/manthanbhatt/difference-between-a-developer-programmer-and-software-engineer-260a</guid>
      <description>&lt;p&gt;There are many types of professions in the technology field, including system administrators, UI UX, developers, programmers, and engineers. From some of the things I mentioned I will only explain what programmers, developers, and engineers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#programmer"&gt;
  &lt;/a&gt;
  Programmer
&lt;/h2&gt;

&lt;p&gt;Programmer is someone who translates human-readable requirements into machine code. It’s the physical act of writing the source code that enables the software to perform its intended function. In that sense, it is the lowest-level task in the software development process.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#developer"&gt;
  &lt;/a&gt;
  Developer
&lt;/h2&gt;

&lt;p&gt;Developer who is the in charge of the process by which software is created from &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Requirements Gathering &lt;/li&gt;
&lt;li&gt;Task Creation &lt;/li&gt;
&lt;li&gt;Sprint Planning &lt;/li&gt;
&lt;li&gt;Programming &lt;/li&gt;
&lt;li&gt;Unit Testing &lt;/li&gt;
&lt;li&gt;Integration Testing &lt;/li&gt;
&lt;li&gt;Usability / Acceptance Testing &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It encompasses the end-to-end of conceiving a software system through delivering it as a product.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#engineer"&gt;
  &lt;/a&gt;
  Engineer
&lt;/h2&gt;

&lt;p&gt;Software Engineer has the most broad type of work of the three. It is the application of computer science and mathematics theory to the invention, design, research, development, maintenance, improvement, and innovation of software. &lt;/p&gt;

&lt;p&gt;It is more about the problem being solved. Sometimes a good software engineer can solve the problem without requiring any new lines of code be written. Sometimes solving the problem means coordinating the development of multiple software systems that interact in complex ways. And sometimes software engineering means deleting code, deprecating services, and designing the next system to take its place.&lt;/p&gt;

</description>
      <category>programming</category>
      <category>developer</category>
      <category>engineer</category>
      <category>discuss</category>
    </item>
    <item>
      <title>Machine Learning Complete Roadmap 2022</title>
      <author>Ashish Yadav</author>
      <pubDate>Wed, 29 Dec 2021 03:45:11 +0000</pubDate>
      <link>https://dev.to/expoashish/machine-learning-complete-roadmap-2022-2f3e</link>
      <guid>https://dev.to/expoashish/machine-learning-complete-roadmap-2022-2f3e</guid>
      <description>&lt;h2&gt;
  &lt;a href="#machine-learning-complete-roadmap-2022"&gt;
  &lt;/a&gt;
  Machine Learning Complete Roadmap 2022
&lt;/h2&gt;

&lt;p&gt;In this blog we are going to discuss complete roadmap for Machine Learning in 2022. I will give you only topics and if you like my post then follow my Blogs. Lets Start:-👇&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#machine-learning-complete-roadmap-2022"&gt;
  &lt;/a&gt;
  &lt;a href="https://codexashish.blogspot.com/2021/12/complete-roadmap-of-machine-learning.html"&gt;Machine Learning Complete Roadmap 2022&lt;/a&gt;
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#new-amp-trending-topics"&gt;
  &lt;/a&gt;
  New &amp;amp; Trending Topics:👇
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://codexashish.blogspot.com/2021/12/top-10-trending-technologies-to-learn.html"&gt;Top 10 Trending Technologies to Learn in 2022&lt;/a&gt;&lt;br&gt;
&lt;a href="https://codexashish.blogspot.com/2021/12/top-10-programming-languages-you-must.html"&gt;Top 10 Programming Languages You Must Know In 2022&lt;/a&gt;&lt;br&gt;
&lt;a href="https://codexashish.blogspot.com/2021/12/complete-roadmap-of-machine-learning.html"&gt;Machine Learning Complete Roadmap 2022&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#complete-roadmap-2022"&gt;
  &lt;/a&gt;
  Complete Roadmap 2022:-👇
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://codexashish.blogspot.com/2021/12/complete-roadmap-of-python-programming.html"&gt;Python Complete Roadmap 2022&lt;/a&gt;&lt;br&gt;
&lt;a href="https://codexashish.blogspot.com/2021/12/complete-roadmap-of-machine-learning.html"&gt;Machine Learning Complete Roadmap 2022&lt;/a&gt;&lt;br&gt;
&lt;a href="https://codexashish.blogspot.com/2021/12/complete-roadmap-of-c-programming.html"&gt;C++ Complete Roadmap 2022&lt;/a&gt;&lt;br&gt;
&lt;a href="https://codexashish.blogspot.com/2021/12/java-complete-roadmap-2022.html"&gt;Java Complete Roadmap 2022&lt;/a&gt;&lt;br&gt;
&lt;a href="https://codexashish.blogspot.com/2021/12/complete-roadmap-of-data-structure.html"&gt;Data Structure Complete Roadmap 2022&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#some-laravel-tutorial-for-developer"&gt;
  &lt;/a&gt;
  Some Laravel Tutorial for developer:👇
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://codexashish.blogspot.com/2021/12/laravel-8-interview-questions-and.html"&gt;Laravel 8 Interview Questions and Answers in 2022 (Part #1)&lt;/a&gt;&lt;br&gt;
&lt;a href="https://codexashish.blogspot.com/2021/12/laravel-8-interview-questions-and_22.html"&gt;Laravel 8 Interview Questions and Answers in 2022 (Part #2)&lt;/a&gt;&lt;br&gt;
&lt;a href="https://codexashish.blogspot.com/2021/12/advance-laravel-8-interview-questions.html"&gt;Advance Laravel 8 Interview Questions and Answers 2022&lt;/a&gt;&lt;br&gt;
&lt;a href="https://codexashish.blogspot.com/2021/12/everything-about-laravel-8-composer.html"&gt;Everything About Laravel 8 Composer 2022 | Composer in Laravel 8&lt;/a&gt;&lt;br&gt;
&lt;a href="https://codexashish.blogspot.com/2021/12/laravel-jetstream-vs-laravel-ui-vs.html"&gt;Laravel Jetstream vs Laravel ui  vs Breeze&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#python-concept-and-projects"&gt;
  &lt;/a&gt;
  Python Concept and Projects:-👇
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://codexashish.blogspot.com/2021/12/10-best-python-libraries-for-machine.html"&gt;10 Best Python Libraries For Machine Learning&lt;/a&gt;&lt;br&gt;
&lt;a href="https://codexashish.blogspot.com/2021/07/alarm-clock-in-python-with-gui.html"&gt;Alarm Clock in Python with GUI&lt;/a&gt;&lt;br&gt;
&lt;a href="https://codexashish.blogspot.com/2021/06/tic-tac-toe-game-using-pygame-in-python.html"&gt;Tic Tac Toe Game Using Pygame in Python&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Thankyou for reading my blogs.&lt;/strong&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#my-website"&gt;
  &lt;/a&gt;
  My Website:👇
&lt;/h5&gt;

&lt;p&gt;&lt;a href="https://codexashish.blogspot.com/"&gt;CodexAshish&lt;/a&gt;&lt;/p&gt;

</description>
      <category>machinelearning</category>
      <category>python</category>
      <category>datascience</category>
      <category>ai</category>
    </item>
    <item>
      <title>Tips And Tricks Web Design #01 Navbar Animation</title>
      <author>Aditya Muhamad Putra P.</author>
      <pubDate>Wed, 29 Dec 2021 02:35:38 +0000</pubDate>
      <link>https://dev.to/adityamputra27/tips-and-tricks-web-design-01-navbar-animation-3e2i</link>
      <guid>https://dev.to/adityamputra27/tips-and-tricks-web-design-01-navbar-animation-3e2i</guid>
      <description>&lt;p&gt;Introduction📝&lt;br&gt;
Halo semuanya, kembali lagi dengan saya untuk membahas seputar pemograman web🤓&lt;/p&gt;

&lt;p&gt;Pada kesempatan kali ini, saya akan membagikan sedikit tips dan trik web design yaitu animasi pada navigasi menu.&lt;/p&gt;

&lt;p&gt;Langsung saja kita mulai...&lt;/p&gt;

&lt;h1&gt;Tools &amp;amp; Prerequisites🛠️&lt;/h1&gt;

&lt;p&gt;Untuk mengikuti tutorial ini, terdapat beberapa tools yang digunakan serta prerequisites seminimal - minimalnya yang kalian harus bisa yaitu :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Text Editor : Sublime Text, VS Code ataupun sejenisnya.&lt;/li&gt;
&lt;li&gt;Browser : Chrome, Firefox &lt;a href="https://www.w3schools.com/cssref/css3_browsersupport.asp"&gt;(harus support CSS3)&lt;/a&gt; dan sejenisnya&lt;/li&gt;
&lt;li&gt;HTML Dasar&lt;/li&gt;
&lt;li&gt;CSS Dasar&lt;/li&gt;
&lt;li&gt;Javascript DOM&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;Let's Code!✍️&lt;/h1&gt;

&lt;h3&gt;Step 1 : Mulai dengan kerangka HTML🤓&lt;/h3&gt;

&lt;p&gt;Pertama - tama kita harus membuat kerangka menggunakan HTML dulu agar nanti bisa kita styling dan memberikan event pada menu yang di klik.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"UTF-8"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;http-equiv=&lt;/span&gt;&lt;span class="s"&gt;"X-UA-Compatible"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"IE=edge"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width, initial-scale=1.0"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Tips And Tricks Web Design #01 Navbar Animation&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"navbar__menu"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"navbar__button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;span&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;span&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;span&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Oke kerangka HTML nya sudah dibuat kita lanjut untuk styling menggunakan CSS.&lt;/p&gt;

&lt;h3&gt;Step 2 : Styling menggunakan CSS😎&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.container&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="err"&gt;align-items-center;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.navbar__menu&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;85px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;85px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;transparent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.navbar__button&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2.5em&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.navbar__button&lt;/span&gt; &lt;span class="nt"&gt;span&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;85px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;3px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.navbar__button&lt;/span&gt; &lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="nd"&gt;:nth-child&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;1&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
&lt;span class="nc"&gt;.navbar__button&lt;/span&gt; &lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="nd"&gt;:nth-child&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;2&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
&lt;span class="nc"&gt;.navbar__button&lt;/span&gt; &lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="nd"&gt;:nth-child&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;3&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#282A2B&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt; &lt;span class="m"&gt;.3s&lt;/span&gt; &lt;span class="n"&gt;ease-in-out&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.navbar__button&lt;/span&gt; &lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="nd"&gt;:nth-child&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translateY&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-23px&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.navbar__button&lt;/span&gt; &lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="nd"&gt;:nth-child&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;3&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translateY&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;23px&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.navbar__button.open&lt;/span&gt; &lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="nd"&gt;:nth-child&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;45deg&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.navbar__button.open&lt;/span&gt; &lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="nd"&gt;:nth-child&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;2&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;transparent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.navbar__button.open&lt;/span&gt; &lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="nd"&gt;:nth-child&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;3&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-45deg&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;Step 3 : Javascript DOM😊&lt;/h3&gt;

&lt;p&gt;Oke, selanjutnya kita buat supaya dapat terlihat animasinya kita gunakan Javascript DOM.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;navbarMenu&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;.navbar__menu&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;navbarButton&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;.navbar__button&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;isOpen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;navbarMenu&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;isOpen&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;navbarButton&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;open&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;isOpen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;navbarButton&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;classList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;open&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;isOpen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Untuk hasilnya kalian bisa lihat &lt;a href="https://codepen.io/adityamputra27/pen/OJxQLQZ"&gt;disini&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;Congratulations👏🎉&lt;/h1&gt;

&lt;p&gt;Terima kasih kepada kalian semua karena sudah mengikuti tips dan trik ini dari awal sampai akhir, saya harap kalian mengikuti dengan benar - benar (tidak copy paste). Selamat juga untuk kalian jika tips dan trik ini berhasil😉. See you😚👋&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Simple signup function using FP-TS</title>
      <author>Tom Liang</author>
      <pubDate>Wed, 29 Dec 2021 01:53:00 +0000</pubDate>
      <link>https://dev.to/tomliang/simple-signup-function-using-fp-ts-193j</link>
      <guid>https://dev.to/tomliang/simple-signup-function-using-fp-ts-193j</guid>
      <description>&lt;p&gt;I tried to make a simple user signup function using FP-TS.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// user-controller.ts&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;argon2&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;argon2&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;E&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;fp-ts/Either&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;flow&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;pipe&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;fp-ts/lib/function&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;TE&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;fp-ts/TaskEither&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;UserProfile&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;UserProfileRepository&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../db/entities/user_profile&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;hashPassword&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;plainPassword&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nx"&gt;TE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;TaskEither&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nb"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
        &lt;span class="nx"&gt;argon2&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;plainPassword&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;hashed&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;E&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;right&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;hashed&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;E&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;left&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;signup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nx"&gt;userName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;
&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nx"&gt;TE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;TaskEither&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nb"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;UserProfile&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;makeUserProfile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="na"&gt;hashed&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;UserProfile&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;userName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;userPassword&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;hashed&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="c1"&gt;//the reason to "chain" is because the nested TaskEithers need to be flattened&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;program&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;flow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="nx"&gt;hashPassword&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;TE&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;chain&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;flow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;makeUserProfile&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;UserProfileRepository&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;insertProfile&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;pipe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;program&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;How to call:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// user-router.ts&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;pipe&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;fp-ts/lib/function&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;signup&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../controllers/user-controller&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;E&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;fp-ts/lib/Either&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/signup&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;password&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c1"&gt;// we have to call the asynchronous Task&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;userE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;signup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;)();&lt;/span&gt;
    &lt;span class="nx"&gt;pipe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="nx"&gt;userE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;E&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bimap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;ok&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt; &lt;span class="p"&gt;}),&lt;/span&gt;
            &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
                &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
                    &lt;span class="na"&gt;ok&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`user &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;userName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; registered `&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There must be better ways to compose the functions, will come back to it when I learn more.&lt;/p&gt;

</description>
      <category>functional</category>
      <category>typescript</category>
    </item>
    <item>
      <title>Entenda as diferenças entre os tipos de merge no Git: Fast forward X Three way</title>
      <author>Rodrigo Santana</author>
      <pubDate>Wed, 29 Dec 2021 01:44:13 +0000</pubDate>
      <link>https://dev.to/rsantanarj/entenda-as-diferencas-entre-os-tipos-de-merge-no-git-fast-forward-x-three-way-1ghd</link>
      <guid>https://dev.to/rsantanarj/entenda-as-diferencas-entre-os-tipos-de-merge-no-git-fast-forward-x-three-way-1ghd</guid>
      <description>&lt;p&gt;Pré-requisitos&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/rsantanarj/entenda-conceitos-basicos-sobre-git-d2f"&gt;Conceitos básicos sobre Git&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Como todo sistema de controle de versão (VCS) o Git dispõe de recursos de criação e união de &lt;em&gt;branches&lt;/em&gt;. Para mesclar uma &lt;em&gt;branch&lt;/em&gt; na outra, você pode considerar &lt;em&gt;merge&lt;/em&gt; ou &lt;em&gt;rebase&lt;/em&gt;. Nesse artigo será apresentado o que é um &lt;em&gt;merge&lt;/em&gt;, as estratégias envolvidas &lt;em&gt;fast forward&lt;/em&gt; e &lt;em&gt;three way&lt;/em&gt; e o que são conflitos e quando podem ocorrer. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#o-que-%C3%A9-um-merge"&gt;
  &lt;/a&gt;
  O que é um &lt;em&gt;merge&lt;/em&gt;?
&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Merge&lt;/em&gt; é uma opção muito comum e útil em repositórios que possuem mais de uma &lt;em&gt;branch&lt;/em&gt; além da principal. Se é necessário fundir uma &lt;em&gt;branch&lt;/em&gt; em outra, o &lt;em&gt;merge&lt;/em&gt; pode ser uma opção.&lt;/p&gt;

&lt;p&gt;Vale lembrar que uma &lt;em&gt;branch&lt;/em&gt; no Git, é um ponteiro para um &lt;em&gt;commit&lt;/em&gt;, que será a última versão de tal ramificação. Por exemplo, considere a sequência, a qual inicialmente existe um &lt;em&gt;commit&lt;/em&gt; inicial "first commit" na &lt;em&gt;branch&lt;/em&gt; principal.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--U4onfXmV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bdunpoxet6x77r7ap5tc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--U4onfXmV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bdunpoxet6x77r7ap5tc.png" alt="Merge etapa 1" width="723" height="385"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Em seguida, um novo &lt;em&gt;commit&lt;/em&gt; "setup" é realizado.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--87XF__dy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3tvsogrt8uvzvmunl343.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--87XF__dy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3tvsogrt8uvzvmunl343.png" alt="Merge etapa 2" width="655" height="358"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Após isso, um contribuidor João cria uma nova &lt;em&gt;branch&lt;/em&gt; "login" a partir do &lt;em&gt;commit&lt;/em&gt; setup. Isso significa que neste momento ambas as &lt;em&gt;branches&lt;/em&gt; apontam para a mesma versão do repositório e que possuem o mesmo histórico, porém são dois ramos totalmente independentes. Qualquer nova versão em uma &lt;em&gt;branch&lt;/em&gt; não afetará a outra e vice-versa. Observe o resultado de um novo &lt;em&gt;commit&lt;/em&gt;  "creating login feature" na &lt;em&gt;branch&lt;/em&gt; "login".&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--y3sqDqVk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ny1402kntc5gffu4vdff.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y3sqDqVk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ny1402kntc5gffu4vdff.png" alt="Merge etapa 3" width="777" height="470"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Note que o rótulo da &lt;em&gt;branch&lt;/em&gt; login passou a referenciar este último &lt;em&gt;commit&lt;/em&gt;, mas o rótulo da &lt;em&gt;branch&lt;/em&gt; master ainda está apontando para o &lt;em&gt;commit&lt;/em&gt; "setup". Ou seja, a &lt;em&gt;branch&lt;/em&gt; login está a um &lt;em&gt;commit&lt;/em&gt; à frente em relação a &lt;em&gt;branch&lt;/em&gt; master.&lt;/p&gt;

&lt;p&gt;E se João desejar integrar os &lt;em&gt;commits&lt;/em&gt; feitos na &lt;em&gt;branch&lt;/em&gt; login na &lt;em&gt;branch&lt;/em&gt; master, como fazer isso? Uma das opções, é através de &lt;em&gt;merge&lt;/em&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#merge-fast-forward"&gt;
  &lt;/a&gt;
  &lt;em&gt;Merge fast forward&lt;/em&gt;
&lt;/h2&gt;

&lt;p&gt;João decide integrar a &lt;em&gt;branch&lt;/em&gt; login na &lt;em&gt;branch&lt;/em&gt; master. Para isso ele retorna para a &lt;em&gt;branch&lt;/em&gt; master com o comando abaixo:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git checkout master&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Wf5Ag2pl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/16cfmymsutf6o9qvtpvv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Wf5Ag2pl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/16cfmymsutf6o9qvtpvv.png" alt="Fast forward etapa 1" width="714" height="444"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Em seguida executa o comando:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git merge login&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6eGFw2au--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fdhnf15gh98xtboyiyl7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6eGFw2au--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fdhnf15gh98xtboyiyl7.png" alt="Fast forward etapa 2" width="727" height="482"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Note que nessa situação, a única tarefa necessária que o Git precisou realizar foi mover o rótulo da &lt;em&gt;branch&lt;/em&gt; master para o &lt;em&gt;commit&lt;/em&gt; "creating login feature". Por isso, o nome dessa estratégia é &lt;em&gt;fast forward&lt;/em&gt; (em português avanço rápido), pois é simplesmente uma alteração de ponteiro.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#merge-three-way"&gt;
  &lt;/a&gt;
  &lt;em&gt;Merge three way&lt;/em&gt;
&lt;/h2&gt;

&lt;p&gt;Agora considere que antes de João integrar a &lt;em&gt;branch&lt;/em&gt; login na &lt;em&gt;branch&lt;/em&gt; master, uma outra contribuidora Maria promoveu um novo &lt;em&gt;commit&lt;/em&gt; "creating user feature" na &lt;em&gt;branch&lt;/em&gt; master.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--834o-pza--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nhtuz95soahpbl2g0d9p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--834o-pza--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nhtuz95soahpbl2g0d9p.png" alt="Three way etapa 1" width="693" height="493"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Nesse caso, uma tentativa de &lt;em&gt;merge&lt;/em&gt; não terá o mesmo resultado do exemplo anterior. Isso porque um &lt;em&gt;commit&lt;/em&gt; foi realizado na &lt;em&gt;branch&lt;/em&gt; master após a criação da &lt;em&gt;branch&lt;/em&gt; login. Então não basta mover o ponteiro, há duas versões que precisam ser combinadas, que são o "creating user feature", &lt;em&gt;commit&lt;/em&gt; que só existe na &lt;em&gt;branch&lt;/em&gt; master e "creating login feature", &lt;em&gt;commit&lt;/em&gt; que só existe na &lt;em&gt;branch&lt;/em&gt; login. Veja a seguir o resultado de um &lt;em&gt;merge&lt;/em&gt; nessa situação.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--I4arfakN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nhzbbjvkv7om775yzbhw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--I4arfakN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nhzbbjvkv7om775yzbhw.png" alt="Three way etapa 2" width="880" height="495"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Observe que foi gerado um novo &lt;em&gt;commit&lt;/em&gt; "Merge". Tal &lt;em&gt;commit&lt;/em&gt; foi gerado de forma automática pelo Git, que uniu as alterações envolvidas nos dois ramos em uma nova versão do repositório. Veja também que este novo &lt;em&gt;commit&lt;/em&gt; possui dois pais e o histórico do repositório não é mais linear. A estrutura que representa o histórico linear ou bifurcado no Git pode ser definida como DAG (&lt;em&gt;Directed Acyclic Graph&lt;/em&gt; ou Grafo Acíclico Dirigido).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conflitos"&gt;
  &lt;/a&gt;
  Conflitos
&lt;/h2&gt;

&lt;p&gt;No exemplo anterior, ao realizar um &lt;em&gt;merge&lt;/em&gt; com a estratégia &lt;em&gt;three way&lt;/em&gt;, o Git conseguiu gerar um &lt;em&gt;commit&lt;/em&gt; de &lt;em&gt;merge&lt;/em&gt; automaticamente, pois as alterações que precisavam ser combinadas não conflitavam. Entretanto, as duas &lt;em&gt;branches&lt;/em&gt; poderiam ter alterado as mesmas linhas de um mesmo arquivo e nesse caso, o Git não pode determinar automaticamente o que está correto e é necessário decisões humanas. &lt;/p&gt;

&lt;p&gt;Os conflitos afetam apenas o contribuidor que conduz a mesclagem, o resto da equipe não tem conhecimento do conflito. O Git marcará o arquivo como conflitante e interromperá o processo de fusão. É responsabilidade desse contribuidor resolver o conflito.&lt;/p&gt;

&lt;p&gt;Por exemplo, imagine que Joao além de ter criado um novo recurso login, tenha alterado a linha 4 de um arquivo global do sistema. Maria também, além de ter criado o novo recurso de usuários, alterou a linha 4 desse mesmo arquivo. Qual alteração deve prevalecer no &lt;em&gt;commit&lt;/em&gt; de &lt;em&gt;merge&lt;/em&gt;, a alteração de Maria? Ou a alteração de João? O Git não pode determinar isso de forma automática, João que realizou a mesclagem que irá avaliar. Talvez a alteração de João seja melhor, como ele também pode considerar que a alteração de Maria faça mais sentido ou ainda, a alteração de ambos se complete.&lt;/p&gt;

&lt;p&gt;Vale destacar que conflitos só surgem em mesclagens com a estratégia &lt;em&gt;three way&lt;/em&gt;. &lt;em&gt;Merge&lt;/em&gt; &lt;em&gt;fast forward&lt;/em&gt; nunca irá gerar um conflito, pois não há histórico divergente a ser combinado. É somente mudança de ponteiro.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#no-fast-forward"&gt;
  &lt;/a&gt;
  &lt;em&gt;No fast forward&lt;/em&gt;
&lt;/h2&gt;

&lt;p&gt;Considere novamente a seguinte situação:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TkNyLZcG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0zsbo52o6xhs3a7aibyo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TkNyLZcG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0zsbo52o6xhs3a7aibyo.png" alt="No fast forward etapa 1" width="729" height="428"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Neste caso, quando foi executado um &lt;em&gt;merge&lt;/em&gt; da &lt;em&gt;branch&lt;/em&gt; login em direção a &lt;em&gt;branch&lt;/em&gt; master, o Git assumiu a estratégia &lt;em&gt;fast forward&lt;/em&gt; e moveu o rótulo da &lt;em&gt;branch&lt;/em&gt; master para o &lt;em&gt;commit&lt;/em&gt; "creating login feature". Porém, é possível forçar a utilização de uma estratégia &lt;em&gt;three way&lt;/em&gt;, fazendo que o Git crie um &lt;em&gt;commit&lt;/em&gt; de &lt;em&gt;merge&lt;/em&gt;. Para isso basta incluir a opção --no-ff (no &lt;em&gt;fast forward&lt;/em&gt;) no comando &lt;em&gt;merge&lt;/em&gt;:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git merge --no-ff login&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--n_BIvddd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/57ezibisgk81dzgbfo3r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n_BIvddd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/57ezibisgk81dzgbfo3r.png" alt="No fast forward etapa 2" width="880" height="504"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Note que esta era uma situação típica de &lt;em&gt;fast forward&lt;/em&gt;, porém com a opção --no-ff o Git foi forçado a gerar um &lt;em&gt;commit&lt;/em&gt; de &lt;em&gt;merge&lt;/em&gt;. Isso pode ser útil, ocasionalmente, caso você precise marcar pontos de mesclagem no histórico. Você só deve ter em mente que um histórico com muitos &lt;em&gt;commits&lt;/em&gt; de &lt;em&gt;merge&lt;/em&gt; pode torná-lo confuso e de difícil compreensão. Já em situações que o &lt;em&gt;merge&lt;/em&gt; seria pela estratégia &lt;em&gt;three way&lt;/em&gt;, você não pode forçar um &lt;em&gt;fast forward&lt;/em&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#merge-sem-checkout-%C3%A9-poss%C3%ADvel"&gt;
  &lt;/a&gt;
  &lt;em&gt;Merge&lt;/em&gt; sem &lt;em&gt;checkout&lt;/em&gt;, é possível?
&lt;/h2&gt;

&lt;p&gt;Nos exemplos vistos, antes de uma ação de &lt;em&gt;merge&lt;/em&gt;, foi realizado um &lt;em&gt;checkout&lt;/em&gt; na &lt;em&gt;branch&lt;/em&gt; master. Em todos os casos o objetivo era um só, incluir os &lt;em&gt;commits&lt;/em&gt; exclusivos da &lt;em&gt;branch&lt;/em&gt; login na &lt;em&gt;branch&lt;/em&gt; master, que era a &lt;em&gt;branch&lt;/em&gt; corrente com o &lt;em&gt;checkout&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Neste contexto, uma pergunta que pode surgir é sobre a possibilidade de fazer uma mesclagem entre duas &lt;em&gt;branches&lt;/em&gt;, que não são a &lt;em&gt;branch&lt;/em&gt; corrente. A resposta para esta dúvida pode ser respondida pelo texto a seguir, retirado diretamente da &lt;a href="https://stackoverflow.com/questions/3216360/merge-update-and-pull-git-branches-without-using-checkouts"&gt;fonte&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;"...Você não pode mesclar uma branch B na branch A sem fazer o checkout de A primeiro, caso isso resulte em uma mesclagem sem fast forward (three way). Isso ocorre porque uma cópia de trabalho é necessária para resolver quaisquer conflitos em potencial. No entanto, no caso de mesclagens fast forward, isso é possível , porque tais mesclagens nunca podem resultar em conflitos, por definição..."&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#conclus%C3%A3o"&gt;
  &lt;/a&gt;
  Conclusão
&lt;/h2&gt;

&lt;p&gt;Como vimos, um &lt;em&gt;merge&lt;/em&gt; pode ser executado de duas formas: por estratégia &lt;em&gt;fast forward&lt;/em&gt; ou &lt;em&gt;three way&lt;/em&gt;. A primeira, quando possível, será a melhor opção pois mantém um histórico linear e está livre de resolução de conflitos, pois envolve somente alteração de referência. Já a segunda, além de gerar um histórico bifurcado, com &lt;em&gt;commits&lt;/em&gt; adicionais de mesclagem, ainda está suscetível a resolução de conflitos. Esses &lt;em&gt;commits&lt;/em&gt; adicionais podem prejudicar a leitura do histórico. Ao menos que você utilize um --no-ff, o Git irá definir a estratégia de &lt;em&gt;merge&lt;/em&gt; de acordo o histórico das duas &lt;em&gt;branches&lt;/em&gt; envolvidas na mesclagem.&lt;/p&gt;

&lt;p&gt;Quer aprender mais sobre esta ferramenta essencial para desenvolvedores de software? Aprenda no mais novo curso de &lt;a href="https://www.udemy.com/course/git-basico-ao-avancado-2021/?referralCode=D1231C6B99B30C6EDF14"&gt;Git - Básico ao avançado&lt;/a&gt;&lt;/p&gt;

</description>
      <category>git</category>
      <category>beginners</category>
      <category>programming</category>
      <category>versioncontrol</category>
    </item>
    <item>
      <title>How to emulate iOS on Linux with Docker</title>
      <author>Iaan Mesquita</author>
      <pubDate>Wed, 29 Dec 2021 01:06:06 +0000</pubDate>
      <link>https://dev.to/ianito/how-to-emulate-ios-on-linux-with-docker-4gj3</link>
      <guid>https://dev.to/ianito/how-to-emulate-ios-on-linux-with-docker-4gj3</guid>
      <description>&lt;p&gt;After several unsuccessful attempts, I was finally able to virtualize a macOS to run tests on an iOS app I was working on.&lt;/p&gt;

&lt;p&gt;But before proceeding, it is necessary to know that this is not a stable solution and has several performance issues, however, for my purpose I managed to do what I wanted.&lt;/p&gt;

&lt;p&gt;We'll use QEMU to emulate a mac and inside it  we'll use xCode to emulate an iOS. That process not will be lightweight.&lt;/p&gt;

&lt;p&gt;The repository on github of &lt;a href="https://github.com/sickcodes/Docker-OSX"&gt;Docker OSX&lt;/a&gt; has an explanation of how to use an iPhone via usb instead of emulating, but I don't have iPhone. xD&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#what-is-docker-osx"&gt;What is Docker OSX&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#hardware-specifications"&gt;Hardware Specifications&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#running-a-app-with-react-native"&gt;Running a app with React Native&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#running-a-app-with-cordova"&gt;Running a app with Cordova&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#creating-a-connection-of-folders-over-ssh"&gt;Creating a connection of folders over SSH&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#final-considerations"&gt;Final considerations&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#what-is-docker-osx"&gt;
  &lt;/a&gt;
  What is Docker OSX
&lt;/h2&gt;

&lt;p&gt;The Docker OSX is a docker image that uses QEMU so that we can emulate an operating system.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Read more: &lt;a href="https://www.docker.com/"&gt;What is Docker?&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#hardware-specifications"&gt;
  &lt;/a&gt;
  Hardware Specifications
&lt;/h2&gt;

&lt;p&gt;My computer's specs are considered OK to do this, however, I still managed to notice some lags while using Docker OSX + xCode + Visual Studio Code + Dev Server. (I was even able to heat my room with that much stuff)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;OS:&lt;/strong&gt; Manjaro Linux x86_64 &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Kernel:&lt;/strong&gt; 4.19.220-1-MANJARO &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Shell:&lt;/strong&gt; zsh 5.8 &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Resolution:&lt;/strong&gt; 1440x900&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;DE:&lt;/strong&gt; GNOME 41.2 &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;WM:&lt;/strong&gt; Mutter &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;WM Theme:&lt;/strong&gt; Orchis-orange-compact &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Icons:&lt;/strong&gt; Win11-purple-dark [GTK2/3] &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Terminal:&lt;/strong&gt; gnome-terminal &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;CPU:&lt;/strong&gt; Intel i7-3770 (8) @ 3.900GHz &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;GPU:&lt;/strong&gt; NVIDIA GeForce GTX 1050 Ti &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Memory:&lt;/strong&gt; 4105MiB / 15985MiB &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;SSD:&lt;/strong&gt; Crucial BX500 240gb (&lt;strong&gt;Highly recommended SSD&lt;/strong&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h2&gt;

&lt;p&gt;First, is necessary have docker installed on your computer. I use Manajaro, so I just opened the terminal and type: &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Installation Docker&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;pacman -S docker&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Start docker services&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;systemctl start docker.service&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Enable docker services to boot with system&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;systemctl enable docker.service&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Testing docker:&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;docker run hello-world&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0Xaqj_-_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xgj3c3zue8x13y0tps7c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0Xaqj_-_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xgj3c3zue8x13y0tps7c.png" alt="Docker run hello-world" width="880" height="583"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Alright, now we'll download the docker osx and run using the command below:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;docker run -it --device /dev/kvm -p 50922:10022 -e DEVICE_MODEL="iMacPro1,1" -e WIDTH=1440 -e HEIGHT=900 -e RAM=8 -e INTERNAL_SSH_PORT=23     -e AUDIO_DRIVER=alsa -e CORES=2 -v /tmp/.X11-unix:/tmp/.X11-unix -e "DISPLAY=${DISPLAY:-:0.0}"  -e GENERATE_UNIQUE=true  -e MASTER_PLIST_URL=https://raw.githubusercontent.com/sickcodes/osx-serial-generator/master/config-custom.plist sickcodes/docker-osx:big-sur&lt;/code&gt;&lt;br&gt;
You can check what each flag means at &lt;a href="https://github.com/sickcodes/Docker-OSX"&gt;github of docker osx&lt;/a&gt;.&lt;br&gt;
but briefly, i specified the resolution, memory, cores of processor, version and others things.&lt;/p&gt;

&lt;p&gt;Then, the docker osx will downloaded and initialized.&lt;/p&gt;

&lt;p&gt;When the emulator opens, select option &lt;code&gt;macOS Base System&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TlFdf8Aw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fubit7hhx6x50d4rynwe.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TlFdf8Aw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fubit7hhx6x50d4rynwe.png" alt="Emulador Docker OSX" width="880" height="580"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When system be booted, select &lt;code&gt;Disk Utility&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tdkFod8R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f5ksa4x7piwfsj4qe291.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tdkFod8R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f5ksa4x7piwfsj4qe291.png" alt="Emulador Docker OSX" width="880" height="533"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, we'll search the partition that be with most storage space and select the option &lt;code&gt;Erase&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jb5wbvFA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/irj97wizelw0hbfoamql.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jb5wbvFA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/irj97wizelw0hbfoamql.png" alt="Docker OSX apagando sistema" width="880" height="550"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To format, the chosen options must be strictly equal to this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4a_4IFwh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/drf8gki6wway416rb85h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4a_4IFwh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/drf8gki6wway416rb85h.png" alt="Formatação opções" width="880" height="547"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click on &lt;code&gt;Erase&lt;/code&gt;, wait process finish and then you can close the Disk Utility window.&lt;/p&gt;

&lt;p&gt;Next, select the option &lt;code&gt;Reinstall macOS Big Sur&lt;/code&gt;, accept the terms and select the partition we just created &lt;code&gt;macOS&lt;/code&gt; and start installation. (This process can take 30 min ~ 1 hour). &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AIYydlCD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rd67yhek2mjer3bkm1h5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AIYydlCD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rd67yhek2mjer3bkm1h5.png" alt="Docker OSX Instalação" width="880" height="552"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So, the system must restart (or not), in my case, I had to do it manually because it didn't restart. In that case, close the QEMU window.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gO0tFS4P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/44eandfh00uh6swzrc0k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gO0tFS4P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/44eandfh00uh6swzrc0k.png" alt="Qemu error" width="880" height="540"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In terminal, we'll type:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;docker ps -a&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;To know what is ID of our container and next we'll start typing the command below:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;docker start ID&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RWpujTQJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t0ythg12xpdnf5x9zhls.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RWpujTQJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t0ythg12xpdnf5x9zhls.png" alt="Docker IDS" width="880" height="70"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Select &lt;code&gt;macOS Installer&lt;/code&gt; and the installation will continue.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6OacQF7Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xq39lesxjerdba85w41k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6OacQF7Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xq39lesxjerdba85w41k.png" alt="Docker OSX Instalação" width="880" height="550"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then, the system will restart automatically (or not), so  close again the QUEMU and start again the container.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tD2mHb9---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xe5lk5aq4xzw55j0afwj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tD2mHb9---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xe5lk5aq4xzw55j0afwj.png" alt="Docker OSX Instalação" width="880" height="585"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When the system boot, select option &lt;code&gt;macOS Installer&lt;/code&gt; and wait the process finish. At end, the system will restart. (Now it's true).&lt;/p&gt;

&lt;p&gt;Well, macOS was installed successfully. Select the option &lt;code&gt;macOS&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--O_7juyzS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wkzdtw9jozj91gi66v2f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--O_7juyzS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wkzdtw9jozj91gi66v2f.png" alt="Docker OSX Inicialização" width="880" height="546"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once that's done, it will restart again and you select the same &lt;code&gt;macOS&lt;/code&gt; option.&lt;/p&gt;

&lt;p&gt;Well done, welcome screen appeared. This configuration part is quite slow, but after this process finished, the system will work very well.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RS2rsYRS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/up2vajvs9p2l8g1vq39f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RS2rsYRS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/up2vajvs9p2l8g1vq39f.png" alt="Tela de bem vindo macOS" width="880" height="548"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Configure the system , but don't login your AppleID at this moment.&lt;/p&gt;

&lt;p&gt;When that process done, our desktop will appears and we'll wait until the dock appear because after this, the system will be most stable.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---pVNfn4h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ydprxzwqrnyp88tht3hf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---pVNfn4h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ydprxzwqrnyp88tht3hf.png" alt="Tela de instalação mac OS Sem dock" width="880" height="548"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3sqeiPjX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xoucf5ea5kl7r8cd2zr4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3sqeiPjX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xoucf5ea5kl7r8cd2zr4.png" alt="Tela de instalação mac OS Com dock" width="880" height="548"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, we'll use the &lt;code&gt;brew&lt;/code&gt; for install the packages more fast.&lt;/p&gt;

&lt;p&gt;Open terminal in macOS and install brew with the command below:&lt;br&gt;
&lt;code&gt;/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Insert your password and wait the process finish. &lt;/p&gt;

&lt;p&gt;Now, we'll install &lt;code&gt;xcode&lt;/code&gt; on Apple Store.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--c-Mp2I6---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zrchopyo4u207fyou05a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c-Mp2I6---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zrchopyo4u207fyou05a.png" alt="Apple store xcode" width="880" height="558"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So now, we can login on AppleID.  &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--B6jI1pDZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/elma6mfjd6us7pst5y0l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--B6jI1pDZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/elma6mfjd6us7pst5y0l.png" alt="Login apple store" width="880" height="535"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After that, wait for the installation.&lt;/p&gt;

&lt;p&gt;Then, open &lt;code&gt;xcode&lt;/code&gt; and accept the terms and wait install the dependencies.&lt;/p&gt;

&lt;p&gt;So now, go at &lt;code&gt;Preferences -&amp;gt; Locations -&amp;gt; Command-Line Tools&lt;/code&gt; it will be blank, select the option with the xCode version.&lt;/p&gt;

&lt;p&gt;When the installation done, we'll open the terminal again and install &lt;code&gt;cocoapods&lt;/code&gt; with command below. It serve as packager manager of xCode.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;brew install cocoapods&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Done that, our &lt;code&gt;macOS&lt;/code&gt; will be installed and configured to run the projects.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#running-a-app-with-react-native"&gt;
  &lt;/a&gt;
  Running a app with React Native
&lt;/h2&gt;

&lt;p&gt;Okay, let's start with a hello world of React Native to check if everything we've done before will work.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;I'll only check iOS.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Open the terminal and type:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Install node:&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;brew install node&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Install yarn (optional):&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;npm install -g yarn&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Creating a project with RN:&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;npx react-native init teste&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If ask you to install cocoapods again, select the option with brew.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Enter at the project directory:&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;cd teste&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Enter at ios directory:&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;cd ios&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Install dependencies:&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;pod install&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Back to root directory:&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;cd ..&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;List all simulate availaibles:&lt;/strong&gt; (Optional)&lt;br&gt;
&lt;code&gt;xcrun simctl list devices&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Run the project with xcode:&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;npx react-native run-ios --simulator="iPhone 13"&lt;/code&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kEMfg3IE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jq34wwlfr17dubmhcy4s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kEMfg3IE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jq34wwlfr17dubmhcy4s.png" alt="App rodando react native" width="880" height="549"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To a better experience, see section: &lt;a href="#creating-a-connection-of-folders-over-ssh"&gt;Creating a connection of folders over SSH&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#running-a-app-with-cordova"&gt;
  &lt;/a&gt;
  Running a app with Cordova
&lt;/h2&gt;

&lt;p&gt;Okay, let's start with a hello world of Quasar to check if everything we've done before will work.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;I'll only check iOS.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Quasar uses Cordova/Capacitor for iOS and Android.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Install node:&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;brew install node&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Install yarn (opcional):&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;npm install -g yarn&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Install quasar:&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;yarn global add @quasar/cli&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Install cordova:&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;yarn global add cordova&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;*&lt;em&gt;Creating a project with Quasar:&lt;/em&gt;&lt;br&gt;
&lt;code&gt;quasar create teste&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Enter in project directory:&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;cd teste&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Add cordova in your project:&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;quasar mode add cordova&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Enter in cordova directory:&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;cd src-cordova&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Add iOS in project:&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;cordova platform add ios&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Verify if everything is okay:&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;cordova requirements&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;List all simulate availables:&lt;/strong&gt; (Opcional)&lt;br&gt;
&lt;code&gt;cordova emulate iOS --list&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Install dependencies:&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;yarn&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Back to root directory:&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;cd ..&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Install dependencies:&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;yarn&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Run quasar with development mode on iOS:&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;quasar dev -m iOS -e "iPhone 8, 15.2"&lt;/code&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--peEzskTr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zjoyvlx1pl9u41n9jy15.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--peEzskTr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zjoyvlx1pl9u41n9jy15.png" alt="macOS quasar" width="880" height="554"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To a better experience, see section: &lt;a href="#creating-a-connection-of-folders-over-ssh"&gt;Creating a connection of folders over SSH&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-a-connection-of-folders-over-ssh"&gt;
  &lt;/a&gt;
  Creating a connection of folders over SSH
&lt;/h2&gt;

&lt;p&gt;Now our app is already running on macOS, we have a problem: Opening our code editor or IDE inside macOS is a very bad experience because of slowdowns, crashes, keyboard mapping and so on. So I researched a solution to create a file connection using SSH.&lt;/p&gt;

&lt;p&gt;Also, I can open the development server inside macOS and create a connection where I can change files directly from my linux or macOS so that it updates on both sides, like a two-way. This guarantees us to take advantage of some things that exist in development mode, like fast refresh.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#connection-from-linux-to-mac"&gt;
  &lt;/a&gt;
  Connection from linux to mac
&lt;/h3&gt;

&lt;p&gt;First, we need to allow connection via ssh via mac login. To do this, we will open the terminal and type:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Command to open edit ssh configuration file:&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;sudo nano /etc/ssh/sshd_config&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Search for &lt;code&gt;PasswordAuthentication&lt;/code&gt; and put &lt;code&gt;yes&lt;/code&gt; and remove &lt;code&gt;#&lt;/code&gt; at beginning line.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BQHermMu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3aqms7coe0l4xwdga0j1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BQHermMu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3aqms7coe0l4xwdga0j1.png" alt="Configuração sshd" width="880" height="455"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Save file.&lt;/p&gt;

&lt;p&gt;Go to &lt;code&gt;System Preferences -&amp;gt; Sharing -&amp;gt; Remote Login&lt;/code&gt; and active for all users:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6BlYj-1j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/77o3ld5524ufbtvue507.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6BlYj-1j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/77o3ld5524ufbtvue507.png" alt="macOS configuração" width="880" height="546"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Command to restart ssh:&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;sudo launchctl stop com.openssh.sshd &amp;amp;&amp;amp; sudo launchctl start com.openssh.sshd&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now, in linux terminal:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Install sshfs:&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;sudo pacman -S sshfs&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Get container IP&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' ID_CONTAINER&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Create a folder:&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;mkdir projeto&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Command to open a new connection with mac:&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;sudo sshfs USER_MAC@IP_CONTAINER:/PATH/OF/PROJECT/ON/MAC /PATH/ON/LINUX -p 23&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sUyhPclG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gwcd70m354t5hnviy9h9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sUyhPclG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gwcd70m354t5hnviy9h9.png" alt="Exemplo de conexão" width="880" height="668"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Alright, now we can open the VSCode on linux and update the files updating directly on mac.&lt;/p&gt;

&lt;p&gt;If you have another computer, you can do this connection and let your computer with emulator just emulating.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#connection-from-mac-to-linux"&gt;
  &lt;/a&gt;
  Connection from Mac to Linux
&lt;/h3&gt;

&lt;p&gt;Same process  previously, but the sshfs package on mac can be installed using the command below:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Install sshfs&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;brew install --cask macfuse &amp;amp;&amp;amp; brew install gromgit/fuse/sshfs-mac&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;On Linux:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Command to edit ssh configuration file:&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;sudo nano /etc/ssh/sshd_config&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Search for &lt;code&gt;PasswordAuthentication&lt;/code&gt; and put &lt;code&gt;yes&lt;/code&gt; and remove &lt;code&gt;#&lt;/code&gt; at beginning line.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BQHermMu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3aqms7coe0l4xwdga0j1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BQHermMu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3aqms7coe0l4xwdga0j1.png" alt="Configuração sshd" width="880" height="455"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Save the file.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Command to restart SHH on Manjaro:&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;sudo systemctl restart sshd.service&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;On Mac, we'll create a folder to open connection.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Create a folder:&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;mkdir projeto&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Command to open a new connection with linux&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;sudo sshfs USER_LINUX@IP_HOST:/PATH/LINUX /PATH/MAC -p 23&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;When we type the command, an error will occur.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kKIvhJK1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fgq3r1245m3s94qe5yql.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kKIvhJK1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fgq3r1245m3s94qe5yql.png" alt="Erro MAC" width="880" height="551"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Open the preferences and click &lt;code&gt;Allow&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--opJruFbU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/smhcxmmfcvvxdmrf8ssg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--opJruFbU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/smhcxmmfcvvxdmrf8ssg.png" alt="MacOS Preferencias" width="880" height="547"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Restart your mac.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Now, we can open the connection:&lt;/strong&gt; (My SSH is opened in a different port, but the default is 22)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eypMDH_m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wr871w7pezvkz80t1k53.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eypMDH_m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wr871w7pezvkz80t1k53.png" alt="Conexão SSH OK" width="880" height="557"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once that's done, we can update from either side which will also reflect on both.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-considerations"&gt;
  &lt;/a&gt;
  Final considerations
&lt;/h2&gt;

&lt;p&gt;Thank you very much for reading this tutorial, by the way it's the first one I've published in years. Any questions or suggestions(mostly my english) are always welcome.&lt;/p&gt;

&lt;p&gt;Oh, never update your mac.&lt;/p&gt;

&lt;p&gt;:)&lt;/p&gt;

</description>
      <category>linux</category>
      <category>ios</category>
      <category>virtualization</category>
      <category>xcode</category>
    </item>
    <item>
      <title>Measuring your progress in Web Development: why is it important and how to do it</title>
      <author>Damian Demasi</author>
      <pubDate>Wed, 29 Dec 2021 00:53:48 +0000</pubDate>
      <link>https://dev.to/colocodes/measuring-your-progress-in-web-development-why-is-it-important-and-how-to-do-it-55hj</link>
      <guid>https://dev.to/colocodes/measuring-your-progress-in-web-development-why-is-it-important-and-how-to-do-it-55hj</guid>
      <description>&lt;p&gt;The learning journey in the web development world can be chaotic at times. If you think about the fact that there are too many topics to learn, too much to remember, and the incommensurable amount of rabbit holes, it's easy to lose motivation or to feel lost.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-problem-with-programming-being-intangible"&gt;
  &lt;/a&gt;
  The problem with programming being intangible
&lt;/h2&gt;

&lt;p&gt;Learning web development is not like actually building something with our hands. Programming is abstract, and we can't actually "touch" our program, which gives us a sense of not having accomplished something. By contrast, a carpenter can start working on building a chair, and after a while, the carpenter can point to the chair, even touch it, and say "I've built that!". As programming, and much of the knowledge work, is intangible, we need a way to improve the feedback on our effort. Using progress indicators is a great way of doing so.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/VhE7ABvkD8CHe/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/VhE7ABvkD8CHe/giphy.gif" width="480" height="270"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The key to succeeding in your study process (and for building projects) is to stick to a good habit of learning and building every day. According to &lt;a href="https://jamesclear.com/"&gt;James Clear&lt;/a&gt;, the best way to stick to a habit is to make it satisfying. This is where &lt;em&gt;visual measures&lt;/em&gt; come into play.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#habit-trackers"&gt;
  &lt;/a&gt;
  Habit trackers
&lt;/h2&gt;

&lt;p&gt;Visual measures can be presented in many different ways, such as journaling, progress bars, and page numbers in a book. They are useful because they add immediate feedback and satisfaction after performing a habit, making &lt;em&gt;habit trackers&lt;/em&gt; one of the best ways to measure our progress.&lt;/p&gt;

&lt;p&gt;The way in which we track our progress needs to be attractive and satisfying, thus making it enjoyable, something we aspire to do after finishing a habit.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Habit trackers and other visual forms of measurement can make your habits satisfying by providing clear evidence of your progress.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Clear, James. Atomic Habits (p. 204). Penguin Publishing Group.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#implementing-habit-trackers"&gt;
  &lt;/a&gt;
  Implementing habit trackers
&lt;/h2&gt;

&lt;p&gt;We should be mindful of tracking things that are under our control, such as how many hours we invest in programming a project, and avoid tracking things outside our control, such as how many people star our project on GitHub or how many followers we have on &lt;a href="https://hanamakhlouf.medium.com/4-reasons-to-get-on-tech-twitter-now-cafc020ad5d8"&gt;Tech Twitter&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The activities we can track can be broadly divided into two categories depending on:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;how much effort we invest, and&lt;/li&gt;
&lt;li&gt;how much progress we have made.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#tracking-effort"&gt;
  &lt;/a&gt;
  Tracking effort
&lt;/h3&gt;

&lt;p&gt;Effort can depend on &lt;strong&gt;time&lt;/strong&gt; (how many hours do we clock in) or on &lt;strong&gt;repetition&lt;/strong&gt; (how many projects we have built).&lt;/p&gt;

&lt;p&gt;In order to track &lt;strong&gt;time&lt;/strong&gt;, I usually use a time-tracker app. My favourite is &lt;a href="https://clockify.me/"&gt;Clockify&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--N1f9GUY7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640732587682/a_AfJZjdQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--N1f9GUY7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640732587682/a_AfJZjdQ.png" alt="Using Clockify" width="880" height="654"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I use time tracking like this:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;👉 First, define how much time I will invest in the activity. For example, if the activity is "studying JavaScript", I will say "I will invest 1 hour a day, 5 days a week, on studying JavaScript". This is the minimum, and I'll do my best effort to invest &lt;em&gt;at least&lt;/em&gt; this amount of time in the activity.&lt;/li&gt;
&lt;li&gt;👉  Second, define this activity as a project in the time tracking app. By doing so, I can get detailed information on the app regarding how much time I invested over the days.&lt;/li&gt;
&lt;li&gt;👉  Third, start tracking time on the app.&lt;/li&gt;
&lt;li&gt;👉  Fourth, periodically analyse how this activity is going by taking a look at the time tracking report.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FsEghF8H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640733079008/PDRWCDP2n.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FsEghF8H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640733079008/PDRWCDP2n.png" alt="JavaScript time tracking" width="880" height="654"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For example, as shown in the picture above, during the months of June, July and August, I spent 205 hours studying JavaScript.&lt;/p&gt;

&lt;p&gt;By doing this, I can go from "I studied some JavaScript during 2021" to "I spent 205 hours focusing on JavaScript during June, July and August of 2021". I have a number, a real measurement that I can use to get a better feeling of the progress I'm making on JavaScript.&lt;/p&gt;

&lt;p&gt;If what we want is to track &lt;strong&gt;repetition&lt;/strong&gt;, we can just decide, for example, on how many projects we want to build for a specific goal. We can say that we want 3 projects on our portfolio, so we will track how many projects we are building, and this will give us a sense of &lt;strong&gt;advancing towards our goal&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PLlP3WlI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640733670073/Za9jxWD3r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PLlP3WlI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640733670073/Za9jxWD3r.png" alt="Projects" width="880" height="196"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I usually use &lt;a href="https://www.notion.so/"&gt;Notion&lt;/a&gt; for this, but you can use any app, or just pen and paper.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5ytEK13m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640735362386/WvL7lSg07.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5ytEK13m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640735362386/WvL7lSg07.jpeg" alt="Project progress" width="361" height="81"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tracking-progress"&gt;
  &lt;/a&gt;
  Tracking progress
&lt;/h3&gt;

&lt;p&gt;Tracking progress is ideal for activities that take a long time, and that have a beginning and an end. A course or book on JavaScript is the ideal subject to track this way.&lt;/p&gt;

&lt;p&gt;What I do in this case is to divide the activity into smaller chunks. If I want to study a book, I will use the book's chapters as steps to measure the progress. If I want to measure a Udemy course, I will use each separate class (video) as a step to measure my progress.&lt;/p&gt;

&lt;p&gt;For example, as of December 2021, the &lt;a href="https://eloquentjavascript.net/"&gt;Eloquent JavaScript&lt;/a&gt; book has 21 chapters plus the introduction, so I will divide my progress on the book into 22 steps. Each time I finish a chapter, I will mark one of those steps as done by increasing the &lt;em&gt;Commpleted&lt;/em&gt; counter on the tracking app/system.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7PQcksEm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640734136194/5zGUyMyl_.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7PQcksEm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1640734136194/5zGUyMyl_.png" alt="Progress" width="629" height="256"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A similar methodology will be used on Udemy courses or on the freeCodeCamp syllabus.&lt;/p&gt;

&lt;p&gt;My preferred tool for measuring this is, again, &lt;a href="https://www.notion.so/"&gt;Notion&lt;/a&gt;. &lt;strong&gt;You can take a look at the template I use by &lt;a href="https://chipper-designer-8106.ck.page/b0a239f6ae"&gt;downloading it from here&lt;/a&gt;&lt;/strong&gt;, and going to the &lt;strong&gt;Study progress&lt;/strong&gt; section.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#closing-thoughts"&gt;
  &lt;/a&gt;
  Closing thoughts
&lt;/h2&gt;

&lt;p&gt;Tracking our progress can help us to get a feeling of how much have we accomplished towards a goal, and can also contribute to sticking with difficult habits, such as studying web development every day or building projects. I encourage you to try some of these techniques and see for yourself if they are useful to you.&lt;/p&gt;

&lt;p&gt;I would love to hear if you have implemented habit tracking before, or if you have a different method to track your progress, so feel free to post it in the comments section.&lt;/p&gt;




&lt;p&gt;🗞️ &lt;strong&gt;NEWSLETTER -&lt;/strong&gt; &lt;em&gt;If you want to hear about my latest articles and interesting software development content, &lt;a href="https://chipper-designer-8106.ck.page/1a819bffe8"&gt;subscribe to my newsletter&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;🐦 &lt;strong&gt;TWITTER -&lt;/strong&gt; &lt;em&gt;Follow me on &lt;a href="https://twitter.com/DamianDemasi"&gt;Twitter&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>programming</category>
      <category>productivity</category>
    </item>
    <item>
      <title>C++ Complete Roadmap 2022</title>
      <author>Ashish Yadav</author>
      <pubDate>Wed, 29 Dec 2021 00:28:33 +0000</pubDate>
      <link>https://dev.to/expoashish/c-complete-roadmap-2022-2cp2</link>
      <guid>https://dev.to/expoashish/c-complete-roadmap-2022-2cp2</guid>
      <description>&lt;h2&gt;
  &lt;a href="#c-complete-roadmap-2022"&gt;
  &lt;/a&gt;
  C++ Complete Roadmap 2022
&lt;/h2&gt;

&lt;p&gt;In this blog we are going to discuss complete roadmap for c++ in 2022. I will give you only topics and if you like my post then follow my Blogs. Lets Start:-👇&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#c-complete-roadmap-2022"&gt;
  &lt;/a&gt;
  &lt;a href="https://codexashish.blogspot.com/2021/12/complete-roadmap-of-c-programming.html"&gt;C++ Complete Roadmap 2022&lt;/a&gt;
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#new-amp-trending-topics"&gt;
  &lt;/a&gt;
  New &amp;amp; Trending Topics:👇
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://codexashish.blogspot.com/2021/12/top-10-trending-technologies-to-learn.html"&gt;Top 10 Trending Technologies to Learn in 2022&lt;/a&gt;&lt;br&gt;
&lt;a href="https://codexashish.blogspot.com/2021/12/top-10-programming-languages-you-must.html"&gt;Top 10 Programming Languages You Must Know In 2022&lt;/a&gt;&lt;br&gt;
&lt;a href="https://codexashish.blogspot.com/2021/12/complete-roadmap-of-machine-learning.html"&gt;Machine Learning Complete Roadmap 2022&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#complete-roadmap-2022"&gt;
  &lt;/a&gt;
  Complete Roadmap 2022:-👇
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://codexashish.blogspot.com/2021/12/complete-roadmap-of-python-programming.html"&gt;Python Complete Roadmap 2022&lt;/a&gt;&lt;br&gt;
&lt;a href="https://codexashish.blogspot.com/2021/12/complete-roadmap-of-machine-learning.html"&gt;Machine Learning Complete Roadmap 2022&lt;/a&gt;&lt;br&gt;
&lt;a href="https://codexashish.blogspot.com/2021/12/complete-roadmap-of-c-programming.html"&gt;C++ Complete Roadmap 2022&lt;/a&gt;&lt;br&gt;
&lt;a href="https://codexashish.blogspot.com/2021/12/java-complete-roadmap-2022.html"&gt;Java Complete Roadmap 2022&lt;/a&gt;&lt;br&gt;
&lt;a href="https://codexashish.blogspot.com/2021/12/complete-roadmap-of-data-structure.html"&gt;Data Structure Complete Roadmap 2022&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#some-laravel-tutorial-for-developer"&gt;
  &lt;/a&gt;
  Some Laravel Tutorial for developer:👇
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://codexashish.blogspot.com/2021/12/laravel-8-interview-questions-and.html"&gt;Laravel 8 Interview Questions and Answers in 2022 (Part #1)&lt;/a&gt;&lt;br&gt;
&lt;a href="https://codexashish.blogspot.com/2021/12/laravel-8-interview-questions-and_22.html"&gt;Laravel 8 Interview Questions and Answers in 2022 (Part #2)&lt;/a&gt;&lt;br&gt;
&lt;a href="https://codexashish.blogspot.com/2021/12/advance-laravel-8-interview-questions.html"&gt;Advance Laravel 8 Interview Questions and Answers 2022&lt;/a&gt;&lt;br&gt;
&lt;a href="https://codexashish.blogspot.com/2021/12/everything-about-laravel-8-composer.html"&gt;Everything About Laravel 8 Composer 2022 | Composer in Laravel 8&lt;/a&gt;&lt;br&gt;
&lt;a href="https://codexashish.blogspot.com/2021/12/laravel-jetstream-vs-laravel-ui-vs.html"&gt;Laravel Jetstream vs Laravel ui  vs Breeze&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#python-concept-and-projects"&gt;
  &lt;/a&gt;
  Python Concept and Projects:-👇
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://codexashish.blogspot.com/2021/12/10-best-python-libraries-for-machine.html"&gt;10 Best Python Libraries For Machine Learning&lt;/a&gt;&lt;br&gt;
&lt;a href="https://codexashish.blogspot.com/2021/07/alarm-clock-in-python-with-gui.html"&gt;Alarm Clock in Python with GUI&lt;/a&gt;&lt;br&gt;
&lt;a href="https://codexashish.blogspot.com/2021/06/tic-tac-toe-game-using-pygame-in-python.html"&gt;Tic Tac Toe Game Using Pygame in Python&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Thankyou for reading my blogs.&lt;/strong&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#my-website"&gt;
  &lt;/a&gt;
  My Website:👇
&lt;/h5&gt;

&lt;p&gt;&lt;a href="https://codexashish.blogspot.com/"&gt;CodexAshish&lt;/a&gt;&lt;/p&gt;

</description>
      <category>cpp</category>
      <category>c</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>How I designed an abuse-resistant, fault-tolerant, zero cost, multiplayer online game</title>
      <author>Jeremy Kahn</author>
      <pubDate>Tue, 28 Dec 2021 23:47:58 +0000</pubDate>
      <link>https://dev.to/jeremyckahn/how-i-designed-an-abuse-resistant-fault-tolerant-zero-cost-multiplayer-online-game-140g</link>
      <guid>https://dev.to/jeremyckahn/how-i-designed-an-abuse-resistant-fault-tolerant-zero-cost-multiplayer-online-game-140g</guid>
      <description>&lt;p&gt;Nearly a year ago I deployed a multiplayer feature for &lt;a href="https://www.farmhand.life/"&gt;Farmhand&lt;/a&gt;, an &lt;a href="https://github.com/jeremyckahn/farmhand"&gt;open source&lt;/a&gt; and web-based farming game that I created. Since that initial deployment, the multiplayer system has experienced &lt;strong&gt;no downtime or service degradation&lt;/strong&gt;. And best of all, &lt;strong&gt;I've paid nothing&lt;/strong&gt; to host the service and therefore I am able to allow others to play for free. This article is an overview of how I designed this system from the ground up.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-game"&gt;
  &lt;/a&gt;
  The game
&lt;/h2&gt;

&lt;p&gt;In short, Farmhand is a game that mixes farming and market mechanics. The goal is to buy seeds for a low price, plant and harvest them, and then sell the crops at a high price. Prices fluctuate from day-to-day, so you'll have to be smart about your buy/sell decisions.&lt;/p&gt;

&lt;p&gt;Farmhand was initially designed as a single-player game and seed/crop values were randomly generated at the start of each game day. One day I thought it would be cool to create a shared, online market that players around the world could participate in together. My vision was for one player's buy/sell decisions to affect the global market that determines the seed/crop values for all connected players.&lt;/p&gt;

&lt;p&gt;In order for this market system to be fun, it needed to be simple and reliable. I gave myself the following constraints:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Zero hosting costs&lt;/strong&gt;. I'm not making money from Farmhand, so I don't want to spend money to host it.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Minimal devops involvement&lt;/strong&gt;. Farmhand is just a hobby for me, and I have a day job. I don't want to be dealing with managing service outages during the work day (or the middle of the night).&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Fault-tolerance and abuse-resistant&lt;/strong&gt;. If you're putting a service online, expect people to abuse it. I wanted this system to not only be highly-available, but resistant to &lt;a href="https://en.wikipedia.org/wiki/Griefer"&gt;griefing&lt;/a&gt; as well.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In the end I was able to ship a fun and functional multiplayer system that adhered to all of these constraints.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-tech"&gt;
  &lt;/a&gt;
  The tech
&lt;/h2&gt;

&lt;p&gt;There are a few pieces to this system:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-client"&gt;
  &lt;/a&gt;
  The client
&lt;/h3&gt;

&lt;p&gt;Farmhand is implemented as a &lt;a href="https://web.dev/progressive-web-apps/"&gt;PWA&lt;/a&gt; that runs in a web browser. The client's overall architecture is outside the scope of this article, but for the purposes of online multiplayer it uses &lt;a href="https://github.com/dmotz/trystero"&gt;Trystero&lt;/a&gt; with the &lt;a href="https://github.com/dmotz/trystero#strategy-comparison"&gt;WebTorrent matchmaking strategy&lt;/a&gt; to connect peers to each other. It interacts with the central market server via a REST API.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-server"&gt;
  &lt;/a&gt;
  The server
&lt;/h3&gt;

&lt;p&gt;Farmhand's API is hosted on &lt;a href="https://vercel.com/pricing"&gt;Vercel's Hobby tier&lt;/a&gt;. Vercel provides an excellent &lt;a href="https://en.wikipedia.org/wiki/Serverless_computing"&gt;Serverless&lt;/a&gt; platform that offers scalable runtime performance, as well as static file hosting, automatic preview builds (great for testing out PRs), and more.&lt;/p&gt;

&lt;p&gt;The Vercel-based API is backed by a Redis instance for data "persistence." "Persistence" is in quotes because the data only ever lives in memory, so a system failure would result in complete data loss. However, the application logic is designed such that this kind of failure would be a &lt;strong&gt;feature&lt;/strong&gt; and not a bug. The Redis instance is hosted on &lt;a href="https://redis.com/redis-enterprise-cloud/pricing/"&gt;Redis Labs' free tier&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For Farmhand, both Vercel and Redis Labs are configured to run in AWS.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#system-architecture"&gt;
  &lt;/a&gt;
  System architecture
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nZMPVQE6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/irjruka4kas61u2d619f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nZMPVQE6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/irjruka4kas61u2d619f.png" alt="Farmhand System Design" width="880" height="581"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;At any given time, a player can go to &lt;a href="https://www.farmhand.life/"&gt;https://www.farmhand.life/&lt;/a&gt;, switch the "Play online" toggle and join a room of their choosing (&lt;code&gt;global&lt;/code&gt; by default). When this happens, two things occur:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;A request is made to &lt;code&gt;GET https://farmhand.vercel.app/api/get-market-data?room=global&lt;/code&gt;, which is a Serverless function. This retrieves the latest market data and also informs the server of the player's presence. This request is repeated to serve as a heartbeat until the player leaves the room to maintain an "active" session with the API.&lt;/li&gt;
&lt;li&gt;A WebSocket connection to a WebTorrent tracker is made. The tracker then connects the client to any other clients in the requested room. The peer-to-peer connection is persistent until the player leaves the room. This complexity is abstracted away via Trystero.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The API manages room data that is stored in Redis. When a &lt;code&gt;GET https://farmhand.vercel.app/api/get-market-data?room=global&lt;/code&gt; request (&lt;a href="https://github.com/jeremyckahn/farmhand/blob/d2953b195d4d1470eb3dbce84ea04d057e524614/api/get-market-data.js#L25-L69"&gt;source&lt;/a&gt;) is made, the API checks to see if a value associated with the key &lt;code&gt;room-global&lt;/code&gt; exists. &lt;a href="https://github.com/jeremyckahn/farmhand/blob/d2953b195d4d1470eb3dbce84ea04d057e524614/api-etc/utils.js#L29-L40"&gt;If not, it is initialized&lt;/a&gt;. Here's an example of a room object:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"activePlayers"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"4a793fe2-9eb1-4041-935b-5caf55177dde"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1640727668293&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"58f90cc1-1089-4394-a7e7-2f079f87ed4d"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1640727669934&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"b26b2d59-79f5-40f3-bc91-cfc0554bb994"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1640727674791&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"d1e34686-925e-4344-b7cb-e15ce6d7dad3"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1640727667860&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"valueAdjustments"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"asparagus"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;0.6798235686529905&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"asparagus-seed"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;0.9797840434970977&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"carrot"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;0.5382522777963925&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"carrot-seed"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;1.1233740954422615&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"corn"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;1.1524067154896047&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"corn-seed"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;1.2309158460921086&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;activePlayers&lt;/code&gt; is a map of unique player IDs (determined by clients via &lt;a href="https://github.com/uuidjs/uuid"&gt;uuid&lt;/a&gt; to timestamps of when they last made a &lt;code&gt;GET https://farmhand.vercel.app/api/get-market-data?room=global&lt;/code&gt; request. Each time the function is invoked, it examines the map to see which timestamps are older than the &lt;a href="https://github.com/jeremyckahn/farmhand/blob/d2953b195d4d1470eb3dbce84ea04d057e524614/src/common/constants.js#L3"&gt;&lt;code&gt;HEARTBEAT_INTERVAL_PERIOD&lt;/code&gt;&lt;/a&gt; (currently 10 seconds) and deletes any that are expired. This data is returned to the client and also written back to Redis to be persisted across function invocations. This is how the active room participants are tracked.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;valueAdjustments&lt;/code&gt; is the current state of the room's market. The map's keys refer to an item ID in the game and the values represent their respective in-game market value. Market values are bound between &lt;code&gt;0.5&lt;/code&gt; and &lt;code&gt;1.5&lt;/code&gt; and go up or down based on individual player activity. When a player ends their in-game day, an API request to &lt;code&gt;POST https://farmhand.vercel.app/api/post-day-results&lt;/code&gt; is made with a payload that looks something like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"positions"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"carrot-seed"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"room"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"global"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;positions&lt;/code&gt; represents all the items that the player either increased or decreased inventory of in their most recent in-game day. &lt;code&gt;1&lt;/code&gt; means that they increased their inventory of the associated item ID (either by buying seeds or harvesting crops), which increases the item's market value. &lt;code&gt;-1&lt;/code&gt; means they decreased their inventory (typically by selling the item), which decreases the item's market value. &lt;a href="https://github.com/jeremyckahn/farmhand/blob/ea40a1e364dbbd87a46494ccb87e6a1f750c17aa/api/post-day-results.js#L28-L56"&gt;Here's the source&lt;/a&gt; for that logic:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;applyPositionsToMarket&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;valueAdjustments&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;positions&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;valueAdjustments&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;reduce&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;acc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;itemName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;itemPositionChange&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;positions&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;itemName&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;variance&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mf"&gt;0.2&lt;/span&gt;

      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;MAX&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;1.5&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;MIN&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;

      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;itemPositionChange&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;acc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;itemName&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;min&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;MAX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;acc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;itemName&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;variance&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;itemPositionChange&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;acc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;itemName&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;MIN&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;acc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;itemName&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;variance&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="cm"&gt;/* itemPositionChange == 0 */&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// If item value is at a range boundary but was not changed in this&lt;/span&gt;
        &lt;span class="c1"&gt;// operation, randomize it to introduce some variability to the market.&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;acc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;itemName&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;MAX&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;acc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;itemName&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;MIN&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;acc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;itemName&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;MIN&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;

      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;acc&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;valueAdjustments&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The updated market data is again persisted back to Redis.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#abuse-mitigation"&gt;
  &lt;/a&gt;
  Abuse mitigation
&lt;/h2&gt;

&lt;p&gt;One of the nice things about this server-side logic is that it naturally mitigates abuse. There is nothing stopping people from crafting custom &lt;code&gt;POST https://farmhand.vercel.app/api/post-day-results&lt;/code&gt; requests to manipulate the market however they want. However, once the adjusted value for any given item reaches the upper or lower bound (&lt;code&gt;1.5&lt;/code&gt; or &lt;code&gt;0.5&lt;/code&gt;, respectively), the item's value is randomized within those bounds. So while nefarious people can manipulate the market, it will reset itself and balance out before long. Even in those cases, it only presents as normal (if somewhat volatile) market dynamics to players.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#fault-tolerance"&gt;
  &lt;/a&gt;
  Fault tolerance
&lt;/h2&gt;

&lt;p&gt;Farmhand room data is only stored in memory via Redis and never written to a disk. Because of this, it is inherently ephemeral. The worst case scenario with this design is that room data gets lost either due to the Redis server shutting down or something like a &lt;a href="https://redis.io/commands/flushall"&gt;&lt;code&gt;FLUSHALL&lt;/code&gt;&lt;/a&gt; command being issued. However, since &lt;a href="https://github.com/jeremyckahn/farmhand/blob/d2953b195d4d1470eb3dbce84ea04d057e524614/api-etc/utils.js#L29-L40"&gt;the API initializes requested room data that doesn't already exist&lt;/a&gt;, this would only present to the user as a bit of market volatility that would likely go unnoticed.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#peertopeer-interaction"&gt;
  &lt;/a&gt;
  Peer-to-peer interaction
&lt;/h2&gt;

&lt;p&gt;The Vercel-based API effectively manages the shared market data, but I wanted players to have a sense of who else is playing with them and how they are affecting the experience for everyone else. This is where the peer-to-peer communication comes into play.&lt;/p&gt;

&lt;p&gt;Instead of a server and logic to act as a broker between clients, they connect to each other directly via Trystero and WebTorrent as explained previously. As players perform various actions such as buying or selling items, messages are broadcast to all connected peers to display in the "Active Players" modal:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--I7ylo5Hw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vnpe69wy9g0rplgkryxn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--I7ylo5Hw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vnpe69wy9g0rplgkryxn.png" alt="Farmhand active players" width="456" height="728"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In an effort to mitigate abuse, player names are the result of &lt;a href="https://github.com/jeremyckahn/farmhand/blob/ea40a1e364dbbd87a46494ccb87e6a1f750c17aa/src/utils.js#L1007-L1021"&gt;a simple hashing algorithm based on player IDs&lt;/a&gt; (which are stable).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getPlayerName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;memoize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;playerId&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;playerIdNumber&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;playerId&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reduce&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;acc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;char&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;acc&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;char&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;charCodeAt&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;adjective&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;adjectives&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;playerIdNumber&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="nx"&gt;adjectives&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;adjectiveNumberValue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;adjective&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reduce&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;acc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;char&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;acc&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;char&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;charCodeAt&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;animal&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
    &lt;span class="nx"&gt;animalNames&lt;/span&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="nx"&gt;playerIdNumber&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;adjectiveNumberValue&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="nx"&gt;animalNames&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;adjective&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;animal&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#retrospective-analysis"&gt;
  &lt;/a&gt;
  Retrospective analysis
&lt;/h2&gt;

&lt;p&gt;This system has been effective so far. Vercel and Redis Labs have provided excellent performance and availability since this system launched nearly a year ago, which is impressive given that I'm using the free tier of both services. The fault-tolerance and abuse mitigation measures have resulted in the minimal maintenance burden I was hoping to achieve. The only manual intervention that's been required from me so far to keep things running is having to log into Redis Labs every couple of months to indicate that my account is still active.&lt;/p&gt;

&lt;p&gt;I'm quite pleased with how this multiplayer system has turned out so far. I'd like to expand on Farmhand's multiplayer features and further develop its online market mechanics. I'd like to know what others think as well, as I've never designed a full stack system before this and I would like to learn how it can be improved. Let me know what you think via the comments below! And if you're up for some easygoing farming fun, &lt;a href="https://www.farmhand.life/"&gt;give Farmhand a try&lt;/a&gt; sometime. 🙂&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>gamedev</category>
      <category>architecture</category>
      <category>serverless</category>
    </item>
  </channel>
</rss>
