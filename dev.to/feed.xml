<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>What are Module Bundlers ? How to configure Webpack ?</title>
      <author>Sumanth</author>
      <pubDate>Wed, 16 Jun 2021 17:41:58 +0000</pubDate>
      <link>https://dev.to/movingmelody/what-are-module-bundlers-how-to-configure-webpack-75h</link>
      <guid>https://dev.to/movingmelody/what-are-module-bundlers-how-to-configure-webpack-75h</guid>
      <description>&lt;h4&gt;
  &lt;a href="#what-are-module-bundlers-how-we-can-take-advantage-of-them-to-build-large-scale-applications"&gt;
  &lt;/a&gt;
  What are Module Bundlers ? How we can take advantage of them to build large scale applications.
&lt;/h4&gt;

&lt;p&gt;Hey! üê±&lt;br&gt;
First let's understand when Module Bundlers can be used. &lt;br&gt;
Def :- Module Bundlers can be used to bundle our JavaScript files, images, styles, and fonts together into single folder.&lt;/p&gt;

&lt;p&gt;üåº &lt;br&gt;
When we are getting started with Web Development we use these basic 3 things : HTML, CSS, JS. But when we dive into it we might replace JS with TypeScript, HTML with React Library, CSS with Sass.&lt;br&gt;
In addition to the above things we might also inject things like firebase, npm packages, D3 Js etc. Many of the injected dependencies might use common &lt;code&gt;Js&lt;/code&gt; which isn't going to work with modern &lt;code&gt;es&lt;/code&gt; syntax. We might get errors like - &lt;code&gt;Uncaught ReferenceError : require is not defined&lt;/code&gt;. And even if we manage the things to get it work we might end up with a massive JS file which then needs to be minified and broken into smaller files to reduce the load time.&lt;/p&gt;

&lt;p&gt;So to solve all the above problems &lt;strong&gt;module bundlers&lt;/strong&gt; like webpack, parcel, rollup, snowpack etc., came into existence to make the process easy and error free.&lt;br&gt;
Okay, now we know why these are introduced but the basic thing they do is taking multiple JS files and combine them into a single large file. which can be used later to load our app in browser. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Okay enough theory!&lt;/strong&gt; Let's üõ†Ô∏è configure Webpack from scratch and write some code (&amp;gt;‚Äø‚ó†)‚úå&lt;/p&gt;

&lt;p&gt;üåª Follow the below steps to configure Webpack.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#1-create-an-entry-javascript-file"&gt;
  &lt;/a&gt;
  1. Create an entry Javascript file
&lt;/h4&gt;

&lt;p&gt;Create index.js in the &lt;code&gt;src&lt;/code&gt; folder. This &lt;code&gt;src/index.js&lt;/code&gt; will be the entry file because everything starts from here.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// src/index.js&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;lets use lodash package to convert this plain text to kebab-case text&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now create  &lt;code&gt;public/index.html&lt;/code&gt; file and import the &lt;code&gt;index.js&lt;/code&gt; file in it.&lt;br&gt;
Folder structure üëáüèª&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2iPVf7kO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/id2tcizuf5huinsxewxv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2iPVf7kO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/id2tcizuf5huinsxewxv.png" alt="folder structure"&gt;&lt;/a&gt;&lt;br&gt;
&lt;code&gt;index.html&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="c"&gt;&amp;lt;!-- public/index.html --&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"UTF-8"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Configure Webpack&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"../src/index.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;and some text here&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Open the html file and you should see the output like :&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NGcTWgO9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t3nd5nvigi5kgzfn9zs3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NGcTWgO9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t3nd5nvigi5kgzfn9zs3.png" alt="console output"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#2-install-raw-lodash-endraw-npm-package"&gt;
  &lt;/a&gt;
  2. Install &lt;code&gt;lodash&lt;/code&gt; npm package
&lt;/h4&gt;

&lt;p&gt;Before installing the &lt;code&gt;lodash&lt;/code&gt; package let's first create &lt;code&gt;package.json&lt;/code&gt; file in the project folder using the command &lt;code&gt;npm init -y&lt;/code&gt;.&lt;br&gt;
üåª&lt;br&gt;
Now, Install &lt;code&gt;lodash&lt;/code&gt; using the following command &lt;code&gt;npm i lodash&lt;/code&gt;.&lt;br&gt;
So now try to import any dependency from lodash. Let's import &lt;code&gt;kebabCase&lt;/code&gt; to convert the normal string into kebabCase.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// src/index.js&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;kebabCase&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;lodash&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="nx"&gt;kebabCase&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;lets use lodash package to convert this plain text to kebab-case text&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When you hit the refresh button in the browser you should see the below error.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f_dPM8EW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/417wrggmfu034zbuxgeq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f_dPM8EW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/417wrggmfu034zbuxgeq.png" alt="module import error"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#3-installing-amp-configuring-basic-raw-webpack-endraw-"&gt;
  &lt;/a&gt;
  3. Installing &amp;amp; Configuring Basic &lt;code&gt;webpack&lt;/code&gt;
&lt;/h4&gt;

&lt;p&gt;So to solve the above error we need to use bundlers like webpack, Parcel. Let's see how we can use webpack to clear the above error. Install it using the command &lt;br&gt;
&lt;code&gt;npm install --save-dev webpack webpack-cli&lt;/code&gt;.&lt;br&gt;
After install webpack lets change the build command in the &lt;code&gt;package.json&lt;/code&gt; file. Build command simply calls the &lt;code&gt;webpack&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="nb"&gt;.&lt;/span&gt;
&lt;span class="nb"&gt;.&lt;/span&gt;
&lt;span class="nb"&gt;.&lt;/span&gt;
 &lt;span class="s2"&gt;"scripts"&lt;/span&gt;: &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;"build"&lt;/span&gt;: &lt;span class="s2"&gt;"webpack"&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;,
&lt;span class="nb"&gt;.&lt;/span&gt;
&lt;span class="nb"&gt;.&lt;/span&gt;
&lt;span class="nb"&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;üôåüèª Now let's run the build command &lt;code&gt;npm run build&lt;/code&gt; from the command line. It will analyze the index.js code and then it will compile it to &lt;code&gt;dist/main.js&lt;/code&gt; file. So to use that main.js file we need to change the script tag in html file to &lt;code&gt;&amp;lt;script src="../dist/main.js"&amp;gt;&amp;lt;/script&amp;gt;&lt;/code&gt;.&lt;br&gt;
Now the error in the browser should be gone and the console output should be look like this.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DvRM-iH4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fs7x218tabdpctecspyu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DvRM-iH4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fs7x218tabdpctecspyu.png" alt="error free console output"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#and-thats-it-we-just-completed-configuring-basic-webpack"&gt;
  &lt;/a&gt;
  üéâ And that's it we just completed configuring basic Webpack.
&lt;/h4&gt;
&lt;h4&gt;
  &lt;a href="#4-customize-the-webpack-config"&gt;
  &lt;/a&gt;
  4. Customize the Webpack Config
&lt;/h4&gt;

&lt;p&gt;Till now we are using the default Webpack config. Default config will look for src/index.js file by default. So if the name of the file is other than index.js things will not work. &lt;br&gt;
So to craft our own configuration we need a file. Create &lt;code&gt;webpack.config.js&lt;/code&gt; file in the root directory. Then you can start customizing the behavior of Webpack.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;path&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// define your entry point here&lt;/span&gt;
  &lt;span class="na"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./src/index.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;output&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;otherThanMain.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dist&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now run the build command again and &lt;code&gt;otherThanMain.js&lt;/code&gt; will be created inside the dist folder. Because we changed the output file name in the config file.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#5-adding-sass-loader"&gt;
  &lt;/a&gt;
  5. Adding Sass loader
&lt;/h4&gt;

&lt;p&gt;But when building the big projects we might also use the &lt;code&gt;Sass&lt;/code&gt;. So create &lt;code&gt;style.scss&lt;/code&gt; file inside the src folder and write some sass code and then import it insider the index.js file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./style.scss&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;kebabCase&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;lodash&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;kebabCase&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;lets use lodash package to convert this plain text to kebab-case text&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Since we are importing the sass file inside our js file things will not work. So to make the things work we need to install &lt;em&gt;SASS Loader&lt;/em&gt;*. Loaders can be used to process the files that aren't Javascript.&lt;/p&gt;

&lt;p&gt;Run the command &lt;code&gt;npm i --save-dev css-loader style-loader sass-loader&lt;/code&gt;. Right after installing them modify the webpack config file like this :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;path&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./src/index.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;output&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;awesome.js&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dist&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;module&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;rules&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;test&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;\.&lt;/span&gt;&lt;span class="sr"&gt;s&lt;/span&gt;&lt;span class="se"&gt;[&lt;/span&gt;&lt;span class="sr"&gt;ac&lt;/span&gt;&lt;span class="se"&gt;]&lt;/span&gt;&lt;span class="sr"&gt;ss$/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;use&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
          &lt;span class="c1"&gt;// Creates `style` nodes from JS strings&lt;/span&gt;
          &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;style-loader&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="c1"&gt;// Translates CSS into CommonJS&lt;/span&gt;
          &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;css-loader&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="c1"&gt;// Compiles Sass to CSS&lt;/span&gt;
          &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;sass-loader&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;],&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now run the build command again and everything will be alright. Learn more about module bundlers and webpack &lt;a href="https://webpack.js.org"&gt;here&lt;/a&gt;.&lt;br&gt;
Tutorial video &lt;a href="https://www.youtube.com/watch?v=5IG4UmULyoA"&gt;ref&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webpack</category>
      <category>webdev</category>
      <category>react</category>
    </item>
    <item>
      <title>Mudar de Carreira (ou emprego): Como decidir?</title>
      <author>Simone Pedrosa</author>
      <pubDate>Wed, 16 Jun 2021 17:01:32 +0000</pubDate>
      <link>https://dev.to/simonepedrosa/mudar-de-carreira-ou-emprego-como-decidir-2oag</link>
      <guid>https://dev.to/simonepedrosa/mudar-de-carreira-ou-emprego-como-decidir-2oag</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IIeQvGzf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hg1os5rpzjbs8u20jypy.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IIeQvGzf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hg1os5rpzjbs8u20jypy.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Se voc√™ chegou nesse post, imagino que √© porque isso j√° vem martelando na sua cabe√ßa h√° algum tempo mas voc√™ est√° sentindo alguma dificuldade nesse processo. Muita coisa passa pela cabe√ßa e o velho conselho: ‚ÄúSaia da sua zona de conforto!‚Äù chega a dar um arrepio na espinha. &lt;em&gt;&lt;strong&gt;Mas tudo bem, mudan√ßas nem sempre s√£o f√°ceis e na maioria das vezes levam tempo para acontecer.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Eu j√° estive nessa posi√ß√£o mais de uma vez e, ainda assim, por muito tempo me vi paralizada na tomada de decis√µes importantes, quase que esperando por um sinal do universo para seguir por um caminho ou outro. üõ§&lt;/p&gt;

&lt;p&gt;A verdade √© que ficamos acomodados dentro da nossa viv√™ncia e por mais que a gente n√£o esteja muito feliz ainda &lt;em&gt;‚Äú√© mais f√°cil permanecer no mesmo lugar‚Äù&lt;/em&gt; afinal, a gente j√° sabe como tudo funciona e o que precisa ser feito.&lt;/p&gt;

&lt;p&gt;At√© que certo dia, vendo um v√≠deo no youtube, uma conversa me chamou bastante aten√ß√£o e eu entendi que:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;A vida √© feita de escolhas e ningu√©m al√©m de voc√™ pode tomar a decis√£o de sair de onde voc√™ est√°.&lt;/strong&gt; Nesse dia, entendi que N√ÉO escolher tamb√©m √© uma escolha e isso ir√° gerar uma consequ√™ncia: O fato de permanecer no mesmo lugar.&lt;/em&gt; ‚ùå&lt;/p&gt;

&lt;p&gt;A partir dai eu resolvi que n√£o queria ficar no mesmo lugar e procurei uma estrat√©gia para escolher com mais precis√£o. Pra isso eu precisava colocar os p√©s no ch√£o e entender onde cada caminho poderia me levar e pra isso eu usei algumas dicas que me ajudaram a fazer com que essa escolha fizesse mais sentido e s√£o as que eu vou compartilhar aqui hoje. Ent√£o vamos l√°!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&amp;gt;&amp;gt; Passo 01: Coloque no papel todas as possibilidades que voc√™ tem agora&lt;/strong&gt; ‚úÖ&lt;br&gt;
Pense no que voc√™ faz, voc√™ gosta de fazer isso? √â poss√≠vel continuar trabalhando com isso nesse momento? &lt;strong&gt;SE SIM&lt;/strong&gt;, quais a op√ß√µes de cargos e/ou empresas em que voc√™ poderia se encaixar?&lt;/p&gt;

&lt;p&gt;Analise o que voc√™ tem a disposi√ß√£o e o que voc√™ pode fazer para realizar essa mudan√ßa, mesmo ainda estando nesse ambiente.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SE N√ÉO&lt;/strong&gt;, pense nas coisas que voc√™ √© bom! Anote o que voc√™ poderia ou gostaria de fazer no seu futuro pr√≥ximo e como isso poderia ser realizado, mesmo que a longo prazo. Fa√ßa uma pesquisa de mercado, h√° algo em que voc√™ pode se encaixar?&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Exemplo: Hoje, sou advogada, mas gostaria de mudar de carreira para algo que me porporcionasse realiza√ß√£o profissional e que aumentasse minha renda nos pr√≥ximos anos. Tenho pensado em algo relacionado a √°rea de Tecnologia da Informa√ß√£o, pois √© uma √°rea em constante expans√£o.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&amp;gt;&amp;gt; Passo 02: Crie uma linha do tempo&lt;/strong&gt; ‚úÖ&lt;br&gt;
A partir do que voc√™ pensou no Passo 01, coloque suas ideias no papel! Projete as possibilidades escolhidas a m√©dio e longo prazo. Tente imaginar tudo com a maior quantidade de detalhes que voc√™ tiver, alinhando com o tempo que voc√™ tem e o que voc√™ pode fazer nos pr√≥ximos meses/anos.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Exemplo: Ainda atuo em alguns processos como advogada, posso esperar terminar todos eles e fazer uma faculdade, mas isso ir√° adiar meus planos um pouco mais. Ou posso utilizar meu tempo livre para estudar paralelamente e j√° ir me qualificando o que poderia acelerar minha transi√ß√£o de carreira. Posso investir meu tempo em cursos gratuitos, at√© decidir o que quero de verdade e investir em um curso t√©cnico pago. Ou Posso n√£o fazer nada e pensar sobre isso daqui alguns meses.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;- Lembre que todas as alternativas, at√© mesmo a de n√£o fazer nada, geram uma consequencia. Como voc√™ encara cada uma delas e qual faz mais sentido pra voc√™ agora?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&amp;gt;&amp;gt; Passo 03: O que eu posso fazer a partir de hoje, com as ideias que eu tenho em mente?&lt;/strong&gt; ‚úÖ&lt;br&gt;
Depois que voc√™ colocou tudo no papel, escolha a op√ß√£o que faz mais sentido pra voc√™ e coloque em pr√°tica! Iniciar pesquisas na √°rea, tra√ßar um plano de estudos semanal, colocar metas para atividades que voc√™ precisa fazer, se matricule em um curso, converse com pessoas da √°rea, enfim, come√ße a colocar as coisas em pr√°tica!&lt;/p&gt;

&lt;p&gt;A partir da√≠ √© com voc√™. &lt;strong&gt;TESTE! Voc√™ s√≥ saber√° o que voc√™ gosta ou n√£o gosta TESTANDO!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Entenda, n√£o h√° nada de errado em come√ßar um curso, depois trancar e iniciar outro. Entrar num est√°gio em uma empresa e no ano seguinte partir pra outra oportunidade. Este √© o momento de voc√™ conhecer o mercado e entender o que funciona pra voc√™.&lt;/p&gt;

&lt;p&gt;√â claro que voc√™ nao vai virar uma bola de &lt;em&gt;pingue-pongue&lt;/em&gt; e ficar pulando de lugar em lugar, mas tamb√©m n√£o h√° nada de errado em conhecer o ambiente. Quando a gente n√£o tem refer√™ncia sobre uma √°rea essa √© a melhor maneira de se inserir, conhecer pessoas e criar la√ßos.&lt;/p&gt;

&lt;p&gt;Por fim, &lt;strong&gt;entre em comunidades e converse com pessoas da sua nova carreira/√°rea.&lt;/strong&gt; Mesmo nos cen√°rios mais improv√°veis pessoas com os mesmos objetivos se ajudam e se motivam entre si e nesse momento, √© isso que voc√™ precisa. Ver outras pessoas trilhando o mesmo caminho para quando o medo bater voc√™ tenha com quem conversar e em quem se inspirar.&lt;/p&gt;

&lt;p&gt;Nada √© f√°cil e n√£o h√° uma f√≥rmula m√°gica. Mas isso n√£o quer dizer que voc√™ n√£o possa utilizar estrat√©gias que tornem esse caminho mais agrad√°vel. E eu realmente espero que a partir dessa leitura e da aplica√ß√£o das t√©cnicas ‚Äî &lt;em&gt;colocar no papel e visualizar as possibilidades faz toda diferen√ßa!&lt;/em&gt; ‚Äî voc√™ se sinta mais confort√°vel para encarar esse algo novo.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Parafraseando Fernando Teixeira de Andrade:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;‚ÄúH√° um tempo em que √© preciso abandonar as roupas usadas, que j√° tem a forma do nosso corpo, e esquecer os nossos caminhos, que nos levam sempre aos mesmos lugares. √â o tempo da travessia: e, se n√£o ousarmos faz√™-la, teremos ficado, para sempre, √† margem de n√≥s mesmos.‚Äù&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Se esse artigo foi √∫til pra voc√™ ou se voc√™ se lembrou de algu√©m que est√° passando por isso, envia pra ele! Todo mundo sai ganhando quando a gente compartilha o conhecimento. &lt;strong&gt;Fa√ßa diferen√ßa na vida de algu√©m!&lt;/strong&gt; üôÇ&lt;/p&gt;

&lt;p&gt;Leia mais sobre Transi√ß√£o de Carreira &lt;a href="https://dev.to/simonepedrosa/o-mito-da-transicao-de-carreira-4n9"&gt;aqui!&lt;/a&gt;&lt;/p&gt;

</description>
      <category>career</category>
      <category>carreira</category>
    </item>
    <item>
      <title>CodeLand 2021: Motivation &amp; Career-Long Connections For Early-Career Devs </title>
      <author>Ben Halpern</author>
      <pubDate>Wed, 16 Jun 2021 16:56:21 +0000</pubDate>
      <link>https://dev.to/devteam/codeland-2021-motivation-career-long-connections-for-early-career-devs-2loa</link>
      <guid>https://dev.to/devteam/codeland-2021-motivation-career-long-connections-for-early-career-devs-2loa</guid>
      <description>&lt;p&gt;CodeLand is coming back in 2021 as a two-day virtual conference on September 23rd and 24th!&lt;/p&gt;

&lt;p&gt;While nothing needs to entirely replace face-to-face conferences, we received such amazing feedback from the global community about how accessible last year‚Äôs event was. We want to double down on what made it great and improve on what needs improvement. With a lot of uncertainty remaining in 2021, you can mark this date on your calendar with confidence.&lt;/p&gt;

&lt;p&gt;This will be a two-day event (as opposed to one &lt;strong&gt;very long&lt;/strong&gt; day of talks last year) where the focus will be maximum positive impact for early career developers. When we talk about impact, we mean memorable moments and also memorable people. Look for opportunities to make lasting online connections and make this the most important two days of the year for your career progress as a developer.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;CodeLand will take place on &lt;a href="https://community.codenewbie.org"&gt;the CodeNewbie Forem&lt;/a&gt; this year. There will be additional registration information to follow, but the first step is to join this community if you have not already.&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#codeland-2021-details"&gt;
  &lt;/a&gt;
  CodeLand 2021 Details
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Location:&lt;/strong&gt; Virtual-only, on &lt;a href="https://community.codenewbie.org"&gt;CodeNewbie Community&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Dates:&lt;/strong&gt; Thu, Sept 23 and Fri, Sept 24&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Times:&lt;/strong&gt; Six hours per day ‚Äì 4-10 PM UTC&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Format:&lt;/strong&gt; A mix of live keynotes, pre-recorded talks, and live speaker panels on both days. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Cost:&lt;/strong&gt; Free access to all keynotes, talks, and panels.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Registration:&lt;/strong&gt; Coming soon!&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;CFP:&lt;/strong&gt; Opens June 22&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This year's event will feature more community participation and representation on the program ‚Äî with more surprises to come. üéâ &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#next-steps"&gt;
  &lt;/a&gt;
  Next Steps
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Join &lt;a href="https://community.codenewbie.org"&gt;The CodeNewbie Forem&lt;/a&gt; and watch out for official conference registration&lt;/li&gt;
&lt;li&gt;Download the &lt;a href="https://dev.to/devteam/forem-for-ios-is-here-4g3f"&gt;Forem iOS app on the App Store&lt;/a&gt; if you have not already. We plan to make the best possible use of our open source technology‚Äî So get acquainted. &lt;em&gt;Android app is in the works.&lt;/em&gt;‚ú®&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://eepurl.com/hBb5pv"&gt;Sign up&lt;/a&gt; for the ‚ÄúCodeLand 2021 Updates‚Äù email list for one more way to ensure you don‚Äôt miss any announcements.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#for-even-more-details-on-codeland-please-visit-this-post-from-saronyitbarek-on-codenewbie-community-and-the-codeland-2021-website"&gt;
  &lt;/a&gt;
  For even more details on CodeLand, please visit &lt;a href="https://community.codenewbie.org/codenewbie/codeland-is-coming-sept-23-24-2021-238p"&gt;this post&lt;/a&gt; from &lt;a class="mentioned-user" href="https://dev.to/saronyitbarek"&gt;@saronyitbarek&lt;/a&gt;
 on CodeNewbie Community and the &lt;a href="https://codelandconf.com"&gt;CodeLand 2021 website&lt;/a&gt;.
&lt;/h2&gt;

</description>
      <category>codeland</category>
      <category>codenewbie</category>
      <category>beginners</category>
      <category>meta</category>
    </item>
    <item>
      <title>FrontEnd Development Road Map</title>
      <author>shobika</author>
      <pubDate>Wed, 16 Jun 2021 16:55:41 +0000</pubDate>
      <link>https://dev.to/shobilav/frontend-development-road-map-1ao2</link>
      <guid>https://dev.to/shobilav/frontend-development-road-map-1ao2</guid>
      <description>&lt;p&gt;Hey guys!!! Hope everyone are safe and coding. Will take you to the frontend development journey. Let's grow togetherü§ó&lt;br&gt;
Will be posting the detailed ideas on each topic one by one every week....hope you will love the contentüòç Keep reading...&lt;/p&gt;

&lt;p&gt;Internet&lt;br&gt;
HTML&lt;br&gt;
CSS&lt;br&gt;
JavaScript&lt;br&gt;
Version control Systems&lt;br&gt;
Web Security&lt;br&gt;
Package Manager&lt;br&gt;
CSS Architecture&lt;br&gt;
CSS Preprocessors&lt;br&gt;
Build Tools&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Task Runner&lt;/li&gt;
&lt;li&gt;Linters and formatters&lt;/li&gt;
&lt;li&gt;Module bundlers&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Front End Frameworks&lt;br&gt;
Web components&lt;br&gt;
Modern CSS &lt;br&gt;
CSS Frameworks&lt;br&gt;
Testing the apps&lt;br&gt;
Progressive Web Apps&lt;br&gt;
Server Side Rendering&lt;br&gt;
GraphQL&lt;br&gt;
Static Site Generator&lt;br&gt;
Web assembly&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>webmonetization</category>
      <category>javascript</category>
      <category>react</category>
    </item>
    <item>
      <title>How to Install Most Interactive Shell On A Linux Machine</title>
      <author>Nirupamvas</author>
      <pubDate>Wed, 16 Jun 2021 16:34:47 +0000</pubDate>
      <link>https://dev.to/nirupamvas/how-to-install-most-interactive-shell-on-a-linux-machine-36ko</link>
      <guid>https://dev.to/nirupamvas/how-to-install-most-interactive-shell-on-a-linux-machine-36ko</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1LGfAKnp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t4964vu4e57xwyer2xet.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1LGfAKnp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t4964vu4e57xwyer2xet.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hello Guys, I am Nirupamvas and I am back again with an other awesome Linux tutorial. So let's get started.&lt;/p&gt;

&lt;p&gt;Before getting into it, let's understand some of the things &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-shell"&gt;
  &lt;/a&gt;
  What Is Shell??
&lt;/h3&gt;

&lt;p&gt;A shell is an interface to the underlying operating system. It allows you to execute operations using text and commands, and it provides users with advanced features like being able to create scripts.&lt;br&gt;
Unix Shell is a powerful tool that allows programmers to accomplish complex tasks with just a few words. There are a lot of widely available Shells such as Bourne Shell, C Shell, etc.&lt;/p&gt;

&lt;p&gt;So, everytime you want to execute a command you need to type entire command, I think this is one messy thing we need to do each and every time. To boost productivity and to save time for our lazy squad we have something called Fish. So let's see what is it all about.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#what-is-fish"&gt;
  &lt;/a&gt;
  What is FISH?
&lt;/h3&gt;

&lt;p&gt;Fish, or the ‚ÄúFriendly Interactive Shell,‚Äù is the most user-friendly and interactive shell, in my opinion.&lt;br&gt;
It is much more customizable than Zsh and Bash. It has a ton of cool features like consistent syntax, nice tab completion and syntax highlighting, is easy to pick up and use, and has excellent runtime help.&lt;br&gt;
You can change the theme and color of your shell just by using a framework called Oh My Fish. Unlike the aforementioned shells, fish is not POSIX compliant, but it also doesn‚Äôt intend to be.&lt;br&gt;
You can run Bash scripts in both Zsh and fish by adding the following shebang line to the first line of your Bash file.&lt;/p&gt;

&lt;p&gt;Let's start our installation,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Step 1 : Download Fish&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo apt-get install fish
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Step 2 : Entering into Fish&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can now enter the Fish shell simply by typing&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;fish
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;step 3 : Setting Fish as your default shell&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can set Fish as your default shell instead of Bash:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;chsh -s /usr/bin/fish
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This way, Fish will be used automatically every time you log in. Test this setting by exiting SSH, then logging back in. Upon logging in, you will be presented with a Fish shell.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Step 4: Creating a config file&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In order to be able to change the properties of the Fish shell, we first need to create a config file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;mkdir -p ~/.config/fish
vim ~/.config/fish/config.fish
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Step 5: Removing the default message&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;By default, Fish will show this message when you enter the shell:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Welcome to fish, the friendly interactive shell
Type help for instructions on how to use fish
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can remove this message by adding the following to the ~/.config/fish/config.fish file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;set -g -x fish_greeting ''
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It will pop up either vim or nano, in any case type 'I' and start editing and to save type&lt;br&gt;
&lt;code&gt;ESC then :wq then Hit enter&lt;/code&gt;&lt;br&gt;
This will remove the message and rather set it to a blank value. You can add something such as "Welcome to Terminal!" by entering a value instead of leaving it blank:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;set -g -x fish_greeting 'Welcome to Terminal!'
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you do not like in any case what you do is, simply uninstall, so how to do that, see below.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Step 6: Switching back to Bash&lt;/strong&gt;
If you would like to use Bash again, simply type:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;bash
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you want to permanently use Bash as your default shell, type:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;chsh -s /bin/bash
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;BONUS&lt;br&gt;
 This will not only work on Virtual machines or Fully installed linux but also in Windows Subsystem for Linux.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;That's it, now you are good to go!! Hope you enjoy üòé.&lt;/p&gt;

</description>
      <category>ubuntu</category>
      <category>linux</category>
    </item>
    <item>
      <title>16 Beautiful Color Palettes üé® for Your Projects üë®‚Äçüé®</title>
      <author>Roden</author>
      <pubDate>Wed, 16 Jun 2021 16:32:13 +0000</pubDate>
      <link>https://dev.to/kerthin/16-beautiful-color-palettes-for-your-projects-a72</link>
      <guid>https://dev.to/kerthin/16-beautiful-color-palettes-for-your-projects-a72</guid>
      <description>&lt;h1&gt;Introduction&lt;/h1&gt;

&lt;p&gt;When developing websites, the first question for developers is about creating a design. But due to their inexperience, many novice developers who do not even know the simple rules of &lt;code&gt;coloristics&lt;/code&gt;, begin to use in their works absolutely any colors that they just liked. At the same time, without paying absolutely no attention to whether these colors are combined at all or not. And as a result, a good project can be ruined due to the lack of minimal taste in the developer, who simply went too far with the color scheme.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cze44DI_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0ya1otwlqa8dtl8lprti.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cze44DI_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0ya1otwlqa8dtl8lprti.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I was the same myself, until eventually I gained a little experience in selecting colors for projects. I also decided to make a list of my favorite palettes, which I often use when developing my projects. Of course, I understand that not everyone can like them, &lt;code&gt;but there are no friends for the taste and color.&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Different strokes for different folks.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;CodePen&lt;/h1&gt;

&lt;p&gt;I decided to put my palettes on Codepen to make it easier for you to use them.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m9pR3_lZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/49dz7ihstsso9ev2pmtp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m9pR3_lZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/49dz7ihstsso9ev2pmtp.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;iframe height="600" src="https://codepen.io/Astap/embed/abJXNVj?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;The End&lt;/h1&gt;

&lt;p&gt;Friends, thank you for your time. See you in the future. And don't forget to color your projects beautifully.&lt;br&gt;
&lt;a href="https://i.giphy.com/media/26ufjTvmGrdtrCqJi/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/26ufjTvmGrdtrCqJi/giphy.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>codepen</category>
      <category>css</category>
      <category>ux</category>
    </item>
    <item>
      <title>Styled components cheat sheet</title>
      <author>Keerthi</author>
      <pubDate>Wed, 16 Jun 2021 16:17:59 +0000</pubDate>
      <link>https://dev.to/keefdrive/styled-components-cheat-sheet-58nd</link>
      <guid>https://dev.to/keefdrive/styled-components-cheat-sheet-58nd</guid>
      <description>&lt;p&gt;The use of Styled components in React.js app development has become quiet popular in the last few years, its popularity is mainly due to the fact that it provides a better developer experience when it comes to writing styles for your app. Traditionally you would have one long css style sheet with all your styling centralized in one place. The  problems that you commonly face are CSS name clashes and styling problems due to specificity issues. As well as styled components, many other solutions address these problems particularly BEM, sass, CSS modules, and they all have their pros and cons. This article is not going to discuss which is best to use but rather provide a cheat sheet for styled components. There's also a video that I made on this as well.&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/A35oMQCAtBI"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;4 things that makes me want to use styled components in the future are:&lt;/p&gt;

&lt;p&gt;1] Scope level styles, ie component and styles are grouped together, so you dont have to do much searching around finding the style that is breaking your UI.&lt;br&gt;
2] Use of variables and ability to inject props into your components. Yes its dynamic and can use programming logic!&lt;br&gt;
3] No need to waste time thinking up unique class names.&lt;br&gt;
4} Easy to learn.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#lets-dive-in-and-look-at-your-first-styled-component"&gt;
  &lt;/a&gt;
  Lets dive in and look at your first styled component
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--s2vCzSrp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sb5lpagl2wa273f2snvp.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s2vCzSrp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sb5lpagl2wa273f2snvp.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see from the three steps shown above, its quiet easy. You might find the declaration a bit odd because we are calling the styled component function with back ticks.&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;const Button = styled.button`color:red;`&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;but this is really same as making a normal function call and passing an array:&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;const Button = styled.button([`color:red;`])&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;Calling function without the brackets and putting your arguments between back ticks is called tagged template literals, this is a Javascript feature. When tagged template literals are interpreted, there will always be one argument that will be of type array.&lt;/p&gt;

&lt;p&gt;To see some examples and &lt;a href="https://wesbos.com/tagged-template-literals"&gt;read more about tagged template literals, go to Wes Bos article&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;From Wes Bos's article you learn that you can inject variables into tagged template literals. So in styled components you can do the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;primary_color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;red&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Button&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt;&lt;span class="s2"&gt;`color:&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;primary_color&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;;`&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is what gives styled components super powers and you can do all sorts of tricks with it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#heres-a-cheat-sheet-to-get-you-started"&gt;
  &lt;/a&gt;
  Heres a cheat sheet to get you started
&lt;/h2&gt;

&lt;p&gt;Here are some code snippets that will help you get started and make the most of styled components. The code examples in this cheat sheet assumes you have created a basic app using npx create create-react-app.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#1-install"&gt;
  &lt;/a&gt;
  1] install
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install styled-components
yarn add styled-components
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#2-import-into-your-scripts"&gt;
  &lt;/a&gt;
  2] Import into your scripts
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// then, just import it into your script like:&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;styled-components&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#3-basic-styling-of-elements-ie-h1h2divinputspan-etc"&gt;
  &lt;/a&gt;
  3] Basic styling of elements ie h1,h2,div,input,span etc
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;//Declare wrapper for a h2 element with styling like this&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Headline&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;h2&lt;/span&gt;&lt;span class="s2"&gt;`
  color: black;
  border-bottom:1px solid black;
`&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;//Use Headline wrapper component in your app &lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Headline&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      The Headline goes here
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Headline&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There are methods for all html elements so you can style a &lt;code&gt;&amp;lt;diV&amp;gt;&lt;/code&gt; by using &lt;code&gt;styled.div&lt;/code&gt; , or style &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; by using &lt;code&gt;styled.input&lt;/code&gt; &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#2-include-pseudoclasses-like-hover-focus-active-etc-by-prefixing-a-amp-like-raw-amphover-endraw-"&gt;
  &lt;/a&gt;
  2 Include Pseudo-classes like :hover, :focus, :active etc, by pre-fixing a '&amp;amp;'. Like &lt;code&gt;&amp;amp;:hover {.....}&lt;/code&gt;
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Button&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt;&lt;span class="s2"&gt;`
        width:100px;
        color:white;
        background-color: green;

        //Add hover styling
        &amp;amp;:hover {
            background-color:gray;
        }

    };`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#3-include-media-queries"&gt;
  &lt;/a&gt;
  3] Include media queries.
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Wrapper&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="s2"&gt;`
    width:50vw;

    //Make it full width on smaller screens 
    @media screen and (max-width: 800px) { //Make full length on smaller screens
        background-color: lightgray;
        width:100vw;

    }
    `&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#4-extending-styles-you-can-use-a-base-style-then-extend-that-with-new-style-rules"&gt;
  &lt;/a&gt;
  4] Extending styles - You can use a base style, then extend that with new style rules
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Base style for heading &lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Headline&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="s2"&gt;`
  border-bottom:2px solid gray;
  color: blue;
`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;//Extend base style to overide color&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;HeadlineGreen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Headline&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;`
  color: green;
`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&amp;gt;&lt;/span&gt;

      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Headline&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        Standard Blue headline
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Headline&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;HeadlineGreen&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        Extended green headline 
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;HeadlineGreen&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#5-you-can-still-use-classes-and-write-styles-for-selectors-like-normal-css-styling"&gt;
  &lt;/a&gt;
  5] You can still use classes and write styles for selectors like normal css styling
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;
&lt;span class="c1"&gt;//Style everything inside the wrapper with css selectors&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Wrapper&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="s2"&gt;`
  width:100%;

  .big-heading {
      border-bottom:2px solid blue;
      color: blue;
  }
  button.primary {
    width:100px;
    height:50px;
    background-color:green;
    color:white;
  }
`&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Wrapper&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;      
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h2&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'big-heading'&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        Standard Blue headline
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h2&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'primary'&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        A plain Button
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Wrapper&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#6-you-can-pass-props-to-your-styled-component"&gt;
  &lt;/a&gt;
  6] You can pass props to your styled component
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Headline&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="s2"&gt;`
  color: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;;
`&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
      &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="cm"&gt;/* We are passing color as a prop, we also set its value to pink*/&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Headline&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"pink"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        Standard Blue headline
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;Headline&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above code we are setting the color of Headline dynamically, depending on what is passed as props for the color attribute. You can access props by writing a fragment of code like: &lt;code&gt;${props =&amp;gt; props.color}&lt;/code&gt; and in the JSX we set it like &lt;code&gt;&amp;lt;Headline color="pink"&amp;gt;.....&amp;lt;/Headline&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#7-how-to-apply-global-styles-that-target-raw-ltbodygt-endraw-and-raw-lthtmlgt-endraw-or-where-to-put-your-reset-styles"&gt;
  &lt;/a&gt;
  7] How to apply global styles that target &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; or  where to put your reset styles.
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt;&lt;span class="p"&gt;,{&lt;/span&gt;&lt;span class="nx"&gt;createGlobalStyle&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;styled-components&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// Remember to import createGlobalStyle as above&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;GlobalStyle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createGlobalStyle&lt;/span&gt;&lt;span class="s2"&gt;`
    * {
        margin: 0;
        padding: 0;
    }

    body {
        background: teal;
        font-family: Open-Sans, Helvetica, Sans-Serif;
    }
`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="cm"&gt;/*Place the GlobalStyle tag at the very top of your app component tree.*}
      &amp;lt;GlobalStyle /&amp;gt;
      &amp;lt;h1&amp;gt;
        This is a landing page
      &amp;lt;/h1&amp;gt;
    &amp;lt;/&amp;gt;
  );
}
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Remember to import createGlobalStyle from styled-components like this:&lt;code&gt;import styled,{createGlobalStyle} from 'styled-components';&lt;/code&gt;. You can place &lt;/p&gt;

</description>
      <category>css</category>
      <category>webdev</category>
      <category>react</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Best alternative for solar movies </title>
      <author>Inlarn_DotCom</author>
      <pubDate>Wed, 16 Jun 2021 15:59:54 +0000</pubDate>
      <link>https://dev.to/inlarn/best-alternative-for-solar-movies-451h</link>
      <guid>https://dev.to/inlarn/best-alternative-for-solar-movies-451h</guid>
      <description>&lt;p&gt;&lt;a href="https://inlarn.com/putlocker-similar-websites-to-watch-high-quality-hd-movies-for-free/"&gt;https://inlarn.com/putlocker-similar-websites-to-watch-high-quality-hd-movies-for-free/&lt;/a&gt; click here&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Top 3 Influencers that fight climate change</title>
      <author>WyattRoberts14</author>
      <pubDate>Wed, 16 Jun 2021 15:58:56 +0000</pubDate>
      <link>https://dev.to/wyattroberts5/top-3-influencers-that-fight-climate-change-2mg0</link>
      <guid>https://dev.to/wyattroberts5/top-3-influencers-that-fight-climate-change-2mg0</guid>
      <description>&lt;p&gt;The world‚Äôs biggest issues can cause a lot of sleepless nights, if only we begin to think about the things that are wrong, like poverty, world hunger, disease, global wars, climate change, and many others. &lt;/p&gt;

&lt;p&gt;Today we are going to talk about climate change. Some people believe in it, some people don‚Äôt for some reason, but you can‚Äôt deny the changes that are happening in our ecosystem. We might only live to see a little bit of the changes, but one thing is for sure, our children and grandchildren will suffer the consequences. &lt;/p&gt;

&lt;p&gt;Nowadays, more things are being said than done about this issue, we are seeing some people actively fighting to stop the pollution from the world‚Äôs biggest countries, and there might be some progress but definitely not enough. We are still seeing the Amazon forest getting caught down, factories still operating in full capacity with no filters, the north pole still continuing to melt‚Ä¶&lt;/p&gt;

&lt;p&gt;Well, some people had had enough, and are taking these matters into their hands. In today‚Äôs world where people can more easily influence the masses, some influencers, and activists who have a wide audience decided to act and help with the issue of climate change.&lt;/p&gt;

&lt;p&gt;We are going to talk about the Top Three influencers that dedicated their work and life to making this world a better place for the generations to come.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.Kathryn Kellogg, founder of going zero waste&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Kathryn Kellogg, author of 101 Ways to Go Zero Waste and National Geographic spokesperson for plastic-free living.&lt;/p&gt;

&lt;p&gt;She adopted a "holistic lifestyle" and makes her own cleaning products from scratch, reduces all contact with plastic, and cooks her own food instead of dining out‚Äîever. &lt;/p&gt;

&lt;p&gt;She started the &lt;a href="https://www.goingzerowaste.com/"&gt;Going Zero Waste&lt;/a&gt; blog after dealing with health issues and had to reconsider using chemical-laden products like cleaning supplies and beauty products.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--H9dFzJ12--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k5dqbnxt1t7531wp89d9.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H9dFzJ12--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k5dqbnxt1t7531wp89d9.jpg" alt="Kathryn Kellogg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.Erik Bergman, founder of great.com&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://great.com/erik/"&gt;Erik Bergman&lt;/a&gt; is a successful businessman who made it in the marketing world. He was a part-owner of Catena Media with which he made more than $50 million dollars before turning 30.&lt;/p&gt;

&lt;p&gt;After leaving the company, he decided to start &lt;a href="https://great.com/"&gt;great&lt;/a&gt;, It is an Online Casino Affiliate company that gives away 100% of its profit to the constant fight against climate change. &lt;/p&gt;

&lt;p&gt;He is also spreading the word about climate change on his Instagram account, with a more than 400k wide audience.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vek9UDq3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e4wmp5600gc5kx3mgf2n.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vek9UDq3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e4wmp5600gc5kx3mgf2n.jpg" alt="Erik Bergman"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.James Whitlowdelano, founder of everyday climate change&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;James started &lt;a href="https://www.jameswhitlowdelano.com/"&gt;everydayclimatechange&lt;/a&gt; along with other 5 great photographers who decided to show the world the climate changes first hand.&lt;/p&gt;

&lt;p&gt;They are taking photographs from different places a few months or years apart so they can show the effect of climate change.&lt;/p&gt;

&lt;p&gt;This is a great idea, especially for the non-believers out there.&lt;/p&gt;

&lt;p&gt;You can see firsthand what does the effect of climate change does on this world. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--29ktJ9B3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8sfzfz6vajfbmvgorsnk.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--29ktJ9B3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8sfzfz6vajfbmvgorsnk.jpg" alt="James Whitlowdelano"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;These are some of the few influencer environmental activists that are fighting the almost impossible mission for the greater good, if you have some others feel free to mention them in the comment section.&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>influencers</category>
      <category>climate</category>
      <category>change</category>
      <category>world</category>
    </item>
    <item>
      <title>FREE IDE dedicated to creating Bootstrap templates</title>
      <author>Przemyslaw Michalak</author>
      <pubDate>Wed, 16 Jun 2021 15:55:07 +0000</pubDate>
      <link>https://dev.to/przemek/free-ide-dedicated-to-creating-bootstrap-templates-3cb7</link>
      <guid>https://dev.to/przemek/free-ide-dedicated-to-creating-bootstrap-templates-3cb7</guid>
      <description>&lt;p&gt;Today I would like to show you how to create Bootstrap templates in very easy way. I start with pointing the fact that everything I will mention in this blog is FREE. Both, the IDE and the template. Everything is accessible via browser so no downloads, no installations just pure coding.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#why-to-use-dedicated-ide-for-bootstrap"&gt;
  &lt;/a&gt;
  Why to use dedicated IDE for Bootstrap?
&lt;/h1&gt;

&lt;p&gt;Well, the answer is very easy. It is faster and easier to use something dedicated to specific task.&lt;/p&gt;

&lt;p&gt;I start with showing you where is the problem. As an example I used popular template from &lt;a href="https://startbootstrap.com/theme/agency"&gt;here&lt;/a&gt;. At first - folder with files looks nicely organized and straight forward to use. But obviously because it's a template you want to edit the content and adjust its design for your needs. And this is where problems starts. Index page has over 660 lines of HTML which doesn't seems that bad, but CSS... over 11K. So before you even start, you need to go thru all that code and understand it.&lt;/p&gt;

&lt;p&gt;Another repeatable problem is setting up the environment. Creating folders, taking care of hot reload and organize everything.&lt;/p&gt;

&lt;p&gt;So lets have a look how much of it we can skip.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--x4Cd5tdk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o1fnbeiqr2ad83uwt1nn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--x4Cd5tdk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o1fnbeiqr2ad83uwt1nn.png" alt="code"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#environment"&gt;
  &lt;/a&gt;
  Environment
&lt;/h1&gt;

&lt;p&gt;The IDE starts with initial setup done for you. Hot reload, Bootstrap, project architecture and much more is loaded right at the start. After you create a new project you can start writing the code right away.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#split-your-work-to-smaller-parts"&gt;
  &lt;/a&gt;
  Split your work to smaller parts
&lt;/h1&gt;

&lt;p&gt;Now it is the time to show you how the IDE can help you with organizing the code. Firstly lets compress over 660 lines of HTML from the index page to only 24:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vnj8lHOY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zd3s4mfx07d33xwed0kx.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vnj8lHOY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zd3s4mfx07d33xwed0kx.jpg" alt="landing page"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let me explain what is actually happening here. As you can see in the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; there is no Bootstrap import. The IDE takes care of all necessary and repeatable tasks for you. So you don't need to worry about any links to CDN or UNPKG. That is done for you right at the start. The only think you need to do is importing the fonts you would like to use in your project.&lt;/p&gt;

&lt;p&gt;Now lets talk about &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt;. As you can see there is plenty of empty &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;'s. Those are 'Reusable Slots'. Simple one liners that can be used anywhere inside of your project to insert reusable elements as navigation bar, footer or cookie consent notice. They will also help to keep your code nicely organized and easy to read. Every &lt;code&gt;Reusable Slot&lt;/code&gt; represents a section that modern websites are split into:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--39t4PSuY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nvvwr0fdmhxiel5jkt67.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--39t4PSuY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nvvwr0fdmhxiel5jkt67.jpg" alt="preview"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So lets have a look how to actually edit the template. Open the project explorer and expand 'Reusable Slots' bar:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YldH7ty6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mcovtnucs50y24ze9udh.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YldH7ty6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mcovtnucs50y24ze9udh.jpg" alt="reusable slots"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Bellow is the code responsible for the &lt;code&gt;&amp;lt;footer&amp;gt;&lt;/code&gt;. As you can see it's absolutely standard HTML that uses Bootstrap classes. Splitting the scope of work not only makes everything significantly easier to read and edit, but also allows to style your template much easier since all Reusable Slots have dedicated CSS files.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Vsqw9sYE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1ceni9sl896dhqrgyf6e.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Vsqw9sYE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1ceni9sl896dhqrgyf6e.jpg" alt="Scoped CSS"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;HTML&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;footer&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"footer py-4"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"row align-items-center"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"col-lg-4 text-lg-start"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Copyright &lt;span class="ni"&gt;&amp;amp;copy;&lt;/span&gt; Your Website 2021&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"col-lg-4 my-3 my-lg-0"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"btn btn-dark btn-social mx-2"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#!"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;i&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"fab fa-twitter"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"btn btn-dark btn-social mx-2"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#!"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;i&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"fab fa-facebook-f"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"btn btn-dark btn-social mx-2"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#!"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;i&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"fab fa-linkedin-in"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"col-lg-4 text-lg-end"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"link-dark text-decoration-none mr-3"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#!"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Privacy Policy&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"link-dark text-decoration-none"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#!"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Terms of Use&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/footer&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;CSS&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@import&lt;/span&gt; &lt;span class="s2"&gt;'bootstrap'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;@import&lt;/span&gt; &lt;span class="s2"&gt;'fa'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nc"&gt;.btn&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.footer&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.9rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;"Montserrat"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;-apple-system&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;BlinkMacSystemFont&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;"Segoe UI"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Roboto&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;"Helvetica Neue"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Arial&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;"Apple Color Emoji"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;"Segoe UI Emoji"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;"Segoe UI Symbol"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;"Noto Color Emoji"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.link-dark&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#212529&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can use scoped CSS files to edit specific slots without interfering with the rest of the app. In our template almost every section has &lt;code&gt;&amp;lt;h2&amp;gt;&lt;/code&gt; element with class &lt;code&gt;section-heading&lt;/code&gt;. By using scoped CSS files you can make color of each &lt;code&gt;&amp;lt;h2&amp;gt;&lt;/code&gt; element different. That not only helps with styling the app but also with naming. You can use same class names for hundreds of elements in your website and still style them differently.&lt;/p&gt;

&lt;p&gt;Ok, but what in the situation when you actually want every single &lt;code&gt;&amp;lt;h2&amp;gt;&lt;/code&gt; to share the same qualities? It would be a pain to copy and paste the same CSS to all of the Reusable Slots. For this purpose you can use Global Styles. It is another CSS file, but in opposite to scoped CSS it can be imported inside of any slot or page. I used it to add the same font and margins to all headers and then edited scoped CSS to adjust colors.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PfHG5hd2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t1byxphcycg9zhqwa8hh.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PfHG5hd2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t1byxphcycg9zhqwa8hh.jpg" alt="Global Styles"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#icons"&gt;
  &lt;/a&gt;
  Icons
&lt;/h1&gt;

&lt;p&gt;Our template uses icons taken from &lt;a href="https://fontawesome.com/"&gt;fontawesome&lt;/a&gt;. So how to use them in the IDE? Nothing easier. Go on their website, choose icon, copy the code from modal, paste it inside of your project. The last step is to tell the IDE where you want to use fontawesome icons by writing &lt;code&gt;@import 'fa';&lt;/code&gt; inside of the scoped CSS files.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#excited"&gt;
  &lt;/a&gt;
  Excited?
&lt;/h1&gt;

&lt;p&gt;That's not the end of all the features available in the IDE. There is also 52 FREE to use snippets that you can insert inside of your project within one click. In our template I used one of those snippets as navbar.&lt;/p&gt;

&lt;p&gt;All the Widgets are well documented, fully customizable and easy to edit.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ybixSr0---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ypr05897dj5tod4k2aam.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ybixSr0---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ypr05897dj5tod4k2aam.jpg" alt="navbar"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After you insert the Widget 2 new files will appear in your project. Object JSON file where you can edit the content and scoped CSS file to edit styles.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zbsqh9fC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q3thkugjwpygta5d26kw.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zbsqh9fC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q3thkugjwpygta5d26kw.jpg" alt="edit widget"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#check-it-yourself"&gt;
  &lt;/a&gt;
  Check it yourself
&lt;/h1&gt;

&lt;p&gt;Everything you saw in this blog is available for FREE. Including template, the IDE, and code of the template.&lt;/p&gt;

&lt;p&gt;After you open the IDE you can navigate to the tab 'demos' and open project with the template used in this blog. You can feel free to edit it (or not) and export it outside of the IDE.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kmQbkiV2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j5fl48girswu7o60hl7t.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kmQbkiV2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j5fl48girswu7o60hl7t.jpg" alt="demos"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can also join freshly created FB group where you can ask any questions related to the IDE:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.facebook.com/groups/gluecodesstudio"&gt;https://www.facebook.com/groups/gluecodesstudio&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And here you can use the IDE for FREE (including everything what I wrote in this blog):&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.glue.codes"&gt;https://www.glue.codes&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>html</category>
      <category>css</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Flutter - Animated Splash Screen</title>
      <author>Ushieru Kokoran</author>
      <pubDate>Wed, 16 Jun 2021 15:50:34 +0000</pubDate>
      <link>https://dev.to/ushieru/flutter-animated-splash-screen-2lcj</link>
      <guid>https://dev.to/ushieru/flutter-animated-splash-screen-2lcj</guid>
      <description>&lt;p&gt;Para fines practicos escribiremos la minima cantidad de codigo y utilizaremos rive (pero tambien puedes usar un .gif).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#instalamos-rive"&gt;
  &lt;/a&gt;
  Instalamos rive.
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;rive&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;^0.7.18&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#iniciamos-con-lo-facil"&gt;
  &lt;/a&gt;
  Iniciamos con lo facil.
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;main.dart&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'package:flutter/material.dart'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'package:animated_screen/routes/login.dart'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'package:animated_screen/routes/sphasl_screen_animated.dart'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;runApp&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
      &lt;span class="n"&gt;MaterialApp&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
        &lt;span class="nl"&gt;initialRoute:&lt;/span&gt; &lt;span class="n"&gt;SplashScreenAnimated&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;routeName&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
        &lt;span class="nl"&gt;routes:&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
          &lt;span class="n"&gt;SplashScreenAnimated&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;routeName&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;SplashScreenAnimated&lt;/span&gt;&lt;span class="o"&gt;(),&lt;/span&gt;
          &lt;span class="n"&gt;Login&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;routeName&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Login&lt;/span&gt;&lt;span class="o"&gt;(),&lt;/span&gt;
        &lt;span class="o"&gt;},&lt;/span&gt;
      &lt;span class="o"&gt;),&lt;/span&gt;
    &lt;span class="o"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;routes/login.dart&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'package:flutter/material.dart'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Login&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;StatelessWidget&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="n"&gt;routeName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Login'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="nd"&gt;@override&lt;/span&gt;
  &lt;span class="n"&gt;Widget&lt;/span&gt; &lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BuildContext&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Scaffold&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
      &lt;span class="nl"&gt;body:&lt;/span&gt; &lt;span class="n"&gt;Container&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
        &lt;span class="nl"&gt;padding:&lt;/span&gt; &lt;span class="n"&gt;EdgeInsets&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;symmetric&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;horizontal:&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
        &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="n"&gt;Column&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
          &lt;span class="nl"&gt;mainAxisAlignment:&lt;/span&gt; &lt;span class="n"&gt;MainAxisAlignment&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;center&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
          &lt;span class="nl"&gt;children:&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;
            &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Login'&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
            &lt;span class="n"&gt;TextField&lt;/span&gt;&lt;span class="o"&gt;(),&lt;/span&gt;
            &lt;span class="n"&gt;TextField&lt;/span&gt;&lt;span class="o"&gt;(),&lt;/span&gt;
          &lt;span class="o"&gt;],&lt;/span&gt;
        &lt;span class="o"&gt;),&lt;/span&gt;
      &lt;span class="o"&gt;),&lt;/span&gt;
    &lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#aqui-la-magia"&gt;
  &lt;/a&gt;
  Aqui la magia.
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;routes/sphasl_screen_animated.dart&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'package:flutter/material.dart'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'package:animated_screen/routes/login.dart'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'package:rive/rive.dart'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;SplashScreenAnimated&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;StatefulWidget&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt; &lt;span class="n"&gt;routeName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'SplashScreenAnimated'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

  &lt;span class="nd"&gt;@override&lt;/span&gt;
  &lt;span class="n"&gt;_SplashScreenAnimatedState&lt;/span&gt; &lt;span class="n"&gt;createState&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;_SplashScreenAnimatedState&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;_SplashScreenAnimatedState&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;State&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;SplashScreenAnimated&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="nd"&gt;@override&lt;/span&gt;
  &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;initState&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;initState&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;

    &lt;span class="c1"&gt;/// WidgetsBinding.instance?.addPostFrameCallback nos asegura &lt;/span&gt;
    &lt;span class="c1"&gt;/// que no empezara a hacer el Future.delayed antes de que el&lt;/span&gt;
    &lt;span class="c1"&gt;/// widget este completamente construido.&lt;/span&gt;
    &lt;span class="n"&gt;WidgetsBinding&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;instance&lt;/span&gt;&lt;span class="o"&gt;?.&lt;/span&gt;&lt;span class="na"&gt;addPostFrameCallback&lt;/span&gt;&lt;span class="o"&gt;((&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;timeout&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;

  &lt;span class="n"&gt;Future&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;timeout&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="n"&gt;async&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Future&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;delayed&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;

      &lt;span class="c1"&gt;/// [TODO]: Esto depende de cuanto dure, o cuanto&lt;/span&gt;
      &lt;span class="c1"&gt;/// quieres que dure, tu animacion. Recuerda cambiarlo.&lt;/span&gt;
      &lt;span class="n"&gt;Duration&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;seconds:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
      &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Navigator&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;pushNamedAndRemoveUntil&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
          &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Login&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;routeName&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;

  &lt;span class="nd"&gt;@override&lt;/span&gt;
  &lt;span class="n"&gt;Widget&lt;/span&gt; &lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BuildContext&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;SafeArea&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
      &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="n"&gt;Center&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
        &lt;span class="c1"&gt;/// Para fines practicos usarremos esta animacion &lt;/span&gt;
        &lt;span class="c1"&gt;/// disponible en linea.&lt;/span&gt;
        &lt;span class="nl"&gt;child:&lt;/span&gt; &lt;span class="n"&gt;RiveAnimation&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;network&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
          &lt;span class="s"&gt;'https://cdn.rive.app/animations/vehicles.riv'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
          &lt;span class="nl"&gt;fit:&lt;/span&gt; &lt;span class="n"&gt;BoxFit&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;cover&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
        &lt;span class="o"&gt;),&lt;/span&gt;
      &lt;span class="o"&gt;),&lt;/span&gt;
    &lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Para agregar tus propias animaciones de rive. Solo agregalas a tu carpeta de assets y habilita el path en tu yaml.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;flutter&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;

  &lt;span class="c1"&gt;# To add assets to your application, add an assets section, like this:&lt;/span&gt;
  &lt;span class="na"&gt;assets&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;assets/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Y modificas la linea 37 (aproximadamente). Yo usare una animacion de zombie del autor &lt;a href="https://rive.app/JcToon/"&gt;JcToon&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="c1"&gt;/// Pasas de esto:&lt;/span&gt;
&lt;span class="n"&gt;RiveAnimation&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;network&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;'https://cdn.rive.app/animations/vehicles.riv'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
    &lt;span class="nl"&gt;fit:&lt;/span&gt; &lt;span class="n"&gt;BoxFit&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;cover&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="o"&gt;),&lt;/span&gt;

&lt;span class="c1"&gt;/// A esto:&lt;/span&gt;
&lt;span class="n"&gt;RiveAnimation&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;asset&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;'assets/zombie-character.riv'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
    &lt;span class="nl"&gt;fit:&lt;/span&gt; &lt;span class="n"&gt;BoxFit&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;cover&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="o"&gt;),&lt;/span&gt;

&lt;span class="c1"&gt;// Si vas a usar un gif:&lt;/span&gt;
&lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;asset&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'assets/gif.gif'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
    &lt;span class="nl"&gt;fit:&lt;/span&gt; &lt;span class="n"&gt;BoxFit&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;cover&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Y listo! üöÄüöÄ&lt;/p&gt;

&lt;p&gt;Mucha suerte en tus proyectos, precioso ‚ù§Ô∏è. D√©jame tu opini√≥n ¬øPrefieres este tipo de ejemplos o preferir√≠as una aplicaci√≥n completa? ¬øOtro tipo de tutoriales? Ay√∫dame a ayudarte.&lt;/p&gt;

</description>
      <category>flutter</category>
    </item>
    <item>
      <title>React Carousel</title>
      <author>Prince Jaiswal</author>
      <pubDate>Wed, 16 Jun 2021 15:39:08 +0000</pubDate>
      <link>https://dev.to/knolcoder/react-carousel-1jk0</link>
      <guid>https://dev.to/knolcoder/react-carousel-1jk0</guid>
      <description>&lt;p&gt;A React Carousel .&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#see-code-here-"&gt;
  &lt;/a&gt;
  See Code Here :-
&lt;/h2&gt;




&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/hexagoncircle/embed/jgGxKR?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>react</category>
      <category>webdev</category>
      <category>html</category>
      <category>scss</category>
    </item>
  </channel>
</rss>
