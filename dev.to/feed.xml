<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Docker 101!</title>
      <author>kubona Martin Yafesi</author>
      <pubDate>Tue, 17 Aug 2021 13:17:44 +0000</pubDate>
      <link>https://dev.to/kubona_my/docker-101-124e</link>
      <guid>https://dev.to/kubona_my/docker-101-124e</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PSPoVlyY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qd8q1br8y9e1doo0a497.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PSPoVlyY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qd8q1br8y9e1doo0a497.jpg" alt="docker-image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Welcome dear reader to yet another learning opportunity. I applaud you for the commitment devoted to become a better version of yourself. Always here to remind you,&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Every master was once a beginner&lt;br&gt;
Whatever tech stack you choose to follow, do not underestimate the small beginnings! &lt;code&gt;Stick to it!&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Since we started this learning journey together, we have looked at a few principles and mastered some techniques, absolutely beginner level. Some of these have been;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.tolink%20here"&gt;Python Basics, Pythons 101!&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.tolink%20here"&gt;Introduction to Python Functions&lt;/a&gt;&lt;br&gt;
Feel free to check them out. &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7MywqPku--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/39tg85klaorj3ynnxip2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7MywqPku--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/39tg85klaorj3ynnxip2.png" alt="Getting-started-docker"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#diving-right-in-"&gt;
  &lt;/a&gt;
  Diving right in …
&lt;/h2&gt;

&lt;p&gt;We are getting started with our topic for the day. Hope you are refreshed and have a clear mind. This article assumes no prior experience with Docker or any of the terms used, sit back, read along and enjoy. &lt;/p&gt;

&lt;p&gt;To explain what Docker is, we will first dig a few decades back before the docker world. Problem scenarios will be used to understand how docker came about, why it is important in your software development work flow, and basic usage examples.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-problems-before-docker"&gt;
  &lt;/a&gt;
  The Problems before docker.
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#scenario-1"&gt;
  &lt;/a&gt;
  Scenario 1
&lt;/h3&gt;

&lt;p&gt;You have just landed your first tech developer job, before anytime elapses, your very first assignment rolls in from the Chief Technical Officer. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#the-assignment"&gt;
  &lt;/a&gt;
  The assignment...
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;You are required to develop an application for a very needy segment of the population, the blind!!.  &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4&gt;
  &lt;a href="#how-you-start-lets-see"&gt;
  &lt;/a&gt;
  How you start, lets see!!
&lt;/h4&gt;

&lt;p&gt;From your expertise, basing on the app requirements, you decide on a set of tools that will enable you complete the task before hand.&lt;br&gt;
Your application say will require these dependencies to run;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;An operating system&lt;/li&gt;
&lt;li&gt;Python&lt;/li&gt;
&lt;li&gt;A database like Postgres&lt;/li&gt;
&lt;li&gt;Flask&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Installing app dependencies manually&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Task before hand is installing all these tools to your local system. Phew!!! That looks tiresome already. Remember while installing them manually, you are only getting versions specific to your machine/laptop. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Coding, collaborations, testing&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So until now, you are very comfortable coding the real-world application that solves a pressing need in your community. &lt;br&gt;
Your boss has given you a deadline to complete the first module of the application. Yikes!!! Deadline day is here and the module is complete. You send the code over to the operations team, to test the application. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;A few days later ...&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Operations Team manager&lt;/code&gt;: &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Hey, The code you sent me cannot run on my system, no app!!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;A big problem arises&lt;/strong&gt;&lt;br&gt;
&lt;em&gt;Can you see it?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Why did that happen? Well simply put, you used dependencies specific to your personal system, not universal. Another developer to test out your application will also need to manually install these dependencies on his personal system, and the chain continues that way. Along the way, there are more chances of your app breaking,....Oh no!!!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#scenario-2"&gt;
  &lt;/a&gt;
  Scenario 2
&lt;/h3&gt;

&lt;p&gt;You have built out your first application, but would like to test it out using a different operating system. How do you go about that? &lt;br&gt;
After making some consultations from your workmates, news has it that its very possible through &lt;code&gt;Virtual Machines&lt;/code&gt;.&lt;br&gt;
Hurray, you feel great utilizing the concept of &lt;em&gt;Virtualization&lt;/em&gt;!!&lt;br&gt;
Virtualization has greatly aided developers in their ability to construct and produce from their computers as if they were separate platforms. They can use virtual computers to construct completely virtual operating systems in which to operate and build.&lt;/p&gt;

&lt;p&gt;A developer can run a virtual Windows computer on their Macbook to evaluate the operation of a Windows-constructed application. Running a virtual machine is more cheaper and easier than buying a brand new one. I guess it's a really great option saving you a couple of thousand dollars.&lt;/p&gt;

&lt;p&gt;Look at the difference between Docker and Virtual Machines from the illustration below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ih45CpFB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gwm6yfigwrz8p80a95gp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ih45CpFB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gwm6yfigwrz8p80a95gp.png" alt="virual-machines-or-docker"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Problems arising ...&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;As you enjoy trying out different virtual machines on your local device, you start noticing a few hiccups arising. These could be and not limited to;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Exhaustion of computing resources like ram, storage&lt;/li&gt;
&lt;li&gt;Network congestion&lt;/li&gt;
&lt;li&gt;Marginal app performance inside the Virtual machine&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With the virtual machines installed, they share the same hardware resources with your normal operating system. So the issue of scalability arises since your virtual machine keeps expanding but not your hardware performance. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Do you notice that problem now?&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#leaving-problems-alone"&gt;
  &lt;/a&gt;
  Leaving problems alone...
&lt;/h3&gt;

&lt;p&gt;There are quite a number of scenarios to list out in regards to traditional Software development practices. But I just highlighted on a few to whet our appetite and understand how &lt;code&gt;Docker&lt;/code&gt; comes in the picture. Having understood those challenges, am sure your mind is sparked to solution mode already. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Let us refocus&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3VypFZAU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jq9ythpb5vo694dzrpds.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3VypFZAU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jq9ythpb5vo694dzrpds.png" alt="REFOCUS-docker"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Who comes to our rescue? Docker !!!&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-docker"&gt;
  &lt;/a&gt;
  What is Docker?
&lt;/h2&gt;

&lt;p&gt;Docker is a computer program that accelerates the way you build, share and run modern applications. Essentially it solves all the problem scenarios we have discussed above.&lt;br&gt;
Docker takes away tedious, monotonous configuration procedures and is utilized across the development lifecycle for quick, simple and portable application development both on desktop and cloud.&lt;br&gt;
In other words, while you use docker development becomes more efficient and predictable. &lt;/p&gt;

&lt;p&gt;Docker is a tool for building, running, and deploying containerized applications. An application's code, libraries, tools, dependencies, and other files are all contained in a Docker image. When a user executes an image, it might turn into one or more containers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-specifically"&gt;
  &lt;/a&gt;
  How Specifically?
&lt;/h2&gt;

&lt;p&gt;Okay to answer this question, I will split the concept into 3 ways;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Build&lt;/li&gt;
&lt;li&gt;Share&lt;/li&gt;
&lt;li&gt;Run&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--O_JMz99o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b2pvxhyamhlw6xjrd9z9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--O_JMz99o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b2pvxhyamhlw6xjrd9z9.png" alt="Build-ship-run"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#build"&gt;
  &lt;/a&gt;
  Build
&lt;/h3&gt;

&lt;p&gt;Everything in Docker is based on images and containers. &lt;br&gt;
A Docker image is a file that a Docker container uses to run programs. Docker images, like a template, serve as a collection of instructions for constructing a Docker container. When utilizing Docker, Docker images also serve as a starting point. In virtual machine (VM) settings, an image is similar to a snapshot.&lt;/p&gt;

&lt;p&gt;Docker images include several layers, each of which is derived from the one before it but differs from it. The layers reduce disk use while boosting reusability and speeding up Docker builds. Image layers are read-only files as well. A written layer is put on top of the unchangeable images once a container is formed, enabling a user to make modifications.&lt;/p&gt;

&lt;p&gt;Official images are those created by Docker, and community images are those created by Docker users. Docker applications are monitored by the &lt;em&gt;CoScale&lt;/em&gt; agent, which is an official Docker image.&lt;br&gt;
With confidence, leverage Images from the Docker Hub image repository that are Docker verified and official. As a basis for your application development, use these reliable and secure images.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qezYFRXQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4t1kksqui8x4s31wyhtq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qezYFRXQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4t1kksqui8x4s31wyhtq.png" alt="docker-official-images"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Code, config files, environment variables, libraries, and runtimes are all included in a Docker image for running a containerized application. The image may be run as a Docker container once it has been deployed to a Docker environment. Docker run builds a container based on a specified image.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wbzFwT0a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t6miwbgf8t74vqmdbpre.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wbzFwT0a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t6miwbgf8t74vqmdbpre.jpg" alt="docker-build"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In simple terms, you build your image that contains all the libraries, and dependencies for your app and upon running that image you generate a container which is an instance of your application. You can make multiple versions of your application.&lt;/p&gt;

&lt;p&gt;For example;&lt;br&gt;
You can build an image for your flask project based on ;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Python &lt;/li&gt;
&lt;li&gt;Flask &lt;/li&gt;
&lt;li&gt;MySQL&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When you run that image you create an instance of your application which you can share to anyone and will run without any issues.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Do you see how much Docker saves you!!&lt;/em&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#share"&gt;
  &lt;/a&gt;
  Share
&lt;/h3&gt;

&lt;p&gt;Once you have built your image you are able to share it to the world and anyone can use it (&lt;em&gt;if you choose to&lt;/em&gt;). &lt;br&gt;
You may deploy containers and test and share images from private or public repositories, such as those in the Docker Hub cloud registry service. Image management and access control are also available through Docker Hub's Docker Trusted Registry.&lt;/p&gt;

&lt;p&gt;Users may use the docker push command to publish custom images to the Docker Hub and generate new images from existing ones. Docker offers comments to authors prior to publication to ensure the quality of community images. The author is responsible for updating the image once it has been published.&lt;/p&gt;

&lt;p&gt;With Docker it is easy to collaborate with team members and other developers to come up with new ideas, and simply upload images to Docker Hub. It is even possible to have roles-based access control and Docker Hub Audit Logs. That makes it easier customize developer access to images and gain insight into activity history.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#run"&gt;
  &lt;/a&gt;
  Run
&lt;/h3&gt;

&lt;p&gt;Remember we said that when you run the &lt;code&gt;docker run&lt;/code&gt; command, you are making an instance of your application. You can make as many instances as you like, for example:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Instance for development&lt;/li&gt;
&lt;li&gt;Instance for testing&lt;/li&gt;
&lt;li&gt;Instance for staging&lt;/li&gt;
&lt;li&gt;Instance for production (&lt;em&gt;One being used by application users&lt;/em&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BonCVll2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3riupfo9kigmmg1fsr9h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BonCVll2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3riupfo9kigmmg1fsr9h.png" alt="docker-containers"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So the concept is to deliver numerous apps with ease, and have them operate the same way in all of your settings - desktop or cloud-native - including design, testing, staging, and production.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#how-do-we-do-that"&gt;
  &lt;/a&gt;
  How do we do that?
&lt;/h4&gt;

&lt;p&gt;It is really simple, Deploy your applications in separate containers independently and in different languages. Reduce the risk of conflict between languages, libraries or frameworks. &lt;/p&gt;

&lt;p&gt;Using the ease of Docker Compose CLI, you can deploy your apps locally and in the cloud with AWS ECS, Azure ACI, and Google GKS with just one command.&lt;/p&gt;

&lt;p&gt;Yes!!! That is it about Docker. Hope you have learnt some concepts about what Docker is?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#getting-started-guide"&gt;
  &lt;/a&gt;
  Getting Started Guide.
&lt;/h2&gt;

&lt;p&gt;Docker is a really great tool to include in your software development workflow. &lt;/p&gt;

&lt;p&gt;To have a more whetting experience about docker, please refer to the guide.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.docker.com/get-started"&gt;Getting-Started-With-Docker&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Without installing Docker on your system, you can leverage the online play ground and practice how to use Docker Images and containers. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.docker.com/play-with-docker"&gt;Play-with-Docker&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Congratulations upon finishing the article. I trust that you have learnt something. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-was-the-article"&gt;
  &lt;/a&gt;
  How was the article?
&lt;/h2&gt;

&lt;p&gt;I love learning with the friends I share content with. Are there any insights you have about the article? Any additional features/concepts that would have been of real value to the article? Whatever it is, please share in the discussion section.&lt;/p&gt;

&lt;p&gt;For now... I tap out. Enjoy yourself and see you next time.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/PAflk22toszMlnzEdN/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/PAflk22toszMlnzEdN/giphy.gif"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>devops</category>
      <category>beginners</category>
      <category>docker</category>
    </item>
    <item>
      <title>Top 5 Tips to Boost your rails app performance </title>
      <author>Shaher Shamroukh</author>
      <pubDate>Tue, 17 Aug 2021 13:08:56 +0000</pubDate>
      <link>https://dev.to/shahershamroukh/top-5-tips-to-boost-your-rails-app-performance-4mfj</link>
      <guid>https://dev.to/shahershamroukh/top-5-tips-to-boost-your-rails-app-performance-4mfj</guid>
      <description>&lt;p&gt;The performance of the web application is crucial and the app speed really matters, as it plays a great role of it's success.&lt;/p&gt;

&lt;p&gt;so what techniques will help us improve the performance of our application?&lt;/p&gt;

&lt;p&gt;Here we will talk about the top 5 easy techniques to boost the performance of the rails app.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-caching"&gt;
  &lt;/a&gt;
  1- Caching
&lt;/h2&gt;

&lt;p&gt;Caching caching caching &lt;/p&gt;

&lt;p&gt;Caching is crucial to significantly improve the app performance.&lt;br&gt;
To put it simply, caching means storing the results of a complex (or not so complex) computation in some storage and later returning them right away without the need to re-compute everything. &lt;br&gt;
Also "cache" is a French word that means "to hide" and "cache-cache" is a hide-and-seek game.&lt;/p&gt;

&lt;p&gt;Now caching is a long topic to cover in one article so i will list the resources that cover everything you need to know about rails caching.&lt;/p&gt;

&lt;p&gt;Caching with Rails: An Overview &lt;a href="https://guides.rubyonrails.org/caching_with_rails.html"&gt;rails guides&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Everything You Ever Wanted To Know About View Caching In Rails &lt;a href="https://www.honeybadger.io/blog/ruby-rails-view-caching/"&gt;honeybadger&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;How Active-record Uses Caching To Avoid Unnecessary Trips To The Database &lt;a href="https://www.honeybadger.io/blog/rails-activerecord-caching/"&gt;honeybadger&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Mastering Low Level Caching in Rails &lt;a href="https://www.honeybadger.io/blog/rails-low-level-caching/"&gt;honeybadger&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-n1-query-problem"&gt;
  &lt;/a&gt;
  2- N+1 query problem
&lt;/h2&gt;

&lt;p&gt;This is a very popular and simple optimization technique&lt;br&gt;
but it deserves the first mention since this mistake is so prevalent.&lt;br&gt;
To eliminate the N+1 problem make use of the MySQL database joins and the Rails Active-record includes functions.&lt;/p&gt;

&lt;p&gt;Here is a good &lt;a href="https://semaphoreci.com/blog/2017/08/09/faster-rails-eliminating-n-plus-one-queries.html"&gt;article&lt;/a&gt; about eliminating the n+1 query problem and taking advantage of the bullet gem.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-use-raw-size-endraw-instead-of-raw-length-endraw-or-raw-count-endraw-"&gt;
  &lt;/a&gt;
  3- Use &lt;code&gt;size&lt;/code&gt; Instead of &lt;code&gt;length&lt;/code&gt; or &lt;code&gt;count&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;Here is why&lt;br&gt;
&lt;code&gt;count&lt;/code&gt; will perform an SQL COUNT query&lt;br&gt;
&lt;code&gt;length&lt;/code&gt; will calculate the length of the resulting array&lt;br&gt;
&lt;code&gt;size&lt;/code&gt; will try to pick the most appropriate of the two to avoid excessive queries.&lt;br&gt;
Take a look at this &lt;a href="https://web.archive.org/web/20100210204319/http://blog.hasmanythrough.com/2008/2/27/count-length-size"&gt;article&lt;/a&gt; about size vs length vs count.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-use-raw-pluck-endraw-"&gt;
  &lt;/a&gt;
  4- Use &lt;code&gt;pluck&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;pluck can be used to query single or multiple columns from the underlying table of a model. It accepts a list of column names as an argument and returns an array of values of the specified columns with the corresponding data type.&lt;/p&gt;

&lt;p&gt;Unlike select, pluck directly converts a database result into a Ruby Array, without constructing Active-record objects. This means better performance for a large or frequently-run query.&lt;/p&gt;

&lt;p&gt;To see the example and usage of pluck method check it out on rails &lt;a href="https://guides.rubyonrails.org/active_record_querying.html#pluck"&gt;guides&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-upgrade-ruby-and-rails"&gt;
  &lt;/a&gt;
  5- Upgrade Ruby and rails
&lt;/h2&gt;

&lt;p&gt;New versions tend to bring performance improvements as well as security and new methods that often faster for their case uses.&lt;br&gt;
Here is a good &lt;a href="https://www.fastruby.io/blog/rails/upgrades/why-upgrade-your-rails-application.html"&gt;article&lt;/a&gt; about Why Is It Important to Upgrade Your Rails Application.&lt;/p&gt;

&lt;p&gt;I hope you enjoyed reading the article as i have enjoyed writing it.&lt;/p&gt;

</description>
      <category>rails</category>
      <category>performance</category>
      <category>ruby</category>
    </item>
    <item>
      <title>Anahtar Doğrulamalı API Servisi Oluşturma</title>
      <author>Ali Buğra Okkalı</author>
      <pubDate>Tue, 17 Aug 2021 13:05:22 +0000</pubDate>
      <link>https://dev.to/aciklab/anahtar-dogrulamali-api-servisi-olusturma-5gbo</link>
      <guid>https://dev.to/aciklab/anahtar-dogrulamali-api-servisi-olusturma-5gbo</guid>
      <description>&lt;p&gt;Her istekte kullanıcı adı ve parolayı gönderme zorunluluğu sakıncalıdır ve aktarım güvenli HTTP olsa bile bir güvenlik riski olarak görülebilir, çünkü istemcinin bu kimlik bilgilerini isteklerle gönderebilmesi için şifrelemeden saklaması gerekir.&lt;/p&gt;

&lt;p&gt;Önceki çözüme göre bir gelişme, isteklerin kimliğini doğrulamak için bir anahtar kullanmaktır.&lt;/p&gt;

&lt;p&gt;Buradaki fikir, istemci uygulamasının bir kimlik doğrulama anahtarı için kimlik doğrulama bilgilerini değiş tokuş etmesi ve sonraki isteklerde bu anahtarı göndermesidir.&lt;/p&gt;

&lt;p&gt;Anahtarlar genellikle bir sona erme süresi ile verilir, ardından geçersiz hale gelirler ve yeni bir anahtar alınması gerekir. Bir anahtarın sızdırılması durumunda oluşabilecek potansiyel hasar, kısa ömürleri nedeniyle çok daha küçüktür.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#uygulama"&gt;
  &lt;/a&gt;
  Uygulama
&lt;/h1&gt;

&lt;p&gt;​ Anahtarları kullanmanın birçok yolu vardır:&lt;/p&gt;

&lt;p&gt;Basit bir uygulama, veritabanında kullanıcı ve parola ile saklanan, muhtemelen bir son kullanma tarihi olan, belirli uzunlukta rastgele bir karakter dizisi oluşturmaktır.&lt;/p&gt;

&lt;p&gt;Sunucu tarafında depolama gerektirmeyen daha ayrıntılı bir uygulama ise, kriptografik olarak imzalanmış bir mesajı anahtar olarak kullanmaktır. Bunun avantajı, anahtarla ilgili bilgilerin, yani anahtarın üretildiği kullanıcının, anahtarın kendisinde kodlanması ve güçlü bir kriptografik imza ile korunmasıdır.&lt;/p&gt;

&lt;p&gt;Bu uygulamada da benzer bir yaklaşım kullanacağız.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#kod"&gt;
  &lt;/a&gt;
  Kod
&lt;/h2&gt;

&lt;p&gt;Kodun tamamına &lt;a href="https://github.com/abugraokkali/Rest-Token-Based-Authentication"&gt;buradan&lt;/a&gt; ulaşabilirsiniz.&lt;/p&gt;

&lt;p&gt;Ayrıca Python ile REST-API Servisi Oluşturmak ile ilgili yazıma da &lt;a href="https://dev.to/aciklab/rest-api-e26"&gt;buradan&lt;/a&gt; ulaşabilirsiniz.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;flask&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;jsonify&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;make_response&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;jwt&lt;/span&gt; 
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;functools&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;wraps&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Gerekli paketlerin import edilmesi&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;jwt&lt;/strong&gt;: JSON Web Token'lerini (JWT) kodlamanıza ve kodunu çözmenize olanak tanır.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;datetime&lt;/strong&gt;: Datetime modülü, tarih ve saatle çalışmak için sınıflar sağlar.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;functools&lt;/strong&gt;, daha yüksek dereceli fonksiyonlar (diğer fonksiyonlar üzerinde hareket eden veya başka fonksiyon döndüren fonksiyonlar) için standart bir Python modülüdür. &lt;strong&gt;wraps()&lt;/strong&gt;, bir dekoratörün sarmalayıcı işlevine uygulanan bir dekoratördür.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'SECRET_KEY'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'thisisthesecretkey'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Flask app objesinin ve gizli anahtarın oluşturulması.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;token_required&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;wraps&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;decorated&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;token&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'token'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;jsonify&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s"&gt;'message'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'Token is missing!'&lt;/span&gt;&lt;span class="p"&gt;}),&lt;/span&gt; &lt;span class="mi"&gt;403&lt;/span&gt;

        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 
            &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;jwt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;decode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'SECRET_KEY'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;algorithms&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"HS256"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="nb"&gt;Exception&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;inst&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;inst&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;jsonify&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s"&gt;'message'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'Token is invalid!'&lt;/span&gt;&lt;span class="p"&gt;}),&lt;/span&gt; &lt;span class="mi"&gt;403&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;decorated&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Anahtar girilmediyse veya girilen anahtar hatalıysa hata mesajları basan, girilen doğru bir şekilde decode edildiyse devam eden wrapper fonksiyon.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'/unprotected'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;unprotected&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;jsonify&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s"&gt;'message'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'Anyone can view this!'&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'/protected'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;token_required&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;protected&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;jsonify&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s"&gt;'message'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'This is only available for people with valid tokens.'&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Test aşamasında kullanmak için anahtar gerektiren ve gerektirmeyen end-point'lerin oluşturulması.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'/login'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;login&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;auth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;authorization&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;auth&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;auth&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;password&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;'Passw0rd'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;token&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;jwt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s"&gt;'user'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;auth&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'exp'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;utcnow&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timedelta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;minutes&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;)},&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'SECRET_KEY'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;algorithm&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"HS256"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;jsonify&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s"&gt;'token'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;make_response&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Could not verify!'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;401&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'WWW-Authenticate'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'Basic realm="Login Required"'&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Herhangi bir kullanıcı adı ve "PasswOrd"parolası ile /login end-point'inini çağırdığınızda ;

&lt;ul&gt;
&lt;li&gt;kullanıcı adının&lt;/li&gt;
&lt;li&gt;son kullanma tarihinin&lt;/li&gt;
&lt;li&gt;ve gizli anahtarın &lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;jwt ile oluşturulan anahtarı döndüren fonksiyon. datetime'ı kullanıp anahtarın kullanılabilirlik süresini 15 dakika yaptığımızı da görebilirsiniz.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;if __name__ == '__main__':
    app.run(debug=True)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Betik çalıştırıldığında app'in debug modda çalıştırılması.&lt;/li&gt;
&lt;/ul&gt;



&lt;h1&gt;
  &lt;a href="#%C3%A7al%C4%B1%C5%9Ft%C4%B1rma"&gt;
  &lt;/a&gt;
  Çalıştırma
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ python3 api.py

 * Serving Flask app "api" (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: on
 * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
 * Restarting with stat
 * Debugger is active!
 * Debugger PIN: 241-307-717
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;h1&gt;
  &lt;a href="#testler"&gt;
  &lt;/a&gt;
  Testler
&lt;/h1&gt;

&lt;p&gt;Testleri tarayıcınız üzerinde verilen adreslere giderek yapabilirsiniz.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;http://127.0.0.1:5000/unprotected
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;adresine gittiğimizde beklediğimiz içeriği görebiliyoruz.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GIABTHIR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1o858oz2yc2cpmg8n0x5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GIABTHIR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1o858oz2yc2cpmg8n0x5.png" alt="ss1"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;http://127.0.0.1:5000/protected
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;adresine gittiğimizde bir anahtar beklendiği için içerikte anahtar eksik uyarısı alıyoruz.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GRpc0Qo3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dgvr7u3jytpksn06ob1o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GRpc0Qo3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dgvr7u3jytpksn06ob1o.png" alt="ss2"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;http://127.0.0.1:5000/login
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Adresine gittiğimizde bizden kullanıcı adı ve şifre isteniyor. Herhangi bir kullanıcı adı ve "Passw0rd" şifresiyle oturum açalım.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ri3EpMoK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/khk2wuapjirqxz2wmvsi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ri3EpMoK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/khk2wuapjirqxz2wmvsi.png" alt="ss3"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Oturum açtığımızda kullanıcı adımıza ve gizli anahtarımıza özel oluşturulan 15 dakika geçerli anahtarımızı görüntüleyebiliyoruz.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D6BQ-1FI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ev3q80l8q6deq7r4yqoh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D6BQ-1FI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ev3q80l8q6deq7r4yqoh.png" alt="ss4"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;http://127.0.0.1:5000/protected?token=invalidtoken
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Anahtar gerektiren adrese yanlış bir anahtar ile gitmeye çalıştığımızda beklediğimiz uyarıyla karşılaşıyoruz.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PLfqWX69--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/487mpc16lr1g6x3b9cqm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PLfqWX69--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/487mpc16lr1g6x3b9cqm.png" alt="ss5"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;http://127.0.0.1:5000/protected?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyIjoiYWxpIiwiZXhwIjoxNjI5MTg4NDMwfQ.ni3Soivc1a4vKyI3_xpDyb1-RV3iDQ4QMtS3FhXijog
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Aynı adrese bu şekilde gittiğimizde ise herhangi bir uyarıyla karşılaşmadan içeriği görebiliyoruz.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--K3_Btn7h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9kqqxtq5z61sblemzdtx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--K3_Btn7h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9kqqxtq5z61sblemzdtx.png" alt="ss6"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Ali Buğra Okkalı &lt;br&gt;
HAVELSAN - 2021&lt;/em&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>api</category>
      <category>token</category>
      <category>authentication</category>
    </item>
    <item>
      <title>5 APIs to Develop Your Next Project</title>
      <author>Suraj Vishwakarma</author>
      <pubDate>Tue, 17 Aug 2021 12:39:33 +0000</pubDate>
      <link>https://dev.to/basecampxd/5-apis-to-develop-your-next-project-1de5</link>
      <guid>https://dev.to/basecampxd/5-apis-to-develop-your-next-project-1de5</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;I like the power of APIs. They turn simple applications into more useful, informative applications. I have been using APIs to turn my thoughts into a real-life problem-solving application by creating weather and Covid19 statistics web apps.&lt;/p&gt;

&lt;p&gt;You can develop some great applications with the use of the following APIs. &lt;/p&gt;

&lt;p&gt;So let's begin the list.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#api-football"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.api-football.com/"&gt;API Football&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;If you are a fan of a sport like a football, then it will be more fun and exciting to work on a project that deals with football data. API football provides tons of data including teams, fixtures, live scores, predictions, etc.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XTCcAqrN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9tzjpywjjz1hwzbvgecz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XTCcAqrN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9tzjpywjjz1hwzbvgecz.png" alt="API Football"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#frankfurter"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.frankfurter.app/"&gt;Frankfurter&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Frankfurter provides current and historic foreign exchange rates. Rates are based on data published by the European Central Bank. It's totally free and does not require a key to fetch data. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rgXcvT7J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mug49ouynwatwpe4iev0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rgXcvT7J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mug49ouynwatwpe4iev0.png" alt="Frankfurter Currency data API"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#poke-api"&gt;
  &lt;/a&gt;
  &lt;a href="https://pokeapi.co/"&gt;Poke API&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;All Pokémon data at one place with poke API. We all know about Pokémon, we used to watch the show in our childhood and many even today. This API shows data of individual Pokémon.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nINhIlYw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gcr47bwd0a8dk4env6r1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nINhIlYw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gcr47bwd0a8dk4env6r1.png" alt="Poke API"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can use the data to develop games for pokemon lovers using the statistics. &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#responsive-voice"&gt;
  &lt;/a&gt;
  &lt;a href="https://responsivevoice.org/api/"&gt;Responsive Voice&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Responsive Voice API lets you convert text into speech. You can change the voice model based on text and language. You can also modify pitch, rate, and volume.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nOG4pfVW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://techcrunch.com/wp-content/uploads/2017/08/speech-recognition.png%3Fw%3D730%26crop%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nOG4pfVW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://techcrunch.com/wp-content/uploads/2017/08/speech-recognition.png%3Fw%3D730%26crop%3D1" alt="Responsive Voice"&gt;&lt;/a&gt;&lt;br&gt;
image via &lt;a href="https://techcrunch.com/wp-content/uploads/2017/08/speech-recognition.png?w=730&amp;amp;crop=1"&gt;TechCrunch&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#themoviedb"&gt;
  &lt;/a&gt;
  &lt;a href="https://developers.themoviedb.org/3"&gt;TheMovieDB&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;The MovieDB as the name suggests it has a database for movies. You can use their API to develop web app revolving around movies and TV shows. It's free to use API, you only need a The MovieDB account to use.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XTLvfXBy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/67hhvclyreq5nq2wyymw.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XTLvfXBy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/67hhvclyreq5nq2wyymw.jpg" alt="TheMovieDB"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can develop a movie recommendation application using all the data.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#weekly-newsletter-of-surajondev"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.getrevue.co/profile/surajondev"&gt;Weekly Newsletter of SurajOnDev&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;Time for &lt;a href="https://michelletanpy.hashnode.dev/what-ive-learnt-the-importance-of-self-promotion"&gt;self promotion&lt;/a&gt;. This is a weekly newsletter by myself.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cL1qWSEE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/boivc5mdfzzs2kt0s5wg.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cL1qWSEE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/boivc5mdfzzs2kt0s5wg.PNG" alt="Weekly Newsletter of SurajOnDev"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-you-will-get"&gt;
  &lt;/a&gt;
  What you will get?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Read of the Week&lt;/strong&gt;: 5 best articles hand-picked by myself from different platforms. This article will be developer, self-growth, and productivity-oriented.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Tool of the Week&lt;/strong&gt;: A resource or tool link that will help in easing your work.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Our latest blog post&lt;/strong&gt;: Latest 3 blog post from SurajOnDev that is me.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Free eBook and Resources&lt;/strong&gt;: Occasionally you will get free eBook that are by developers and for developers.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Frequency&lt;/strong&gt;: Weekly&lt;br&gt;
&lt;strong&gt;Subscribe Here&lt;/strong&gt;:  &lt;a href="https://tripetto.app/run/4OQIUAO89L"&gt;Weekly Newsletter of SurajOnDev&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#last-note"&gt;
  &lt;/a&gt;
  Last Note
&lt;/h1&gt;

&lt;p&gt;These APIs will help you to develop the website and you can use the data to run scripts for more functionality.&lt;/p&gt;

&lt;p&gt;I hope you will create your next project using these APIs.&lt;/p&gt;

&lt;p&gt;Thanks for reading the blog post.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>codenewbie</category>
      <category>python</category>
    </item>
    <item>
      <title>Learning with Self-Help</title>
      <author>John Phillips</author>
      <pubDate>Tue, 17 Aug 2021 12:36:00 +0000</pubDate>
      <link>https://dev.to/john_k_phillips/learning-with-self-help-o3d</link>
      <guid>https://dev.to/john_k_phillips/learning-with-self-help-o3d</guid>
      <description>&lt;p&gt;Let's start with introductions. &lt;br&gt;
Hi, I'm John Phillips.&lt;br&gt;
I'm an aspiring web developer.&lt;/p&gt;

&lt;p&gt;Like everyone else, I have many flaws, I embrace, resent and blame them. I'm not ashamed to discuss my "failures", or my "flaws", consequently the creation of this post.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;So, let's get started...&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#my-thoughts-on-selfhelp"&gt;
  &lt;/a&gt;
  My thoughts on "self-help".
&lt;/h2&gt;

&lt;p&gt;I've always &lt;strong&gt;HATED&lt;/strong&gt; self-help advice, still do actually.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#why"&gt;
  &lt;/a&gt;
  Why?
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;Harmful Advice. ✅&lt;/li&gt;
&lt;li&gt;Empty Promises. ✅&lt;/li&gt;
&lt;li&gt;Egotistical Writers. ✅ &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now, this is a stern belief, I know, so why have I found my success in learning and believe it's an incredible approach to learning?&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#failures"&gt;
  &lt;/a&gt;
  Failures
&lt;/h3&gt;

&lt;p&gt;I've failed at too many things in life, &lt;em&gt;of course due to my &lt;br&gt;
own self-loathing&lt;/em&gt;. I struggle to continue working on topics I believed I wanted to understand.&lt;/p&gt;

&lt;p&gt;I had attempted web development several times over the course of a decade, and I'll say again, due to my &lt;strong&gt;OWN&lt;/strong&gt; self-loathing, decided to stop trying.&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#the-blame"&gt;
  &lt;/a&gt;
  The Blame
&lt;/h4&gt;

&lt;p&gt;A few years had passed, blaming my 'compulsive nature' to abandon everything I work on, I found it easy to pick up and ditch projects...&lt;/p&gt;

&lt;p&gt;Of course, this blame game was an issue, it was an excuse that many of us make, taking pity on our-self's, temporarily making us feel good.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#the-resentment"&gt;
  &lt;/a&gt;
  The Resentment
&lt;/h4&gt;

&lt;p&gt;I resented my 'compulsive nature' and refused to learn anything else, believing it just wasn't my 'destiny' to be educated, successful or even happy.&lt;/p&gt;

&lt;p&gt;This was starting to become a problem.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#embracing-my-flaws"&gt;
  &lt;/a&gt;
  Embracing My Flaws
&lt;/h5&gt;

&lt;p&gt;On the 12th of August, 2021. I decided to stop self-loathing and actually solve this "problem" because that's all it was, a problem that required solving.&lt;/p&gt;

&lt;p&gt;I wanted to become a developer, however; I knew that this wasn't going to come to fruition unless I &lt;strong&gt;fixed&lt;/strong&gt; this problem I have.&lt;/p&gt;

&lt;p&gt;I delved into books, guides, blogs, videos you name it, attempting to solve this 'problem' and after a few months, I made progress.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#the-problem"&gt;
  &lt;/a&gt;
  The Problem
&lt;/h3&gt;

&lt;p&gt;This "advice" had given me a quick fix, these self-help guru's would talk about their stories of success, never actually explaining the pain, sacrifice and stress they took to get to their goals; hell, perhaps they fluked their success, but, this isn't going to happen, not to me, you or perhaps anyone else reading this.&lt;/p&gt;

&lt;p&gt;Following and believing in this advice was ruining my progress, my self-worth and my confidence. Blindly following these Guru's was just irresponsible and stupid, to be blunt. &lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#the-fix"&gt;
  &lt;/a&gt;
  The Fix
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;What pain do you want in your life?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This was a quote from a &lt;a href="https://www.audible.co.uk/pd/The-Subtle-Art-of-Not-Giving-a-F-ck-Audiobook/B01MG9416Z?source_code=M2M30DFT1BkSH101514006S&amp;amp;ipRedirectOverride=true&amp;amp;gclid=Cj0KCQjwvO2IBhCzARIsALw3ASp_st7hoPC00_Y4jynGH35DVg7X1v3wHkSIHS5S98Px5RgfDtb07DEaArk-EALw_wcB&amp;amp;gclsrc=aw.ds"&gt;book&lt;/a&gt; published &lt;a href="https://twitter.com/IAmMarkManson?ref_src=twsrc%5Egoogle%7Ctwcamp%5Eserp%7Ctwgr%5Eauthor"&gt;by Mark Manson.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Mark is like the Ghost of Christmas. Brutally telling you how it is and not what you'd like it to be.&lt;/p&gt;

&lt;p&gt;This particular quote caught my attention, and I believe this is how I've failed and if you feel the same way, perhaps you are too.&lt;/p&gt;

&lt;p&gt;Mark explains that in life, everything has a sacrifice. Simply put; A house needs &lt;strong&gt;repairs&lt;/strong&gt;, A job comes with &lt;strong&gt;stress&lt;/strong&gt; and a relationship requires &lt;strong&gt;work&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Undoubtedly, you're happy to go through these 'pains' and that's exactly why you're untroubled by the thought of them; likewise with learning.&lt;/p&gt;

&lt;p&gt;I believe this is a great philosophy to follow. So far, It hasn't failed me, I am happy to go through the pain and struggles of being a developer and that's exactly why I'm still here; rather it is the pain I enjoy that has allowed me to continue my fight.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#wrapping-up-my-points"&gt;
  &lt;/a&gt;
  Wrapping Up My Points
&lt;/h3&gt;

&lt;p&gt;Ok... My points? This perhaps dragged on for far too long; however, I want to show you that what you're going through is common, especially for beginners, I still struggle even now, a year later.&lt;/p&gt;

&lt;p&gt;Following blindly to one guru is a waste of your time and effort, ensure you &lt;strong&gt;filter&lt;/strong&gt; the useful quotes and information that tailors to you.&lt;/p&gt;

&lt;p&gt;Self-help Guru's that try and give you a boost of encouragement are mostly doing what we call in retail 'customer satisfaction'.&lt;br&gt;
Don't fall into the same pitfalls I did and receive a burst of motivation.&lt;/p&gt;

&lt;p&gt;Solving your own personal issues is crucial to learning, if you find yourself continuing to blame a particular 'feature' of your character, then find a solution for it.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Easier said that done, for sure, I still struggle to this day, but after a year of struggles, my problem has become more of an asset and hence, embracing it.&lt;/em&gt;&lt;/p&gt;




&lt;p&gt;NOTE: Re-reading this, I planned on leaving it unpublished; however, I will post it regardless of how I feel in hopes that it motivates someone to do something of similar nature.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;P.S This is my first blog, It's probably flawed, messy and not well structured. But, It's an attempt and something I aim to get better at.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Thanks for reading. Best of luck learning.&lt;/p&gt;

</description>
      <category>learning</category>
      <category>discuss</category>
      <category>webdev</category>
      <category>motivation</category>
    </item>
    <item>
      <title>2. Implement custom Omit Type in TypeScript</title>
      <author>Ajay kumbhare</author>
      <pubDate>Tue, 17 Aug 2021 12:14:09 +0000</pubDate>
      <link>https://dev.to/ajaykumbhare/2-implement-custom-omit-type-in-typescript-2i0g</link>
      <guid>https://dev.to/ajaykumbhare/2-implement-custom-omit-type-in-typescript-2i0g</guid>
      <description>&lt;h3&gt;
  &lt;a href="#implement-omitlttype-keysgt"&gt;
  &lt;/a&gt;
  Implement Omit&amp;lt;Type, Keys&amp;gt;
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Constructs a type by picking all properties from Type and then removing Keys.&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;Todo&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;completed&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;boolean&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you see the above interface it has 3 properties title, description, and completed. If you want to remove title key from that interface then you can use the Omit utility type. But here I am going to create a custom Omit type that will do the same thing as the Omit utility type.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;CustomOmit&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;K&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;keyof&lt;/span&gt; &lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;Key&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;keyof&lt;/span&gt; &lt;span class="nx"&gt;T&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;Key&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;K&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;never&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Key&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;Key&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you see the above code snippet which expects Type and Keys. Omit will only remove keys from the Type or Interface which we are passing that's why I have return &lt;code&gt;K extends keyof T&lt;/code&gt;. and later we just need to check key is available in K if it's available we will return never else will return keyValue pair.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;TodoPreview&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Omit&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Todo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;title&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;TodoPreviewCustomOmit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;CustomOmit&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Todo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;title&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Above both snippets will work the same and it will pick all key/value except title key from Todo type.&lt;/p&gt;

&lt;p&gt;For Ex.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;todo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;TodoPreviewCustomOmit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;completed&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;boolean&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For more details please refer &lt;a href="https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys"&gt;official doc&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>typescript</category>
      <category>webdev</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>How to make all developer heroes?</title>
      <author>Aurel</author>
      <pubDate>Tue, 17 Aug 2021 11:24:22 +0000</pubDate>
      <link>https://dev.to/lighta971/how-to-make-all-developer-heroes-195c</link>
      <guid>https://dev.to/lighta971/how-to-make-all-developer-heroes-195c</guid>
      <description>&lt;p&gt;As a CTO, I try to reduce "bus factor" and the "hero developer" problems.&lt;br&gt;
Why these are problems? Because to scale the team, knowledge needs to be scaled too.&lt;br&gt;
Scaling technical knowledge enable newcomers onboarding, deeper collaboration, and better quality development.&lt;/p&gt;

&lt;p&gt;So what stopped us to spread this knowledge?&lt;br&gt;
Well, in a pre-product market fit startup with a fast ever-changing environment&lt;br&gt;
the short-term cost of writing documentation is high.&lt;/p&gt;

&lt;p&gt;How did you tackle this problem? Or how did you see it tackled?&lt;/p&gt;

&lt;p&gt;Also, I bootstrapped a solution below, tell me your thoughts.&lt;br&gt;
&lt;a href="https://aurel.unstack.website/beta"&gt;https://aurel.unstack.website/beta&lt;/a&gt;&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>productivity</category>
      <category>documentation</category>
    </item>
    <item>
      <title>A 97.7% JavaScript Template Blog Website</title>
      <author>Andreas Pappas</author>
      <pubDate>Tue, 17 Aug 2021 11:19:40 +0000</pubDate>
      <link>https://dev.to/andrewpap22/a-97-7-javascript-template-blog-website-3onc</link>
      <guid>https://dev.to/andrewpap22/a-97-7-javascript-template-blog-website-3onc</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9VtBu1WP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://s6.gifyu.com/images/gitclone_blog.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9VtBu1WP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://s6.gifyu.com/images/gitclone_blog.gif" alt="clone blog instructions gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hi there 👋,&lt;/p&gt;

&lt;p&gt;I'm hugely excited to finally announce the "release" of my Blog website as a template to be modified freely and be used by anyone to his liking. 🥳&lt;/p&gt;

&lt;p&gt;I've been working the last couple of months with this project on my spare time and I'm really glad to finally get it completed and released on my beloved brother's name day❕&lt;/p&gt;

&lt;p&gt;Please do dive into the 📖 Blog post itself (you can find it in the comment section) to read my motivations and reasons about this project and head into the comment section to find the GitHub repository of it.&lt;/p&gt;

&lt;p&gt;🚨 SPOILER ALERT (don't read the title)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="cm"&gt;/**
 *
 * The project is made of
 *
 * 97.7% Javascript
 *
*/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Inside the Blog post itself besides my motivations for creating and publishing this, you will find detailed information on how to use it, modify it, play with it, test it and make it personal if you do find yourself liking it!&lt;/p&gt;

&lt;p&gt;As the Blog post itself is hugely detailed and mostly meant for beginners that would like to have a look at it, and get to learn how to build, host and deploy a blog or portfolio website that is entirely made in Javascript, but also learn about the 🍦 Javascript programming language itself through a tutorial-like repository that I do provide in it, I will not get into details into this announcement post.&lt;/p&gt;

&lt;p&gt;For a fast reference (for more experienced users) on how to get up and running with the project, please do have a look on the README file of the project's repository. Again you can find it in the comment section of this post.&lt;/p&gt;

&lt;p&gt;I'm really happy and excited to finally announce this project, so if you do find it useful do drop a comment below, maybe throw in a 🦄 or a ⭐ on the GitHub repository would really help and be appreciated!&lt;/p&gt;

&lt;p&gt;Obviously, comments, issues, thoughts, opinions and contributions are much more than welcome and appreciated! 🙏&lt;/p&gt;

&lt;p&gt;Thank you for your time! 🙂&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>showdev</category>
    </item>
    <item>
      <title>Presentation of "Markdown-Processor"</title>
      <author>Maxime Guilbert</author>
      <pubDate>Tue, 17 Aug 2021 11:12:03 +0000</pubDate>
      <link>https://dev.to/adaendra/presentation-of-markdown-processor-e6j</link>
      <guid>https://dev.to/adaendra/presentation-of-markdown-processor-e6j</guid>
      <description>&lt;p&gt;Today, we won't speak about a open source tool or talk about how to do something.&lt;/p&gt;

&lt;p&gt;Today, I'm proud to present you a personal project: "&lt;strong&gt;Markdown-Processor&lt;/strong&gt;"&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#presentation"&gt;
  &lt;/a&gt;
  Presentation
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;What is Markdown-Processor ?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Markdown-Processor is a npm CLI to help you to generate &lt;strong&gt;HTML&lt;/strong&gt; or &lt;strong&gt;PDF&lt;/strong&gt; from Markdown files.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Why creating a new CLI to do it?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;For two reasons :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;to be &lt;strong&gt;extensible&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;to be &lt;strong&gt;able to choose a theme!&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#to-be-extensible"&gt;
  &lt;/a&gt;
  To be extensible
&lt;/h3&gt;

&lt;p&gt;One thing I really want is to be able to add elements if needed. &lt;em&gt;(Like liquid tags or completly new tags)&lt;/em&gt; You will see later that I already have one extension applied.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#to-be-able-to-choose-a-theme"&gt;
  &lt;/a&gt;
  To be able to choose a theme
&lt;/h3&gt;

&lt;p&gt;Depending if you are working, writing a book, writing some notes for your next tabletop rpg session..., you may need a specific theme. &lt;/p&gt;

&lt;p&gt;So here it is! Currently, 3 themes are available :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;default&lt;/li&gt;
&lt;li&gt;dark&lt;/li&gt;
&lt;li&gt;rpg&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And you already can create and use yours!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;If you want to add your theme to the project, don't hesitate to do a Pull Request!&lt;/em&gt; 😉&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#demo"&gt;
  &lt;/a&gt;
  Demo
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#setup"&gt;
  &lt;/a&gt;
  Setup
&lt;/h3&gt;

&lt;p&gt;First, you need to install it with the following command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm i markdown-processor
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you want to generate some PDF files, install &lt;strong&gt;pagedjs&lt;/strong&gt; and &lt;strong&gt;pagedjs-cli&lt;/strong&gt; too.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-g&lt;/span&gt; pagedjs-cli pagedjs
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#commands"&gt;
  &lt;/a&gt;
  Commands
&lt;/h3&gt;

&lt;p&gt;Process the TEST.md process &lt;em&gt;(by default it will be an HTML file with a timestamped name)&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;md-processor process &lt;span class="nt"&gt;-f&lt;/span&gt; &lt;span class="s2"&gt;"TEST.md"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Process multiple files&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;md-processor process &lt;span class="nt"&gt;-f&lt;/span&gt; &lt;span class="s2"&gt;"TEST.md"&lt;/span&gt; &lt;span class="nt"&gt;-f&lt;/span&gt; &lt;span class="s2"&gt;"TEST2.md"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Use a specific theme&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;md-processor process &lt;span class="nt"&gt;-f&lt;/span&gt; &lt;span class="s2"&gt;"TEST.md"&lt;/span&gt; &lt;span class="nt"&gt;-t&lt;/span&gt; &lt;span class="s2"&gt;"rpg"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create a pdf file&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;md-processor process &lt;span class="nt"&gt;-f&lt;/span&gt; &lt;span class="s2"&gt;"TEST.md"&lt;/span&gt; &lt;span class="nt"&gt;-t&lt;/span&gt; &lt;span class="s2"&gt;"rpg"&lt;/span&gt; &lt;span class="nt"&gt;-o&lt;/span&gt; pdf
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#extensions"&gt;
  &lt;/a&gt;
  Extensions
&lt;/h3&gt;

&lt;p&gt;Here is the first extension that we have : &lt;strong&gt;Have differents styles of blockquotes&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If it's a classic message, an info, an alert or a warning, I don't want to have exactly the same display. So, with a simple element on the first line, we are now able to have more customizations available.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#normal"&gt;
  &lt;/a&gt;
  Normal
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight markdown"&gt;&lt;code&gt;&lt;span class="gt"&gt;&amp;gt; Normal&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AN8K6u9B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d4364h0jwypaz9k2omc2.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AN8K6u9B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d4364h0jwypaz9k2omc2.PNG" alt="blockquote normal"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#info"&gt;
  &lt;/a&gt;
  Info
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight markdown"&gt;&lt;code&gt;&lt;span class="gt"&gt;&amp;gt; **[INFO]**&lt;/span&gt;
&lt;span class="gt"&gt;&amp;gt; Info&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AytOMVdd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/04qtuw2qni6mh6ydn1qu.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AytOMVdd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/04qtuw2qni6mh6ydn1qu.PNG" alt="blockquote info"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#warning"&gt;
  &lt;/a&gt;
  Warning
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight markdown"&gt;&lt;code&gt;&lt;span class="gt"&gt;&amp;gt; **[WARNING]**&lt;/span&gt;
&lt;span class="gt"&gt;&amp;gt; Warning&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Te4obsrF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6j5icvkth3waoqkmlsys.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Te4obsrF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6j5icvkth3waoqkmlsys.PNG" alt="blockquote warning"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#alert"&gt;
  &lt;/a&gt;
  Alert
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight markdown"&gt;&lt;code&gt;&lt;span class="gt"&gt;&amp;gt; **[ALERT]**&lt;/span&gt;
&lt;span class="gt"&gt;&amp;gt; Alert&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vvPRJw3K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/87f7rgkrem4r657jklqr.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vvPRJw3K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/87f7rgkrem4r657jklqr.PNG" alt="blockquote alert"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;I hope you enjoyed this quick presentation. 🍺&lt;/p&gt;

&lt;p&gt;You need to know that I haven't talked about all the options available &lt;em&gt;(add a table of content, process a full folder of markdown files...)&lt;/em&gt; and a lot of other elements will come.&lt;/p&gt;

&lt;p&gt;So if you want to have other posts to describe all the functionalities, please leave a comment to let me know.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#links"&gt;
  &lt;/a&gt;
  Links
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;GitHub project : &lt;a href="https://github.com/Adaendra/markdown_processor"&gt;https://github.com/Adaendra/markdown_processor&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;NPM page : &lt;a href="https://www.npmjs.com/package/markdown-processor"&gt;https://www.npmjs.com/package/markdown-processor&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>showdev</category>
    </item>
    <item>
      <title>Windows 11 Settings menu using vanilla HTML, CSS &amp; JS</title>
      <author>yashash1511</author>
      <pubDate>Tue, 17 Aug 2021 11:11:37 +0000</pubDate>
      <link>https://dev.to/yashash1511/windows-11-settings-menu-using-vanilla-html-css-js-2b53</link>
      <guid>https://dev.to/yashash1511/windows-11-settings-menu-using-vanilla-html-css-js-2b53</guid>
      <description>&lt;p&gt;Hello devs,&lt;/p&gt;

&lt;p&gt;I recreated the windows 11 settings app for the web. Made in vanilla HTML, CSS &amp;amp; JS. Wanna check it out?&lt;/p&gt;

&lt;p&gt;Live demo: &lt;a href="https://yashash1511.github.io/win11-settings"&gt;https://yashash1511.github.io/win11-settings&lt;/a&gt;&lt;br&gt;
Github: &lt;a href="https://github.com/yashash1511/win11-settings"&gt;https://github.com/yashash1511/win11-settings&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Below are some screenshots :)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5zfpkLt---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/27hfmri48tslscqs2te4.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5zfpkLt---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/27hfmri48tslscqs2te4.jpeg" alt="win11 settings system"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Lz2MWHjy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mily3w9m7l8c25mefv4j.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Lz2MWHjy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mily3w9m7l8c25mefv4j.jpeg" alt="win11 settings gaming"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--x7-nb-ob--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/woad99dzx1ag8bkgwucb.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--x7-nb-ob--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/woad99dzx1ag8bkgwucb.jpeg" alt="win11 settings bluetooth"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_4Ge1afz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9ns7e5e1djlhc0oua095.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_4Ge1afz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9ns7e5e1djlhc0oua095.png" alt="win11 settings dark mode"&gt;&lt;/a&gt;It even has dark mode:)&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>css</category>
    </item>
    <item>
      <title>Python Trim: Remove Whitespaces From Strings</title>
      <author>hrishikesh1990</author>
      <pubDate>Tue, 17 Aug 2021 10:52:02 +0000</pubDate>
      <link>https://dev.to/hrishikesh1990/python-trim-remove-whitespaces-from-strings-38dd</link>
      <guid>https://dev.to/hrishikesh1990/python-trim-remove-whitespaces-from-strings-38dd</guid>
      <description>&lt;p&gt;In this short tutorial, we look at how to use Python to trim a string. We also look at all the built-in methods to remove whitespaces in a string. &lt;/p&gt;

&lt;p&gt;This tutorial is a part of our initiative at &lt;a href="https://flexiple.com/"&gt;Flexiple&lt;/a&gt;, to write short curated tutorials around often used or interesting concepts.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#table-of-contents-python-trim"&gt;
  &lt;/a&gt;
  Table of Contents - Python Trim
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#why-do-we-use-python-to-trim-whitespaces"&gt;Why do we use Python to trim whitespaces?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#3-methods-to-remove-whitespaces"&gt;3 methods to remove whitespaces&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#strip"&gt;strip()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lstrip"&gt;lstrip()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#rstrip"&gt;rstrip()&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;a href="#code-and-explanation"&gt;Code and Explanation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#closing-thoughts-python-trim"&gt;Closing thoughts - Python Trim&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#why-do-we-use-python-to-trim-whitespaces"&gt;
  &lt;/a&gt;
  Why do we use Python to trim whitespaces?
&lt;/h2&gt;

&lt;p&gt;Python trim essentially means removing whitespaces from a string. While dealing with strings in files or user input strings, whitespaces are a common problem. Since Python considers whitespaces as a character, they would also be printed in case you decide to print the string. In some cases, it could break the logic of your code as well. &lt;/p&gt;

&lt;p&gt;So it is best to check for and remove whitespaces in strings and Python comes with 3 inbuilt methods to remove whitespaces. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-methods-to-remove-whitespaces"&gt;
  &lt;/a&gt;
  3 methods to remove whitespaces:
&lt;/h2&gt;

&lt;p&gt;Since all the methods have the same syntax I have explained the concepts first and added a code snipped of all the methods in the end. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#strip"&gt;
  &lt;/a&gt;
  strip():
&lt;/h3&gt;

&lt;p&gt;The strip() method is the most commonly accepted method to remove whitespaces in Python. It is a Python built-in function that trims a string by removing all leading and trailing whitespaces. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#strip-syntax-is-as-follows"&gt;
  &lt;/a&gt;
  strip() syntax is as follows:
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;characters&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, “string” refers to the string containing the whitespaces&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#parameters"&gt;
  &lt;/a&gt;
  Parameters:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Characters - Optional, a set of characters that you want to remove. if left empty whitespaces would be removed&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#lstrip"&gt;
  &lt;/a&gt;
  lstrip():
&lt;/h3&gt;

&lt;p&gt;lstrip() in Python is used to trim the string from the left. This means that all whitespaces from the left side of the string will be removed. &lt;/p&gt;

&lt;p&gt;The syntax and parameters are the same as strip()&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#rstrip"&gt;
  &lt;/a&gt;
  rstrip():
&lt;/h3&gt;

&lt;p&gt;rstrip() does the opposite of lstrip(). It removes all the whitespaces from the right side of the string. &lt;/p&gt;

&lt;p&gt;The syntax and parameters are again similar to strip()&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#code-and-explanation"&gt;
  &lt;/a&gt;
  Code and Explanation:
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;str_1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"  Hire freelance developers  "&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;str_1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="c1"&gt;#Output = "Hire freelance developers"
&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;str_1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rstrip&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="c1"&gt;#Output = "  Hire freelance developers"
&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;str_1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lstrip&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="c1"&gt;#Output = "Hire freelance developers  "
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see we have used strip() first and all the leading and trailing whitespaces were removed. &lt;/p&gt;

&lt;p&gt;In the following output, the trailing and leading whitespace have been removed as we have used rstrip() and lstrip() respectively. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#closing-thoughts-python-trim"&gt;
  &lt;/a&gt;
  Closing thoughts - Python Trim
&lt;/h2&gt;

&lt;p&gt;Like most others, I would also recommend using strip() as it is hard to judge if the string would contain leading or trailing whitespaces. Hence strip() is the safest bet for performing a Python trim. &lt;/p&gt;

&lt;p&gt;However, lstrip() and rstrip() serve very specific use cases and I would recommend practicing them as you might come across a suitable use case. &lt;/p&gt;

</description>
      <category>python</category>
      <category>beginners</category>
      <category>tutorial</category>
      <category>programming</category>
    </item>
    <item>
      <title>Solving Angular slow renders with NgRx selectors</title>
      <author>Tim Deschryver</author>
      <pubDate>Tue, 17 Aug 2021 10:35:21 +0000</pubDate>
      <link>https://dev.to/timdeschryver/solving-angular-slow-renders-with-ngrx-selectors-32m8</link>
      <guid>https://dev.to/timdeschryver/solving-angular-slow-renders-with-ngrx-selectors-32m8</guid>
      <description>&lt;p&gt;Follow me on Twitter at &lt;a href="https://timdeschryver.dev/twitter"&gt;@tim_deschryver&lt;/a&gt; | Subscribe to the &lt;a href="https://timdeschryver.dev/newsletter"&gt;Newsletter&lt;/a&gt; | Originally published on &lt;a href="https://timdeschryver.dev/blog/solving-angular-slow-renders-with-ngrx-selectors"&gt;timdeschryver.dev&lt;/a&gt;.&lt;/p&gt;




&lt;p&gt;This week I got to work on a project that had some difficulties to render an Angular template efficiently.&lt;br&gt;
During a (re)render, the screen froze and became unresponsive until the render cycle settled.&lt;br&gt;
The template itself wasn't too fancy, it's just a couple of CRUD tables with tabular data to show the working schedule of an employer on a monthly basis. Each table (a week) does have between 10 and 30 rows, in total, this means that there are between 50 and 150 rows on the screen.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4y_fY58Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://timdeschryver.dev/blog/solving-angular-slow-renders-with-ngrx-selectors/images/screen.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4y_fY58Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://timdeschryver.dev/blog/solving-angular-slow-renders-with-ngrx-selectors/images/screen.png" alt="A user interface that has a header with some details, and 4 tables with tabular data"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;While the code wasn't optimized, I was a bit surprised that Angular has difficulties rendering the view.&lt;br&gt;
That's why I send out a &lt;a href="https://twitter.com/tim_deschryver/status/1425404252743245831"&gt;tweet&lt;/a&gt; with my recent experience. Some helpful friends responded to my tweet with improvements to solve this rendering problem.&lt;/p&gt;

&lt;p&gt;All of the suggestions are valid (and easy to make) tweaks to reduce the number of change detection cycles, which is the underlying problem.&lt;br&gt;
For example:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;to use the &lt;code&gt;OnPush&lt;/code&gt; strategy instead of the &lt;code&gt;Default&lt;/code&gt; strategy;&lt;/li&gt;
&lt;li&gt;to use pure pipes to format properties to a human-readable text, to prevent extra method invocations;&lt;/li&gt;
&lt;li&gt;to use the &lt;code&gt;trackBy&lt;/code&gt; method, to prevent rows to be re-rendered in a &lt;code&gt;*ngFor&lt;/code&gt; element;&lt;/li&gt;
&lt;li&gt;to use a virtual scroller, to only show a few rows at a time;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;But to solve the problem, I went with a different route which led me to success before.&lt;/p&gt;

&lt;p&gt;I like to extract most (or all) of the logic outside of the component/template, to prepare a model before it reaches the component. This doesn't require you to know about specific Angular APIs, and it keeps the component small and clean. I also find this easier to test, debug, and to possibly change the behavior in the future.&lt;/p&gt;

&lt;p&gt;To get an understanding of what I mean by saying "preparing the model", let's first take a look at the code that was causing problems.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;*ngFor=&lt;/span&gt;&lt;span class="s"&gt;"let message of criticalMessages().filter(onlyUnique)"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;{{ message }}&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;*ngFor=&lt;/span&gt;&lt;span class="s"&gt;"let message of infoMessages().filter(onlyUnique)"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;{{ message }}&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;*ngFor=&lt;/span&gt;&lt;span class="s"&gt;"let parent of parents"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;{{ parent.title }}&lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;table&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;tr&lt;/span&gt; &lt;span class="na"&gt;*ngFor=&lt;/span&gt;&lt;span class="s"&gt;"let child of getChildRows(parent)"&lt;/span&gt; &lt;span class="na"&gt;[class]=&lt;/span&gt;&lt;span class="s"&gt;"getRowClass(child)"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;td&amp;gt;&amp;lt;icon&lt;/span&gt; &lt;span class="na"&gt;[icon]=&lt;/span&gt;&lt;span class="s"&gt;"getIcon(child)"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/icon&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;td&amp;gt;&lt;/span&gt;{{ formatDate(child) }}&lt;span class="nt"&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;td&lt;/span&gt; &lt;span class="na"&gt;[class]=&lt;/span&gt;&lt;span class="s"&gt;"getNameClass(child)"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;{{ formatName(child) }}&lt;span class="nt"&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;td&lt;/span&gt; &lt;span class="na"&gt;[class]=&lt;/span&gt;&lt;span class="s"&gt;"getAddressClass(child)"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;{{ formatAddress(child) }}&lt;span class="nt"&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;td&amp;gt;&lt;/span&gt;{{ formatDetails(child) }}&lt;span class="nt"&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;td&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;*ngIf=&lt;/span&gt;&lt;span class="s"&gt;"canEditChild(child)"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Edit&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
                &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;*ngIf=&lt;/span&gt;&lt;span class="s"&gt;"canDeleteChild(child)"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Delete&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/table&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Component&lt;/span&gt;&lt;span class="p"&gt;({})&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// parent has a list of children&lt;/span&gt;
    &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Input&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="nx"&gt;parents&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Parent&lt;/span&gt;&lt;span class="p"&gt;[];&lt;/span&gt;
    &lt;span class="c1"&gt;// a message can be critical or info and is bound to a child&lt;/span&gt;
    &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Input&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="nx"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Message&lt;/span&gt;&lt;span class="p"&gt;[];&lt;/span&gt;

    &lt;span class="nx"&gt;criticalMessages&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;critical&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;infoMessages&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;info&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;onlyUnique&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;self&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Message&lt;/span&gt;&lt;span class="p"&gt;[])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;description&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;indexOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;description&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;getChildRows&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;child&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Child&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;rows&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;child&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listOne&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;concat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;listTwo&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;rows&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;getIcon&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;child&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Child&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;messages&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;critical&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;some&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;childId&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;child&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;red-dot&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
            &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;getRowClass&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;child&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Child&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// simple logic based on child properties&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;getNameClass&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;child&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Child&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// simple logic based on child properties&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;getAddressClass&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;child&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Child&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// simple logic based on child properties&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;canEditChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;child&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Child&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// simple logic based on child properties&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;canDeleteChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;child&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Child&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// simple logic based on child properties&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you're an experienced Angular developer, I'm sure that you can spot the red flags in the code that we just saw.&lt;br&gt;
To get everyone on the same page, the main problem is that there are a lot of methods that are used inside of the template. While this is probably bearably noticeable at first, it can become a problem when the logic inside these methods gets more expensive. For every change detection cycle, all of the methods are executed. This means that a single method can be invoked multiple times before a render cycle has been completed.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If this is new information, I strongly suggest watching &lt;a href="https://www.youtube.com/watch?v=ybNj-id0kjY"&gt;Optimizing an Angular application&lt;/a&gt; by &lt;a href="https://twitter.com/mgechev"&gt;Minko Gechev&lt;/a&gt;. It sure helped me when I started my Angular journey.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now that we know the cause of the problem, we also know why we need to do our absolute best to reduce the number of change detection cycles and why it's important to keep methods in a template to a bare minimum.&lt;/p&gt;

&lt;p&gt;Instead of using the proposed fixes, let's take a look at the solution if the data is pre-processed.&lt;/p&gt;

&lt;p&gt;By looking at the template and the code, we notice that there's logic to build up the template.&lt;br&gt;
For example, the two heaviest methods are a method to concat two collections before sorting them, and the second-heaviest method is to only display the unique messages. Besides those, there were also a handful of simpler methods, for example, to format multiple properties, or to show/hide a button.&lt;/p&gt;

&lt;p&gt;If we move all of this view logic to outside the component, these methods are only invoked once, instead of with each change detection cycle.&lt;/p&gt;

&lt;p&gt;The application that I'm working on uses &lt;a href="https://ngrx.io"&gt;NgRx&lt;/a&gt;, which has the concept of &lt;a href="https://ngrx.io/guide/store/selectors"&gt;selectors&lt;/a&gt;. To me, selectors are the ideal location to move the view logic to.&lt;br&gt;
Don't worry if you're not using NgRx, this technique is also applicable to other state management tools, with just pure RxJS, and even across different frameworks.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;selectViewModel&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createSelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="c1"&gt;// get all the parents&lt;/span&gt;
  &lt;span class="nx"&gt;selectParents&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="c1"&gt;// get all the children&lt;/span&gt;
  &lt;span class="nx"&gt;selectChildren&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="c1"&gt;// get all the critical and info messages&lt;/span&gt;
  &lt;span class="nx"&gt;selectMessages&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;parents&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;messages&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// map the child id of critical messages into a set&lt;/span&gt;
    &lt;span class="c1"&gt;// this makes it easy and fast to lookup if a child has a critical message&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;messagesByChildId&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;messages&lt;/span&gt;
      &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="nx"&gt;messages&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;critical&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;childId&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Set&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="c1"&gt;// use a Set to get unique messages&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;criticalMessages&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;messages&lt;/span&gt;
      &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
          &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="nx"&gt;messages&lt;/span&gt;
              &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;critical&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
              &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;description&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
          &lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="p"&gt;]&lt;/span&gt;
      &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;

  &lt;span class="c1"&gt;// use a Set to get unique messages&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;infoMessages&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;messages&lt;/span&gt;
      &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
          &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="nx"&gt;messages&lt;/span&gt;
              &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;info&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
              &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;description&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
          &lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="p"&gt;]&lt;/span&gt;
      &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;criticalMessages&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;criticalMessages&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;infoMessages&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;infoMessages&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;parents&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;parents&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;parent&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;parent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;children&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;childrenForParent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;parent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listOne&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;parent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listTwo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;child&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
              &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;child&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="na"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;messagesByChildId&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;has&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;child&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;red-dot&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="na"&gt;date&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;child&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="na"&gt;state&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;child&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;confirmed&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;confirmed&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;pending&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="na"&gt;edited&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;child&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;edited&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;formatName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;child&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                &lt;span class="na"&gt;address&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;formatAddress&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;child&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                &lt;span class="na"&gt;details&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;formatDetails&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;child&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                &lt;span class="na"&gt;canEdit&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;canEdit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;child&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                &lt;span class="na"&gt;canDelete&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;canDelete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;child&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
              &lt;span class="p"&gt;};&lt;/span&gt;
            &lt;span class="p"&gt;})&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// 💡 Tip: create a type for the view model with `ReturnType` and `typeof`&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;ViewModel&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;ReturnType&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;selectViewModel&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With the above selector, I find it easier to see what's going on and to spot possible mistakes.&lt;br&gt;
You can also see how much simpler the component gets to be after this refactor.&lt;br&gt;
There's no logic anymore in the component, the template just loops over the collections and uses the properties of the (view)model. Nice and simple.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;*ngFor=&lt;/span&gt;&lt;span class="s"&gt;"let message of viewModel.criticalMessages"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;{{ message }}&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;*ngFor=&lt;/span&gt;&lt;span class="s"&gt;"let message of viewModel.infoMessages"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;{{ message }}&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;*ngFor=&lt;/span&gt;&lt;span class="s"&gt;"let parent of viewModel.parents"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;{{ parent.title }}&lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;table&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;tr&lt;/span&gt; &lt;span class="na"&gt;*ngFor=&lt;/span&gt;&lt;span class="s"&gt;"let child of parent.children"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;td&amp;gt;&amp;lt;icon&lt;/span&gt; &lt;span class="na"&gt;[icon]=&lt;/span&gt;&lt;span class="s"&gt;"child.icon"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/icon&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;td&amp;gt;&lt;/span&gt;{{ child.date }}&lt;span class="nt"&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;td&lt;/span&gt; &lt;span class="na"&gt;[attr.state]=&lt;/span&gt;&lt;span class="s"&gt;"child.state"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;{{ child.name }}&lt;span class="nt"&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;td&lt;/span&gt; &lt;span class="na"&gt;[attr.state]=&lt;/span&gt;&lt;span class="s"&gt;"child.state"&lt;/span&gt; &lt;span class="na"&gt;[attr.edited]=&lt;/span&gt;&lt;span class="s"&gt;"child.edited"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;{{ child.address }}&lt;span class="nt"&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;td&amp;gt;&lt;/span&gt;{{ child.details }}&lt;span class="nt"&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;td&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;*ngIf=&lt;/span&gt;&lt;span class="s"&gt;"child.canEdit"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Edit&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;*ngIf=&lt;/span&gt;&lt;span class="s"&gt;"child.canDelete"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Delete&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/table&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Besides that it's easier to read, you also don't have to worry about the Angular change detection mechanism.&lt;br&gt;
The logic inside the selector is only executed when the data changes, not on every change detection cycle.&lt;br&gt;
This makes it very efficient.&lt;/p&gt;

&lt;p&gt;Another advantage of this technique is that it's straightforward to test.&lt;/p&gt;

&lt;p&gt;To test the selector, I use the &lt;code&gt;projector&lt;/code&gt; method on the selector.&lt;br&gt;
The &lt;code&gt;projector&lt;/code&gt; exists for exactly this reason, making it easy for us to test the logic inside the selector.&lt;br&gt;
With it, we can call the selector with fixed variables, and then we assert the result of the selector.&lt;br&gt;
This is faster to execute and to write, compared to writing and running a component test.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;consists of unique messages&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;selectViewModel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;projector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;[{&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Parent 1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}],&lt;/span&gt;
    &lt;span class="p"&gt;[],&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;critical&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;critical message 1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;critical&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;critical message 2&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;critical&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;critical message 1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;info&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;info message 1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;criticalMessages&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toEqual&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;critical message 1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;critical message 2&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
  &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;infoMessages&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toEqual&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;info message 2&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When you do this and the view is still on the slow end, you can still resort to the Angular optimization techniques that were mentioned earlier. From my experience, for the applications that I create, this "fix" is usually sufficient, but it's always good to know that you have an extra pair of tricks in your bag.&lt;/p&gt;




&lt;p&gt;Follow me on Twitter at &lt;a href="https://timdeschryver.dev/twitter"&gt;@tim_deschryver&lt;/a&gt; | Subscribe to the &lt;a href="https://timdeschryver.dev/newsletter"&gt;Newsletter&lt;/a&gt; | Originally published on &lt;a href="https://timdeschryver.dev/blog/solving-angular-slow-renders-with-ngrx-selectors"&gt;timdeschryver.dev&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>angular</category>
      <category>performance</category>
    </item>
  </channel>
</rss>
