<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Portfolio Feedback </title>
      <author> Milena Martinez Caceres</author>
      <pubDate>Thu, 21 Jan 2021 23:27:35 +0000</pubDate>
      <link>https://dev.to/milenamar/portfolio-feedback-1ep3</link>
      <guid>https://dev.to/milenamar/portfolio-feedback-1ep3</guid>
      <description>&lt;p&gt;Hi all I‚Äôm a recent graduate Web developer and I just finished building my portfolio. Could you please check it out and give me your feedback? üë©üèª‚Äçüíª &lt;br&gt;
Thanks in advance ‚ò∫Ô∏è&lt;/p&gt;

&lt;p&gt;&lt;a href="https://milenamartinez.com/"&gt;Portfolio&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>My top tips for your first 3 months in a new tech role: An HONEST article. </title>
      <author>Laura Jane</author>
      <pubDate>Thu, 21 Jan 2021 20:21:43 +0000</pubDate>
      <link>https://dev.to/misslorsx/my-top-tips-for-your-first-3-months-in-a-new-tech-role-an-honest-article-1l7e</link>
      <guid>https://dev.to/misslorsx/my-top-tips-for-your-first-3-months-in-a-new-tech-role-an-honest-article-1l7e</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction" class="anchor"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;For some 2020 saw the rise in remote working, zoom fatigue, and the feeling of 'Groundhog day'. &lt;/p&gt;

&lt;p&gt;For others it saw the end of one career and the beginning of another in Tech.. &lt;strong&gt;I am one of those people.&lt;/strong&gt; You may recall seeing my first ever article on &lt;a href="https://dev.to/misslorsx/changing-career-at-29-childcare-web-development-5h26"&gt;DEV&lt;/a&gt; - About my transition from childcare to web development at 29. &lt;/p&gt;

&lt;p&gt;If I told you that having 3 months of hard learning, understanding, and stress whilst trying to get my head around the concepts of web development would lead me to a fantastic job as a designer with a company I love... Would you believe me? &lt;/p&gt;

&lt;p&gt;.... I wouldn't believe me either, but it's true, Through hard work, dedication, and passion for something I love more and more each day, I got there &amp;amp; it was so worth it!&lt;/p&gt;

&lt;p&gt;This is me on my first day at my new job - Do I look like im nervous and anxious in this photo?.... Because I was so scared, and I really felt the imposter syndrome kick in - I didn't sleep all night!:&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eyxRpkKv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/h9oc00y8p28tt8w3b1hu.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eyxRpkKv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/h9oc00y8p28tt8w3b1hu.jpeg" alt="Alt Text"&gt;&lt;/a&gt; &lt;br&gt;
(I'm in my favourite T-Shirt also!)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#so-what-has-the-first-3-months-of-my-first-role-in-tech-been-like" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;So what has the first 3 months of my first role in tech been like?&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;I'd be lying to you if I said it was a walk in the park unless that park was Jurassic park then yes; I've driven myself crazy trying to absorb all of the information, But it has been a great learning experience so far, all the same, An experience I cant wait to continue; From learning all about my role right through to daily tasks, trying to get things right, and working in a team as well as independently, I am loving every second of my new career!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#do-you-have-any-advice-for-new-employees" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Do you have any advice for new employees?&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Of course, that's the main reason I'm writing this article, to give you an insight and some tips/advice about surviving your first few months, Here are some of my top tips: &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-you-dont-need-to-apologize-for-learning" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;1.&lt;/strong&gt; You Don't need to apologize for learning.
&lt;/h2&gt;

&lt;p&gt;...As the title says the first few weeks of onboarding were tough, there were lots to learn &amp;amp; preferred ways of doing tasks, and I found and still do find myself constantly apologizing for getting something wrong, I would stress and worry when I didn't need to - It‚Äôs normal to get something wrong, your learning &amp;amp; adapting.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-you-still-need-to-take-that-break" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;2.&lt;/strong&gt; You still need to take that break.
&lt;/h2&gt;

&lt;p&gt;It‚Äôs OK to take a break: For the first week, I was so scared of asking to finish or to grab my lunch. I‚Äôm not even sure why. They are completely normal things to do. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-be-kind-to-your-posture" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;3.&lt;/strong&gt; Be kind to your posture.
&lt;/h2&gt;

&lt;p&gt;It's recommended that you stand up and stretch every 1hr for around 5-10 mins to avoid damaging your posture. You're on a computer on average 6hrs a day. Be kind to your posture, stand up and take a stretch, you'll be amazed at how much this can also help your mental health too. Doing this daily really helps me feel refreshed and less of a screen goblin. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-google-is-there-to-provide-answers-use-it" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;4.&lt;/strong&gt; Google is there to provide answers... Use it!
&lt;/h2&gt;

&lt;p&gt;I am always googling entities when I am designing, ask me to insert links or images - Fine - a pound or ‚Äò&amp;amp;‚Äô sign. Nope. Half of the links on my recurrent searches are purple, and I cringe every time I see them. We all know we can use Google to help us solve problems and provide answers, including the simplest ones, so use it, that's what it's there for - I think it helps you develop those particular soft skills called  'problem solving, initiative and solution-focusing' don't you? &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-dont-be-afraid-to-ask-for-help" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;5.&lt;/strong&gt; Don't be afraid to ask for help!
&lt;/h2&gt;

&lt;p&gt;I was not able to layer images at all and sat staring at my screen because I didn‚Äôt want to admit I was struggling, but after asking for help, I was on a zoom call straightaway being given some pointers on how to do it, and it was a HUGE relief. I felt silly for asking for help the first few times - I still do! especially when it's something so minor - But it's all part of the learning process, your company will expect you to ask questions!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-soft-skills-are-just-as-important-as-your-technical-skills" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;6.&lt;/strong&gt; Soft skills are just as important as your technical skills!
&lt;/h2&gt;

&lt;p&gt;Soft skills are just as important as your technical skills, empathy, understanding &amp;amp; co-operation are 3 of my top skills for new employees, (aside from just being a nice person of course!) if you co-operate, and bounce of your colleagues, it will make your new role a little less daunting! - Just because a colleague may do something one way, it doesn't mean your way is wrong, it just opens your mind to additional knowledge and options on those particular tasks/area. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-take-your-time" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;7.&lt;/strong&gt; Take your time
&lt;/h2&gt;

&lt;p&gt;A good job is better than a rushed job, taking your time and going at your own pace will help prevent feelings of stress and an 'I can't do this' attitude.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Conclusion&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;The few weeks/months of being in a new job are always difficult as you adapt, but just remember you're there for a reason - &lt;strong&gt;That company hired you &amp;amp; that's what I have to tell myself every day - So own that role!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Thank you for reading my article, to all those beginning their new roles, congratulations, and good luck. &lt;/p&gt;

&lt;p&gt;To those beginning your Web Development journey - You have got this (Feel free to bookmark this article when your time comes!)&lt;/p&gt;

</description>
      <category>codenewbie</category>
      <category>career</category>
      <category>webdev</category>
    </item>
    <item>
      <title>10 Colour Resources You Will Love</title>
      <author>Marcel Cruz</author>
      <pubDate>Thu, 21 Jan 2021 18:56:34 +0000</pubDate>
      <link>https://dev.to/marcelcruz/10-colour-resources-you-will-love-26lp</link>
      <guid>https://dev.to/marcelcruz/10-colour-resources-you-will-love-26lp</guid>
      <description>&lt;p&gt;Choosing a colour scheme for your project is crucial. It should make the user "feel" the message you're conveying, but even more importantly, it should be accessible, with an easy-to-distinguish elements hierarchy. And you probably also wanted it to look good.&lt;/p&gt;

&lt;p&gt;You get me. That's an important task.&lt;/p&gt;

&lt;p&gt;Gladly, several tools have been created to make the process of choosing a colour palette as easy and efficiently as possible, while keeping good aesthetics.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Shameless plug&lt;/em&gt;: that's why I created &lt;a href="https://devresourc.es"&gt;Dev Resources&lt;/a&gt;, to keep all the good things I found in the last years, including the ones mentioned in this article, in one place. No more forgetting or messy bookmarks.&lt;/p&gt;

&lt;p&gt;Without further ado, let's talk about 10 colour resources you will love.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#coolors" class="anchor"&gt;
  &lt;/a&gt;
  Coolors
&lt;/h1&gt;

&lt;p&gt;Generate or browse beautiful color combinations for your designs.&lt;/p&gt;

&lt;p&gt;üîó &lt;a href="https://coolors.co"&gt;https://coolors.co&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#data-viz-color-picker" class="anchor"&gt;
  &lt;/a&gt;
  Data Viz Color Picker
&lt;/h1&gt;

&lt;p&gt;A color palette generator for data visualizations.&lt;/p&gt;

&lt;p&gt;üîó &lt;a href="https://learnui.design/tools/data-color-picker.html"&gt;https://learnui.design/tools/data-color-picker.html&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#color-hunt" class="anchor"&gt;
  &lt;/a&gt;
  Color Hunt
&lt;/h1&gt;

&lt;p&gt;Color Hunt is a free and open platform for color inspiration with thousands of trendy hand-picked color palettes.&lt;/p&gt;

&lt;p&gt;üîó &lt;a href="https://colorhunt.co"&gt;https://colorhunt.co&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#gradient" class="anchor"&gt;
  &lt;/a&gt;
  Gradient
&lt;/h1&gt;

&lt;p&gt;Thousands of trendy color gradients in a curated collection that is updated daily. Get a fresh color gradient for your next design project and save all the gradients you like.&lt;/p&gt;

&lt;p&gt;üîó &lt;a href="https://gradienthunt.com"&gt;https://gradienthunt.com&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#happy-hues" class="anchor"&gt;
  &lt;/a&gt;
  Happy Hues
&lt;/h1&gt;

&lt;p&gt;See color palette inspiration on a real example website. As you click on different palettes every color on this site updates to give you context of how that color could be used for your design or illustration projects.&lt;/p&gt;

&lt;p&gt;üîó &lt;a href="https://www.happyhues.co"&gt;https://www.happyhues.co&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#colorspace" class="anchor"&gt;
  &lt;/a&gt;
  ColorSpace
&lt;/h1&gt;

&lt;p&gt;Here you can find the perfect matching color scheme for your next project! Generate nice color palettes, color gradients and much more! Your space for everything that has to do with color!&lt;/p&gt;

&lt;p&gt;üîó &lt;a href="https://mycolor.space"&gt;https://mycolor.space&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#palette-list" class="anchor"&gt;
  &lt;/a&gt;
  Palette List
&lt;/h1&gt;

&lt;p&gt;Palette List is a dynamic palette generator.&lt;/p&gt;

&lt;p&gt;üîó &lt;a href="https://www.palettelist.com"&gt;https://www.palettelist.com&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#canva" class="anchor"&gt;
  &lt;/a&gt;
  Canva
&lt;/h1&gt;

&lt;p&gt;Easily generate awesome color palettes from an image.&lt;/p&gt;

&lt;p&gt;üîó &lt;a href="https://www.canva.com/colors/color-palette-generator"&gt;https://www.canva.com/colors/color-palette-generator&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#material-design-palette" class="anchor"&gt;
  &lt;/a&gt;
  Material Design Palette
&lt;/h1&gt;

&lt;p&gt;Choose your favorite colors and get your Material Design palette generated and downloadable.&lt;/p&gt;

&lt;p&gt;üîó &lt;a href="https://www.materialpalette.com"&gt;https://www.materialpalette.com&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#colorslol" class="anchor"&gt;
  &lt;/a&gt;
  colors.lol
&lt;/h1&gt;

&lt;p&gt;A fun way to discover interesting color combinations.&lt;/p&gt;

&lt;p&gt;üîó &lt;a href="https://colors.lol"&gt;https://colors.lol&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#bonus-dev-resources" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Bonus:&lt;/strong&gt; Dev Resources
&lt;/h1&gt;

&lt;p&gt;As I mentioned at the beginning of this article, Dev Resources is a compilation of all resources you might need as a developer. You can find all the resources above and a lot more.&lt;/p&gt;

&lt;p&gt;No more forgetting or messy bookmarks.&lt;/p&gt;

&lt;p&gt;üîó &lt;a href="https://devresourc.es"&gt;https://devresourc.es&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;I hope you enjoy this list and that it helps you with your developer journey.&lt;/p&gt;

&lt;p&gt;And if you want to connect with me, you can reach me on Twitter as &lt;a href="https://twitter.com/marcelcruz"&gt;@marcelcruz&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Happy coding!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>design</category>
      <category>showdev</category>
      <category>css</category>
    </item>
    <item>
      <title>How Do You Take Notes?</title>
      <author>Ashley RNDLL</author>
      <pubDate>Thu, 21 Jan 2021 18:03:51 +0000</pubDate>
      <link>https://dev.to/xoshly/how-do-you-take-notes-mdm</link>
      <guid>https://dev.to/xoshly/how-do-you-take-notes-mdm</guid>
      <description>&lt;p&gt;When I started my self-learning boot camp experience, I lived for Google Docs. That was my go-to for note-taking. I have so many documents for every course and I even used Google Sheets to create spreadsheets of terms, definitions, and examples. &lt;/p&gt;

&lt;p&gt;So here is what I would do. I would copy and paste all of the information into the Google Docs editor and that was my note-taking. I did this method from the beginning of HTML to JavaScript.&lt;/p&gt;

&lt;p&gt;I thought that I was soooo smart. I thought that by doing this, I would have access to these notes digitally, anywhere and everywhere I could go. Which is true!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#but-here-is-where-i-messed-up" class="anchor"&gt;
  &lt;/a&gt;
  But here is where I messed up.
&lt;/h3&gt;

&lt;p&gt;Since I copy and pasted all of my notes, I wasn't retaining any of that information. I was literally skating through the courses, not applying what I had just learned, and now I am facing the consequences of doing so. &lt;/p&gt;

&lt;p&gt;I am relearning JavaScript because I did not comprehend it the first time. And if I am really honest, I am reviewing some CSS coursework as well, due to copy and pasting notes. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#so-now-i-am-taking-notes-the-old-fashioned-way-pen-and-paper" class="anchor"&gt;
  &lt;/a&gt;
  So now, I am taking notes the old fashioned way: Pen and Paper.
&lt;/h3&gt;

&lt;p&gt;Almost as good as peanut butter and jelly. LOL&lt;br&gt;
Yeah, it takes more time writing out all of that information, but it is paying off now. I am actually retaining more information writing it out than I was before. &lt;/p&gt;

&lt;p&gt;Either if you are using Pen and Paper, or digital software, I think the main takeaway is to &lt;strong&gt;Never Copy and Paste. PERIODT!&lt;/strong&gt; :)&lt;/p&gt;

</description>
      <category>codenewbie</category>
      <category>javascript</category>
      <category>beginners</category>
      <category>notetaking</category>
    </item>
    <item>
      <title>Force include classes in critical CSS</title>
      <author>Giulia Chiola</author>
      <pubDate>Thu, 21 Jan 2021 17:43:22 +0000</pubDate>
      <link>https://dev.to/giulia_chiola/force-include-classes-in-critical-css-bfc</link>
      <guid>https://dev.to/giulia_chiola/force-include-classes-in-critical-css-bfc</guid>
      <description>&lt;p&gt;&lt;a href="https://github.com/addyosmani/critical"&gt;Critical CSS&lt;/a&gt; build by &lt;a href="https://twitter.com/addyosmani"&gt;Addy Osmani&lt;/a&gt; is a useful library that extracts and inlines critical-path CSS in HTML pages.&lt;/p&gt;

&lt;p&gt;In the documentation page, there are a lot of configurations available &lt;em&gt;but&lt;/em&gt; they are not the only ones! üòè&lt;/p&gt;

&lt;p&gt;Critical CSS uses as its engine &lt;a href="https://github.com/pocketjoso/penthouse"&gt;penthouse&lt;/a&gt; which has in turn a lot of configuration options. One of them, is &lt;code&gt;forceInclude&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;forceInclude: [...]&lt;/code&gt; description from docs üìö:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Array of css selectors to keep in critical css, even if not appearing in critical viewport. Strings or regex (f.e. ['.keepMeEvenIfNotSeenInDom', /^.button/])&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;For instance, if we want to add a cta class injected via JS and not available in DOM nodes when the critical path is generated, we have to configure our critical CSS options like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;critical&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;generate&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;base&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;template-homepage.html&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;css&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;production/css/style-1.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;production/css/style-2.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="p"&gt;....&lt;/span&gt;
  &lt;span class="na"&gt;penthouse&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;forceInclude&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;OPTIONAL-CLASS-HERE&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



</description>
      <category>css</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Dealing with Failure</title>
      <author>Sergey Bykov</author>
      <pubDate>Thu, 21 Jan 2021 17:29:16 +0000</pubDate>
      <link>https://dev.to/temporalio/dealing-with-failure-5adf</link>
      <guid>https://dev.to/temporalio/dealing-with-failure-5adf</guid>
      <description>&lt;p&gt;I recently gave a talk at the CodeMesh conference, and I spent half of it reflecting on the seemingly boring topic of dealing with failures. The talk was primarily based on my experience building and helping others build cloud services with the Orleans framework. I chose this topic, because I believe dealing with failures is the most important aspect of any system. Oftentimes, it is what stands between a product that runs as expected and one that keeps producing surprises and causing investigations. When done right, handling of failures is what differentiates a professional from an amateur.&lt;/p&gt;

&lt;p&gt;The talk covered three approaches that I've seen and applied the most myself:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Request-Reply (a.k.a RPC)&lt;/li&gt;
&lt;li&gt;Using persistent queues&lt;/li&gt;
&lt;li&gt;Workflows&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#1-requestreply" class="anchor"&gt;
  &lt;/a&gt;
  1. Request-Reply
&lt;/h2&gt;

&lt;p&gt;In my opinion, Request-Reply (&lt;a href="https://en.wikipedia.org/wiki/Remote_procedure_call"&gt;a.k.a. RPC -- Remote Procedure Call&lt;/a&gt;), is the most natural way of handling failures. The client makes a request to the server and waits for a response (up to a timeout) and in most cases learns about a request processing failure immediately. This is how HTTP works, for example.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Note that by client and server I mean simply two sides of the call. They can be real client and server processes or merely two tiny objects communicating with each other within a distributed system.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Simplicity of RPC is good for the server.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;"I try to do what the request asked me to. If there's any failure downstream, I return it to the client. The client knows best what to do, to retry or not, how many times, with a backoff or not. My logic can stay simple."&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In our world of overly complicated systems, the value of simplicity is difficult to overstate. However, in this case the complexity burden gets pushed to the client. This puts the remote client at a disadvantage here. It has to operate based on the limited error information it received back. Sometimes it‚Äôs just a communication error or a timeout. These are a few of the many possible real life cases:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;An error may not be clear about whether the requested operation actually failed. It might have succeeded, and the error happened while trying to communicate success. This forces the client to either check for the status of the operations or retry anyway, assuming retrying the operation can be done safely, i.e. it is idempotent.&lt;/li&gt;
&lt;li&gt;The system may be temporarily unavailable, actually being down or network partitioned from the client. For mobile applications that's rather expected.&lt;/li&gt;
&lt;li&gt;Partial failures are hard to deal with. When we need to update multiple external systems at once, there is almost never a way to do that in an all-or-nothing manner, i.e. atomically. So, we have to handle retries and rollbacks, side effects, and all the inevitable complexity.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The last point I illustrated with the following picture:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VR9-H8ac--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/mxk7mkf9oxpulm275s53.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VR9-H8ac--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/mxk7mkf9oxpulm275s53.png" alt="Request-Reply"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this example, the client (square blue thing) makes a request to the server (round green thing). The server does not have the information locally to satisfy the client request and therefore needs to call two external services, blue and purple.&lt;/p&gt;

&lt;p&gt;If either of those two sub-calls fail, the server returns an error to the client. If the client were to retry the request, there would need to be a mechanism in the server that prevents duplicate calls to the external services.Idempotency is one method of addressing this issue. If the client decides to give up, there needs to be a way to revert any changes made as part of processing the request before the failure (in our example - of the call to the service A).&lt;/p&gt;

&lt;p&gt;A canonical example is money transfer from an account in one bank to an account in a different bank. However, there are many other scenarios with conceptually indentical requirements. In many cloud orchestration cases we need to allocate a resource (such as a virtual machine), and then perform a number of operations with it before returning it in a ready state to the client. If any operation fails, we don‚Äôt want to leave the VM running. Nor do we want to keep allocating new VMs for the same request.&lt;/p&gt;

&lt;p&gt;To summarize the pros and cons of the RPC approach.&lt;/p&gt;

&lt;p&gt;Pros:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Simplicity&lt;/li&gt;
&lt;li&gt;Obvious correlation between a request and a failure&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Cons:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Retries are client's responsibility and are difficult to do for a remote client&lt;/li&gt;
&lt;li&gt;Partial failures are difficult to handle&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#2-persistent-queues" class="anchor"&gt;
  &lt;/a&gt;
  2. Persistent Queues
&lt;/h2&gt;

&lt;p&gt;Putting a persistent queue between the client and server solves a number of problems. The client just needs to successfully send a request to the queue to ensure that it will eventually be processed.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gp6NdNhW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/ae7cul2mirgweanbwimr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gp6NdNhW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/ae7cul2mirgweanbwimr.png" alt="Queue"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Assuming the server only deletes a request from the queue after it is successfully processed, we get a simple retry mechanism. Due to the queue, even if the server crashes and restarts in between the attempts, it will keep trying to process the request again and again. The fact that the client (producer) is completely decoupled from the server (consumer), means the client can enqueue requests even if the server is down. This is the main reason why the publisher-subscriber architecture is so popular. Separation of subsystems in space and time is a nice property.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dazfgL05--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/lchmzlozke988w7zm0oi.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dazfgL05--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/lchmzlozke988w7zm0oi.jpeg" alt="Chang'e-5"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#a-simulated-illustration-of-change5-probes-orbiterreturners-separation-from-the-ascender-on-the-moon-orbit-december-6-2020-cnsa" class="anchor"&gt;
  &lt;/a&gt;
  &lt;em&gt;A simulated illustration of Chang'e-5 probe's orbiter-returner's separation from the ascender on the moon orbit, December 6, 2020. /CNSA&lt;/em&gt;
&lt;/h6&gt;

&lt;p&gt;For streaming one-way events, queues are great. But how can the client get a response in a queue based architecture? There's no good answer to this question that I'm aware of. Responses need to be delivered (somehow) back to the client, usually over another queue. Then the client needs a way to correlate requests and responses, typically done via correlation IDs. There also needs to be timeout mechanisms for dealing with requests that never received a response.&lt;/p&gt;

&lt;p&gt;Retries are simpler with queues compared to the RPC case. They are pretty much automatic, as long as the request stays in the queue. Calls to external services still need to be idempotent. However, we can't retry forever and have to deal with requests that keep failing to process. Either because they clog the queue (if the queue is ordered), consume too many resources or cause excessive load on the external services. The popular approach is to treat such requests as "poison messages", by moving them out of the queue to a different location ("dead letter" queue) for special handling.&lt;/p&gt;

&lt;p&gt;Pros:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Separation of systems in space and time&lt;/li&gt;
&lt;li&gt;Automatic retries&lt;/li&gt;
&lt;li&gt;Simple when no responses are expected&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Cons:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Additional dependency of the queueing technology&lt;/li&gt;
&lt;li&gt;Extra work to correlate responses&lt;/li&gt;
&lt;li&gt;Queues may clog&lt;/li&gt;
&lt;li&gt;Special handling of "poison messages"&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#3-workflows" class="anchor"&gt;
  &lt;/a&gt;
  3. Workflows
&lt;/h2&gt;

&lt;p&gt;Similar to queues, workflows take the burden of ensuring successful execution of requests off the client's shoulders. But instead of writing them into a shared queue, requests are persisted as part of an independent workflow document. That document makes processing requests stateful:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Tracking which steps of processing succeeded&lt;/li&gt;
&lt;li&gt;Tracking which steps of processing failed&lt;/li&gt;
&lt;li&gt;Remembering how many retries have been made, etc&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gUCgISGU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/73bcyv7lmjumsge0zwxb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gUCgISGU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/73bcyv7lmjumsge0zwxb.png" alt="Workflow"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Workflows have other important properties and use cases. They are a great way to implement long-running business processes, incorporate human operations and react to events. From the failure handling perspective, the most important aspect of workflows is the ability to be more intelligent when handling partial failures. Instead of being oblivious about what happened in the past, a workflow can keep a log of all relevant information and make informed decisions about what to retry and when.&lt;/p&gt;

&lt;p&gt;Workflows can be individually addressable, which makes them easier to scale compared with shared queues. It also allows for targeted inspection and even on-the-fly modification of their state, if needed.&lt;/p&gt;

&lt;p&gt;At the same time, workflows "inherit" most of the challenges of queues. Responses still need to be correlated with requests, although the individual addressability of workflows makes it easier for the client to query results. "Poison messages" are also still possible. They don't clog the queue anymore, but still require special handling.&lt;/p&gt;

&lt;p&gt;Pros:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Partial separation of systems in time and space&lt;/li&gt;
&lt;li&gt;Robust handling of partial failures&lt;/li&gt;
&lt;li&gt;Support for long-running operation&lt;/li&gt;
&lt;li&gt;Retries are "automatic"&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Cons:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Additional dependency on a workflow system or complexity of in-house implementation&lt;/li&gt;
&lt;li&gt;Extra work to correlate responses&lt;/li&gt;
&lt;li&gt;Special handling of "poison messages"&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#conclusion" class="anchor"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;It's a clich√© that in our business there's no free lunch, only tradeoffs. As unoriginal as they might sound, many clich√©s are true. Dealing with failures is an area of important tradeoffs. There's obviously no single pattern that fits all scenarios. In fact, many systems leverage all three patterns I described.&lt;/p&gt;

&lt;p&gt;For simpler requests that need a prompt response and aren‚Äôt involved with complex multi-step processing, Request-Reply is often the right approach. One-way messages, events, data streams are clear candidates for Queues. Workflows are a good fit for reliable execution of relatively complex requests that either require multi-step processing or can leak resources if failures aren't properly handled.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>microservices</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>5 React Shortcuts That Will Instantly Boost Your Productivity</title>
      <author>Reed Barger</author>
      <pubDate>Thu, 21 Jan 2021 15:44:19 +0000</pubDate>
      <link>https://dev.to/reedbarger/5-react-shortcuts-that-will-instantly-boost-your-productivity-4pn</link>
      <guid>https://dev.to/reedbarger/5-react-shortcuts-that-will-instantly-boost-your-productivity-4pn</guid>
      <description>&lt;p&gt;To become a better React developer, you don't always have to learn an entirely new, challenging skill. You can instantly improve your React code in a few minutes by using the powerful features your development tools make available.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Some of the biggest improvements in your work as React developer take the smallest amount of time to learn.&lt;/strong&gt; Make an effort today to apply these tips and I guarantee you'll save many hours of tedious work in your daily coding, plus enjoy coding with React much more.&lt;/p&gt;

&lt;p&gt;Here are five shortcuts that you can take advantage of right now to become a more productive React coder.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;These tips largely feature how to get more out of your code editor. The code editor I use is Visual Studio Code, which is very popular among React developers. If you want to use VSCode, you can download it for free at &lt;a href="https://code.visualstudio.com"&gt;code.visualstudio.com&lt;/a&gt;. Note that these features are available in virtually all code editors.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#1-tired-of-writing-closing-tags-for-every-jsx-element-use-emmet" class="anchor"&gt;
  &lt;/a&gt;
  1. Tired of writing closing tags for every JSX element? Use Emmet.
&lt;/h2&gt;

&lt;p&gt;As a React developer, you write a lot of JSX elements, most of which consist of an open and closing tag.&lt;/p&gt;

&lt;p&gt;If you don't have Emmet setup with React, you have to write both of these tags by hand for every element. A far better approach is to use a tool called &lt;strong&gt;Emmet&lt;/strong&gt;, which automatically creates the closing tag whenever you create the opening one. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;To setup Emmet with React in VSCode:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Go to &lt;strong&gt;Code&lt;/strong&gt; (at the top of your screen), then &lt;strong&gt;Preferences&lt;/strong&gt;, then &lt;strong&gt;Settings&lt;/strong&gt; in VSCode&lt;/li&gt;
&lt;li&gt;In the options on the left, select &lt;strong&gt;Extensions&lt;/strong&gt;, then &lt;strong&gt;Emmet&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Scroll to the &lt;strong&gt;Include Languages&lt;/strong&gt; section, add in the item input, &lt;em&gt;javascript&lt;/em&gt; and in the value input, &lt;em&gt;javascriptreact&lt;/em&gt; and hit &lt;strong&gt;Add Item&lt;/strong&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;em&gt;And just like that, Emmet has sped up your coding by 100%:&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--L2GEU4mk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://reedbarger.nyc3.digitaloceanspaces.com/5-react-shortcuts-that-will-instantly-boost-your-productivity/emmet.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L2GEU4mk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://reedbarger.nyc3.digitaloceanspaces.com/5-react-shortcuts-that-will-instantly-boost-your-productivity/emmet.gif" alt="Emmet Demo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-tired-of-formatting-your-code-by-hand-use-prettier" class="anchor"&gt;
  &lt;/a&gt;
  2. Tired of formatting your code by hand? Use Prettier.
&lt;/h2&gt;

&lt;p&gt;Can you count the number of times your code hasn't been aligned probably so you tried to adjust the spacing yourself? I don't want to even think about how much time I've spent formatting my own code!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;If you're still trying to format your code manually, you need &lt;strong&gt;Prettier&lt;/strong&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Prettier is aptly named: it turns your misaligned code into a much prettier, formatted version.&lt;/p&gt;

&lt;p&gt;Prettier is available as a devDependency for individual JavaScript projects or you can use it across all of your projects with the Prettier VSCode extension. The benefit of using the VSCode extension is that you can automatically format your JavaScript code every time you hit save.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Here's how to setup Prettier to use across all your projects in VSCode:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Go to &lt;strong&gt;Code&lt;/strong&gt;, then &lt;strong&gt;Preferences&lt;/strong&gt;, then &lt;strong&gt;Extensions&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Search for &lt;em&gt;prettier&lt;/em&gt; in the search input and hit enter (it should be the first one to come up)&lt;/li&gt;
&lt;li&gt;Select the extension, then hit &lt;strong&gt;Install&lt;/strong&gt; (and possibly &lt;strong&gt;Reload&lt;/strong&gt; to apply the extension)&lt;/li&gt;
&lt;li&gt;Go to &lt;strong&gt;Code&lt;/strong&gt;, then &lt;strong&gt;Preferences&lt;/strong&gt;, then &lt;strong&gt;Settings&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Search for &lt;strong&gt;Format on Save&lt;/strong&gt; and select the checkbox next to the format on save option&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now all of the code you write will be formatted perfectly, every time you save:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Xq3Zv82_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://reedbarger.nyc3.digitaloceanspaces.com/5-react-shortcuts-that-will-instantly-boost-your-productivity/prettier.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Xq3Zv82_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://reedbarger.nyc3.digitaloceanspaces.com/5-react-shortcuts-that-will-instantly-boost-your-productivity/prettier.gif" alt="Prettier for React Demo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-do-you-write-out-every-single-component-you-make-use-react-snippets" class="anchor"&gt;
  &lt;/a&gt;
  3. Do you write out every single component you make? Use React snippets.
&lt;/h2&gt;

&lt;p&gt;Creating many things in React and in JavaScript projects in general require a lot of boilerplate. Every time you write a component you have to type out every part of it--import React, create a function and export it from your file.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Do you get tired of having to do this?&lt;/em&gt; We all do. That's why snippets for React exist.&lt;/p&gt;

&lt;p&gt;To avoid all the extra work of writing the same code again and again, use &lt;strong&gt;React snippets&lt;/strong&gt;. Snippets allow you to use keyboard shortcuts to instantly write every part of your React code instead of having to type it all out manually.&lt;/p&gt;

&lt;p&gt;For example, instead of writing &lt;code&gt;import React from 'react'&lt;/code&gt; you can just write &lt;code&gt;imr&lt;/code&gt; and hit the Tab key to instantly create the same thing. Snippets are a huge timesaver.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Here's how to use React Snippets in VSCode:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Go to &lt;strong&gt;Code&lt;/strong&gt;, then &lt;strong&gt;Settings&lt;/strong&gt;, then &lt;strong&gt;Extensions&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Search for &lt;em&gt;React Snippets&lt;/em&gt;. There are many good snippet extensions to choose from.&lt;/li&gt;
&lt;li&gt;When you have a snippet extension installed, take a look at the shortcuts available and write the best ones down.&lt;/li&gt;
&lt;li&gt;When you type a shortcut, wait for the suggestion to appear in your code editor and then hit &lt;strong&gt;Tab&lt;/strong&gt; (you can arrow through the list if you want a different one)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You'll be shocked at how quickly you can make your components now:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Y65gNgjL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://reedbarger.nyc3.digitaloceanspaces.com/5-react-shortcuts-that-will-instantly-boost-your-productivity/react-snippets.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y65gNgjL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://reedbarger.nyc3.digitaloceanspaces.com/5-react-shortcuts-that-will-instantly-boost-your-productivity/react-snippets.gif" alt="React snippets for VSCode Demo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-do-you-import-all-your-components-manually-use-auto-import-instead" class="anchor"&gt;
  &lt;/a&gt;
  4. Do you import all your components manually? Use auto import instead.
&lt;/h2&gt;

&lt;p&gt;One of the most tedious things to do in creating React apps is importing packages and components from other files. &lt;/p&gt;

&lt;p&gt;It's very repetitive and can take a significant amount of energy to import every single thing by hand (plus to correct when you make a typo).&lt;/p&gt;

&lt;p&gt;Instead of having to remember, find and manually import your components and packages, let your code editor do it for you. You can** auto import** whatever you like by selecting what you want to import pressing the Tab key.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Here's how to auto import packages and components in VSCode:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Go to &lt;strong&gt;Code&lt;/strong&gt;, then &lt;strong&gt;Preferences&lt;/strong&gt;, then &lt;strong&gt;Settings&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Search &lt;em&gt;auto import&lt;/em&gt; and make sure the &lt;strong&gt;Enable Auto Import&lt;/strong&gt; checkbox is selected&lt;/li&gt;
&lt;li&gt;Go back into your project, write the name of what you want to import, arrow through the options the editor suggests, and hit &lt;strong&gt;Tab&lt;/strong&gt; to instantly create an import statement for it.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;When you use auto import, it makes working projects of any scale easier, because you no longer spend half of your time writing import statements.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cwrdfKj9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://reedbarger.nyc3.digitaloceanspaces.com/5-react-shortcuts-that-will-instantly-boost-your-productivity/auto-import.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cwrdfKj9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://reedbarger.nyc3.digitaloceanspaces.com/5-react-shortcuts-that-will-instantly-boost-your-productivity/auto-import.gif" alt="Auto import for React Demo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-do-you-manually-remove-your-unused-imports-use-the-organize-imports-shortcut" class="anchor"&gt;
  &lt;/a&gt;
  5. Do you manually remove your unused imports? Use the organize imports shortcut.
&lt;/h2&gt;

&lt;p&gt;Along with having Prettier for all of the code that we write, VSCode gives us a shortcut called &lt;strong&gt;organize imports&lt;/strong&gt; that does just that. In fact, it does two things:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;It alphabetically organizes our import statements&lt;/li&gt;
&lt;li&gt;It removes unused import statements (instantly fixes linting warnings about unused imports)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;And best of all, this shortcut requires no setup. &lt;strong&gt;Here's how to use it:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Go to &lt;strong&gt;View&lt;/strong&gt;, then &lt;strong&gt;Command Palette.&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Search for &lt;em&gt;organize imports&lt;/em&gt; and select it. &lt;/li&gt;
&lt;li&gt;Your imports should now be organized and any unused imports removed. &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Note that you can use the keyboard shortcut &lt;code&gt;command/control + shift + o&lt;/code&gt; as well.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bnXbyBeu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://reedbarger.nyc3.digitaloceanspaces.com/5-react-shortcuts-that-will-instantly-boost-your-productivity/organize-imports.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bnXbyBeu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://reedbarger.nyc3.digitaloceanspaces.com/5-react-shortcuts-that-will-instantly-boost-your-productivity/organize-imports.gif" alt="Organize imports demo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#enjoy-this-post-join-the-react-bootcamp" class="anchor"&gt;
  &lt;/a&gt;
  Enjoy this post? Join The React Bootcamp
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="http://bit.ly/join-react-bootcamp"&gt;The React Bootcamp&lt;/a&gt;&lt;/strong&gt; takes everything you should know about learning React and bundles it into one comprehensive package, including videos, cheatsheets, plus special bonuses.&lt;/p&gt;

&lt;p&gt;Gain the insider information hundreds of developers have already used to master React, find their dream jobs, and take control of their future:&lt;/p&gt;

&lt;p&gt;&lt;a href="http://bit.ly/join-react-bootcamp"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w2usNUi9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reedbarger.nyc3.digitaloceanspaces.com/react-bootcamp-banner.png" alt="The React Bootcamp"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Click here to be notified when it opens&lt;/em&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>productivity</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Back to Basics: Functions, Hoisting, and Scope</title>
      <author>Alisa Bajramovic</author>
      <pubDate>Thu, 21 Jan 2021 15:40:09 +0000</pubDate>
      <link>https://dev.to/alisabaj/back-to-basics-functions-hoisting-and-scope-3l5o</link>
      <guid>https://dev.to/alisabaj/back-to-basics-functions-hoisting-and-scope-3l5o</guid>
      <description>&lt;p&gt;This series discusses the building blocks of JavaScript. Whether you're new to the language, you're preparing for a technical interview, or you're hoping to brush up on some key JS concepts, this series is for you.&lt;/p&gt;

&lt;p&gt;Today's post is about functions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#what-is-a-function"&gt;What is a function?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#function-declarations"&gt;Function declarations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#function-expressions"&gt;Function expressions&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#arrow-functions"&gt;Arrow functions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;a href="#calling-functions"&gt;Calling functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#hoisting"&gt;Hoisting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#scope-and-closures"&gt;Scope and closures&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#resources"&gt;Resources&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#what-is-a-function" class="anchor"&gt;
  &lt;/a&gt;
  What is a function?
&lt;/h2&gt;

&lt;p&gt;A function in JavaScript is a set of statements that take some input, do a certain task, and return some output.&lt;/p&gt;

&lt;p&gt;When working with functions, you first have to &lt;strong&gt;define&lt;/strong&gt; the function, which involves naming it and saying what actions it does. Then, it actually get those actions to happen, you have to &lt;strong&gt;call&lt;/strong&gt; the function.&lt;/p&gt;

&lt;p&gt;There are two main ways to define a function: &lt;strong&gt;function declarations&lt;/strong&gt; and &lt;strong&gt;function expressions&lt;/strong&gt;. (Note: there also is something called the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/Function"&gt;function constructor&lt;/a&gt;, though it's less commonly used.)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#function-declarations" class="anchor"&gt;
  &lt;/a&gt;
  Function declarations
&lt;/h2&gt;

&lt;p&gt;A function declaration, also known as a function definition or a function statement, is one way to define a function. It's structured like the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function name(input) {
  statements;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;The name of the function is &lt;code&gt;name&lt;/code&gt;. The &lt;code&gt;input&lt;/code&gt; is the &lt;em&gt;parameters&lt;/em&gt; for the function, and it's enclosed in parentheses. Inside of the curly brackets is &lt;code&gt;statements&lt;/code&gt;, which do a certain task. &lt;code&gt;statements&lt;/code&gt; often return a value, or an &lt;em&gt;output&lt;/em&gt;. A function does not have to take in any parameters, so &lt;code&gt;input&lt;/code&gt; is optional. The &lt;code&gt;statements&lt;/code&gt; themselves are also optional (though that would just mean you'd have an empty function that didn't do anything).&lt;/p&gt;

&lt;p&gt;For example, let's say we wanted to define a function using a function declaration that took in a number, and returned the given number times two:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;double&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;In this example, &lt;code&gt;number&lt;/code&gt; is passed to the function by &lt;strong&gt;value&lt;/strong&gt; alone; in other words, this function does not change &lt;code&gt;number&lt;/code&gt; in the larger, global context. To illustrate what that means, let's insert a few console logs before and after the above function:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// declaring a variable called `count` and setting it equal to 3&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 3&lt;/span&gt;

&lt;span class="c1"&gt;// declaring a function called `double` which returns an inputted number times 2&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;double&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// declaring a variable called `result` is set equal to calling the function `double` and passing the number `count` as the input&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;double&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 6&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 3&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;When we called the function &lt;code&gt;double()&lt;/code&gt; and passed in &lt;code&gt;count&lt;/code&gt;, we didn't change the value of &lt;code&gt;count&lt;/code&gt; itself -- it still equaled &lt;code&gt;3&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;However, this is only true of &lt;em&gt;primitive parameters&lt;/em&gt; in JavaScript. If you pass a &lt;em&gt;non-primitive parameter&lt;/em&gt; to a function (such as an array or object), and the function alters the object in some way, then the object is changed outside of the function as well. For example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;fruits&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;apple&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;banana&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;orange&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;removeLastElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;array&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;array&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;removeLastElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fruits&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fruits&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// ["apple", "banana"]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;The above example uses the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/pop"&gt;&lt;code&gt;.pop()&lt;/code&gt; method&lt;/a&gt;, which removes the last element of an array. By passing in the &lt;code&gt;fruits&lt;/code&gt; object as a parameter in &lt;code&gt;removeLastElement()&lt;/code&gt;, the last element of &lt;code&gt;fruits&lt;/code&gt; was removed, and the updated array was returned. When working with non-primitive values, it's important to keep in mind that passing them into functions may end up changing their value.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#function-expressions" class="anchor"&gt;
  &lt;/a&gt;
  Function expressions
&lt;/h2&gt;

&lt;p&gt;Another way to define functions is with a function expression. The main difference between a function expression and function declaration is that with function expressions, the function name is optional. If you don't include a function name, you have an &lt;strong&gt;anonymous function&lt;/strong&gt;. A function expression is structured like the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function name(input) {
    statements;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Note that this is the exact same structure as function declaration. The following is an example of an anonymous function, meaning that it does not have a name. The function is set equal to a variable called &lt;code&gt;triple&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;triple&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Function expressions are often written as &lt;a id="arrow-functions"&gt;&lt;strong&gt;arrow functions&lt;/strong&gt;&lt;/a&gt;. Arrow functions are considered to be compact versions of function expressions, and are often used to "clean up" code. Let's turn the above function into an arrow function:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Standard function expression&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="c1"&gt;// Arrow function&lt;/span&gt;
&lt;span class="nx"&gt;number&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;What changed with the arrow function? The words &lt;code&gt;function&lt;/code&gt; and &lt;code&gt;return&lt;/code&gt; were removed, there are no parentheses around the parameter &lt;code&gt;number&lt;/code&gt;, the curly brackets were replaced by an arrow &lt;code&gt;=&amp;gt;&lt;/code&gt;, and everything is on one line.&lt;/p&gt;

&lt;p&gt;However, these rules vary depending on the arrow function. If the function has only &lt;strong&gt;one&lt;/strong&gt; parameter, then you don't surround it in parentheses. If it has &lt;strong&gt;zero or 2+&lt;/strong&gt; parameters, then you do surround it in parentheses. If the function has only &lt;strong&gt;one statement&lt;/strong&gt;, then you don't have the curly brackets or the word &lt;code&gt;return&lt;/code&gt;. If the function has &lt;strong&gt;more than one statement&lt;/strong&gt;, then you have &lt;strong&gt;both&lt;/strong&gt; the brackets and the word &lt;code&gt;return&lt;/code&gt;. Let's see an example of each of these:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// One parameter, one statement&lt;/span&gt;
&lt;span class="nx"&gt;number&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// AB&lt;/span&gt;

&lt;span class="c1"&gt;// Zero parameters, one statement (these are often used in callback functions)&lt;/span&gt;
&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// Two parameters, one statement&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// Two parameters, multiple statements:&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;tax&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.05&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;tax&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Arrow functions have a lot of changing syntax, depending on the function. However, it's less important to memorize exactly when to use parentheses around an input, than it is to recognize what an arrow function generally looks like, and where to find more resources about it. Over time and with practice, you'll end up not needing to refer back to the documentation. This is true of a lot of aspects of programming: rather than trying to memorize every little detail of how something is written and the specific ways to use it, it's much better to recognize something and know where to go for more information. Every programmer uses Google and refers to documentation, no matter how long they've been doing it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#calling-functions" class="anchor"&gt;
  &lt;/a&gt;
  Calling functions
&lt;/h2&gt;

&lt;p&gt;Just because you defined a function, that doesn't mean the function has been executed. When you define a function, you say what it's called and what it's supposed to do. When you call a function, it actually gets performed.&lt;/p&gt;

&lt;p&gt;To call a function, you refer to the function's name, and pass in arguments that correspond to the parameters. To call the function &lt;code&gt;triple()&lt;/code&gt;, which we defined above, we need to refer to its name, and pass in one number as an argument:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;triple&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#hoisting" class="anchor"&gt;
  &lt;/a&gt;
  Hoisting
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Hoisting&lt;/strong&gt; in JavaScript means that variable declarations and function declarations are brought to the top of the code.&lt;/p&gt;

&lt;p&gt;This is tricky concept to grasp at first, so it can help to look at an example. Let's create a function using a function declaration, and call it &lt;code&gt;numberSquared&lt;/code&gt;. &lt;code&gt;numberSquared()&lt;/code&gt; will take an inputted number, and then console log that value squared. Then, after the function, we can call it, and we'll pass in the number &lt;code&gt;5&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;numberSquared&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;numberSquared&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;The result of the above code is &lt;code&gt;25&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Now, what would happen if we called the function &lt;em&gt;before&lt;/em&gt; we declared the function?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;numberSquared&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;numberSquared&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Again, the result of the above code is &lt;code&gt;25&lt;/code&gt;. This is because the function declaration was brought to the top when your code was compiled.&lt;/p&gt;

&lt;p&gt;Keep in mind that only function declarations, not function expressions, are hoisted.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#scope-and-closures" class="anchor"&gt;
  &lt;/a&gt;
  Scope and closures
&lt;/h2&gt;

&lt;p&gt;A &lt;strong&gt;scope&lt;/strong&gt; in JavaScript is what is currently "visible" or "accessible". According to &lt;a href="https://developer.mozilla.org/en-US/docs/Glossary/Scope"&gt;MDN documentation&lt;/a&gt;, "If a variable or other expression is not 'in the current scope,' then it is unavailable for use."&lt;/p&gt;

&lt;p&gt;In terms of functions, the variables that are declared in the function are only accessible within the function. This is called a &lt;strong&gt;closure&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;To see examples of different scopes, let's look at the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;weather&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;rainy&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;myNameAndTheWeather&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Alisa&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;weather&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;myNameAndTheWeather&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;weather&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;What would happen if we ran this program? The output would be the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Alisa
rainy
rainy
[ReferenceError: name is not defined]
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;To understand why these are the results, let's go over what the code says, and what happens when we run it. First, the variable &lt;code&gt;weather&lt;/code&gt; is initialized and set equal to &lt;code&gt;"rainy"&lt;/code&gt;. Then, using a function declaration, the function &lt;code&gt;myNameAndTheWeather()&lt;/code&gt; is defined. Inside of &lt;code&gt;myNameAndTheWeather()&lt;/code&gt;, the variable &lt;code&gt;name&lt;/code&gt; is initialized and set equal to &lt;code&gt;"Alisa"&lt;/code&gt;, &lt;code&gt;name&lt;/code&gt; is console logged, and &lt;code&gt;weather&lt;/code&gt; is console logged. Then, outside of the function, &lt;code&gt;myNameAndTheWeather()&lt;/code&gt; is called. Then, &lt;code&gt;weather&lt;/code&gt; is console logged. Finally, &lt;code&gt;name&lt;/code&gt; is console logged.&lt;/p&gt;

&lt;p&gt;When we run this program, the first thing that happens is that the function &lt;code&gt;myNameAndTheWeather()&lt;/code&gt; is called. &lt;code&gt;name&lt;/code&gt; is defined in the function, in the &lt;strong&gt;local scope&lt;/strong&gt;, so the function is able to console log it. &lt;code&gt;weather&lt;/code&gt; is defined outside of the function, in the &lt;strong&gt;global scope&lt;/strong&gt;, so the function also has access to it. In other words, the function has access to variables declared in its own local scope (a closure) and in the global scope. Therefore, &lt;code&gt;Alisa&lt;/code&gt; and &lt;code&gt;rainy&lt;/code&gt; are logged to the console.&lt;/p&gt;

&lt;p&gt;After &lt;code&gt;myNameAndTheWeather()&lt;/code&gt; is executed, the program goes to the next line, which says to log &lt;code&gt;weather&lt;/code&gt; to the console. &lt;code&gt;weather&lt;/code&gt; is an accessible variable, so the program console logs its value. Finally, the program tries to console log the variable &lt;code&gt;name&lt;/code&gt;. However, &lt;code&gt;name&lt;/code&gt; is defined &lt;em&gt;within&lt;/em&gt; the function &lt;code&gt;myNameAndTheWeather()&lt;/code&gt;. It has a local scope, which means we don't have access to it from outside of the function. Therefore, a reference error is returned.&lt;/p&gt;




&lt;p&gt;Let me know in the comments if you have any questions or other ways of thinking about functions, scope, and hoisting in JavaScript.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#resources" class="anchor"&gt;
  &lt;/a&gt;
  Resources
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Functions"&gt;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/web/JavaScript/Reference/Operators/function"&gt;https://developer.mozilla.org/en-US/docs/web/JavaScript/Reference/Operators/function&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions"&gt;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Glossary/Hoisting"&gt;https://developer.mozilla.org/en-US/docs/Glossary/Hoisting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Glossary/Scope"&gt;https://developer.mozilla.org/en-US/docs/Glossary/Scope&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>beginners</category>
      <category>functions</category>
      <category>scope</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Avoid Burnout as a Programmer or Hacker</title>
      <author>Stefan Rows</author>
      <pubDate>Thu, 21 Jan 2021 15:16:54 +0000</pubDate>
      <link>https://dev.to/stefanrows/avoid-burnout-as-a-programmer-or-hacker-3jia</link>
      <guid>https://dev.to/stefanrows/avoid-burnout-as-a-programmer-or-hacker-3jia</guid>
      <description>&lt;p&gt;Many of us have probably heard about &lt;strong&gt;Burnout&lt;/strong&gt; in this day and age. Maybe you even have a friend who has told you that he or she feels "&lt;strong&gt;burnt out&lt;/strong&gt;". I personally come from a hacking background and became a programmer much later, but I have seen people burning out in both of those fields left and right lately. In this article, I want to show you a few tricks how you can avoid burnout as a programmer or hacker. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-do-people-burn-out" class="anchor"&gt;
  &lt;/a&gt;
  Why do people Burn Out?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r-wezn0a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/e6tqvasibbkawhbmobxo.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r-wezn0a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/e6tqvasibbkawhbmobxo.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There is no better example to this case than the year 2020. A lot of people, while working remotely from home due to COVID, have seen the opportunity to become a Content Creator or start some other kind of side-hustle next to their full-time job. Now, if you already have a stressful full-time job and start creating content on the side, this can quickly add up and become too much. Add family and social life to the mix and you are setting yourself up for trouble. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;But why do people burn out&lt;/strong&gt;? Because they don't balance their work &amp;amp; life. I personally learned this the hard way. &lt;/p&gt;

&lt;p&gt;A typical day for most of us high achievers looks something like this:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Wake up&lt;/li&gt;
&lt;li&gt;Go to work&lt;/li&gt;
&lt;li&gt;Come back home and on a good day, throw in a 30 minute workout that you hate&lt;/li&gt;
&lt;li&gt;Spend an hour or two with the family&lt;/li&gt;
&lt;li&gt;Get back on the computer and work on our content or personal projects&lt;/li&gt;
&lt;li&gt;Maybe throw in an hour of watching Netflix or TV, or maybe you are a Streamer with a regular schedule, that makes it even harder to get in enough sleep.&lt;/li&gt;
&lt;li&gt;Hit the mats directly after consuming or putting out information while staring at a screened device.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Looks familiar? Then it is time to change something.&lt;/p&gt;

&lt;p&gt;If you read through the points above, you probably see that you have zero time for self-care. I personally don't see my daily runs as self care, because I mostly end up contemplating about stuff that I still have to do in the rest of my day. &lt;/p&gt;

&lt;p&gt;Self-care is time where you slow down your mind and where you are conscious about your thoughts. Most of our days, we react unconsciously to each thought as it comes in.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#but-what-should-i-do-i-want-to-be-successful" class="anchor"&gt;
  &lt;/a&gt;
  But what should I do? I want to be successful!
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;What is success and money worth if you are unhappy?&lt;/strong&gt; For me, nothing. You can have all the money in the world and be unhappy. People always say: "Yea, but money helps with peace of mind". It doesn't, for most of us at least. &lt;/p&gt;

&lt;p&gt;The more money we accumulate, the more money we spend on sh*t we don't need, which at the same time enslaves us and ties us in deeper and deeper, raising our standard of living and making us want more and more. &lt;/p&gt;

&lt;p&gt;Once you buy a house, a car and a lot of other stuff, all this stuff needs to be maintained and comes with running cost. Every thing you buy creates a sense of false freedom and makes you "happy" only for a brief moment, while at the same time puts another bar around you, &lt;strong&gt;creating a prison that you are building around yourself&lt;/strong&gt;. You don't own your things, your things own you.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#there-is-a-way-out-but-its-not-going-to-be-easy" class="anchor"&gt;
  &lt;/a&gt;
  There is a way out, but it's not going to be easy
&lt;/h2&gt;

&lt;p&gt;It took me way too long to understand this. I ignored the signs for way too long and I paid the price in 2020. I was severely burnt out and sick to my stomach (literally). &lt;/p&gt;

&lt;p&gt;I decided to quit my well paying Job as the Head of IT of a successful startup to completely turn my life around. I decided to make my health my top priority, putting it on number one and everything else behind it. &lt;/p&gt;

&lt;p&gt;Being a certified Yoga Teacher and having a wife who is also a Yoga Teacher, I knew all the methods that are probably going to help me, I just didn't use them. I always told myself "&lt;strong&gt;there is time for that later&lt;/strong&gt;". &lt;/p&gt;

&lt;p&gt;Like most people, I only started changing things once I was affected by sickness. &lt;/p&gt;

&lt;p&gt;Now, this is not a universal solution for everyone, this is just what has helped me. &lt;strong&gt;If you can cherry-pick one or two things and implement them to your own life and it actually helps you, you can go from there&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;I believe everyone needs to find his or her own way and needs to find methods that work for them. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-methods-that-have-helped-me-to-overcome-burnout" class="anchor"&gt;
  &lt;/a&gt;
  The methods that have helped me to overcome Burnout
&lt;/h2&gt;

&lt;p&gt;All of the things below are things I started including to my life once I realized I had burnout. I knew I should have done those things before getting sick, but I didn't. &lt;/p&gt;

&lt;p&gt;There is no particular order. On some days one method will help you more than the other and vice versa. The important part is, &lt;strong&gt;that you also make your health your top priority&lt;/strong&gt;. Regardless, I want to &lt;strong&gt;put an emphasize on Meditation&lt;/strong&gt;, our first point below, above everything else. &lt;strong&gt;I believe Meditation is the single most important factor to happiness&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;As long as you see your personal well-being as something secondary, it will be exactly this, something secondary that you easily skip on days where you don't feel like it.&lt;/p&gt;

&lt;p&gt;One more thing to add to that before we dive in: &lt;strong&gt;1 Minute is better than none at all&lt;/strong&gt;. Just remember this for the rest of this conversation.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NWkqay1B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/dlrambcvlhfpdaohkddr.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NWkqay1B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/dlrambcvlhfpdaohkddr.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#meditation" class="anchor"&gt;
  &lt;/a&gt;
  Meditation
&lt;/h3&gt;

&lt;p&gt;Now you think "Oh yeah, here we go again", but hear me out.&lt;/p&gt;

&lt;p&gt;Meditation is the key. The key to happiness, the key to health and the key to success. Once &lt;strong&gt;YOU&lt;/strong&gt; get to be the one who decides what to do instead of your subconsciousness, you see things start changing.&lt;/p&gt;

&lt;p&gt;And believe me, I understand. &lt;strong&gt;Meditation is the single hardest thing I have ever tried to do&lt;/strong&gt;. As someone with ADHD, anxiety issues and general difficulty to concentrate on anything for longer than 5 minutes, I get it. &lt;strong&gt;It's hard&lt;/strong&gt;. It's very hard. But it's so worth it if you force yourself through the initial failures. &lt;/p&gt;

&lt;p&gt;Let me pull up a quote from &lt;strong&gt;quadruple amputee&lt;/strong&gt; Kyle Maynard on that note. (Who climbed Mount Everest and became a National Wrestling Champion)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;"I don't think failure is sometimes part of the process - it always is. When you feel you can't go on, know that you're just getting started."&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Take this as your personal mantra.&lt;/p&gt;

&lt;p&gt;I personally did not take any meditation courses, I don't use apps, I don't use guided meditations. I just sit down and try to be quiet. I do mostly use some kind of meditation music or mantras (The Meditative Mind YouTube Channel has some great stuff for that).&lt;/p&gt;

&lt;p&gt;I learned a bit about meditation in my 200 Hour Yoga Teacher course, but not nearly enough that I would say that has helped me become a better meditator. The Focus in the 200 Hour Yoga Teacher training is more towards alignment, anatomy, philosophy and general teaching techniques rather than on meditation. The 300 Hour Teacher Training goes way deeper into meditation.&lt;/p&gt;

&lt;p&gt;What I can definitely say is, I definitely can feel the difference on days now where I skip my meditation practice. I am way more out of balance and it affects my whole day. When I meditate I am a better human, all around.&lt;/p&gt;

&lt;p&gt;One of the resources listed below is from one of my teachers that I had the pleasure of working with during my Yoga Teacher Training, &lt;strong&gt;Ali Choi&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;She is a very advanced meditator and is also giving Meditation Teacher Trainings. The beginner class below is donation based, so if you enjoy it make sure to either share it or let a donation come her way. &lt;strong&gt;I highly recommend checking out her content&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;There is also a great "&lt;a href="https://johnnynasello.com/product/how-to-start-meditating-8-easy-steps//ref/12887"&gt;How to Start Meditating - 8 Easy Steps&lt;/a&gt;" guide she has put together. Both of the resources come highly recommended.&lt;/p&gt;

&lt;p&gt;A couple of things for you to try:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://johnnynasello.com/product/how-to-start-meditating-8-easy-steps//ref/12887"&gt;How to Start Meditating - 8 Easy Steps&lt;/a&gt; by Ali Choi&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://johnnynasello.com/product/guided-meditation-for-beginners//ref/12887"&gt;Guided Meditation for Beginners&lt;/a&gt; by Ali Choi&lt;/li&gt;
&lt;li&gt;Sam Harris Waking Up App&lt;/li&gt;
&lt;li&gt;Calm App&lt;/li&gt;
&lt;li&gt;Headspace App&lt;/li&gt;
&lt;li&gt;Tara Brach Meditations on YouTube&lt;/li&gt;
&lt;li&gt;Meditative Mind on YouTube&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As I said, most of the time I meditate I either sit down in complete silence, or, mostly when I need to blind out external noises (Family), I use meditation music or mantras with my earphones. &lt;/p&gt;

&lt;p&gt;Listening to someone talk and guide me through something while I try to think of nothing at all, somehow defeats the purpose for me.&lt;/p&gt;

&lt;p&gt;I can't tell you how to meditate, because everyone works different. I can just share the resources that have helped me become better at it. The best time to meditate is directly after waking up. Maybe you have to join the 5AM club to find some time for quietness. Find a quiet place where you don't get interrupted or use earphones. &lt;/p&gt;

&lt;p&gt;The later it gets in the day, the higher the likeliness of you skipping your practice will be. Trust me, I speak from experience. It is also very important that you don't overdo it. Many people like to start with something like "I will meditate every day for 30 days for 10 minutes!". No, you won't. &lt;strong&gt;Start with one minute per day for one week&lt;/strong&gt;. Then do 2 minutes the next week and do this so long until you find your sweet spot. &lt;/p&gt;

&lt;p&gt;Before you know it, you'll &lt;strong&gt;look forward&lt;/strong&gt; to sitting down in quietness. &lt;/p&gt;

&lt;p&gt;You could also make it a family habit. We sit for meditation every evening before bringing our son to bed. Sometimes he can sit still for 30 seconds, sometimes he can manage a couple of minutes. We want to engrain a healthy habit into him from the get-go, and also teach him that is important to spend some time and reflect on things that had happened over the day. We already look forward to meditate together every evening now.&lt;/p&gt;

&lt;p&gt;There is a ton more I could tell you about meditation, but it would make this article way too long. After all we want to talk about more things that help you to avoid burnout as a Programmer or Hacker.&lt;/p&gt;

&lt;p&gt;In case you are also dealing with a health condition (physically or mentally), I highly recommend &lt;strong&gt;Joe Dispenza's&lt;/strong&gt; book "&lt;a href="https://amzn.to/2XuwTZT"&gt;Becoming Supernatural: How Common People are Doing the Uncommon&lt;/a&gt;". &lt;/p&gt;

&lt;p&gt;I guess you can tell how important and how much weight I put on meditation after reading this section. Let's move on.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UhfTlciK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/g5ygzpyxh0u0ihr5sbo0.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UhfTlciK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/g5ygzpyxh0u0ihr5sbo0.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#yoga" class="anchor"&gt;
  &lt;/a&gt;
  Yoga
&lt;/h3&gt;

&lt;p&gt;Of course, I have to mention Yoga. Yoga for me is everything. Before attending my first Yoga class I had the same false expectation like most people I know who haven't tried it: "&lt;strong&gt;Yoga is a Women's thing and it is boring&lt;/strong&gt;". &lt;/p&gt;

&lt;p&gt;All of them quickly changed their mind after visiting an actual class, &lt;strong&gt;including me&lt;/strong&gt;. Also, &lt;a href="https://www.youtube.com/watch?v=xieJTGj7hss"&gt;this Video&lt;/a&gt; by a fellow Yoga Teacher, &lt;em&gt;Dylan Werner&lt;/em&gt;, might convince you otherwise.&lt;/p&gt;

&lt;p&gt;Now there is a gazillion ways of getting into Yoga, the one I recommend would be &lt;strong&gt;joining a beginner class&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;A lot of people nowadays start with Online Yoga. The problem with this is, &lt;strong&gt;there is nobody to correct you in your poses, which eventually will lead to you learning things the wrong way&lt;/strong&gt;, ending up hurting yourself while trying to do something good for yourself.&lt;/p&gt;

&lt;p&gt;Also, unlearning something that was wrongly learned is very, very hard. &lt;/p&gt;

&lt;p&gt;But I know, most of you will be like: "But everyone will laugh at me". No, no one will laugh at you. The Yoga community, for the most part, is very friendly and welcoming to beginners. Everyone more advanced knows how hard it is to start.&lt;/p&gt;

&lt;p&gt;If you don't want that, I understand. If you must start online, there are a couple of channels I recommend you checking out, which are beginner friendly and very popular.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.youtube.com/user/yogawithadriene"&gt;Yoga with Adriene&lt;/a&gt; (Very beginner friendly and very popular)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/lesleyfightmaster"&gt;Fightmaster Yoga&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;My own channel, &lt;a href="https://www.youtube.com/channel/UCDbYvP6yTSVTzaAF7GuSLjA"&gt;Stefan Rows Yoga&lt;/a&gt; (I am just starting out, so more content will come over time, make sure to subscribe for that)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Another option, "thanks" to Covid is, simply attending an online class of a local studio using Zoom. That way, if you get a good instructor, they are able to direct you via video. Almost all studios offer Online Classes at this moment, so this is a good option.&lt;/p&gt;

&lt;p&gt;Look out for classes labeled as "beginner" or "introduction". &lt;/p&gt;

&lt;p&gt;There is also the option to book a private class with me and I will tailor a program according to your abilities. Just shoot me an email to &lt;strong&gt;&lt;a href="mailto:stefanrows@gmail.com"&gt;stefanrows@gmail.com&lt;/a&gt;&lt;/strong&gt; to book a slot with me.&lt;/p&gt;

&lt;p&gt;For the most part, Yoga nowadays is used as a tool to stay in shape. There are a lot of different styles of Yoga, yet there is just one Yoga. I wont bore you with the philosophy, but for me personally, Yoga is much more than that. &lt;/p&gt;

&lt;p&gt;I use Yoga to tune it with my body and prepare myself for my meditation practice. Practicing Asanas (Yoga poses) helps me to get in the zone and focus on what's to come.&lt;/p&gt;

&lt;p&gt;I also use Yoga as a tool to listen to my body, my body tells me when something needs more attention and I always try to follow that calling. I am a firm believer that Yoga is a tool to cure many diseases without the need of medication or surgery.&lt;/p&gt;

&lt;p&gt;I highly recommend the book "&lt;a href="https://amzn.to/39ob2bX"&gt;Light on Yoga&lt;/a&gt;" by B.K.S Iyengar for anyone dealing with health issues.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#breathwork" class="anchor"&gt;
  &lt;/a&gt;
  Breathwork
&lt;/h3&gt;

&lt;p&gt;My first profound experience with breathwork was through the Wim Hof Method (See next point). After using his breathing method for the first time, I already knew I am onto something. At this moment, I had no prior contact with Pranayama (The Yogic breathing technique), but I knew I had to dig deeper, and deeper I dug. &lt;/p&gt;

&lt;p&gt;I found the excellent book "&lt;strong&gt;&lt;a href="https://amzn.to/3oFtzHf"&gt;Breath&lt;/a&gt;&lt;/strong&gt;" by James Nestor. James is a researcher who had struggled with breathing problems his whole life. He made it his mission to discovering everything there is to know about breathing. The book really is fantastic, I loved reading it and have already read it 3 times and gifted it numerous times to friends who struggle with health.&lt;/p&gt;

&lt;p&gt;It became apparent to me that breathing is the key to many health related issues. If you implement a regular breathing practice to your daily routine, you will see a quick overall shift in your mood. You can literally breath depression away. Same as with meditation, this is not easy to learn and requires discipline. &lt;/p&gt;

&lt;p&gt;Simply sitting down and just breathing sounds easy, but try doing it for prolonged periods of time - as with everything else, &lt;strong&gt;we lose interest if we do not see quick results&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;There is only one resource I can share with you &lt;strong&gt;because it is the best resource I know&lt;/strong&gt;. It's a full-on 5 week Pranayama Course that was made by my own Yoga Teacher, Johnny Nasello. &lt;/p&gt;

&lt;p&gt;I have had many Yoga Teachers throughout the years, but after taking one of his classes I immediately knew that this would be my teacher. I took his 200 Hour Yoga Teacher Training back in 2019 in Koh Phangan, Thailand. &lt;/p&gt;

&lt;p&gt;Johnny has spent a month in India practicing nothing else than Pranayama (Breathing). So you can be sure that everything he teaches comes from a deep understanding of Pranayama. He has led more than 20 Yoga Teacher trainings and has thousands of hours of experience with Yoga.&lt;/p&gt;

&lt;p&gt;There is a free intro to the course called "&lt;a href="https://johnnynasello.com/product/breath-of-yoga//ref/12887"&gt;&lt;strong&gt;The Breath of Yoga&lt;/strong&gt;&lt;/a&gt;" which helps to get you started with the basics. If you feel like you need more, you can take on the full 5-Week experience "&lt;a href="https://johnnynasello.com/product/learn-pranayama-online-course//ref/12887"&gt;&lt;strong&gt;Learn Pranayama Online&lt;/strong&gt;&lt;/a&gt;". I took the course and I loved it.&lt;/p&gt;

&lt;p&gt;Again, if you feel lost, don't hesitate to book a consultation with me at &lt;a href="mailto:stefanrows@gmail.com"&gt;stefanrows@gmail.com&lt;/a&gt; and we figure a path out for you together.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-wim-hof-method" class="anchor"&gt;
  &lt;/a&gt;
  The Wim Hof Method
&lt;/h3&gt;

&lt;p&gt;Ah, now the fun begins, cold water! Everyone loves cold water, right? With cold, I mean ice cold. No, seriously. I practice Wim Hof's breathing method and cold water exposure since around 2015 on and off. &lt;/p&gt;

&lt;p&gt;I go to swim in frozen lakes in the midst of Winter and I love it. It makes you feel alive and it feels absolutely great when you've done it. There is a lot of science around Wim Hof's method, the best thing you could do is grab his newly released book "&lt;a href="https://amzn.to/3oAued5"&gt;Activate Your Full Human Potential&lt;/a&gt;" from 2020 and see for yourself.&lt;/p&gt;

&lt;p&gt;There is a lot of evidence that this method can heal serious depression and illness, it certainly was life changing for me. The same goes for cold water exposure in general.&lt;/p&gt;

&lt;p&gt;The best you can do is join a local Wim Hof Method Workshop near you, they happen around the world regularly now. Or simply check out this &lt;a href="https://www.youtube.com/watch?v=Y1ial3Rc7Xg"&gt;introduction video&lt;/a&gt; from Wim himself.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#therapy" class="anchor"&gt;
  &lt;/a&gt;
  Therapy
&lt;/h3&gt;

&lt;p&gt;I really hope that in this day and age we are past the stigma that was attached to psychological therapy. In the past it was frowned upon if you admitted you have mental problems. &lt;/p&gt;

&lt;p&gt;In this fast pace worlds, but especially in our fast paced jobs where our brain is under overload the majority of our waking hours, it comes as no surprise that we develop mental health problems.&lt;/p&gt;

&lt;p&gt;Do I need to mention the bombardment of information we get every day through our Smartphones? &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Just know this:&lt;/strong&gt; The human mind is not used of consuming this insane amount of information on a daily basis, the result for most of us is: we burn out and feel overwhelmed. &lt;/p&gt;

&lt;p&gt;Unfortunately this also cultivates mental illness. You may not consciously realize it, but watching other people's seemingly "perfect life" (&lt;a href="https://www.dazeddigital.com/life-culture/article/50575/1/instagram-influencers-are-posing-in-fake-private-jets-were-questioning-reality"&gt;which is mostly fake by the wa&lt;/a&gt;y) makes you compare your own life, even on a subconscious level, to those people, which is not exactly healthy. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;I see taking therapy no different than going to the doctor because you have a cough&lt;/strong&gt;. You are ill, you go to the doctor. Simple as that.&lt;/p&gt;

&lt;p&gt;My recommendation is, &lt;strong&gt;find a therapist as soon as you have the feeling something is not right&lt;/strong&gt;. If you feel sad, tired or a general lack of motivation, it is the time to talk to someone. &lt;/p&gt;

&lt;p&gt;The longer you let those negative feelings linger without taking action, the harder you will have it to get back on track. &lt;/p&gt;

&lt;p&gt;Referencing &lt;strong&gt;&lt;a href="https://amzn.to/2XuwTZT"&gt;Joe Dispenza's book&lt;/a&gt;&lt;/strong&gt; I had mentioned earlier, you can literally conjure up diseases entirely with your own mind. (Gladly you can make them go away again too using the right techniques).&lt;/p&gt;

&lt;p&gt;In the best case the therapist will tell you you don't need therapy and recommends you something to do instead. Or you get treated early and will be over it in no time. &lt;/p&gt;

&lt;p&gt;If you take away anything from this whole article let it be this: &lt;strong&gt;don't be afraid to ask for help&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dxetPQbi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/0x1lumma8g5mnk5v481c.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dxetPQbi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/0x1lumma8g5mnk5v481c.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#journaling" class="anchor"&gt;
  &lt;/a&gt;
  Journaling
&lt;/h3&gt;

&lt;p&gt;Journaling is one of those things that could really help you to avoid burnout as a programmer or hacker. It certainly did a great deal for me. &lt;/p&gt;

&lt;p&gt;Let's just say, the year 2020 hasn't been the best for me and leave it at that. In one of the darkest moments, I picked up journaling. I remember reading about it in one of the numerous self-help books I have read throughout the years. &lt;/p&gt;

&lt;p&gt;I said from this moment on, every time I will feel sad or unhappy, I put some thoughts down in my journal. I quickly realized that every time I picked up the pen and wrote out my thoughts, things started shifting for me. I realized that some of the thoughts I had were absolute irrational and bullshit when I brought them to life. &lt;/p&gt;

&lt;p&gt;I made it a habit to pick up the pen every time I feel off and write out the shit that was going on. It helped. &lt;/p&gt;

&lt;p&gt;I moved on from doing that to write a journal at the end of every day. Now there are people who like to journal first thing in the morning (same as with meditating), while I get why they do it, it isn't for me. &lt;/p&gt;

&lt;p&gt;You have to figure out what works for you in that case. For me, struggling with sleep since a couple of years, it is better to write out my thoughts before hitting the mats. This helps me to reflect on my day and it also helps me to get those thoughts out of my head.&lt;/p&gt;

&lt;p&gt;I certainly feel there is some benefit to that and I have a better nights sleep every time I do journal (which is almost every day now). &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;I can't give you a ton of advice other than&lt;/strong&gt;: &lt;a href="https://amzn.to/3sjnItE"&gt;Buy a cheap notebook&lt;/a&gt;, start to write out your thoughts and see what happens.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#physical-activity-sport" class="anchor"&gt;
  &lt;/a&gt;
  Physical Activity / Sport
&lt;/h3&gt;

&lt;p&gt;Now, you have probably heard this before but if it isn't obvious yet, &lt;strong&gt;we are not made to sit&lt;/strong&gt;. Most of us sit, most of the time. We are made to move. If we stop moving our meat-vehicle around on a daily basis, we start dying. It literally translates to: You stop moving - you start dying. &lt;/p&gt;

&lt;p&gt;Also, sitting around the whole day and not giving our body the movement it needs makes you depressed. This has been proven in numerous studies (which I am far too lazy to include here). &lt;/p&gt;

&lt;p&gt;Moving makes you happy! Being outside on the fresh air makes you even happier!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Every single time I don't want to go for a run&lt;/strong&gt; but convince myself otherwise, &lt;strong&gt;I feel better afterwards&lt;/strong&gt;. The same goes for other sports. I mostly don't like to do any sport unless I convince myself that I will feel better afterwards, and I always do.&lt;/p&gt;

&lt;p&gt;As I have mentioned above, running does not help me to mentally shut off. It's just not hard enough for me. &lt;/p&gt;

&lt;p&gt;What I have found is, and I am sure some of you will belong to this category (&lt;strong&gt;If not you have to try it!&lt;/strong&gt;), is that very physically draining sports or activities help me to shut off my brain for a brief moment. &lt;/p&gt;

&lt;p&gt;I have learned this when I was practicing Brazilian Jiu-Jitsu 5-6 times a week when I was living in Prague, Czechia. At the end of every class we would do sparring for 3 or 4 eight minute rounds. This is full contact ground fighting. &lt;/p&gt;

&lt;p&gt;There is honestly nothing I have ever tried that depleted me more physically than trying to survive against a shark on the floor for 3x8 minutes straight. I sometimes had to vomit after class ( I was not the only one). &lt;/p&gt;

&lt;p&gt;But what I have learned from that experience, and that was probably part of why I liked it so much was, within those 8 minutes of struggle, my brain did not work as usually. There was no time for thoughts, there was only time for reaction. Automatic muscle memory. A state of complete nothingness and flow. &lt;/p&gt;

&lt;p&gt;This was probably my first contact with "meditation". It worked for me. I also recognized how much it was missing in my life when I had to stop training due to moving to another country and starting a family. I was angrier, imbalanced and just generally missing something.&lt;/p&gt;

&lt;p&gt;I just realized much later that what was missing was probably not the physical combat part, but the quiet time for my brain in those 8 minutes of full contact sparring. &lt;/p&gt;

&lt;p&gt;I had similar experiences in other sports like Crossfit, but never to an extend as in BJJ. &lt;/p&gt;

&lt;p&gt;Long story short, give something hard a try. Try something that is completely depleting you and doesn't allow you to think. A couple of things I'd recommend are listed below. &lt;strong&gt;If you have any health conditions or are completely new to sport, I don't recommend doing any of those&lt;/strong&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Brazilian Jiu-Jitsu&lt;/li&gt;
&lt;li&gt;Muay Thai&lt;/li&gt;
&lt;li&gt;Boxing&lt;/li&gt;
&lt;li&gt;Crossfit&lt;/li&gt;
&lt;li&gt;Kettlebell Training&lt;/li&gt;
&lt;li&gt;High Intensity Workouts (HIIT)&lt;/li&gt;
&lt;li&gt;High Intensity Cycling&lt;/li&gt;
&lt;li&gt;Sprints&lt;/li&gt;
&lt;li&gt;Insert any completely exhausting sport here...&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#sleep" class="anchor"&gt;
  &lt;/a&gt;
  Sleep
&lt;/h3&gt;

&lt;p&gt;Oh sleep. I hope by now everyone understands how important sleep is. I won't get into a lot of sleep science, but I read a lot of books on sleep so I can share what I have learned. I can highly recommend the book "&lt;strong&gt;&lt;a href="https://amzn.to/2MMuLdO"&gt;Why We Sleep&lt;/a&gt;&lt;/strong&gt;"  by Matthew Walker PhD. By far the best book I have read on sleep and by far the one with the biggest influence on my sleep.&lt;/p&gt;

&lt;p&gt;I have struggled with sleep my whole adulthood. I now have it under control thanks to the daily rituals and practices I implemented in my life. &lt;/p&gt;

&lt;p&gt;I really do not want to bore you with a ton of science, because there is so much, I rather give you a couple of key points that have improved my sleep the most. I talk from years of experience and trying literally everything there is, including a pricy 3-Nights stay in a sleep laboratory. &lt;/p&gt;

&lt;p&gt;I try to give this somewhat of an order to make clear what helped me the most, but don't think it has to be the same for you, it can be any of those things.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Proper Sleep Hygiene (No screens 1h before bed, go to bed at the same time every day, do your sleep ritual before going to bed, which can be any of the above mentioned methods)&lt;/li&gt;
&lt;li&gt;Meditation and Breathwork before bed&lt;/li&gt;
&lt;li&gt;A &lt;a href="https://amzn.to/35yNMXE"&gt;weighted blanked&lt;/a&gt; (this seriously had the biggest influence on my sleep that I can remember, it's also scientifically proven to work). Do your own research on quality / brand. I live in Germany so I can't tell what is good in the US. I use the Gravity Blanket.&lt;/li&gt;
&lt;li&gt;CBD Oil 10%+ (Expensive but it works)&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://amzn.to/3si1sQP"&gt;L-Tryptophan&lt;/a&gt; (I can't recall where I came on this, but this also helps to relax you before sleep, it works for me, especially in combination with the CBD Oil)&lt;/li&gt;
&lt;li&gt;Earplugs (I generally sleep with Earplugs and have had lots of success with getting better sleep, because I have a kid at home and generally wake up from every fly's fart)&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://join.whoop.com/#/F2AF4F"&gt;Whoop Strap&lt;/a&gt; (I use a Whoop strap to measure and optimize my sleep, while not directly improving my sleep by itself, it definitely helps you to find out what works and what doesn't. It was a very worthwhile investment for me)&lt;/li&gt;
&lt;li&gt;Reduce caffeine intake (Caffeine has a &lt;a href="https://www.healthline.com/health/how-long-does-caffeine-last#how-long-symptoms-last"&gt;half-life time of 3-5 hours&lt;/a&gt;, let's assume you consume a Monster Energy drink which has 36mg caffeine at 3PM. That leaves you with an astonishing 18mg of caffeine at 8PM and still with the half of that 5 hours later. If you are sensitive to caffeine like me, this messes up your sleep big time)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I think those were the most important factors to improving sleep. See what works for you.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#diet" class="anchor"&gt;
  &lt;/a&gt;
  Diet
&lt;/h3&gt;

&lt;p&gt;Now, I won't go into the topic of diet very deep, and I certainly wont tell you what to eat but just know this: &lt;strong&gt;you are what you eat&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;If you stuff yourself with sh*t the whole day, you will feel like sh*t. I won't say which diet is the best, because that highly differs from person to person, there is no one fit all. I personally follow a mostly vegetarian diet with as little processed foods as I can. &lt;/p&gt;

&lt;p&gt;On most days I eat 90% unprocessed foods and 10% processed. Sometimes less. I try to avoid sugar and any kind of stimulants like caffeine or alcohol. Of course, there are exceptions but I generally try to avoid those.&lt;/p&gt;

&lt;p&gt;There is too much to say about diet. If you take one thing away from this: the least processed the better. Stick to natural foods and if you can afford it, go all organic. I have tried almost every popular diet over longer periods of time (1 month to several years), and I have found that sticking with the simple principle of "&lt;strong&gt;least processed, lots of different veggies&lt;/strong&gt;" works best for me.&lt;/p&gt;

&lt;p&gt;There is an excellent book by &lt;strong&gt;Paul Chek&lt;/strong&gt;, whom I deeply respect. It's called "&lt;a href="https://amzn.to/3bvREfQ"&gt;How to Eat, Move and Be Healthy&lt;/a&gt;". If you have no clue how to start your diet journey, buy this book.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;One last tip&lt;/strong&gt;: Don't follow any fad diets or any "loose fat quickly" diets. They &lt;strong&gt;never&lt;/strong&gt; work and are not sustainable, nor healthy.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#help-with-building-habits" class="anchor"&gt;
  &lt;/a&gt;
  Help with Building Habits
&lt;/h2&gt;

&lt;p&gt;Building sustainable habits is &lt;strong&gt;very hard&lt;/strong&gt;. Gladly, there is a great book about that. In fact, it's one of my all-time favorite books. "&lt;a href="https://amzn.to/3i64l28"&gt;Atomic Habits&lt;/a&gt;" by James Clear. &lt;/p&gt;

&lt;p&gt;James tells you his own incredible story and how he turned his life around after having an (near-death) accident. I seriously haven't found better advice on building habits in any other resource I have studied. &lt;/p&gt;

&lt;p&gt;James makes it so easy for you to implement new habits. Here is a little &lt;a href="https://jamesclear.com/how-to-stop-procrastinating"&gt;bite-sized piece of his work&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;I have gifted this book to numerous friends and all of them loved it. It is definitely worth checking out on your journey to avoid burnout as Programmer or Hacker, because all stands and falls with the building of a habit.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-note-on-discipline" class="anchor"&gt;
  &lt;/a&gt;
  A Note on Discipline
&lt;/h2&gt;

&lt;p&gt;I want to emphasize that not a single one of those techniques will give you quick success. I know how we work, we want it all and we want it now. But this is not how this works. &lt;/p&gt;

&lt;p&gt;Everything mentioned above needs time. It needs time to cultivate. You can't reverse 20 years of bad habits or a long history of bad health with a week of Yoga. You need to understand this, I did not understand it from the beginning and I was very frustrated at some point, until I started accepting that those things need time and that is ok.&lt;/p&gt;

&lt;p&gt;I encourage you to start with small steps. As everything in life, consistency is key. &lt;/p&gt;

&lt;p&gt;Start small, start with a minute a day and slowly pick up the pace until you find your sweet spot. If you set too ambitious goals with those things, the only thing that will happen is that you give up and bounce back to a worse state than before. (Diets, anyone?)&lt;/p&gt;

&lt;p&gt;You got this. I believe in you. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion" class="anchor"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;While I feel like I could go on forever on that topic, I have to wrap up this article to not make it too long and too complicated. There is so much advice I can give about how to Avoid Burnout as a Programmer or Hacker that I could write a small book about it. &lt;/p&gt;

&lt;p&gt;I believe in allocating a certain amount of time every single day to your self-care routine. If that means you have to join the 5AM club, so be it, but do it! For me it's the opposite, I stay up late until everyone sleeps to do my routine in quietness. I dedicate two to three full hours to self-care every single day. Which on most days is like 2 hours for Yoga, Meditation and Breathwork and around 1 hour for sport.&lt;/p&gt;

&lt;p&gt;I am very involved in the Twitter InfoSec and Programming community and I see posts about people burning out on a daily basis. Going through all of this myself, I want to help people. The people in this community usually earn a solid salary, so they should be able to get the help they deserve to continue being the best at their job.&lt;/p&gt;

&lt;p&gt;If you feel overwhelmed by all of this or you feel like you can't deal with it alone, &lt;strong&gt;you can book a one-to-one online session with me by writing me an email to &lt;a href="mailto:stefanrows@gmail.com"&gt;stefanrows@gmail.com&lt;/a&gt;&lt;/strong&gt; and we can tailor an individual plan that fits to your lifestyle. &lt;/p&gt;

&lt;p&gt;I hope this article helps you to find direction. Take it easy and stay healthy!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#resources-mentioned-in-this-article" class="anchor"&gt;
  &lt;/a&gt;
  Resources Mentioned in this Article
&lt;/h2&gt;

&lt;p&gt;(Includes affiliate links)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Books&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://amzn.to/2XuwTZT"&gt;Becoming Supernatural: How Common People are Doing the Uncommon&lt;/a&gt; - Joe Dispenza&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://amzn.to/39ob2bX"&gt;Light on Yoga&lt;/a&gt; - B.K.S Iyengar&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://amzn.to/2MMuLdO"&gt;Why We Sleep&lt;/a&gt; &lt;strong&gt;-&lt;/strong&gt; Matthew Walker PhD&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://amzn.to/3oAued5"&gt;Activate Your Full Human Potential&lt;/a&gt; - Wim Hof&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://amzn.to/3i64l28"&gt;Atomic Habits&lt;/a&gt; - James Clear&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://amzn.to/3oFtzHf"&gt;Breath&lt;/a&gt; - James Nestor&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://amzn.to/3bvREfQ"&gt;How to Eat, Move and Be Healthy&lt;/a&gt; - Paul Chek&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Apps&lt;/strong&gt;: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Sam Harris Waking Up App&lt;/li&gt;
&lt;li&gt;Calm App&lt;/li&gt;
&lt;li&gt;Headspace App&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Channels&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Tara Brach Meditations on YouTube&lt;/li&gt;
&lt;li&gt;Meditative Mind on YouTube&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.youtube.com/user/yogawithadriene"&gt;Yoga with Adriene&lt;/a&gt; (Very beginner friendly and very popular)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/lesleyfightmaster"&gt;Fightmaster Yoga&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCDbYvP6yTSVTzaAF7GuSLjA"&gt;Stefan Rows Yoga&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Devices&lt;/strong&gt;: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://join.whoop.com/en-eu/F2AF4F"&gt;Whoop Strap&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Courses&lt;/strong&gt;: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://johnnynasello.com/product/how-to-start-meditating-8-easy-steps//ref/12887"&gt;How to Start Meditating - 8 Easy Steps&lt;/a&gt; by Ali Choi&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://johnnynasello.com/product/guided-meditation-for-beginners//ref/12887"&gt;Guided Meditation for Beginners&lt;/a&gt; by Ali Choi&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;One-to-One's&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Private Yoga Classes ‚Üí &lt;a href="mailto:stefanrows@gmail.com"&gt;stefanrows@gmail.com&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Consultation / Personal Plans ‚Üí &lt;a href="mailto:stefanrows@gmail.com"&gt;stefanrows@gmail.com&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>mentalhealth</category>
      <category>burnout</category>
      <category>programming</category>
      <category>hacking</category>
    </item>
    <item>
      <title>Lesser-Known Yet Still Popular JavaScript Frameworks for Front-End Developers</title>
      <author>Simon Holdorf</author>
      <pubDate>Thu, 21 Jan 2021 14:25:31 +0000</pubDate>
      <link>https://dev.to/simonholdorf/lesser-known-yet-still-popular-javascript-frameworks-for-front-end-developers-1c53</link>
      <guid>https://dev.to/simonholdorf/lesser-known-yet-still-popular-javascript-frameworks-for-front-end-developers-1c53</guid>
      <description>&lt;p&gt;Not long ago, we used Vanilla JavaScript or jQuery to manipulate the DOM in order to create dynamic web applications. Since then, a lot of very good JavaScript frameworks/libraries have emerged helping us to create even more stunning, user-centric applications.&lt;/p&gt;

&lt;p&gt;In this article, I‚Äôm going to show you some powerful but less-known client-side frameworks and libraries for JavaScript. Of course, there are the big three ‚Äî &lt;a href="https://angular.io/"&gt;Angular&lt;/a&gt;, &lt;a href="https://reactjs.org/"&gt;React&lt;/a&gt;, and &lt;a href="https://vuejs.org/"&gt;Vue&lt;/a&gt; ‚Äî but let‚Äôs have a look at other frameworks as well, like &lt;a href="https://svelte.dev/"&gt;Svelte&lt;/a&gt;, &lt;a href="https://preactjs.com/"&gt;Preact&lt;/a&gt;, or &lt;a href="https://riot.js.org/"&gt;Riot&lt;/a&gt;. Which framework to choose depends on factors like developer skills, project situation, industry demand, and others. So check out these frameworks, and decide for yourself.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#svelte" class="anchor"&gt;
  &lt;/a&gt;
  Svelte
&lt;/h2&gt;

&lt;p&gt;&lt;a href="//images.ctfassets.net/28643bqnqgzl/5Ig3sdQbcCvtwkkVGjNZda/3ab3abe67a5c4c9b406a331c9ce0014b/lkyp1.png" class="article-body-image-wrapper"&gt;&lt;img src="//images.ctfassets.net/28643bqnqgzl/5Ig3sdQbcCvtwkkVGjNZda/3ab3abe67a5c4c9b406a331c9ce0014b/lkyp1.png" alt="svelte"&gt;&lt;/a&gt;&lt;br&gt;
Svelte is the new kid on the block that constantly gains in popularity among web developers. It‚Äôs described as a radical new approach for building user interfaces. Compared to Vue or React, which both rely heavily on the browser to do their work, Svelte uses a compile step during build time, allowing for better performance.&lt;/p&gt;

&lt;p&gt;Svelte aims to deliver an outstanding developer experience by reducing the need for writing extensive boilerplate code.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Key features&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Outstanding performance&lt;/li&gt;
&lt;li&gt;Small bundles&lt;/li&gt;
&lt;li&gt;Accessibility&lt;/li&gt;
&lt;li&gt;Built-in style encapsulation&lt;/li&gt;
&lt;li&gt;Declarative transitions&lt;/li&gt;
&lt;li&gt;No virtual DOM&lt;/li&gt;
&lt;li&gt;Less boilerplate code needed&lt;/li&gt;
&lt;li&gt;Truly reactive&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#ember" class="anchor"&gt;
  &lt;/a&gt;
  Ember
&lt;/h2&gt;

&lt;p&gt;&lt;a href="//images.ctfassets.net/28643bqnqgzl/V6ieK7h7mP0H5mPQ6EDEh/3ba029940b18a14fa8cfcdbaab68d15d/lkyp2.png" class="article-body-image-wrapper"&gt;&lt;img src="//images.ctfassets.net/28643bqnqgzl/V6ieK7h7mP0H5mPQ6EDEh/3ba029940b18a14fa8cfcdbaab68d15d/lkyp2.png" alt="ember"&gt;&lt;/a&gt;&lt;br&gt;
Ember.js is another great client-side framework that makes building web applications pretty fast by trying to take all the repetitive, common tasks away from the developer. It provides access to modern JavaScript features.&lt;br&gt;
It comes with a great CLI tool for fast rebuilds, auto-reload, and a test runner. Ember also has a great router that has been the inspiration for other routers, like React Router. The framework is very performant due to its fast rendering technologies.&lt;/p&gt;

&lt;p&gt;Ember addons give you plenty of plugins to enhance your applications. Ember Concurrency, for example, can be used for efficient state management. Ember Simple Auth is an addon supporting all kinds of authentication, and Ember CLI Deploy keeps your deploy logic maintainable and reusable.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Key features&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Build pipeline out of the box&lt;/li&gt;
&lt;li&gt;Best-in-class routing&lt;/li&gt;
&lt;li&gt;Extensive data layer&lt;/li&gt;
&lt;li&gt;Fully-featured testing capabilities&lt;/li&gt;
&lt;li&gt;Six-week release cycle&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#preact" class="anchor"&gt;
  &lt;/a&gt;
  Preact
&lt;/h2&gt;

&lt;p&gt;&lt;a href="//images.ctfassets.net/28643bqnqgzl/4Tjvawboahf0ZxuQUjJioW/7829c737001fbf5c618029308b4d7ce3/lkyp3.png" class="article-body-image-wrapper"&gt;&lt;img src="//images.ctfassets.net/28643bqnqgzl/4Tjvawboahf0ZxuQUjJioW/7829c737001fbf5c618029308b4d7ce3/lkyp3.png" alt="preact"&gt;&lt;/a&gt;&lt;br&gt;
Preact is, as the name already suggests, quite similar to React, but the library is much smaller, only 3Kb. Yet it has the same modern API as React. It provides the thinnest possible virtual DOM abstraction, stable platform features, real event handlers, and can directly be used in the browser without transpilation.&lt;br&gt;
It‚Äôs also one of the fastest client-side frameworks available, lightweight, and highly performant.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Key features&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ES6 classes, hooks, and functional components&lt;/li&gt;
&lt;li&gt;JSX, VDOM, DevTools, SSR&lt;/li&gt;
&lt;li&gt;Ready for server-side rendering&lt;/li&gt;
&lt;li&gt;Modern browser support (IE11+)&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#riot" class="anchor"&gt;
  &lt;/a&gt;
  Riot
&lt;/h2&gt;

&lt;p&gt;&lt;a href="//images.ctfassets.net/28643bqnqgzl/7zTuzyQAwQCggva8jmFvSV/3eda1a3bdb1d66329d2cb48f5e6b482d/lkyp4.png" class="article-body-image-wrapper"&gt;&lt;img src="//images.ctfassets.net/28643bqnqgzl/7zTuzyQAwQCggva8jmFvSV/3eda1a3bdb1d66329d2cb48f5e6b482d/lkyp4.png" alt="riot"&gt;&lt;/a&gt;&lt;br&gt;
Riot is a simple and elegant component-based UI library. It brings custom elements to all modern browsers without the need for polyfills. Those components glue HTML and JavaScript together, forming reusable components. The syntax is clear and aims to be easily readable by humans.&lt;/p&gt;

&lt;p&gt;At only 6Kb, this library is pretty small. It comes with fewer API methods than the bigger frameworks ‚Äî which means there‚Äôs less to learn to be productive.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Key features&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Performant and predictable&lt;/li&gt;
&lt;li&gt;Close to standards&lt;/li&gt;
&lt;li&gt;Tooling-friendly&lt;/li&gt;
&lt;li&gt;Enjoyable syntax&lt;/li&gt;
&lt;li&gt;Small learning curve&lt;/li&gt;
&lt;li&gt;Tiny size&lt;/li&gt;
&lt;li&gt;Powerful, modular ecosystem&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#aurelia" class="anchor"&gt;
  &lt;/a&gt;
  Aurelia
&lt;/h2&gt;

&lt;p&gt;&lt;a href="//images.ctfassets.net/28643bqnqgzl/1pEccIZ2NQxLG2QOfaiagr/11fe2818e0ff5c0bea2d1bff02ea496e/lkyp5.png" class="article-body-image-wrapper"&gt;&lt;img src="//images.ctfassets.net/28643bqnqgzl/1pEccIZ2NQxLG2QOfaiagr/11fe2818e0ff5c0bea2d1bff02ea496e/lkyp5.png" alt="aurelia"&gt;&lt;/a&gt;&lt;br&gt;
Aurelia is a modern client-side JavaScript framework for building web, mobile, and desktop applications. Applications are built by composing simple components, each made of vanilla JavaScript or Typescript with the corresponding HTML.&lt;br&gt;
Aurelia has great documentation and tutorials to help getting started. It comes with a powerful, reactive binding engine, a templating engine, routing capabilities, plugins, support for server-side rendering, and more.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Key features&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Easy to learn&lt;/li&gt;
&lt;li&gt;High performance&lt;/li&gt;
&lt;li&gt;Reactive binding&lt;/li&gt;
&lt;li&gt;Simple testing&lt;/li&gt;
&lt;li&gt;Extensive ecosystem&lt;/li&gt;
&lt;li&gt;Unmatched extensibility&lt;/li&gt;
&lt;li&gt;Routing, composition, and progressive enhancement&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#mithril" class="anchor"&gt;
  &lt;/a&gt;
  Mithril
&lt;/h2&gt;

&lt;p&gt;&lt;a href="//images.ctfassets.net/28643bqnqgzl/uWxMnz2ID77AeWiudWz1i/c6cd53100d0f1175d5d6c5cb9171da16/lkyp6.png" class="article-body-image-wrapper"&gt;&lt;img src="//images.ctfassets.net/28643bqnqgzl/uWxMnz2ID77AeWiudWz1i/c6cd53100d0f1175d5d6c5cb9171da16/lkyp6.png" alt="mythril"&gt;&lt;/a&gt;&lt;br&gt;
Mithril.js is a modern client-side JavaScript framework developed for creating single-page applications. It comes with a small bundle size (9,79Kb) and provides routing and XHR utilities.&lt;/p&gt;

&lt;p&gt;It‚Äôs used by companies like Nike and Vimeo and supports things like JSX, ES6+, animation, testing, and more.&lt;/p&gt;

&lt;p&gt;It has good documentation to get started ‚Äî with many co-dependencies and examples to try things out. However, I find it to be slightly behind the other mentioned libraries in terms of docs.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Key features&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Very performant&lt;/li&gt;
&lt;li&gt;Supports virtual DOM&lt;/li&gt;
&lt;li&gt;Lifecycle methods&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#conclusion" class="anchor"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;I hope you understand there‚Äôs more out there than Angular, Vue, and React. Some use cases require different approaches and frameworks. It highly depends on the situation and project.&lt;br&gt;
In the end, you won‚Äôt make a mistake by going with one of the big three frameworks. Angular is a valid choice for large enterprise applications and is often paired with Java for full-stack development. React and Vue are also good choices. My advice: Don‚Äôt be a fanboy/fangirl/fan person. Try to choose a framework that fits your situation and the project you want to work on. Be open-minded!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If you like what I write and want to support me and my work, please follow me on &lt;a href="https://twitter.com/simonholdorf"&gt;Twitter&lt;/a&gt; to learn more about programming, making, writing &amp;amp; careersü•∞&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>7 Unique APIs for your next project</title>
      <author>Renaissance Engineer</author>
      <pubDate>Thu, 21 Jan 2021 14:00:59 +0000</pubDate>
      <link>https://dev.to/renaissanceengineer/7-unique-apis-for-your-next-project-4hf9</link>
      <guid>https://dev.to/renaissanceengineer/7-unique-apis-for-your-next-project-4hf9</guid>
      <description>&lt;p&gt;Need some inspiration for a new project? In this article I'll go over what I think are 7 of the coolest APIs around that make it quick and easy to build impressive projects. Whether you just want something to help you get a job or create a side project that earns you some money, all of these APIs are valuable.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ill-be-putting-out-a-video-soon-with-more-indepth-project-ideas-so-be-sure-to-subscribe-if-youre-interested-in-seeing-that" class="anchor"&gt;
  &lt;/a&gt;
  I'll be putting out a video soon with more in-depth project ideas so be sure to subscribe if you're interested in seeing that
&lt;/h3&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/XerRP4zeOzs"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-shodan-api" class="anchor"&gt;
  &lt;/a&gt;
  1. Shodan API
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--U4qXuVLd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/3uxrhgm4jgee2bpu3bxy.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--U4qXuVLd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/3uxrhgm4jgee2bpu3bxy.JPG" alt="Shodan API"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can think of Shodan as Google for every device connected to the internet. They crawl the web and catalog devices. You can sign up for a developer account and programmatically access their data and filter based on numerous factors. Some things people have found exposed and unsecured on Shodan:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A French hydroelectric plant control system&lt;/li&gt;
&lt;li&gt;entire cities transportation grids&lt;/li&gt;
&lt;li&gt;databases&lt;/li&gt;
&lt;li&gt;industrial freezers with 10's of thousands of dollars in goods&lt;/li&gt;
&lt;li&gt;car washes that can be remotely shut down&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With Shodan you are really only limited by your imagination, just make sure you don't get yourself arrested.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-radario-api" class="anchor"&gt;
  &lt;/a&gt;
  2. Radar.io API
&lt;/h2&gt;

&lt;p&gt;Radar provides an API that makes it easy to implement various features related to maps and location. With just a few lines of code you can add real-time location tracking, geofencing, and Google Maps like direction and places features.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1lNPy8YZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/ja0v4kndlj2edmrkvptz.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1lNPy8YZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/ja0v4kndlj2edmrkvptz.JPG" alt="Radar API"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-webhose-api" class="anchor"&gt;
  &lt;/a&gt;
  3. WebHose API
&lt;/h2&gt;

&lt;p&gt;WebHose basically scrapes the entire internet and then organizes the content to make it easily accessible via API. You can query their data using a huge amount of filters. For example, if you want to find the most popular blog post written in the last month about Javascript, you can request that via API and then sort by the number of times it was shared on Facebook or LinkedIn.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eY1Qac6C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/q0532hpjb6okg7cbvlsk.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eY1Qac6C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/q0532hpjb6okg7cbvlsk.JPG" alt="WebHose API"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A number of companies use WebHose to see where they are being mentioned online and monitor trends. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-people-data-labs" class="anchor"&gt;
  &lt;/a&gt;
  4. People Data Labs
&lt;/h2&gt;

&lt;p&gt;This API is kind of creepy, but also interesting. I'm not exactly sure how they acquire their data but People Data labs allows you to "enrich" profiles of users on your app. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VImvxcW_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/a54ygphutwn1p03nd9l2.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VImvxcW_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/a54ygphutwn1p03nd9l2.JPG" alt="people data labs"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For example if somebody signs up to your app with just an email, you could send that email to PDL's API and it would return a bunch of additional information like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;job title&lt;/li&gt;
&lt;li&gt;social media profiles&lt;/li&gt;
&lt;li&gt;skills&lt;/li&gt;
&lt;li&gt;employer&lt;/li&gt;
&lt;li&gt;much more&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This could be used to help score leads for your sales team, if a Vice President at Google signs up for your app, you probably want to prioritize talking to them and see if you can make some money.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-crawlera" class="anchor"&gt;
  &lt;/a&gt;
  5. Crawlera
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NFFnt4u5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/y3t1memiouxqscz9nkwz.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NFFnt4u5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/y3t1memiouxqscz9nkwz.JPG" alt="Crawlera"&gt;&lt;/a&gt;&lt;br&gt;
Lots of beginner tutorials show how to make bots and web scrapers but most sites will block you very quickly. Crawlera is a service created by the people who made the popular python scraping library Scrapy. &lt;/p&gt;

&lt;p&gt;Crawlera automatically rotates IP addresses and makes it look like your scraper is coming from real people rather than an automated program. This allows you to scrape sites like Google and Amazon.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Project Idea&lt;/strong&gt; - Make a Amazon product price tracker, with Crawlera you can schedule your bot to check the listing page every few minutes and update users.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-spacex-api" class="anchor"&gt;
  &lt;/a&gt;
  6. SpaceX API
&lt;/h2&gt;

&lt;p&gt;A pretty simple API compared to the other ones, but still interesting I think. Just hit the endpoint from your app and retrieve all sorts of data related to SpaceX launches and rockets. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Project Idea&lt;/strong&gt; - Make a dashboard with ReactJS that lets users explore the data provided by the API&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RGAFb70f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/vbdmnc89eknuq0lfwch9.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RGAFb70f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/vbdmnc89eknuq0lfwch9.JPG" alt="SpaceX API"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-segment" class="anchor"&gt;
  &lt;/a&gt;
  7. Segment
&lt;/h2&gt;

&lt;p&gt;Segment is used to connect data sources from various apps and technologies. Instead of having to build and maintain all these connections between data sources yourself, you just need to work with Segment's API.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nvdq5_dA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/kkd0bmh6v5u6jy1d0yzg.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nvdq5_dA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/kkd0bmh6v5u6jy1d0yzg.JPG" alt="Segment API"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion" class="anchor"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;If you think I forget any APIs let me know. Also I'd love to see people brainstorming cool ideas in the comments below.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>tutorial</category>
      <category>webdev</category>
    </item>
    <item>
      <title>A simplified notion on Image Processing </title>
      <author>Aemie Jariwala</author>
      <pubDate>Thu, 21 Jan 2021 13:34:32 +0000</pubDate>
      <link>https://dev.to/devunf/getting-familiarized-with-image-processing-its-implementation-using-pil-2j9a</link>
      <guid>https://dev.to/devunf/getting-familiarized-with-image-processing-its-implementation-using-pil-2j9a</guid>
      <description>&lt;p&gt;&lt;em&gt;&lt;b&gt;Digital image processing&lt;/b&gt; is the use of a &lt;a href="https://en.wikipedia.org/wiki/Computer#Digital_computers"&gt;digital computer&lt;/a&gt; to process &lt;a href="https://en.wikipedia.org/wiki/Digital_image"&gt;digital images&lt;/a&gt; through an &lt;a href="https://en.wikipedia.org/wiki/Algorithm"&gt;algorithm&lt;/a&gt;.&lt;/em&gt; &lt;br&gt;
~ Definition right off the page from Wikipedia &lt;/p&gt;

&lt;p&gt;Let's begin by simplifying the understanding of &lt;strong&gt;Image Processing&lt;/strong&gt; and moving on further with Image algorithms and different processes followed by implementing them using the &lt;strong&gt;PIL&lt;/strong&gt; library (quite a popular package of Python!). &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j89H0zoN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/0fp3kweid3a1xjx2yvoi.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j89H0zoN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/0fp3kweid3a1xjx2yvoi.gif" alt="excited"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;GIF Credits: Google&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Image processing&lt;/strong&gt; is just a simple way to look at a digital image, be it grey scaled or colored or any different mode and performing various operations/processes like image scaling/resizing, rotation, cropping and adjusting contrast, and many such familiar operations/processes.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#table-of-contents" class="anchor"&gt;
  &lt;/a&gt;
  üèÉ‚Äç‚ôÄÔ∏è Table of Contents üèÉ‚Äç‚ôÇÔ∏è
&lt;/h1&gt;

&lt;p&gt;Providing the entire content table so you're free to choose which topic you want to read! Enjoy reading. üòÅ&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;em&gt;&lt;a href="#before-starting-anything-do-this"&gt;Prerequistes&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href="#pil-library"&gt;About the PIL&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;&lt;a href="#image-representation-amp-its-modes"&gt;Image Respresentation &amp;amp; its modes&lt;/a&gt;&lt;/em&gt;

&lt;ol&gt;
&lt;li&gt;&lt;em&gt;&lt;a href="#pil-implementation-for-different-modes"&gt;PIL Implementation&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;&lt;a href="#image-processing-behind-the-scene-principles"&gt;Image Processing Principles&lt;/a&gt;&lt;/em&gt;

&lt;ol&gt;
&lt;li&gt;&lt;em&gt;&lt;a href="#1-nearest-neighbor-principle"&gt;Nearest Neighbor&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href="#2-bilinear-interpolation"&gt;Bilinear Interpolation&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href="#3-bicubic-interpolation"&gt;Bicubic Interpolation&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href="#4-convolution-method"&gt;Convolution Method&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;&lt;a href="#implementing-transformation-with-a-simple-pil"&gt;Transformation with PIL&lt;/a&gt;&lt;/em&gt;

&lt;ol&gt;
&lt;li&gt;&lt;em&gt;&lt;a href="#1-resizing-an-image-using-different-filters"&gt;Resizing Image&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href="#2-rotating-an-image-using-different-filters"&gt;Rotating Image&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;
  &lt;a href="#before-starting-anything-do-this" class="anchor"&gt;
  &lt;/a&gt;
  Before starting anything, do this!
&lt;/h2&gt;

&lt;p&gt;In this tutorial to perform different image processing on various images, we're using the PIL python library. Now certainly PIL is not just pre-installed on your machine. Thus we got to install &lt;strong&gt;python&lt;/strong&gt;, &lt;strong&gt;&lt;a href="https://pypi.org/project/pip/"&gt;pip&lt;/a&gt;&lt;/strong&gt; and last and the most important, &lt;strong&gt;PIL&lt;/strong&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you have &lt;a href=""&gt;anaconda&lt;/a&gt; installed on your machine, you don't have to do any of the steps mentioned below.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;When you download &lt;a href="https://www.python.org/downloads/"&gt;python&lt;/a&gt;, PIP is installed along with it.  &lt;/p&gt;

&lt;p&gt;For installing PIL, we will install Pillow (Pillow is a maintained fork of PIL):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;pip &lt;span class="nb"&gt;install &lt;/span&gt;Pillow
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;If you want to code side by side along with this blog, I would suggest doing the following in your terminal:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;mkdir &lt;/span&gt;pil-image-processing &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;cd &lt;/span&gt;pil-image-processing
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;mkdir &lt;/span&gt;images
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;We will be writing the programs within the &lt;code&gt;pil-image-processing&lt;/code&gt; directory. You can use any code editor however I will make use of &lt;code&gt;vim&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Also, if you want to use the same images as I have in this blog, you can download the &lt;a href="https://github.com/devunf/pil-image-processing/blob/main/images/image.png"&gt;youtube icon&lt;/a&gt; and &lt;a href="https://github.com/devunf/pil-image-processing/blob/main/images/sunset.png"&gt;sunset picture&lt;/a&gt; and place them in your &lt;code&gt;images&lt;/code&gt; folder.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pil-library" class="anchor"&gt;
  &lt;/a&gt;
  PIL Library
&lt;/h2&gt;

&lt;p&gt;I will give a brief on what the PIL library is and what we'll cover with it.&lt;/p&gt;

&lt;p&gt;PIL library is quite a popular package provided by Python that handles all the image processing and functions that I mentioned earlier. It's in short called &lt;em&gt;Pillow&lt;/em&gt; also(I don't know why!). &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Pillow is the ‚Äúfriendly‚Äù PIL fork by Alex Clark and Contributors.&lt;/em&gt; &lt;br&gt;
~ As mentioned in the &lt;a href="https://pypi.org/project/Pillow/"&gt;documentation&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#image-representation-amp-its-modes" class="anchor"&gt;
  &lt;/a&gt;
  Image Representation &amp;amp; its modes
&lt;/h2&gt;

&lt;p&gt;Pixel is the smallest &amp;amp; the most important component of an image. A collection of pixels makes an image altogether. A pixel value always ranges from &lt;em&gt;0-255&lt;/em&gt;. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--li9MsyXa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/bdo2tzhjgw9pofythze0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--li9MsyXa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/bdo2tzhjgw9pofythze0.png" alt="pixel"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Picture Credits: Google&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;An image always has a width (w) and height (h) and can be understood by its comparison through a matrix with w rows and h columns. &lt;/p&gt;

&lt;p&gt;We'll move on a step further to understand the different modes of images. Earlier I mentioned an image can be represented through a matrix. A matrix is 2-dimensional and this single matrix forms a single &lt;strong&gt;channel of the image&lt;/strong&gt;. That's a new term alert! &lt;/p&gt;

&lt;p&gt;When we fill the matrix in the single-channel with values ranging from &lt;em&gt;0-255&lt;/em&gt;, it will form a &lt;strong&gt;greyscale image&lt;/strong&gt;. Great so now we reached a level where we created a greyscale image. Greyscale image size is simply represented with &lt;code&gt;width x height&lt;/code&gt; format.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DVUeu83s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/7wfdxsmh8zmvrvho2muh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DVUeu83s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/7wfdxsmh8zmvrvho2muh.png" alt="greyscale"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Picture Credits: Google&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Let's move on to form the colored digital images observed these days.&lt;/p&gt;

&lt;p&gt;For understanding the colored images, we'll go to legos. In legos, we build a tower by placing one lego over another. In this manner, each lego is like a single-channel. In RGB/colored images, we've 3 channels that are placed on top of each other to create a single image. &lt;/p&gt;

&lt;p&gt;In RGB, we have got the Red, Green, and Blue channels. Each of these channels is filled with values ranging from 0-255. Together, when these channels are together placed, we get a colored image. It's as simple as that theoretically. In practice, we know that an image has a width (w) represented as rows and height (h) represented as columns but in an RGB image, we also need to mention the channels (c). &lt;/p&gt;

&lt;p&gt;The RGB image size is represented as &lt;code&gt;width x height x channels&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WTwZ_n_p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/819su7ssi3af8io2nvnv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WTwZ_n_p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/819su7ssi3af8io2nvnv.png" alt="RGB"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Picture Credits: Google&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;There are various other modes apart from RGB &amp;amp; greyscale such as CYMK and RGBA (and so many others). &lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#rgba-gt-rgb-alpha-lchannel-handles-opacity-of-the-image" class="anchor"&gt;
  &lt;/a&gt;
  RGBA =&amp;gt; RGB + Alpha lchannel (handles opacity of the image)
&lt;/h4&gt;
&lt;h3&gt;
  &lt;a href="#pil-implementation-for-different-modes" class="anchor"&gt;
  &lt;/a&gt;
  PIL Implementation for different modes
&lt;/h3&gt;

&lt;p&gt;In PIL, there are several shortcodes for &lt;a href="https://pillow.readthedocs.io/en/latest/handbook/concepts.html#modes"&gt;modes&lt;/a&gt; in their documentation with which we will refer and perform simple operations. &lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#1-convert-any-image-format-to-greyscale-format" class="anchor"&gt;
  &lt;/a&gt;
  1. Convert any image format to greyscale format
&lt;/h4&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;PIL&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Image&lt;/span&gt;
&lt;span class="n"&gt;img&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'images/image.png'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;convert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'LA'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'images/greyscale.png'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;Now, this just converted our colored image to greyscale, damn! I will explain what this code does: &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Import the &lt;code&gt;Image&lt;/code&gt; package from the PIL library to use the in-built functions.&lt;/li&gt;
&lt;li&gt;We open the image apply the &lt;strong&gt;LA&lt;/strong&gt; mode to convert to greyscale and assign it to the variable &lt;code&gt;img&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;We save this new image by specifying the path.&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;LA is not Los Angeles guys but a mode specified by PIL in their documentation.&lt;br&gt;
&lt;/p&gt;


&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;L -  (8-bit pixels, black, and white)
LA (L with alpha)
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7DmmMPq0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/xs3re41fhv72vx07x83c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7DmmMPq0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/xs3re41fhv72vx07x83c.png" alt="result-1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Picture taken from Google, updated by myself&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4&gt;
  &lt;a href="#2-splitting-colored-image-to-their-respective-channel" class="anchor"&gt;
  &lt;/a&gt;
  2. Splitting colored image to their respective channel
&lt;/h4&gt;

&lt;p&gt;Here, a colored image has 3 layers as mentioned before: Red, Green &amp;amp; Blue. What we'll do is extract each channel separately from the image and save those individual channels. Simple!!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;PIL&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Image&lt;/span&gt;
&lt;span class="n"&gt;img&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'images/sunset.png'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getdata&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ar9fRErf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/28gruvj96s1se2wbn7kt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ar9fRErf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/28gruvj96s1se2wbn7kt.png" alt="original"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Picture Credits: Google&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Here, we open the image and assign it to variable img. After that, we're extracting the data of a colored image. We also mentioned before that a channel of an image is formed through a matrix that encompasses the pixel values ranging from 0-255. &lt;/p&gt;

&lt;p&gt;Now for one channel, we've one matrix filled with pixel values. But in a colored image, we've 3 channels (red, green &amp;amp; blue) so we've three matrixes filled with a pixel value. &lt;/p&gt;

&lt;p&gt;Again, a matrix is represented in a 2-D array with rows and columns. Now we've to include the values of 3 matrixes so we do it using a 3-D array and it comes in this format.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[[
  [r(0,0), g(0,0), b(0,0)], [r(0,1), g(0,1), b(0,1)]], 
  [[r(1,0), g(1,0), b(1,0)], [r(1,1), g(1,1), b(1,1)]
]] 
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;This format is better understood diagrammatically as shown:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lSKbvvIA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/xprae0j4h2tcs3jg5409.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lSKbvvIA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/xprae0j4h2tcs3jg5409.png" alt="diagram-format"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thus, the data we extract from the image will be of the format:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[[[202 112 104]
 [202 112 104]
 [202 112 104]
 ...
 [200 111 105]
 [200 111 105]
 [199 110 104]]

 [[202 112 104]
 [202 112 104]
 [202 112 104]
 ...
 [200 111 103]
 [200 111 103]
 [199 110 102]]]
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Let's use this data and split this data so we can get the r pixel values for the red channel, g pixel values for the green channel, and b pixel values for the blue channel.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;red&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="n"&gt;pixel&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;pixel&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;green&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pixel&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;pixel&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;blue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pixel&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;pixel&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;As we have seen the data is of 3-D array format, thus let's focus on extracting only the red matrix for now. In the 3-D array, the internal array is of the format &lt;code&gt;[r, g, b]&lt;/code&gt; and we need to take the first value of this array to get the red pixel values. We do this similarly for creating the green matrix and blue matrix.&lt;/p&gt;

&lt;p&gt;Let's use these 3 matrixes and save them. We can then see the separate red, green, and blue channels of the original image.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;putdata&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;red&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'images/red_sunset.png'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;putdata&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;blue&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'images/blue_sunset.png'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;putdata&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;green&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'images/green_sunset.png'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Here, we use the &lt;code&gt;putdata()&lt;/code&gt; in-built function to copy the matrix content into the original image and then saving it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_0xQEvCV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/xbfz5b3s9nhuwjgv2zsa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_0xQEvCV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/xbfz5b3s9nhuwjgv2zsa.png" alt="result-2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#image-processing-behind-the-scene-principles" class="anchor"&gt;
  &lt;/a&gt;
  Image Processing - Behind The Scene Principles
&lt;/h2&gt;

&lt;p&gt;For image processing techniques such as rescaling/resizing and rotation are formed based on principals of - nearest neighbor, bilinear transformation &amp;amp; other principles I will explain in detail.&lt;/p&gt;

&lt;p&gt;Let's start with the simplest principle and climb up with more complex ones. Just note that all these principles I will be explaining theoretically in the simplest form and not mathematically. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-nearest-neighbor-principle" class="anchor"&gt;
  &lt;/a&gt;
  1. Nearest Neighbor Principle
&lt;/h3&gt;

&lt;p&gt;In this principle, we have an original image(A) and we apply an image processing technique to convert it to a modified image(B).&lt;/p&gt;

&lt;p&gt;I will explain this by resizing an image from A (3x3) to B (9x9). The first step to do is take the coordinates of the A image, multiple it by 3, then we will get a coordinate in the B image. This new coordinate of image B will have the same pixel value as the original coordinate in image A had.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A(0, 0) =&amp;gt; 110
A(0, 1) =&amp;gt; 120  
&amp;gt;&amp;gt;&amp;gt; x3 &amp;lt;&amp;lt;&amp;lt;
B(0, 0) =&amp;gt; 110
B(0, 3) =&amp;gt; 120 
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Now, we need to find the pixel value B(0, 1), and to do that we do as followed:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;B(0, 1) =&amp;gt; ? 
&amp;gt;&amp;gt;&amp;gt; /3 &amp;lt;&amp;lt;&amp;lt; 
A(0, 1/3) =&amp;gt; no such coordinate exists, right?
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;You're right no such coordinate exists but the nearest neighbor asks that is &lt;strong&gt;A(0, 1/3)&lt;/strong&gt; closer to &lt;strong&gt;A(0, 0)&lt;/strong&gt; or &lt;strong&gt;A(0, 1)&lt;/strong&gt;. Here, it is closer to &lt;strong&gt;A(0, 1)&lt;/strong&gt; thus the pixel value of &lt;strong&gt;B(0, 1)&lt;/strong&gt; will be the same as &lt;strong&gt;A(0, 0)&lt;/strong&gt;. Similarly, other coordinates are calculated as well! This is not so efficient, certainly!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-bilinear-interpolation" class="anchor"&gt;
  &lt;/a&gt;
  2. Bilinear Interpolation
&lt;/h3&gt;

&lt;p&gt;As you would have understood if we use the nearest neighbor principle to resize or rotate an image, it won't produce an accurate output and will be pixelated. Thus, we use another principle - Bilinear Transformation.&lt;/p&gt;

&lt;p&gt;Let's take the sample example of resizing an image A(3x3) to image B(9x9). &lt;/p&gt;

&lt;p&gt;Before we understand bilinear transformation, we need to understand linear transformation. We'll take the same example as we did in the nearest neighbor. So we need to find &lt;strong&gt;B(0, 1)&lt;/strong&gt; and the way we do it is found &lt;strong&gt;A(0, 1/3)&lt;/strong&gt; and the manner we do it is: &lt;/p&gt;

&lt;p&gt;We have the pixel value &lt;strong&gt;A(0, 0)&lt;/strong&gt; and &lt;strong&gt;A(0, 1)&lt;/strong&gt; so first we find &lt;code&gt;1/3 * value @ A(0, 1)&lt;/code&gt; and &lt;code&gt;2/3 * value @ A(0, 0)&lt;/code&gt;. Add those up and round it, you got the pixel value for &lt;strong&gt;A(0, 1/3)&lt;/strong&gt; and that's your value for &lt;strong&gt;B(0, 1)&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;We use this method to find any coordinate between 2 given coordinates. In bilinear, we make use of 4 consecutive coordinates in the original image A. With these coordinates, we calculate an ideal coordinate in image A and scale it to a coordinate in image B. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f7B8ilI8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/oxl53kljkvx7xqyub33o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f7B8ilI8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/oxl53kljkvx7xqyub33o.png" width="350" height="50" alt="bilinear"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;We have pixel values of &lt;strong&gt;A(0, 0)&lt;/strong&gt;, &lt;strong&gt;A(0, 1)&lt;/strong&gt;,  &lt;strong&gt;A(1, 0)&lt;/strong&gt;, and &lt;strong&gt;A(1, 1)&lt;/strong&gt;. First, we find the coordinates of the square blocks between the 2 coordinates of image A using the linear interpolation method.&lt;/li&gt;
&lt;li&gt;With the coordinates of the 2 square blocks, we can interpolate and find the coordinate of the triangle block(the chosen one!). &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Once we find the coordinate of the triangle block, we just map it to image B.&lt;/p&gt;

&lt;p&gt;So that's the basic idea of how bilinear works. In this manner, we can find any coordinate between 2 coordinates in our image B. With this principle, we can get much accurate pixel values and a smoother modified image. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-bicubic-interpolation" class="anchor"&gt;
  &lt;/a&gt;
  3. Bicubic Interpolation
&lt;/h2&gt;

&lt;p&gt;In bicubic interpolation, we make use of a cubic equation. However, as I have mentioned before we'll focus on the theoretical rather than the mathematical understanding of the principle. &lt;/p&gt;

&lt;p&gt;Let's look back at linear/bilinear interpolation to transform from image A to image B.&lt;/p&gt;

&lt;p&gt;The below diagram in the 2-D plane shows that b/w any 2 given coordinate is just a line and you can find any coordinate between those 2 using the linear interpolation method:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0taNNpQd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/4i0rdd4nvrquwnpepu7d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0taNNpQd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/4i0rdd4nvrquwnpepu7d.png" alt="deep-explanation"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;However, this linear interpolation doesn't always provide a highly accurate or smooth result. Thus, we make use of bicubic. &lt;/p&gt;

&lt;p&gt;From this diagram, if I use the bicubic method, what it implies is if there are 2 given coordinates and there is the line joining those 2, then we will use the tangent/derivative at those 2 coordinates and make the curve and find any coordinate between those 2.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-are-we-calculating-the-derivatives-at-the-coordinates" class="anchor"&gt;
  &lt;/a&gt;
  How are we calculating the derivatives at the coordinates?
&lt;/h3&gt;

&lt;p&gt;For calculating the tangent at those 2 given coordinates, we need the neighboring coordinates of those 2 as well! So easy, right? &lt;/p&gt;

&lt;p&gt;We use the linear interpolation method to calculate the ideal coordinate in bilinear interpolation using 4 coordinates.&lt;/p&gt;

&lt;p&gt;If we want to find the ideal coordinate between those 4 using bicubic, we'll need to use the extension as shown in the diagram. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sI-dr5_e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/p0k1s1rx6e4oamfgss13.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sI-dr5_e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/p0k1s1rx6e4oamfgss13.png" width="500"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For bicubic, we'll do as followed: &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;For each row, we will find the coordinate (square blocks) between 2 given coordinates and we need to find the tangent at those 2 given coordinates using the neighbor of the given 2.&lt;/li&gt;
&lt;li&gt;Once the coordinates of the square blocks are calculated, we use the same method in 1 and get the ideal coordinate of the triangle block.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The coordinate of the triangle block is scaled to the coordinate in image B. This gives a much smoother transformation as compared to bicubic interpolation. &lt;/p&gt;

&lt;p&gt;Let's cover our last principle before we jump to implementation using PIL. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-convolution-method" class="anchor"&gt;
  &lt;/a&gt;
  4. Convolution method
&lt;/h2&gt;

&lt;p&gt;This is an &lt;strong&gt;important&lt;/strong&gt; principle! It's important 'cause today principles like bi-cubic, bilinear is based upon the convolution principle itself.&lt;/p&gt;

&lt;p&gt;Let's begin by understanding convolution. In convolution let's say we have an image I(7x7) and what we'll do here is slide a kernel window K(3x3) over the image I such that we'll get a new image J(5x5) = I(7x7) * K(3x3)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lgmPSrSh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/90ik1m65ww0no1qzi2gx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lgmPSrSh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/90ik1m65ww0no1qzi2gx.png" alt="convolution"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Picture Credits: Google&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In the diagram, we see that the kernel K slides over image I. &lt;br&gt;
Then when the kernel K is over a section of image I, it multiplies the pixel values of K and I and then adds them all up in the section, and we get a convoluted image pixel value. I know this sounds confusing so we'll understand this with an example. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--brj29DFh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/fbefcneze73ehhw9q208.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--brj29DFh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/fbefcneze73ehhw9q208.png" alt="convolution"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In that image, we have a section of image I and we've our kernel K. From the diagram, it's understandable how the 9-pixel values result in a 1 convoluted pixel value. In this manner, we continue to slide the kernel K over the entire image I and get a convoluted image J (I * K). &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;This is a heavy process, don't let anyone tell you different!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Before moving further, I would like to clarify that these methods that I specified are used as filters to perform the transformation in images.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#implementing-transformation-with-a-simple-pil" class="anchor"&gt;
  &lt;/a&gt;
  Implementing transformation with a simple PIL
&lt;/h2&gt;

&lt;p&gt;According to the documentation of PIL: &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Image resizing methods &lt;code&gt;resize()&lt;/code&gt; and &lt;code&gt;thumbnail()&lt;/code&gt; take a resample argument, which tells which filter should be used for resampling. Possible values are &lt;code&gt;PIL.Image.NEAREST&lt;/code&gt;, &lt;code&gt;PIL.Image.BILINEAR&lt;/code&gt;, &lt;code&gt;PIL.Image.BICUBIC&lt;/code&gt; and &lt;code&gt;PIL.Image.ANTIALIAS&lt;/code&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;~&lt;/p&gt;

&lt;p&gt;&lt;em&gt;The upscaling performance of the LANCZOS filter has remained the same. For the BILINEAR filter, it has improved by 1.5 times and for BICUBIC by four times.&lt;/em&gt; &lt;/p&gt;

&lt;p&gt;From those 2 contexts from documentation, we know what Nearest, Bilinear, and Bicubic are, so that's cool! Now, what's Antialias and Lanczos? &lt;br&gt;
Antialias is a high-quality filter based on convolutions (we learned this!). Now Antilias filter is just an alias of Lanczos. So Lanczos and antialias are based on convolution.&lt;/p&gt;

&lt;p&gt;Let's implement resizing using these filters with PIL. &lt;/p&gt;

&lt;p&gt;In the documentation, for using the filters while resizing and rotation we can use their names explicitly or the number assigned for them.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;NEAREST = NONE = 0
BILINEAR = LINEAR = 2
BICUBIC = CUBIC = 3
LANCZOS = ANTIALIAS = 1
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#1-resizing-an-image-using-different-filters" class="anchor"&gt;
  &lt;/a&gt;
  1. Resizing an image using different filters
&lt;/h3&gt;

&lt;p&gt;We're going to re-use the &lt;a href="https://github.com/devunf/pil-image-processing/blob/main/images/sunset.png"&gt;sunset&lt;/a&gt; image that we did while splitting the image into different channels. Let's get coding!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;PIL&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Image&lt;/span&gt;
&lt;span class="n"&gt;img&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'images/sunset.png'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;size&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;350&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;550&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;nearest_resize&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;resize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;lanczos_resize&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;resize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;bilinear_resize&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;resize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;bicubic_resize&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;resize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;nearest_resize&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'images/nearest_sunset.png'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;lanczos_resize&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'images/lanczos_sunset.png'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;bilinear_resize&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'images/bilinear_sunset.png'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;bicubic_resize&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'images/bicubic_sunset.png'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Here, we're resizing the original image using different filters. With the current image, you may not be able to see much difference as shown. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YVItLANU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/wn4n1bi26pvyj5ug9mby.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YVItLANU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/wn4n1bi26pvyj5ug9mby.png" alt="result-resize"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--43_bCW4k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/y4g5e60dopfcdzvse28j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--43_bCW4k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/y4g5e60dopfcdzvse28j.png" alt="result-resize-observable"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;However, this particular image provides a good difference between resizing between different filters. I would suggest looking at the filters that have been used by us in this blog and observe the difference.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-rotating-an-image-using-different-filters" class="anchor"&gt;
  &lt;/a&gt;
  2. Rotating an image using different filters
&lt;/h3&gt;

&lt;p&gt;We'll be using the filters to rotate an image by any degree we wish to. However, there is a problem when rotation happens to let's say 30 or 45 degrees, the edges get clipped off. If we don't want that we'll be setting &lt;code&gt;expand=true&lt;/code&gt; which will prevent that! &lt;/p&gt;

&lt;p&gt;In resizing, we used numbers to depict what kind of filter we want to use over the image while resizing. Here, we'll explicitly type their names out and again use the same &lt;a href="https://github.com/devunf/pil-image-processing/blob/main/images/sunset.png"&gt;sunset&lt;/a&gt; image.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;PIL&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Image&lt;/span&gt;
&lt;span class="n"&gt;img&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'images/sunset.png'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;nearest_rotate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;45&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;resample&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NEAREST&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;expand&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;bilinear_rotate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;45&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;resample&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BILINEAR&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;expand&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;bicubic_rotate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;45&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;resample&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BICUBIC&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;expand&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;nearest_rotate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'images/nearest_rotate_sunset.png'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;bilinear_rotate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'images/bilinear_rotate_sunset.png'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;bicubic_rotate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'images/bicubic_rotate_sunset.png'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Here, the &lt;strong&gt;Lanczos&lt;/strong&gt; filter can't be used for rotation as it is not implemented by PIL itself and quite a heavy process so doesn't hold any advantage over &lt;strong&gt;bicubic&lt;/strong&gt; for now.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;PIL is not limited to just resizing, rotation, splitting images but it can do so much more. Everything you perform on photo editing tools such as crop, copy-pasting, merging 2 images can be achieved through PIL just through few lines of code. In this, I have only used the &lt;code&gt;Image&lt;/code&gt; module but there are many modules for PIL itself.&lt;/p&gt;

&lt;p&gt;For any additional resources for PIL, just look through their &lt;a href="https://pillow.readthedocs.io/en/stable/reference/index.html"&gt;documentation&lt;/a&gt;, and certainly if stuck, stack overflow always provides every answer. PIL is an effective library and I have covered the 2 most commonly used operations and the principles that reside behind the transformation.&lt;/p&gt;

&lt;p&gt;The sources for each code is present on &lt;a href="https://github.com/devunf/pil-image-processing"&gt;Github&lt;/a&gt; as well, so you can refer from there and code side by side too! &lt;/p&gt;

&lt;p&gt;If any questions arise regarding PIL or anything mentioned in the article, feel free to mention it in the comments! Till then, goodbye. üëã &lt;/p&gt;

</description>
      <category>python</category>
      <category>programming</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
  </channel>
</rss>
