<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Cool (online) places</title>
      <author>Julien Maury</author>
      <pubDate>Tue, 01 Jun 2021 20:53:20 +0000</pubDate>
      <link>https://dev.to/jmau111/cool-online-places-3po8</link>
      <guid>https://dev.to/jmau111/cool-online-places-3po8</guid>
      <description>&lt;p&gt;Here are 3 lists with useful and original websites to learn code or simply enjoy life.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pure-snippets-and-articles"&gt;
  &lt;/a&gt;
  Pure snippets and articles
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://ohhelloana.blog/"&gt;Oh Hello Ana&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.a11ywithlindsey.com/blog/"&gt;A11y with Lindsey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://victoria.dev"&gt;Victoria.dev&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.oddbird.net/blog/"&gt;Odd Bird&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://moderncss.dev"&gt;Modern CSS Solutions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://alistapart.com/"&gt;A list apart&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://veerle.duoh.com/"&gt;Veerle&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#visuals"&gt;
  &lt;/a&gt;
  Visuals
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://domevents.dev"&gt;DOM Events&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://caniemail.com"&gt;Can I email&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://runjs.app"&gt;RunJS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cssanimation.rocks/"&gt;CSS Animation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://d3js.org/"&gt;d3js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://informationisbeautiful.net/"&gt;Information is beautfiful&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://viz.wtf/"&gt;viz.wtf&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#beautiful-galleries-and-showdev"&gt;
  &lt;/a&gt;
  Beautiful galleries and #showdev
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://projects.verou.me/css3patterns/"&gt;Lea Verou - css3 patterns&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/afif/series"&gt;Temani Afif - legendary series&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://usehooks.com"&gt;useHooks.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://2020-dm.com/"&gt;This was 2020&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bennettfeely.com/gradients/"&gt;Bennet Feely&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.uxsequence.io/hunt-for-satoshi/"&gt;The Hunt for Satoshi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://2020.stateofcss.com/en-US/awards/"&gt;The state of CSS 2020&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
    </item>
    <item>
      <title>Does being disabled make you more likely to identify as lesbian, gay or bisexual? (or vice versa!)</title>
      <author>InHuOfficial</author>
      <pubDate>Tue, 01 Jun 2021 20:26:01 +0000</pubDate>
      <link>https://dev.to/inhuofficial/does-being-disabled-make-you-more-likely-to-identify-as-lesbian-gay-or-bisexual-3b91</link>
      <guid>https://dev.to/inhuofficial/does-being-disabled-make-you-more-likely-to-identify-as-lesbian-gay-or-bisexual-3b91</guid>
      <description>&lt;p&gt;Yeah I knew that title would catch your attention! &lt;/p&gt;

&lt;p&gt;But it isn't clickbait!  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Quick note:&lt;/strong&gt; This is obviously a subject that can cause a lot of tension etc. I do not mention TQIA+ within this article purely as the study is from 2012 and there wasn't the data then (or the understanding we have now), it is not my intention to exclude! There is even a second disclaimer at the end of this article I am that bothered about something inadvertently causing harm within this article. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-study-titled-disability-among-lesbian-gay-and-bisexual-adults-disparities-in-prevalence-and-risk"&gt;
  &lt;/a&gt;
  A study titled "Disability Among Lesbian, Gay, and Bisexual Adults: Disparities in Prevalence and Risk"
&lt;/h2&gt;

&lt;p&gt;I read a &lt;a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3490559/"&gt;really interesting study about the prevalence of disability among people who are gay, lesbian or bisexual&lt;/a&gt; but it just left me with so many questions!&lt;/p&gt;

&lt;p&gt;Now if you don't do scientific papers (I am not brilliant at reading them so if someone wants to break down any holes in the paper or my understanding please do correct me!) the "headline statistic" is that if you are a woman with a disability you are almost 50% more likely to be lesbian or bisexual, and if you are a man with a disability you are over 50% more likely to be bisexual. (or vice versa, it could be that if you are lesbian you are more likely to have a disability for example).&lt;/p&gt;

&lt;p&gt;I have seen the &lt;a href="https://www.respectability.org/2018/06/lgbt-pride-month-2018/"&gt;statistics being mentioned&lt;/a&gt; in &lt;a href="https://www.disabled-world.com/disability/sexuality/lgbt/"&gt;multiple places&lt;/a&gt; but nobody ever cites the source, so I decided to track it down given that it is pride month and my affinity with inclusion to see if we can unravel the reason the relationship exists or dismiss this as a myth if the study is flawed!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-does-that-correlation-exist"&gt;
  &lt;/a&gt;
  Why does that correlation exist?
&lt;/h2&gt;

&lt;p&gt;It is a complex question to answer, I have a couple of loose ideas but that is why I am asking, someone smarter than me might be able to answer!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#is-it-that-being-gay-lesbian-or-bisexual-makes-you-more-likely-to-be-disabled"&gt;
  &lt;/a&gt;
  Is it that being gay, lesbian or bisexual makes you more likely to be disabled?
&lt;/h3&gt;

&lt;p&gt;If this is the case, is this because of socioeconomic reasons? &lt;/p&gt;

&lt;p&gt;They do mention in the study that bisexual men and women tend to be below the poverty level, and socioeconomic status often correlates very closely with disability (but yet again, which is the causal factor?). &lt;/p&gt;

&lt;p&gt;Is the poverty level associated with the likelihood of being from a single person household. &lt;/p&gt;

&lt;p&gt;If that is the reason then my big question is "is the difference between LGBTQIA+ and heterosexual levels of disability going to lessen as more LGBTQIA+ people get married / acceptance levels improve further"?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#or-is-it-that-being-disabled-means-you-are-more-likely-to-be-gay-lesbian-or-bisexual"&gt;
  &lt;/a&gt;
  Or is it that being disabled means you are more likely to be gay, lesbian or bisexual?
&lt;/h3&gt;

&lt;p&gt;And if so, is that due to the fact you become more accepting of yourself and more willing to explore your sexuality?&lt;/p&gt;

&lt;p&gt;Or is it a combination of factors, the difference between the number of gay men (26.16%) and lesbian women (35.51%) who have a  disability is quite large. &lt;/p&gt;

&lt;p&gt;Is that because women who are disabled and also view themselves as vulnerable might feel safer with another woman? Is it that women are more accepting of disabilities than men?&lt;/p&gt;

&lt;p&gt;I don't know, that is why I am asking!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-does-it-matter"&gt;
  &lt;/a&gt;
  Why does it matter?
&lt;/h2&gt;

&lt;p&gt;Now you might think, other than pure curiosity why does it matter?&lt;/p&gt;

&lt;p&gt;Well to me it would mean that the LGBTQIA+ community are closely "aligned" with the disabled community.&lt;/p&gt;

&lt;p&gt;It also means a lot of the articles that are out there designed to help people with disabilities explore and or rediscover their sexuality are excluding a large portion of the population (as they are mostly weighted towards heterosexual relationship advice).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-do-i-hope-to-learn-why-does-it-matter-to-me"&gt;
  &lt;/a&gt;
  What do I hope to learn / why does it matter to me?
&lt;/h3&gt;

&lt;p&gt;I am (and have been for months) working on a resource all about and for people with disabilities.&lt;/p&gt;

&lt;p&gt;I can't completely separate sexuality from the equation if there is indeed a significant difference in how heterosexual and LGBTQIA+ people with disabilities express their sexuality.&lt;/p&gt;

&lt;p&gt;I am also trying to take my experiences and interactions out of the equation when designing this resource so differing opinions (or consensus) hopefully lets me have a more rounded view.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#over-to-you"&gt;
  &lt;/a&gt;
  Over to you
&lt;/h2&gt;

&lt;p&gt;There are a load of people on here who are way smarter than I am, have different experiences than me etc. I am here to learn from you all.&lt;/p&gt;

&lt;p&gt;Why do you think this (quite strong) relationship exists?&lt;/p&gt;

&lt;p&gt;Do you see any flaws in the study that mean this is not actually true?&lt;/p&gt;

&lt;p&gt;What do you think that means for the battle for inclusion and equality?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#if-i-misphrased-anything"&gt;
  &lt;/a&gt;
  If I mis-phrased anything
&lt;/h3&gt;

&lt;p&gt;I know this is a sensitive subject, if I mis-phrased anything then I did not mean it in any derogatory way etc.&lt;/p&gt;

&lt;p&gt;It is not my intention to offend. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#speak-your-mind"&gt;
  &lt;/a&gt;
  Speak your mind
&lt;/h3&gt;

&lt;p&gt;Finally, I will be as lax as possible with the comments so feel free to offer an opinion that might be "on the edge" of controversial if you feel it adds something to the conversation.&lt;/p&gt;

&lt;p&gt;As long as it isn't outright hateful or disgusting I will rely on the community to correct you (or me) if you / I are out of line anywhere!&lt;/p&gt;

</description>
      <category>devpride</category>
      <category>a11y</category>
      <category>discuss</category>
      <category>healthydebate</category>
    </item>
    <item>
      <title>The 3 most interesting Kotlin posts of May 2021 </title>
      <author>Jean-Michel Fayard 🇫🇷🇩🇪🇬🇧🇪🇸🇨🇴</author>
      <pubDate>Tue, 01 Jun 2021 20:22:01 +0000</pubDate>
      <link>https://dev.to/jmfayard/the-3-most-interesting-kotlin-posts-of-may-2021-4i4g</link>
      <guid>https://dev.to/jmfayard/the-3-most-interesting-kotlin-posts-of-may-2021-4i4g</guid>
      <description>&lt;p&gt;Let me share with you 3 interesting articles from &lt;a href="https://dev.to/t/kotlin/top/month"&gt;#kotlin&lt;/a&gt; from May 2021.&lt;/p&gt;

&lt;p&gt;I follow here the example from &lt;a class="mentioned-user" href="https://dev.to/sandordargo"&gt;@sandordargo&lt;/a&gt;
 &lt;a href="https://dev.to/sandordargo/the-3-most-interesting-c-posts-of-may-2021-1974"&gt;for #c++&lt;/a&gt;, and like him, it's not a popularity contest, I add subjectivity to the list yet try not to include multiple articles from the same author.&lt;/p&gt;

&lt;p&gt;This month, it's all about Jetpack Compose!&lt;/p&gt;




&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/zachklipp"&gt;@zachklipp&lt;/a&gt;
 does a deep dive inside Compose reactive state model. He takes an historical look at how we used to write code with callbacks, what RxJava brought to the table and what questions were left open. He then shows how Jetpack Compose allows us to write fully reactive apps with less boilerplate and hopefully less cognitive overhead than we’ve been able to do in the past. Simple, clear code that is easy to read and understand will (usually) just work as intended. In particular, Compose makes mutable state not be scary anymore.&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/zachklipp" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fjzb9beO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--Dl0BtUFH--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/431060/3b3163b7-40b2-47a7-9fab-a92e4fbb6d71.jpg" alt="zachklipp image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/zachklipp/a-historical-introduction-to-the-compose-reactive-state-model-19j8" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;A historical introduction to the Compose reactive state model&lt;/h2&gt;
      &lt;h3&gt;Zach Klippenstein ・ May 24 ・ 9 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#android&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#kotlin&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#compose&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;





&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/tkuenneth"&gt;@tkuenneth&lt;/a&gt;
 has started a cartography of Jetpack Compose. It's not a tutorial on how to use it, but an exploratory approach of what Jetpack Compose is made of. What belongs to the runtime? What is in the compiler? What is inside the foundation?&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/tkuenneth" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--15ImClzW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--vFm2cye4--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/299234/0d93740a-490e-4c77-8571-458be5e67421.png" alt="tkuenneth image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/tkuenneth/cartographing-jetpack-compose-compiler-and-runtime-1605" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Cartographing Jetpack Compose: compiler and runtime&lt;/h2&gt;
      &lt;h3&gt;Thomas Künneth ・ May 9 ・ 5 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#android&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#jetpackcompose&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#kotlin&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;





&lt;p&gt;So much for the theory, here goes some coding. Sebastian Aigner from @kotlin tells us how he built a small clone of the classic arcade game Asteroids with Jetpack Compose for Desktop, a port from JetBrains to MacOS/Windows/Linux. Impressively the code is only 300 lines of code and was written in one night!&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/sebastianaigner" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kSTlWat0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--6FQVzg70--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/26006/58280da5-1e32-4986-be77-79297aaf1175.jpg" alt="sebastianaigner image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/kotlin/how-i-built-an-asteroids-game-using-jetpack-compose-for-desktop-309l" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;How I built an "Asteroids" game using Jetpack Compose for Desktop&lt;/h2&gt;
      &lt;h3&gt;Sebastian Aigner ・ May 6 ・ 7 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#gamedev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#kotlin&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#jetpackcompose&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#android&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;





&lt;p&gt;Happy coding, feel free to share your favorite one in the comments.&lt;/p&gt;

</description>
      <category>kotlin</category>
      <category>bestofdev</category>
    </item>
    <item>
      <title>5 VSCode Features I Use Daily as a Full Stack Engineer</title>
      <author>Teal Larson</author>
      <pubDate>Tue, 01 Jun 2021 19:50:29 +0000</pubDate>
      <link>https://dev.to/tealdoestech/5-vscode-features-i-use-daily-as-a-full-stack-engineer-2nmp</link>
      <guid>https://dev.to/tealdoestech/5-vscode-features-i-use-daily-as-a-full-stack-engineer-2nmp</guid>
      <description>&lt;p&gt;As a software engineer, there are times you'll walk into a codebase that is already established and is some combination of: (a) new to you (b) much larger/more complex than other projects you've worked on and (c) uses a structure and some core libraries that are new to you.  OR you're a mutant genius, in which case no need to read on (but I would like to know more).  &lt;/p&gt;

&lt;p&gt;Having the "mind of a programmer" and being able to recognize patterns and connections will help, and so will pair programming and documentation.  But personally, some of my favorite strategies are tools and shortcuts that I've picked up to use VSCode to help me work smarter without always having to do either of those.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XFNjSzeS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r51yoawruos2f82kkirg.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XFNjSzeS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r51yoawruos2f82kkirg.gif" alt="Grease GIF"&gt;&lt;/a&gt;&lt;sup&gt;Image credit: &lt;a href="https://giphy.com/gifs/grease-movie-john-travolta-zgf1opQOtG05a"&gt;Giphy&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;These five VSCode tools and shortcuts are ones that I use every day (if not every hour):&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-search-by-file-content"&gt;
  &lt;/a&gt;
  5. Search by file content
&lt;/h3&gt;

&lt;p&gt;This is probably cheating, it's not really a hidden feature.  But SEARCH! If that search bar on the left isn't your friend already, you're missing out.  This search bar searches file contents.  Remember the name of a function or variable but not what files it was used in? Looking to see if a function or variable exists elsewhere?  Trying to make sure you removed all your &lt;code&gt;//TODO&lt;/code&gt; comments and &lt;code&gt;console.log()&lt;/code&gt; statements before you push?  Yeah, search is my jam.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--T6wA2fCD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bsysyh5li3kvnh5vv2oe.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T6wA2fCD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bsysyh5li3kvnh5vv2oe.png" alt="Search bar"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-search-by-file-name"&gt;
  &lt;/a&gt;
  4. Search by file name
&lt;/h3&gt;

&lt;h5&gt;
  &lt;a href="#cmdp-search-windows-ctrlp"&gt;
  &lt;/a&gt;
  Cmd+p search (Windows: Ctrl+p)
&lt;/h5&gt;

&lt;p&gt;Similar to the search on the left, but different in one key way: This search bar searches by file NAME!  I spent way too long not knowing about this second search bar.  &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dfooPwqC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l9o0t7kap86afhc79lkz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dfooPwqC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l9o0t7kap86afhc79lkz.png" alt="Search by filename"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-search-for-settings"&gt;
  &lt;/a&gt;
  3. Search for settings
&lt;/h3&gt;

&lt;h5&gt;
  &lt;a href="#cmdshiftp-windows-ctrlshiftp"&gt;
  &lt;/a&gt;
  Cmd+shift+p (Windows: Ctrl+shift+p)
&lt;/h5&gt;

&lt;p&gt;This one is just ::chef kiss::.  I can't tell you how frequently I want to do something like toggle word wrap, reload the window, etc.  Instead of remembering the hot keys for all of those settings, you can open up this search bar and quickly find the setting you need.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HyQnEIyQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/im3f71su9pj7fjxeqxam.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HyQnEIyQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/im3f71su9pj7fjxeqxam.png" alt="settings search"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-go-to-definition"&gt;
  &lt;/a&gt;
  2. Go to definition
&lt;/h3&gt;

&lt;h5&gt;
  &lt;a href="#cmd-click-windows-ctrlclick"&gt;
  &lt;/a&gt;
  Cmd + click (Windows: ctrl+click)
&lt;/h5&gt;

&lt;p&gt;Use this one on any variable, function, namespace, model... anything that was defined somewhere else.  VSCode will open up wherever it was defined in a new tab for you.  Boom.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--U4jZnERw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u0k0m5i78a0g1zmgdtfo.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--U4jZnERw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u0k0m5i78a0g1zmgdtfo.gif" alt="Go to definition"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-go-to-references"&gt;
  &lt;/a&gt;
  1. Go to references
&lt;/h3&gt;

&lt;h5&gt;
  &lt;a href="#right-click-choose-go-to-references"&gt;
  &lt;/a&gt;
  Right click, choose "go to references"
&lt;/h5&gt;

&lt;p&gt;Similar to "Go to definition", but I think this one is a level up.  Go to references will show you everywhere in the codebase whatever you're looking at is referenced.  This is great for seeing where a function might be in use before you modify it, for instance. I have learned so much about new codebases by browsing with "Go to references".&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hq7S_nzs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s2el4st9thrp3rszb1nr.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hq7S_nzs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s2el4st9thrp3rszb1nr.gif" alt="Go to references"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#additional-resources"&gt;
  &lt;/a&gt;
  Additional Resources
&lt;/h4&gt;

&lt;p&gt;Some other tools I use daily:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode"&gt;Prettier Code Formatter&lt;/a&gt; - Automatically tidies up your formatting.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://marketplace.visualstudio.com/items?itemName=CoenraadS.bracket-pair-colorizer"&gt;Bracket Pair Colorizer&lt;/a&gt; - Never miss your closing bracket again. (I'm actually realizing I never loaded this on my work setup 😱, but I use it at home.)&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens"&gt;Git Lens&lt;/a&gt; - I love this one for knowing who's worked on different parts of the code base and when!&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://ohmyz.sh/"&gt;OhMyZsh&lt;/a&gt; - Makes working in the terminal 10000x less intimidating (and faster!)&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>productivity</category>
      <category>vscode</category>
    </item>
    <item>
      <title>The 3 most interesting C++ posts of May 2021</title>
      <author>Sandor Dargo</author>
      <pubDate>Tue, 01 Jun 2021 19:42:55 +0000</pubDate>
      <link>https://dev.to/sandordargo/the-3-most-interesting-c-posts-of-may-2021-1974</link>
      <guid>https://dev.to/sandordargo/the-3-most-interesting-c-posts-of-may-2021-1974</guid>
      <description>&lt;p&gt;Let me share with you 3 interesting &lt;a href="https://dev.to/t/cpp"&gt;#cpp&lt;/a&gt; posts from May.&lt;/p&gt;

&lt;p&gt;I don't take the most popular articles anymore, because I find that while some articles do meet the criteria to add #cpp as a tag, but they are not mostly about C++. So there is a bit of subjectivity to this list. Yet, I try not to include multiple articles from the same author.&lt;/p&gt;

&lt;p&gt;Feel free to share your favourite one in the comments.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://dev.to/daaitch"&gt;Philipp&lt;/a&gt; wrote about a topic that is just so actual for many C++ developers who want to learn another language. Rust seems a natural choice and that's exactly what this article is about, understanding Rust as a C++ developer.&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/daaitch" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dbeTcPyw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--UWouKwbx--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/626023/887f5fcb-8adb-4d8f-9713-a04b37782dfe.jpeg" alt="daaitch image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/daaitch/understanding-rust-as-a-c-developer-2o28" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Understanding Rust as a C++ developer&lt;/h2&gt;
      &lt;h3&gt;Philipp Renoth ・ May 5 ・ 29 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#rust&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#cpp&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;





&lt;p&gt;&lt;a href="https://dev.to/evantypanski"&gt;Evan&lt;/a&gt; has been writing a new programming language from scratch and he used C++ for the implementation.&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/evantypanski" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7laD0q09--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--q0-NC0eL--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/18263/73b9207b-9f83-41e0-85ed-ef9999217e15.png" alt="evantypanski image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/evantypanski/writing-a-simple-programming-language-from-scratch-part-2-2522" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Writing a Simple Programming Language from Scratch - Part 2&lt;/h2&gt;
      &lt;h3&gt;Evan Typanski ・ May 3 ・ 9 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#cpp&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#c&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#compilers&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;





&lt;p&gt;Last but not least, &lt;a href="https://dev.to/visheshpatel"&gt;Vishal&lt;/a&gt; made a thorough introduction of C++20's coroutines.&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/visheshpatel" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DJsXOzzb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--C9M597pB--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/233715/acf19e00-e42d-4495-8418-558ffa2c63b6.png" alt="visheshpatel image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/visheshpatel/c-20-coroutine-under-the-hood-3071" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;C++20 Coroutine: Under The Hood&lt;/h2&gt;
      &lt;h3&gt;Vishal Chovatiya ・ May 10 ・ 12 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#cpp&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#cpp20&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#coroutine&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;Happy coding!&lt;/p&gt;

</description>
      <category>bestofdev</category>
      <category>cpp</category>
    </item>
    <item>
      <title>Making an esolang</title>
      <author>JavaCode7</author>
      <pubDate>Tue, 01 Jun 2021 19:20:57 +0000</pubDate>
      <link>https://dev.to/javacode7/making-an-esolang-e89</link>
      <guid>https://dev.to/javacode7/making-an-esolang-e89</guid>
      <description>&lt;p&gt;I have posted about esolangs a lot in the past. From good ones to mine to the esolist but never have I posted about making one.&lt;/p&gt;

&lt;p&gt;In this article, I am going to go through a step by step procedure to make an esolang like &lt;a href="https://github.com/technetium-inc/loo"&gt;loo&lt;/a&gt;. It is a simple language with only 4 commands. &lt;code&gt;+&lt;/code&gt; to increment the value of the one variable it can hold, &lt;code&gt;-&lt;/code&gt; to decrement, &lt;code&gt;#&lt;/code&gt; to print out the value in ascii form (e.g. 97 would be the lowercase letter a) and finally &lt;code&gt;;&lt;/code&gt; stops the program. I will be making this in python but you can use any language you like.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#note"&gt;
  &lt;/a&gt;
  Note
&lt;/h4&gt;

&lt;p&gt;This is not the only way to create an esolang and it is not the only syntax for one. There are many types, each with their own peculiarities. I recommend looking at &lt;a href="https://esolangs.org"&gt;esolangs.org&lt;/a&gt; to see these.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#step-1-accepting-the-code"&gt;
  &lt;/a&gt;
  Step 1: Accepting the code
&lt;/h1&gt;

&lt;p&gt;This code takes in input from the user that &lt;em&gt;should&lt;/em&gt; contain the loo code. It also sets up the variable for the value that loo holds.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;code&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Enter your loo code here please &amp;gt; "&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#step-2-string-to-list"&gt;
  &lt;/a&gt;
  Step 2: String to List
&lt;/h1&gt;

&lt;p&gt;This block of code basically splits the loo code string into a list that will be iterated through later.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;lexed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;lexed&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#step-3-execution"&gt;
  &lt;/a&gt;
  Step 3: Execution
&lt;/h1&gt;

&lt;p&gt;Now we iterate through the &lt;code&gt;lexed&lt;/code&gt; list and execute the code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;lexed&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;"+"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;"-"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;"#"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;chr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;";"&lt;/span&gt;
        &lt;span class="n"&gt;quit&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It is as simple as that! I hope you enjoyed this and hopefully I will post again soon.&lt;/p&gt;

</description>
      <category>esolang</category>
      <category>esoteric</category>
    </item>
    <item>
      <title>Happy pride month programmers!</title>
      <author>mordy-python</author>
      <pubDate>Tue, 01 Jun 2021 19:18:25 +0000</pubDate>
      <link>https://dev.to/mordypython/happy-pride-month-programmers-2i9g</link>
      <guid>https://dev.to/mordypython/happy-pride-month-programmers-2i9g</guid>
      <description>&lt;p&gt;It's that time of year again! Pride month! This is my first pride month really realizing that I'm part of the community as a Non-Binary/Genderfluid human. I'm really happy with all the support and love from online communities, especially when my fam isn't very supportive 😪. My pronouns are she/her, they/them, and thank you all for being amazing!&lt;/p&gt;

</description>
      <category>devpride</category>
      <category>lgbtq</category>
    </item>
    <item>
      <title>Laravel Job Boards</title>
      <author>torshid</author>
      <pubDate>Tue, 01 Jun 2021 19:13:02 +0000</pubDate>
      <link>https://dev.to/torshid/laravel-job-boards-42mm</link>
      <guid>https://dev.to/torshid/laravel-job-boards-42mm</guid>
      <description>&lt;p&gt;Here are the most active Laravel job channels, for both developers and recruiters.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#larajobs"&gt;
  &lt;/a&gt;
  &lt;a href="https://larajobs.com"&gt;LaraJobs&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;LaraJobs is the official board for Laravel related jobs. Approximately 2 new jobs are posted everyday. 129 out of 144 jobs currently listed are remote work.&lt;/p&gt;

&lt;p&gt;Application is done through a link provided by the poster, it can be Google Forms, BambooHR, the poster's website, etc. Nothing is asked by the board itself. Clean UI made with Tailwind. Not possible to search for keywords/tags unfortunately, you need to scroll.&lt;/p&gt;

&lt;p&gt;It is important to note that these jobs mostly ask for senior level and are permanent positions. Companies are generally located in the US and in Europe.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Jp7KGiEf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://larawind.com/storage/wink/images/rej3LIP9ZX38XBPgX4luyKYpHkiuw1yyxo5j3Rsj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Jp7KGiEf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://larawind.com/storage/wink/images/rej3LIP9ZX38XBPgX4luyKYpHkiuw1yyxo5j3Rsj.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

https://larajobs.com




&lt;h2&gt;
  &lt;a href="#posting-to-larajobs"&gt;
  &lt;/a&gt;
  Posting to LaraJobs
&lt;/h2&gt;

&lt;p&gt;A simple form is to be completed for posting a job.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dfFrsXCH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://larawind.com/storage/wink/images/3bbThiI0VL9qp5c6jjbEZOemO6XOcvYPjXuvi8gL.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dfFrsXCH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://larawind.com/storage/wink/images/3bbThiI0VL9qp5c6jjbEZOemO6XOcvYPjXuvi8gL.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pricing"&gt;
  &lt;/a&gt;
  Pricing
&lt;/h2&gt;

&lt;p&gt;The base price for posting is $299, and the job will be listed 30 days. Options giving more visibility are available, which can get the price up to $596. For comparison, job boards such as &lt;a href="https://www.monster.com"&gt;Monster&lt;/a&gt; and &lt;a href="https://www.careerbuilder.com"&gt;CareerBuilder&lt;/a&gt; generally ask between $200 and $500 per month according to &lt;a href="https://www.glassdoor.com/employers/blog/how-much-it-costs-to-post-a-job-online/"&gt;this&lt;/a&gt; writing. You will also be asked to create an account which will let you modify your post if needed.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XQvHbSGd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://larawind.com/storage/wink/images/ZGELKa8iu54JEN1TFMmQ6VAqhPk2YPclPW6njGW1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XQvHbSGd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://larawind.com/storage/wink/images/ZGELKa8iu54JEN1TFMmQ6VAqhPk2YPclPW6njGW1.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#stats"&gt;
  &lt;/a&gt;
  Stats
&lt;/h2&gt;

&lt;p&gt;Posts may reach millions through &lt;a href="https://laravel-news.com/"&gt;Laravel News&lt;/a&gt; and the mailing list of +40,000 subscribers, as claimed in the form page altough it seems exagerated to reach that in a month only. The board was created in 2014 and is the oldest in the market. According to &lt;a href="https://app.neilpatel.com/en/seo_analyzer/site_audit?domain=larajobs.com&amp;amp;submit=Analyze+Website"&gt;this&lt;/a&gt; SEO analyzer, LaraJobs has more than 650,000 backlinks.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iShWoEKs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://larawind.com/storage/wink/images/XVtdodtau429nPtTHOaE2aoyHRgWPviz02an6n9C.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iShWoEKs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://larawind.com/storage/wink/images/XVtdodtau429nPtTHOaE2aoyHRgWPviz02an6n9C.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

https://www.alexa.com/siteinfo/larajobs.com




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CrVAb6C3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://larawind.com/storage/wink/images/P6jWICplP9laiJ7ZMu27VZH9o81XdxDuVVkOmhP2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CrVAb6C3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://larawind.com/storage/wink/images/P6jWICplP9laiJ7ZMu27VZH9o81XdxDuVVkOmhP2.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
Searching for laravel jobs on Google



&lt;h1&gt;
  &lt;a href="#stackjobs"&gt;
  &lt;/a&gt;
  &lt;a href="https://tall.stackjobs.dev"&gt;StackJobs&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;This a new board, designed with Tailwind too, which consists of a page for developers and one for recruiters. We're not able to access any features without having an account or subscribing.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1aQ1hegN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://larawind.com/storage/wink/images/I5xvEoqL9JpCCYskpdXYkXOAhD0Jnri7YZOHt0ye.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1aQ1hegN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://larawind.com/storage/wink/images/I5xvEoqL9JpCCYskpdXYkXOAhD0Jnri7YZOHt0ye.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;From the landing page, we can tell that developers can fully present their skills, search for jobs, and even have suggestions.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Juj5j_4D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://larawind.com/storage/wink/images/ztQ8EtlbWHWQnvIUxbckbhk6Fv5cHQncxXX2tKnP.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Juj5j_4D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://larawind.com/storage/wink/images/ztQ8EtlbWHWQnvIUxbckbhk6Fv5cHQncxXX2tKnP.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The recruiters have access to other tools, such as advanced searching for skilled developers, with a dashboard to manage applicants, and a beautiful interface to design job posts.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Mcp8CylW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://larawind.com/storage/wink/images/jM7jkeDBChPJzPRxM3ZD2BvHDVv4hQUvgTlPNjtf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Mcp8CylW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://larawind.com/storage/wink/images/jM7jkeDBChPJzPRxM3ZD2BvHDVv4hQUvgTlPNjtf.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pricing"&gt;
  &lt;/a&gt;
  Pricing
&lt;/h2&gt;

&lt;p&gt;Developers can create an account for free, or pay $49 in order to appear first in search results. The price for posting a single job is $99. Recruiters can also subscribe for $149 per month in order to invite co-workers and access the developer directory.&lt;/p&gt;

&lt;p&gt;These prices are excessive considering that the board has almost no visibility as of now. Visitors are also encouraged to pay too early, without having first seen the full benefits of the platform.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#stats"&gt;
  &lt;/a&gt;
  Stats
&lt;/h2&gt;

&lt;p&gt;The board currently has about 500 results on Google Search, and 200+ followers on &lt;a href="https://twitter.com/stackjobsdev"&gt;Twitter&lt;/a&gt;. Considering that it was created in February 2021, it seems to have a big potential if well advertised.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#twitter"&gt;
  &lt;/a&gt;
  Twitter
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://twitter.com/laraveljobs"&gt;@laraveljobs&lt;/a&gt;: 18K+ followers, joined June 2014&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://twitter.com/StackJobsDev"&gt;@StackJobsDev&lt;/a&gt;: 200+ followers, joined February 2021&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://twitter.com/uklaraveljobs"&gt;@uklaraveljobs&lt;/a&gt;: 170+ followers, joined May 2019&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://twitter.com/42jobs_laravel"&gt;@42jobs_laravel&lt;/a&gt;: 650+ followers, joined November 2017, &lt;em&gt;inactive&lt;/em&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#recruitement-platforms"&gt;
  &lt;/a&gt;
  Recruitement platforms
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.linkedin.com/jobs/search?keywords=Laravel"&gt;LinkedIn&lt;/a&gt;: 1000+ jobs&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.freelancer.com/jobs/laravel/"&gt;Freelancer&lt;/a&gt;: 240+ jobs&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.upwork.com/freelance-jobs/laravel-framework/"&gt;Upwork&lt;/a&gt;: 750+ jobs&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://remoteok.io/remote-laravel-jobs"&gt;Remote Jobs&lt;/a&gt;: 20+ jobs&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#our-saying"&gt;
  &lt;/a&gt;
  Our saying
&lt;/h1&gt;

&lt;p&gt;If you are actively searching for a job, the presented channels are excellent ways to begin with. It may of course take time reading and filling everything, but that's the cost for a good paying job.&lt;/p&gt;

&lt;p&gt;As for recruiters, we live in the era of social networks. If you have some audience on platforms such as Twitter or Discord, you may try posting there by tagging popular usernames, your job is going to be shared for sure, and you will have direct feedback and access to analytics.&lt;/p&gt;

&lt;p&gt;If you're into something more professional and have the money, LaraJobs and recruitement platforms such as LinkedIn are the way to go.&lt;/p&gt;




&lt;p&gt;You think something is missing in this writing? Feel free to tell us in the comments section.&lt;/p&gt;

&lt;p&gt;Don't forget to follow us on &lt;a href="https://twitter.com/larawindcom"&gt;Twitter @larawindcom&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>laravel</category>
      <category>jobs</category>
      <category>boards</category>
      <category>listing</category>
    </item>
    <item>
      <title>AWS Data Lake with Terraform - Part 1 of 6</title>
      <author>Augusto Valdivia</author>
      <pubDate>Tue, 01 Jun 2021 18:51:43 +0000</pubDate>
      <link>https://dev.to/aws-builders/aws-data-lake-with-terraform-part-1-of-6-4bf1</link>
      <guid>https://dev.to/aws-builders/aws-data-lake-with-terraform-part-1-of-6-4bf1</guid>
      <description>&lt;p&gt;Big data has been growing as topic for a while now and it is obvious that data is powerful. Data is indeed the new oil. Any business out there is investing in data research. There are many terms nowadays that describe data and how it is organized. A data lake is one of them. So, &lt;strong&gt;&lt;em&gt;what is it?&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In simple words a Data Lake is a centralized repository that collects, stores and organizes huge data collection, including structured and semi-structured data. It also allows multiple organizational units (OU) to explore and investigate their current business stage in minutes. It provides users with the availability to do ad-hoc analysis over diverse processing engines like serverless, in-memory processing, queries and batches.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The challenge&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In these series of blogs I will explain how I translated MVP core services for a large e-commerce company into Infrastructure-as-Code (IAC) using Terraform scripts to allow for fast and repeatable deployments, efficient testing and to decrease recovery time in case of an unplanned event. This Data Lake architecture version-one use the following services:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;EC2 for elastic compute&lt;/li&gt;
&lt;li&gt;Kinesis process to collect, and analyze data streams in real time (or almost real time)&lt;/li&gt;
&lt;li&gt;S3 for the data landing and the data consumptions zones&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Each of these services are a huge topic in their own ecosystem so throughout this article I will highlight information about how they work and how I integrated them.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Diagram version 1: Data lake&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1z51p4Nm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c7mbyqc3sat5itxzbiai.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1z51p4Nm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c7mbyqc3sat5itxzbiai.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Diagram final version: Data lake&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YtBPUf7f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fgnzhqg35ef62jj8tdwe.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YtBPUf7f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fgnzhqg35ef62jj8tdwe.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What method will we be using to deploy this infrastructure?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We will be deploying this infrastructure as a code (IaC) using Terraform.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;resource "aws_instance" "logs" {
  count = var.ec2_count
  ami                         = "ami-0742b4e673072066f"
  instance_type               = "t2.micro"
  subnet_id                   = aws_subnet.dlogssub.id
  associate_public_ip_address = true
  vpc_security_group_ids      = [aws_security_group.web_sg.id]
  depends_on                  = [aws_internet_gateway.bigdataigw]
  key_name                    = aws_key_pair.logskey.key_name
  iam_instance_profile        = aws_iam_instance_profile.ec2_profile.name

  user_data = &amp;lt;&amp;lt;-EOF
          #!/bin/bash -xe
          yum -y update
          yum install -y aws-kinesis-agent
          EOF

  tags = {
    "Name" = "ec2-app-02"
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Terraform new default tags feature&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;provider "aws" {
  default_tags {

    tags = {
      Enviroment = "DataLake-test"
      Project    = "DataLake-infrastructure"
    }
  }
  region = "us-east-1"
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Amazon Elastic Compute Cloud (EC2)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;EC2 is the backbone of this infrastructure as it is dedicated to holding the e-commerce large data logs during the time of business analysis. Also, it provides you with a resizable compute capacity for this environment. You can kick up a new server optimized for your work in minutes and rapidly scale it up or down as your computing requirements change.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Amazon Kinesis&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Kinesis plays a double part within this infrastructure. Firstly, the Kinesis Firehose stream allows you to capture data from a server log being generated on our Amazon EC2 instance and distributes that into your data lake landing zone in Amazon your S3 bucket. The second one uses the Amazon Kinesis agent application in order to publish data (“direct put”) into this Amazon Kinesis firehose using the Amazon Kinesis agent.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Kinesis agent sample:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IuZ2XaJG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t19y2xtrca7hd59ugc9p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IuZ2XaJG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t19y2xtrca7hd59ugc9p.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A powerful mechanism that Kinesis possesses is the availability to configure how to store your data into s3. You can configure based on buffer size and buffer interval. For the purpose of this project I have decided to select 5 megabytes of a buffer size meaning that incoming data from the firehose will be dividing the files in five megabytes in size. And, for the buffer interval I set it to the lowest value which is 60 seconds. Tips to remember Kinesis firehose is “almost real-time” and cannot go lower than that.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Amazon Simple Storage Server(S3)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;S3 is the biggest and most performant data lake storage solution because of its cost-effective, secure data storage with 11 9s of durability and its virtually unlimited scalability model. It makes sense to store your vast data logs in S3, &lt;strong&gt;&lt;em&gt;Don’t you think?&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The goal for individuals or businesses to use this data lake solution would be to build and integrate Amazon S3 with Amazon Kinesis, Amazon Athena, Amazon Redshift Spectrum, and AWS Glue for data scientists or engineers to query and process a large amount data.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;S3 data stream logs sample:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DzwSvA82--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6bds1qlw02hsa3eo6qpe.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DzwSvA82--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6bds1qlw02hsa3eo6qpe.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Important to note that this infrastructure is not fully develop I will be adding other servers such as AWS Glue, AWS Athena, AWS Redshift, AWS Cloudwatch and QuickSight 😊 please stay tune.&lt;/p&gt;

&lt;p&gt;Functions, arguments and expressions of Terraform that were used in the above project:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.terraform.io/docs/language/providers/index.html"&gt;providers&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.terraform.io/docs/language/values/index.html"&gt;variables&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.terraform.io/docs/language/modules/index.html"&gt;modules&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.terraform.io/docs/language/resources/index.html"&gt;resources&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.terraform.io/docs/language/expressions/types.html"&gt;types and values&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.terraform.io/docs/language/expressions/for.html"&gt;splat or [*]&lt;/a&gt;– One of my favorites&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.hashicorp.com/blog/default-tags-in-the-terraform-aws-provider"&gt;default-tags-in-the-terraform-aws-provider&lt;/a&gt;– &lt;strong&gt;New feature&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/ValAug/AWS_DataLake"&gt;Find the Terraform repo and directions for this project here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I would like to give a big shout out to my mentor Derek Morgan. Thank you for all of your support all these months and for the amazing course &lt;a href="https://morethancertified.teachable.com/"&gt;"More Than Certified in Terraform" the best course out there. Link to the course here.&lt;/a&gt; If you want to connect with him and ask questions about his course, contact him via &lt;a href="https://www.linkedin.com/in/derekm1215/"&gt;LinkedIn Derek Morgan&lt;/a&gt; or you can join the &lt;a href="https://discord.gg/PvgMBQbV"&gt;Discord channel here.&lt;/a&gt;&lt;/p&gt;

</description>
      <category>aws</category>
      <category>terraform</category>
      <category>awsdatalake</category>
      <category>bigdata</category>
    </item>
    <item>
      <title>Distributed Load Testing in JMeter using VirtualBox</title>
      <author>NaveenKumar Namachivayam ⚡</author>
      <pubDate>Tue, 01 Jun 2021 18:47:20 +0000</pubDate>
      <link>https://dev.to/qainsights/distributed-load-testing-in-jmeter-using-virtualbox-188k</link>
      <guid>https://dev.to/qainsights/distributed-load-testing-in-jmeter-using-virtualbox-188k</guid>
      <description>&lt;p&gt;In this blog article, we are going to use how you can run distributed load testing in JMeter using VirtualBox setup. I have already posted videos about &lt;a href="https://www.youtube.com/watch?v=lORCJtspVJ4" rel="noreferrer noopener"&gt;distributed load testing on AWS&lt;/a&gt; and &lt;a href="https://qainsights.com/distributed-load-testing-in-jmeter-using-raspberry-pi-400/" rel="noreferrer noopener"&gt;Raspberry Pi&lt;/a&gt;. You need more than one machine to run the load tests. But in this guide, you will use only your machine and run the JMeter tests by leveraging the VirtualBox software.&lt;/p&gt;

&lt;h2&gt;Why distributed load testing?&lt;/h2&gt;

&lt;p&gt;By using one machine, you may not be able to inject more load to your application under test. If you want to stress test your application, you need more threads. Your system resource utilization will reach its limits, if you are trying to inject more threads.  &lt;/p&gt;

&lt;p&gt;To inject more load, you need to more machines to scale horizontally. JMeter has Master-Worker mode where you can run your tests in server mode.&lt;/p&gt;

&lt;p&gt;You will have one master machine with multiple worker machines; master machine will send the instructions to worker machines. After receiving the instructions, worker machines will execute the test plan as per the design.&lt;/p&gt;

&lt;p&gt;If you want more load, you need more machines.&lt;/p&gt;

&lt;p&gt;Here is the video version of this guide:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/WSDMLAEksz4"&gt;https://youtu.be/WSDMLAEksz4&lt;/a&gt;&lt;/p&gt;

&lt;h2 id="h-prerequisites"&gt;Prerequisites&lt;/h2&gt;

&lt;p&gt;Ideally you need multiple machines to setup this master-worker. But for this demo, we are going to make use of VirtualBox to learn the concept of distributed load testing. This set up is not ideal for production usage as we are not using the multiple machines to inject the load.&lt;/p&gt;

&lt;p&gt;Following are the prerequisites required:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Oracle VM VirtualBox Manager&lt;/li&gt;
&lt;li&gt;CentOS image (or your favorite Linux distro)&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;CentOS Image Download&lt;/h2&gt;

&lt;p&gt;To download the CentOS image, visit https://www.osboxes.org/centos/ (direct link), click on the latest version of the image; make sure you are downloading the 64-bit version.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://qainsights.com/wp-content/uploads/2021/05/image-6.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Hk9AkLeF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qainsights.com/wp-content/uploads/2021/05/image-6.png" alt="CentOS Image download"&gt;&lt;/a&gt;CentOS Image download&lt;/p&gt;

&lt;p&gt;To view the credentials, click on Info tab as shown below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://qainsights.com/wp-content/uploads/2021/05/image-7.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0cglk8GT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qainsights.com/wp-content/uploads/2021/05/image-7.png" alt="CentOS Image Credentials"&gt;&lt;/a&gt;CentOS Image Credentials&lt;/p&gt;

&lt;p&gt;After downloading the image, extract it using 7z software. After extraction, you will get *.vdi file.&lt;/p&gt;

&lt;h2 id="h-oracle-vm-virtualbox-manager-download"&gt;Oracle VM VirtualBox Manager Download&lt;/h2&gt;

&lt;p&gt;To download the VirtualBox, visit https://www.virtualbox.org and click on &lt;strong&gt;Download &lt;/strong&gt;button. Using the VirtualBox, you can run multiple guest operating systems locally.&lt;/p&gt;

&lt;h2&gt;JMeter Master and Worker Machines Setup&lt;/h2&gt;

&lt;p&gt;Next step is to setup two machines (JMeter Master and JMeter Worker) in VirtualBox using the CentOS image.&lt;/p&gt;

&lt;p&gt;First, let us create the CentOS base image, from which we are going to clone it for two machines.&lt;/p&gt;

&lt;p&gt;Launch &lt;strong&gt;VirtualBox&lt;/strong&gt;, click on &lt;strong&gt;New &lt;/strong&gt;button to create a new virtual machine as shown below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://qainsights.com/wp-content/uploads/2021/05/image-8.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jPmt_Hdl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qainsights.com/wp-content/uploads/2021/05/image-8.png" alt="Create new virtual machine"&gt;&lt;/a&gt;Create new virtual machine&lt;/p&gt;

&lt;p&gt;In &lt;strong&gt;Create Virtual Machine&lt;/strong&gt; dialog box, configure the settings as shown below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://qainsights.com/wp-content/uploads/2021/05/image-9.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pX-oWyLC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qainsights.com/wp-content/uploads/2021/05/image-9.png" alt="Create new virtual machine config"&gt;&lt;/a&gt;Create new virtual machine config&lt;/p&gt;

&lt;p&gt;Click on the &lt;strong&gt;yellow icon&lt;/strong&gt; as shown above to map the downloaded vdi file. Then, click on &lt;strong&gt;Add &lt;/strong&gt;button to map the vdi file and then click on &lt;strong&gt;Choose &lt;/strong&gt;as shown below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://qainsights.com/wp-content/uploads/2021/05/image-10.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nu2Z67A4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qainsights.com/wp-content/uploads/2021/05/image-10.png" alt="Create new virtual machine config"&gt;&lt;/a&gt;Create new virtual machine config&lt;/p&gt;

&lt;p&gt;Now back to &lt;strong&gt;Create Virtual Machine&lt;/strong&gt; dialog, click on &lt;strong&gt;Create &lt;/strong&gt;button. This will create a new virtual machine named &lt;code&gt;CentOS Base&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://qainsights.com/wp-content/uploads/2021/05/image-11.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5tafW_lZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qainsights.com/wp-content/uploads/2021/05/image-11.png" alt="Create new virtual machine"&gt;&lt;/a&gt;Create new virtual machine &lt;/p&gt;

&lt;h2&gt;CentOS Base Image configuration&lt;/h2&gt;

&lt;p&gt;Before we start cloning this machine, we need to configure the network settings. Select the &lt;strong&gt;CentOS Base&lt;/strong&gt; image, right click &amp;gt; &lt;strong&gt;Settings&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Click on &lt;strong&gt;Network &lt;/strong&gt;in &lt;strong&gt;CentOS Base - Settings&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Select &lt;strong&gt;Bridged Adapter&lt;/strong&gt; as shown below, then click on &lt;strong&gt;OK&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://qainsights.com/wp-content/uploads/2021/05/image-12.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9QY9NYIr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qainsights.com/wp-content/uploads/2021/05/image-12.png" alt="Bridged Adapter"&gt;&lt;/a&gt;Bridged Adapter&lt;/p&gt;

&lt;p&gt;This will create the bridged network and also you can access the internet from this virtual machines.&lt;/p&gt;

&lt;h2&gt;Cloning the Virtual Machines&lt;/h2&gt;

&lt;p&gt;Next step is to clone this machine to create JMeter Master and JMeter Worker machines. Right click on the &lt;strong&gt;CentOS Base &lt;/strong&gt;machine, then click on &lt;strong&gt;Clone&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;In &lt;strong&gt;Clone Virtual Machine&lt;/strong&gt; dialog box, configure the below settings as-is. Then, click on &lt;strong&gt;Clone&lt;/strong&gt;. This will create a new virtual machine named &lt;strong&gt;JMeter Master&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://qainsights.com/wp-content/uploads/2021/05/image-13.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t0jUR8C3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qainsights.com/wp-content/uploads/2021/05/image-13.png" alt="Cloning"&gt;&lt;/a&gt;Cloning&lt;/p&gt;

&lt;p&gt;Repeat the same steps again to create &lt;strong&gt;JMeter Worker&lt;/strong&gt;. After creating two machines, in the manager, you will see three machines as shown below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://qainsights.com/wp-content/uploads/2021/05/image-14.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XT8v-1Zx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qainsights.com/wp-content/uploads/2021/05/image-14.png" alt="List of machines"&gt;&lt;/a&gt;List of machines&lt;/p&gt;

&lt;h2&gt;Starting the Virtual Machines&lt;/h2&gt;

&lt;p&gt;Next step is to start the JMeter Master and JMeter Worker machines. Select the machine and then click on &lt;strong&gt;Start &lt;/strong&gt;button as shown below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://qainsights.com/wp-content/uploads/2021/05/image-15.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XFJNMKib--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qainsights.com/wp-content/uploads/2021/05/image-15.png" alt="Starting the virtual machine"&gt;&lt;/a&gt;Starting the virtual machine&lt;/p&gt;

&lt;p&gt;This will start the two machines which will take couple of minutes for the complete bootup. &lt;/p&gt;

&lt;p&gt;After successful boot, you will see the login screen for both the machines as shown below. Enter the password and hit enter to login into the machines.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://qainsights.com/wp-content/uploads/2021/05/image-16.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0x5dxTRG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qainsights.com/wp-content/uploads/2021/05/image-16-1024x432.png" alt="CentOS Login Screen"&gt;&lt;/a&gt;CentOS Login Screen&lt;/p&gt;

&lt;p&gt;After logging in, launch the &lt;strong&gt;Terminal &lt;/strong&gt;to make changes in the hosts and host name. You have to repeat the steps for both the machines.&lt;/p&gt;

&lt;p&gt;To change the host name enter the below command and name your host as &lt;code&gt;jmetermast&lt;/code&gt;er.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo vi /etc/hostname&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To change the hosts file, enter the below command and configure as shown in the below screenshot.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo vi /etc/hosts&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href="https://qainsights.com/wp-content/uploads/2021/05/image-18.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GVwYCDWG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qainsights.com/wp-content/uploads/2021/05/image-18.png" alt="Changing the hosts"&gt;&lt;/a&gt;Changing the hosts&lt;/p&gt;

&lt;p&gt;It is time to restart the machines. Enter the below command to restart.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ shutdown now -r&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After restart login again and get the IP address using the below command. &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ifconfig&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Minimize the virtual machine windows, because it will be hard to navigate. Instead, we can use the SSH to login and perform the commands.&lt;/p&gt;

&lt;p&gt;To login into the virtual machines, I am using &lt;strong&gt;MobaXterm &lt;/strong&gt;software. But you can use your favorite.&lt;/p&gt;

&lt;h2&gt;Installing Java in Master and Worker Machines&lt;/h2&gt;

&lt;p&gt;After you login into the master/worker machine, the first step is to download and install Java. To install Java, you can use the below command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo yum install java -y&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will install Java 8. To verify, you can issue the below command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ java -version&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href="https://qainsights.com/wp-content/uploads/2021/05/image-19.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Is47JBll--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qainsights.com/wp-content/uploads/2021/05/image-19.png" alt="Java version check"&gt;&lt;/a&gt;Java version check&lt;/p&gt;

&lt;p&gt;Repeat the same steps for Worker machine as well.&lt;/p&gt;

&lt;h2&gt;Installing JMeter in Master and Worker Machines&lt;/h2&gt;

&lt;p&gt;To install JMeter, you can use the below command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ curl -O https://downloads.apache.org//jmeter/binaries/apache-jmeter-5.4.1.tgz
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will download the 5.4.1 tar file from JMeter site.&lt;/p&gt;

&lt;p&gt;To veriy the integrity, you can issue the below command.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sha512sum apache-jmeter-5.4.1.tgz
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The output string must match with the &lt;strong&gt;SHA512 &lt;/strong&gt;value which you can get it from the JMeter site.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://qainsights.com/wp-content/uploads/2021/05/image-20.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--O4Xk2kj7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qainsights.com/wp-content/uploads/2021/05/image-20.png" alt="JMeter Download"&gt;&lt;/a&gt;JMeter Download&lt;/p&gt;

&lt;p&gt;To extract the tar file:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ tar -xzf apache-jmeter-5.4.1.tgz&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now cd into bin folder:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd apache-jmeter-5.4.1/bin/&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Repeat the above steps in both the machines.&lt;/p&gt;

&lt;h2&gt;Distributed Load Testing Mode&lt;/h2&gt;

&lt;h2&gt;JMeter Master Setup&lt;/h2&gt;

&lt;p&gt;In the master machine, open the &lt;strong&gt;user.properties&lt;/strong&gt; using your favorite editor and configure the below properties.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ vim user.properties&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;user.properties&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;remote_hosts=&amp;lt;worker_ip&amp;gt;
server.rmi.localport=4000&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;By default, JMeter uses secured communication between the master and worker machines. To generate the secured tunnel, we need to make use of rmi key store. &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;To add multiple workers, use comma separated values.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Execute &lt;code&gt;create-rmi-keystore.sh&lt;/code&gt; file to generate the keystore file as shown below. Let us go with the default values: &lt;strong&gt;&lt;code&gt;rmi&lt;/code&gt; &lt;/strong&gt;as &lt;strong&gt;first and last name&lt;/strong&gt; and the password as &lt;code&gt;&lt;strong&gt;&lt;em&gt;changeit&lt;/em&gt;&lt;/strong&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://qainsights.com/wp-content/uploads/2021/05/image-21.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z-a1y0kS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qainsights.com/wp-content/uploads/2021/05/image-21.png" alt="keystore generation"&gt;&lt;/a&gt;keystore generation&lt;/p&gt;

&lt;p&gt;&lt;code&gt;rmi_keystore.jks&lt;/code&gt; will be generated in the bin folder. You have to place this file in all the worker machines.&lt;/p&gt;

&lt;p&gt;To transfer this file to the worker machine, you can use scp command.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ scp rmi_keystore.jks osboxes@&amp;lt;worker_ip&amp;gt;:.&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Above command transfer the keystore to the home directory of the worker machine. &lt;/p&gt;

&lt;p&gt;Next step is to disable to firewall service. If the firewall is enabled JMeter tests will not run in distributed mode.&lt;/p&gt;

&lt;p&gt;To disable firewall:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo systemctl stop firewalld.service&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To check firewall status:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo systemctl status firewalld.service&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;JMeter Worker Setup&lt;/h2&gt;

&lt;p&gt;Open a new SSH session to login into worker machine. The keystore file now present in the home directory, paste that into &lt;code&gt;bin&lt;/code&gt; folder.&lt;/p&gt;

&lt;p&gt;Next step is to configure the &lt;code&gt;user.properties&lt;/code&gt;. Open it in your favorite editor and configure the below property.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;server.rmi.localport=4000&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now disable the firewall by following the above mentioned steps.&lt;/p&gt;

&lt;h2&gt;Starting the Distributed Load Mode in Worker Machine&lt;/h2&gt;

&lt;p&gt;To begin the distributed load testing, first step is to start the worker machine. Issue the below command to get started.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ./jmeter-server -Djava.rmi.server.hostname=&amp;lt;Worker_IP&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://qainsights.com/wp-content/uploads/2021/05/image-22.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mAn9GsAs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qainsights.com/wp-content/uploads/2021/05/image-22.png" alt="Worker Machine Startup"&gt;&lt;/a&gt;Worker Machine Startup&lt;/p&gt;

&lt;p&gt;If you get the above output, you are good.&lt;/p&gt;

&lt;h2&gt;Starting the Distributed Load Testing in Master Machine&lt;/h2&gt;

&lt;p&gt;To begin the distributed load test, you can issue the below command.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ./jmeter.sh -Djava.rmi.server.hostname=&amp;lt;Master_IP&amp;gt; -n -t examples/CSVSample.jmx -l Run1.log -R&amp;lt;Worker_IP&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Above command start the sample JMeter test which is located in &lt;code&gt;examples&lt;/code&gt; folder, store the output in current directory named &lt;code&gt;Run1.log&lt;/code&gt;, the load will be injected using the remote worker machine (-R).&lt;/p&gt;

&lt;h4&gt;JMeter Master Output&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://qainsights.com/wp-content/uploads/2021/05/image-23.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jhQ6ITsH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qainsights.com/wp-content/uploads/2021/05/image-23.png" alt="JMeter Master Ouput"&gt;&lt;/a&gt;JMeter Master Ouput&lt;/p&gt;

&lt;h4&gt;JMeter Worker Output&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://qainsights.com/wp-content/uploads/2021/05/image-24.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ygAPXKMz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://qainsights.com/wp-content/uploads/2021/05/image-24.png" alt="JMeter Worker Output - Distributed Load Testing in JMeter using VirtualBox"&gt;&lt;/a&gt;JMeter Worker Output - Distributed Load Testing in JMeter using VirtualBox&lt;/p&gt;

&lt;h2&gt;Important Points&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Use the identical version of Java and JMeter in all the machines&lt;/li&gt;
&lt;li&gt;Disable firewall&lt;/li&gt;
&lt;li&gt;Master and Worker machines must be in the same subnet&lt;ul&gt;&lt;li&gt;try pinging the machines from each other to verify the connectivity&lt;/li&gt;&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;SSL for RMI certificate has the validity of &lt;strong&gt;7 days&lt;/strong&gt; by default, make sure you generate the certificate once in 7 days. The number of days can be changed in the &lt;code&gt;create-rmi-keystore&lt;/code&gt; file: &lt;code&gt;keytool -genkey -keyalg RSA -alias rmi -keystore rmi_keystore.jks -storepass changeit -validity 365 -keysize 2048 %*&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;If the test plan uses, plugins and/or CSV Data set config, make sure it is available in the worker nodes&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here is the GitHub Repo to star.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/QAInsights/Remote-Distribution-Load-Testing-in-JMeter" rel="noreferrer noopener"&gt;GitHub Repo: Remote Distribution Load Testing in JMeter&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;lt;!-- /wp:button --&amp;gt;&lt;/p&gt;

&lt;h2&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;For beginners, this setup might be overwhelming, but this guide will be very helpful to understand the setup without needing of multiple machines. This setup should not be used in production, this is just for learning purpose :).&lt;/p&gt;

</description>
      <category>performance</category>
      <category>testing</category>
      <category>tutorial</category>
      <category>webperf</category>
    </item>
    <item>
      <title>The 7 Most Popular DEV Posts from the Past Week</title>
      <author>Gracie Gregory (she/her)</author>
      <pubDate>Tue, 01 Jun 2021 18:45:47 +0000</pubDate>
      <link>https://dev.to/devteam/the-7-most-popular-dev-posts-from-the-past-week-56g3</link>
      <guid>https://dev.to/devteam/the-7-most-popular-dev-posts-from-the-past-week-56g3</guid>
      <description>&lt;p&gt;&lt;em&gt;Every Tuesday we round up the previous week's top posts based on traffic, engagement, and a hint of editorial curation. The typical week starts on Monday and ends on Sunday, but don't worry, we take into account posts that are published later in the week.&lt;/em&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#slow-and-steady-wins-the-race"&gt;
  &lt;/a&gt;
  Slow and steady wins the race
&lt;/h2&gt;

&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/ruppysuppy"&gt;@ruppysuppy&lt;/a&gt;
 has some great tips to share about improving your GitHub profile — spoiler: go slow and don't try to cheat the process.&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/ruppysuppy" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4oA7zxE2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--E69pqyft--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/530414/941751d8-06b8-41bd-9de9-6ea056b7199f.png" alt="ruppysuppy image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/ruppysuppy/beautify-your-github-profile-like-a-pro-5093" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Beautify Your GitHub Profile like a Pro&lt;/h2&gt;
      &lt;h3&gt;Tapajyoti Bose ・ May 30 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#git&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#github&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#markdown&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#conscious-accessibility"&gt;
  &lt;/a&gt;
  Conscious accessibility
&lt;/h2&gt;

&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/eevajonnapanula"&gt;@eevajonnapanula&lt;/a&gt;
's very first sentence is a great indication of how helpful and compelling the rest of the article is:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;"We, as developers, tend to develop sites unconsciously for people like ourselves. If we don't actively pay attention, the sites are often accessible only for certain types of people."&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;So very true. &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/eevajonnapanula" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FpXj8uGX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--CEbP3D7X--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/201004/e005d101-0ca8-4346-86eb-91bf162b30c4.png" alt="eevajonnapanula image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/eevajonnapanula/don-t-develop-just-for-yourself-a-developer-s-checklist-to-accessibility-545k" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Don't Develop Just for Yourself - A Developer's Checklist to Accessibility&lt;/h2&gt;
      &lt;h3&gt;Eevis (she/her) ・ May 30 ・ 7 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#a11y&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#testing-typescript"&gt;
  &lt;/a&gt;
  Testing TypeScript
&lt;/h2&gt;

&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/dastasoft"&gt;@dastasoft&lt;/a&gt;
's post is all about going through the basics of TS and understanding the benefits so you can decide if you want those benefits or not. Pretty helpful stuff!&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/dastasoft" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---wZs2Esu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--k5bXZLGT--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/337369/f37a6e53-6f09-40cf-a55a-eb43d7c9e859.jpeg" alt="dastasoft image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/dastasoft/here-s-what-every-react-developer-needs-to-know-about-typescript-part-1-48ob" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Here's what every React Developer needs to know about TypeScript - Part 1&lt;/h2&gt;
      &lt;h3&gt;dastasoft ・ May 28 ・ 21 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#react&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#typescript&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#decluttering-fast"&gt;
  &lt;/a&gt;
  Decluttering — fast 🧹
&lt;/h2&gt;

&lt;p&gt;If you're like me, &lt;a class="mentioned-user" href="https://dev.to/yomdroid"&gt;@yomdroid&lt;/a&gt;
's article (about how you can sweep out your inbox with Python) is both extremely applicable and a little triggering 😆&lt;/p&gt;

&lt;p&gt;Thank you for sharing, Ogheneyoma! I need to try this.  &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/yomdroid" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mxJPsoDD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--QfIenrKd--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/269181/2b2dd782-9657-4f0b-bb4b-ff196f3dfc68.jpeg" alt="yomdroid image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/yomdroid/decluttering-mailbox-using-python-44l8" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Decluttering Mailbox Using Python&lt;/h2&gt;
      &lt;h3&gt;Ogheneyoma Obomate Okobiah ・ May 29 ・ 5 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#python&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#email&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#the-good-the-bad-and-the-boolean"&gt;
  &lt;/a&gt;
  The good, the bad, and the boolean
&lt;/h2&gt;

&lt;p&gt;The TL;DR of this overview from &lt;a class="mentioned-user" href="https://dev.to/mpocock1"&gt;@mpocock1&lt;/a&gt;
? Bad booleans represent state. Good booleans are derived from state. &lt;/p&gt;

&lt;p&gt;That said, there's so much more to glean from the entire article!&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/mpocock1" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4TNA-wjD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--8deS_1D8--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/414325/85a14402-fe21-478a-b195-2706abbe889e.png" alt="mpocock1 image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/mpocock1/state-management-how-to-tell-a-bad-boolean-from-a-good-boolean-260n" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;State Management: How to tell a bad boolean from a good boolean&lt;/h2&gt;
      &lt;h3&gt;Matt Pocock ・ May 27 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#save-the-date"&gt;
  &lt;/a&gt;
  Save the date! ❤️
&lt;/h2&gt;

&lt;p&gt;Congrats to &lt;a class="mentioned-user" href="https://dev.to/christinecontreras"&gt;@christinecontreras&lt;/a&gt;
 on their upcoming nuptials! I &lt;em&gt;love&lt;/em&gt; that your wedding planning prep includes building an app to predict the best date to get married based on historical weather patterns and location. &amp;lt;3 &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/christinecontreras" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6f5kRuSt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--Ocv7hcaZ--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/609006/fe0a94a9-6389-47d5-8776-cbc0a9c84fbc.jpg" alt="christinecontreras image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/christinecontreras/perfect-date-a-javascript-and-api-project-1hng" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Perfect Date: A Javascript and API Project&lt;/h2&gt;
      &lt;h3&gt;Christine Contreras ・ May 29 ・ 7 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#flatiron&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#-raw-reset-endraw-ting-your-git-knowledge"&gt;
  &lt;/a&gt;
  &lt;code&gt;Reset&lt;/code&gt;ting your Git knowledge
&lt;/h2&gt;

&lt;p&gt;If you are confused about much of the terminology in Git, you are FAR from alone. Thank you for clearing some of it up for us, &lt;a class="mentioned-user" href="https://dev.to/pragativerma18"&gt;@pragativerma18&lt;/a&gt;
. &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/pragativerma18" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Kl_m4K1g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--JR-0Kc_W--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/242611/68277387-0fa0-4c79-ad6f-4be3ddc940b7.jpeg" alt="pragativerma18 image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/pragativerma18/confusing-terms-in-the-git-terminology-1578" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Confusing Terms in the Git Terminology&lt;/h2&gt;
      &lt;h3&gt;Pragati Verma ・ May 30 ・ 6 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#opensource&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#github&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#codenewbie&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#computerscience&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;&lt;em&gt;That's it for our weekly wrap up! Keep an eye on dev.to this week for daily content and discussions...and if you miss anything, we'll be sure to recap it next Tuesday!&lt;/em&gt;&lt;/p&gt;

</description>
      <category>icymi</category>
    </item>
    <item>
      <title>React class components in the World of Hooks</title>
      <author>Vesa Piittinen</author>
      <pubDate>Tue, 01 Jun 2021 18:45:30 +0000</pubDate>
      <link>https://dev.to/merri/react-class-components-in-the-world-of-hooks-5982</link>
      <guid>https://dev.to/merri/react-class-components-in-the-world-of-hooks-5982</guid>
      <description>&lt;p&gt;Hooks have landed the React world pretty hard. It isn't a full-on victory everywhere, I know places where people have more of a "they're kids toys" mentality and stay in 100% class + hookless function components, but in general I guess we can agree hooks have been a success.&lt;/p&gt;

&lt;p&gt;There are a lot of posts on why hooks are great already, but I want to focus a bit more on nuances that might help you decide when to use classes, and when hooks are the better fit.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#context"&gt;
  &lt;/a&gt;
  Context
&lt;/h2&gt;

&lt;p&gt;You can add context to class components, but the syntax can be a bit awkward especially if you're also using TypeScript and want to get the goodies:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;YourComponent&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PureComponent&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="nx"&gt;contextType&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;YourContext&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;context&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ContextType&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;YourContext&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;stuffFromContext&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Component&lt;/span&gt; &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;stuffFromContext&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Setting your environment to support above syntax may require a bit of work, but it is still a nicer way than using a &lt;code&gt;Consumer&lt;/code&gt; component:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;YourComponent&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PureComponent&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;YourContext&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Consumer&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;stuffFromContext&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Component&lt;/span&gt; &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;stuffFromContext&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;YourContext&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Consumer&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Mostly due to the indentation level becoming so deep with the &lt;code&gt;Consumer&lt;/code&gt;. Also with Consumer you don't get access to context outside &lt;code&gt;render&lt;/code&gt; in your component.&lt;/p&gt;

&lt;p&gt;The hooks version is a lot cleaner:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;YourComponent&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;stuffFromContext&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;useContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;YourContext&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Component&lt;/span&gt; &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;stuffFromContext&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#event-callbacks"&gt;
  &lt;/a&gt;
  Event callbacks
&lt;/h2&gt;

&lt;p&gt;Once your hook component grows in complexity, maybe having lots of event handlers such as &lt;code&gt;onMouseDown&lt;/code&gt;, &lt;code&gt;onMouseMove&lt;/code&gt;, &lt;code&gt;onMouseUp&lt;/code&gt;, &lt;code&gt;onClick&lt;/code&gt; and so on, you might notice you need to do lots of &lt;code&gt;React.useCallback&lt;/code&gt; to maintain object references between renders to avoid changing the DOM on every render.&lt;/p&gt;

&lt;p&gt;At this point you might start considering using a class component instead! The advantage with class component is that the callback references remain the same with no additional memoize tricks (&lt;code&gt;useCallback&lt;/code&gt; is just a slightly fancier memoize). Class code is of course not easy for reuse, however I've found it quite rare an occasion where group of event handlers would make sense as a reusable hook.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#-raw-reactmemo-endraw-vs-raw-reactpurecomponent-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;React.memo&lt;/code&gt; vs. &lt;code&gt;React.PureComponent&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;Typically when passing props to React components you want to be careful with the object references, keeping them the same when the actual data does not change. Why? Because it allows for lightweight optimization to take place.&lt;/p&gt;

&lt;p&gt;The nice thing about class components is that you can simply avoid rendering on changes by using &lt;code&gt;React.PureComponent&lt;/code&gt; instead of &lt;code&gt;React.Component&lt;/code&gt;. Everything else about the component remains the same, the only difference is that a simple default &lt;code&gt;shouldComponentUpdate&lt;/code&gt; is added to the class methods.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;React.memo&lt;/code&gt; instead can be a bit difficult. For example this blocks an element from getting a proper name:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;MyComponent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;memo&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// "MyComponent" will NOT become the name of the component :(&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There are of course ways to work around the problem!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;MyComponent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;memo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;MyComponent&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// You get `Memo(MyComponent)` and `MyComponent`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above is good because the component gets a name thanks to using a named function, and the export gets the name from the &lt;code&gt;const&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;MyComponent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;;&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;memo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;MyComponent&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// You get `Memo(MyComponent)` and `MyComponent`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This example also works and looks like a clean code, but has the downside of exporting as &lt;code&gt;default&lt;/code&gt;. I don't like the &lt;code&gt;default&lt;/code&gt; export a lot as I often prefer one name policy, meaning I don't want a thing to have multiple names. It can be confusing and makes refactoring harder!&lt;/p&gt;

&lt;p&gt;Using named exports makes it easier to enforce same name everywhere. With &lt;code&gt;default&lt;/code&gt; the user of the component can use whichever name they want. But, if you or your team don't consider that a problem, then that is okay too.&lt;/p&gt;

&lt;p&gt;There is still a third way to give the component a recognizable name:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;MyComponent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;memo&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;);&lt;/span&gt;
&lt;span class="nx"&gt;MyComponent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;displayName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;MyComponent&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The weakness here is that the memoize wrapper component becomes &lt;code&gt;MyComponent&lt;/code&gt; while the inner component will appear as unnamed component.&lt;/p&gt;

&lt;p&gt;Overall this is just a minor gotcha when it comes to &lt;code&gt;React.memo&lt;/code&gt;: it doesn't really break anything to have this "incorrect", you just have a better debugging experience while developing as every component has a proper name. Also if you're using snapshots in your tests you will see the components with their correct name.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-random-points"&gt;
  &lt;/a&gt;
  Final random points
&lt;/h2&gt;

&lt;p&gt;I've found hook components a nice place to get data from Redux store and process it to nicer format for a consuming class or (hook-free) function component. Why? Well, connecting a class component to Redux is... awful.&lt;/p&gt;

&lt;p&gt;If you need to diff props in &lt;code&gt;componentDidMount&lt;/code&gt; and &lt;code&gt;componentDidUpdate&lt;/code&gt; you may wish to consider using hooks instead, unless the benefits otherwise are clearly in class component's favour. Typically the advantages include a mix of &lt;code&gt;PureComponent&lt;/code&gt;,  consistent function references, and for some use-cases the state management model of a class component works better than that of hooks. And there are also cases where lifecycles work (or feel) better for what you are doing.&lt;/p&gt;

&lt;p&gt;Basically what I'm saying is that it is always advantageous to go ahead and learn all the patterns over putting all your eggs in one basket, and only learn hooks, or only learn classes. The same advice works in general, for example it is good to know when it is perfectly safe and valid to do mutations, or use classic for loops, and when functional style might serve you better. Keeping the door open for all the tools will make for better, easy to read and/or performant code.&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>typescript</category>
    </item>
  </channel>
</rss>
